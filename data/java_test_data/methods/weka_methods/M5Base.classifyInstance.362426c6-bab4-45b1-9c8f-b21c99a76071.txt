@Override
public double classifyInstance(Instance inst) throws Exception {
    Rule temp;
    double prediction = 0;
    boolean success = false;
    m_replaceMissing.input(inst);
    inst = m_replaceMissing.output();
    m_nominalToBinary.input(inst);
    inst = m_nominalToBinary.output();
    m_removeUseless.input(inst);
    inst = m_removeUseless.output();
    if (m_ruleSet == null) {
        throw new Exception("Classifier has not been built yet!");
    }
    if (!m_generateRules) {
        temp = m_ruleSet.get(0);
        return temp.classifyInstance(inst);
    }
    boolean cont;
    int i;
    for (i = 0; i < m_ruleSet.size(); i++) {
        cont = false;
        temp = m_ruleSet.get(i);
        try {
            prediction = temp.classifyInstance(inst);
            success = true;
        } catch (Exception e) {
            cont = true;
        }
        if (!cont) {
            break;
        }
    }
    if (!success) {
        System.out.println("Error in predicting (DecList)");
    }
    return prediction;
}
