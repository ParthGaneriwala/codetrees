protected Map<String, List<StepManagerImpl[]>> findClosestConnections(Point point, int delta) {
    Map<String, List<StepManagerImpl[]>> closestConnections = new HashMap<String, List<StepManagerImpl[]>>();
    for (StepManagerImpl sourceManager : m_flow.getSteps()) {
        for (Map.Entry<String, List<StepManager>> outCons : sourceManager.getOutgoingConnections().entrySet()) {
            List<StepManager> targetsOfConnType = outCons.getValue();
            for (StepManager target : targetsOfConnType) {
                StepManagerImpl targetManager = (StepManagerImpl) target;
                String connName = outCons.getKey();
                StepVisual sourceVisual = sourceManager.getStepVisual();
                StepVisual targetVisual = targetManager.getStepVisual();
                Point bestSourcePt = sourceVisual.getClosestConnectorPoint(new Point(targetVisual.getX() + targetVisual.getWidth() / 2, targetVisual.getY() + targetVisual.getHeight() / 2));
                Point bestTargetPt = targetVisual.getClosestConnectorPoint(new Point(sourceVisual.getX() + sourceVisual.getWidth() / 2, sourceVisual.getY() + sourceVisual.getHeight() / 2));
                int minx = (int) Math.min(bestSourcePt.getX(), bestTargetPt.getX());
                int maxx = (int) Math.max(bestSourcePt.getX(), bestTargetPt.getX());
                int miny = (int) Math.min(bestSourcePt.getY(), bestTargetPt.getY());
                int maxy = (int) Math.max(bestSourcePt.getY(), bestTargetPt.getY());
                // check to see if supplied pt is inside bounding box
                if (point.getX() >= minx - delta && point.getX() <= maxx + delta && point.getY() >= miny - delta && point.getY() <= maxy + delta) {
                    // now see if the point is within delta of the line
                    // formulate ax + by + c = 0
                    double a = bestSourcePt.getY() - bestTargetPt.getY();
                    double b = bestTargetPt.getX() - bestSourcePt.getX();
                    double c = (bestSourcePt.getX() * bestTargetPt.getY()) - (bestTargetPt.getX() * bestSourcePt.getY());
                    double distance = Math.abs((a * point.getX()) + (b * point.getY()) + c);
                    distance /= Math.abs(Math.sqrt((a * a) + (b * b)));
                    if (distance <= delta) {
                        List<StepManagerImpl[]> conList = closestConnections.get(connName);
                        if (conList == null) {
                            conList = new ArrayList<StepManagerImpl[]>();
                            closestConnections.put(connName, conList);
                        }
                        StepManagerImpl[] conn = { sourceManager, targetManager };
                        conList.add(conn);
                    }
                }
            }
        }
    }
    return closestConnections;
}
