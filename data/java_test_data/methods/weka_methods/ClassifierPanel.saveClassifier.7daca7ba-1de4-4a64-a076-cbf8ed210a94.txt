public void saveClassifier(String name, Classifier classifier, Instances trainHeader) {
    File sFile = null;
    boolean saveOK = true;
    m_FileChooser.removeChoosableFileFilter(m_PMMLModelFilter);
    m_FileChooser.setFileFilter(m_ModelFilter);
    int returnVal = m_FileChooser.showSaveDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        sFile = m_FileChooser.getSelectedFile();
        if (!sFile.getName().toLowerCase().endsWith(MODEL_FILE_EXTENSION)) {
            sFile = new File(sFile.getParent(), sFile.getName() + MODEL_FILE_EXTENSION);
        }
        m_Log.statusMessage("Saving model to file...");
        try {
            OutputStream os = new FileOutputStream(sFile);
            if (sFile.getName().endsWith(".gz")) {
                os = new GZIPOutputStream(os);
            }
            ObjectOutputStream objectOutputStream = new ObjectOutputStream(os);
            objectOutputStream.writeObject(classifier);
            trainHeader = trainHeader.stringFreeStructure();
            if (trainHeader != null) {
                objectOutputStream.writeObject(trainHeader);
            }
            objectOutputStream.flush();
            objectOutputStream.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Save Failed", JOptionPane.ERROR_MESSAGE);
            saveOK = false;
        }
        if (saveOK) {
            m_Log.logMessage("Saved model (" + name + ") to file '" + sFile.getName() + "'");
        }
        m_Log.statusMessage("OK");
    }
}
