protected Object stringToVal(String propVal, Object target, String propName) throws WekaException {
    Object resultVal = null;
    try {
        PropertyDescriptor prop = getPropDescriptor(target, propName);
        if (prop == null) {
            throw new WekaException("Unable to find method '" + propName + "'");
        }
        Method getMethod = prop.getReadMethod();
        Object current = getMethod.invoke(target);
        if (current.getClass().isArray()) {
            resultVal = Utils.forName(null, propVal, null);
        } else if (current instanceof SelectedTag) {
            Tag[] legalTags = ((SelectedTag) current).getTags();
            int tagIndex = Integer.MAX_VALUE;
            // first try and parse as an integer
            try {
                int specifiedID = Integer.parseInt(propVal);
                for (int z = 0; z < legalTags.length; z++) {
                    if (legalTags[z].getID() == specifiedID) {
                        tagIndex = z;
                        break;
                    }
                }
            } catch (NumberFormatException e) {
                // try to match tag strings
                for (int z = 0; z < legalTags.length; z++) {
                    if (legalTags[z].getReadable().equals(propVal.trim())) {
                        tagIndex = z;
                        break;
                    }
                }
            }
            if (tagIndex != Integer.MAX_VALUE) {
                resultVal = new SelectedTag(tagIndex, legalTags);
            } else {
                throw new WekaException("Unable to set SelectedTag value for property " + "'" + propName + "'");
            }
        } else if (current instanceof Enum) {
            EnumHelper helper = new EnumHelper((Enum) current);
            resultVal = EnumHelper.valueFromString(helper.getEnumClass(), propVal);
        } else if (current instanceof OptionHandler) {
            String[] schemeAndOpts = Utils.splitOptions(propVal);
            if (schemeAndOpts.length > 0) {
                String schemeName = schemeAndOpts[0];
                schemeAndOpts[0] = "";
                resultVal = Utils.forName(null, schemeName, schemeAndOpts);
            }
        } else if (current instanceof Number) {
            try {
                if (current instanceof Integer) {
                    resultVal = new Integer(propVal);
                } else if (current instanceof Long) {
                    resultVal = new Long(propVal);
                } else if (current instanceof Double) {
                    resultVal = new Double(propVal);
                } else if (current instanceof Float) {
                    resultVal = new Float(propVal);
                }
            } catch (NumberFormatException ex) {
                throw new WekaException("Unable to parse '" + propVal + "' as a number");
            }
        } else if (current instanceof Boolean) {
            resultVal = propVal.equalsIgnoreCase("true") || propVal.equalsIgnoreCase("yes") || propVal.equalsIgnoreCase("Y");
        } else if (current instanceof String) {
            resultVal = propVal;
        } else if (current instanceof File) {
            resultVal = new File(propVal);
        }
        if (resultVal == null) {
            throw new WekaException("Was unable to determine the value to set for " + "property '" + propName + "'");
        }
    } catch (Exception ex) {
        throw new WekaException(ex);
    }
    return resultVal;
}
