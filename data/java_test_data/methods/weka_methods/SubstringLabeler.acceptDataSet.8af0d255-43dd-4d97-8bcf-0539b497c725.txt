@Override
public void acceptDataSet(DataSetEvent e) {
    m_busy = true;
    if (m_log != null) {
        m_log.statusMessage(statusMessagePrefix() + "Processing batch...");
    }
    try {
        makeOutputStructure(new Instances(e.getDataSet(), 0));
    } catch (Exception ex) {
        String msg = statusMessagePrefix() + "ERROR: unable to create output instances structure.";
        if (m_log != null) {
            m_log.statusMessage(msg);
            m_log.logMessage("[SubstringLabeler] " + ex.getMessage());
        }
        stop();
        ex.printStackTrace();
        m_busy = false;
        return;
    }
    Instances toProcess = e.getDataSet();
    for (int i = 0; i < toProcess.numInstances(); i++) {
        Instance current = toProcess.instance(i);
        Instance result = null;
        try {
            result = m_matches.makeOutputInstance(current, true);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        if (result != null) {
            // m_outputStructure.add(result);
            m_matches.getOutputStructure().add(result);
        }
    }
    if (m_log != null) {
        m_log.statusMessage(statusMessagePrefix() + "Finished.");
    }
    // notify listeners
    DataSetEvent d = new DataSetEvent(this, m_matches.getOutputStructure());
    notifyDataListeners(d);
    m_busy = false;
}
