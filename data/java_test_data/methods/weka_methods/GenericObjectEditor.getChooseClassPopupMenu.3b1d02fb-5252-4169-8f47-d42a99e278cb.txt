public JPopupMenu getChooseClassPopupMenu() {
    updateObjectNames();
    // create the tree, and find the path to the current class
    m_treeNodeOfCurrentObject = null;
    final JTree tree = createTree(m_ObjectNames);
    if (m_treeNodeOfCurrentObject != null) {
        tree.setSelectionPath(new TreePath(m_treeNodeOfCurrentObject.getPath()));
    } else {
        TreePath path = tree.getPathForRow(0);
        if (path != null) {
            tree.setSelectionPath(path);
        }
    }
    tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
    // create the popup
    final JPopupMenu popup = new JTreePopupMenu(tree);
    // respond when the user chooses a class
    tree.addTreeSelectionListener(new TreeSelectionListener() {

        @Override
        public void valueChanged(TreeSelectionEvent e) {
            GOETreeNode node = (GOETreeNode) tree.getLastSelectedPathComponent();
            if (node == null) {
                return;
            }
            if (node.isLeaf()) {
                classSelected(getClassnameFromPath(tree.getSelectionPath()));
            }
        }
    });
    MouseListener ml = new MouseAdapter() {

        public void mousePressed(MouseEvent e) {
            if (tree.getRowForLocation(e.getX(), e.getY()) != -1) {
                if (e.getClickCount() == 1) {
                    popup.setVisible(false);
                }
            }
        }
    };
    tree.addMouseListener(ml);
    tree.getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "enter_action");
    tree.getActionMap().put("enter_action", new AbstractAction() {

        public void actionPerformed(ActionEvent e) {
            if (((GOETreeNode) tree.getLastSelectedPathComponent()).isLeaf()) {
                popup.setVisible(false);
            }
        }
    });
    return popup;
}
