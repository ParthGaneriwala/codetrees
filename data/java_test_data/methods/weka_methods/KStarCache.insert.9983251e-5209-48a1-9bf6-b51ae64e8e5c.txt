public void insert(double key, double value, double pmiss) {
    // Makes sure the key is not already in the hashtable.
    TableEntry e, ne;
    TableEntry[] table = m_Table;
    int hash = hashCode(key);
    int index = (hash & 0x7FFFFFFF) % table.length;
    // start looking along the chain
    for (e = table[index]; e != null; e = e.next) {
        if ((e.hash == hash) && (Math.abs(e.key - key) < EPSILON)) {
            return;
        }
    }
    // At this point, key is not in table.
    // Creates a new entry.
    ne = new TableEntry(hash, key, value, pmiss, table[index]);
    // Put entry at the head of the chain.
    table[index] = ne;
    m_Count++;
    // Rehash the table if the threshold is exceeded
    if (m_Count >= m_Threshold) {
        rehash();
    }
}
