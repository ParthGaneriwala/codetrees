public void testNumeric() {
    ((RemoveWithValues) m_Filter).setAttributeIndex("3");
    Instances result = useFilter();
    assertEquals(m_Instances.numAttributes(), result.numAttributes());
    assertEquals("Default split point matches values less than 0", 0, result.numInstances());
    ((RemoveWithValues) m_Filter).setSplitPoint(3);
    result = useFilter();
    assertEquals(m_Instances.numAttributes(), result.numAttributes());
    assertTrue(m_Instances.numInstances() > result.numInstances());
    // Test inversion is working.
    ((RemoveWithValues) m_Filter).setInvertSelection(false);
    Instances result2 = useFilter();
    assertEquals(m_Instances.numAttributes(), result2.numAttributes());
    assertTrue(m_Instances.numInstances() > result2.numInstances());
    assertEquals(m_Instances.numInstances(), result.numInstances() + result2.numInstances());
}
