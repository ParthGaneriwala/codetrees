protected void updateStatsForPredictor(double predictedValue, Instance instance) throws Exception {
    if (!instance.classIsMissing()) {
        // Update stats
        m_WithClass += instance.weight();
        if (Utils.isMissingValue(predictedValue)) {
            m_Unclassified += instance.weight();
            return;
        }
        m_SumClass += instance.weight() * instance.classValue();
        m_SumSqrClass += instance.weight() * instance.classValue() * instance.classValue();
        m_SumClassPredicted += instance.weight() * instance.classValue() * predictedValue;
        m_SumPredicted += instance.weight() * predictedValue;
        m_SumSqrPredicted += instance.weight() * predictedValue * predictedValue;
        updateNumericScores(makeDistribution(predictedValue), makeDistribution(instance.classValue()), instance.weight());
    } else {
        m_MissingClass += instance.weight();
    }
    if (m_pluginMetrics != null) {
        for (AbstractEvaluationMetric m : m_pluginMetrics) {
            if (m instanceof StandardEvaluationMetric) {
                ((StandardEvaluationMetric) m).updateStatsForPredictor(predictedValue, instance);
            } else if (m instanceof InformationTheoreticEvaluationMetric) {
                ((InformationTheoreticEvaluationMetric) m).updateStatsForPredictor(predictedValue, instance);
            }
        }
    }
}
