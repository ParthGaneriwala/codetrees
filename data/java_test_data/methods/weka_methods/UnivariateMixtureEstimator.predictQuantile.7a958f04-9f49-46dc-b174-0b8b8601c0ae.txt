public double predictQuantile(double percentage) {
    // Compute minimum and maximum value, and delta
    double valRight = Statistics.normalInverse(percentage);
    double valLeft = Statistics.normalInverse(0.001);
    double min = Double.MAX_VALUE;
    double max = -Double.MAX_VALUE;
    for (int i = 0; i < m_Means.length; i++) {
        double l = m_Means[i] - valLeft * m_StdDevs[i];
        if (l < min) {
            min = l;
        }
        double r = m_Means[i] + valRight * m_StdDevs[i];
        if (r > max) {
            max = r;
        }
    }
    double delta = (max - min) / m_NumIntervals;
    double sum = 0;
    double leftVal = Math.exp(logDensity(min));
    for (int i = 0; i < m_NumIntervals; i++) {
        if (sum >= percentage) {
            return min + i * delta;
        }
        double rightVal = Math.exp(logDensity(min + (i + 1) * delta));
        sum += 0.5 * (leftVal + rightVal) * delta;
        leftVal = rightVal;
    }
    return max;
}
