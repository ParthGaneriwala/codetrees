private void buildLinearModel(int[] indices) throws Exception {
    // copy the training instances and remove all but the tested
    // attributes
    Instances reducedInst = new Instances(m_instances);
    Remove attributeFilter = new Remove();
    attributeFilter.setInvertSelection(true);
    attributeFilter.setAttributeIndicesArray(indices);
    attributeFilter.setInputFormat(reducedInst);
    reducedInst = Filter.useFilter(reducedInst, attributeFilter);
    // build a linear regression for the training data using the
    // tested attributes
    LinearRegression temp = new LinearRegression();
    temp.setDoNotCheckCapabilities(true);
    temp.setMinimal(true);
    temp.buildClassifier(reducedInst);
    double[] lmCoeffs = temp.coefficients();
    double[] coeffs = new double[m_instances.numAttributes()];
    for (int i = 0; i < lmCoeffs.length - 1; i++) {
        if (indices[i] != m_classIndex) {
            coeffs[indices[i]] = lmCoeffs[i];
        }
    }
    m_nodeModel = new PreConstructedLinearModel(coeffs, lmCoeffs[lmCoeffs.length - 1]);
    m_nodeModel.buildClassifier(m_instances);
}
