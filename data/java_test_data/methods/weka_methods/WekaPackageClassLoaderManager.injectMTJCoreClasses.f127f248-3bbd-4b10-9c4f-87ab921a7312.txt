protected void injectMTJCoreClasses() {
    if (!WekaPackageClassLoaderManager.classExists("com.github.fommil.netlib.ARPACK")) {
        // inject core MTJ classes into the root classloader
        String debugS = System.getProperty("weka.core.classloader.debug", "false");
        boolean debug = debugS.equalsIgnoreCase("true");
        InputStream mtjCoreInputStream = getClass().getClassLoader().getResourceAsStream("core.jar");
        InputStream arpackAllInputStream = getClass().getClassLoader().getResourceAsStream("arpack_combined.jar");
        InputStream mtjInputStream = getClass().getClassLoader().getResourceAsStream("mtj.jar");
        if (mtjCoreInputStream != null && arpackAllInputStream != null && mtjInputStream != null) {
            if (debug) {
                System.out.println("[WekaPackageClassLoaderManager] injecting " + "mtj-related core classes into root classloader");
            }
            try {
                if (debug) {
                    System.out.println("[WekaPackageClassLoaderManager] Injecting arpack");
                }
                injectAllClassesInFromStream(arpackAllInputStream);
                if (debug) {
                    System.out.println("[WekaPackageClassLoaderManager] Injecting mtj " + "core");
                }
                injectAllClassesInFromStream(mtjCoreInputStream);
                if (debug) {
                    System.out.println("[WekaPackageClassLoaderManager] Injecting mtj");
                }
                injectAllClassesInFromStream(mtjInputStream);
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            System.out.println("WARNING: core mtj jar files are not available as " + "resources to this classloader (" + WekaPackageClassLoaderManager.getWekaPackageClassLoaderManager().getClass().getClassLoader() + ")");
        }
    }
}
