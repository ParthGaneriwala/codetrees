public static boolean checkForMissingFiles(Package toLoad, File packageRoot, PrintStream... progress) {
    boolean result = true;
    Object doNotLoadIfFileMissing = toLoad.getPackageMetaDataElement(DO_NOT_LOAD_IF_FILE_NOT_PRESENT_KEY);
    String packageRootPath = packageRoot.getPath() + File.separator;
    if (doNotLoadIfFileMissing != null && doNotLoadIfFileMissing.toString().length() > 0) {
        StringTokenizer tok = new StringTokenizer(doNotLoadIfFileMissing.toString(), ",");
        while (tok.hasMoreTokens()) {
            String nextT = tok.nextToken().trim();
            File toCheck = new File(packageRootPath + nextT);
            if (!toCheck.exists()) {
                for (PrintStream p : progress) {
                    p.println("[WekaPackageManager] " + toLoad.getName() + " can't be loaded because " + toCheck.getPath() + " appears to be missing.");
                }
                result = false;
                break;
            }
        }
    }
    if (!result) {
        // grab the message to print to the log (if any)
        Object doNotLoadMessage = toLoad.getPackageMetaDataElement(DO_NOT_LOAD_IF_FILE_NOT_PRESENT_MESSAGE_KEY);
        if (doNotLoadMessage != null && doNotLoadMessage.toString().length() > 0) {
            String dnlM = doNotLoadMessage.toString();
            try {
                dnlM = Environment.getSystemWide().substitute(dnlM);
            } catch (Exception ex) {
            // quietly ignore
            }
            for (PrintStream p : progress) {
                p.println("[WekaPackageManager] " + dnlM);
            }
        }
    }
    return result;
}
