public static void makeData(DataGenerator generator, String[] options) throws Exception {
    // help?
    boolean printhelp = (Utils.getFlag('h', options));
    // read options
    if (!printhelp) {
        try {
            options = generator.removeBlacklist(options);
            generator.setOptions(options);
            // check for left-over options, but don't raise exception
            Vector<String> unknown = new Vector<String>();
            for (int i = 0; i < options.length; i++) {
                if (options[i].length() != 0) {
                    unknown.add(options[i]);
                }
            }
            if (unknown.size() > 0) {
                System.out.print("Unknown options:");
                for (int i = 0; i < unknown.size(); i++) {
                    System.out.print(" " + unknown.get(i));
                }
                System.out.println();
            }
        } catch (Exception e) {
            e.printStackTrace();
            printhelp = true;
        }
    }
    if (printhelp) {
        System.out.println(makeOptionString(generator));
        return;
    }
    // define dataset format
    // computes actual number of examples to be produced
    generator.setDatasetFormat(generator.defineDataFormat());
    // get print writer and print header
    PrintWriter output = generator.getOutput();
    output.println(generator.getPrologue());
    // ask data generator which mode
    boolean singleMode = generator.getSingleModeFlag();
    // start data producer
    if (singleMode) {
        // output of dataset header
        output.println(generator.toStringFormat());
        for (int i = 0; i < generator.getNumExamplesAct(); i++) {
            // over all examples to be produced
            output.println(generator.generateExample());
        }
    } else {
        // generator produces all instances at once
        Instances data = generator.generateExamples();
        // output of dataset
        for (int i = 0; i < data.numInstances(); i++) {
            if (i % 1000 == 0) {
                output.flush();
            }
            output.println(data.instance(i));
        }
        output.flush();
    }
    output.println(generator.getEpilogue());
    output.flush();
    if (generator.getOutput() != generator.defaultOutput()) {
        output.close();
    }
}
