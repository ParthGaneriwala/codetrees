private void findRulesQuickly() throws Exception {
    ArrayList<Object>[] rules;
    // Build rules
    for (int j = 1; j < m_Ls.size(); j++) {
        ArrayList<Object> currentItemSets = m_Ls.get(j);
        Enumeration<Object> enumItemSets = new WekaEnumeration<Object>(currentItemSets);
        while (enumItemSets.hasMoreElements()) {
            AprioriItemSet currentItemSet = (AprioriItemSet) enumItemSets.nextElement();
            // AprioriItemSet currentItemSet = new
            // AprioriItemSet((ItemSet)enumItemSets.nextElement());
            rules = currentItemSet.generateRules(m_minMetric, m_hashtables, j + 1);
            for (int k = 0; k < rules[0].size(); k++) {
                m_allTheRules[0].add(rules[0].get(k));
                m_allTheRules[1].add(rules[1].get(k));
                m_allTheRules[2].add(rules[2].get(k));
                if (rules.length > 3) {
                    m_allTheRules[3].add(rules[3].get(k));
                    m_allTheRules[4].add(rules[4].get(k));
                    m_allTheRules[5].add(rules[5].get(k));
                }
            }
        }
    }
}
