private void calculateSphereSize(double scale, KStarWrapper params) {
    int i;
    double sphereSize, minprob = 1.0;
    // P*(b|a)
    double pstar;
    // sum(P*)
    double pstarSum = 0.0;
    // sum(P*^2)
    double pstarSquareSum = 0.0;
    double inc;
    for (i = 0; i < m_NumInstances; i++) {
        if (m_Distances[i] < 0) {
            // instance with missing value
            continue;
        } else {
            pstar = PStar(m_Distances[i], scale);
            if (minprob > pstar) {
                minprob = pstar;
            }
            inc = pstar / m_ActualCount;
            pstarSum += inc;
            pstarSquareSum += inc * inc;
        }
    }
    sphereSize = (pstarSquareSum == 0 ? 0 : pstarSum * pstarSum / pstarSquareSum);
    // return the values
    params.sphere = sphereSize;
    params.avgProb = pstarSum;
    params.minProb = minprob;
}
