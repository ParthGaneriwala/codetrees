private void setUpValueSelection(Instances format) {
    if (format.classIndex() < 0 || format.classAttribute().isNumeric()) {
        // cant do anything in this case
        m_messageLabel.setText((format.classIndex() < 0) ? "EROR: no class attribute set" : "ERROR: class is numeric");
        return;
    }
    if (m_displayValNames == false) {
        remove(m_messageLabel);
    }
    m_textBoxEntryMode = false;
    if (format.classAttribute().numValues() == 0) {
        // loader may not be able to give us the set of legal
        // values for a nominal attribute until it has read
        // the data (e.g. database loader or csv loader).
        // In this case we'll use a text box and the user
        // can enter the class value.
        setupTextBoxSelection();
        validate();
        repaint();
        return;
    }
    String existingClassVal = m_classValuePicker.getClassValue();
    String existingCopy = existingClassVal;
    if (existingClassVal == null) {
        existingClassVal = "";
    }
    int classValIndex = format.classAttribute().indexOfValue(existingClassVal);
    // do we have a special (last, first or number)
    // if (existingClassVal.startsWith("/")) {
    // existingClassVal = existingClassVal.substring(1);
    // if (existingClassVal.equalsIgnoreCase("first")) {
    // classValIndex = 0;
    // } else if (existingClassVal.equalsIgnoreCase("last")) {
    // classValIndex = format.classAttribute().numValues() - 1;
    // } else {
    // // try and parse as a number
    // classValIndex = Integer.parseInt(existingClassVal);
    // classValIndex--;
    // }
    // }
    // if (classValIndex < 0) {
    // classValIndex = 0;
    // }
    String[] attribValNames = new String[format.classAttribute().numValues()];
    for (int i = 0; i < attribValNames.length; i++) {
        attribValNames[i] = format.classAttribute().value(i);
    }
    m_ClassValueCombo.setModel(new DefaultComboBoxModel(attribValNames));
    if (attribValNames.length > 0) {
        // if (existingClassVal < attribValNames.length) {
        if (classValIndex >= 0) {
            m_ClassValueCombo.setSelectedIndex(classValIndex);
        } else {
            String toSet = existingCopy != null ? existingCopy : attribValNames[0];
            m_ClassValueCombo.setSelectedItem(toSet);
        }
    // }
    }
    if (m_displayValNames == false) {
        add(m_holderP, BorderLayout.CENTER);
        m_displayValNames = true;
    }
    validate();
    repaint();
}
