@Override
public Instances getStructure(String eventName) {
    Instances structure = null;
    if (eventName.equals("text")) {
        ArrayList<Attribute> attInfo = new ArrayList<Attribute>();
        attInfo.add(new Attribute("Title", (ArrayList<String>) null));
        attInfo.add(new Attribute("Text", (ArrayList<String>) null));
        structure = new Instances("TextEvent", attInfo, 0);
    } else if (eventName.equals("batchAssociationRules")) {
        if (m_Associator != null && m_Associator instanceof AssociationRulesProducer) {
            // we make the assumption here that consumers of
            // batchAssociationRules events will utilize a structure
            // consisting of the RHS of the rule (String), LHS of the
            // rule (String) and one numeric attribute for each metric
            // associated with the rules.
            String[] metricNames = ((AssociationRulesProducer) m_Associator).getRuleMetricNames();
            ArrayList<Attribute> attInfo = new ArrayList<Attribute>();
            attInfo.add(new Attribute("LHS", (ArrayList<String>) null));
            attInfo.add(new Attribute("RHS", (ArrayList<String>) null));
            attInfo.add(new Attribute("Support"));
            for (String metricName : metricNames) {
                attInfo.add(new Attribute(metricName));
            }
            structure = new Instances("batchAssociationRulesEvent", attInfo, 0);
        }
    }
    return structure;
}
