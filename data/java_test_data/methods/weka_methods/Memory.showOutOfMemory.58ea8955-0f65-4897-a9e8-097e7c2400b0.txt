public void showOutOfMemory() {
    if (!isEnabled() || (m_MemoryUsage == null)) {
        return;
    }
    System.gc();
    String msg = "Not enough memory (less than 50MB left on heap). Please load a smaller " + "dataset or use a larger heap size.\n" + "- initial heap size:   " + Utils.doubleToString(toMegaByte(m_MemoryUsage.getInit()), 1) + "MB\n" + "- current memory (heap) used:  " + Utils.doubleToString(toMegaByte(m_MemoryUsage.getUsed()), 1) + "MB\n" + "- max. memory (heap) available: " + Utils.doubleToString(toMegaByte(m_MemoryUsage.getMax()), 1) + "MB\n" + "\n" + "Note:\n" + "The Java heap size can be specified with the -Xmx option.\n" + "E.g., to use 128MB as heap size, the command line looks like this:\n" + "   java -Xmx128m -classpath ...\n" + "This does NOT work in the SimpleCLI, the above java command refers\n" + "to the one with which Weka is started. See the Weka FAQ on the web\n" + "for further info.";
    System.err.println(msg);
    if (getUseGUI()) {
        JOptionPane.showMessageDialog(null, msg, "OutOfMemory", JOptionPane.WARNING_MESSAGE);
    }
}
