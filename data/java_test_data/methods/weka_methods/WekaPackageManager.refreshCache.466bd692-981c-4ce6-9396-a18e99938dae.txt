public static Exception refreshCache(PrintStream... progress) {
    Exception problem = null;
    if (CACHE_URL == null) {
        return null;
    }
    PACKAGE_MANAGER.setPackageRepositoryURL(REP_URL);
    String cacheDir = WEKA_HOME.toString() + File.separator + "repCache";
    try {
        for (PrintStream p : progress) {
            p.println("Refresh in progress. Please wait...");
        }
        byte[] zip = PACKAGE_MANAGER.getRepositoryPackageMetaDataOnlyAsZip(progress);
        // only blow away the repCache if we successfully get a new zip!
        cleanRepCacheDir();
        ZipInputStream zis = new ZipInputStream(new ByteArrayInputStream(zip));
        ZipEntry ze;
        final byte[] buff = new byte[1024];
        while ((ze = zis.getNextEntry()) != null) {
            // System.out.println("Cache: inflating " + ze.getName());
            if (ze.isDirectory()) {
                new File(cacheDir, ze.getName()).mkdir();
                continue;
            }
            BufferedOutputStream bo = new BufferedOutputStream(new FileOutputStream(new File(cacheDir, ze.getName())));
            while (true) {
                int amountRead = zis.read(buff);
                if (amountRead == -1) {
                    break;
                }
                // write the data here
                bo.write(buff, 0, amountRead);
            }
            bo.close();
        }
    } catch (Exception e) {
        e.printStackTrace();
        // OK, we have a problem with the repository cache - use
        // the repository itself instead and delete repCache
        CACHE_URL = null;
        try {
            DefaultPackageManager.deleteDir(new File(cacheDir), System.out);
        } catch (Exception e1) {
            e1.printStackTrace();
        }
        return e;
    }
    return problem;
}
