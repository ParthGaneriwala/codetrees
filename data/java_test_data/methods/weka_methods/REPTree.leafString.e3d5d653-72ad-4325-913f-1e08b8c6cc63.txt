protected String leafString(Tree parent) throws Exception {
    if (m_Info.classAttribute().isNumeric()) {
        double classMean;
        if (m_ClassProbs == null) {
            classMean = parent.m_ClassProbs[0];
        } else {
            classMean = m_ClassProbs[0];
        }
        StringBuffer buffer = new StringBuffer();
        buffer.append(" : " + Utils.doubleToString(classMean, getNumDecimalPlaces()));
        double avgError = 0;
        if (m_Distribution[1] > 0) {
            avgError = m_Distribution[0] / m_Distribution[1];
        }
        buffer.append(" (" + Utils.doubleToString(m_Distribution[1], getNumDecimalPlaces()) + "/" + Utils.doubleToString(avgError, getNumDecimalPlaces()) + ")");
        avgError = 0;
        if (m_HoldOutDist[0] > 0) {
            avgError = m_HoldOutError / m_HoldOutDist[0];
        }
        buffer.append(" [" + Utils.doubleToString(m_HoldOutDist[0], getNumDecimalPlaces()) + "/" + Utils.doubleToString(avgError, getNumDecimalPlaces()) + "]");
        return buffer.toString();
    } else {
        int maxIndex;
        if (m_ClassProbs == null) {
            maxIndex = Utils.maxIndex(parent.m_ClassProbs);
        } else {
            maxIndex = Utils.maxIndex(m_ClassProbs);
        }
        return " : " + m_Info.classAttribute().value(maxIndex) + " (" + Utils.doubleToString(Utils.sum(m_Distribution), getNumDecimalPlaces()) + "/" + Utils.doubleToString((Utils.sum(m_Distribution) - m_Distribution[maxIndex]), getNumDecimalPlaces()) + ")" + " [" + Utils.doubleToString(Utils.sum(m_HoldOutDist), getNumDecimalPlaces()) + "/" + Utils.doubleToString((Utils.sum(m_HoldOutDist) - m_HoldOutDist[maxIndex]), getNumDecimalPlaces()) + "]";
    }
}
