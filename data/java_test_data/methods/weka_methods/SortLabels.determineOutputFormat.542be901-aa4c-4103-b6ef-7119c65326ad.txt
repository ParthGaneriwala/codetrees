@Override
protected Instances determineOutputFormat(Instances inputFormat) throws Exception {
    Instances result;
    Attribute att;
    Attribute attSorted;
    ArrayList<Attribute> atts;
    ArrayList<String> values;
    Vector<String> sorted;
    int i;
    int n;
    m_AttributeIndices.setUpper(inputFormat.numAttributes() - 1);
    // determine sorted indices
    atts = new ArrayList<Attribute>();
    m_NewOrder = new int[inputFormat.numAttributes()][];
    for (i = 0; i < inputFormat.numAttributes(); i++) {
        att = inputFormat.attribute(i);
        if (!att.isNominal() || !m_AttributeIndices.isInRange(i)) {
            m_NewOrder[i] = new int[0];
            atts.add((Attribute) inputFormat.attribute(i).copy());
            continue;
        }
        // sort labels
        sorted = new Vector<String>();
        for (n = 0; n < att.numValues(); n++) {
            sorted.add(att.value(n));
        }
        Collections.sort(sorted, m_Comparator);
        // determine new indices
        m_NewOrder[i] = new int[att.numValues()];
        values = new ArrayList<String>();
        for (n = 0; n < att.numValues(); n++) {
            m_NewOrder[i][n] = sorted.indexOf(att.value(n));
            values.add(sorted.get(n));
        }
        attSorted = new Attribute(att.name(), values);
        attSorted.setWeight(att.weight());
        atts.add(attSorted);
    }
    // generate new header
    result = new Instances(inputFormat.relationName(), atts, 0);
    result.setClassIndex(inputFormat.classIndex());
    return result;
}
