public static String evaluate(Kernel Kernel, String[] options) throws Exception {
    String trainFileString = "";
    BufferedReader reader;
    KernelEvaluation eval;
    String classIndexString;
    int classIndex = -1;
    Instances train;
    String[] userOptions;
    // help?
    if (Utils.getFlag('h', options)) {
        throw new Exception("\nHelp requested.\n" + makeOptionString(Kernel));
    }
    try {
        // general options
        trainFileString = Utils.getOption('t', options);
        if (trainFileString.length() == 0) {
            throw new Exception("No training file given!");
        }
        reader = new BufferedReader(new FileReader(trainFileString));
        classIndexString = Utils.getOption('c', options);
        if (classIndexString.length() != 0) {
            if (classIndexString.equals("first")) {
                classIndex = 1;
            } else if (classIndexString.equals("last")) {
                classIndex = -1;
            } else {
                classIndex = Integer.parseInt(classIndexString);
            }
        }
        // Kernel specific options
        userOptions = options.clone();
        if (Kernel instanceof OptionHandler) {
            ((OptionHandler) Kernel).setOptions(options);
        }
        // left-over options?
        Utils.checkForRemainingOptions(options);
    } catch (Exception e) {
        throw new Exception("\nWeka exception: " + e.getMessage() + "\n" + makeOptionString(Kernel));
    }
    // load file and build kernel
    eval = new KernelEvaluation();
    eval.setUserOptions(userOptions);
    train = new Instances(reader);
    if (classIndex == -1) {
        train.setClassIndex(train.numAttributes() - 1);
    } else {
        train.setClassIndex(classIndex);
    }
    return eval.evaluate(Kernel, train);
}
