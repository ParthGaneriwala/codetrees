private Instances makeOutputHeader() throws Exception {
    // process each header in turn...
    Map<String, Attribute> attLookup = new HashMap<String, Attribute>();
    List<Attribute> attList = new ArrayList<Attribute>();
    Map<String, Set<String>> nominalLookups = new HashMap<String, Set<String>>();
    for (Instances h : m_completed.values()) {
        for (int i = 0; i < h.numAttributes(); i++) {
            Attribute a = h.attribute(i);
            if (!attLookup.containsKey(a.name())) {
                attLookup.put(a.name(), a);
                attList.add(a);
                if (a.isNominal()) {
                    TreeSet<String> nVals = new TreeSet<String>();
                    for (int j = 0; j < a.numValues(); j++) {
                        nVals.add(a.value(j));
                    }
                    nominalLookups.put(a.name(), nVals);
                }
            } else {
                Attribute storedVersion = attLookup.get(a.name());
                if (storedVersion.type() != a.type()) {
                    // mismatched types between headers - can't continue
                    throw new Exception("Conflicting types for attribute " + "name '" + a.name() + "' between incoming " + "instance sets");
                }
                if (storedVersion.isNominal()) {
                    Set<String> storedVals = nominalLookups.get(a.name());
                    for (int j = 0; j < a.numValues(); j++) {
                        storedVals.add(a.value(j));
                    }
                }
            }
        }
    }
    ArrayList<Attribute> finalAttList = new ArrayList<Attribute>();
    for (Attribute a : attList) {
        Attribute newAtt = null;
        if (a.isDate()) {
            newAtt = new Attribute(a.name(), a.getDateFormat());
        } else if (a.isNumeric()) {
            newAtt = new Attribute(a.name());
        } else if (a.isRelationValued()) {
            newAtt = new Attribute(a.name(), a.relation());
        } else if (a.isNominal()) {
            Set<String> vals = nominalLookups.get(a.name());
            List<String> newVals = new ArrayList<String>();
            for (String v : vals) {
                newVals.add(v);
            }
            newAtt = new Attribute(a.name(), newVals);
        } else if (a.isString()) {
            newAtt = new Attribute(a.name(), (List<String>) null);
        // transfer all string values
        /*
         * for (int i = 0; i < a.numValues(); i++) {
         * newAtt.addStringValue(a.value(i)); }
         */
        }
        finalAttList.add(newAtt);
    }
    Instances outputHeader = new Instances("Appended_" + m_listenees.size() + "_sets", finalAttList, 0);
    return outputHeader;
}
