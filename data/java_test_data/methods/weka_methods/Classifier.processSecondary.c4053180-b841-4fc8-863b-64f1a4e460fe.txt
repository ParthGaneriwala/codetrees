@Override
public void processSecondary(Integer setNum, Integer maxSetNum, Data data, PairedDataHelper<weka.classifiers.Classifier> helper) throws WekaException {
    // trained classifier for this set number
    weka.classifiers.Classifier classifier = helper.getIndexedPrimaryResult(setNum);
    // test data
    Instances testSplit = data.getPrimaryPayload();
    if (m_trainedClassifierHeader != null && !testSplit.equalHeaders(m_trainedClassifierHeader)) {
        if (!(m_trainedClassifier instanceof InputMappedClassifier)) {
            throw new WekaException("Structure of incoming data does not match " + "that of the trained classifier");
        }
    }
    // paired training data
    Instances trainingSplit = helper.getIndexedValueFromNamedStore("trainingSplits", setNum);
    getStepManager().logBasic("Dispatching model for set " + setNum + " out of " + maxSetNum + " to output");
    Data batchClassifier = new Data(StepManager.CON_BATCH_CLASSIFIER, classifier);
    batchClassifier.setPayloadElement(StepManager.CON_AUX_DATA_TRAININGSET, trainingSplit);
    batchClassifier.setPayloadElement(StepManager.CON_AUX_DATA_TESTSET, testSplit);
    batchClassifier.setPayloadElement(StepManager.CON_AUX_DATA_SET_NUM, setNum);
    batchClassifier.setPayloadElement(StepManager.CON_AUX_DATA_MAX_SET_NUM, maxSetNum);
    batchClassifier.setPayloadElement(StepManager.CON_AUX_DATA_LABEL, getName());
    getStepManager().outputData(batchClassifier);
}
