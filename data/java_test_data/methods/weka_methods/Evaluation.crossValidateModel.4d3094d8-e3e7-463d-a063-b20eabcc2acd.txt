public void crossValidateModel(Classifier classifier, Instances data, int numFolds, Random random, Object... forPrinting) throws Exception {
    // Make a copy of the data we can reorder
    data = new Instances(data);
    data.randomize(random);
    if (data.classAttribute().isNominal()) {
        data.stratify(numFolds);
    }
    // We assume that the first element is a
    // weka.classifiers.evaluation.output.prediction.AbstractOutput object
    AbstractOutput classificationOutput = null;
    if (forPrinting.length > 0 && forPrinting[0] instanceof AbstractOutput) {
        // print the header first
        classificationOutput = (AbstractOutput) forPrinting[0];
        classificationOutput.setHeader(data);
        classificationOutput.printHeader();
    }
    // Do the folds
    for (int i = 0; i < numFolds; i++) {
        Instances train = data.trainCV(numFolds, i, random);
        setPriors(train);
        Classifier copiedClassifier = AbstractClassifier.makeCopy(classifier);
        copiedClassifier.buildClassifier(train);
        if (classificationOutput == null && forPrinting.length > 0) {
            ((StringBuffer) forPrinting[0]).append("\n=== Classifier model (training fold " + (i + 1) + ") ===\n\n" + copiedClassifier);
        }
        Instances test = data.testCV(numFolds, i);
        if (classificationOutput != null) {
            evaluateModel(copiedClassifier, test, forPrinting);
        } else {
            evaluateModel(copiedClassifier, test);
        }
    }
    m_NumFolds = numFolds;
    if (classificationOutput != null) {
        classificationOutput.printFooter();
    }
}
