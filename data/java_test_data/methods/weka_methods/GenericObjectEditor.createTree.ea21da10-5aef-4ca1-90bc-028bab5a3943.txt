protected JTree createTree(Hashtable<String, HierarchyPropertyParser> hpps) {
    GOETreeNode superRoot;
    Enumeration<HierarchyPropertyParser> enm;
    HierarchyPropertyParser hpp;
    if (hpps.size() > 1) {
        superRoot = new GOETreeNode("root");
    } else {
        superRoot = null;
    }
    enm = hpps.elements();
    while (enm.hasMoreElements()) {
        hpp = enm.nextElement();
        hpp.goToRoot();
        GOETreeNode root = new GOETreeNode(hpp.getValue());
        addChildrenToTree(root, hpp);
        if (superRoot == null) {
            superRoot = root;
        } else {
            superRoot.add(root);
        }
    }
    JTree tree = new JTree(superRoot) {

        /**
         * For serialization
         */
        private static final long serialVersionUID = 6991903188102450549L;

        @Override
        public String getToolTipText(MouseEvent e) {
            if ((getRowForLocation(e.getX(), e.getY())) == -1) {
                return null;
            }
            TreePath currPath = getPathForLocation(e.getX(), e.getY());
            if (currPath.getLastPathComponent() instanceof DefaultMutableTreeNode) {
                DefaultMutableTreeNode node = (DefaultMutableTreeNode) currPath.getLastPathComponent();
                if (node.isLeaf()) {
                    return ((GOETreeNode) node).getToolTipText();
                }
            }
            return null;
        }
    };
    tree.setToolTipText("");
    return tree;
}
