@Override
protected void layoutEditor() {
    ExecuteProcess executeProcess = ((ExecuteProcess) getStepToEdit());
    boolean hasIncomingInstances = executeProcess.getStepManager().numIncomingConnectionsOfType(StepManager.CON_INSTANCE) > 0 || executeProcess.getStepManager().numIncomingConnectionsOfType(StepManager.CON_ENVIRONMENT) > 0;
    Environment env = Environment.getSystemWide();
    JPanel holderP = new JPanel(new BorderLayout());
    JPanel checkP = new JPanel(new BorderLayout());
    holderP.add(checkP, BorderLayout.NORTH);
    if (hasIncomingInstances) {
        checkP.add(m_useDynamicCheck, BorderLayout.NORTH);
        m_useDynamicCheck.setSelected(executeProcess.getUseDynamic());
    } else {
        m_useDynamicCheck = null;
    }
    checkP.add(m_raiseExceptonOnCommandFailure, BorderLayout.SOUTH);
    m_raiseExceptonOnCommandFailure.setSelected(executeProcess.getRaiseExceptionOnCommandFailure());
    m_staticPanel = new StaticProcessPanel(executeProcess, env);
    if (hasIncomingInstances) {
        JTabbedPane tabbedPane = new JTabbedPane();
        tabbedPane.add("Static", m_staticPanel);
        m_dynamicPanel = new DynamicProcessPanel(executeProcess);
        tabbedPane.add("Dynamic", m_dynamicPanel);
        holderP.add(tabbedPane, BorderLayout.CENTER);
    } else {
        holderP.add(m_staticPanel, BorderLayout.CENTER);
    }
    add(holderP, BorderLayout.CENTER);
}
