private void displayPackageInfo(int i) {
    String packageName = m_table.getValueAt(i, getColumnIndex(PACKAGE_COLUMN)).toString();
    boolean repositoryPackage = true;
    try {
        WekaPackageManager.getRepositoryPackageInfo(packageName);
    } catch (Exception ex) {
        repositoryPackage = false;
    }
    String versionURL = WekaPackageManager.getPackageRepositoryURL().toString() + "/" + packageName + "/index.html";
    try {
        URL back = m_infoPane.getPage();
        if (m_browserHistory.size() == 0 && back != null) {
            m_backB.setEnabled(true);
        }
        if (back != null) {
            m_browserHistory.add(back);
        }
        if (repositoryPackage) {
            m_infoPane.setPage(new URL(versionURL));
        } else {
            // try and display something on this non-official package
            try {
                Package p = WekaPackageManager.getInstalledPackageInfo(packageName);
                Map<?, ?> meta = p.getPackageMetaData();
                Set<?> keys = meta.keySet();
                StringBuffer sb = new StringBuffer();
                sb.append(weka.core.RepositoryIndexGenerator.HEADER);
                sb.append("<H1>" + packageName + " (Unofficial) </H1>");
                for (Object k : keys) {
                    if (!k.toString().equals("PackageName")) {
                        Object value = meta.get(k);
                        sb.append(k + " : " + value + "<p>");
                    }
                }
                sb.append("</html>\n");
                m_infoPane.setText(sb.toString());
            } catch (Exception e) {
            // ignore
            }
        }
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    updateInstallUninstallButtonEnablement();
    if (m_availableBut.isSelected()) {
        m_uninstallBut.setEnabled(false);
    }
/*
     * if (m_installing) { m_installBut.setEnabled(false);
     * m_uninstallBut.setEnabled(false); } else { m_installBut.setEnabled(true);
     * if (m_availableBut.isSelected()) { m_uninstallBut.setEnabled(false); }
     * else { try { Package p =
     * WekaPackageManager.getRepositoryPackageInfo(packageName);
     * m_uninstallBut.setEnabled(p.isInstalled()); } catch (Exception ex) {
     * m_uninstallBut.setEnabled(false); } } }
     */
}
