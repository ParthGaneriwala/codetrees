@Override
public void acceptClassifier(final IncrementalClassifierEvent ce) {
    if (ce.getStatus() == IncrementalClassifierEvent.BATCH_FINISHED || (m_incrementalSaveSchedule > 0 && (m_counter % m_incrementalSaveSchedule == 0) && m_counter > 0)) {
        // Only save model when the end of the stream is reached or according
        // to our save schedule (if set)
        Instances header = ce.getStructure();
        String titleString = ce.getClassifier().getClass().getName();
        titleString = titleString.substring(titleString.lastIndexOf('.') + 1, titleString.length());
        String prefix = "";
        String relationName = (m_includeRelationName) ? header.relationName() : "";
        try {
            prefix = m_env.substitute(m_filenamePrefix);
        } catch (Exception ex) {
            String message = "[SerializedModelSaver] " + statusMessagePrefix() + " Can't save model. Reason: " + ex.getMessage();
            if (m_logger != null) {
                m_logger.logMessage(message);
                m_logger.statusMessage(statusMessagePrefix() + "ERROR (See log for details)");
            } else {
                System.err.println(message);
            }
            return;
        }
        String fileName = "" + prefix + relationName + titleString;
        fileName = sanitizeFilename(fileName);
        String dirName = m_directory.getPath();
        try {
            dirName = m_env.substitute(dirName);
        } catch (Exception ex) {
            String message = "[SerializedModelSaver] " + statusMessagePrefix() + " Can't save model. Reason: " + ex.getMessage();
            if (m_logger != null) {
                m_logger.logMessage(message);
                m_logger.statusMessage(statusMessagePrefix() + "ERROR (See log for details)");
            } else {
                System.err.println(message);
            }
            return;
        }
        File tempFile = new File(dirName);
        fileName = tempFile.getAbsolutePath() + File.separator + fileName;
        saveModel(fileName, header, ce.getClassifier());
    } else if (ce.getStatus() == IncrementalClassifierEvent.NEW_BATCH) {
        m_counter = 0;
    }
    m_counter++;
}
