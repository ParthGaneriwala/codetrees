private void checkOnClassifierType() {
    Classifier editedC = m_dsClassifier.getClassifierTemplate();
    if (editedC instanceof weka.classifiers.UpdateableClassifier && m_dsClassifier.hasIncomingStreamInstances()) {
        if (!m_panelVisible) {
            m_holderPanel.add(m_incrementalPanel, BorderLayout.SOUTH);
            m_panelVisible = true;
            m_executionSlotsText.setEnabled(false);
            m_loadModelField = new FileEnvironmentField("Load model from file", m_env);
            m_incrementalPanel.add(m_loadModelField);
            m_loadModelField.setText(m_dsClassifier.getLoadClassifierFileName());
        }
    } else {
        if (m_panelVisible) {
            m_holderPanel.remove(m_incrementalPanel);
        }
        if (m_dsClassifier.hasIncomingStreamInstances()) {
            m_loadModelField = new FileEnvironmentField("Load model from file", m_env);
            m_executionSlotsPanel.add(m_loadModelField, BorderLayout.SOUTH);
            m_executionSlotsText.setEnabled(false);
            m_blockOnLastFold.setEnabled(false);
            m_loadModelField.setText(m_dsClassifier.getLoadClassifierFileName());
        } else {
            m_executionSlotsText.setEnabled(true);
            m_blockOnLastFold.setEnabled(true);
        }
        m_panelVisible = false;
        if (m_dsClassifier.hasIncomingBatchInstances() && !m_dsClassifier.m_listenees.containsKey("trainingSet")) {
            m_holderPanel.remove(m_blockOnLastFold);
            m_holderPanel.remove(m_executionSlotsPanel);
            m_loadModelField = new FileEnvironmentField("Load model from file", m_env);
            m_holderPanel.add(m_loadModelField, BorderLayout.SOUTH);
            m_loadModelField.setText(m_dsClassifier.getLoadClassifierFileName());
        }
    }
}
