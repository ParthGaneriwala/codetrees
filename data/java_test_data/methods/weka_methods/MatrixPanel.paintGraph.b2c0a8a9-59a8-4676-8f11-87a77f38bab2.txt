public void paintGraph(Graphics g, int xattrib, int yattrib, int xpos, int ypos) {
    int x, y;
    g.setColor(m_backgroundColor.equals(Color.BLACK) ? m_backgroundColor.brighter().brighter() : m_backgroundColor.darker().darker());
    g.drawRect(xpos - 1, ypos - 1, cellSize + 1, cellSize + 1);
    g.setColor(m_backgroundColor);
    g.fillRect(xpos, ypos, cellSize, cellSize);
    for (int i = 0; i < m_points.length; i++) {
        if (!(m_missing[i][yattrib] || m_missing[i][xattrib])) {
            if (m_type[0] == 0) {
                if (m_missing[i][m_missing[0].length - 1]) {
                    g.setColor(m_defaultColors[m_defaultColors.length - 1]);
                } else {
                    g.setColor(new Color(m_pointColors[i], 150, (255 - m_pointColors[i])));
                }
            } else {
                g.setColor(m_colorList.get(m_pointColors[i]));
            }
            if (m_points[i][xattrib] + jitterVals[i][0] < 0 || m_points[i][xattrib] + jitterVals[i][0] > cellRange) {
                if (cellRange - m_points[i][yattrib] + jitterVals[i][1] < 0 || cellRange - m_points[i][yattrib] + jitterVals[i][1] > cellRange) {
                    // both x and y out of range don't add jitter
                    x = intpad + m_points[i][xattrib];
                    y = intpad + (cellRange - m_points[i][yattrib]);
                } else {
                    // only x out of range
                    x = intpad + m_points[i][xattrib];
                    y = intpad + (cellRange - m_points[i][yattrib]) + jitterVals[i][1];
                }
            } else if (cellRange - m_points[i][yattrib] + jitterVals[i][1] < 0 || cellRange - m_points[i][yattrib] + jitterVals[i][1] > cellRange) {
                // only y out of range
                x = intpad + m_points[i][xattrib] + jitterVals[i][0];
                y = intpad + (cellRange - m_points[i][yattrib]);
            } else {
                // none out of range
                x = intpad + m_points[i][xattrib] + jitterVals[i][0];
                y = intpad + (cellRange - m_points[i][yattrib]) + jitterVals[i][1];
            }
            if (datapointSize == 1) {
                g.drawLine(x + xpos, y + ypos, x + xpos, y + ypos);
            } else {
                g.drawOval(x + xpos - datapointSize / 2, y + ypos - datapointSize / 2, datapointSize, datapointSize);
            }
        }
    }
    g.setColor(fontColor);
}
