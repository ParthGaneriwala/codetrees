public Element writeLoader(Element parent, Object o, String name) throws Exception {
    Element node;
    weka.core.converters.Loader loader;
    File file;
    boolean known;
    // for debugging only
    if (DEBUG) {
        trace(new Throwable(), name);
    }
    m_CurrentNode = parent;
    loader = (weka.core.converters.Loader) o;
    node = addElement(parent, name, loader.getClass().getName(), false);
    known = true;
    file = null;
    // file
    if (loader instanceof weka.core.converters.AbstractFileLoader) {
        file = ((weka.core.converters.AbstractFileLoader) loader).retrieveFile();
    } else {
        known = false;
    }
    if (!known) {
        System.out.println("WARNING: unknown loader class '" + loader.getClass().getName() + "' - cannot retrieve file!");
    }
    Boolean relativeB = null;
    if (loader instanceof weka.core.converters.FileSourcedConverter) {
        boolean relative = ((weka.core.converters.FileSourcedConverter) loader).getUseRelativePath();
        relativeB = new Boolean(relative);
    }
    // only save it, if it's a real file!
    if ((file == null) || (file.isDirectory())) {
        invokeWriteToXML(node, "", VAL_FILE);
    } else {
        String withResourceSeparators = file.getPath().replace(File.pathSeparatorChar, '/');
        boolean notAbsolute = (((weka.core.converters.AbstractFileLoader) loader).getUseRelativePath() || (loader instanceof EnvironmentHandler && Environment.containsEnvVariables(file.getPath())) || this.getClass().getClassLoader().getResource(withResourceSeparators) != null || !file.exists());
        String path = (notAbsolute) ? file.getPath() : file.getAbsolutePath();
        // Replace any windows file separators with forward slashes (Java under
        // windows can
        // read paths with forward slashes (apparantly)
        path = path.replace('\\', '/');
        invokeWriteToXML(node, path, VAL_FILE);
    }
    if (relativeB != null) {
        invokeWriteToXML(node, relativeB.toString(), VAL_RELATIVE_PATH);
    }
    if (loader instanceof weka.core.OptionHandler) {
        String[] opts = ((weka.core.OptionHandler) loader).getOptions();
        invokeWriteToXML(node, opts, VAL_OPTIONS);
    }
    return node;
}
