protected void createDialog() {
    JPanel panel;
    JPanel panel2;
    final SqlViewerDialog dialog;
    dialog = this;
    setLayout(new BorderLayout());
    // sql panel
    m_Viewer = new SqlViewer(m_Parent);
    add(m_Viewer, BorderLayout.CENTER);
    panel2 = new JPanel(new BorderLayout());
    add(panel2, BorderLayout.SOUTH);
    // Buttons
    panel = new JPanel(new FlowLayout(FlowLayout.RIGHT));
    panel2.add(panel, BorderLayout.EAST);
    m_ButtonOK.setMnemonic('O');
    panel.add(m_ButtonOK);
    m_ButtonOK.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent evt) {
            m_ReturnValue = JOptionPane.OK_OPTION;
            // remove listener, otherwise does the disposal of resultspanel
            // change the query again!
            m_Viewer.removeResultChangedListener(dialog);
            m_Viewer.saveSize();
            dialog.dispose();
        }
    });
    m_ButtonCancel.setMnemonic('C');
    panel.add(m_ButtonCancel);
    m_ButtonCancel.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent evt) {
            m_ReturnValue = JOptionPane.CANCEL_OPTION;
            // remove listener, otherwise does the disposal of resultspanel
            // change the query again!
            m_Viewer.removeResultChangedListener(dialog);
            m_Viewer.saveSize();
            dialog.dispose();
        }
    });
    // the checkbox for sparse data
    panel = new JPanel(new FlowLayout(FlowLayout.LEFT));
    panel2.add(panel, BorderLayout.WEST);
    panel.add(m_CheckBoxSparseData);
    m_CheckBoxSparseData.setMnemonic('s');
    addWindowListener(new WindowAdapter() {

        public void windowClosing(WindowEvent e) {
            m_Viewer.saveSize();
        }
    });
    // current Query
    panel = new JPanel(new FlowLayout(FlowLayout.CENTER));
    panel2.add(panel, BorderLayout.CENTER);
    panel.add(m_LabelQuery);
    pack();
    getRootPane().setDefaultButton(m_ButtonOK);
    setResizable(true);
    // listener
    m_Viewer.addResultChangedListener(this);
}
