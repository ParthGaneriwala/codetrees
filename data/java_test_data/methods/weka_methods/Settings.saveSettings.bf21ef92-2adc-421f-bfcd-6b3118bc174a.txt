public void saveSettings() throws IOException {
    // shallow copy settings so that we can wrap any enums in EnumHelper
    // objects before persisting
    Map<String, Map<SettingKey, Object>> settingsCopy = new LinkedHashMap<String, Map<SettingKey, Object>>();
    for (Map.Entry<String, Map<SettingKey, Object>> e : m_settings.entrySet()) {
        Map<SettingKey, Object> s = new LinkedHashMap<SettingKey, Object>();
        settingsCopy.put(e.getKey(), s);
        for (Map.Entry<SettingKey, Object> ee : e.getValue().entrySet()) {
            if (ee.getValue() instanceof Enum) {
                EnumHelper wrapper = new EnumHelper((Enum) ee.getValue());
                s.put(ee.getKey(), wrapper);
            } else if (ee.getValue() instanceof Font) {
                FontHelper wrapper = new FontHelper((Font) ee.getValue());
                s.put(ee.getKey(), wrapper);
            } else if (ee.getValue() instanceof File) {
                FileHelper wrapper = new FileHelper((File) ee.getValue());
                s.put(ee.getKey(), wrapper);
            } else {
                s.put(ee.getKey(), ee.getValue());
            }
        }
    }
    XMLFileBasedMetaStore store = new XMLFileBasedMetaStore();
    if (m_settings.size() > 0) {
        store.storeEntry(m_storeName, m_ID, settingsCopy);
    }
}
