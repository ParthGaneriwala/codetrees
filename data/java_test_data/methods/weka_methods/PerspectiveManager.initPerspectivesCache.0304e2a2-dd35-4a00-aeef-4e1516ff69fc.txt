protected void initPerspectivesCache(Settings settings) {
    Set<String> pluginPerspectiveImpls = PluginManager.getPluginNamesOfType(PERSPECTIVE_INTERFACE);
    if (pluginPerspectiveImpls != null) {
        for (String impl : pluginPerspectiveImpls) {
            if (!impl.equals(m_mainPerspective.getClass().getCanonicalName())) {
                try {
                    Object perspective = PluginManager.getPluginInstance(PERSPECTIVE_INTERFACE, impl);
                    if (!(perspective instanceof Perspective)) {
                        weka.core.logging.Logger.log(Logger.Level.WARNING, "[PerspectiveManager] " + impl + " is not an instance" + PERSPECTIVE_INTERFACE + ". Skipping...");
                    }
                    boolean ok = true;
                    if (m_allowedPerspectiveClassPrefixes.size() > 0) {
                        ok = false;
                        for (String prefix : m_allowedPerspectiveClassPrefixes) {
                            if (impl.startsWith(prefix)) {
                                ok = true;
                                break;
                            }
                        }
                    }
                    if (m_disallowedPerspectiveClassPrefixes.size() > 0) {
                        for (String prefix : m_disallowedPerspectiveClassPrefixes) {
                            if (impl.startsWith(prefix)) {
                                ok = false;
                                break;
                            }
                        }
                    }
                    if (impl.equals(m_mainPerspective.getClass().getCanonicalName())) {
                        // main perspective is always part of the application and we dont
                        // want it to appear as an option in the list of perspectives to
                        // choose from in the preferences dialog
                        ok = false;
                    }
                    if (ok) {
                        m_perspectiveCache.put(impl, (Perspective) perspective);
                        String perspectiveTitle = ((Perspective) perspective).getPerspectiveTitle();
                        m_perspectiveNameLookup.put(perspectiveTitle, impl);
                        settings.applyDefaults(((Perspective) perspective).getDefaultSettings());
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    m_mainApp.showErrorDialog(e);
                }
            }
        }
    }
}
