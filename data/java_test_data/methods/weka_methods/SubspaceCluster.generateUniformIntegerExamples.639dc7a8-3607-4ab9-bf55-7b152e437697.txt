private void generateUniformIntegerExamples(Instances format, int numInstances, SubspaceClusterDefinition cl, String cName) {
    int numAtts = m_NumAttributes;
    if (getClassFlag()) {
        numAtts++;
    }
    double[] values = new double[numAtts];
    boolean[] attributes = cl.getAttributes();
    double[] minValue = cl.getMinValue();
    double[] maxValue = cl.getMaxValue();
    int[] minInt = new int[minValue.length];
    int[] maxInt = new int[maxValue.length];
    int[] intValue = new int[maxValue.length];
    int[] numInt = new int[minValue.length];
    int num = 1;
    for (int i = 0; i < minValue.length; i++) {
        minInt[i] = (int) Math.ceil(minValue[i]);
        maxInt[i] = (int) Math.floor(maxValue[i]);
        numInt[i] = (maxInt[i] - minInt[i] + 1);
        num = num * numInt[i];
    }
    int numEach = numInstances / num;
    int rest = numInstances - numEach * num;
    // initialize with smallest values combination
    for (int i = 0; i < m_NumAttributes; i++) {
        if (attributes[i]) {
            values[i] = minInt[i];
            intValue[i] = minInt[i];
        } else {
            values[i] = Utils.missingValue();
        }
    }
    if (getClassFlag()) {
        values[format.classIndex()] = format.classAttribute().indexOfValue(cName);
    }
    DenseInstance example = new DenseInstance(1.0, values);
    example.setDataset(format);
    int added = 0;
    int attr = 0;
    // do while not added all
    do {
        // add all for one value combination
        for (int k = 0; k < numEach; k++) {
            // Instance will be copied here
            format.add(example);
            added++;
        }
        if (rest > 0) {
            // Instance will be copied here
            format.add(example);
            added++;
            rest--;
        }
        if (added >= numInstances) {
            break;
        }
        // switch to the next value combination
        boolean done = false;
        do {
            if (attributes[attr] && (intValue[attr] + 1 <= maxInt[attr])) {
                intValue[attr]++;
                done = true;
            } else {
                attr++;
            }
        } while (!done);
        example.setValue(attr, intValue[attr]);
    } while (added < numInstances);
}
