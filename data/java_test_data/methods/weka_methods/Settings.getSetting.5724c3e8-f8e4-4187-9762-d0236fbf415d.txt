/**
 * Get the value of a setting
 *
 * @param ID the ID for settings map to lookup (typically the ID of a
 * perspective)
 * @param key the name of the setting value to lookup
 * @param defaultValue the default value to use if the setting is not known
 * @param env environment variables to use. String setting values will have
 * environment variables replaced automatically
 * @param <T> the type of the vaue
 * @return the setting value, or the default value if not found
 */
@SuppressWarnings("unchecked")
public <T> T getSetting(String ID, SettingKey key, T defaultValue, Environment env) {
    Map<SettingKey, Object> settingsForID = m_settings.get(ID);
    T value = null;
    if (settingsForID != null && settingsForID.size() > 0) {
        value = (T) settingsForID.get(key);
        if (value instanceof String) {
            try {
                value = (T) env.substitute((String) value);
            } catch (Exception ex) {
            // ignore
            }
        }
    }
    if (value == null) {
        // Next is environment
        if (env != null) {
            String val = env.getVariableValue(key.getKey());
            if (val != null) {
                value = stringToT(val, defaultValue);
            }
        }
    }
    // Try system props
    if (value == null) {
        String val = System.getProperty(key.getKey());
        if (val != null) {
            value = stringToT(val, defaultValue);
        }
    }
    return value != null ? value : defaultValue;
}
