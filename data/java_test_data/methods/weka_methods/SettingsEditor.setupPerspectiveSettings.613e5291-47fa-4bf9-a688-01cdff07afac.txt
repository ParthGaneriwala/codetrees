protected void setupPerspectiveSettings() {
    // settings
    if (m_settings.getSettings(m_ownerApp.getApplicationID()) != null && m_settings.getSettings(m_ownerApp.getApplicationID()).size() > 1) {
        Map<Settings.SettingKey, Object> appSettings = m_settings.getSettings(m_ownerApp.getApplicationID());
        SingleSettingsEditor appEditor = new SingleSettingsEditor(appSettings);
        m_settingsTabs.addTab("General", appEditor);
        m_perspectiveEditors.add(appEditor);
    }
    // main perspective
    Perspective mainPers = m_ownerApp.getMainPerspective();
    String mainTitle = mainPers.getPerspectiveTitle();
    String mainID = mainPers.getPerspectiveID();
    SingleSettingsEditor mainEditor = new SingleSettingsEditor(m_settings.getSettings(mainID));
    m_settingsTabs.addTab(mainTitle, mainEditor);
    m_perspectiveEditors.add(mainEditor);
    List<Perspective> availablePerspectives = m_ownerApp.getPerspectiveManager().getLoadedPerspectives();
    List<String> availablePerspectivesIDs = new ArrayList<String>();
    List<String> availablePerspectiveTitles = new ArrayList<String>();
    for (int i = 0; i < availablePerspectives.size(); i++) {
        Perspective p = availablePerspectives.get(i);
        availablePerspectivesIDs.add(p.getPerspectiveID());
        availablePerspectiveTitles.add(p.getPerspectiveTitle());
    }
    Set<String> settingsIDs = m_settings.getSettingsIDs();
    for (String settingID : settingsIDs) {
        if (availablePerspectivesIDs.contains(settingID)) {
            int indexOfP = availablePerspectivesIDs.indexOf(settingID);
            // make a tab for this one
            Map<Settings.SettingKey, Object> settingsForID = m_settings.getSettings(settingID);
            if (settingsForID != null && settingsForID.size() > 0) {
                SingleSettingsEditor perpEditor = new SingleSettingsEditor(settingsForID);
                m_settingsTabs.addTab(availablePerspectiveTitles.get(indexOfP), perpEditor);
                m_perspectiveEditors.add(perpEditor);
            }
        }
    }
}
