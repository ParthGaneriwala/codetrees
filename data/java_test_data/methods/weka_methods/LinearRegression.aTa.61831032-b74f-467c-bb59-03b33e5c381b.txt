private static Matrix aTa(Matrix a) {
    int cols = a.getColumnDimension();
    double[][] A = a.getArray();
    Matrix x = new Matrix(cols, cols);
    double[][] X = x.getArray();
    double[] Acol = new double[a.getRowDimension()];
    for (int col1 = 0; col1 < cols; col1++) {
        // cache the column for faster access later
        for (int row = 0; row < Acol.length; row++) {
            Acol[row] = A[row][col1];
        }
        // reference the row for faster lookup
        double[] Xrow = X[col1];
        for (int row = 0; row < Acol.length; row++) {
            double[] Arow = A[row];
            for (int col2 = col1; col2 < Xrow.length; col2++) {
                Xrow[col2] += Acol[row] * Arow[col2];
            }
        }
        // result is symmetric
        for (int col2 = col1 + 1; col2 < Xrow.length; col2++) {
            X[col2][col1] = Xrow[col2];
        }
    }
    return x;
}
