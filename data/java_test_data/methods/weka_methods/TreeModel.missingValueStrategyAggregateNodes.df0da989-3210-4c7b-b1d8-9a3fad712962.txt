protected double[] missingValueStrategyAggregateNodes(double[] instance, Attribute classAtt) throws Exception {
    if (classAtt.isNumeric()) {
        throw new Exception("[TreeNode] missing value strategy aggregate nodes, " + "but class is numeric!");
    }
    double[] preds = null;
    TreeNode trueNode = null;
    boolean strategyInvoked = false;
    // look at the evaluation of the child predicates
    for (TreeNode c : m_childNodes) {
        if (c.getPredicate().evaluate(instance) == Predicate.Eval.TRUE) {
            // note the first child to evaluate to true
            if (trueNode == null) {
                trueNode = c;
            }
        } else if (c.getPredicate().evaluate(instance) == Predicate.Eval.UNKNOWN) {
            strategyInvoked = true;
        }
    }
    if (strategyInvoked) {
        double[] aggregatedCounts = freqCountsForAggNodesStrategy(instance, classAtt);
        // normalize
        Utils.normalize(aggregatedCounts);
        preds = aggregatedCounts;
    } else {
        if (trueNode != null) {
            preds = trueNode.score(instance, classAtt);
        } else {
            doNoTrueChild(classAtt, preds);
        }
    }
    return preds;
}
