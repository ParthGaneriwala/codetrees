@Override
public void actionPerformed(ActionEvent e) {
    if (e.getSource() == m_DeleteBut) {
        int[] selected = m_ElementList.getSelectedIndices();
        if (selected != null) {
            for (int i = selected.length - 1; i >= 0; i--) {
                int current = selected[i];
                m_ListModel.removeElementAt(current);
                if (m_ListModel.size() > current) {
                    m_ElementList.setSelectedIndex(current);
                }
            }
            m_Support.firePropertyChange("", null, null);
        }
    } else if (e.getSource() == m_EditBut) {
        if (m_Editor instanceof GenericObjectEditor) {
            ((GenericObjectEditor) m_Editor).setClassType(m_ElementClass);
        }
        try {
            m_Editor.setValue(GenericObjectEditor.makeCopy(m_ElementList.getSelectedValue()));
        } catch (Exception ex) {
            // not possible to serialize?
            m_Editor.setValue(m_ElementList.getSelectedValue());
        }
        if (m_Editor.getValue() != null) {
            if (PropertyDialog.getParentDialog(CustomEditor.this) != null) {
                m_PD = new PropertyDialog(PropertyDialog.getParentDialog(CustomEditor.this), m_Editor, -1, -1);
            } else {
                m_PD = new PropertyDialog(PropertyDialog.getParentFrame(CustomEditor.this), m_Editor, -1, -1);
            }
            m_PD.setVisible(true);
            if (!(m_Editor instanceof GenericObjectEditor) || (!((GenericObjectEditor) m_Editor).wasCancelPressed())) {
                m_ListModel.set(m_ElementList.getSelectedIndex(), m_Editor.getValue());
                m_Support.firePropertyChange("", null, null);
            }
        }
    } else if (e.getSource() == m_UpBut) {
        JListHelper.moveUp(m_ElementList);
        m_Support.firePropertyChange("", null, null);
    } else if (e.getSource() == m_DownBut) {
        JListHelper.moveDown(m_ElementList);
        m_Support.firePropertyChange("", null, null);
    } else if (e.getSource() == m_AddBut) {
        int selected = m_ElementList.getSelectedIndex();
        Object addObj = m_ElementEditor.getValue();
        // Make a full copy of the object using serialization
        try {
            SerializedObject so = new SerializedObject(addObj);
            addObj = so.getObject();
            if (selected != -1) {
                m_ListModel.insertElementAt(addObj, selected);
            } else {
                m_ListModel.addElement(addObj);
            }
            m_Support.firePropertyChange("", null, null);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(CustomEditor.this, "Could not create an object copy", null, JOptionPane.ERROR_MESSAGE);
        }
    }
}
