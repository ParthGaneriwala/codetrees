@Override
public void setStepToEdit(Step step) {
    copyOriginal(step);
    Instances incomingStructure = null;
    try {
        incomingStructure = step.getStepManager().getIncomingStructureForConnectionType(StepManager.CON_DATASET, m_env);
        if (incomingStructure == null) {
            incomingStructure = step.getStepManager().getIncomingStructureForConnectionType(StepManager.CON_TRAININGSET, m_env);
        }
        if (incomingStructure == null) {
            incomingStructure = step.getStepManager().getIncomingStructureForConnectionType(StepManager.CON_TESTSET, m_env);
        }
        if (incomingStructure == null) {
            incomingStructure = step.getStepManager().getIncomingStructureForConnectionType(StepManager.CON_INSTANCE, m_env);
        }
    } catch (WekaException ex) {
        showErrorDialog(ex);
    }
    if (incomingStructure != null) {
        m_classCombo.setEditable(true);
        for (int i = 0; i < incomingStructure.numAttributes(); i++) {
            Attribute a = incomingStructure.attribute(i);
            String attN = "(" + Attribute.typeToStringShort(a) + ") " + a.name();
            m_classCombo.addItem(attN);
        }
        setComboToClass(incomingStructure);
        JPanel p = new JPanel(new BorderLayout());
        p.setBorder(BorderFactory.createTitledBorder("Choose class attribute"));
        p.add(m_classCombo, BorderLayout.NORTH);
        createAboutPanel(step);
        add(p, BorderLayout.CENTER);
    } else {
        m_classCombo = null;
        super.setStepToEdit(step);
    }
}
