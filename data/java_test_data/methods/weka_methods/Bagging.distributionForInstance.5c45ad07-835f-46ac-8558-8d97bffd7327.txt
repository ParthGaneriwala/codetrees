@Override
public double[] distributionForInstance(Instance instance) throws Exception {
    double[] sums = new double[instance.numClasses()], newProbs;
    double numPreds = 0;
    for (int i = 0; i < m_NumIterations; i++) {
        if (m_Numeric) {
            double pred = m_Classifiers[i].classifyInstance(instance);
            if (!Utils.isMissingValue(pred)) {
                sums[0] += pred;
                numPreds++;
            }
        } else {
            newProbs = m_Classifiers[i].distributionForInstance(instance);
            for (int j = 0; j < newProbs.length; j++) sums[j] += newProbs[j];
        }
    }
    if (m_Numeric) {
        if (numPreds == 0) {
            sums[0] = Utils.missingValue();
        } else {
            sums[0] /= numPreds;
        }
        return sums;
    } else if (Utils.eq(Utils.sum(sums), 0)) {
        return sums;
    } else {
        Utils.normalize(sums);
        return sums;
    }
}
