protected void popupCopyRangeMenu(int x, int y) {
    JPopupMenu popupMenu = new JPopupMenu();
    final JMenuItem copyRangeItem = new JMenuItem("Copy checked items to range in clipboard");
    popupMenu.add(copyRangeItem);
    if (getSelectedAttributes().length == 0) {
        copyRangeItem.setEnabled(false);
    }
    copyRangeItem.addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            int[] selected = getSelectedAttributes();
            StringBuilder b = new StringBuilder();
            int prev = -1;
            int lastInString = -1;
            for (int v : selected) {
                if (v == 0) {
                    b.append("first-");
                    prev = v;
                    lastInString = v;
                } else {
                    if (prev < 0) {
                        prev = v;
                        lastInString = v;
                        b.append(v + 1).append("-");
                    } else {
                        if (v - prev == 1) {
                            prev = v;
                            continue;
                        }
                        if (b.charAt(b.length() - 1) == '-') {
                            if (prev == lastInString) {
                                b.setCharAt(b.length() - 1, ',');
                            } else {
                                b.append(prev + 1).append(",");
                            }
                        }
                        if (v == m_Model.getRowCount() - 1) {
                            b.append("last");
                        } else {
                            b.append(v + 1).append("-");
                        }
                        prev = v;
                        lastInString = v;
                    }
                }
            }
            if (b.charAt(b.length() - 1) == '-') {
                if (selected.length > 1 && lastInString != selected[selected.length - 1]) {
                    if (selected[selected.length - 1] == m_Model.getRowCount() - 1) {
                        b.append("last");
                    } else {
                        b.append(selected[selected.length - 1] + 1);
                    }
                } else {
                    b.setLength(b.length() - 1);
                }
            }
            StringSelection selection = new StringSelection(b.toString());
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(selection, selection);
        }
    });
    popupMenu.show(m_Table, x, y);
}
