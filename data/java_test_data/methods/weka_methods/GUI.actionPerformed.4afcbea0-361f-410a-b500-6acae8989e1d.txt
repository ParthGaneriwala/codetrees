@Override
public void actionPerformed(ActionEvent ae) {
    if (dlg == null) {
        dlg = new JDialog(SwingUtilities.getWindowAncestor(GUI.this));
        dlg.setTitle("Learn Bayesian Network");
        final JButton jBtOptions = new JButton("Options");
        jBtOptions.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                // m_BayesNet = new EditableBayesNet();
                try {
                    GenericObjectEditor.registerEditors();
                    GenericObjectEditor ce = new GenericObjectEditor(true);
                    ce.setClassType(weka.classifiers.Classifier.class);
                    ce.setValue(m_BayesNet);
                    PropertyDialog pd;
                    if (PropertyDialog.getParentDialog(GUI.this) != null) {
                        pd = new PropertyDialog(PropertyDialog.getParentDialog(GUI.this), ce, -1, -1);
                    } else {
                        pd = new PropertyDialog(PropertyDialog.getParentFrame(GUI.this), ce, -1, -1);
                    }
                    pd.addWindowListener(new WindowAdapter() {

                        @Override
                        public void windowClosing(WindowEvent e) {
                            PropertyEditor pe = ((PropertyDialog) e.getSource()).getEditor();
                            Object c = pe.getValue();
                            String options = "";
                            if (c instanceof OptionHandler) {
                                options = Utils.joinOptions(((OptionHandler) c).getOptions());
                                try {
                                    m_BayesNet.setOptions(((OptionHandler) c).getOptions());
                                } catch (Exception e2) {
                                    e2.printStackTrace();
                                }
                            }
                            System.out.println(c.getClass().getName() + " " + options);
                            System.exit(0);
                        }
                    });
                    pd.setVisible(true);
                } catch (Exception ex) {
                    ex.printStackTrace();
                    System.err.println(ex.getMessage());
                }
                m_BayesNet.clearUndoStack();
                a_undo.setEnabled(false);
                a_redo.setEnabled(false);
            }
        });
        final JTextField jTfOptions = new JTextField(40);
        jTfOptions.setHorizontalAlignment(JTextField.CENTER);
        jTfOptions.setText("" + Utils.joinOptions(m_BayesNet.getOptions()));
        JButton jBtGo;
        jBtGo = new JButton("Learn");
        jBtGo.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                try {
                    m_BayesNet.buildClassifier(m_Instances);
                    layoutGraph();
                    updateStatus();
                    m_BayesNet.clearUndoStack();
                    dlg.setVisible(false);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                dlg.setVisible(false);
            }
        });
        JButton jBtCancel;
        jBtCancel = new JButton("Cancel");
        jBtCancel.setMnemonic('C');
        jBtCancel.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                dlg.setVisible(false);
            }
        });
        GridBagConstraints gbc = new GridBagConstraints();
        dlg.setLayout(new GridBagLayout());
        Container c = new Container();
        c.setLayout(new GridBagLayout());
        gbc.gridwidth = 2;
        gbc.insets = new Insets(8, 0, 0, 0);
        gbc.anchor = GridBagConstraints.NORTHWEST;
        gbc.gridwidth = GridBagConstraints.RELATIVE;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        c.add(jBtOptions, gbc);
        gbc.gridwidth = GridBagConstraints.REMAINDER;
        c.add(jTfOptions, gbc);
        gbc.fill = GridBagConstraints.HORIZONTAL;
        dlg.add(c, gbc);
        dlg.add(jBtGo);
        gbc.gridwidth = GridBagConstraints.REMAINDER;
        dlg.add(jBtCancel);
    }
    // dlg.setLocation(100, 100);
    // dlg.setVisible(true);
    dlg.setSize(450, 350);
    // dlg.setVisible(false);
    dlg.pack();
    dlg.setLocationRelativeTo(SwingUtilities.getWindowAncestor(GUI.this));
    dlg.setVisible(true);
// dlg.repaint();
}
