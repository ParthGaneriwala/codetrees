public static Evaluation setupEval(Evaluation eval, Classifier classifier, Instances inst, CostMatrix costMatrix, ClassifierErrorsPlotInstances plotInstances, AbstractOutput classificationOutput, boolean onlySetPriors) throws Exception {
    if (classifier instanceof weka.classifiers.misc.InputMappedClassifier) {
        Instances mappedClassifierHeader = ((weka.classifiers.misc.InputMappedClassifier) classifier).getModelHeader(new Instances(inst, 0));
        if (classificationOutput != null) {
            classificationOutput.setHeader(mappedClassifierHeader);
        }
        if (!onlySetPriors) {
            if (costMatrix != null) {
                eval = new Evaluation(new Instances(mappedClassifierHeader, 0), costMatrix);
            } else {
                eval = new Evaluation(new Instances(mappedClassifierHeader, 0));
            }
        }
        if (!eval.getHeader().equalHeaders(inst)) {
            // When the InputMappedClassifier is loading a model,
            // we need to make a new dataset that maps the training instances to
            // the structure expected by the mapped classifier - this is only
            // to ensure that the structure and priors computed by
            // evaluation object is correct with respect to the mapped classifier
            Instances mappedClassifierDataset = ((weka.classifiers.misc.InputMappedClassifier) classifier).getModelHeader(new Instances(mappedClassifierHeader, 0));
            for (int zz = 0; zz < inst.numInstances(); zz++) {
                Instance mapped = ((weka.classifiers.misc.InputMappedClassifier) classifier).constructMappedInstance(inst.instance(zz));
                mappedClassifierDataset.add(mapped);
            }
            eval.setPriors(mappedClassifierDataset);
            if (!onlySetPriors) {
                if (plotInstances != null) {
                    plotInstances.setInstances(mappedClassifierDataset);
                    plotInstances.setClassifier(classifier);
                    /*
             * int mappedClass =
             * ((weka.classifiers.misc.InputMappedClassifier)classifier
             * ).getMappedClassIndex(); System.err.println("Mapped class index "
             * + mappedClass);
             */
                    plotInstances.setClassIndex(mappedClassifierDataset.classIndex());
                    plotInstances.setEvaluation(eval);
                }
            }
        } else {
            eval.setPriors(inst);
            if (!onlySetPriors) {
                if (plotInstances != null) {
                    plotInstances.setInstances(inst);
                    plotInstances.setClassifier(classifier);
                    plotInstances.setClassIndex(inst.classIndex());
                    plotInstances.setEvaluation(eval);
                }
            }
        }
    } else {
        eval.setPriors(inst);
        if (!onlySetPriors) {
            if (plotInstances != null) {
                plotInstances.setInstances(inst);
                plotInstances.setClassifier(classifier);
                plotInstances.setClassIndex(inst.classIndex());
                plotInstances.setEvaluation(eval);
            }
        }
    }
    return eval;
}
