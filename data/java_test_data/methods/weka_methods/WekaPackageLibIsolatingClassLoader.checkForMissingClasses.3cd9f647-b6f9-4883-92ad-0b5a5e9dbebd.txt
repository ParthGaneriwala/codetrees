protected boolean checkForMissingClasses(Package toCheck, PrintStream... progress) throws Exception {
    boolean result = true;
    Object doNotLoadIfClassNotInstantiable = toCheck.getPackageMetaDataElement(DO_NOT_LOAD_IF_CLASS_NOT_PRESENT_KEY);
    if (doNotLoadIfClassNotInstantiable != null && doNotLoadIfClassNotInstantiable.toString().length() > 0) {
        StringTokenizer tok = new StringTokenizer(doNotLoadIfClassNotInstantiable.toString(), ",");
        while (tok.hasMoreTokens()) {
            String nextT = tok.nextToken().trim();
            try {
                findClass(nextT);
            } catch (Exception ex) {
                for (PrintStream p : progress) {
                    p.println("[WekaPackageLibIsolatingClassLoader] " + toCheck.getName() + " can't be loaded because " + nextT + " can't be instantiated.");
                }
                result = false;
                break;
            }
        }
    }
    if (!result) {
        // grab the message to print to the log (if any)
        Object doNotLoadMessage = toCheck.getPackageMetaDataElement(DO_NOT_LOAD_IF_ENV_VAR_NOT_SET_MESSAGE_KEY);
        if (doNotLoadMessage != null && doNotLoadMessage.toString().length() > 0) {
            for (PrintStream p : progress) {
                String dnlM = doNotLoadMessage.toString();
                try {
                    dnlM = Environment.getSystemWide().substitute(dnlM);
                } catch (Exception e) {
                // quietly ignore
                }
                p.println("[Weka] " + dnlM);
            }
        }
    }
    return result;
}
