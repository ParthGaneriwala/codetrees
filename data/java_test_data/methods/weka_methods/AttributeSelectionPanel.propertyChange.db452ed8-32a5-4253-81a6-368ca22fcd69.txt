@Override
public void propertyChange(PropertyChangeEvent e) {
    if (m_AttributeEvaluatorEditor.getValue() instanceof AttributeEvaluator) {
        if (!(m_AttributeSearchEditor.getValue() instanceof Ranker)) {
            Object backup = m_AttributeEvaluatorEditor.getBackup();
            int result = JOptionPane.showConfirmDialog(null, "You must use use the Ranker search method " + "in order to use\n" + m_AttributeEvaluatorEditor.getValue().getClass().getName() + ".\nShould I select the Ranker search method for you?", "Alert!", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                m_AttributeSearchEditor.setValue(new Ranker());
            } else {
                // restore to what was there previously (if possible)
                if (backup != null) {
                    m_AttributeEvaluatorEditor.setValue(backup);
                }
            }
        }
    } else {
        if (m_AttributeSearchEditor.getValue() instanceof Ranker) {
            Object backup = m_AttributeEvaluatorEditor.getBackup();
            int result = JOptionPane.showConfirmDialog(null, "You must use use a search method that explores \n" + "the space of attribute subsets (such as GreedyStepwise) in " + "order to use\n" + m_AttributeEvaluatorEditor.getValue().getClass().getName() + ".\nShould I select the GreedyStepwise search method for " + "you?\n(you can always switch to a different method afterwards)", "Alert!", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                m_AttributeSearchEditor.setValue(new weka.attributeSelection.GreedyStepwise());
            } else {
                // restore to what was there previously (if possible)
                if (backup != null) {
                    m_AttributeEvaluatorEditor.setValue(backup);
                }
            }
        }
    }
    updateRadioLinks();
    m_StartBut.setEnabled(true);
    // check capabilities...
    Capabilities currentFilter = m_AttributeEvaluatorEditor.getCapabilitiesFilter();
    ASEvaluation evaluator = (ASEvaluation) m_AttributeEvaluatorEditor.getValue();
    Capabilities currentSchemeCapabilities = null;
    if (evaluator != null && currentFilter != null && (evaluator instanceof CapabilitiesHandler)) {
        currentSchemeCapabilities = ((CapabilitiesHandler) evaluator).getCapabilities();
        if (!currentSchemeCapabilities.supportsMaybe(currentFilter) && !currentSchemeCapabilities.supports(currentFilter)) {
            m_StartBut.setEnabled(false);
        }
    }
    repaint();
}
