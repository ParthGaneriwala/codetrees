/**
 * Get a list of user requests
 *
 * @return an <code>Enumeration</code> value
 */
/*
   * public Enumeration enumerateRequests() { Vector newVector = new Vector(0);
   * boolean ok = true; if (m_ioThread == null) { if (m_Loader instanceof
   * FileSourcedConverter) { String temp = ((FileSourcedConverter)
   * m_Loader).retrieveFile().getPath(); Environment env = (m_env == null) ?
   * Environment.getSystemWide() : m_env; try { temp = env.substitute(temp); }
   * catch (Exception ex) {} File tempF = new File(temp); if (!tempF.isFile()) {
   * ok = false; } } String entry = "Start loading"; if (!ok) { entry =
   * "$"+entry; } newVector.addElement(entry); } return newVector.elements(); }
   */
/**
 * Perform the named request
 *
 * @param request a <code>String</code> value
 * @exception IllegalArgumentException if an error occurs
 */
/*
   * public void performRequest(String request) { if
   * (request.compareTo("Start loading") == 0) { startLoading(); } else { throw
   * new IllegalArgumentException(request + " not supported (Loader)"); } }
   */
@Override
public void start() throws Exception {
    startLoading();
    block(true);
}
