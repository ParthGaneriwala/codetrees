protected void createAnchorsHierarchy(Vector<TempNode> anchors, final int numAnchors, final int startIdx, final int endIdx) throws Exception {
    TempNode anchr1 = m_RandomInitialAnchor ? getRandomAnchor(startIdx, endIdx) : getFurthestFromMeanAnchor(startIdx, endIdx);
    // double maxradius = anchr1.radius;
    TempNode amax = anchr1;
    TempNode newAnchor;
    Vector<double[]> anchorDistances = new Vector<double[]>(numAnchors - 1);
    anchors.add(anchr1);
    // creating anchors
    while (anchors.size() < numAnchors) {
        // create new anchor
        newAnchor = new TempNode();
        newAnchor.points = new MyIdxList();
        Instance newpivot = m_Instances.instance(amax.points.getFirst().idx);
        newAnchor.anchor = newpivot;
        newAnchor.idx = amax.points.getFirst().idx;
        setInterAnchorDistances(anchors, newAnchor, anchorDistances);
        if (stealPoints(newAnchor, anchors, anchorDistances)) {
            newAnchor.radius = newAnchor.points.getFirst().distance;
        } else {
            newAnchor.radius = 0.0;
        }
        anchors.add(newAnchor);
        // find new amax
        amax = anchors.elementAt(0);
        for (int i = 1; i < anchors.size(); i++) {
            newAnchor = anchors.elementAt(i);
            if (newAnchor.radius > amax.radius) {
                amax = newAnchor;
            }
        }
    // end for
    }
// end while
}
