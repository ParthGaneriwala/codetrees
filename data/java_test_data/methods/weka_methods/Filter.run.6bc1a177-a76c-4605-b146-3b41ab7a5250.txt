@SuppressWarnings("deprecation")
@Override
public void run() {
    try {
        if (m_trainingSet != null) {
            m_visual.setAnimated();
            // m_visual.setText("Filtering training data...");
            if (m_log != null) {
                m_log.statusMessage(statusMessagePrefix() + "Filtering training data (" + m_trainingSet.relationName() + ")");
            }
            m_Filter.setInputFormat(m_trainingSet);
            Instances filteredData = weka.filters.Filter.useFilter(m_trainingSet, m_Filter);
            // m_visual.setText(oldText);
            m_visual.setStatic();
            EventObject ne;
            if (e instanceof TrainingSetEvent) {
                ne = new TrainingSetEvent(weka.gui.beans.Filter.this, filteredData);
                ((TrainingSetEvent) ne).m_setNumber = ((TrainingSetEvent) e).m_setNumber;
                ((TrainingSetEvent) ne).m_maxSetNumber = ((TrainingSetEvent) e).m_maxSetNumber;
            } else {
                ne = new DataSetEvent(weka.gui.beans.Filter.this, filteredData);
            }
            notifyDataOrTrainingListeners(ne);
        }
    } catch (Exception ex) {
        ex.printStackTrace();
        if (m_log != null) {
            m_log.logMessage("[Filter] " + statusMessagePrefix() + ex.getMessage());
            m_log.statusMessage(statusMessagePrefix() + "ERROR (See log for details).");
        // m_log.statusMessage("Problem filtering: see log for details.");
        }
        // stop all processing
        Filter.this.stop();
    } finally {
        // m_visual.setText(oldText);
        m_visual.setStatic();
        m_state = IDLE;
        if (isInterrupted()) {
            m_trainingSet = null;
            if (m_log != null) {
                m_log.logMessage("[Filter] " + statusMessagePrefix() + " training set interrupted!");
                m_log.statusMessage(statusMessagePrefix() + "INTERRUPTED");
            }
        } else {
            if (m_log != null) {
                m_log.statusMessage(statusMessagePrefix() + "Finished.");
            }
        }
        block(false);
        m_filterThread = null;
    }
}
