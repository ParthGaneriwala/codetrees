protected void performBoostingCV() throws Exception {
    // completed iteration keeps track of the number of iterations that have
    // been
    // performed in every fold (some might stop earlier than others).
    // Best iteration is selected only from these.
    int completedIterations = m_maxIterations;
    Instances allData = new Instances(m_train);
    allData.stratify(m_numFoldsBoosting);
    double[] error = new double[m_maxIterations + 1];
    SimpleLinearRegression[][] backup = m_regressions;
    for (int i = 0; i < m_numFoldsBoosting; i++) {
        // split into training/test data in fold
        Instances train = allData.trainCV(m_numFoldsBoosting, i);
        Instances test = allData.testCV(m_numFoldsBoosting, i);
        // initialize LogitBoost
        m_numRegressions = 0;
        m_regressions = copyRegressions(backup);
        // run LogitBoost iterations
        int iterations = performBoosting(train, test, error, completedIterations);
        if (iterations < completedIterations) {
            completedIterations = iterations;
        }
    }
    // determine iteration with minimum error over the folds
    int bestIteration = getBestIteration(error, completedIterations);
    // rebuild model on all of the training data
    m_numRegressions = 0;
    m_regressions = backup;
    performBoosting(bestIteration);
}
