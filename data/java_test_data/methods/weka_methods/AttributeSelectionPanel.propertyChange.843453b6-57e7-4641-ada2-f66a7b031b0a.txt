@Override
public void propertyChange(PropertyChangeEvent e) {
    if (m_AttributeSearchEditor.getValue() instanceof Ranker) {
        if (!(m_AttributeEvaluatorEditor.getValue() instanceof AttributeEvaluator)) {
            Object backup = m_AttributeSearchEditor.getBackup();
            int result = JOptionPane.showConfirmDialog(null, "You must use use an evaluator that evaluates\n" + "single attributes (such as InfoGain) in order to use\n" + "the Ranker. Should I select the InfoGain evaluator " + "for you?\n" + "(You can always switch to a different method afterwards)", "Alert!", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                m_AttributeEvaluatorEditor.setValue(new weka.attributeSelection.InfoGainAttributeEval());
            } else {
                // restore to what was there previously (if possible)
                if (backup != null) {
                    m_AttributeSearchEditor.setValue(backup);
                }
            }
        }
    } else {
        if (m_AttributeEvaluatorEditor.getValue() instanceof AttributeEvaluator) {
            Object backup = m_AttributeSearchEditor.getBackup();
            int result = JOptionPane.showConfirmDialog(null, "You must use use an evaluator that evaluates\n" + "subsets of attributes (such as CFS) in order to use\n" + m_AttributeEvaluatorEditor.getValue().getClass().getName() + ".\nShould I select the CFS subset evaluator for you?" + "\n(you can always switch to a different method afterwards)", "Alert!", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                m_AttributeEvaluatorEditor.setValue(new weka.attributeSelection.CfsSubsetEval());
            } else {
                // restore to what was there previously (if possible)
                if (backup != null) {
                    m_AttributeSearchEditor.setValue(backup);
                }
            }
        }
    }
    repaint();
}
