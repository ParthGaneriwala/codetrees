public Vector<Integer> findCentralTendencies(double[] predProbs) {
    int centralTValue = 0;
    int currentValue = 0;
    // array to store the list of classes the have the greatest number of classifictions.
    Vector<Integer> centralTClasses;
    // create an array with size of the number of classes.
    centralTClasses = new Vector<Integer>();
    // Go through array, finding the central tendency.
    for (int i = 0; i < predProbs.length; i++) {
        currentValue = (int) predProbs[i];
        // clear vector and add new class to vector array.
        if (currentValue > centralTValue) {
            centralTClasses.clear();
            centralTClasses.addElement(new Integer(i));
            centralTValue = currentValue;
        } else if (currentValue != 0 && currentValue == centralTValue) {
            centralTClasses.addElement(new Integer(i));
        }
    }
    // return all classes that have the greatest number of classifications.
    if (centralTValue != 0) {
        return centralTClasses;
    } else {
        return null;
    }
}
