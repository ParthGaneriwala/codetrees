@Override
public void run() {
    try {
        if (loader instanceof EnvironmentHandler) {
            ((EnvironmentHandler) loader).setEnvironment(m_visLayout.getEnvironment());
            loader.reset();
        }
        m_visLayout.getLogPanel().statusMessage("@!@[KnowledgeFlow]|Sending data to perspective(s)...");
        Instances data = loader.getDataSet();
        if (data != null) {
            m_visLayout.getMainPerspective().getMainApplication().showPerspectivesToolBar();
            /*
               * m_visLayout.getMainPerspective().getMainApplication()
               * .getPerspectiveManager().disableAllPerspectiveTabs();
               */
            if (perspectiveIndex < 0) {
                // send to all
                for (Perspective p : perspectives) {
                    if (p.acceptsInstances()) {
                        p.setInstances(data);
                        m_visLayout.getMainPerspective().getMainApplication().getPerspectiveManager().setEnablePerspectiveTab(p.getPerspectiveID(), true);
                    }
                }
            } else {
                perspectives.get(perspectiveIndex).setInstances(data);
                m_visLayout.getMainPerspective().getMainApplication().getPerspectiveManager().setActivePerspective(perspectives.get(perspectiveIndex).getPerspectiveID());
                m_visLayout.getMainPerspective().getMainApplication().getPerspectiveManager().setEnablePerspectiveTab(perspectives.get(perspectiveIndex).getPerspectiveID(), true);
            }
        }
    } catch (Exception ex) {
        m_visLayout.getMainPerspective().showErrorDialog(ex);
    } finally {
        // re-enable the perspective buttons
        /*
             * m_visLayout.getMainPerspective().getMainApplication()
             * .getPerspectiveManager().enableAllPerspectiveTabs();
             */
        m_perspectiveDataLoadThread = null;
        m_visLayout.getLogPanel().statusMessage("@!@[KnowledgeFlow]|OK");
    }
}
