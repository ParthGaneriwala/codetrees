@Override
public String[] getOptions() {
    ArrayList<String> options = new ArrayList<String>();
    options.add("-F");
    options.add("" + getLossFunction().getSelectedTag().getID());
    if (getOutputProbsForSVM()) {
        options.add("-output-probs");
    }
    options.add("-L");
    options.add("" + getLearningRate());
    options.add("-R");
    options.add("" + getLambda());
    options.add("-E");
    options.add("" + getEpochs());
    if (getUseWordFrequencies()) {
        options.add("-W");
    }
    options.add("-P");
    options.add("" + getPeriodicPruning());
    options.add("-M");
    options.add("" + getMinWordFrequency());
    options.add("-min-coeff");
    options.add("" + getMinAbsoluteCoefficientValue());
    if (getNormalizeDocLength()) {
        options.add("-normalize");
    }
    options.add("-norm");
    options.add("" + getNorm());
    options.add("-lnorm");
    options.add("" + getLNorm());
    if (getLowercaseTokens()) {
        options.add("-lowercase");
    }
    if (getStopwordsHandler() != null) {
        options.add("-stopwords-handler");
        String spec = getStopwordsHandler().getClass().getName();
        if (getStopwordsHandler() instanceof OptionHandler) {
            spec += " " + Utils.joinOptions(((OptionHandler) getStopwordsHandler()).getOptions());
        }
        options.add(spec.trim());
    }
    options.add("-tokenizer");
    String spec = getTokenizer().getClass().getName();
    if (getTokenizer() instanceof OptionHandler) {
        spec += " " + Utils.joinOptions(((OptionHandler) getTokenizer()).getOptions());
    }
    options.add(spec.trim());
    if (getStemmer() != null) {
        options.add("-stemmer");
        spec = getStemmer().getClass().getName();
        if (getStemmer() instanceof OptionHandler) {
            spec += " " + Utils.joinOptions(((OptionHandler) getStemmer()).getOptions());
        }
        options.add(spec.trim());
    }
    Collections.addAll(options, super.getOptions());
    return options.toArray(new String[1]);
}
