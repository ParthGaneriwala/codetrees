private synchronized void checkCompletedRun(int runNum, int maxRunNum, int maxSets) {
    // on for evaluation
    for (int i = 0; i < maxSets; i++) {
        if (m_outputQueues[runNum - 1][i] != null) {
            if (m_outputQueues[runNum - 1][i].getClassifier() != null && m_outputQueues[runNum - 1][i].getTestSet() != null) {
                String msg = "[Classifier] " + statusMessagePrefix() + " dispatching run/set " + runNum + "/" + (i + 1) + " to listeners.";
                if (m_log != null) {
                    m_log.logMessage(msg);
                } else {
                    System.err.println(msg);
                }
                // dispatch this one
                m_outputQueues[runNum - 1][i].setGroupIdentifier(m_currentBatchIdentifier.getTime());
                m_outputQueues[runNum - 1][i].setLabel(getCustomName());
                notifyBatchClassifierListeners(m_outputQueues[runNum - 1][i]);
                // save memory
                m_outputQueues[runNum - 1][i] = null;
                // mark as done
                m_completedSets[runNum - 1][i] = true;
            }
        }
    }
    // scan for completion
    boolean done = true;
    for (int i = 0; i < maxRunNum; i++) {
        for (int j = 0; j < maxSets; j++) {
            if (!m_completedSets[i][j]) {
                done = false;
                break;
            }
        }
        if (!done) {
            break;
        }
    }
    if (done) {
        String msg = "[Classifier] " + statusMessagePrefix() + " last classifier unblocking...";
        if (m_log != null) {
            m_log.logMessage(msg);
        } else {
            System.err.println(msg);
        }
        if (m_log != null) {
            m_log.statusMessage(statusMessagePrefix() + "Finished.");
        }
        // m_outputQueues = null; // free memory
        m_reject = false;
        m_batchStarted = false;
        block(false);
        m_state = IDLE;
    }
}
