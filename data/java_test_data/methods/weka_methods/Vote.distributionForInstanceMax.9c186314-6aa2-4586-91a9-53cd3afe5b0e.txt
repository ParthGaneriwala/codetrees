protected double[] distributionForInstanceMax(Instance instance) throws Exception {
    double[] probs = new double[instance.numClasses()];
    double numPredictions = 0;
    for (int i = 0; i < m_Classifiers.length; i++) {
        double[] dist = getClassifier(i).distributionForInstance(instance);
        if (!instance.classAttribute().isNumeric() || !Utils.isMissingValue(dist[0])) {
            for (int j = 0; j < dist.length; j++) {
                if ((probs[j] < dist[j]) || (numPredictions == 0)) {
                    probs[j] = dist[j];
                }
            }
            numPredictions++;
        }
    }
    for (int i = 0; i < m_preBuiltClassifiers.size(); i++) {
        double[] dist = m_preBuiltClassifiers.get(i).distributionForInstance(instance);
        if (!instance.classAttribute().isNumeric() || !Utils.isMissingValue(dist[0])) {
            for (int j = 0; j < dist.length; j++) {
                if ((probs[j] < dist[j]) || (numPredictions == 0)) {
                    probs[j] = dist[j];
                }
            }
            numPredictions++;
        }
    }
    if (instance.classAttribute().isNumeric()) {
        if (numPredictions == 0) {
            probs[0] = Utils.missingValue();
        }
    } else {
        // Should normalize "probability" distribution
        if (Utils.sum(probs) > 0) {
            Utils.normalize(probs);
        }
    }
    return probs;
}
