public /* @pure@ */
double variance(int attIndex) {
    if (!attribute(attIndex).isNumeric()) {
        throw new IllegalArgumentException("Can't compute variance because attribute is " + "not numeric!");
    }
    double mean = 0;
    double var = Double.NaN;
    double sumWeights = 0;
    for (int i = 0; i < numInstances(); i++) {
        if (!instance(i).isMissing(attIndex)) {
            double weight = instance(i).weight();
            double value = instance(i).value(attIndex);
            if (Double.isNaN(var)) {
                // For the first value the mean can suffer from loss of precision
                // so we treat it separately and make sure the calculation stays accurate
                mean = value;
                sumWeights = weight;
                var = 0;
                continue;
            }
            double delta = weight * (value - mean);
            sumWeights += weight;
            mean += delta / sumWeights;
            var += delta * (value - mean);
        }
    }
    if (sumWeights <= 1) {
        return Double.NaN;
    }
    var /= sumWeights - 1;
    // We don't like negative variance
    if (var < 0) {
        return 0;
    } else {
        return var;
    }
}
