protected synchronized void createWindowMenu() {
    Iterator<Container> iter;
    JMenuItem menuItem;
    int startIndex;
    // remove all existing entries
    jMenuWindows.removeAll();
    // minimize + restore + separator
    menuItem = new JMenuItem("Minimize");
    menuItem.addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent evt) {
            minimizeWindows();
        }
    });
    jMenuWindows.add(menuItem);
    menuItem = new JMenuItem("Restore");
    menuItem.addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent evt) {
            restoreWindows();
        }
    });
    jMenuWindows.add(menuItem);
    jMenuWindows.addSeparator();
    // windows
    startIndex = jMenuWindows.getMenuComponentCount() - 1;
    iter = getWindowList();
    jMenuWindows.setVisible(iter.hasNext());
    while (iter.hasNext()) {
        Container frame = iter.next();
        if (frame instanceof ChildFrameMDI) {
            menuItem = new JMenuItem(((ChildFrameMDI) frame).getTitle());
        } else if (frame instanceof ChildFrameSDI) {
            menuItem = new JMenuItem(((ChildFrameSDI) frame).getTitle());
        }
        insertMenuItem(jMenuWindows, menuItem, startIndex);
        menuItem.setActionCommand(Integer.toString(frame.hashCode()));
        menuItem.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent evt) {
                Container frame = null;
                Iterator<Container> iter = getWindowList();
                while (iter.hasNext()) {
                    frame = iter.next();
                    String hashFrame = Integer.toString(frame.hashCode());
                    if (hashFrame.equals(evt.getActionCommand())) {
                        showWindow(frame);
                        break;
                    }
                }
                showWindow(frame);
            }
        });
    }
}
