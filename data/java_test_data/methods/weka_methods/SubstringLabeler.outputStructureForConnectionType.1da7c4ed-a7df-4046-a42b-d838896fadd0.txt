@Override
public Instances outputStructureForConnectionType(String connectionName) throws WekaException {
    // we output the same structure as we receive + one additional attribute
    if (getStepManager().numIncomingConnections() > 0) {
        for (Map.Entry<String, List<StepManager>> e : getStepManager().getIncomingConnections().entrySet()) {
            if (e.getValue().size() > 0) {
                StepManager incoming = e.getValue().get(0);
                String incomingConnType = e.getKey();
                Instances incomingStruc = getStepManager().getIncomingStructureFromStep(incoming, incomingConnType);
                if (incomingStruc == null) {
                    return null;
                }
                try {
                    SubstringLabelerRules rules = new SubstringLabelerRules(m_matchDetails, m_attName, getConsumeNonMatching(), getNominalBinary(), incomingStruc, ((StepManagerImpl) getStepManager()).stepStatusMessagePrefix(), null, Environment.getSystemWide());
                    return rules.getOutputStructure();
                } catch (Exception ex) {
                    throw new WekaException(ex);
                }
            }
        }
    }
    return null;
}
