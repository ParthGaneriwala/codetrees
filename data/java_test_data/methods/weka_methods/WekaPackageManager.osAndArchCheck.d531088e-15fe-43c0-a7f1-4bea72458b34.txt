public static boolean osAndArchCheck(Package toLoad, PrintStream... progress) {
    // check for OS restrictions
    try {
        Object osNames = toLoad.getPackageMetaDataElement(OS_NAME_KEY);
        Object archNames = toLoad.getPackageMetaDataElement(OS_ARCH_KEY);
        if (osNames != null) {
            boolean osCheck = false;
            String[] osElements = osNames.toString().split(",");
            String thisOs = System.getProperty("os.name");
            if (thisOs != null) {
                for (String osEntry : osElements) {
                    if (thisOs.toLowerCase().contains(osEntry.trim().toLowerCase())) {
                        osCheck = true;
                        break;
                    }
                }
                String thisArch = System.getProperty("os.arch");
                if (osCheck && archNames != null) {
                    String[] archElements = archNames.toString().split(",");
                    if (thisArch != null) {
                        boolean archCheck = false;
                        for (String archEntry : archElements) {
                            if (archEntry.trim().equalsIgnoreCase("32") || archEntry.trim().equalsIgnoreCase("64")) {
                                if (thisArch.toLowerCase().contains(archEntry.trim())) {
                                    archCheck = true;
                                    break;
                                }
                            } else {
                                if (thisArch.trim().equalsIgnoreCase(archEntry.trim())) {
                                    archCheck = true;
                                    break;
                                }
                            }
                        }
                        osCheck = archCheck;
                    }
                }
                if (!osCheck) {
                    for (PrintStream p : progress) {
                        p.println("[WekaPackageManager] Skipping package " + toLoad.getName() + " because the OS/arch (" + thisOs + " " + (thisArch != null ? thisArch : "") + ") does not meet package OS/arch constraints: " + osNames.toString() + " " + (archNames != null ? archNames.toString() : ""));
                    }
                    return false;
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    return true;
}
