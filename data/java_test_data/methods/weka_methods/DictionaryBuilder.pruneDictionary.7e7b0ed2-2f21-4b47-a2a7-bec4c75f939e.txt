protected void pruneDictionary() {
    if (m_periodicPruneRate > 0 && m_count % m_periodicPruneRate == 0) {
        for (Map<String, int[]> m_dictsPerClas : m_dictsPerClass) {
            Iterator<Map.Entry<String, int[]>> entries = m_dictsPerClas.entrySet().iterator();
            while (entries.hasNext()) {
                Map.Entry<String, int[]> entry = entries.next();
                if (entry.getValue()[0] < m_minFrequency) {
                    entries.remove();
                }
            }
        }
    }
}
