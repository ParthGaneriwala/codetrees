public void testRange() {
    ((StringToNominal) m_Filter).setAttributeRange("first-last");
    Instances result = useFilter();
    // Number of attributes and instances shouldn't change
    assertEquals(m_Instances.numAttributes(), result.numAttributes());
    assertEquals(m_Instances.numInstances(), result.numInstances());
    assertEquals("Attribute type should now be NOMINAL", Attribute.NOMINAL, result.attribute(0).type());
    assertEquals("Attribute type should still be NOMINAL", Attribute.NOMINAL, result.attribute(1).type());
    assertEquals("Attribute type should still be NUMERIC", Attribute.NUMERIC, result.attribute(2).type());
    assertEquals("Attribute type should now be NOMINAL", Attribute.NOMINAL, result.attribute(3).type());
    assertEquals("Attribute type should still be NOMINAL", Attribute.NOMINAL, result.attribute(4).type());
    assertEquals("Attribute type should still be NUMERIC", Attribute.NUMERIC, result.attribute(5).type());
    assertEquals("Attribute type should still be DATE", Attribute.DATE, result.attribute(6).type());
    assertEquals(14, result.attribute(0).numValues());
    assertEquals(8, result.attribute(3).numValues());
    for (int i = 0; i < result.numInstances(); i++) {
        assertTrue("Missing values should be preserved", m_Instances.instance(i).isMissing(3) == result.instance(i).isMissing(3));
    }
}
