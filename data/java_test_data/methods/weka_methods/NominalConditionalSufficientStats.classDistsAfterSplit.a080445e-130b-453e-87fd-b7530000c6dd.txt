protected List<Map<String, WeightMass>> classDistsAfterSplit() {
    // att index keys to class distribution
    Map<Integer, Map<String, WeightMass>> splitDists = new HashMap<Integer, Map<String, WeightMass>>();
    for (Map.Entry<String, Object> cls : m_classLookup.entrySet()) {
        String classVal = cls.getKey();
        ValueDistribution attDist = (ValueDistribution) cls.getValue();
        for (Map.Entry<Integer, WeightMass> att : attDist.m_dist.entrySet()) {
            Integer attVal = att.getKey();
            WeightMass attCount = att.getValue();
            Map<String, WeightMass> clsDist = splitDists.get(attVal);
            if (clsDist == null) {
                clsDist = new HashMap<String, WeightMass>();
                splitDists.put(attVal, clsDist);
            }
            WeightMass clsCount = clsDist.get(classVal);
            if (clsCount == null) {
                clsCount = new WeightMass();
                clsDist.put(classVal, clsCount);
            }
            clsCount.m_weight += attCount.m_weight;
        }
    }
    List<Map<String, WeightMass>> result = new LinkedList<Map<String, WeightMass>>();
    for (Map.Entry<Integer, Map<String, WeightMass>> v : splitDists.entrySet()) {
        result.add(v.getValue());
    }
    return result;
}
