protected void performBoostingInfCriterion() throws Exception {
    double bestCriterion = Double.MAX_VALUE;
    int bestIteration = 0;
    int noMin = 0;
    // Variable to keep track of criterion values (AIC)
    double criterionValue = Double.MAX_VALUE;
    // initialize Ys/Fs/ps
    double[][] trainYs = getYs(m_train);
    double[][] trainFs = getFs(m_numericData);
    double[][] probs = getProbs(trainFs);
    int iteration = 0;
    while (iteration < m_maxIterations) {
        // perform single LogitBoost iteration
        boolean foundAttribute = performIteration(iteration, trainYs, trainFs, probs, m_numericData);
        if (foundAttribute) {
            iteration++;
            m_numRegressions = iteration;
        } else {
            // could not fit simple linear regression: stop LogitBoost
            break;
        }
        double numberOfAttributes = m_numParameters + iteration;
        // Fill criterion array values
        criterionValue = 2.0 * negativeLogLikelihood(trainYs, probs) + 2.0 * numberOfAttributes;
        // <m_heuristicStop> iterations
        if (noMin > m_heuristicStop) {
            break;
        }
        if (criterionValue < bestCriterion) {
            bestCriterion = criterionValue;
            bestIteration = iteration;
            noMin = 0;
        } else {
            noMin++;
        }
    }
    m_numRegressions = 0;
    m_regressions = initRegressions();
    performBoosting(bestIteration);
}
