@Override
public Instances getStructure() throws IOException {
    String line;
    int cInt;
    char c;
    int numAtt;
    ArrayList<Attribute> atts;
    int i;
    String relName;
    if (m_sourceReader == null) {
        throw new IOException("No source has been specified");
    }
    if (m_structure == null) {
        m_Buffer = new Vector<double[]>();
        try {
            // determine number of attributes
            numAtt = 0;
            // 8 MB
            int len = 1024 * 1024 * 8;
            char[] cbuf = new char[len];
            int iter = 0;
            String linesplitter = null;
            String[] lines;
            String oldLine = null;
            String read = null;
            while ((cInt = m_sourceReader.read(cbuf, 0, len)) != -1) {
                read = String.valueOf(cbuf, 0, cInt);
                if (oldLine != null) {
                    read = oldLine + read;
                }
                if (linesplitter == null) {
                    if (read.contains("\r\n")) {
                        linesplitter = "\r\n";
                    } else if (read.contains("\n")) {
                        linesplitter = "\n";
                    }
                }
                if (linesplitter != null) {
                    lines = read.split(linesplitter, -1);
                } else {
                    lines = new String[] { read };
                }
                for (int j = 0; j < lines.length - 1; j++) {
                    line = lines[j];
                    m_Buffer.add(libsvmToArray(line));
                    numAtt = determineNumAttributes(line, numAtt);
                }
                oldLine = lines[lines.length - 1];
            }
            // last line?
            if (oldLine != null && oldLine.length() != 0) {
                m_Buffer.add(libsvmToArray(oldLine));
                numAtt = determineNumAttributes(oldLine, numAtt);
            }
            // generate header
            atts = new ArrayList<Attribute>(numAtt);
            for (i = 0; i < numAtt - 1; i++) {
                atts.add(new Attribute("att_" + (i + 1)));
            }
            atts.add(new Attribute("class"));
            if (!m_URL.equals("http://")) {
                relName = m_URL;
            } else {
                relName = m_File;
            }
            m_structure = new Instances(relName, atts, 0);
            m_structure.setClassIndex(m_structure.numAttributes() - 1);
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new IOException("Unable to determine structure as libsvm: " + ex);
        }
    }
    return new Instances(m_structure, 0);
}
