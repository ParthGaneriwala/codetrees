protected static URL getURL(String classpathPart, String pkgname) {
    String urlStr;
    URL result;
    File classpathFile;
    File file;
    JarFile jarfile;
    Enumeration<JarEntry> enm;
    String pkgnameTmp;
    result = null;
    urlStr = null;
    try {
        classpathFile = new File(classpathPart);
        // directory or jar?
        if (classpathFile.isDirectory()) {
            // does the package exist in this directory?
            file = new File(classpathPart + pkgname);
            if (file.exists()) {
                urlStr = "file:" + classpathPart + pkgname;
            }
        } else {
            // is package actually included in jar?
            jarfile = new JarFile(classpathPart);
            enm = jarfile.entries();
            // remove the leading "/"
            pkgnameTmp = pkgname.substring(1);
            while (enm.hasMoreElements()) {
                if (enm.nextElement().toString().startsWith(pkgnameTmp)) {
                    urlStr = "jar:file:" + classpathPart + "!" + pkgname;
                    break;
                }
            }
            jarfile.close();
        }
    } catch (Exception e) {
    // ignore
    }
    // try to generate URL from url string
    if (urlStr != null) {
        try {
            result = new URL(urlStr);
        } catch (Exception e) {
            System.err.println("Trying to create URL from '" + urlStr + "' generates this exception:\n" + e);
            result = null;
        }
    }
    return result;
}
