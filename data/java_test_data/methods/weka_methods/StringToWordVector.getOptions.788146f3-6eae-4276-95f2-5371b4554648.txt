@Override
public String[] getOptions() {
    Vector<String> result = new Vector<String>();
    result.add("-R");
    result.add(getSelectedRange().getRanges());
    if (getInvertSelection()) {
        result.add("-V");
    }
    if (!"".equals(getAttributeNamePrefix())) {
        result.add("-P");
        result.add(getAttributeNamePrefix());
    }
    result.add("-W");
    result.add(String.valueOf(getWordsToKeep()));
    result.add("-prune-rate");
    result.add(String.valueOf(getPeriodicPruning()));
    if (getOutputWordCounts()) {
        result.add("-C");
    }
    if (getTFTransform()) {
        result.add("-T");
    }
    if (getIDFTransform()) {
        result.add("-I");
    }
    result.add("-N");
    result.add("" + m_filterType);
    if (getLowerCaseTokens()) {
        result.add("-L");
    }
    if (getStemmer() != null) {
        result.add("-stemmer");
        String spec = getStemmer().getClass().getName();
        if (getStemmer() instanceof OptionHandler) {
            spec += " " + Utils.joinOptions(((OptionHandler) getStemmer()).getOptions());
        }
        result.add(spec.trim());
    }
    if (getStopwordsHandler() != null) {
        result.add("-stopwords-handler");
        String spec = getStopwordsHandler().getClass().getName();
        if (getStopwordsHandler() instanceof OptionHandler) {
            spec += " " + Utils.joinOptions(((OptionHandler) getStopwordsHandler()).getOptions());
        }
        result.add(spec.trim());
    }
    result.add("-M");
    result.add(String.valueOf(getMinTermFreq()));
    if (getDoNotOperateOnPerClassBasis()) {
        result.add("-O");
    }
    result.add("-tokenizer");
    String spec = getTokenizer().getClass().getName();
    if (getTokenizer() instanceof OptionHandler) {
        spec += " " + Utils.joinOptions(((OptionHandler) getTokenizer()).getOptions());
    }
    result.add(spec.trim());
    if (m_dictionaryFile != null && m_dictionaryFile.toString().length() > 0 && !m_dictionaryFile.toString().equalsIgnoreCase("-- set me --")) {
        result.add("-dictionary");
        result.add(m_dictionaryFile.toString());
        if (getSaveDictionaryInBinaryForm()) {
            result.add("-binary-dict");
        }
    }
    return result.toArray(new String[result.size()]);
}
