protected void sortBasedOnNominalAttribute(int attIndex) {
    // Figure out number of instances for each attribute value
    // and store original list of instances away
    int[] counts = new int[attribute(attIndex).numValues()];
    Instance[] backup = new Instance[numInstances()];
    int j = 0;
    for (Instance inst : this) {
        backup[j++] = inst;
        if (!inst.isMissing(attIndex)) {
            counts[(int) inst.value(attIndex)]++;
        }
    }
    // Indices to figure out where to add instances
    int[] indices = new int[counts.length];
    int start = 0;
    for (int i = 0; i < counts.length; i++) {
        indices[i] = start;
        start += counts[i];
    }
    for (Instance inst : backup) {
        // Use backup here
        if (!inst.isMissing(attIndex)) {
            m_Instances.set(indices[(int) inst.value(attIndex)]++, inst);
        } else {
            m_Instances.set(start++, inst);
        }
    }
}
