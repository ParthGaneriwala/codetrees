@Override
public void actionPerformed(ActionEvent e) {
    if (e.getActionCommand().equals("Submit")) {
        if (m_splitListener != null && m_shapes != null) {
            // then send the split to the listener
            Instances sub_set1 = new Instances(m_plot2D.getMasterPlot().m_plotInstances, 500);
            Instances sub_set2 = new Instances(m_plot2D.getMasterPlot().m_plotInstances, 500);
            if (m_plot2D.getMasterPlot().m_plotInstances != null) {
                for (int noa = 0; noa < m_plot2D.getMasterPlot().m_plotInstances.numInstances(); noa++) {
                    if (!m_plot2D.getMasterPlot().m_plotInstances.instance(noa).isMissing(m_xIndex) && !m_plot2D.getMasterPlot().m_plotInstances.instance(noa).isMissing(m_yIndex)) {
                        if (inSplit(m_plot2D.getMasterPlot().m_plotInstances.instance(noa))) {
                            sub_set1.add(m_plot2D.getMasterPlot().m_plotInstances.instance(noa));
                        } else {
                            sub_set2.add(m_plot2D.getMasterPlot().m_plotInstances.instance(noa));
                        }
                    }
                }
                ArrayList<ArrayList<Double>> tmp = m_shapes;
                cancelShapes();
                m_splitListener.userDataEvent(new VisualizePanelEvent(tmp, sub_set1, sub_set2, m_xIndex, m_yIndex));
            }
        } else if (m_shapes != null && m_plot2D.getMasterPlot().m_plotInstances != null) {
            Instances sub_set1 = new Instances(m_plot2D.getMasterPlot().m_plotInstances, 500);
            int count = 0;
            for (int noa = 0; noa < m_plot2D.getMasterPlot().m_plotInstances.numInstances(); noa++) {
                if (inSplit(m_plot2D.getMasterPlot().m_plotInstances.instance(noa))) {
                    sub_set1.add(m_plot2D.getMasterPlot().m_plotInstances.instance(noa));
                    count++;
                }
            }
            int[] nSizes = null;
            int[] nTypes = null;
            boolean[] connect = null;
            int x = m_xIndex;
            int y = m_yIndex;
            if (m_originalPlot == null) {
                // this sets these instances as the instances
                // to go back to.
                m_originalPlot = m_plot2D.getMasterPlot();
            }
            if (count > 0) {
                nTypes = new int[count];
                nSizes = new int[count];
                connect = new boolean[count];
                count = 0;
                for (int noa = 0; noa < m_plot2D.getMasterPlot().m_plotInstances.numInstances(); noa++) {
                    if (inSplit(m_plot2D.getMasterPlot().m_plotInstances.instance(noa))) {
                        nTypes[count] = m_plot2D.getMasterPlot().m_shapeType[noa];
                        nSizes[count] = m_plot2D.getMasterPlot().m_shapeSize[noa];
                        connect[count] = m_plot2D.getMasterPlot().m_connectPoints[noa];
                        count++;
                    }
                }
            }
            cancelShapes();
            PlotData2D newPlot = new PlotData2D(sub_set1);
            try {
                newPlot.setShapeSize(nSizes);
                newPlot.setShapeType(nTypes);
                newPlot.setConnectPoints(connect);
                m_plot2D.removeAllPlots();
                VisualizePanel.this.addPlot(newPlot);
            } catch (Exception ex) {
                System.err.println(ex);
                ex.printStackTrace();
            }
            try {
                VisualizePanel.this.setXIndex(x);
                VisualizePanel.this.setYIndex(y);
            } catch (Exception er) {
                System.out.println("Error : " + er);
            // System.out.println("Part of user input so had to" +
            // " catch here");
            }
        }
    } else if (e.getActionCommand().equals("Reset")) {
        int x = m_xIndex;
        int y = m_yIndex;
        m_plot2D.removeAllPlots();
        try {
            VisualizePanel.this.addPlot(m_originalPlot);
        } catch (Exception ex) {
            System.err.println(ex);
            ex.printStackTrace();
        }
        try {
            VisualizePanel.this.setXIndex(x);
            VisualizePanel.this.setYIndex(y);
        } catch (Exception er) {
            System.out.println("Error : " + er);
        }
    }
}
