@Override
public String[] getResultNames() {
    int addm = (m_AdditionalMeasures != null) ? m_AdditionalMeasures.length : 0;
    String[] resultNames = new String[RESULT_SIZE + addm + m_numPluginStatistics];
    int current = 0;
    resultNames[current++] = "Number_of_training_instances";
    resultNames[current++] = "Number_of_testing_instances";
    // Sensitive stats - certainty of predictions
    resultNames[current++] = "Mean_absolute_error";
    resultNames[current++] = "Root_mean_squared_error";
    resultNames[current++] = "Relative_absolute_error";
    resultNames[current++] = "Root_relative_squared_error";
    resultNames[current++] = "Correlation_coefficient";
    resultNames[current++] = "Number_unclassified";
    resultNames[current++] = "Percent_unclassified";
    // SF stats
    resultNames[current++] = "SF_prior_entropy";
    resultNames[current++] = "SF_scheme_entropy";
    resultNames[current++] = "SF_entropy_gain";
    resultNames[current++] = "SF_mean_prior_entropy";
    resultNames[current++] = "SF_mean_scheme_entropy";
    resultNames[current++] = "SF_mean_entropy_gain";
    // Timing stats
    resultNames[current++] = "Elapsed_Time_training";
    resultNames[current++] = "Elapsed_Time_testing";
    resultNames[current++] = "UserCPU_Time_training";
    resultNames[current++] = "UserCPU_Time_testing";
    resultNames[current++] = "UserCPU_Time_millis_training";
    resultNames[current++] = "UserCPU_Time_millis_testing";
    // sizes
    resultNames[current++] = "Serialized_Model_Size";
    resultNames[current++] = "Serialized_Train_Set_Size";
    resultNames[current++] = "Serialized_Test_Set_Size";
    // Prediction interval statistics
    resultNames[current++] = "Coverage_of_Test_Cases_By_Regions";
    resultNames[current++] = "Size_of_Predicted_Regions";
    // Classifier defined extras
    resultNames[current++] = "Summary";
    // add any additional measures
    for (int i = 0; i < addm; i++) {
        resultNames[current++] = m_AdditionalMeasures[i];
    }
    for (AbstractEvaluationMetric m : m_pluginMetrics) {
        List<String> statNames = m.getStatisticNames();
        for (String s : statNames) {
            resultNames[current++] = s;
        }
    }
    if (current != RESULT_SIZE + addm + m_numPluginStatistics) {
        throw new Error("ResultNames didn't fit RESULT_SIZE");
    }
    return resultNames;
}
