public final String equalsMsg(Object other) {
    if (other == null) {
        return "Comparing with null object";
    }
    if (!(other.getClass().equals(this.getClass()))) {
        return "Object has wrong class";
    }
    Attribute att = (Attribute) other;
    if (!m_Name.equals(att.m_Name)) {
        return "Names differ: " + m_Name + " != " + att.m_Name;
    }
    if (isNominal() && att.isNominal()) {
        if (((NominalAttributeInfo) m_AttributeInfo).m_Values.size() != ((NominalAttributeInfo) att.m_AttributeInfo).m_Values.size()) {
            return "Different number of labels: " + ((NominalAttributeInfo) m_AttributeInfo).m_Values.size() + " != " + ((NominalAttributeInfo) att.m_AttributeInfo).m_Values.size();
        }
        for (int i = 0; i < ((NominalAttributeInfo) m_AttributeInfo).m_Values.size(); i++) {
            if (!((NominalAttributeInfo) m_AttributeInfo).m_Values.get(i).equals(((NominalAttributeInfo) att.m_AttributeInfo).m_Values.get(i))) {
                return "Labels differ at position " + (i + 1) + ": " + ((NominalAttributeInfo) m_AttributeInfo).m_Values.get(i) + " != " + ((NominalAttributeInfo) att.m_AttributeInfo).m_Values.get(i);
            }
        }
        return null;
    }
    if (isRelationValued() && att.isRelationValued()) {
        return ((RelationalAttributeInfo) m_AttributeInfo).m_Header.equalHeadersMsg(((RelationalAttributeInfo) att.m_AttributeInfo).m_Header);
    }
    if ((type() != att.type())) {
        return "Types differ: " + typeToString(this) + " != " + typeToString(att);
    }
    return null;
}
