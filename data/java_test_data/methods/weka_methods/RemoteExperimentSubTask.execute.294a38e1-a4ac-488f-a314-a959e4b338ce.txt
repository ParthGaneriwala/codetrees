@Override
public void execute() {
    m_experiment = (Experiment) m_serializedExp.getObject();
    // FastVector result = new FastVector();
    m_result = new TaskStatusInfo();
    m_result.setStatusMessage("Running...");
    String goodResult = "(sub)experiment completed successfully";
    String subTaskType;
    if (m_experiment.getRunLower() != m_experiment.getRunUpper()) {
        subTaskType = "(dataset " + ((File) m_experiment.getDatasets().elementAt(0)).getName();
    } else {
        subTaskType = "(exp run # " + m_experiment.getRunLower();
    }
    try {
        System.err.println("Initializing " + subTaskType + ")...");
        m_experiment.initialize();
        System.err.println("Iterating " + subTaskType + ")...");
        // Do not invoke runExperiment(): every exception will be lost
        while (m_experiment.hasMoreIterations()) {
            m_experiment.nextIteration();
        }
        System.err.println("Postprocessing " + subTaskType + ")...");
        m_experiment.postProcess();
    } catch (Exception ex) {
        ex.printStackTrace();
        String badResult = "(sub)experiment " + subTaskType + ") failed : " + ex.toString();
        m_result.setExecutionStatus(TaskStatusInfo.FAILED);
        // m_result.addElement(new Integer(RemoteExperiment.FAILED));
        // m_result.addElement(badResult);
        m_result.setStatusMessage(badResult);
        m_result.setTaskResult("Failed");
        // return m_result;
        return;
    }
    // m_result.addElement(new Integer(RemoteExperiment.FINISHED));
    // m_result.addElement(goodResult);
    m_result.setExecutionStatus(TaskStatusInfo.FINISHED);
    m_result.setStatusMessage(goodResult + " " + subTaskType + ").");
    m_result.setTaskResult("No errors");
// return m_result;
}
