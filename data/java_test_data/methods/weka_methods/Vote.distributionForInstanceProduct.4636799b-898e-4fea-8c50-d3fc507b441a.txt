protected double[] distributionForInstanceProduct(Instance instance) throws Exception {
    double[] probs = new double[instance.numClasses()];
    for (int i = 0; i < probs.length; i++) {
        probs[i] = 1.0;
    }
    int numPredictions = 0;
    for (int i = 0; i < m_Classifiers.length; i++) {
        double[] dist = getClassifier(i).distributionForInstance(instance);
        if (Utils.sum(dist) > 0) {
            for (int j = 0; j < dist.length; j++) {
                probs[j] *= dist[j];
            }
            numPredictions++;
        }
    }
    for (int i = 0; i < m_preBuiltClassifiers.size(); i++) {
        double[] dist = m_preBuiltClassifiers.get(i).distributionForInstance(instance);
        if (Utils.sum(dist) > 0) {
            for (int j = 0; j < dist.length; j++) {
                probs[j] *= dist[j];
            }
            numPredictions++;
        }
    }
    // No predictions?
    if (numPredictions == 0) {
        return new double[instance.numClasses()];
    }
    // Should normalize to get "probabilities"
    if (Utils.sum(probs) > 0) {
        Utils.normalize(probs);
    }
    return probs;
}
