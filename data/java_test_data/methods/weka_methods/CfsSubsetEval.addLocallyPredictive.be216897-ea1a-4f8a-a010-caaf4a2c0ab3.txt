private void addLocallyPredictive(BitSet best_group) {
    int i, j;
    boolean done = false;
    boolean ok = true;
    double temp_best = -1.0;
    float corr;
    j = 0;
    BitSet temp_group = (BitSet) best_group.clone();
    int larger, smaller;
    while (!done) {
        temp_best = -1.0;
        // find best not already in group
        for (i = 0; i < m_numAttribs; i++) {
            if (i > m_classIndex) {
                larger = i;
                smaller = m_classIndex;
            } else {
                smaller = i;
                larger = m_classIndex;
            }
            /*
         * int larger = (i > m_classIndex ? i : m_classIndex); int smaller = (i
         * > m_classIndex ? m_classIndex : i);
         */
            if ((!temp_group.get(i)) && (i != m_classIndex)) {
                if (m_corr_matrix[larger][smaller] == -999) {
                    corr = correlate(i, m_classIndex);
                    m_corr_matrix[larger][smaller] = corr;
                }
                if (m_corr_matrix[larger][smaller] > temp_best) {
                    temp_best = m_corr_matrix[larger][smaller];
                    j = i;
                }
            }
        }
        if (temp_best == -1.0) {
            done = true;
        } else {
            ok = true;
            temp_group.set(j);
            // in group
            for (i = 0; i < m_numAttribs; i++) {
                if (i > j) {
                    larger = i;
                    smaller = j;
                } else {
                    larger = j;
                    smaller = i;
                }
                /*
           * int larger = (i > j ? i : j); int smaller = (i > j ? j : i);
           */
                if (best_group.get(i)) {
                    if (m_corr_matrix[larger][smaller] == -999) {
                        corr = correlate(i, j);
                        m_corr_matrix[larger][smaller] = corr;
                    }
                    if (m_corr_matrix[larger][smaller] > temp_best - m_c_Threshold) {
                        ok = false;
                        break;
                    }
                }
            }
            // if ok then add to best_group
            if (ok) {
                best_group.set(j);
            }
        }
    }
}
