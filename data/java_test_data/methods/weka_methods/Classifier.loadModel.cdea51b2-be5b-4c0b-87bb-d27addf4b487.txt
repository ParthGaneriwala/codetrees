public void loadModel() {
    try {
        if (m_fileChooser == null) {
            // i.e. after de-serialization
            setupFileChooser();
        }
        int returnVal = m_fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File loadFrom = m_fileChooser.getSelectedFile();
            // add extension if necessary
            if (m_fileChooser.getFileFilter() == m_binaryFilter) {
                if (!loadFrom.getName().toLowerCase().endsWith("." + FILE_EXTENSION)) {
                    loadFrom = new File(loadFrom.getParent(), loadFrom.getName() + "." + FILE_EXTENSION);
                }
            } else if (m_fileChooser.getFileFilter() == m_KOMLFilter) {
                if (!loadFrom.getName().toLowerCase().endsWith(KOML.FILE_EXTENSION + FILE_EXTENSION)) {
                    loadFrom = new File(loadFrom.getParent(), loadFrom.getName() + KOML.FILE_EXTENSION + FILE_EXTENSION);
                }
            } else if (m_fileChooser.getFileFilter() == m_XStreamFilter) {
                if (!loadFrom.getName().toLowerCase().endsWith(XStream.FILE_EXTENSION + FILE_EXTENSION)) {
                    loadFrom = new File(loadFrom.getParent(), loadFrom.getName() + XStream.FILE_EXTENSION + FILE_EXTENSION);
                }
            }
            loadFromFile(loadFrom);
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(Classifier.this, "Problem loading classifier.\n" + ex.getMessage(), "Load Model", JOptionPane.ERROR_MESSAGE);
        if (m_log != null) {
            m_log.statusMessage(statusMessagePrefix() + "ERROR: unable to load " + "model (see log).");
            m_log.logMessage("[Classifier] " + statusMessagePrefix() + "Problem loading classifier. " + ex.getMessage());
        }
    }
}
