private void loadClassifiers(Instances data) throws Exception {
    for (String path : m_classifiersToLoad) {
        if (Environment.containsEnvVariables(path)) {
            try {
                path = m_env.substitute(path);
            } catch (Exception ex) {
            }
        }
        File toLoad = new File(path);
        if (!toLoad.isFile()) {
            throw new Exception("\"" + path + "\" does not seem to be a valid file!");
        }
        ObjectInputStream is = new ObjectInputStream(new BufferedInputStream(new FileInputStream(toLoad)));
        Object c = is.readObject();
        if (!(c instanceof Classifier)) {
            is.close();
            throw new Exception("\"" + path + "\" does not contain a classifier!");
        }
        Object header = null;
        header = is.readObject();
        if ((header instanceof Instances) && !(c instanceof InputMappedClassifier)) {
            if (data != null && !data.equalHeaders((Instances) header)) {
                is.close();
                throw new Exception("\"" + path + "\" was trained with data that is " + "of a differnet structure than the incoming training data");
            }
        }
        if (header == null) {
            System.out.println("[Vote] warning: no header instances for \"" + path + "\"");
        }
        is.close();
        addPreBuiltClassifier((Classifier) c);
    }
}
