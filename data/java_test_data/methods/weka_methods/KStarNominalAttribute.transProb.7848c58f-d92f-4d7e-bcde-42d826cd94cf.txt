public double transProb() {
    double transProb = 0.0;
    // in which case it should be in the nominal cache
    if (m_Cache.containsKey(m_Test.value(m_AttrIndex))) {
        KStarCache.TableEntry te = m_Cache.getCacheValues(m_Test.value(m_AttrIndex));
        m_Stop = te.value;
        m_MissingProb = te.pmiss;
    } else {
        generateAttrDistribution();
        // we have to compute the parameters
        if (m_BlendMethod == B_ENTROPY) {
            m_Stop = stopProbUsingEntropy();
        } else {
            // default is B_SPHERE
            m_Stop = stopProbUsingBlend();
        }
        // store the values in cache
        m_Cache.store(m_Test.value(m_AttrIndex), m_Stop, m_MissingProb);
    }
    // we've got our m_Stop, then what?
    if (m_Train.isMissing(m_AttrIndex)) {
        transProb = m_MissingProb;
    } else {
        try {
            transProb = (1.0 - m_Stop) / m_Test.attribute(m_AttrIndex).numValues();
            if ((int) m_Test.value(m_AttrIndex) == (int) m_Train.value(m_AttrIndex)) {
                transProb += m_Stop;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    return transProb;
}
