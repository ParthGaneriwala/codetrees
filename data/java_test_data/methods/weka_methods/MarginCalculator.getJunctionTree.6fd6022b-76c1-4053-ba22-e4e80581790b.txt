// initialize
JunctionTreeNode[] getJunctionTree(Set<Integer>[] cliques, Set<Integer>[] separators, int[] parentCliques, int[] order, BayesNet bayesNet) {
    int nNodes = order.length;
    JunctionTreeNode[] jtns = new JunctionTreeNode[nNodes];
    boolean[] bDone = new boolean[nNodes];
    // create junction tree nodes
    for (int i = 0; i < nNodes; i++) {
        int iNode = order[i];
        if (cliques[iNode] != null) {
            jtns[iNode] = new JunctionTreeNode(cliques[iNode], bayesNet, bDone);
        }
    }
    // create junction tree separators
    for (int i = 0; i < nNodes; i++) {
        int iNode = order[i];
        if (cliques[iNode] != null) {
            JunctionTreeNode parent = null;
            if (parentCliques[iNode] > 0) {
                parent = jtns[parentCliques[iNode]];
                JunctionTreeSeparator jts = new JunctionTreeSeparator(separators[iNode], bayesNet, jtns[iNode], parent);
                jtns[iNode].setParentSeparator(jts);
                jtns[parentCliques[iNode]].addChildClique(jtns[iNode]);
            } else {
            }
        }
    }
    return jtns;
}
