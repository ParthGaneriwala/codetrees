// findBestArcToReverse
void updateCache(int iAttributeHead, int nNrOfAtts, ParentSet parentSet) {
    // update cache entries for arrows heading towards iAttributeHead
    double fBaseScore = calcNodeScore(iAttributeHead);
    int nNrOfParents = parentSet.getNrOfParents();
    for (int iAttributeTail = 0; iAttributeTail < nNrOfAtts; iAttributeTail++) {
        if (iAttributeTail != iAttributeHead) {
            if (!parentSet.contains(iAttributeTail)) {
                // add entries to cache for adding arcs
                if (nNrOfParents < m_nMaxNrOfParents) {
                    Operation oOperation = new Operation(iAttributeTail, iAttributeHead, Operation.OPERATION_ADD);
                    m_Cache.put(oOperation, calcScoreWithExtraParent(iAttributeHead, iAttributeTail) - fBaseScore);
                }
            } else {
                // add entries to cache for deleting arcs
                Operation oOperation = new Operation(iAttributeTail, iAttributeHead, Operation.OPERATION_DEL);
                m_Cache.put(oOperation, calcScoreWithMissingParent(iAttributeHead, iAttributeTail) - fBaseScore);
            }
        }
    }
}
