protected void setTestSet() {
    if (m_SetTestFrame == null) {
        PreprocessPanel preprocessPanel = null;
        if (m_Explorer != null) {
            preprocessPanel = m_Explorer.getPreprocessPanel();
        } else if (getMainApplication() != null) {
            Perspective p = getMainApplication().getPerspectiveManager().getPerspective(PreprocessPanel.PreprocessDefaults.ID);
            preprocessPanel = (PreprocessPanel) p;
        } else {
            throw new IllegalStateException("We don't have access to a " + "PreprocessPanel!");
        }
        final SetInstancesPanel sp = new SetInstancesPanel(true, true, preprocessPanel.m_FileChooser);
        if (m_TestLoader != null) {
            try {
                if (m_TestLoader.getStructure() != null) {
                    sp.setInstances(m_TestLoader.getStructure());
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        sp.addPropertyChangeListener(new PropertyChangeListener() {

            @Override
            public void propertyChange(PropertyChangeEvent e) {
                m_TestLoader = sp.getLoader();
                m_TestClassIndex = sp.getClassIndex();
            }
        });
        // Add propertychangelistener to update m_TestLoader whenever
        // it changes in the settestframe
        m_SetTestFrame = Utils.getWekaJFrame("Test Instances", this);
        // enable Close-Button
        sp.setParentFrame(m_SetTestFrame);
        m_SetTestFrame.getContentPane().setLayout(new BorderLayout());
        m_SetTestFrame.getContentPane().add(sp, BorderLayout.CENTER);
        m_SetTestFrame.pack();
        m_SetTestFrame.setSize(400, 200);
    }
    m_SetTestFrame.setLocationRelativeTo(SwingUtilities.getWindowAncestor(this));
    m_SetTestFrame.setVisible(true);
}
