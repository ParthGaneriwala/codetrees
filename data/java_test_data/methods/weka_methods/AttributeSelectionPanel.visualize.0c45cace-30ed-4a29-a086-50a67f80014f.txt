@SuppressWarnings("unchecked")
protected void visualize(List<String> names, int x, int y) {
    final List<String> selectedNames = names;
    JPopupMenu resultListMenu = new JPopupMenu();
    JMenuItem visMainBuffer = new JMenuItem("View in main window");
    if (selectedNames != null && selectedNames.size() == 1) {
        visMainBuffer.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                m_History.setSingle(selectedNames.get(0));
            }
        });
    } else {
        visMainBuffer.setEnabled(false);
    }
    resultListMenu.add(visMainBuffer);
    JMenuItem visSepBuffer = new JMenuItem("View in separate window");
    if (selectedNames != null && selectedNames.size() == 1) {
        visSepBuffer.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                m_History.openFrame(selectedNames.get(0));
            }
        });
    } else {
        visSepBuffer.setEnabled(false);
    }
    resultListMenu.add(visSepBuffer);
    JMenuItem saveOutput = new JMenuItem("Save result buffer");
    if (selectedNames != null && selectedNames.size() == 1) {
        saveOutput.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                saveBuffer(selectedNames.get(0));
            }
        });
    } else {
        saveOutput.setEnabled(false);
    }
    resultListMenu.add(saveOutput);
    JMenuItem deleteOutput = new JMenuItem("Delete result buffer(s)");
    if (selectedNames != null) {
        deleteOutput.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                m_History.removeResults(selectedNames);
            }
        });
    } else {
        deleteOutput.setEnabled(false);
    }
    resultListMenu.add(deleteOutput);
    ArrayList<Object> o = null;
    if (selectedNames != null && selectedNames.size() == 1) {
        o = (ArrayList<Object>) m_History.getNamedObject(selectedNames.get(0));
    }
    // VisualizePanel temp_vp = null;
    Instances tempTransformed = null;
    ASEvaluation temp_eval = null;
    ASSearch temp_search = null;
    if (o != null) {
        for (int i = 0; i < o.size(); i++) {
            Object temp = o.get(i);
            // if (temp instanceof VisualizePanel) {
            if (temp instanceof Instances) {
                // temp_vp = (VisualizePanel)temp;
                tempTransformed = (Instances) temp;
            }
            if (temp instanceof Vector) {
                temp_eval = (ASEvaluation) ((Vector<Object>) temp).get(0);
                temp_search = (ASSearch) ((Vector<Object>) temp).get(1);
            }
        }
    }
    final ASEvaluation eval = temp_eval;
    final ASSearch search = temp_search;
    // final VisualizePanel vp = temp_vp;
    final Instances ti = tempTransformed;
    JMenuItem visTrans = null;
    if (ti != null) {
        if (ti.relationName().startsWith("AT:")) {
            visTrans = new JMenuItem("Visualize transformed data");
        } else {
            visTrans = new JMenuItem("Visualize reduced data");
        }
        resultListMenu.addSeparator();
    }
    // JMenuItem visTrans = new JMenuItem("Visualize transformed data");
    if (ti != null && visTrans != null) {
        visTrans.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                visualizeTransformedData(ti);
            }
        });
    }
    if (visTrans != null) {
        resultListMenu.add(visTrans);
    }
    JMenuItem saveTrans = null;
    if (ti != null) {
        if (ti.relationName().startsWith("AT:")) {
            saveTrans = new JMenuItem("Save transformed data...");
        } else {
            saveTrans = new JMenuItem("Save reduced data...");
        }
    }
    if (saveTrans != null) {
        saveTrans.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                saveTransformedData(ti);
            }
        });
        resultListMenu.add(saveTrans);
    }
    JMenuItem reApplyConfig = new JMenuItem("Re-apply attribute selection configuration");
    if (eval != null && search != null) {
        reApplyConfig.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                m_AttributeEvaluatorEditor.setValue(eval);
                m_AttributeSearchEditor.setValue(search);
            }
        });
    } else {
        reApplyConfig.setEnabled(false);
    }
    resultListMenu.add(reApplyConfig);
    resultListMenu.show(m_History.getList(), x, y);
}
