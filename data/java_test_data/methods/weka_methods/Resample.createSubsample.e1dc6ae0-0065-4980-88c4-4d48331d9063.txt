protected void createSubsample() {
    Instances data = getInputFormat();
    int numEligible = data.numInstances();
    int sampleSize = (int) (numEligible * m_SampleSizePercent / 100);
    Random random = new Random(m_RandomSeed);
    if (getNoReplacement()) {
        // Set up array of indices
        int[] selected = new int[numEligible];
        for (int j = 0; j < numEligible; j++) {
            selected[j] = j;
        }
        for (int i = 0; i < sampleSize; i++) {
            // Sampling without replacement
            int chosenLocation = random.nextInt(numEligible);
            int chosen = selected[chosenLocation];
            numEligible--;
            selected[chosenLocation] = selected[numEligible];
            selected[numEligible] = chosen;
        }
        // Do we need to invert the selection?
        if (getInvertSelection()) {
            // because they have not been selected
            for (int j = 0; j < numEligible; j++) {
                // No need to copy instance
                push(data.instance(selected[j]), false);
            }
        } else {
            // Take the elements that have been selected
            for (int j = numEligible; j < data.numInstances(); j++) {
                // No need to copy instance
                push(data.instance(selected[j]), false);
            }
        }
    } else {
        // Sampling with replacement
        for (int i = 0; i < sampleSize; i++) {
            // No need to copy instance
            push(data.instance(random.nextInt(numEligible)), false);
        }
    }
}
