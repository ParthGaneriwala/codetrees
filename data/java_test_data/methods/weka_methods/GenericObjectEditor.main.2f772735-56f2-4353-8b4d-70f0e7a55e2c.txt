public static void main(String[] args) {
    try {
        GenericObjectEditor.registerEditors();
        GenericObjectEditor ce = new GenericObjectEditor(true);
        ce.setClassType(weka.classifiers.Classifier.class);
        Object initial = new weka.classifiers.rules.ZeroR();
        if (args.length > 0) {
            // ce.setClassType(Class.forName(args[0]));
            ce.setClassType(WekaPackageClassLoaderManager.forName(args[0]));
            if (args.length > 1) {
                // initial = Class.forName(args[1]).newInstance();
                initial = WekaPackageClassLoaderManager.forName(args[1]).newInstance();
                ce.setValue(initial);
            } else {
                ce.setDefaultValue();
            }
        } else {
            ce.setValue(initial);
        }
        PropertyDialog pd = new PropertyDialog((Frame) null, ce, 100, 100);
        pd.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                PropertyEditor pe = ((PropertyDialog) e.getSource()).getEditor();
                Object c = pe.getValue();
                String options = "";
                if (c instanceof OptionHandler) {
                    options = Utils.joinOptions(((OptionHandler) c).getOptions());
                }
                System.out.println(c.getClass().getName() + " " + options);
                System.exit(0);
            }
        });
        pd.setVisible(true);
    } catch (Exception ex) {
        ex.printStackTrace();
        System.err.println(ex.getMessage());
    }
}
