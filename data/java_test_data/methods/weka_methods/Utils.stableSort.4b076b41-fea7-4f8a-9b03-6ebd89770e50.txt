public static int[] stableSort(double[] array) {
    int[] index = initialIndex(array.length);
    if (array.length > 1) {
        int[] newIndex = new int[array.length];
        int[] helpIndex;
        int numEqual;
        array = array.clone();
        replaceMissingWithMAX_VALUE(array);
        quickSort(array, index, 0, array.length - 1);
        // Make sort stable
        int i = 0;
        while (i < index.length) {
            numEqual = 1;
            for (int j = i + 1; ((j < index.length) && (array[index[i]] == array[index[j]])); j++) {
                numEqual++;
            }
            if (numEqual > 1) {
                helpIndex = new int[numEqual];
                for (int j = 0; j < numEqual; j++) {
                    helpIndex[j] = i + j;
                }
                quickSort(index, helpIndex, 0, numEqual - 1);
                for (int j = 0; j < numEqual; j++) {
                    newIndex[i + j] = index[helpIndex[j]];
                }
                i += numEqual;
            } else {
                newIndex[i] = index[i];
                i++;
            }
        }
        return newIndex;
    } else {
        return index;
    }
}
