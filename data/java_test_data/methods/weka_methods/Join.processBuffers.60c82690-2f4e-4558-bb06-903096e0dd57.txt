protected synchronized Instance processBuffers() {
    if (m_firstBuffer != null && m_secondBuffer != null && m_firstBuffer.size() > 0 && m_secondBuffer.size() > 0) {
        if (m_stopRequested.get()) {
            return null;
        }
        InstanceHolder firstH = m_firstBuffer.peek();
        InstanceHolder secondH = m_secondBuffer.peek();
        Instance first = firstH.m_instance;
        Instance second = secondH.m_instance;
        // System.err.println("Keys " + first.value(0) + " " + second.value(0));
        // try {
        // Thread.sleep(500);
        // } catch (InterruptedException ex) {
        // 
        // }
        int cmp = compare(first, second, firstH, secondH);
        if (cmp == 0) {
            // match on all keys - output joined instance
            Instance newInst = generateMergedInstance(m_firstBuffer.remove(), m_secondBuffer.remove());
            return newInst;
        } else if (cmp < 0) {
            // second is ahead of first - discard rows from first
            do {
                m_firstBuffer.remove();
                if (m_firstBuffer.size() > 0) {
                    firstH = m_firstBuffer.peek();
                    first = firstH.m_instance;
                    cmp = compare(first, second, firstH, secondH);
                }
            } while (cmp < 0 && m_firstBuffer.size() > 0);
        } else {
            // first is ahead of second - discard rows from second
            do {
                m_secondBuffer.remove();
                if (m_secondBuffer.size() > 0) {
                    secondH = m_secondBuffer.peek();
                    second = secondH.m_instance;
                    cmp = compare(first, second, firstH, secondH);
                }
            } while (cmp > 0 && m_secondBuffer.size() > 0);
        }
    }
    return null;
}
