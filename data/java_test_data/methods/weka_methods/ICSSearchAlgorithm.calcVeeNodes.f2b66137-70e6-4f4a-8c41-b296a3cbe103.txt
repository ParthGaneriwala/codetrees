/* next */
void calcVeeNodes(boolean[][] edges, boolean[][] arrows, SeparationSet[][] sepsets) {
    // start with complete empty graph
    for (int iNode1 = 0; iNode1 < maxn(); iNode1++) {
        for (int iNode2 = 0; iNode2 < maxn(); iNode2++) {
            arrows[iNode1][iNode2] = false;
        }
    }
    for (int iNode1 = 0; iNode1 < maxn() - 1; iNode1++) {
        for (int iNode2 = iNode1 + 1; iNode2 < maxn(); iNode2++) {
            if (!edges[iNode1][iNode2]) {
                /* i nonadj j */
                for (int iNode3 = 0; iNode3 < maxn(); iNode3++) {
                    if ((iNode3 != iNode1 && iNode3 != iNode2 && edges[iNode1][iNode3] && edges[iNode2][iNode3]) & (!sepsets[iNode1][iNode2].contains(iNode3))) {
                        arrows[iNode1][iNode3] = true;
                        /* add arc i->k */
                        arrows[iNode2][iNode3] = true;
                    /* add arc j->k */
                    }
                }
            }
        }
    }
}
