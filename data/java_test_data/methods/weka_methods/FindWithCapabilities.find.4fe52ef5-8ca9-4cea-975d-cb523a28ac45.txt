public Vector<String> find() {
    Vector<String> list;
    int i;
    Class<?> cls;
    Object obj;
    CapabilitiesHandler handler;
    boolean fits;
    Capabilities caps;
    m_Matches = new Vector<String>();
    m_Misses = new Vector<String>();
    list = ClassDiscovery.find(m_Superclass, m_Packages.toArray(new String[m_Packages.size()]));
    for (i = 0; i < list.size(); i++) {
        try {
            // cls = Class.forName(list.get(i));
            cls = WekaPackageClassLoaderManager.forName(list.get(i));
            // obj = cls.newInstance();
            obj = WekaPackageClassLoaderManager.objectForName(list.get(i));
            // exclude itself
            if (cls == this.getClass()) {
                continue;
            }
            // really a CapabilitiesHandler?
            if (!(obj instanceof CapabilitiesHandler)) {
                continue;
            }
            // check capabilities enumeration
            handler = (CapabilitiesHandler) obj;
            caps = handler.getCapabilities();
            fits = true;
            for (Capability cap : Capability.values()) {
                if (m_Capabilities.handles(cap)) {
                    if (!(caps.handles(cap))) {
                        fits = false;
                        break;
                    }
                }
            }
            if (!fits) {
                m_Misses.add(list.get(i));
                continue;
            }
            // check "not" list
            for (Capability cap : Capability.values()) {
                if (m_NotCapabilities.handles(cap)) {
                    if ((caps.handles(cap))) {
                        fits = false;
                        break;
                    }
                }
            }
            if (!fits) {
                m_Misses.add(list.get(i));
                continue;
            }
            // other stuff
            if (caps.getMinimumNumberInstances() > m_Capabilities.getMinimumNumberInstances()) {
                m_Misses.add(list.get(i));
                continue;
            }
            // matches all criteria!
            m_Matches.add(list.get(i));
        } catch (Exception e) {
        // ignore
        }
    }
    return m_Matches;
}
