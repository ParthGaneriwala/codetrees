@Override
public String[] getOptions() {
    Vector<String> options = new Vector<String>();
    if (getUseAverage()) {
        options.add("-A");
    }
    options.add("-W");
    options.add(getIterativeClassifier().getClass().getName());
    options.add("-L");
    options.add("" + getLookAheadIterations());
    options.add("-P");
    options.add("" + getPoolSize());
    options.add("-E");
    options.add("" + getNumThreads());
    options.add("-I");
    options.add("" + getStepSize());
    options.add("-F");
    options.add("" + getNumFolds());
    options.add("-R");
    options.add("" + getNumRuns());
    options.add("-percentage");
    options.add("" + getSplitPercentage());
    if (getPreserveOrderInPercentageSplitEvaluation()) {
        options.add("-order");
    }
    options.add("-metric");
    options.add(getEvaluationMetric().getSelectedTag().getIDStr());
    if (getClassValueIndex() >= 0) {
        options.add("-class-value-index");
        options.add("" + getClassValueIndex());
    }
    Collections.addAll(options, super.getOptions());
    String[] classifierOptions = ((OptionHandler) m_IterativeClassifier).getOptions();
    if (classifierOptions.length > 0) {
        options.add("--");
        Collections.addAll(options, classifierOptions);
    }
    return options.toArray(new String[0]);
}
