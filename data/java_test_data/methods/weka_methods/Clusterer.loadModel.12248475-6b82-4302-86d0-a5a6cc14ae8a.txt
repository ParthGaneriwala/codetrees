public void loadModel() {
    try {
        if (m_fileChooser == null) {
            // i.e. after de-serialization
            m_fileChooser = new WekaFileChooser(new File(System.getProperty("user.dir")));
            ExtensionFileFilter ef = new ExtensionFileFilter("model", "Serialized weka clusterer");
            m_fileChooser.setFileFilter(ef);
        }
        int returnVal = m_fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File loadFrom = m_fileChooser.getSelectedFile();
            ObjectInputStream is = new ObjectInputStream(new BufferedInputStream(new FileInputStream(loadFrom)));
            // try and read the model
            weka.clusterers.Clusterer temp = (weka.clusterers.Clusterer) is.readObject();
            // Update name and icon
            setClusterer(temp);
            // try and read the header (if present)
            try {
                m_trainingSet = (Instances) is.readObject();
            } catch (Exception ex) {
            // quietly ignore
            }
            is.close();
            if (m_log != null) {
                m_log.logMessage("[Clusterer] Loaded clusterer: " + m_Clusterer.getClass().toString());
            }
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(Clusterer.this, "Problem loading classifier.\n", "Load Model", JOptionPane.ERROR_MESSAGE);
        if (m_log != null) {
            m_log.logMessage("[Clusterer] Problem loading classifier. " + ex.getMessage());
        }
    }
}
