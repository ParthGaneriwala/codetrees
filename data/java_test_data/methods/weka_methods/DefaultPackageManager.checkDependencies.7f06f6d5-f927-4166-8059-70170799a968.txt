protected static boolean checkDependencies(PackageConstraint toCheck, Map<String, Dependency> lookup, Map<String, List<Dependency>> conflicts) throws Exception {
    boolean ok = true;
    // get the dependencies for the package to check
    List<Dependency> deps = toCheck.getPackage().getDependencies();
    for (Dependency p : deps) {
        String depName = p.getTarget().getPackage().getPackageMetaDataElement("PackageName").toString();
        if (!lookup.containsKey(depName)) {
            // just add this package to the lookup
            lookup.put(depName, p);
            // check its dependencies
            ok = checkDependencies(p.getTarget(), lookup, conflicts);
        } else {
            // we have to see if the version number for this package is compatible
            // with the one already in the lookup
            Dependency checkAgainst = lookup.get(depName);
            PackageConstraint result = checkAgainst.getTarget().checkConstraint(p.getTarget());
            if (result != null) {
                checkAgainst.setTarget(result);
                lookup.put(depName, checkAgainst);
            } else {
                // there is a conflict here
                List<Dependency> conflictList = conflicts.get(depName);
                conflictList.add(p);
                ok = false;
            }
        }
    }
    return ok;
}
