protected void updateSettings() {
    File initialDir = getMainApplication().getApplicationSettings().getSetting(getPerspectiveID(), PreprocessDefaults.INITIAL_DIR_KEY, PreprocessDefaults.INITIAL_DIR, Environment.getSystemWide());
    if (Environment.getSystemWide().containsEnvVariables(initialDir.toString())) {
        String initDir = initialDir.toString();
        try {
            initDir = Environment.getSystemWide().substitute(initDir);
            initialDir = new File(initDir);
        } catch (Exception ex) {
        }
    }
    m_FileChooser.setCurrentDirectory(initialDir);
    if (!m_initialSettingsSet) {
        // only want to set the preferred starting filter once!
        Filter toUse = getMainApplication().getApplicationSettings().getSetting(getPerspectiveID(), PreprocessDefaults.FILTER_KEY, PreprocessDefaults.FILTER, Environment.getSystemWide());
        m_FilterEditor.setValue(toUse);
        m_UndoBut.setEnabled(false);
        m_initialSettingsSet = true;
    }
    /*
     * m_UndoBut.setEnabled(getMainApplication().getApplicationSettings()
     * .getSetting(PreprocessDefaults.ID, PreprocessDefaults.ENABLE_UNDO_KEY,
     * PreprocessDefaults.ENABLE_UNDO, Environment.getSystemWide()));
     */
    boolean sendToAll = getMainApplication().getApplicationSettings().getSetting(getPerspectiveID(), PreprocessDefaults.ALWAYS_SEND_INSTANCES_TO_ALL_KEY, PreprocessDefaults.ALWAYS_SEND_INSTANCES_TO_ALL, Environment.getSystemWide());
    if (sendToAll && getInstances() != null) {
        // check to see if any perspectives that might now be visible need
        // instances to be set (assume that if they are not okToBeActive() then
        // they need the current set of instances
        List<Perspective> visiblePerspectives = getMainApplication().getPerspectiveManager().getVisiblePerspectives();
        for (Perspective p : visiblePerspectives) {
            if (!p.okToBeActive() && p.acceptsInstances()) {
                p.setInstances(getInstances());
            }
            if (p.okToBeActive()) {
                getMainApplication().getPerspectiveManager().setEnablePerspectiveTab(p.getPerspectiveID(), true);
            }
        }
    }
    if (m_sendToPerspective != null) {
        m_sendToPerspective.setEnabled(!sendToAll && getInstances() != null);
    }
}
