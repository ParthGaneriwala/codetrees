protected void drawArrow(Graphics g, int x1, int y1, int x2, int y2) {
    if (x1 == x2) {
        if (y1 < y2) {
            g.drawLine(x2, y2, x2 + 4, y2 - 8);
            g.drawLine(x2, y2, x2 - 4, y2 - 8);
        } else {
            g.drawLine(x2, y2, x2 + 4, y2 + 8);
            g.drawLine(x2, y2, x2 - 4, y2 + 8);
        }
    } else {
        // theta=line's angle from base, beta=angle of arrow's side from line
        double hyp = 0, base = 0, perp = 0, theta, beta;
        int x3 = 0, y3 = 0;
        if (x2 < x1) {
            base = x1 - x2;
            hyp = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
            theta = Math.acos(base / hyp);
        } else {
            // x1>x2 as we already checked x1==x2 before
            base = x1 - x2;
            hyp = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
            theta = Math.acos(base / hyp);
        }
        beta = 30 * Math.PI / 180;
        // System.out.println("Original base "+base+" perp "+perp+" hyp "+hyp+
        // "\ntheta "+theta+" beta "+beta);
        hyp = 8;
        base = Math.cos(theta - beta) * hyp;
        perp = Math.sin(theta - beta) * hyp;
        x3 = (int) (x2 + base);
        if (y1 < y2) {
            y3 = (int) (y2 - perp);
        } else {
            y3 = (int) (y2 + perp);
        }
        // System.out.println("Drawing 1 from "+x2+","+y2+" to "+x3+","+y3+
        // " x1,y1 is "+x1+","+y1+" base "+base+
        // " perp "+perp+" cos(theta-beta) "+
        // Math.cos(theta-beta));
        g.drawLine(x2, y2, x3, y3);
        base = Math.cos(theta + beta) * hyp;
        perp = Math.sin(theta + beta) * hyp;
        x3 = (int) (x2 + base);
        if (y1 < y2) {
            y3 = (int) (y2 - perp);
        } else {
            y3 = (int) (y2 + perp);
        }
        // System.out.println("Drawing 2 from "+x2+","+y2+" to "+x3+","+y3+
        // " x1,y1 is "+x1+","+y1+" base "+base+
        // " perp "+perp);
        g.drawLine(x2, y2, x3, y3);
    }
}
