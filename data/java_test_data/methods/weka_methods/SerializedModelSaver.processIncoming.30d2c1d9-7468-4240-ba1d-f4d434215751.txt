@Override
public void processIncoming(Data data) throws WekaException {
    Object modelToSave = null;
    Instances modelHeader = null;
    Integer setNum = null;
    Integer maxSetNum = null;
    if (data.getConnectionName().equals(StepManager.CON_INCREMENTAL_CLASSIFIER)) {
        if (m_incrementalHeader == null && !getStepManager().isStreamFinished(data)) {
            m_incrementalHeader = ((Instance) data.getPayloadElement(StepManager.CON_AUX_DATA_TEST_INSTANCE)).dataset();
        }
        if (getStepManager().isStreamFinished(data) || (m_incrementalSaveSchedule > 0 && m_counter % m_incrementalSaveSchedule == 0 && m_counter > 0)) {
            modelToSave = (weka.classifiers.Classifier) data.getPayloadElement(StepManager.CON_INCREMENTAL_CLASSIFIER);
            modelHeader = m_incrementalHeader;
        }
    } else {
        modelToSave = data.getPayloadElement(data.getConnectionName());
        modelHeader = (Instances) data.getPayloadElement(StepManager.CON_AUX_DATA_TRAININGSET);
        setNum = (Integer) data.getPayloadElement(StepManager.CON_AUX_DATA_SET_NUM);
        maxSetNum = (Integer) data.getPayloadElement(StepManager.CON_AUX_DATA_MAX_SET_NUM);
        if (modelHeader == null) {
            modelHeader = (Instances) data.getPayloadElement(StepManager.CON_AUX_DATA_TESTSET);
        }
    }
    if (modelToSave != null) {
        if (modelToSave instanceof UpdateableBatchProcessor) {
            try {
                // make sure model cleans up before saving
                ((UpdateableBatchProcessor) modelToSave).batchFinished();
            } catch (Exception ex) {
                throw new WekaException(ex);
            }
        }
        if (modelHeader != null) {
            modelHeader = new Instances(modelHeader, 0);
        }
        getStepManager().processing();
        String prefix = getStepManager().environmentSubstitute(m_filenamePrefix);
        String relationName = m_includeRelationName && modelHeader != null ? modelHeader.relationName() : "";
        String setSpec = maxSetNum != null && setNum != null ? "_" + setNum + "_" + maxSetNum + "_" : "";
        String modelName = modelToSave.getClass().getCanonicalName();
        modelName = modelName.substring(modelName.lastIndexOf(".") + 1, modelName.length());
        String filename = "" + prefix + relationName + setSpec + modelName;
        filename = sanitizeFilename(filename);
        String dirName = getStepManager().environmentSubstitute(m_directory.toString());
        File tempFile = new File(dirName);
        filename = tempFile.getAbsolutePath() + File.separator + filename;
        getStepManager().logBasic("Saving model " + modelToSave.getClass().getCanonicalName() + " to " + filename + ".model");
        getStepManager().statusMessage("Saving model: " + modelToSave.getClass().getCanonicalName());
        ObjectOutputStream oos = null;
        try {
            oos = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(new File(filename + ".model"))));
            oos.writeObject(modelToSave);
            if (modelHeader != null) {
                oos.writeObject(modelHeader);
            }
            oos.close();
        } catch (Exception ex) {
            throw new WekaException(ex);
        } finally {
            if (data.getConnectionName() != StepManager.CON_INCREMENTAL_CLASSIFIER || getStepManager().isStreamFinished(data)) {
                getStepManager().finished();
            }
            if (oos != null) {
                try {
                    oos.close();
                } catch (Exception ex) {
                    throw new WekaException(ex);
                }
            }
        }
    }
    m_counter++;
}
