private void setOutputFormat() {
    Instances newData;
    ArrayList<Attribute> newAtts;
    ArrayList<String> newVals;
    // Compute new attributes
    newAtts = new ArrayList<Attribute>(getInputFormat().numAttributes());
    for (int j = 0; j < getInputFormat().numAttributes(); j++) {
        Attribute att = getInputFormat().attribute(j);
        if (j != m_AttIndex.getIndex()) {
            newAtts.add((Attribute) att.copy());
        } else {
            // Compute list of attribute values
            newVals = new ArrayList<String>(att.numValues() - 1);
            for (int i = 0; i < att.numValues(); i++) {
                boolean inMergeList = false;
                if (att.value(i).equalsIgnoreCase(m_Label)) {
                    // don't want to add this one.
                    inMergeList = true;
                } else {
                    inMergeList = m_MergeRange.isInRange(i);
                }
                if (!inMergeList) {
                    // add it.
                    newVals.add(att.value(i));
                }
            }
            newVals.add(m_Label);
            Attribute newAtt = new Attribute(att.name(), newVals);
            newAtt.setWeight(getInputFormat().attribute(j).weight());
            newAtts.add(newAtt);
        }
    }
    // Construct new header
    newData = new Instances(getInputFormat().relationName(), newAtts, 0);
    newData.setClassIndex(getInputFormat().classIndex());
    setOutputFormat(newData);
}
