protected Map<String, Object> attributeValuesToMap(Instance instance) {
    Map<String, Object> result;
    result = new HashMap<>();
    m_Attributes.setUpper(instance.numAttributes() - 1);
    for (int i = 0; i < instance.numAttributes(); i++) {
        if (m_Attributes.isInRange(i) && i != instance.classIndex()) {
            switch(instance.attribute(i).type()) {
                case Attribute.NOMINAL:
                case Attribute.STRING:
                case Attribute.RELATIONAL:
                case Attribute.DATE:
                    result.put(instance.attribute(i).name(), instance.stringValue(i));
                    break;
                case Attribute.NUMERIC:
                    result.put(instance.attribute(i).name(), instance.value(i));
                    break;
                default:
                    throw new IllegalStateException("Unhandled attribute type for attribute '" + instance.attribute(i).name() + ": " + Attribute.typeToString(instance.attribute(i).type()));
            }
        }
    }
    return result;
}
