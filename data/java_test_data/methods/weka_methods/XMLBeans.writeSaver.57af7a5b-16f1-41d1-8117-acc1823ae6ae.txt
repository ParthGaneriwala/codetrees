public Element writeSaver(Element parent, Object o, String name) throws Exception {
    Element node;
    weka.core.converters.Saver saver;
    String prefix;
    String dir;
    boolean known;
    // for debugging only
    if (DEBUG) {
        trace(new Throwable(), name);
    }
    m_CurrentNode = parent;
    saver = (weka.core.converters.Saver) o;
    node = addElement(parent, name, saver.getClass().getName(), false);
    known = true;
    prefix = "";
    dir = "";
    // file
    if (saver instanceof weka.core.converters.AbstractFileSaver) {
        ((weka.core.converters.AbstractFileSaver) saver).retrieveFile();
        prefix = ((weka.core.converters.AbstractFileSaver) saver).filePrefix();
        dir = ((weka.core.converters.AbstractFileSaver) saver).retrieveDir();
        // Replace any windows file separators with forward slashes (Java under
        // windows can
        // read paths with forward slashes (apparantly)
        dir = dir.replace('\\', '/');
    } else {
        known = false;
    }
    if (!known) {
        System.out.println("WARNING: unknown saver class '" + saver.getClass().getName() + "' - cannot retrieve file!");
    }
    Boolean relativeB = null;
    if (saver instanceof weka.core.converters.FileSourcedConverter) {
        boolean relative = ((weka.core.converters.FileSourcedConverter) saver).getUseRelativePath();
        relativeB = new Boolean(relative);
    }
    // if ( (file == null) || (file.isDirectory()) ) {
    invokeWriteToXML(node, "", VAL_FILE);
    invokeWriteToXML(node, dir, VAL_DIR);
    invokeWriteToXML(node, prefix, VAL_PREFIX);
    if (relativeB != null) {
        invokeWriteToXML(node, relativeB.toString(), VAL_RELATIVE_PATH);
    }
    if (saver instanceof weka.core.OptionHandler) {
        String[] opts = ((weka.core.OptionHandler) saver).getOptions();
        invokeWriteToXML(node, opts, VAL_OPTIONS);
    }
    return node;
}
