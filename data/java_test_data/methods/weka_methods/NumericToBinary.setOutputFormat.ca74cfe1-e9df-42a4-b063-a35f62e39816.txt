private void setOutputFormat() {
    ArrayList<Attribute> newAtts;
    int newClassIndex;
    StringBuffer attributeName;
    Instances outputFormat;
    ArrayList<String> vals;
    m_Cols.setUpper(getInputFormat().numAttributes() - 1);
    // Compute new attributes
    newClassIndex = getInputFormat().classIndex();
    newAtts = new ArrayList<Attribute>();
    for (int j = 0; j < getInputFormat().numAttributes(); j++) {
        Attribute att = getInputFormat().attribute(j);
        if ((j == newClassIndex) || (!att.isNumeric()) || !m_Cols.isInRange(j)) {
            // Not necessary to make a copy because index does not change
            newAtts.add(att);
        } else {
            attributeName = new StringBuffer(att.name() + "_binarized");
            vals = new ArrayList<String>(2);
            vals.add("0");
            vals.add("1");
            Attribute a = new Attribute(attributeName.toString(), vals);
            a.setWeight(att.weight());
            newAtts.add(a);
        }
    }
    outputFormat = new Instances(getInputFormat().relationName(), newAtts, 0);
    outputFormat.setClassIndex(newClassIndex);
    setOutputFormat(outputFormat);
}
