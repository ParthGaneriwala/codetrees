public Matrix sqrt() {
    EigenvalueDecomposition evd;
    Matrix s;
    Matrix v;
    Matrix d;
    Matrix result;
    Matrix a;
    Matrix b;
    int i;
    int n;
    result = null;
    // eigenvalue decomp.
    // [V, D] = eig(A) with A = this
    evd = this.eig();
    v = evd.getV();
    d = evd.getD();
    // S = sqrt of cells of D
    s = new Matrix(d.getRowDimension(), d.getColumnDimension());
    for (i = 0; i < s.getRowDimension(); i++) {
        for (n = 0; n < s.getColumnDimension(); n++) {
            s.set(i, n, StrictMath.sqrt(d.get(i, n)));
        }
    }
    // to calculate:
    // result = V*S/V
    // 
    // with X = B/A
    // and B/A = (A'\B')'
    // and V=A and V*S=B
    // we get
    // result = (V'\(V*S)')'
    // 
    // A*X = B
    // X = A\B
    // which is
    // X = A.solve(B)
    // 
    // with A=V' and B=(V*S)'
    // we get
    // X = V'.solve((V*S)')
    // or
    // result = X'
    // 
    // which is in full length
    // result = (V'.solve((V*S)'))'
    a = v.inverse();
    b = v.times(s).inverse();
    v = null;
    d = null;
    evd = null;
    s = null;
    result = a.solve(b).inverse();
    return result;
}
