private void computeResponses(double[] incomingInst, double[] incomingParamVector, double[] responses) throws Exception {
    for (int i = 0; i < responses.length; i++) {
        for (int j = 0; j < m_parameterList.size(); j++) {
            // a row of the parameter matrix should have all non-null entries
            // except for the last class (in the case of classification) which
            // should have just an intercept of 0. Need to handle the case where
            // no intercept has been defined in the pmml file for the last class
            PCell p = m_paramMatrix[i][j];
            if (p == null) {
                responses[i] += 0.0 * incomingParamVector[j];
            } else {
                responses[i] += incomingParamVector[j] * p.m_beta;
            }
        }
    }
    switch(m_modelType) {
        case MULTINOMIALLOGISTIC:
            computeProbabilitiesMultinomialLogistic(responses);
            break;
        case REGRESSION:
            // nothing to be done
            break;
        case GENERALLINEAR:
        case GENERALIZEDLINEAR:
            if (m_linkFunction != LinkFunction.NONE) {
                computeResponseGeneralizedLinear(incomingInst, responses);
            } else {
                throw new Exception("[GeneralRegression] no link function specified!");
            }
            break;
        case ORDINALMULTINOMIAL:
            if (m_cumulativeLinkFunction != CumulativeLinkFunction.NONE) {
                computeResponseOrdinalMultinomial(incomingInst, responses);
            } else {
                throw new Exception("[GeneralRegression] no cumulative link function specified!");
            }
            break;
        default:
            throw new Exception("[GeneralRegression] unknown model type");
    }
}
