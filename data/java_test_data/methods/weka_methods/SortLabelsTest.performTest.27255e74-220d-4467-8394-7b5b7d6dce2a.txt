protected Instances performTest() {
    Instances icopy = new Instances(m_Instances);
    Instances result = null;
    try {
        m_Filter.setInputFormat(icopy);
    } catch (Exception ex) {
        ex.printStackTrace();
        fail("Exception thrown on setInputFormat(): \n" + ex.getMessage());
    }
    try {
        result = Filter.useFilter(icopy, m_Filter);
        assertNotNull(result);
    } catch (Exception ex) {
        ex.printStackTrace();
        fail("Exception thrown on useFilter(): \n" + ex.getMessage());
    }
    assertEquals("Number of attributes", icopy.numAttributes(), result.numAttributes());
    assertEquals("Number of instances", icopy.numInstances(), m_Instances.numInstances());
    for (int i = 0; i < result.numAttributes(); i++) {
        // test number of values
        assertEquals("Number of values differ for attribute #" + (i + 1), icopy.attribute(i).numValues(), result.attribute(i).numValues());
        // test values
        HashSet<String> valuesOriginal = new HashSet<String>();
        HashSet<String> valuesResult = new HashSet<String>();
        for (int n = 0; n < icopy.attribute(i).numValues(); n++) {
            valuesOriginal.add(icopy.attribute(i).value(n));
            valuesResult.add(result.attribute(i).value(n));
        }
        assertEquals("Values differ for attribute #" + (i + 1), valuesOriginal, valuesResult);
    }
    return result;
}
