@Override
public String toString() {
    if (m_Classifiers == null) {
        return "RandomForest: No model built yet.";
    }
    StringBuilder buffer = new StringBuilder("RandomForest\n\n");
    buffer.append(super.toString());
    if (getComputeAttributeImportance()) {
        try {
            double[] nodeCounts = new double[m_data.numAttributes()];
            double[] impurityScores = computeAverageImpurityDecreasePerAttribute(nodeCounts);
            int[] sortedIndices = Utils.sort(impurityScores);
            buffer.append("\n\nAttribute importance based on average impurity decrease " + "(and number of nodes using that attribute)\n\n");
            for (int i = sortedIndices.length - 1; i >= 0; i--) {
                int index = sortedIndices[i];
                if (index != m_data.classIndex()) {
                    buffer.append(Utils.doubleToString(impurityScores[index], 10, getNumDecimalPlaces())).append(" (").append(Utils.doubleToString(nodeCounts[index], 6, 0)).append(")  ").append(m_data.attribute(index).name()).append("\n");
                }
            }
        } catch (WekaException ex) {
        // ignore
        }
    }
    return buffer.toString();
}
