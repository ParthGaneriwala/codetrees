public String createExperimentIndexEntry(ResultProducer rp) throws Exception {
    if (m_Debug) {
        System.err.println("Creating experiment index entry...");
    }
    // Execute compound transaction
    int numRows = 0;
    // Workaround for MySQL (doesn't support transactions)
    /*
     * if (m_Connection.getMetaData().getDriverName().
     * equals("Mark Matthews' MySQL Driver")) {
     * m_Statement.execute("LOCK TABLES " + EXP_INDEX_TABLE + " WRITE");
     * System.err.println("LOCKING TABLE"); } else {
     */
    // }
    // Get the number of rows
    String query = "SELECT COUNT(*) FROM " + EXP_INDEX_TABLE;
    ResultSet rs = select(query);
    if (m_Debug) {
        System.err.println("...getting number of rows");
    }
    if (rs.next()) {
        numRows = rs.getInt(1);
    }
    close(rs);
    // Add an entry in the index table
    String expType = rp.getClass().getName();
    String expParams = rp.getCompatibilityState();
    query = "INSERT INTO " + EXP_INDEX_TABLE + " VALUES ('" + expType + "', '" + expParams + "', " + numRows + " )";
    if (update(query) > 0) {
        if (m_Debug) {
            System.err.println("...create returned resultset");
        }
    }
    close();
    /*
     * if (m_Connection.getMetaData().getDriverName().
     * equals("Mark Matthews' MySQL Driver")) {
     * m_Statement.execute("UNLOCK TABLES");
     * System.err.println("UNLOCKING TABLE"); } else {
     */
    if (!m_setAutoCommit) {
        m_Connection.commit();
        m_Connection.setAutoCommit(true);
    }
    // }
    String tableName = getResultsTableName(rp);
    if (tableName == null) {
        throw new Exception("Problem adding experiment index entry");
    }
    // conditions of the existing table are unknown)
    try {
        query = "DROP TABLE " + tableName;
        if (m_Debug) {
            System.err.println(query);
        }
        update(query);
    } catch (SQLException ex) {
        System.err.println(ex.getMessage());
    }
    return tableName;
}
