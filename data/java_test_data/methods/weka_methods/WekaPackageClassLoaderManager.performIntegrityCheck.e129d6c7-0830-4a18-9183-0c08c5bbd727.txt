protected void performIntegrityCheck() {
    List<String> problems = new ArrayList<>();
    for (Map.Entry<String, WekaPackageLibIsolatingClassLoader> e : m_packageJarClassLoaders.entrySet()) {
        String packageName = e.getKey();
        WekaPackageLibIsolatingClassLoader child = e.getValue();
        try {
            if (!child.integrityCheck()) {
                problems.add(packageName);
            }
        } catch (Exception ex) {
            problems.add(packageName);
        }
    }
    List<String> classKeys = new ArrayList<>();
    for (String p : problems) {
        System.err.println("[Weka] Integrity: removing classloader for: " + p);
        // remove from lookups
        m_packageJarClassLoaders.remove(p);
        for (Map.Entry<String, WekaPackageLibIsolatingClassLoader> e : m_classBasedClassLoaderLookup.entrySet()) {
            if (e.getValue().getPackageName().equals(p)) {
                classKeys.add(e.getKey());
            }
        }
        for (String k : classKeys) {
            m_classBasedClassLoaderLookup.remove(k);
        }
    }
}
