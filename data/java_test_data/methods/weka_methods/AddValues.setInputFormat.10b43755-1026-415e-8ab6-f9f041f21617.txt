@Override
public boolean setInputFormat(Instances instanceInfo) throws Exception {
    Attribute att;
    Attribute attNew;
    ArrayList<String> allLabels;
    Enumeration<Object> enm;
    int i;
    ArrayList<String> values;
    ArrayList<Attribute> atts;
    Instances instNew;
    super.setInputFormat(instanceInfo);
    m_AttIndex.setUpper(instanceInfo.numAttributes() - 1);
    att = instanceInfo.attribute(m_AttIndex.getIndex());
    if (!att.isNominal()) {
        throw new UnsupportedAttributeTypeException("Chosen attribute not nominal.");
    }
    // merge labels
    allLabels = new ArrayList<String>();
    enm = att.enumerateValues();
    while (enm.hasMoreElements()) {
        Object o = enm.nextElement();
        if (o instanceof SerializedObject) {
            o = ((SerializedObject) o).getObject();
        }
        allLabels.add((String) o);
    }
    for (i = 0; i < m_Labels.size(); i++) {
        if (!allLabels.contains(m_Labels.get(i))) {
            allLabels.add(m_Labels.get(i));
        }
    }
    // generate index array
    if (getSort()) {
        Collections.sort(allLabels);
    }
    m_SortedIndices = new int[att.numValues()];
    enm = att.enumerateValues();
    i = 0;
    while (enm.hasMoreElements()) {
        m_SortedIndices[i] = allLabels.indexOf(enm.nextElement());
        i++;
    }
    // generate new header
    values = new ArrayList<String>();
    for (i = 0; i < allLabels.size(); i++) {
        values.add(allLabels.get(i));
    }
    attNew = new Attribute(att.name(), values);
    attNew.setWeight(att.weight());
    atts = new ArrayList<Attribute>();
    for (i = 0; i < instanceInfo.numAttributes(); i++) {
        if (i == m_AttIndex.getIndex()) {
            atts.add(attNew);
        } else {
            atts.add(instanceInfo.attribute(i));
        }
    }
    instNew = new Instances(instanceInfo.relationName(), atts, 0);
    instNew.setClassIndex(instanceInfo.classIndex());
    // set new format
    setOutputFormat(instNew);
    return true;
}
