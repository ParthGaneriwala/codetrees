public Instances[] split(Instances data) throws Exception {
    // Find size and constitution of subsets
    int[] subsetSize = new int[m_numSubsets];
    for (Instance instance : data) {
        int subset = whichSubset(instance);
        if (subset > -1) {
            subsetSize[subset]++;
        } else {
            double[] weights = weights(instance);
            for (int j = 0; j < m_numSubsets; j++) {
                if (Utils.gr(weights[j], 0)) {
                    subsetSize[j]++;
                }
            }
        }
    }
    // Create subsets
    Instances[] instances = new Instances[m_numSubsets];
    for (int j = 0; j < m_numSubsets; j++) {
        instances[j] = new Instances(data, subsetSize[j]);
    }
    for (Instance instance : data) {
        int subset = whichSubset(instance);
        if (subset > -1) {
            instances[subset].add(instance);
        } else {
            double[] weights = weights(instance);
            for (int j = 0; j < m_numSubsets; j++) {
                if (Utils.gr(weights[j], 0)) {
                    instances[j].add(instance);
                    instances[j].lastInstance().setWeight(weights[j] * instance.weight());
                }
            }
        }
    }
    return instances;
}
