@Override
protected void setStepToEdit(Step step) {
    copyOriginal(step);
    createAboutPanel(step);
    m_editor = new PropertySheetPanel(false);
    m_editor.setUseEnvironmentPropertyEditors(true);
    m_editor.setEnvironment(m_env);
    m_editor.setTarget(m_stepToEdit);
    m_primaryEditorHolder.setLayout(new BorderLayout());
    m_primaryEditorHolder.add(m_editor, BorderLayout.CENTER);
    m_editorHolder.setLayout(new BorderLayout());
    m_editorHolder.add(m_primaryEditorHolder, BorderLayout.NORTH);
    m_editorHolder.add(createSorterPanel(), BorderLayout.CENTER);
    add(m_editorHolder, BorderLayout.CENTER);
    String sString = ((Sorter) getStepToEdit()).getSortDetails();
    m_listModel = new DefaultListModel<Sorter.SortRule>();
    m_list.setModel(m_listModel);
    if (sString != null && sString.length() > 0) {
        String[] parts = sString.split("@@sort-rule@@");
        if (parts.length > 0) {
            m_upBut.setEnabled(true);
            m_downBut.setEnabled(true);
            for (String sPart : parts) {
                Sorter.SortRule s = new Sorter.SortRule(sPart);
                m_listModel.addElement(s);
            }
        }
        m_list.repaint();
    }
    // try to set up attribute combo
    if (((Sorter) getStepToEdit()).getStepManager().numIncomingConnections() > 0) {
        // sorter can only have a single incoming connection - get the name
        // of it
        String incomingConnName = ((Sorter) getStepToEdit()).getStepManager().getIncomingConnections().keySet().iterator().next();
        try {
            Instances connectedFormat = ((Sorter) getStepToEdit()).getStepManager().getIncomingStructureForConnectionType(incomingConnName);
            if (connectedFormat != null) {
                for (int i = 0; i < connectedFormat.numAttributes(); i++) {
                    m_attCombo.addItem(connectedFormat.attribute(i).name());
                }
            }
        } catch (WekaException ex) {
            showErrorDialog(ex);
        }
    }
}
