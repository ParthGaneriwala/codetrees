protected BufferedImage addOffscreenThresholdPlot(PlotData2D thresholdD) throws WekaException {
    m_offscreenPlotData.add(thresholdD.getPlotInstances());
    m_thresholdSeriesTitles.add(thresholdD.getPlotName());
    List<String> options = new ArrayList<String>();
    String additional = "-color=/last";
    if (m_additionalOptions != null && m_additionalOptions.length() > 0) {
        additional = m_additionalOptions;
        additional = getStepManager().environmentSubstitute(additional);
    }
    String[] optsParts = additional.split(",");
    for (String p : optsParts) {
        options.add(p.trim());
    }
    String xAxis = "False Positive Rate";
    if (m_xAxis != null && m_xAxis.length() > 0) {
        xAxis = m_xAxis;
        xAxis = getStepManager().environmentSubstitute(xAxis);
    }
    String yAxis = "True Positive Rate";
    if (m_yAxis != null && m_yAxis.length() > 0) {
        yAxis = m_yAxis;
        yAxis = getStepManager().environmentSubstitute(yAxis);
    }
    String width = m_width;
    String height = m_height;
    int defWidth = 500;
    int defHeight = 400;
    width = getStepManager().environmentSubstitute(width);
    height = getStepManager().environmentSubstitute(height);
    defWidth = Integer.parseInt(width);
    defHeight = Integer.parseInt(height);
    List<Instances> series = new ArrayList<Instances>();
    for (int i = 0; i < m_offscreenPlotData.size(); i++) {
        Instances temp = new Instances(m_offscreenPlotData.get(i));
        temp.setRelationName(m_thresholdSeriesTitles.get(i));
        series.add(temp);
    }
    try {
        return m_offscreenRenderer.renderXYLineChart(defWidth, defHeight, series, xAxis, yAxis, options);
    } catch (Exception ex) {
        throw new WekaException(ex);
    }
}
