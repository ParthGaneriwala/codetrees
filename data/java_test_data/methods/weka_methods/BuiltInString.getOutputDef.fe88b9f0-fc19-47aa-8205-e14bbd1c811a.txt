public Attribute getOutputDef() {
    if (m_outputDef == null) {
        if (m_func == StringFunc.SUBSTRING) {
            // there is no way we can compute the legal values for this attribute
            // in advance of the application of this function. So return a string attribute
            m_outputDef = new Attribute("BuiltInStringResult:substring", (ArrayList<String>) null);
        }
        // for the other functions we can compute the resulting set of values
        Attribute inputVals = m_parameterDefs.get(0);
        ArrayList<String> newVals = new ArrayList<String>();
        for (int i = 0; i < inputVals.numValues(); i++) {
            String inVal = inputVals.value(i);
            newVals.add(m_func.eval(new Object[] { inVal }));
        }
        m_outputDef = new Attribute("BuiltInStringResult:" + m_func.toString(), newVals);
    }
    return m_outputDef;
}
