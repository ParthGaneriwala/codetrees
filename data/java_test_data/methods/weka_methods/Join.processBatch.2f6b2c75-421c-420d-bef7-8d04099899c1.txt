protected synchronized void processBatch(Data data) throws WekaException {
    Instances insts = data.getPrimaryPayload();
    if (data.getSourceStep().getStepManager() == m_firstInput) {
        m_headerOne = new Instances(insts, 0);
        getStepManager().logDetailed("Receiving batch from " + m_firstInput.getName());
        for (int i = 0; i < insts.numInstances() && !isStopRequested(); i++) {
            Sorter.InstanceHolder tempH = new Sorter.InstanceHolder();
            tempH.m_instance = insts.instance(i);
            m_firstBuffer.add(tempH);
        }
    } else if (data.getSourceStep().getStepManager() == m_secondInput) {
        m_headerTwo = new Instances(insts, 0);
        getStepManager().logDetailed("Receiving batch from " + m_secondInput.getName());
        for (int i = 0; i < insts.numInstances() && !isStopRequested(); i++) {
            Sorter.InstanceHolder tempH = new Sorter.InstanceHolder();
            tempH.m_instance = insts.instance(i);
            m_secondBuffer.add(tempH);
        }
    } else {
        throw new WekaException("This should never happen");
    }
    if (m_firstBuffer.size() > 0 && m_secondBuffer.size() > 0) {
        getStepManager().processing();
        generateMergedHeader();
        Instances newData = new Instances(m_mergedHeader, 0);
        while (!isStopRequested() && m_firstBuffer.size() > 0 && m_secondBuffer.size() > 0) {
            Instance newI = processBuffers();
            if (newI != null) {
                newData.add(newI);
            }
        }
        for (String outConnType : getStepManager().getOutgoingConnections().keySet()) {
            if (isStopRequested()) {
                return;
            }
            Data outputD = new Data(outConnType, newData);
            outputD.setPayloadElement(StepManager.CON_AUX_DATA_SET_NUM, 1);
            outputD.setPayloadElement(StepManager.CON_AUX_DATA_MAX_SET_NUM, 1);
            getStepManager().outputData(outputD);
        }
        getStepManager().finished();
    }
}
