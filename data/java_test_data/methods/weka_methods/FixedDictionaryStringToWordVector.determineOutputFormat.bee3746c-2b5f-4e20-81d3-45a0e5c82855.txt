@Override
protected Instances determineOutputFormat(Instances inputFormat) throws Exception {
    if (m_vectorizer.readyToVectorize() && inputFormat.equalHeaders(m_vectorizer.getInputFormat())) {
        return m_vectorizer.getVectorizedFormat();
    }
    m_vectorizer.reset();
    m_vectorizer.setup(inputFormat);
    if (m_dictionaryFile == null && m_dictionarySource == null && m_textDictionarySource == null) {
        throw new IOException("No dictionary file/source specified!");
    }
    if (m_dictionarySource != null) {
        m_vectorizer.loadDictionary(m_dictionarySource);
    } else if (m_textDictionarySource != null) {
        m_vectorizer.loadDictionary(m_textDictionarySource);
    } else {
        String fString = m_dictionaryFile.toString();
        if (fString.length() == 0) {
            throw new IOException("No dictionary file specified!");
        }
        try {
            fString = m_env.substitute(fString);
        } catch (Exception ex) {
        // 
        }
        File dictFile = new File(fString);
        if (!dictFile.exists()) {
            throw new IOException("Specified dictionary file '" + fString + "' does not seem to exist!");
        }
        m_vectorizer.loadDictionary(dictFile, !m_dictionaryIsBinary);
    }
    return m_vectorizer.getVectorizedFormat();
}
