public void plotTrainingData(Instances trainingData) {
    Graphics2D osg = (Graphics2D) m_osi.getGraphics();
    // Graphics g = m_plotPanel.getGraphics();
    osg.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    double xval = 0;
    double yval = 0;
    for (int i = 0; i < trainingData.numInstances(); i++) {
        if (!trainingData.instance(i).isMissing(m_xAttribute) && !trainingData.instance(i).isMissing(m_yAttribute)) {
            xval = trainingData.instance(i).value(m_xAttribute);
            yval = trainingData.instance(i).value(m_yAttribute);
            int panelX = convertToImageX(xval);
            int panelY = convertToImageY(yval);
            Color colorToPlotWith = Color.white;
            if (trainingData.classIndex() > 0) {
                colorToPlotWith = m_Colors.get((int) trainingData.instance(i).value(trainingData.classIndex()) % m_Colors.size());
            }
            if (colorToPlotWith.equals(Color.white)) {
                osg.setColor(Color.black);
            } else {
                osg.setColor(Color.white);
            }
            osg.fillOval(panelX - 3, panelY - 3, 7, 7);
            osg.setColor(colorToPlotWith);
            osg.fillOval(panelX - 2, panelY - 2, 5, 5);
        }
    }
    if (m_plotListener != null) {
        m_plotListener.renderingImageUpdate();
    }
}
