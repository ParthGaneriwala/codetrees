public Instances getStructure() throws IOException {
    int numAtt;
    ArrayList<Attribute> atts;
    int i;
    String relName;
    Vector<Double> row;
    int c;
    char chr;
    StringBuffer str;
    boolean isComment;
    if (m_sourceReader == null)
        throw new IOException("No source has been specified");
    if (m_structure == null) {
        numAtt = 0;
        m_Buffer = new Vector<Vector<Double>>();
        row = new Vector<Double>();
        str = new StringBuffer();
        isComment = false;
        m_Buffer.add(row);
        try {
            // determine number of attributes
            while ((c = m_sourceReader.read()) != -1) {
                chr = (char) c;
                // comment found?
                if (chr == '%')
                    isComment = true;
                // end of line reached
                if ((chr == '\n') || (chr == '\r')) {
                    isComment = false;
                    if (str.length() > 0)
                        row.add(new Double(str.toString()));
                    if (numAtt == 0)
                        numAtt = row.size();
                    if (row.size() > 0) {
                        row = new Vector<Double>();
                        m_Buffer.add(row);
                    }
                    str = new StringBuffer();
                    continue;
                }
                // skip till end of comment line
                if (isComment)
                    continue;
                // separator found?
                if ((chr == '\t') || (chr == ' ')) {
                    if (str.length() > 0) {
                        row.add(new Double(str.toString()));
                        str = new StringBuffer();
                    }
                } else {
                    str.append(chr);
                }
            }
            // last number?
            if (str.length() > 0)
                row.add(new Double(str.toString()));
            // generate header
            atts = new ArrayList<Attribute>(numAtt);
            for (i = 0; i < numAtt; i++) atts.add(new Attribute("att_" + (i + 1)));
            if (!m_URL.equals("http://"))
                relName = m_URL;
            else
                relName = m_File;
            m_structure = new Instances(relName, atts, 0);
            m_structure.setClassIndex(m_structure.numAttributes() - 1);
        } catch (Exception ex) {
            ex.printStackTrace();
            throw new IOException("Unable to determine structure as Matlab ASCII file: " + ex);
        }
    }
    return new Instances(m_structure, 0);
}
