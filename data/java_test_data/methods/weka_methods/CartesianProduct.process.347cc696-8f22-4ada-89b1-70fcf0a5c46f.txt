@Override
protected Instances process(Instances instances) throws Exception {
    Instances result = getOutputFormat();
    for (Instance inst : instances) {
        if (instances.numAttributes() < result.numAttributes()) {
            // Do we actually need to add an attribute?
            double[] newVals = new double[result.numAttributes()];
            for (int i = 0; i < inst.numValues(); i++) {
                newVals[inst.index(i)] = inst.valueSparse(i);
            }
            String value = "";
            for (int i = 0; i < inst.numAttributes(); i++) {
                if (instances.attribute(i).isNominal() && m_Attributes.isInRange(i) && i != instances.classIndex()) {
                    if (Utils.isMissingValue(newVals[i])) {
                        value = null;
                        break;
                    } else {
                        value += (value.length() > 0) ? "_x_" + instances.attribute(i).value((int) newVals[i]) : instances.attribute(i).value((int) newVals[i]);
                    }
                }
            }
            if (value == null) {
                newVals[newVals.length - 1] = Double.NaN;
            } else {
                newVals[newVals.length - 1] = result.attribute(result.numAttributes() - 1).indexOfValue(value);
                ;
            }
            Instance newInst = inst.copy(newVals);
            copyValues(newInst, false, inst.dataset(), result);
            result.add(newInst);
        } else {
            copyValues(inst, false, inst.dataset(), result);
            result.add(inst);
        }
    }
    return result;
}
