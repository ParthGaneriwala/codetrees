@Override
public Instances outputStructureForConnectionType(String connectionName) throws WekaException {
    if (connectionName.equals(StepManager.CON_TEXT)) {
        ArrayList<Attribute> attInfo = new ArrayList<Attribute>();
        attInfo.add(new Attribute("Title", (ArrayList<String>) null));
        attInfo.add(new Attribute("Text", (ArrayList<String>) null));
        return new Instances("TextEvent", attInfo, 0);
    } else if (connectionName.equals(StepManager.CON_BATCH_ASSOCIATOR)) {
        if (m_associatorTemplate instanceof AssociationRulesProducer) {
            // we make the assumption here that consumers of
            // batchAssociationRules events will utilize a structure
            // consisting of the RHS of the rule (String), LHS of the
            // rule (String) and one numeric attribute for each metric
            // associated with the rules.
            String[] metricNames = ((AssociationRulesProducer) m_associatorTemplate).getRuleMetricNames();
            ArrayList<Attribute> attInfo = new ArrayList<Attribute>();
            attInfo.add(new Attribute("LHS", (ArrayList<String>) null));
            attInfo.add(new Attribute("RHS", (ArrayList<String>) null));
            attInfo.add(new Attribute("Support"));
            for (String metricName : metricNames) {
                attInfo.add(new Attribute(metricName));
            }
            return new Instances(StepManager.CON_AUX_DATA_BATCH_ASSOCIATION_RULES, attInfo, 0);
        }
    }
    return null;
}
