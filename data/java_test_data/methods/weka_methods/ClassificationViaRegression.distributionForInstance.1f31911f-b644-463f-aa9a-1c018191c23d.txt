public double[] distributionForInstance(Instance inst) throws Exception {
    double[] probs = new double[inst.numClasses()];
    Instance newInst;
    double sum = 0;
    for (int i = 0; i < inst.numClasses(); i++) {
        m_ClassFilters[i].input(inst);
        m_ClassFilters[i].batchFinished();
        newInst = m_ClassFilters[i].output();
        probs[i] = m_Classifiers[i].classifyInstance(newInst);
        if (Utils.isMissingValue(probs[i])) {
            throw new UnassignedClassException("ClassificationViaRegression: base learner predicted missing value.");
        }
        if (probs[i] > 1) {
            probs[i] = 1;
        }
        if (probs[i] < 0) {
            probs[i] = 0;
        }
        sum += probs[i];
    }
    if (sum != 0) {
        Utils.normalize(probs, sum);
    }
    return probs;
}
