@Override
public void actionPerformed(ActionEvent e) {
    // createTemplateMenuPopup();
    PopupMenu popupMenu = new PopupMenu();
    List<String> builtinTemplates = m_mainPerspective.getTemplateManager().getBuiltinTemplateDescriptions();
    List<String> pluginTemplates = m_mainPerspective.getTemplateManager().getPluginTemplateDescriptions();
    for (final String desc : builtinTemplates) {
        MenuItem menuItem = new MenuItem(desc);
        menuItem.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Flow templateFlow = m_mainPerspective.getTemplateManager().getTemplateFlow(desc);
                    m_mainPerspective.addTab(desc);
                    m_mainPerspective.getCurrentLayout().setFlow(templateFlow);
                } catch (WekaException ex) {
                    m_mainPerspective.showErrorDialog(ex);
                }
            }
        });
        popupMenu.add(menuItem);
    }
    if (builtinTemplates.size() > 0 && pluginTemplates.size() > 0) {
        popupMenu.addSeparator();
    }
    for (final String desc : pluginTemplates) {
        MenuItem menuItem = new MenuItem(desc);
        menuItem.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Flow templateFlow = m_mainPerspective.getTemplateManager().getTemplateFlow(desc);
                    m_mainPerspective.addTab(desc);
                    m_mainPerspective.getCurrentLayout().setFlow(templateFlow);
                } catch (WekaException ex) {
                    m_mainPerspective.showErrorDialog(ex);
                }
            }
        });
        popupMenu.add(menuItem);
    }
    templatesB.add(popupMenu);
    popupMenu.show(templatesB, 0, 0);
}
