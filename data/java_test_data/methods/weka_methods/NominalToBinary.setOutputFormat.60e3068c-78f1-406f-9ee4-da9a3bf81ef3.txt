private void setOutputFormat() {
    ArrayList<Attribute> newAtts;
    int newClassIndex;
    StringBuffer attributeName;
    Instances outputFormat;
    ArrayList<String> vals;
    // Compute new attributes
    m_needToTransform = false;
    for (int i = 0; i < getInputFormat().numAttributes(); i++) {
        Attribute att = getInputFormat().attribute(i);
        if (att.isNominal() && i != getInputFormat().classIndex() && (att.numValues() > 2 || m_TransformAll || m_Numeric)) {
            m_needToTransform = true;
            break;
        }
    }
    if (!m_needToTransform) {
        setOutputFormat(getInputFormat());
        return;
    }
    newClassIndex = getInputFormat().classIndex();
    newAtts = new ArrayList<Attribute>();
    for (int j = 0; j < getInputFormat().numAttributes(); j++) {
        Attribute att = getInputFormat().attribute(j);
        if (!att.isNominal() || (j == getInputFormat().classIndex()) || !m_Columns.isInRange(j)) {
            newAtts.add((Attribute) att.copy());
        } else {
            if ((att.numValues() <= 2) && (!m_TransformAll)) {
                if (m_Numeric) {
                    String value = "";
                    if (att.numValues() == 2) {
                        value = "=" + att.value(1);
                    }
                    Attribute a = new Attribute(att.name() + value);
                    a.setWeight(att.weight());
                    newAtts.add(a);
                } else {
                    newAtts.add((Attribute) att.copy());
                }
            } else {
                if (newClassIndex >= 0 && j < getInputFormat().classIndex()) {
                    newClassIndex += att.numValues() - 1;
                }
                // Compute values for new attributes
                for (int k = 0; k < att.numValues(); k++) {
                    attributeName = new StringBuffer(att.name() + "=");
                    attributeName.append(att.value(k));
                    if (m_Numeric) {
                        Attribute a = new Attribute(attributeName.toString());
                        if (getSpreadAttributeWeight()) {
                            a.setWeight(att.weight() / att.numValues());
                        } else {
                            a.setWeight(att.weight());
                        }
                        newAtts.add(a);
                    } else {
                        vals = new ArrayList<String>(2);
                        vals.add("f");
                        vals.add("t");
                        Attribute a = new Attribute(attributeName.toString(), vals);
                        if (getSpreadAttributeWeight()) {
                            a.setWeight(att.weight() / att.numValues());
                        } else {
                            a.setWeight(att.weight());
                        }
                        newAtts.add(a);
                    }
                }
            }
        }
    }
    outputFormat = new Instances(getInputFormat().relationName(), newAtts, 0);
    outputFormat.setClassIndex(newClassIndex);
    setOutputFormat(outputFormat);
}
