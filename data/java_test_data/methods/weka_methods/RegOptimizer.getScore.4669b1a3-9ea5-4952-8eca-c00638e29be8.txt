protected double getScore() throws Exception {
    double res = 0;
    double t = 0, t2 = 0;
    for (int i = 0; i < m_nInstances; i++) {
        for (int j = 0; j < m_nInstances; j++) {
            t += (m_alpha[i] - m_alphaStar[i]) * (m_alpha[j] - m_alphaStar[j]) * m_kernel.eval(i, j, m_data.instance(i));
        }
        // switch(m_nLossType) {
        // case L1:
        // t2 += m_data.instance(i).classValue() * (m_alpha[i] - m_alpha_[i]);
        // break;
        // case L2:
        // t2 += m_data.instance(i).classValue() * (m_alpha[i] - m_alpha_[i]) -
        // (0.5/m_SVM.getC()) * (m_alpha[i]*m_alpha[i] + m_alpha_[i]*m_alpha_[i]);
        // break;
        // case HUBER:
        // t2 += m_data.instance(i).classValue() * (m_alpha[i] - m_alpha_[i]) -
        // (0.5*m_SVM.getEpsilon()/m_SVM.getC()) * (m_alpha[i]*m_alpha[i] +
        // m_alpha_[i]*m_alpha_[i]);
        // break;
        // case EPSILON:
        // t2 += m_data.instance(i).classValue() * (m_alpha[i] - m_alphaStar[i]) -
        // m_epsilon * (m_alpha[i] + m_alphaStar[i]);
        t2 += m_target[i] * (m_alpha[i] - m_alphaStar[i]) - m_epsilon * (m_alpha[i] + m_alphaStar[i]);
    // break;
    // }
    }
    res += -0.5 * t + t2;
    return res;
}
