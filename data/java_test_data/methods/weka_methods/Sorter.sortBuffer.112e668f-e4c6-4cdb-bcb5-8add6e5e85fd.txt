private void sortBuffer(boolean write) throws Exception {
    getStepManager().logBasic("Sorting in memory buffer");
    Collections.sort(m_incrementalBuffer, m_sortComparator);
    if (!write) {
        return;
    }
    if (isStopRequested()) {
        return;
    }
    String tmpDir = m_tempDirectory.toString();
    File tempFile = File.createTempFile("Sorter", ".tmp");
    if (tmpDir != null && tmpDir.length() > 0) {
        tmpDir = environmentSubstitute(tmpDir);
        File tempDir = new File(tmpDir);
        if (tempDir.exists() && tempDir.canWrite()) {
            String filename = tempFile.getName();
            tempFile = new File(tmpDir + File.separator + filename);
            tempFile.deleteOnExit();
        }
    }
    getStepManager().logDebug("Temp file: " + tempFile.toString());
    m_bufferFiles.add(tempFile);
    FileOutputStream fos = new FileOutputStream(tempFile);
    BufferedOutputStream bos = new BufferedOutputStream(fos, 50000);
    ObjectOutputStream oos = new ObjectOutputStream(bos);
    getStepManager().logDetailed("Writing buffer to temp file " + m_bufferFiles.size() + ". Buffer contains " + m_incrementalBuffer.size() + " instances");
    for (int i = 0; i < m_incrementalBuffer.size(); i++) {
        InstanceHolder temp = m_incrementalBuffer.get(i);
        temp.m_instance.setDataset(null);
        oos.writeObject(temp);
        if (i % (m_bufferSizeI / 10) == 0) {
            oos.reset();
        }
    }
    bos.flush();
    oos.close();
    m_incrementalBuffer.clear();
}
