@Override
public void settingsChanged() {
    if (getMainApplication() != null) {
        if (!m_initialSettingsSet) {
            Object initialEval = getMainApplication().getApplicationSettings().getSetting(getPerspectiveID(), AttributeSelectionPanelDefaults.EVALUATOR_KEY, AttributeSelectionPanelDefaults.EVALUATOR, Environment.getSystemWide());
            m_AttributeEvaluatorEditor.setValue(initialEval);
            Object initialSearch = getMainApplication().getApplicationSettings().getSetting(getPerspectiveID(), AttributeSelectionPanelDefaults.SEARCH_KEY, AttributeSelectionPanelDefaults.SEARCH, Environment.getSystemWide());
            m_AttributeSearchEditor.setValue(initialSearch);
            TestMode initialEvalMode = getMainApplication().getApplicationSettings().getSetting(getPerspectiveID(), AttributeSelectionPanelDefaults.EVAL_MODE_KEY, AttributeSelectionPanelDefaults.EVAL_MODE, Environment.getSystemWide());
            m_TrainBut.setSelected(initialEvalMode == TestMode.TRAINING_SET);
            m_CVBut.setSelected(initialEvalMode == TestMode.CROSS_VALIDATION);
            int folds = getMainApplication().getApplicationSettings().getSetting(getPerspectiveID(), AttributeSelectionPanelDefaults.FOLDS_KEY, AttributeSelectionPanelDefaults.FOLDS, Environment.getSystemWide());
            m_CVText.setText("" + folds);
            int seed = getMainApplication().getApplicationSettings().getSetting(getPerspectiveID(), AttributeSelectionPanelDefaults.SEED_KEY, AttributeSelectionPanelDefaults.SEED, Environment.getSystemWide());
            m_SeedText.setText("" + seed);
            updateRadioLinks();
            m_initialSettingsSet = true;
        }
        Font outputFont = getMainApplication().getApplicationSettings().getSetting(getPerspectiveID(), AttributeSelectionPanelDefaults.OUTPUT_FONT_KEY, AttributeSelectionPanelDefaults.OUTPUT_FONT, Environment.getSystemWide());
        m_OutText.setFont(outputFont);
        m_History.setFont(outputFont);
        Color textColor = getMainApplication().getApplicationSettings().getSetting(getPerspectiveID(), AttributeSelectionPanelDefaults.OUTPUT_TEXT_COLOR_KEY, AttributeSelectionPanelDefaults.OUTPUT_TEXT_COLOR, Environment.getSystemWide());
        m_OutText.setForeground(textColor);
        m_History.setForeground(textColor);
        Color outputBackgroundColor = getMainApplication().getApplicationSettings().getSetting(getPerspectiveID(), AttributeSelectionPanelDefaults.OUTPUT_BACKGROUND_COLOR_KEY, AttributeSelectionPanelDefaults.OUTPUT_BACKGROUND_COLOR, Environment.getSystemWide());
        m_OutText.setBackground(outputBackgroundColor);
        m_History.setBackground(outputBackgroundColor);
    }
}
