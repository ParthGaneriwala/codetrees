public OneRRule newNominalRule(Attribute attr, Instances data, int[] missingValueCounts) throws Exception {
    // ... create arrays to hold the counts
    int[][] counts = new int[attr.numValues()][data.classAttribute().numValues()];
    // ... calculate the counts
    Enumeration<Instance> enu = data.enumerateInstances();
    while (enu.hasMoreElements()) {
        Instance i = enu.nextElement();
        if (i.isMissing(attr)) {
            missingValueCounts[(int) i.classValue()]++;
        } else {
            counts[(int) i.value(attr)][(int) i.classValue()]++;
        }
    }
    // create a new rule
    OneRRule r = new OneRRule(data, attr);
    for (int value = 0; value < attr.numValues(); value++) {
        int best = Utils.maxIndex(counts[value]);
        r.m_classifications[value] = best;
        r.m_correct += counts[value][best];
    }
    return r;
}
