public double[] distributionForInstance(Instance instance) throws Exception {
    if (m_ReorderOriginal != null) {
        m_ReorderOriginal.input(instance);
        instance = m_ReorderOriginal.output();
    }
    Instance newInstance = filterInstance(instance);
    if (newInstance == null) {
        // filter has consumed the instance (e.g. RemoveWithValues
        // may do this). We will indicate no prediction for this
        // instance
        double[] unclassified = null;
        if (instance.classAttribute().isNumeric()) {
            unclassified = new double[1];
            unclassified[0] = Utils.missingValue();
        } else {
            // all zeros
            unclassified = new double[instance.classAttribute().numValues()];
        }
        return unclassified;
    } else {
        if (m_ReorderFiltered != null) {
            m_ReorderFiltered.input(newInstance);
            newInstance = m_ReorderFiltered.output();
        }
        return m_Classifier.distributionForInstance(newInstance);
    }
}
