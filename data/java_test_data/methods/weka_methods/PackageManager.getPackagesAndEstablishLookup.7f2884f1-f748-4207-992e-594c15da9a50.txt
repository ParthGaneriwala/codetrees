private void getPackagesAndEstablishLookup() throws Exception {
    m_allPackages = WekaPackageManager.getAllPackages();
    m_installedPackages = WekaPackageManager.getInstalledPackages();
    // now fill the lookup map
    m_packageLookupInfo = new TreeMap<String, List<Object>>();
    for (Package p : m_allPackages) {
        // Package p = i.next();
        String packageName = p.getName();
        String category = "";
        if (p.getPackageMetaDataElement("Category") != null) {
            category = p.getPackageMetaDataElement("Category").toString();
        }
        // check the load status of this package (if installed)
        String loadStatus = "";
        if (p.isInstalled()) {
            p = WekaPackageManager.getInstalledPackageInfo(p.getName());
            File packageRoot = new File(WekaPackageManager.getPackageHome().toString());
            // boolean loaded = WekaPackageManager.loadCheck(p, packageRoot);
            boolean loaded = WekaPackageManager.hasBeenLoaded(p);
            loadStatus = (loaded) ? "Yes" : "No - check log";
        }
        List<Object> versions = WekaPackageManager.getRepositoryPackageVersions(packageName);
        List<Object> catAndVers = new ArrayList<Object>();
        catAndVers.add(category);
        catAndVers.add(versions);
        catAndVers.add(loadStatus);
        m_packageLookupInfo.put(packageName, catAndVers);
    }
    // Load all repCache package descriptions into the search lookup
    for (Package p : m_allPackages) {
        String name = p.getName();
        File repLatest = new File(WekaPackageManager.WEKA_HOME.toString() + File.separator + "repCache" + File.separator + name + File.separator + "Latest.props");
        if (repLatest.exists() && repLatest.isFile()) {
            String packageDescription = loadPropsText(repLatest);
            m_packageDescriptions.put(name, packageDescription);
        }
    }
    // just in case there are some unofficial packages
    for (Package p : m_installedPackages) {
        if (!m_packageDescriptions.containsKey(p.getName())) {
            String name = p.getName();
            File instDesc = new File(WekaPackageManager.PACKAGES_DIR.toString() + File.separator + name + File.separator + "Description.props");
            if (instDesc.exists() && instDesc.isFile()) {
                m_packageDescriptions.put(name, loadPropsText(instDesc));
            }
        }
    }
}
