@Override
public void mousePressed(MouseEvent e) {
    if (!m_stopped) {
        return;
    }
    if ((e.getModifiers() & MouseEvent.BUTTON1_MASK) == MouseEvent.BUTTON1_MASK && !e.isAltDown()) {
        Graphics g = NodePanel.this.getGraphics();
        int x = e.getX();
        int y = e.getY();
        int w = NodePanel.this.getWidth();
        int h = NodePanel.this.getHeight();
        ArrayList<NeuralConnection> tmp = new ArrayList<NeuralConnection>(4);
        for (int noa = 0; noa < m_numAttributes; noa++) {
            if (m_inputs[noa].onUnit(g, x, y, w, h)) {
                tmp.add(m_inputs[noa]);
                selection(tmp, (e.getModifiers() & MouseEvent.CTRL_MASK) == MouseEvent.CTRL_MASK, true);
                return;
            }
        }
        for (int noa = 0; noa < m_numClasses; noa++) {
            if (m_outputs[noa].onUnit(g, x, y, w, h)) {
                tmp.add(m_outputs[noa]);
                selection(tmp, (e.getModifiers() & MouseEvent.CTRL_MASK) == MouseEvent.CTRL_MASK, true);
                return;
            }
        }
        for (NeuralConnection m_neuralNode : m_neuralNodes) {
            if (m_neuralNode.onUnit(g, x, y, w, h)) {
                tmp.add(m_neuralNode);
                selection(tmp, (e.getModifiers() & MouseEvent.CTRL_MASK) == MouseEvent.CTRL_MASK, true);
                return;
            }
        }
        NeuralNode temp = new NeuralNode(String.valueOf(m_nextId), m_random, m_sigmoidUnit);
        m_nextId++;
        temp.setX((double) e.getX() / w);
        temp.setY((double) e.getY() / h);
        tmp.add(temp);
        addNode(temp);
        selection(tmp, (e.getModifiers() & MouseEvent.CTRL_MASK) == MouseEvent.CTRL_MASK, true);
    } else {
        // then right click
        Graphics g = NodePanel.this.getGraphics();
        int x = e.getX();
        int y = e.getY();
        int w = NodePanel.this.getWidth();
        int h = NodePanel.this.getHeight();
        ArrayList<NeuralConnection> tmp = new ArrayList<NeuralConnection>(4);
        for (int noa = 0; noa < m_numAttributes; noa++) {
            if (m_inputs[noa].onUnit(g, x, y, w, h)) {
                tmp.add(m_inputs[noa]);
                selection(tmp, (e.getModifiers() & MouseEvent.CTRL_MASK) == MouseEvent.CTRL_MASK, false);
                return;
            }
        }
        for (int noa = 0; noa < m_numClasses; noa++) {
            if (m_outputs[noa].onUnit(g, x, y, w, h)) {
                tmp.add(m_outputs[noa]);
                selection(tmp, (e.getModifiers() & MouseEvent.CTRL_MASK) == MouseEvent.CTRL_MASK, false);
                return;
            }
        }
        for (NeuralConnection m_neuralNode : m_neuralNodes) {
            if (m_neuralNode.onUnit(g, x, y, w, h)) {
                tmp.add(m_neuralNode);
                selection(tmp, (e.getModifiers() & MouseEvent.CTRL_MASK) == MouseEvent.CTRL_MASK, false);
                return;
            }
        }
        selection(null, (e.getModifiers() & MouseEvent.CTRL_MASK) == MouseEvent.CTRL_MASK, false);
    }
}
