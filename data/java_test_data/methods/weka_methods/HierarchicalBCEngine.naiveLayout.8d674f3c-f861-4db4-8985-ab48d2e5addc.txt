protected void naiveLayout() {
    /*
     * if(maxStringWidth==0) { int strWidth; for(int i=0; i<m_nodes.size(); i++)
     * { strWidth = m_fm.stringWidth(((GraphNode)m_nodes.get(i)).lbl);
     * if(strWidth>maxStringWidth) maxStringWidth=strWidth; }
     * 
     * if(m_nodeSize<maxStringWidth) {m_nodeSize = maxStringWidth+4; m_nodeArea
     * = m_nodeSize+8; } }
     */
    if (nodeLevels == null) {
        makeProperHierarchy();
    }
    // int nodeHeight = m_nodeHeight*2; //m_fm.getHeight()*2;
    for (int i = 0, temp = 0; i < nodeLevels.length; i++) {
        for (int j = 0; j < nodeLevels[i].length; j++) {
            temp = nodeLevels[i][j];
            // horPositions[temp]=j;
            GraphNode n = m_nodes.get(temp);
            // horPositions[temp]*m_nodeWidth;
            n.x = j * m_nodeWidth;
            n.y = i * 3 * m_nodeHeight;
        }
    }
// setAppropriateSize();
}
