protected void initVisiblePerspectives(Settings settings) {
    m_visiblePerspectives.clear();
    if (m_perspectiveCache.size() > 0) {
        Map<Settings.SettingKey, Object> defaults = new LinkedHashMap<Settings.SettingKey, Object>();
        SelectedPerspectivePreferences defaultEmpty = new SelectedPerspectivePreferences();
        defaults.put(VISIBLE_PERSPECTIVES_KEY, defaultEmpty);
        Defaults mainAppPerspectiveDefaults = new Defaults(m_mainApp.getApplicationID(), defaults);
        settings.applyDefaults(mainAppPerspectiveDefaults);
        SelectedPerspectivePreferences userVisiblePerspectives = settings.getSetting(m_mainApp.getApplicationID(), VISIBLE_PERSPECTIVES_KEY, new SelectedPerspectivePreferences(), Environment.getSystemWide());
        if (userVisiblePerspectives == defaultEmpty) {
            // all perspectives visible
            for (Map.Entry<String, Perspective> e : m_perspectiveCache.entrySet()) {
                userVisiblePerspectives.getUserVisiblePerspectives().add(e.getValue().getPerspectiveTitle());
            }
            userVisiblePerspectives.setPerspectivesToolbarVisibleOnStartup(true);
        }
        for (String userVisPer : userVisiblePerspectives.getUserVisiblePerspectives()) {
            m_visiblePerspectives.add(userVisPer);
        }
    }
}
