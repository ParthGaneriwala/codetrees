@Override
public void mouseClicked(MouseEvent e) {
    if ((m_sIndex == 2 || m_sIndex == 3) && (m_createShape || (e.getModifiers() & MouseEvent.BUTTON1_MASK) == MouseEvent.BUTTON1_MASK)) {
        if (m_createShape) {
            // then it has been started already.
            Graphics g = m_plot2D.getGraphics();
            g.setColor(Color.black);
            g.setXORMode(Color.white);
            if ((e.getModifiers() & MouseEvent.BUTTON1_MASK) == MouseEvent.BUTTON1_MASK && !e.isAltDown()) {
                m_shapePoints.add(new Double(m_plot2D.convertToAttribX(e.getX())));
                m_shapePoints.add(new Double(m_plot2D.convertToAttribY(e.getY())));
                m_newMousePos.width = e.getX();
                m_newMousePos.height = e.getY();
                g.drawLine((int) Math.ceil(m_plot2D.convertToPanelX(m_shapePoints.get(m_shapePoints.size() - 2).doubleValue())), (int) Math.ceil(m_plot2D.convertToPanelY(m_shapePoints.get(m_shapePoints.size() - 1).doubleValue())), m_newMousePos.width, m_newMousePos.height);
            } else if (m_sIndex == 3) {
                // then extend the lines to infinity
                // (100000 or so should be enough).
                // the area is selected by where the user right clicks
                // the mouse button
                m_createShape = false;
                if (m_shapePoints.size() >= 5) {
                    double cx = Math.ceil(m_plot2D.convertToPanelX(m_shapePoints.get(m_shapePoints.size() - 4).doubleValue()));
                    double cx2 = Math.ceil(m_plot2D.convertToPanelX(m_shapePoints.get(m_shapePoints.size() - 2).doubleValue())) - cx;
                    cx2 *= 50000;
                    double cy = Math.ceil(m_plot2D.convertToPanelY(m_shapePoints.get(m_shapePoints.size() - 3).doubleValue()));
                    double cy2 = Math.ceil(m_plot2D.convertToPanelY(m_shapePoints.get(m_shapePoints.size() - 1).doubleValue())) - cy;
                    cy2 *= 50000;
                    double cxa = Math.ceil(m_plot2D.convertToPanelX(m_shapePoints.get(3).doubleValue()));
                    double cxa2 = Math.ceil(m_plot2D.convertToPanelX(m_shapePoints.get(1).doubleValue())) - cxa;
                    cxa2 *= 50000;
                    double cya = Math.ceil(m_plot2D.convertToPanelY(m_shapePoints.get(4).doubleValue()));
                    double cya2 = Math.ceil(m_plot2D.convertToPanelY(m_shapePoints.get(2).doubleValue())) - cya;
                    cya2 *= 50000;
                    m_shapePoints.set(1, new Double(m_plot2D.convertToAttribX(cxa2 + cxa)));
                    m_shapePoints.set(m_shapePoints.size() - 1, new Double(m_plot2D.convertToAttribY(cy2 + cy)));
                    m_shapePoints.set(m_shapePoints.size() - 2, new Double(m_plot2D.convertToAttribX(cx2 + cx)));
                    m_shapePoints.set(2, new Double(m_plot2D.convertToAttribY(cya2 + cya)));
                    // determine how infinity line should be built
                    cy = Double.POSITIVE_INFINITY;
                    cy2 = Double.NEGATIVE_INFINITY;
                    if (m_shapePoints.get(1).doubleValue() > m_shapePoints.get(3).doubleValue()) {
                        if (m_shapePoints.get(2).doubleValue() == m_shapePoints.get(4).doubleValue()) {
                            cy = m_shapePoints.get(2).doubleValue();
                        }
                    }
                    if (m_shapePoints.get(m_shapePoints.size() - 2).doubleValue() > m_shapePoints.get(m_shapePoints.size() - 4).doubleValue()) {
                        if (m_shapePoints.get(m_shapePoints.size() - 3).doubleValue() == m_shapePoints.get(m_shapePoints.size() - 1).doubleValue()) {
                            cy2 = m_shapePoints.get(m_shapePoints.size() - 1).doubleValue();
                        }
                    }
                    m_shapePoints.add(new Double(cy));
                    m_shapePoints.add(new Double(cy2));
                    if (!inPolyline(m_shapePoints, m_plot2D.convertToAttribX(e.getX()), m_plot2D.convertToAttribY(e.getY()))) {
                        Double tmp = m_shapePoints.get(m_shapePoints.size() - 2);
                        m_shapePoints.set(m_shapePoints.size() - 2, m_shapePoints.get(m_shapePoints.size() - 1));
                        m_shapePoints.set(m_shapePoints.size() - 1, tmp);
                    }
                    if (m_shapes == null) {
                        m_shapes = new ArrayList<ArrayList<Double>>(4);
                    }
                    m_shapes.add(m_shapePoints);
                    m_submit.setText("Submit");
                    m_submit.setActionCommand("Submit");
                    m_submit.setEnabled(true);
                }
                m_shapePoints = null;
                PlotPanel.this.repaint();
            } else {
                // then close the shape
                m_createShape = false;
                if (m_shapePoints.size() >= 7) {
                    m_shapePoints.add(m_shapePoints.get(1));
                    m_shapePoints.add(m_shapePoints.get(2));
                    if (m_shapes == null) {
                        m_shapes = new ArrayList<ArrayList<Double>>(4);
                    }
                    m_shapes.add(m_shapePoints);
                    m_submit.setText("Submit");
                    m_submit.setActionCommand("Submit");
                    m_submit.setEnabled(true);
                }
                m_shapePoints = null;
                PlotPanel.this.repaint();
            }
            g.dispose();
        // repaint();
        } else if ((e.getModifiers() & MouseEvent.BUTTON1_MASK) == MouseEvent.BUTTON1_MASK) {
            // then this is the first point
            m_createShape = true;
            m_shapePoints = new ArrayList<Double>(17);
            m_shapePoints.add(new Double(m_sIndex));
            // the
            m_shapePoints.add(new Double(m_plot2D.convertToAttribX(e.getX())));
            // new
            // point
            m_shapePoints.add(new Double(m_plot2D.convertToAttribY(e.getY())));
            // the temp mouse point
            m_newMousePos.width = e.getX();
            m_newMousePos.height = e.getY();
            Graphics g = m_plot2D.getGraphics();
            g.setColor(Color.black);
            g.setXORMode(Color.white);
            g.drawLine((int) Math.ceil(m_plot2D.convertToPanelX(m_shapePoints.get(1).doubleValue())), (int) Math.ceil(m_plot2D.convertToPanelY(m_shapePoints.get(2).doubleValue())), m_newMousePos.width, m_newMousePos.height);
            g.dispose();
        }
    } else {
        if ((e.getModifiers() & InputEvent.BUTTON1_MASK) == InputEvent.BUTTON1_MASK) {
            m_plot2D.searchPoints(e.getX(), e.getY(), false);
        } else {
            m_plot2D.searchPoints(e.getX(), e.getY(), true);
        }
    }
}
