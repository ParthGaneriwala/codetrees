@Override
public void run(Object toRun, String[] args) throws Exception {
    FindWithCapabilities find;
    Vector<String> list;
    String result;
    int i;
    boolean printMisses;
    Iterator<Capability> iter;
    boolean first;
    // make sure that packages are loaded and the GenericPropertiesCreator
    // executes to populate the lists correctly
    weka.gui.GenericObjectEditor.determineClasses();
    printMisses = false;
    try {
        find = new FindWithCapabilities();
        try {
            printMisses = Utils.getFlag("misses", args);
            find.setOptions(args);
            Utils.checkForRemainingOptions(args);
        } catch (Exception ex) {
            result = ex.getMessage() + "\n\n" + find.getClass().getName().replaceAll(".*\\.", "") + " Options:\n\n";
            Enumeration<Option> enm = find.listOptions();
            while (enm.hasMoreElements()) {
                Option option = enm.nextElement();
                result += option.synopsis() + "\n" + option.description() + "\n";
            }
            throw new Exception(result);
        }
        System.out.println("\nSearching for the following Capabilities:");
        // allowed
        System.out.print("- allowed: ");
        iter = find.getCapabilities().capabilities();
        first = true;
        while (iter.hasNext()) {
            if (!first) {
                System.out.print(", ");
            }
            first = false;
            System.out.print(iter.next());
        }
        System.out.println();
        // not allowed
        System.out.print("- not allowed: ");
        iter = find.getNotCapabilities().capabilities();
        first = true;
        if (iter.hasNext()) {
            while (iter.hasNext()) {
                if (!first) {
                    System.out.print(", ");
                }
                first = false;
                System.out.print(iter.next());
            }
            System.out.println();
        } else {
            System.out.println("-");
        }
        find.find();
        // matches
        list = find.getMatches();
        if (list.size() == 1) {
            System.out.println("\nFound " + list.size() + " class that matched the criteria:\n");
        } else {
            System.out.println("\nFound " + list.size() + " classes that matched the criteria:\n");
        }
        for (i = 0; i < list.size(); i++) {
            System.out.println(list.get(i));
        }
        // misses
        if (printMisses) {
            list = find.getMisses();
            if (list.size() == 1) {
                System.out.println("\nFound " + list.size() + " class that didn't match the criteria:\n");
            } else {
                System.out.println("\nFound " + list.size() + " classes that didn't match the criteria:\n");
            }
            for (i = 0; i < list.size(); i++) {
                System.out.println(list.get(i));
            }
        }
        System.out.println();
    } catch (Exception ex) {
        System.err.println(ex.getMessage());
    } finally {
        System.exit(0);
    }
}
