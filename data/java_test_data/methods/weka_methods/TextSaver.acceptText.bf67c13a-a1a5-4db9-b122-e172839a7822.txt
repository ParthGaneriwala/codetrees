@Override
public synchronized void acceptText(TextEvent textEvent) {
    String content = textEvent.getText();
    if (m_fileName != null && m_fileName.length() > 0) {
        if (m_env == null) {
            m_env = Environment.getSystemWide();
        }
        String filename = m_fileName;
        try {
            filename = m_env.substitute(m_fileName);
        } catch (Exception ex) {
        }
        // append .txt if necessary
        if (filename.toLowerCase().indexOf(".txt") < 0) {
            filename += ".txt";
        }
        File file = new File(filename);
        if (!file.isDirectory()) {
            BufferedWriter writer = null;
            try {
                writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file, m_append), "utf-8"));
                writer.write(content);
                writer.close();
            } catch (IOException e) {
                if (m_logger != null) {
                    m_logger.statusMessage(statusMessagePrefix() + "WARNING: " + "an error occurred whilte trying to write text (see log)");
                    m_logger.logMessage("[" + getCustomName() + "] " + "an error occurred whilte trying to write text: " + e.getMessage());
                } else {
                    e.printStackTrace();
                }
            }
        } else {
            String message = "Can't write text to file because supplied filename" + " is a directory!";
            if (m_logger != null) {
                m_logger.statusMessage(statusMessagePrefix() + "WARNING: " + message);
                m_logger.logMessage("[" + getCustomName() + "] " + message);
            }
        }
    } else {
        String message = "Can't write text because no file has been supplied is a directory!";
        if (m_logger != null) {
            m_logger.statusMessage(statusMessagePrefix() + "WARNING: " + message);
            m_logger.logMessage("[" + getCustomName() + "] " + message);
        }
    }
}
