private static boolean parseVersion(String version, int[] maj, int[] min, int[] rev, int[] point) {
    int major = 0;
    int minor = 0;
    int revision = 0;
    int pnt = 0;
    boolean isSnapshot = false;
    try {
        String tmpStr = version;
        if (tmpStr.toLowerCase().endsWith("-snapshot")) {
            tmpStr = tmpStr.substring(0, tmpStr.toLowerCase().indexOf("-snapshot"));
            isSnapshot = true;
        }
        tmpStr = tmpStr.replace('-', '.');
        if (tmpStr.indexOf(".") > -1) {
            major = Integer.parseInt(tmpStr.substring(0, tmpStr.indexOf(".")));
            tmpStr = tmpStr.substring(tmpStr.indexOf(".") + 1);
            if (tmpStr.indexOf(".") > -1) {
                minor = Integer.parseInt(tmpStr.substring(0, tmpStr.indexOf(".")));
                tmpStr = tmpStr.substring(tmpStr.indexOf(".") + 1);
                if (tmpStr.indexOf(".") > 0) {
                    revision = Integer.parseInt(tmpStr.substring(0, tmpStr.indexOf(".")));
                    tmpStr = tmpStr.substring(tmpStr.indexOf(".") + 1);
                    if (!tmpStr.equals("")) {
                        pnt = Integer.parseInt(tmpStr);
                    } else {
                        pnt = 0;
                    }
                } else {
                    if (!tmpStr.equals("")) {
                        revision = Integer.parseInt(tmpStr);
                    } else {
                        revision = 0;
                    }
                }
            } else {
                if (!tmpStr.equals("")) {
                    minor = Integer.parseInt(tmpStr);
                } else {
                    minor = 0;
                }
            }
        } else {
            if (!tmpStr.equals("")) {
                major = Integer.parseInt(tmpStr);
            } else {
                major = 0;
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
        major = -1;
        minor = -1;
        revision = -1;
    } finally {
        maj[0] = major;
        min[0] = minor;
        rev[0] = revision;
        point[0] = pnt;
    }
    return isSnapshot;
}
