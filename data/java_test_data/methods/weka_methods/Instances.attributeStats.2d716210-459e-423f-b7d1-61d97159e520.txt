/**
 * Calculates summary statistics on the values that appear in this set of
 * instances for a specified attribute.
 *
 * @param index the index of the attribute to summarize (index starts with 0)
 * @return an AttributeStats object with it's fields calculated.
 */
public AttributeStats attributeStats(int index) {
    AttributeStats result = new AttributeStats();
    if (attribute(index).isNominal()) {
        result.nominalCounts = new int[attribute(index).numValues()];
        result.nominalWeights = new double[attribute(index).numValues()];
    }
    if (attribute(index).isNumeric()) {
        result.numericStats = new weka.experiment.Stats();
    }
    result.totalCount = numInstances();
    HashMap<Double, double[]> map = new HashMap<Double, double[]>(2 * result.totalCount);
    for (Instance current : this) {
        double key = current.value(index);
        if (Utils.isMissingValue(key)) {
            result.missingCount++;
        } else {
            double[] values = map.get(key);
            if (values == null) {
                values = new double[2];
                values[0] = 1.0;
                values[1] = current.weight();
                map.put(key, values);
            } else {
                values[0]++;
                values[1] += current.weight();
            }
        }
    }
    for (Entry<Double, double[]> entry : map.entrySet()) {
        result.addDistinct(entry.getKey(), (int) entry.getValue()[0], entry.getValue()[1]);
    }
    return result;
}
