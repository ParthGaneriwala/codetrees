@Override
public void processIncoming(Data data) throws WekaException {
    if (m_isReset) {
        m_isReset = false;
        if (data.getPrimaryPayload() == null) {
            throw new WekaException("We didn't receive any instances!");
        }
        getStepManager().logDetailed("Collecting instances...");
        Instance temp = data.getPrimaryPayload();
        m_structure = new Instances(temp.dataset(), 0).stringFreeStructure();
        m_hasStringAtts = temp.dataset().checkForStringAttributes();
    }
    if (isStopRequested()) {
        getStepManager().interrupted();
        return;
    }
    if (!getStepManager().isStreamFinished(data)) {
        getStepManager().throughputUpdateStart();
        Instance inst = data.getPrimaryPayload();
        if (m_hasStringAtts) {
            for (int i = 0; i < m_structure.numAttributes(); i++) {
                if (m_structure.attribute(i).isString() && !inst.isMissing(i)) {
                    int index = m_structure.attribute(i).addStringValue(inst.stringValue(i));
                    inst.setValue(i, index);
                }
            }
        }
        m_structure.add(inst);
        getStepManager().throughputUpdateEnd();
    } else {
        // output batch
        m_structure.compactify();
        getStepManager().logBasic("Emitting a batch of " + m_structure.numInstances() + " instances.");
        List<String> outCons = new ArrayList<String>(getStepManager().getOutgoingConnections().keySet());
        Data out = new Data(outCons.get(0), m_structure);
        out.setPayloadElement(StepManager.CON_AUX_DATA_SET_NUM, 1);
        out.setPayloadElement(StepManager.CON_AUX_DATA_MAX_SET_NUM, 1);
        if (!isStopRequested()) {
            getStepManager().outputData(out);
            getStepManager().finished();
        } else {
            getStepManager().interrupted();
        }
    }
}
