@SuppressWarnings("deprecation")
@Override
public void run() {
    try {
        if (m_testingSet != null) {
            m_visual.setAnimated();
            // m_visual.setText("Filtering test data...");
            if (m_log != null) {
                m_log.statusMessage(statusMessagePrefix() + "Filtering test data (" + m_testingSet.relationName() + ")");
            }
            Instances filteredTest = weka.filters.Filter.useFilter(m_testingSet, m_Filter);
            // m_visual.setText(oldText);
            m_visual.setStatic();
            TestSetEvent ne = new TestSetEvent(weka.gui.beans.Filter.this, filteredTest);
            ne.m_setNumber = e.m_setNumber;
            ne.m_maxSetNumber = e.m_maxSetNumber;
            notifyTestListeners(ne);
        }
    } catch (Exception ex) {
        ex.printStackTrace();
        if (m_log != null) {
            m_log.logMessage("[Filter] " + statusMessagePrefix() + ex.getMessage());
            m_log.statusMessage(statusMessagePrefix() + "ERROR (See log for details).");
        }
        Filter.this.stop();
    } finally {
        // m_visual.setText(oldText);
        m_visual.setStatic();
        m_state = IDLE;
        if (isInterrupted()) {
            m_trainingSet = null;
            if (m_log != null) {
                m_log.logMessage("[Filter] " + statusMessagePrefix() + " test set interrupted!");
                m_log.statusMessage(statusMessagePrefix() + "INTERRUPTED");
            // m_log.statusMessage("OK");
            }
        } else {
            if (m_log != null) {
                m_log.statusMessage(statusMessagePrefix() + "Finished.");
            }
        }
        block(false);
        m_filterThread = null;
    }
}
