@Override
public String toString() {
    String result;
    String[] authors;
    int i;
    Enumeration<TechnicalInformation> enm;
    result = "";
    authors = getAuthors();
    // BOOK
    if (getType() == Type.BOOK) {
        for (i = 0; i < authors.length; i++) {
            if (i > 0) {
                result += ", ";
            }
            result += authors[i];
        }
        if (exists(Field.YEAR)) {
            result += " (" + getValue(Field.YEAR) + ").";
        } else {
            result += ".";
        }
        result += " " + getValue(Field.TITLE) + ".";
        result += " " + getValue(Field.PUBLISHER);
        if (exists(Field.ADDRESS)) {
            result += ", " + getValue(Field.ADDRESS);
        }
        result += ".";
    } else // ARTICLE
    if (getType() == Type.ARTICLE) {
        for (i = 0; i < authors.length; i++) {
            if (i > 0) {
                result += ", ";
            }
            result += authors[i];
        }
        if (exists(Field.YEAR)) {
            result += " (" + getValue(Field.YEAR) + ").";
        } else {
            result += ".";
        }
        result += " " + getValue(Field.TITLE) + ".";
        // journal
        if (exists(Field.JOURNAL)) {
            result += " " + getValue(Field.JOURNAL) + ".";
            if (exists(Field.VOLUME)) {
                result += " " + getValue(Field.VOLUME);
            }
            if (exists(Field.NUMBER)) {
                result += "(" + getValue(Field.NUMBER) + ")";
            }
            if (exists(Field.PAGES)) {
                result += ":" + getValue(Field.PAGES);
            }
            result += ".";
        }
        // URL
        if (exists(Field.URL)) {
            result += " URL " + getValue(Field.URL) + ".";
        }
    } else // CONFERENCE/INPROCEEDINGS
    if ((getType() == Type.CONFERENCE) || (getType() == Type.INPROCEEDINGS)) {
        for (i = 0; i < authors.length; i++) {
            if (i > 0) {
                result += ", ";
            }
            result += authors[i];
        }
        result += ": " + getValue(Field.TITLE) + ".";
        result += " In: " + getValue(Field.BOOKTITLE);
        if (exists(Field.ADDRESS)) {
            result += ", " + getValue(Field.ADDRESS);
        }
        if (exists(Field.PAGES)) {
            result += ", " + getValue(Field.PAGES);
        }
        if (exists(Field.YEAR)) {
            result += ", " + getValue(Field.YEAR) + ".";
        } else {
            result += ".";
        }
    } else // INCOLLECTION
    if (getType() == Type.INCOLLECTION) {
        for (i = 0; i < authors.length; i++) {
            if (i > 0) {
                result += ", ";
            }
            result += authors[i];
        }
        result += ": " + getValue(Field.TITLE) + ".";
        result += " In ";
        if (exists(Field.EDITOR)) {
            result += getValue(Field.EDITOR) + ", editors, ";
        }
        result += getValue(Field.BOOKTITLE);
        if (exists(Field.ADDRESS)) {
            result += ", " + getValue(Field.ADDRESS);
        }
        if (exists(Field.PAGES)) {
            result += ", " + getValue(Field.PAGES);
        }
        if (exists(Field.YEAR)) {
            result += ", " + getValue(Field.YEAR) + ".";
        } else {
            result += ".";
        }
    } else // default
    {
        for (i = 0; i < authors.length; i++) {
            if (i > 0) {
                result += ", ";
            }
            result += authors[i];
        }
        if (exists(Field.YEAR)) {
            result += " (" + getValue(Field.YEAR) + ").";
        } else {
            result += ".";
        }
        result += " " + getValue(Field.TITLE) + ".";
        if (exists(Field.ADDRESS)) {
            result += " " + getValue(Field.ADDRESS) + ".";
        }
        if (exists(Field.URL)) {
            result += " URL " + getValue(Field.URL) + ".";
        }
    }
    // additional informations?
    enm = additional();
    while (enm.hasMoreElements()) {
        result += "\n\n" + enm.nextElement().toString();
    }
    return result;
}
