protected void makeStructure() {
    // make final structure
    ArrayList<Attribute> attribs = new ArrayList<Attribute>();
    for (int i = 0; i < m_types.length; i++) {
        if (m_types[i] == TYPE.STRING || m_types[i] == TYPE.UNDETERMINED) {
            attribs.add(new Attribute(m_structure.attribute(i).name(), (java.util.List<String>) null));
        } else if (m_types[i] == TYPE.NUMERIC) {
            attribs.add(new Attribute(m_structure.attribute(i).name()));
        } else if (m_types[i] == TYPE.NOMINAL) {
            LinkedHashSet<String> vals = m_nominalVals.get(i);
            ArrayList<String> theVals = new ArrayList<String>();
            if (vals.size() > 0) {
                for (String v : vals) {
                    /*
             * if (v.startsWith("'") || v.startsWith("\"")) { v = v.substring(1,
             * v.length() - 1); }
             */
                    theVals.add(v);
                }
            } else {
                theVals.add("*unknown*");
            }
            attribs.add(new Attribute(m_structure.attribute(i).name(), theVals));
        } else {
            attribs.add(new Attribute(m_structure.attribute(i).name(), m_dateFormat));
        }
    }
    m_structure = new Instances(m_structure.relationName(), attribs, 0);
}
