public void disconnectStep(Step toDisconnect) {
    // incoming first
    List<String> emptyCons = new ArrayList<String>();
    for (Map.Entry<String, List<StepManager>> e : m_connectedByTypeIncoming.entrySet()) {
        // for (List<StepManager> sList : m_connectedByTypeIncoming.values()) {
        List<StepManager> sList = e.getValue();
        disconnectStep(sList, toDisconnect);
        if (sList.size() == 0) {
            emptyCons.add(e.getKey());
        }
    }
    for (String conn : emptyCons) {
        m_connectedByTypeIncoming.remove(conn);
    }
    emptyCons.clear();
    // outgoing
    for (Map.Entry<String, List<StepManager>> e : m_connectedByTypeOutgoing.entrySet()) {
        // for (List<StepManager> sList : m_connectedByTypeOutgoing.values()) {
        List<StepManager> sList = e.getValue();
        disconnectStep(sList, toDisconnect);
        if (sList.size() == 0) {
            emptyCons.add(e.getKey());
        }
    }
    for (String conn : emptyCons) {
        m_connectedByTypeOutgoing.remove(conn);
    }
}
