public List<SplitCandidate> getPossibleSplits(SplitMetric splitMetric) {
    List<SplitCandidate> splits = new ArrayList<SplitCandidate>();
    // null split
    List<Map<String, WeightMass>> nullDist = new ArrayList<Map<String, WeightMass>>();
    nullDist.add(m_classDistribution);
    SplitCandidate nullSplit = new SplitCandidate(null, nullDist, splitMetric.evaluateSplit(m_classDistribution, nullDist));
    splits.add(nullSplit);
    for (Map.Entry<String, ConditionalSufficientStats> e : m_nodeStats.entrySet()) {
        ConditionalSufficientStats stat = e.getValue();
        SplitCandidate splitCandidate = stat.bestSplit(splitMetric, m_classDistribution, e.getKey());
        if (splitCandidate != null) {
            splits.add(splitCandidate);
        }
    }
    return splits;
}
