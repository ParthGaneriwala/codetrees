@Override
public boolean input(Instance instance) {
    if (getInputFormat() == null) {
        throw new IllegalStateException("No input instance format defined");
    }
    if (m_NewBatch) {
        resetQueue();
        m_NewBatch = false;
    }
    if (getOutputFormat().numAttributes() == 0) {
        return false;
    }
    if (m_selectedAttributes.length == 0) {
        push(instance);
    } else {
        double[] vals = new double[getOutputFormat().numAttributes()];
        for (int i = 0; i < instance.numAttributes(); i++) {
            double currentV = instance.value(i);
            if (!m_selectedCols.isInRange(i)) {
                vals[i] = currentV;
            } else {
                if (currentV == Utils.missingValue()) {
                    vals[i] = currentV;
                } else {
                    String currentS = instance.attribute(i).value((int) currentV);
                    String replace = m_ignoreCase ? m_renameMap.get(currentS.toLowerCase()) : m_renameMap.get(currentS);
                    if (replace == null) {
                        vals[i] = currentV;
                    } else {
                        vals[i] = getOutputFormat().attribute(i).indexOfValue(replace);
                    }
                }
            }
        }
        Instance inst = null;
        if (instance instanceof SparseInstance) {
            inst = new SparseInstance(instance.weight(), vals);
        } else {
            inst = new DenseInstance(instance.weight(), vals);
        }
        copyValues(inst, false, instance.dataset(), outputFormatPeek());
        // No need to copy
        push(inst);
    }
    return true;
}
