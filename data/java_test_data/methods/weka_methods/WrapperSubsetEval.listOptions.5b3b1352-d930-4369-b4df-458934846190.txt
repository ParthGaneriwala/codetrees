@Override
public Enumeration<Option> listOptions() {
    Vector<Option> newVector = new Vector<Option>(4);
    newVector.addElement(new Option("\tclass name of base learner to use for \taccuracy estimation.\n" + "\tPlace any classifier options LAST on the command line\n" + "\tfollowing a \"--\". eg.:\n" + "\t\t-B weka.classifiers.bayes.NaiveBayes ... -- -K\n" + "\t(default: weka.classifiers.rules.ZeroR)", "B", 1, "-B <base learner>"));
    newVector.addElement(new Option("\tnumber of cross validation folds to use for estimating accuracy.\n" + "\t(default=5)", "F", 1, "-F <num>"));
    newVector.addElement(new Option("\tSeed for cross validation accuracy testimation.\n" + "\t(default = 1)", "R", 1, "-R <seed>"));
    newVector.addElement(new Option("\tthreshold by which to execute another cross validation\n" + "\t(standard deviation---expressed as a percentage of the mean).\n" + "\t(default: 0.01 (1%))", "T", 1, "-T <num>"));
    newVector.addElement(new Option("\tPerformance evaluation measure to use for selecting attributes.\n" + "\t(Default = default: accuracy for discrete class and rmse for " + "numeric class)", "E", 1, "-E " + Tag.toOptionList(TAGS_EVALUATION)));
    newVector.addElement(new Option("\tOptional class value (label or 1-based index) to use in conjunction with\n" + "\tIR statistics (f-meas, auc or auprc). Omitting this option will use\n" + "\tthe class-weighted average.", "IRclass", 1, "-IRclass <label | index>"));
    if ((m_BaseClassifier != null) && (m_BaseClassifier instanceof OptionHandler)) {
        newVector.addElement(new Option("", "", 0, "\nOptions specific to scheme " + m_BaseClassifier.getClass().getName() + ":"));
        newVector.addAll(Collections.list(((OptionHandler) m_BaseClassifier).listOptions()));
    }
    return newVector.elements();
}
