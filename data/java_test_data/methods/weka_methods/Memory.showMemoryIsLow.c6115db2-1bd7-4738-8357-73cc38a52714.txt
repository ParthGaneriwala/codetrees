public boolean showMemoryIsLow() {
    if (!isEnabled() || (m_MemoryUsage == null)) {
        return true;
    }
    String msg = "Warning: memory is running low - available heap space is less than " + "20% of maximum or 100MB (whichever is greater)\n\n" + "- initial heap size:   " + Utils.doubleToString(toMegaByte(m_MemoryUsage.getInit()), 1) + "MB\n" + "- current memory (heap) used:  " + Utils.doubleToString(toMegaByte(m_MemoryUsage.getUsed()), 1) + "MB\n" + "- max. memory (heap) available: " + Utils.doubleToString(toMegaByte(m_MemoryUsage.getMax()), 1) + "MB\n\n" + "Consider deleting some results before continuing.\nCheck the Weka FAQ " + "on the web for suggestions on how to save memory.\n" + "Note that Weka will shut down when less than 50MB remain." + "\nDo you wish to continue regardless?\n\n";
    System.err.println(msg);
    if (getUseGUI()) {
        if (!Utils.getDontShowDialog("weka.core.Memory.LowMemoryWarning")) {
            JCheckBox dontShow = new JCheckBox("Do not show this message again");
            Object[] stuff = new Object[2];
            stuff[0] = msg;
            stuff[1] = dontShow;
            int result = JOptionPane.showConfirmDialog(null, stuff, "Memory", JOptionPane.YES_NO_OPTION);
            if (dontShow.isSelected()) {
                try {
                    Utils.setDontShowDialog("weka.core.Memory.LowMemoryWarning");
                } catch (Exception ex) {
                // quietly ignore
                }
            }
            return (result == JOptionPane.YES_OPTION);
        }
    }
    return true;
}
