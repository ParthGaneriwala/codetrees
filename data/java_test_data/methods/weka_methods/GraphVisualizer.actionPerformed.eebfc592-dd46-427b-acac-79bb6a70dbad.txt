@Override
public void actionPerformed(ActionEvent ae) {
    JTextField jt = (JTextField) ae.getSource();
    try {
        int i = -1;
        i = jt.getText().indexOf('%');
        if (i == -1) {
            i = Integer.parseInt(jt.getText());
        } else {
            i = Integer.parseInt(jt.getText().substring(0, i));
        }
        if (i <= 999) {
            scale = i / 100D;
        }
        jt.setText((int) (scale * 100) + "%");
        if (scale > 0.1) {
            if (!jBtZoomOut.isEnabled()) {
                jBtZoomOut.setEnabled(true);
            }
        } else {
            jBtZoomOut.setEnabled(false);
        }
        if (scale < 9.99) {
            if (!jBtZoomIn.isEnabled()) {
                jBtZoomIn.setEnabled(true);
            }
        } else {
            jBtZoomIn.setEnabled(false);
        }
        setAppropriateSize();
        // m_gp.clearBuffer();
        m_gp.repaint();
        m_gp.invalidate();
        m_js.revalidate();
    } catch (NumberFormatException ne) {
        JOptionPane.showMessageDialog(GraphVisualizer.this.getParent(), "Invalid integer entered for zoom.", "Error", JOptionPane.ERROR_MESSAGE);
        jt.setText((scale * 100) + "%");
    }
}
