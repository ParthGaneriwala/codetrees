private double[] incomingParamVector(double[] incomingInst) throws Exception {
    Instances miningSchemaI = m_miningSchema.getFieldsAsInstances();
    double[] incomingPV = new double[m_parameterList.size()];
    for (int i = 0; i < m_parameterList.size(); i++) {
        // 
        // default is that this row represents the intercept.
        // this will be the case if there are all null entries in this row
        incomingPV[i] = 1.0;
        // loop over the attributes (predictors)
        for (int j = 0; j < miningSchemaI.numAttributes(); j++) {
            PPCell cellEntry = m_ppMatrix[i][j];
            Predictor p = null;
            if (cellEntry != null) {
                if ((p = getFactor(cellEntry.m_predictorName)) != null) {
                    if ((int) incomingInst[p.m_miningSchemaIndex] == (int) cellEntry.m_value) {
                        // we have a match
                        incomingPV[i] *= 1.0;
                    } else {
                        incomingPV[i] *= 0.0;
                    }
                } else if ((p = getCovariate(cellEntry.m_predictorName)) != null) {
                    incomingPV[i] *= Math.pow(incomingInst[p.m_miningSchemaIndex], cellEntry.m_value);
                } else {
                    throw new Exception("[GeneralRegression] can't find predictor " + cellEntry.m_predictorName + " in either the list of factors or covariates");
                }
            }
        }
    }
    return incomingPV;
}
