public void testIncremental() {
    Instances icopy = new Instances(m_Instances);
    Instances result = null;
    boolean headerImmediate = false;
    try {
        headerImmediate = m_Filter.setInputFormat(icopy);
    } catch (Exception ex) {
        ex.printStackTrace();
        fail("Exception thrown on setInputFormat(): \n" + ex.getMessage());
    }
    if (headerImmediate) {
        if (VERBOSE)
            System.err.println("Filter makes header immediately available.");
        result = m_Filter.getOutputFormat();
    }
    // Pass all the instances to the filter
    for (int i = 0; i < icopy.numInstances(); i++) {
        if (VERBOSE)
            System.err.println("Input instance to filter");
        boolean collectNow = false;
        try {
            collectNow = m_Filter.input(icopy.instance(i));
        } catch (Exception ex) {
            ex.printStackTrace();
            fail("Exception thrown on input(): \n" + ex.getMessage());
        }
        if (collectNow) {
            if (VERBOSE)
                System.err.println("Filter said collect immediately");
            if (!headerImmediate) {
                fail("Filter didn't return true from setInputFormat() earlier!");
            }
            if (VERBOSE)
                System.err.println("Getting output instance");
            result.add(m_Filter.output());
        }
    }
    // Say that input has finished, and print any pending output instances
    if (VERBOSE)
        System.err.println("Setting end of batch");
    boolean toCollect = false;
    try {
        toCollect = m_Filter.batchFinished();
    } catch (Exception ex) {
        ex.printStackTrace();
        fail("Exception thrown on batchFinished(): \n" + ex.getMessage());
    }
    if (toCollect) {
        if (VERBOSE)
            System.err.println("Filter said collect output");
        if (!headerImmediate) {
            if (VERBOSE)
                System.err.println("Getting output format");
            result = m_Filter.getOutputFormat();
        }
        if (VERBOSE)
            System.err.println("Getting output instance");
        while (m_Filter.numPendingOutput() > 0) {
            result.add(m_Filter.output());
            if (VERBOSE)
                System.err.println("Getting output instance");
        }
    }
    assertNotNull(result);
    // Check the output iss valid for printing by trying to write out to
    // a stringbuffer
    StringWriter sw = new StringWriter(2000);
    sw.write(result.toString());
}
