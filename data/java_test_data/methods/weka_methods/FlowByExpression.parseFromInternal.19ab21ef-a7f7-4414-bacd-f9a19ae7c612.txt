@Override
protected String parseFromInternal(String expression) {
    if (expression.startsWith("|| ")) {
        m_isAnOr = true;
    }
    if (expression.startsWith("|| ") || expression.startsWith("&& ")) {
        expression = expression.substring(3, expression.length());
    }
    if (expression.charAt(0) == '!') {
        setNegated(true);
        expression = expression.substring(1, expression.length());
    }
    if (expression.charAt(0) != '(') {
        throw new IllegalArgumentException("Malformed expression! Was expecting a \"(\"");
    }
    expression = expression.substring(1, expression.length());
    while (expression.charAt(0) != ')') {
        int offset = 3;
        if (expression.charAt(offset) == '(') {
            ExpressionNode child = new BracketNode();
            expression = child.parseFromInternal(expression);
            m_children.add(child);
        } else {
            // must be an ExpressionClause
            ExpressionNode child = new ExpressionClause();
            expression = child.parseFromInternal(expression);
            m_children.add(child);
        }
    }
    if (m_children.size() > 0) {
        m_children.get(0).setShowAndOr(false);
    }
    return expression;
}
