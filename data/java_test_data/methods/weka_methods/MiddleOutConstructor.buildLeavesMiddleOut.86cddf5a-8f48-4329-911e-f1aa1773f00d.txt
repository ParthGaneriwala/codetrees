protected void buildLeavesMiddleOut(BallNode node) throws Exception {
    if (node.m_Left != null && node.m_Right != null) {
        // if an internal node
        buildLeavesMiddleOut(node.m_Left);
        buildLeavesMiddleOut(node.m_Right);
    } else if (node.m_Left != null || node.m_Right != null) {
        throw new Exception("Invalid leaf assignment. Please check code");
    } else {
        // if node is a leaf
        BallNode n2 = buildTreeMiddleOut(node.m_Start, node.m_End);
        if (n2.m_Left != null && n2.m_Right != null) {
            node.m_Left = n2.m_Left;
            node.m_Right = n2.m_Right;
            buildLeavesMiddleOut(node);
        // the stopping condition in buildTreeMiddleOut will stop the recursion,
        // where it won't split a node at all, and we won't recurse here.
        } else if (n2.m_Left != null || n2.m_Right != null) {
            throw new Exception("Invalid leaf assignment. Please check code");
        }
    }
}
