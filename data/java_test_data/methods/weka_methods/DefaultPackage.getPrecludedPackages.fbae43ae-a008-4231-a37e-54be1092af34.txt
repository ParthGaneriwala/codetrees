@Override
public List<Package> getPrecludedPackages(List<Package> packages) throws Exception {
    List<Package> result = new ArrayList<>();
    Object precluded = getPackageMetaDataElement("Precludes");
    if (precluded != null) {
        StringTokenizer tok = new StringTokenizer(precluded.toString(), ",");
        while (tok.hasMoreTokens()) {
            String nextT = tok.nextToken().trim();
            String[] splitD = splitNameVersion(nextT);
            // look for a match
            for (Package p : packages) {
                if (p.getName().equalsIgnoreCase(splitD[0].trim())) {
                    // that version does not matter
                    if (splitD[1] != null && splitD[2] != null) {
                        String versionI = p.getPackageMetaDataElement("Version").toString().trim();
                        if (splitD.length == 3) {
                            VersionPackageConstraint.VersionComparison constraint = VersionPackageConstraint.getVersionComparison(splitD[1]);
                            if (VersionPackageConstraint.checkConstraint(versionI, constraint, splitD[2])) {
                                result.add(p);
                            }
                        } else {
                            VersionRangePackageConstraint versionRConstraint = new VersionRangePackageConstraint(p);
                            VersionPackageConstraint.VersionComparison comp1 = VersionPackageConstraint.getVersionComparison(splitD[1]);
                            VersionPackageConstraint.VersionComparison comp2 = VersionPackageConstraint.getVersionComparison(splitD[3]);
                            versionRConstraint.setRangeConstraint(splitD[2], comp1, splitD[4], comp2);
                            if (versionRConstraint.checkConstraint(p)) {
                                result.add(p);
                            }
                        }
                    } else {
                        result.add(p);
                    }
                }
            }
        }
    }
    return result;
}
