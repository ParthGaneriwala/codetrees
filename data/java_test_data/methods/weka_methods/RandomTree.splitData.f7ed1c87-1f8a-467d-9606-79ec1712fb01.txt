protected Instances[] splitData(Instances data) throws Exception {
    // Allocate array of Instances objects
    Instances[] subsets = new Instances[m_Prop.length];
    for (int i = 0; i < m_Prop.length; i++) {
        subsets[i] = new Instances(data, data.numInstances());
    }
    // Go through the data
    for (int i = 0; i < data.numInstances(); i++) {
        // Get instance
        Instance inst = data.instance(i);
        // Does the instance have a missing value?
        if (inst.isMissing(m_Attribute)) {
            // Split instance up
            for (int k = 0; k < m_Prop.length; k++) {
                if (m_Prop[k] > 0) {
                    Instance copy = (Instance) inst.copy();
                    copy.setWeight(m_Prop[k] * inst.weight());
                    subsets[k].add(copy);
                }
            }
            // Proceed to next instance
            continue;
        }
        // Do we have a nominal attribute?
        if (data.attribute(m_Attribute).isNominal()) {
            subsets[(int) inst.value(m_Attribute)].add(inst);
            // Proceed to next instance
            continue;
        }
        // Do we have a numeric attribute?
        if (data.attribute(m_Attribute).isNumeric()) {
            subsets[(inst.value(m_Attribute) < m_SplitPoint) ? 0 : 1].add(inst);
            // Proceed to next instance
            continue;
        }
        // Else throw an exception
        throw new IllegalArgumentException("Unknown attribute type");
    }
    // Save memory
    for (int i = 0; i < m_Prop.length; i++) {
        subsets[i].compactify();
    }
    // Return the subsets
    return subsets;
}
