protected void initialize() {
    if (m_sorter.getBufferSize() != null && m_sorter.getBufferSize().length() > 0) {
        m_buffSize.setText(m_sorter.getBufferSize());
    }
    if (m_sorter.getTempDirectory() != null && m_sorter.getTempDirectory().length() > 0) {
        m_tempDir.setText(m_sorter.getTempDirectory());
    }
    String sString = m_sorter.getSortDetails();
    m_listModel = new DefaultListModel();
    m_list.setModel(m_listModel);
    if (sString != null && sString.length() > 0) {
        String[] parts = sString.split("@@sort-rule@@");
        if (parts.length > 0) {
            m_upBut.setEnabled(true);
            m_downBut.setEnabled(true);
            for (String sPart : parts) {
                Sorter.SortRule s = new Sorter.SortRule(sPart);
                m_listModel.addElement(s);
            }
        }
        m_list.repaint();
    }
    // try and set up attribute combo
    if (m_sorter.getConnectedFormat() != null) {
        Instances incoming = m_sorter.getConnectedFormat();
        m_attCombo.removeAllItems();
        for (int i = 0; i < incoming.numAttributes(); i++) {
            m_attCombo.addItem(incoming.attribute(i).name());
        }
    }
}
