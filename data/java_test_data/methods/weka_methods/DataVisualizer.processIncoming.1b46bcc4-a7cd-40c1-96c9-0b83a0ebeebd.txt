@Override
public synchronized void processIncoming(Data data) throws WekaException {
    getStepManager().processing();
    Instances toPlot = data.getPrimaryPayload();
    String name = (new SimpleDateFormat("HH:mm:ss.SSS - ")).format(new Date());
    String relationName = toPlot.relationName();
    boolean connectIt = relationName.startsWith("__");
    if (connectIt) {
        toPlot = new Instances(toPlot);
        toPlot.setRelationName(relationName.substring(2));
    }
    PlotData2D pd = new PlotData2D(toPlot);
    if (connectIt) {
        boolean[] connect = new boolean[toPlot.numInstances()];
        for (int i = 1; i < toPlot.numInstances(); i++) {
            if (toPlot.instance(i - 1).weight() >= 0 && toPlot.instance(i).weight() >= 0) {
                connect[i] = true;
            }
        }
        try {
            pd.setConnectPoints(connect);
        } catch (Exception ex) {
            throw new WekaException(ex);
        }
        relationName = relationName.substring(2);
    }
    String title = name + relationName;
    getStepManager().logDetailed("Processing " + title);
    pd.setPlotName(title);
    m_plots.add(pd);
    if (getStepManager().numOutgoingConnectionsOfType(StepManager.CON_IMAGE) > 0) {
        setupOffscreenRenderer();
        BufferedImage osi = createOffscreenPlot(pd);
        Data imageData = new Data(StepManager.CON_IMAGE, osi);
        if (relationName.length() > 10) {
            relationName = relationName.substring(0, 10);
        }
        imageData.setPayloadElement(StepManager.CON_AUX_DATA_TEXT_TITLE, relationName + ":" + m_xAxis + "," + m_yAxis);
        getStepManager().outputData(imageData);
    }
    getStepManager().finished();
}
