public void and(Capabilities c) {
    for (Capability cap : Capability.values()) {
        // capability
        if (handles(cap) && c.handles(cap)) {
            m_Capabilities.add(cap);
        } else {
            m_Capabilities.remove(cap);
        }
        // dependency
        if (hasDependency(cap) && c.hasDependency(cap)) {
            m_Dependencies.add(cap);
        } else {
            m_Dependencies.remove(cap);
        }
    }
    // minimum number of instances that both handlers need at least to work
    if (c.getMinimumNumberInstances() > getMinimumNumberInstances()) {
        setMinimumNumberInstances(c.getMinimumNumberInstances());
    }
    HashSet<Class> intersection = new HashSet<Class>();
    for (Class cl : c.m_InterfaceDefinedCapabilities) {
        if (m_InterfaceDefinedCapabilities.contains(cl)) {
            intersection.add(cl);
        }
    }
    m_InterfaceDefinedCapabilities = intersection;
}
