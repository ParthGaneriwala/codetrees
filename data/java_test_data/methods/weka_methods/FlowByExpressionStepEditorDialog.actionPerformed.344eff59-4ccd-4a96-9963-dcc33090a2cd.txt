@Override
public void actionPerformed(ActionEvent e) {
    if (m_operatorCombo.getSelectedIndex() > 5) {
        m_rhsIsAttribute.setSelected(false);
        m_rhsIsAttribute.setEnabled(false);
    } else {
        m_rhsIsAttribute.setEnabled(true);
    }
    if (m_expressionTree != null) {
        TreePath p = m_expressionTree.getSelectionPath();
        if (p != null) {
            if (p.getLastPathComponent() instanceof DefaultMutableTreeNode) {
                DefaultMutableTreeNode tNode = (DefaultMutableTreeNode) p.getLastPathComponent();
                FlowByExpression.ExpressionNode thisNode = (FlowByExpression.ExpressionNode) tNode.getUserObject();
                if (thisNode instanceof FlowByExpression.ExpressionClause) {
                    String selection = m_operatorCombo.getSelectedItem().toString();
                    FlowByExpression.ExpressionClause.ExpressionType t = FlowByExpression.ExpressionClause.ExpressionType.EQUALS;
                    for (FlowByExpression.ExpressionClause.ExpressionType et : FlowByExpression.ExpressionClause.ExpressionType.values()) {
                        if (et.toString().equals(selection)) {
                            t = et;
                            break;
                        }
                    }
                    ((FlowByExpression.ExpressionClause) thisNode).setOperator(t);
                    DefaultTreeModel tmodel = (DefaultTreeModel) m_expressionTree.getModel();
                    tmodel.nodeStructureChanged(tNode);
                    updateExpressionLabel();
                }
            }
        }
    }
}
