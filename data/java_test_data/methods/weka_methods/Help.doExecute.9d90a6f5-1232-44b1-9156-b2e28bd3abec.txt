@Override
protected void doExecute(String[] params) throws Exception {
    List<AbstractCommand> cmds;
    AbstractCommand cmd;
    List<AbstractCommand> help;
    boolean all;
    all = false;
    cmds = getCommands();
    // specific command?
    help = new ArrayList<>();
    for (String param : params) {
        cmd = getCommand(param);
        if (cmd != null) {
            help.add(cmd);
            break;
        } else {
            throw new Exception("Unknown command: " + param);
        }
    }
    // all?
    if (help.isEmpty()) {
        all = true;
        help.addAll(cmds);
    }
    for (AbstractCommand c : help) {
        System.out.println(c.getName() + (c.getParameterHelp().isEmpty() ? "" : " " + c.getParameterHelp()));
        String[] lines = c.getHelp().split("\n");
        for (String line : lines) System.out.println("\t" + line);
        System.out.println();
    }
    // additional information
    if (all) {
        System.out.println("\nNotes:");
        System.out.println("- Variables can be used anywhere using '${<name>}' with '<name>'");
        System.out.println("  being the name of the variable.");
        System.out.println("- Environment variables can be used with '${env.<name>}', ");
        System.out.println("  e.g., '${env.PATH}' to retrieve the PATH variable.");
    }
}
