public static PackageManager create() {
    PackageManager pm = new DefaultPackageManager();
    pm.establishProxy();
    try {
        // See if org.pentaho.packageManagement.manager has been set
        String managerName = System.getProperty("org.pentaho.packageManagement.manager");
        if (managerName != null && managerName.length() > 0) {
            Object manager = Beans.instantiate(pm.getClass().getClassLoader(), managerName);
            if (manager instanceof PackageManager) {
                pm = (PackageManager) manager;
            }
        } else {
            // See if there is a named package manager specified in
            // $HOME/PackageManager.props
            // that we should try to instantiate
            File packageManagerPropsFile = new File(System.getProperty("user.home") + File.separator + "PackageManager.props");
            if (packageManagerPropsFile.exists()) {
                Properties pmProps = new Properties();
                pmProps.load(new FileInputStream(packageManagerPropsFile));
                managerName = pmProps.getProperty("org.pentaho.packageManager.manager");
                if (managerName != null && managerName.length() > 0) {
                    Object manager = Beans.instantiate(pm.getClass().getClassLoader(), managerName);
                    if (manager instanceof PackageManager) {
                        pm = (PackageManager) manager;
                    }
                }
            }
        }
    } catch (Exception ex) {
        // ignore any problems and just return the default package manager
        System.err.println("Problem instantiating package manager. Using DefaultPackageManager.");
    }
    return pm;
}
