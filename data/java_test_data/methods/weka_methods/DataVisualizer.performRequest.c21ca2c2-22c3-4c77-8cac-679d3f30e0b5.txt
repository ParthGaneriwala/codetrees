@Override
public void performRequest(String request) {
    if (request.compareTo("Show plot") == 0) {
        try {
            // popup visualize panel
            if (!m_framePoppedUp) {
                m_framePoppedUp = true;
                final VisualizePanel vis = new VisualizePanel();
                PlotData2D pd1 = new PlotData2D(m_visualizeDataSet);
                String relationName = m_visualizeDataSet.relationName();
                // events to specify that the points should be connected
                if (relationName.startsWith("__")) {
                    boolean[] connect = new boolean[m_visualizeDataSet.numInstances()];
                    for (int i = 1; i < connect.length; i++) {
                        connect[i] = true;
                    }
                    pd1.setConnectPoints(connect);
                    relationName = relationName.substring(2);
                }
                pd1.setPlotName(relationName);
                try {
                    vis.setMasterPlot(pd1);
                } catch (Exception ex) {
                    System.err.println("Problem setting up " + "visualization (DataVisualizer)");
                    ex.printStackTrace();
                }
                final JFrame jf = Utils.getWekaJFrame("Visualize", m_visual);
                jf.getContentPane().setLayout(new BorderLayout());
                jf.getContentPane().add(vis, BorderLayout.CENTER);
                jf.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        jf.dispose();
                        m_framePoppedUp = false;
                    }
                });
                jf.pack();
                jf.setSize(800, 600);
                jf.setLocationRelativeTo(SwingUtilities.getWindowAncestor(m_visual));
                jf.setVisible(true);
                m_popupFrame = jf;
            } else {
                m_popupFrame.toFront();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            m_framePoppedUp = false;
        }
    } else {
        throw new IllegalArgumentException(request + " not supported (DataVisualizer)");
    }
}
