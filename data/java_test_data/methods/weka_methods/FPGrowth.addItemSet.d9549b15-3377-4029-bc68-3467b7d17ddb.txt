public void addItemSet(Collection<BinaryItem> itemSet, Map<BinaryItem, FPTreeRoot.Header> headerTable, int incr) {
    Iterator<BinaryItem> i = itemSet.iterator();
    if (i.hasNext()) {
        BinaryItem first = i.next();
        FPTreeNode aChild;
        if (!m_children.containsKey(first)) {
            // not in the tree, so add it.
            aChild = new FPTreeNode(this, first);
            m_children.put(first, aChild);
            // update the header
            if (!headerTable.containsKey(first)) {
                headerTable.put(first, new FPTreeRoot.Header());
            }
            // append new node to header list
            headerTable.get(first).addToList(aChild);
        } else {
            // get the appropriate child node
            aChild = m_children.get(first);
        }
        // update counts in header table
        headerTable.get(first).getProjectedCounts().increaseCount(0, incr);
        // increase the child's count
        aChild.increaseProjectedCount(0, incr);
        // proceed recursively
        itemSet.remove(first);
        aChild.addItemSet(itemSet, headerTable, incr);
    }
}
