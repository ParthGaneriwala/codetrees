@Override
public void actionPerformed(ActionEvent e) {
    try {
        ThresholdCurve tc = new ThresholdCurve();
        Instances result = tc.getCurve(preds, classValue);
        // Create a dummy class attribute with the chosen
        // class value as index 0 (if necessary).
        Attribute classAttToUse = classAtt;
        if (classValue != 0) {
            ArrayList<String> newNames = new ArrayList<String>();
            newNames.add(classAtt.value(classValue));
            for (int k = 0; k < classAtt.numValues(); k++) {
                if (k != classValue) {
                    newNames.add(classAtt.value(k));
                }
            }
            classAttToUse = new Attribute(classAtt.name(), newNames);
        }
        CostBenefitAnalysis cbAnalysis = new CostBenefitAnalysis();
        PlotData2D tempd = new PlotData2D(result);
        tempd.setPlotName(result.relationName());
        tempd.m_alwaysDisplayPointsOfThisSize = 10;
        // specify which points are connected
        boolean[] cp = new boolean[result.numInstances()];
        for (int n = 1; n < cp.length; n++) {
            cp[n] = true;
        }
        tempd.setConnectPoints(cp);
        String windowTitle = "";
        if (classifier != null) {
            String cname = classifier.getClass().getName();
            if (cname.startsWith("weka.classifiers.")) {
                windowTitle = "" + cname.substring("weka.classifiers.".length()) + " ";
            }
        }
        windowTitle += " (class = " + classAttToUse.value(0) + ")";
        // add plot
        cbAnalysis.setCurveData(tempd, classAttToUse);
        visualizeCostBenefitAnalysis(cbAnalysis, windowTitle);
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}
