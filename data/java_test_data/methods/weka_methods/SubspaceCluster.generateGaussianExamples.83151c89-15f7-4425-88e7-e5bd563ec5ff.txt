private void generateGaussianExamples(Instances format, int numInstances, Random random, SubspaceClusterDefinition cl, String cName) {
    boolean makeInteger = cl.isInteger();
    int numAtts = m_NumAttributes;
    if (getClassFlag()) {
        numAtts++;
    }
    boolean[] attributes = cl.getAttributes();
    double[] meanValue = cl.getMeanValue();
    double[] stddevValue = cl.getStddevValue();
    for (int j = 0; j < numInstances; j++) {
        double[] values = new double[numAtts];
        int num = -1;
        for (int i = 0; i < m_NumAttributes; i++) {
            if (attributes[i]) {
                num++;
                double value = meanValue[num] + (random.nextGaussian() * stddevValue[num]);
                if (makeInteger) {
                    value = Math.round(value);
                }
                values[i] = value;
            } else {
                values[i] = Utils.missingValue();
            }
        }
        if (getClassFlag()) {
            values[format.classIndex()] = format.classAttribute().indexOfValue(cName);
        }
        DenseInstance example = new DenseInstance(1.0, values);
        example.setDataset(format);
        format.add(example);
    }
}
