public static Expression getExpression(String name, Node expression, FieldMetaInfo.Optype opType, ArrayList<Attribute> fieldDefs, TransformationDictionary transDict) throws Exception {
    Expression result = null;
    if (name.equals("Constant")) {
        // construct a Constant expression
        result = new Constant((Element) expression, opType, fieldDefs);
    } else if (name.equals("FieldRef")) {
        // construct a FieldRef expression
        result = new FieldRef((Element) expression, opType, fieldDefs);
    } else if (name.equals("Apply")) {
        // construct an Apply expression
        result = new Apply((Element) expression, opType, fieldDefs, transDict);
    } else if (name.equals("NormDiscrete")) {
        result = new NormDiscrete((Element) expression, opType, fieldDefs);
    } else if (name.equals("NormContinuous")) {
        result = new NormContinuous((Element) expression, opType, fieldDefs);
    } else if (name.equals("Discretize")) {
        result = new Discretize((Element) expression, opType, fieldDefs);
    } else if (name.equals("MapValues") || name.equals("Aggregate")) {
        throw new Exception("[Expression] Unhandled Expression type " + name);
    }
    return result;
}
