protected void split(Stack<DistanceNode> point_set, Stack<DistanceNode> far_set, int max_scale) {
    int new_index = 0;
    double fmax = dist_of_scale(max_scale);
    for (int i = 0; i < point_set.length; i++) {
        DistanceNode n = point_set.element(i);
        if (n.dist.element(n.dist.length - 1).doubleValue() <= fmax) {
            point_set.set(new_index++, point_set.element(i));
        } else {
            // point_set[i]);
            far_set.push(point_set.element(i));
        }
    }
    List<DistanceNode> l = new java.util.LinkedList<DistanceNode>();
    for (int i = 0; i < new_index; i++) {
        l.add(point_set.element(i));
    }
    // removing all and adding only the near points
    point_set.clear();
    // point_set.index=new_index;
    point_set.addAll(l);
}
