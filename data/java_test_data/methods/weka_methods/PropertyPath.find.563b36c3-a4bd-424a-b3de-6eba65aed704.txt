public static PropertyContainer find(Object src, Path path) {
    PropertyContainer result;
    PropertyDescriptor desc;
    Object newSrc;
    PathElement part;
    Method method;
    Object methodResult;
    // get descriptor
    part = path.get(0);
    try {
        desc = new PropertyDescriptor(part.getName(), src.getClass());
    } catch (Exception e) {
        desc = null;
        e.printStackTrace();
    }
    // problem occurred? -> stop
    if (desc == null)
        return null;
    // end of path reached?
    if (path.size() == 1) {
        result = new PropertyContainer(desc, src);
    } else // recurse further
    {
        try {
            method = desc.getReadMethod();
            methodResult = method.invoke(src, (Object[]) null);
            if (part.hasIndex())
                newSrc = Array.get(methodResult, part.getIndex());
            else
                newSrc = methodResult;
            result = find(newSrc, path.subpath(1));
        } catch (Exception e) {
            result = null;
            e.printStackTrace();
        }
    }
    return result;
}
