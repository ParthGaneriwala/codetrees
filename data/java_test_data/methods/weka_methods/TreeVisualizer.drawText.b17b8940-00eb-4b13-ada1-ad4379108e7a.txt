private void drawText(int x1, int y1, int s, boolean e_or_n, Graphics g) {
    // this function will take in the rectangle that the text should be
    // drawn in as well as the subscript
    // for either the edge or node and a boolean variable to tell which
    // backup color
    Color oldColor = g.getColor();
    g.setPaintMode();
    if (m_FontColor == null) {
        g.setColor(Color.black);
    } else {
        g.setColor(m_FontColor);
    }
    String st;
    if (e_or_n) {
        // then paint for edge
        Edge e = m_edges[s].m_edge;
        for (int noa = 0; (st = e.getLine(noa)) != null; noa++) {
            g.drawString(st, (m_edges[s].m_width - m_fontSize.stringWidth(st)) / 2 + x1, y1 + (noa + 1) * m_fontSize.getHeight());
        }
    } else {
        // then paint for node
        Node e = m_nodes[s].m_node;
        for (int noa = 0; (st = e.getLine(noa)) != null; noa++) {
            g.drawString(st, (m_nodes[s].m_width - m_fontSize.stringWidth(st)) / 2 + x1, y1 + (noa + 1) * m_fontSize.getHeight());
        }
    }
    // restore color
    g.setColor(oldColor);
}
