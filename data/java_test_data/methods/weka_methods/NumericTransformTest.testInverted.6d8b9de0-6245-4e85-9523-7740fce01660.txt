public void testInverted() {
    m_Filter = getFilter("1-3");
    ((NumericTransform) m_Filter).setInvertSelection(true);
    Instances result = useFilter();
    // Number of attributes and instances shouldn't change
    assertEquals(m_Instances.numAttributes(), result.numAttributes());
    assertEquals(m_Instances.numInstances(), result.numInstances());
    // Check conversion is OK
    for (int i = 0; i < result.numInstances(); i++) {
        for (int j = 0; j < result.numAttributes(); j++) {
            if (m_Instances.instance(i).isMissing(j)) {
                assertTrue(result.instance(i).isMissing(j));
            } else if (result.attribute(j).isNumeric() && (j >= 3)) {
                assertEquals("Value should be same as Math.abs()", Math.abs(m_Instances.instance(i).value(j)), result.instance(i).value(j), TOLERANCE);
            } else {
                assertEquals("Value shouldn't have changed", m_Instances.instance(i).value(j), result.instance(i).value(j), TOLERANCE);
            }
        }
    }
}
