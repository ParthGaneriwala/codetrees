@Override
public void actionPerformed(ActionEvent e) {
    String str = JOptionPane.showInputDialog(self, "Configuration (<classname> [<options>])");
    if (str != null && str.length() > 0) {
        try {
            String[] options = Utils.splitOptions(str);
            String classname = options[0];
            options[0] = "";
            Class c = Utils.forName(Object.class, classname, null).getClass();
            if (c.isArray()) {
                for (int i = 1; i < options.length; i++) {
                    String[] ops = Utils.splitOptions(options[i]);
                    String cname = ops[0];
                    ops[0] = "";
                    m_AlgorithmListModel.addElement(Utils.forName(Object.class, cname, ops));
                }
            } else {
                m_AlgorithmListModel.addElement(Utils.forName(Object.class, classname, options));
            }
            updateExperiment();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(self, "Error parsing commandline:\n" + ex, "Error...", JOptionPane.ERROR_MESSAGE);
        }
    }
}
