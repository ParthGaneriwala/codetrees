/**
 * Adds a string value to the list of valid strings for attributes of type
 * STRING and returns the index of the string.
 *
 * @param value The string value to add
 * @return the index assigned to the string, or -1 if the attribute is not of
 * type Attribute.STRING
 */
public int addStringValue(String value) {
    if (!isString()) {
        return -1;
    }
    Object store = value;
    if (value.length() > STRING_COMPRESS_THRESHOLD) {
        try {
            store = new SerializedObject(value, true);
        } catch (Exception ex) {
            System.err.println("Couldn't compress string attribute value -" + " storing uncompressed.");
        }
    }
    Integer index = ((NominalAttributeInfo) m_AttributeInfo).m_Hashtable.get(store);
    if (index != null) {
        return index.intValue();
    } else {
        int intIndex = ((NominalAttributeInfo) m_AttributeInfo).m_Values.size();
        ((NominalAttributeInfo) m_AttributeInfo).m_Values.add(store);
        ((NominalAttributeInfo) m_AttributeInfo).m_Hashtable.put(store, new Integer(intIndex));
        return intIndex;
    }
}
