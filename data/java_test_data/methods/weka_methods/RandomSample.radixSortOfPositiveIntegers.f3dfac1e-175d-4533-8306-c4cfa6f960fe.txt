public static int[] radixSortOfPositiveIntegers(int[] a) {
    final int n = a.length;
    int[] aa = new int[n];
    final int[] counts = new int[257];
    final byte shiftRight = 24;
    for (byte s = 0; s < 32; s += 8) {
        // We can assume positive integers
        final byte shiftLeft = (byte) (24 - s);
        Arrays.fill(counts, 0);
        for (int i = 0; i < n; i++) {
            // int c = Byte.toUnsignedInt((byte)(a[i] >>> shift));
            counts[((a[i] << shiftLeft) >>> shiftRight) + 1]++;
        }
        for (int i = 0; i < 255; i++) {
            counts[i + 1] += counts[i];
        }
        for (int i = 0; i < n; i++) {
            // int c = Byte.toUnsignedInt((byte)(a[i] >>> shift));
            aa[counts[(a[i] << shiftLeft) >>> shiftRight]++] = a[i];
        }
        int[] temp = a;
        a = aa;
        aa = temp;
    }
    return a;
}
