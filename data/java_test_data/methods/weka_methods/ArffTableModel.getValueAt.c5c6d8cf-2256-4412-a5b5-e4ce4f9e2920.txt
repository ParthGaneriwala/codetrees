@Override
public Object getValueAt(int rowIndex, int columnIndex) {
    Object result;
    String tmp;
    String key;
    boolean modified;
    result = null;
    key = rowIndex + "-" + columnIndex;
    if ((rowIndex >= 0) && (rowIndex < getRowCount()) && (columnIndex >= 0) && (columnIndex < getColumnCount())) {
        if (columnIndex == 0) {
            result = new Integer(rowIndex + 1);
        } else if ((columnIndex == 1) && (m_ShowInstanceWeights)) {
            result = new Double(m_Data.instance(rowIndex).weight());
        } else {
            if (isMissingAt(rowIndex, columnIndex)) {
                result = null;
            } else {
                if (m_Cache.containsKey(key)) {
                    result = m_Cache.get(key);
                } else {
                    switch(getType(columnIndex)) {
                        case Attribute.DATE:
                        case Attribute.NOMINAL:
                        case Attribute.STRING:
                        case Attribute.RELATIONAL:
                            result = m_Data.instance(rowIndex).stringValue(getAttributeIndex(columnIndex));
                            break;
                        case Attribute.NUMERIC:
                            result = new Double(m_Data.instance(rowIndex).value(getAttributeIndex(columnIndex)));
                            break;
                        default:
                            result = "-can't display-";
                    }
                    if (getType(columnIndex) != Attribute.NUMERIC) {
                        if (result != null) {
                            tmp = result.toString();
                            modified = false;
                            // fix html tags, otherwise Java parser hangs
                            if ((tmp.indexOf('<') > -1) || (tmp.indexOf('>') > -1)) {
                                tmp = tmp.replace("<", "(");
                                tmp = tmp.replace(">", ")");
                                modified = true;
                            }
                            // does it contain "\n" or "\r"? -> replace with red html tag
                            if ((tmp.indexOf("\n") > -1) || (tmp.indexOf("\r") > -1)) {
                                tmp = tmp.replaceAll("\\r\\n", "<font color=\"red\"><b>\\\\r\\\\n</b></font>");
                                tmp = tmp.replaceAll("\\r", "<font color=\"red\"><b>\\\\r</b></font>");
                                tmp = tmp.replaceAll("\\n", "<font color=\"red\"><b>\\\\n</b></font>");
                                tmp = "<html>" + tmp + "</html>";
                                modified = true;
                            }
                            result = tmp;
                            if (modified) {
                                m_Cache.put(key, tmp);
                            }
                        }
                    }
                }
            }
        }
    }
    return result;
}
