private void setOutputFormat() {
    Instances newData;
    ArrayList<Attribute> newAtts;
    ArrayList<String> newVals;
    boolean firstEndsWithPrime = false, secondEndsWithPrime = false;
    StringBuffer text = new StringBuffer();
    // Compute new attributes
    newAtts = new ArrayList<Attribute>(getInputFormat().numAttributes());
    for (int j = 0; j < getInputFormat().numAttributes(); j++) {
        Attribute att = getInputFormat().attribute(j);
        if (j != m_AttIndex.getIndex()) {
            newAtts.add((Attribute) att.copy());
        } else {
            if (att.value(m_FirstIndex.getIndex()).endsWith("'")) {
                firstEndsWithPrime = true;
            }
            if (att.value(m_SecondIndex.getIndex()).endsWith("'")) {
                secondEndsWithPrime = true;
            }
            if (firstEndsWithPrime || secondEndsWithPrime) {
                text.append("'");
            }
            if (firstEndsWithPrime) {
                text.append(att.value(m_FirstIndex.getIndex()).substring(1, att.value(m_FirstIndex.getIndex()).length() - 1));
            } else {
                text.append(att.value(m_FirstIndex.getIndex()));
            }
            text.append('_');
            if (secondEndsWithPrime) {
                text.append(att.value(m_SecondIndex.getIndex()).substring(1, att.value(m_SecondIndex.getIndex()).length() - 1));
            } else {
                text.append(att.value(m_SecondIndex.getIndex()));
            }
            if (firstEndsWithPrime || secondEndsWithPrime) {
                text.append("'");
            }
            // Compute list of attribute values
            newVals = new ArrayList<String>(att.numValues() - 1);
            for (int i = 0; i < att.numValues(); i++) {
                if (i == m_FirstIndex.getIndex()) {
                    newVals.add(text.toString());
                } else if (i != m_SecondIndex.getIndex()) {
                    newVals.add(att.value(i));
                }
            }
            Attribute newAtt = new Attribute(att.name(), newVals);
            newAtt.setWeight(getInputFormat().attribute(j).weight());
            newAtts.add(newAtt);
        }
    }
    // Construct new header
    newData = new Instances(getInputFormat().relationName(), newAtts, 0);
    newData.setClassIndex(getInputFormat().classIndex());
    setOutputFormat(newData);
}
