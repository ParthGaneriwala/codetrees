@Override
public synchronized void processIncoming(Data data) throws WekaException {
    getStepManager().processing();
    String title = data.getPayloadElement(StepManager.CON_AUX_DATA_TEXT_TITLE);
    if (title == null && (data.getConnectionName().equals(StepManager.CON_DATASET) || data.getConnectionName().equals(StepManager.CON_TRAININGSET) || data.getConnectionName().equals(StepManager.CON_TESTSET))) {
        title = ((Instances) data.getPrimaryPayload()).relationName();
    }
    if (title != null) {
        getStepManager().logDetailed("Storing result: " + title);
    }
    String body = data.getPayloadElement(data.getConnectionName()).toString();
    Integer setNum = (Integer) data.getPayloadElement(StepManager.CON_AUX_DATA_SET_NUM);
    if (title != null && body != null) {
        String name = (new SimpleDateFormat("HH:mm:ss.SSS - ")).format(new Date());
        name = name + title + (setNum != null ? " (" + setNum + ")" : "");
        if (m_results.containsKey(name)) {
            try {
                Thread.sleep(5);
                name = (new SimpleDateFormat("HH:mm:ss.SSS - ")).format(new Date());
                name = name + title + (setNum != null ? " (" + setNum + ")" : "");
            } catch (InterruptedException e) {
            // ignore
            }
        }
        m_results.put(name, body);
        if (m_viewerListener != null) {
            m_viewerListener.acceptTextResult(name + title + (setNum != null ? " (" + setNum + ")" : ""), body);
        }
    }
    Data textData = new Data(StepManager.CON_TEXT, body);
    textData.setPayloadElement(StepManager.CON_AUX_DATA_TEXT_TITLE, title);
    // pass on downstream
    getStepManager().outputData(textData);
    getStepManager().finished();
}
