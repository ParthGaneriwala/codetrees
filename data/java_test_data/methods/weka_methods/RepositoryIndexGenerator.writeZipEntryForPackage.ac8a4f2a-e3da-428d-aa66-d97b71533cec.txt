protected static void writeZipEntryForPackage(File repositoryHome, String packageName, ZipOutputStream zos) throws Exception {
    ZipEntry packageDir = new ZipEntry(packageName + "/");
    zos.putNextEntry(packageDir);
    ZipEntry z = new ZipEntry(packageName + "/Latest.props");
    ZipEntry z2 = new ZipEntry(packageName + "/Latest.html");
    FileInputStream fi = new FileInputStream(repositoryHome.getAbsolutePath() + File.separator + packageName + File.separator + "Latest.props");
    BufferedInputStream bi = new BufferedInputStream(fi);
    zos.putNextEntry(z);
    transBytes(bi, zos);
    bi.close();
    fi = new FileInputStream(repositoryHome.getAbsolutePath() + File.separator + packageName + File.separator + "Latest.html");
    bi = new BufferedInputStream(fi);
    zos.putNextEntry(z2);
    transBytes(bi, zos);
    bi.close();
    // write the versions.txt file to the zip
    z = new ZipEntry(packageName + "/versions.txt");
    fi = new FileInputStream(packageName + File.separator + "versions.txt");
    bi = new BufferedInputStream(fi);
    zos.putNextEntry(z);
    transBytes(bi, zos);
    bi.close();
    // write the index.html to the zip
    z = new ZipEntry(packageName + "/index.html");
    fi = new FileInputStream(repositoryHome.getAbsolutePath() + File.separator + packageName + File.separator + "index.html");
    bi = new BufferedInputStream(fi);
    zos.putNextEntry(z);
    transBytes(bi, zos);
    bi.close();
    // Now process the available versions
    FileReader vi = new FileReader(repositoryHome.getAbsolutePath() + File.separator + packageName + File.separator + "versions.txt");
    BufferedReader bvi = new BufferedReader(vi);
    String version;
    while ((version = bvi.readLine()) != null) {
        z = new ZipEntry(packageName + "/" + version + ".props");
        fi = new FileInputStream(repositoryHome.getAbsolutePath() + File.separator + packageName + File.separator + version + ".props");
        bi = new BufferedInputStream(fi);
        zos.putNextEntry(z);
        transBytes(bi, zos);
        bi.close();
        z = new ZipEntry(packageName + "/" + version + ".html");
        fi = new FileInputStream(repositoryHome.getAbsolutePath() + File.separator + packageName + File.separator + version + ".html");
        bi = new BufferedInputStream(fi);
        zos.putNextEntry(z);
        transBytes(bi, zos);
        bi.close();
    }
    bvi.close();
}
