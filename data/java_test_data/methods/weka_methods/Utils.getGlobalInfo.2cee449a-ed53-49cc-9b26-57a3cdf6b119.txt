public static String getGlobalInfo(Object object, boolean addCapabilities) {
    // set tool tip text from global info if supplied
    String gi = null;
    StringBuilder result = new StringBuilder();
    try {
        BeanInfo bi = Introspector.getBeanInfo(object.getClass());
        MethodDescriptor[] methods = bi.getMethodDescriptors();
        for (MethodDescriptor method : methods) {
            String name = method.getDisplayName();
            Method meth = method.getMethod();
            if (name.equals("globalInfo")) {
                if (meth.getReturnType().equals(String.class)) {
                    Object[] args = {};
                    String globalInfo = (String) (meth.invoke(object, args));
                    gi = globalInfo;
                    break;
                }
            }
        }
    } catch (Exception ex) {
    }
    // Max. number of characters per line (may overflow)
    int lineWidth = 180;
    result.append("<html>");
    if (gi != null && gi.length() > 0) {
        StringBuilder firstLine = new StringBuilder();
        firstLine.append("<font color=blue>");
        boolean addFirstBreaks = true;
        int indexOfDot = gi.indexOf(".");
        if (indexOfDot > 0) {
            firstLine.append(gi.substring(0, gi.indexOf(".")));
            if (gi.length() - indexOfDot < 3) {
                addFirstBreaks = false;
            }
            gi = gi.substring(indexOfDot + 1, gi.length());
        } else {
            firstLine.append(gi);
            gi = "";
        }
        firstLine.append("</font>");
        if ((addFirstBreaks) && !(gi.startsWith("\n\n"))) {
            if (!gi.startsWith("\n")) {
                firstLine.append("<br>");
            }
            firstLine.append("<br>");
        }
        result.append(Utils.lineWrap(firstLine.toString(), lineWidth));
        result.append(Utils.lineWrap(gi, lineWidth).replace("\n", "<br>"));
        result.append("<br>");
    }
    if (addCapabilities) {
        if (object instanceof CapabilitiesHandler) {
            if (!result.toString().endsWith("<br><br>")) {
                result.append("<br>");
            }
            String caps = CapabilitiesUtils.addCapabilities("<font color=red>CAPABILITIES</font>", ((CapabilitiesHandler) object).getCapabilities());
            caps = Utils.lineWrap(caps, lineWidth).replace("\n", "<br>");
            result.append(caps);
        }
        if (object instanceof MultiInstanceCapabilitiesHandler) {
            result.append("<br>");
            String caps = CapabilitiesUtils.addCapabilities("<font color=red>MI CAPABILITIES</font>", ((MultiInstanceCapabilitiesHandler) object).getMultiInstanceCapabilities());
            caps = Utils.lineWrap(caps, lineWidth).replace("\n", "<br>");
            result.append(caps);
        }
    }
    result.append("</html>");
    if (result.toString().equals("<html></html>")) {
        return null;
    }
    return result.toString();
}
