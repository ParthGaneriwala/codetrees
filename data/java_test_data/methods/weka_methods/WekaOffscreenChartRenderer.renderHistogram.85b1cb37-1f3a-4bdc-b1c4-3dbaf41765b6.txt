public BufferedImage renderHistogram(int width, int height, List<Instances> series, String attToPlot, List<String> optionalArgs) throws Exception {
    BufferedImage osi = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
    // we can only handle one series per plot so merge all series together
    Instances toPlot = new Instances(series.get(0));
    for (int i = 1; i < series.size(); i++) {
        Instances additional = series.get(i);
        for (Instance temp : additional) {
            toPlot.add(temp);
        }
    }
    int attIndex = getIndexOfAttribute(toPlot, attToPlot);
    if (attIndex < 0) {
        attIndex = 0;
    }
    String colorAtt = getOption(optionalArgs, "-color");
    int tempC = getIndexOfAttribute(toPlot, colorAtt);
    AttributeVisualizationPanel offScreenPlot = new AttributeVisualizationPanel();
    offScreenPlot.setSize(width, height);
    offScreenPlot.setInstances(toPlot);
    offScreenPlot.setAttribute(attIndex);
    if (tempC >= 0) {
        offScreenPlot.setColoringIndex(tempC);
    }
    // render
    java.awt.Graphics g = osi.getGraphics();
    offScreenPlot.paintComponent(g);
    // wait a little while so that the calculation thread can complete
    Thread.sleep(2000);
    offScreenPlot.paintComponent(g);
    return osi;
}
