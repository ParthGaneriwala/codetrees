private Instances[] computeSimpleStats(int index, Instances insts, double[] stats, double[] dist) {
    Rule rule = m_Ruleset.get(index);
    Instances[] data = new Instances[2];
    data[0] = new Instances(insts, insts.numInstances());
    data[1] = new Instances(insts, insts.numInstances());
    for (int i = 0; i < insts.numInstances(); i++) {
        Instance datum = insts.instance(i);
        double weight = datum.weight();
        if (rule.covers(datum)) {
            // Covered by this rule
            data[0].add(datum);
            // Coverage
            stats[0] += weight;
            if ((int) datum.classValue() == (int) rule.getConsequent()) {
                // True positives
                stats[2] += weight;
            } else {
                // False positives
                stats[4] += weight;
            }
            if (dist != null) {
                dist[(int) datum.classValue()] += weight;
            }
        } else {
            // Not covered by this rule
            data[1].add(datum);
            stats[1] += weight;
            if ((int) datum.classValue() != (int) rule.getConsequent()) {
                // True negatives
                stats[3] += weight;
            } else {
                // False negatives
                stats[5] += weight;
            }
        }
    }
    return data;
}
