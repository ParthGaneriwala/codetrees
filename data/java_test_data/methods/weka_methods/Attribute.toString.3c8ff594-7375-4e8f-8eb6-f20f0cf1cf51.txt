@Override
public final String toString() {
    StringBuffer text = new StringBuffer();
    text.append(ARFF_ATTRIBUTE).append(" ").append(Utils.quote(m_Name)).append(" ");
    switch(m_Type) {
        case NOMINAL:
            text.append('{');
            Enumeration<Object> enu = enumerateValues();
            while (enu.hasMoreElements()) {
                text.append(Utils.quote((String) enu.nextElement()));
                if (enu.hasMoreElements()) {
                    text.append(',');
                }
            }
            text.append('}');
            text.append((weight() != 1.0) ? " {" + weight() + "}" : "");
            break;
        case NUMERIC:
            text.append(ARFF_ATTRIBUTE_NUMERIC);
            text.append((weight() != 1.0) ? " {" + weight() + "}" : "");
            break;
        case STRING:
            text.append(ARFF_ATTRIBUTE_STRING);
            text.append((weight() != 1.0) ? " {" + weight() + "}" : "");
            break;
        case DATE:
            text.append(ARFF_ATTRIBUTE_DATE).append(" ").append(Utils.quote(((DateAttributeInfo) m_AttributeInfo).m_DateFormat.toPattern()));
            text.append((weight() != 1.0) ? " {" + weight() + "}" : "");
            break;
        case RELATIONAL:
            text.append(ARFF_ATTRIBUTE_RELATIONAL);
            text.append((weight() != 1.0) ? " {" + weight() + "}" : "");
            text.append("\n");
            Enumeration<Attribute> enm = ((RelationalAttributeInfo) m_AttributeInfo).m_Header.enumerateAttributes();
            while (enm.hasMoreElements()) {
                text.append(enm.nextElement()).append("\n");
            }
            text.append(ARFF_END_SUBRELATION).append(" ").append(Utils.quote(m_Name));
            break;
        default:
            text.append("UNKNOWN");
            break;
    }
    return text.toString();
}
