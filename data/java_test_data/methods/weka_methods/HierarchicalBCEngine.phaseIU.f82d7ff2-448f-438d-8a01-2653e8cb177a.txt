public void phaseIU(final int lindex, final int[][] levels) {
    float[] rowBC;
    rowBC = calcRowBC(lindex, levels);
    // System.out.println("In IU Level"+(lindex+1)+":");
    // System.out.print("\t");
    // for(int i=0; i<rowBC.length; i++)
    // {System.out.print("Row"+(i+1)+":"+rowBC[i]+" ");
    // }
    // System.out.print("\n\t");
    // rowBC = calcRowBC1(lindex, levels);
    // for(int i=0; i<rowBC.length; i++)
    // {System.out.print("Row"+(i+1)+":"+rowBC[i]+" ");
    // }
    // System.out.println("");
    // System.out.print("\n\tNodes ");
    // for(int i=0; i<levels[lindex].length; i++)
    // System.out.print(levels[lindex][i]+" ");
    // System.out.println("\nCrossings: "+crossings(levels));
    // inspect(true, lindex, levels, rowBC);
    isort(levels[lindex], rowBC);
// combSort11(levels[lindex], rowBC);
// System.out.println("After sorting\n\t");
// for(int i=0; i<rowBC.length; i++)
// {System.out.print("Row"+(i+1)+":"+rowBC[i]+" ");
// }
// System.out.print("\n\tNodes ");
// for(int i=0; i<levels[lindex].length; i++)
// System.out.print(levels[lindex][i]+" ");
// System.out.println("\nCrossings: "+crossings(levels));
}
