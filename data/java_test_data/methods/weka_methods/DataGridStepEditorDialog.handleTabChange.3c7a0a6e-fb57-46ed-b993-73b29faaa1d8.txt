protected void handleTabChange() {
    // first construct empty instances from attribute definitions
    ArrayList<Attribute> atts = new ArrayList<Attribute>();
    for (AttDef a : Collections.list(m_listModel.elements())) {
        if (a.m_type == Attribute.NUMERIC) {
            atts.add(new Attribute(a.m_name));
        } else if (a.m_type == Attribute.STRING) {
            atts.add(new Attribute(a.m_name, (List<String>) null));
        } else if (a.m_type == Attribute.DATE) {
            atts.add(new Attribute(a.m_name, a.m_nomOrDate));
        } else if (a.m_type == Attribute.NOMINAL) {
            List<String> vals = new ArrayList<String>();
            for (String v : a.m_nomOrDate.split(",")) {
                vals.add(v.trim());
            }
            atts.add(new Attribute(a.m_name, vals));
        } else if (a.m_type == Attribute.RELATIONAL) {
        // TODO
        }
    }
    Instances defInsts = new Instances("DataGrid", atts, 0);
    // get current editor instances
    Instances editInsts = m_viewerPanel.getInstances();
    if (editInsts != null) {
        // the current definition
        if (editInsts.numInstances() == 0) {
            m_viewerPanel.setInstances(defInsts);
        } else {
            Map<Integer, Integer> transferMap = new HashMap<>();
            for (int i = 0; i < editInsts.numAttributes(); i++) {
                Attribute eA = editInsts.attribute(i);
                Attribute dA = defInsts.attribute(eA.name());
                if (dA != null && dA.type() == eA.type()) {
                    transferMap.put(i, dA.index());
                }
            }
            if (transferMap.size() > 0) {
                Instances defCopy = new Instances(defInsts, 0);
                for (int i = 0; i < editInsts.numInstances(); i++) {
                    double[] vals = new double[defCopy.numAttributes()];
                    Instance editInst = editInsts.instance(i);
                    for (int j = 0; j < vals.length; j++) {
                        vals[j] = Utils.missingValue();
                    }
                    for (Map.Entry<Integer, Integer> e : transferMap.entrySet()) {
                        if (editInst.attribute(e.getKey()).isNumeric()) {
                            vals[e.getValue()] = editInst.value(e.getKey());
                        } else if (editInst.attribute(e.getKey()).isNominal()) {
                            if (!editInst.isMissing(e.getKey())) {
                                int defIndex = defCopy.attribute(e.getValue()).indexOfValue(editInst.stringValue(e.getKey()));
                                vals[e.getValue()] = defIndex >= 0 ? defIndex : Utils.missingValue();
                            }
                        } else if (editInst.attribute(e.getKey()).isString()) {
                            if (!editInst.isMissing(e.getKey())) {
                                String editVal = editInst.stringValue(e.getKey());
                                vals[e.getValue()] = defCopy.attribute(e.getValue()).addStringValue(editVal);
                            }
                        } else if (editInst.attribute(e.getKey()).isRelationValued()) {
                        // TODO
                        }
                    }
                    defCopy.add(new DenseInstance(1.0, vals));
                }
                m_viewerPanel.setInstances(defCopy);
            } else {
                // nothing in common between the two
                m_viewerPanel.setInstances(defInsts);
            }
        }
    } else {
        m_viewerPanel.setInstances(defInsts);
    }
}
