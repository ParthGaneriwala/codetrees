void buildInstances(Document doc, String sName) throws Exception {
    NodeList nodelist;
    // Get the name of the network
    nodelist = selectAllNames(doc);
    if (nodelist.getLength() > 0) {
        sName = ((CharacterData) (nodelist.item(0).getFirstChild())).getData();
    }
    // Process variables
    nodelist = selectAllVariables(doc);
    int nNodes = nodelist.getLength();
    // initialize structure
    ArrayList<Attribute> attInfo = new ArrayList<Attribute>(nNodes);
    // Initialize
    m_nPositionX = new int[nodelist.getLength()];
    m_nPositionY = new int[nodelist.getLength()];
    // Process variables
    for (int iNode = 0; iNode < nodelist.getLength(); iNode++) {
        // Get element
        ArrayList<Node> valueslist;
        // Get the name of the network
        valueslist = selectOutCome(nodelist.item(iNode));
        int nValues = valueslist.size();
        // generate value strings
        ArrayList<String> nomStrings = new ArrayList<String>(nValues + 1);
        for (int iValue = 0; iValue < nValues; iValue++) {
            Node node = valueslist.get(iValue).getFirstChild();
            String sValue = ((CharacterData) (node)).getData();
            if (sValue == null) {
                sValue = "Value" + (iValue + 1);
            }
            nomStrings.add(sValue);
        }
        ArrayList<Node> nodelist2;
        // Get the name of the network
        nodelist2 = selectName(nodelist.item(iNode));
        if (nodelist2.size() == 0) {
            throw new Exception("No name specified for variable");
        }
        String sNodeName = ((CharacterData) (nodelist2.get(0).getFirstChild())).getData();
        weka.core.Attribute att = new weka.core.Attribute(sNodeName, nomStrings);
        attInfo.add(att);
        valueslist = selectProperty(nodelist.item(iNode));
        nValues = valueslist.size();
        // generate value strings
        for (int iValue = 0; iValue < nValues; iValue++) {
            // parsing for strings of the form "position = (73, 165)"
            Node node = valueslist.get(iValue).getFirstChild();
            String sValue = ((CharacterData) (node)).getData();
            if (sValue.startsWith("position")) {
                int i0 = sValue.indexOf('(');
                int i1 = sValue.indexOf(',');
                int i2 = sValue.indexOf(')');
                String sX = sValue.substring(i0 + 1, i1).trim();
                String sY = sValue.substring(i1 + 1, i2).trim();
                try {
                    m_nPositionX[iNode] = Integer.parseInt(sX);
                    m_nPositionY[iNode] = Integer.parseInt(sY);
                } catch (NumberFormatException e) {
                    System.err.println("Wrong number format in position :(" + sX + "," + sY + ")");
                    m_nPositionX[iNode] = 0;
                    m_nPositionY[iNode] = 0;
                }
            }
        }
    }
    m_Instances = new Instances(sName, attInfo, 100);
    m_Instances.setClassIndex(nNodes - 1);
    setUseADTree(false);
    initStructure();
}
