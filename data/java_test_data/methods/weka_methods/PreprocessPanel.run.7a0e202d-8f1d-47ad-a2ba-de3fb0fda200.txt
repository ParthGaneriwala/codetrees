public void run() {
    boolean first = (m_AttPanel.getTableModel() == null);
    m_InstSummaryPanel.setInstances(m_Instances);
    m_AttPanel.setInstances(m_Instances);
    if (first) {
        TableModel model = m_AttPanel.getTableModel();
        model.addTableModelListener(new TableModelListener() {

            public void tableChanged(TableModelEvent e) {
                if (m_AttPanel.getSelectedAttributes() != null && m_AttPanel.getSelectedAttributes().length > 0) {
                    m_RemoveButton.setEnabled(true);
                } else {
                    m_RemoveButton.setEnabled(false);
                }
            }
        });
    }
    // m_RemoveButton.setEnabled(true);
    m_AttSummaryPanel.setInstances(m_Instances);
    m_AttVisualizePanel.setInstances(m_Instances);
    // select the first attribute in the list
    m_AttPanel.getSelectionModel().setSelectionInterval(0, 0);
    m_AttSummaryPanel.setAttribute(0);
    m_AttVisualizePanel.setAttribute(0);
    m_ApplyFilterBut.setEnabled(true);
    m_StopBut.setEnabled(false);
    m_Log.logMessage("Base relation is now " + m_Instances.relationName() + " (" + m_Instances.numInstances() + " instances)");
    m_SaveBut.setEnabled(true);
    m_EditBut.setEnabled(true);
    m_EditM.setEnabled(true);
    m_Log.statusMessage("OK");
    // Fire a propertychange event
    m_Support.firePropertyChange("", null, null);
    boolean sendToAll = getExplorer() != null || getMainApplication().getApplicationSettings().getSetting(getPerspectiveID(), PreprocessDefaults.ALWAYS_SEND_INSTANCES_TO_ALL_KEY, PreprocessDefaults.ALWAYS_SEND_INSTANCES_TO_ALL, Environment.getSystemWide());
    if (m_sendToPerspective != null) {
        m_sendToPerspective.setEnabled(!sendToAll);
    }
    if (getMainApplication() != null) {
        if (sendToAll) {
            List<Perspective> perspectiveList = getMainApplication().getPerspectiveManager().getVisiblePerspectives();
            for (Perspective p : perspectiveList) {
                if (p.acceptsInstances() && !p.getPerspectiveID().equals(getPerspectiveID())) {
                    p.setInstances(m_Instances);
                }
            }
        }
    }
    // notify GOEs about change
    if (getExplorer() != null || getMainApplication() != null) {
        Explorer explorer = getExplorer();
        WorkbenchApp app = (WorkbenchApp) getMainApplication();
        try {
            // get rid of old filter settings
            if (explorer != null) {
                explorer.notifyCapabilitiesFilterListener(null);
            } else {
                app.notifyCapabilitiesFilterListeners(null);
                // enable all perspectives
                if (sendToAll) {
                    app.getPerspectiveManager().enableAllPerspectiveTabs();
                }
            }
            int oldIndex = m_Instances.classIndex();
            m_Instances.setClassIndex(m_AttVisualizePanel.getColorBox().getSelectedIndex() - 1);
            // send new ones
            if (ExplorerDefaults.getInitGenericObjectEditorFilter()) {
                if (explorer != null) {
                    explorer.notifyCapabilitiesFilterListener(Capabilities.forInstances(m_Instances));
                } else {
                    if (sendToAll) {
                        app.notifyCapabilitiesFilterListeners(Capabilities.forInstances(m_Instances));
                    }
                }
            } else {
                if (explorer != null) {
                    explorer.notifyCapabilitiesFilterListener(Capabilities.forInstances(new Instances(m_Instances, 0)));
                } else {
                    if (sendToAll) {
                        app.notifyCapabilitiesFilterListeners(Capabilities.forInstances(new Instances(m_Instances, 0)));
                    }
                }
            }
            m_Instances.setClassIndex(oldIndex);
        } catch (Exception e) {
            e.printStackTrace();
            m_Log.logMessage(e.toString());
        }
    }
}
