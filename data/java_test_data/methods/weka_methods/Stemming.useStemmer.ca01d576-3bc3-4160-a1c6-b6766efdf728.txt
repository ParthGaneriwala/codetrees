public static void useStemmer(Stemmer stemmer, String[] options) throws Exception {
    Reader reader;
    StringBuffer input;
    Writer output;
    String tmpStr;
    boolean lowerCase;
    // help?
    if (Utils.getFlag('h', options)) {
        System.out.println(makeOptionsString(stemmer));
        return;
    }
    // input file
    tmpStr = Utils.getOption('i', options);
    if (tmpStr.length() == 0) {
        throw new IllegalArgumentException("No input file defined!" + makeOptionsString(stemmer));
    } else {
        reader = new BufferedReader(new InputStreamReader(new FileInputStream(tmpStr)));
    }
    input = new StringBuffer();
    // output file?
    tmpStr = Utils.getOption('o', options);
    if (tmpStr.length() == 0) {
        output = new BufferedWriter(new OutputStreamWriter(System.out));
    } else {
        output = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(tmpStr)));
    }
    // lowercase?
    lowerCase = Utils.getFlag('l', options);
    // stemmer options
    if (stemmer instanceof OptionHandler) {
        ((OptionHandler) stemmer).setOptions(options);
    }
    // unknown options?
    try {
        Utils.checkForRemainingOptions(options);
    } catch (Exception e) {
        System.out.println(e.getMessage());
        System.out.println(makeOptionsString(stemmer));
        reader.close();
        return;
    }
    // process file
    int character;
    while ((character = reader.read()) != -1) {
        char ch = (char) character;
        if (Character.isWhitespace(ch)) {
            if (input.length() > 0) {
                output.write(stemmer.stem(input.toString()));
                input = new StringBuffer();
            }
            output.write(ch);
        } else {
            if (lowerCase) {
                input.append(Character.toLowerCase(ch));
            } else {
                input.append(ch);
            }
        }
    }
    output.flush();
    reader.close();
}
