public Instance makeOutputInstance(Instance inputI) {
    double[] vals = new double[m_outputStructure.numAttributes()];
    String[] stringVals = new String[m_outputStructure.numAttributes()];
    for (int i = 0; i < inputI.numAttributes(); i++) {
        if (inputI.attribute(i).isString() && !inputI.isMissing(i)) {
            stringVals[i] = inputI.stringValue(i);
        } else {
            vals[i] = inputI.value(i);
        }
    }
    for (SubstringReplacerMatchRule mr : m_matchRules) {
        mr.apply(stringVals);
    }
    for (int i = 0; i < m_outputStructure.numAttributes(); i++) {
        if (m_outputStructure.attribute(i).isString() && stringVals[i] != null) {
            m_outputStructure.attribute(i).setStringValue(stringVals[i]);
        }
    }
    Instance result = new DenseInstance(inputI.weight(), vals);
    result.setDataset(m_outputStructure);
    return result;
}
