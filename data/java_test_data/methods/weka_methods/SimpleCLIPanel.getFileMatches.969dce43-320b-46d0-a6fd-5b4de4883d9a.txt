public Vector<String> getFileMatches(String partial) {
    Vector<String> result;
    File file;
    File dir;
    File[] files;
    int i;
    String prefix;
    boolean caseSensitive;
    String name;
    boolean match;
    result = new Vector<String>();
    // is the OS case-sensitive?
    caseSensitive = (File.separatorChar != '\\');
    if (m_Debug) {
        System.out.println("case-sensitive=" + caseSensitive);
    }
    // is "~" used for home directory? -> replace with actual home directory
    if (partial.startsWith("~")) {
        partial = System.getProperty("user.home") + partial.substring(1);
    }
    // determine dir and possible prefix
    file = new File(partial);
    dir = null;
    prefix = null;
    if (file.exists()) {
        // determine dir to read
        if (file.isDirectory()) {
            dir = file;
            // retrieve all
            prefix = null;
        } else {
            dir = file.getParentFile();
            prefix = file.getName();
        }
    } else {
        dir = file.getParentFile();
        prefix = file.getName();
    }
    if (m_Debug) {
        System.out.println("search in dir=" + dir + ", prefix=" + prefix);
    }
    // list all files in dir
    if (dir != null) {
        files = dir.listFiles();
        if (files != null) {
            for (i = 0; i < files.length; i++) {
                name = files[i].getName();
                // does the name match?
                if ((prefix != null) && caseSensitive) {
                    match = name.startsWith(prefix);
                } else if ((prefix != null) && !caseSensitive) {
                    match = name.toLowerCase().startsWith(prefix.toLowerCase());
                } else {
                    match = true;
                }
                if (match) {
                    if (prefix != null) {
                        result.add(partial.substring(0, partial.length() - prefix.length()) + name);
                    } else {
                        if (partial.endsWith("\\") || partial.endsWith("/")) {
                            result.add(partial + name);
                        } else {
                            result.add(partial + File.separator + name);
                        }
                    }
                }
            }
        } else {
            System.err.println("Invalid path: " + partial);
        }
    }
    // sort the result
    if (result.size() > 1) {
        Collections.sort(result);
    }
    // print results
    if (m_Debug) {
        System.out.println("file matches:");
        for (i = 0; i < result.size(); i++) {
            System.out.println(result.get(i));
        }
    }
    return result;
}
