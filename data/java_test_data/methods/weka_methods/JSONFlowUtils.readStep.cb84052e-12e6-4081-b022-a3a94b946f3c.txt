protected static void readStep(JSONNode stepNode, Flow flow) throws WekaException {
    String clazz = stepNode.getChild(CLASS).getValue().toString();
    Object step = null;
    Step theStep = null;
    try {
        step = WekaPackageClassLoaderManager.objectForName(clazz);
        if (!(step instanceof Step)) {
            throw new WekaException("Instantiated a knowledge flow step that does not implement StepComponent!");
        }
        theStep = (Step) step;
        JSONNode properties = stepNode.getChild(PROPERTIES);
        for (int i = 0; i < properties.getChildCount(); i++) {
            JSONNode aProp = (JSONNode) properties.getChildAt(i);
            Object valueToSet = null;
            if (aProp.isObject()) {
                valueToSet = readStepObjectProperty(aProp);
            } else if (aProp.isArray()) {
            // TODO
            } else {
                valueToSet = aProp.getValue();
            }
            try {
                if (valueToSet != null) {
                    PropertyDescriptor propD = new PropertyDescriptor(aProp.getName(), theStep.getClass());
                    File checkForFileProp = checkForFileProp(valueToSet, propD);
                    if (checkForFileProp != null) {
                        valueToSet = checkForFileProp;
                    }
                    Method writeMethod = propD.getWriteMethod();
                    if (writeMethod == null) {
                        System.err.println("Unable to obtain a setter method for property '" + aProp.getName() + "' in step class '" + clazz);
                        continue;
                    }
                    Object[] arguments = { valueToSet };
                    writeMethod.invoke(theStep, arguments);
                }
            } catch (IntrospectionException ex) {
                System.err.println("WARNING: Unable to set property '" + aProp.getName() + "' in step class '" + clazz + " - skipping");
            }
        }
    } catch (Exception ex) {
        throw new WekaException(ex);
    }
    StepManagerImpl manager = new StepManagerImpl(theStep);
    flow.addStep(manager);
    // do coordinates last
    JSONNode coords = stepNode.getChild(COORDINATES);
    if (coords != null) {
        String[] vals = coords.getValue().toString().split(",");
        int x = Integer.parseInt(vals[0]);
        int y = Integer.parseInt(vals[1]);
        manager.m_x = x;
        manager.m_y = y;
    }
}
