@Override
public void actionPerformed(ActionEvent e) {
    // int selected = m_table.getSelectedRow();
    int[] selectedRows = m_table.getSelectedRows();
    if (selectedRows.length > 0) {
        List<String> packageNames = new ArrayList<String>();
        StringBuffer confirmList = new StringBuffer();
        for (int selectedRow : selectedRows) {
            String packageName = m_table.getValueAt(selectedRow, getColumnIndex(PACKAGE_COLUMN)).toString();
            Package p = null;
            try {
                p = WekaPackageManager.getRepositoryPackageInfo(packageName);
            } catch (Exception e1) {
                // see if we can get installed package info
                try {
                    p = WekaPackageManager.getInstalledPackageInfo(packageName);
                } catch (Exception e2) {
                    e2.printStackTrace();
                    continue;
                }
            }
            if (p.isInstalled()) {
                packageNames.add(packageName);
                confirmList.append(packageName + "\n");
            }
        }
        if (packageNames.size() > 0) {
            JTextArea jt = new JTextArea("The following packages will be " + "uninstalled:\n" + confirmList.toString(), 10, 40);
            int result = JOptionPane.showConfirmDialog(PackageManager.this, new JScrollPane(jt), "Weka Package Manager", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                pleaseCloseAppWindowsPopUp();
                UninstallTask task = new UninstallTask();
                task.setPackages(packageNames);
                task.execute();
            }
        }
    }
/*
         * if (selected != -1) { String packageName =
         * m_table.getValueAt(selected,
         * getColumnIndex(PACKAGE_COLUMN)).toString();
         * 
         * pleaseCloseAppWindowsPopUp(); UninstallTask task = new
         * UninstallTask(); task.setPackage(packageName); task.execute(); }
         */
}
