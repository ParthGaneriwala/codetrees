public void actionPerformed(ActionEvent e) {
    if (e.getSource() == m_StartBut) {
        if (m_RunThread == null) {
            boolean proceed = true;
            if (Experimenter.m_Memory.memoryIsLow()) {
                proceed = Experimenter.m_Memory.showMemoryIsLow();
            }
            if (proceed) {
                try {
                    m_RunThread = new ExperimentRunner(m_Exp);
                    // UI has most priority
                    m_RunThread.setPriority(Thread.MIN_PRIORITY);
                    m_RunThread.start();
                } catch (Exception ex) {
                    ex.printStackTrace();
                    logMessage("Problem creating experiment copy to run: " + ex.getMessage());
                }
            }
        }
    } else if (e.getSource() == m_StopBut) {
        m_StopBut.setEnabled(false);
        logMessage("User aborting experiment. ");
        if (m_Exp instanceof RemoteExperiment) {
            logMessage("Waiting for remote tasks to " + "complete...");
        }
        ((ExperimentRunner) m_RunThread).abortExperiment();
        // m_RunThread.stop() ??
        m_RunThread = null;
    }
}
