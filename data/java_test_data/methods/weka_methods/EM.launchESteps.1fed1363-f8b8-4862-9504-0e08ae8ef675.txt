protected double launchESteps(Instances inst) throws Exception {
    int numPerTask = inst.numInstances() / m_executionSlots;
    double eStepLogL = 0;
    double eStepSow = 0;
    if (m_executionSlots <= 1 || inst.numInstances() < 2 * m_executionSlots) {
        return E(inst, true);
    }
    List<Future<double[]>> results = new ArrayList<Future<double[]>>();
    for (int i = 0; i < m_executionSlots; i++) {
        int start = i * numPerTask;
        int end = start + numPerTask;
        if (i == m_executionSlots - 1) {
            end = inst.numInstances();
        }
        ETask newTask = new ETask(inst, start, end, true);
        Future<double[]> futureE = m_executorPool.submit(newTask);
        results.add(futureE);
    // m_executorPool.execute(newTask);
    // et[i] = newTask;
    // newTask.run();
    }
    for (int i = 0; i < results.size(); i++) {
        double[] r = results.get(i).get();
        eStepLogL += r[0];
        eStepSow += r[1];
    }
    eStepLogL /= eStepSow;
    return eStepLogL;
}
