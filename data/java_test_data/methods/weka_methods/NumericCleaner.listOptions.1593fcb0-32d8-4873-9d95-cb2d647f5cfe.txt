@Override
public Enumeration<Option> listOptions() {
    Vector<Option> result = new Vector<Option>(11);
    result.addElement(new Option("\tThe minimum threshold below which values are replaced by the corresponding default.\n" + "\t(default -Double.MAX_VALUE)", "min", 1, "-min <double>"));
    result.addElement(new Option("\tThe replacement for values smaller than the minimum threshold.\n" + "\t(default -Double.MAX_VALUE)", "min-default", 1, "-min-default <double>"));
    result.addElement(new Option("\tThe maximum threshold above which values are replaced by the corresponding default.\n" + "\t(default Double.MAX_VALUE)", "max", 1, "-max <double>"));
    result.addElement(new Option("\tThe replacement for values larger than the maximum threshold.\n" + "\t(default Double.MAX_VALUE)", "max-default", 1, "-max-default <double>"));
    result.addElement(new Option("\tThe value with respect to which closeness is determined. (default 0)", "closeto", 1, "-closeto <double>"));
    result.addElement(new Option("\tThe replacement for values that are too close to '-closeto'.\n" + "\t(default 0)", "closeto-default", 1, "-closeto-default <double>"));
    result.addElement(new Option("\tThe tolerance for testing whether a value is too close.\n" + "\t(default 1E-6)", "closeto-tolerance", 1, "-closeto-tolerance <double>"));
    result.addElement(new Option("\tThe number of decimals to round to, -1 means no rounding at all.\n" + "\t(default -1)", "decimals", 1, "-decimals <int>"));
    result.addElement(new Option("\tThe list of columns to cleanse, e.g., first-last or first-3,5-last.\n" + "\t(default first-last)", "R", 1, "-R <col1,col2,...>"));
    result.addElement(new Option("\tInverts the matching sense.", "V", 0, "-V"));
    result.addElement(new Option("\tWhether to include the class in the cleansing.\n" + "\tThe class column will always be skipped if this flag is not\n" + "\tpresent. (default no)", "include-class", 0, "-include-class"));
    result.addAll(Collections.list(super.listOptions()));
    return result.elements();
}
