@Override
public void setOptions(String[] options) throws Exception {
    setShowStdDevs(Utils.getFlag('V', options));
    String outputOption = Utils.getOption("result-matrix", options);
    if (outputOption.length() != 0) {
        String[] resultMatrixSpec = Utils.splitOptions(outputOption);
        if (resultMatrixSpec.length == 0) {
            throw new Exception("Invalid ResultMatrix specification string");
        }
        String resultMatrixName = resultMatrixSpec[0];
        resultMatrixSpec[0] = "";
        ResultMatrix resultMatrix = (ResultMatrix) Utils.forName(Class.forName("weka.experiment.ResultMatrix"), resultMatrixName, resultMatrixSpec);
        setResultMatrix(resultMatrix);
    } else if (Utils.getFlag('L', options)) {
        setResultMatrix(new ResultMatrixLatex());
    } else if (Utils.getFlag("csv", options)) {
        setResultMatrix(new ResultMatrixCSV());
    } else if (Utils.getFlag("html", options)) {
        setResultMatrix(new ResultMatrixHTML());
    } else if (Utils.getFlag("significance", options)) {
        setResultMatrix(new ResultMatrixSignificance());
    } else if (Utils.getFlag("gnuplot", options)) {
        setResultMatrix(new ResultMatrixGnuPlot());
    }
    String datasetList = Utils.getOption('D', options);
    Range datasetRange = new Range();
    if (datasetList.length() != 0) {
        datasetRange.setRanges(datasetList);
    }
    setDatasetKeyColumns(datasetRange);
    String indexStr = Utils.getOption('R', options);
    if (indexStr.length() != 0) {
        if (indexStr.equals("first")) {
            setRunColumn(0);
        } else if (indexStr.equals("last")) {
            setRunColumn(-1);
        } else {
            setRunColumn(Integer.parseInt(indexStr) - 1);
        }
    } else {
        setRunColumn(-1);
    }
    String foldStr = Utils.getOption('F', options);
    if (foldStr.length() != 0) {
        setFoldColumn(Integer.parseInt(foldStr) - 1);
    } else {
        setFoldColumn(-1);
    }
    String sigStr = Utils.getOption('S', options);
    if (sigStr.length() != 0) {
        setSignificanceLevel((new Double(sigStr)).doubleValue());
    } else {
        setSignificanceLevel(0.05);
    }
    String resultsetList = Utils.getOption('G', options);
    Range generatorRange = new Range();
    if (resultsetList.length() != 0) {
        generatorRange.setRanges(resultsetList);
    }
    setResultsetKeyColumns(generatorRange);
}
