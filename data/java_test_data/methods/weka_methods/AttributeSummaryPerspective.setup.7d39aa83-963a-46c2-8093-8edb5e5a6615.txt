protected void setup(Settings settings) {
    removeAll();
    if (m_visualizeDataSet == null) {
        return;
    }
    JScrollPane hp = makePanel(settings == null ? m_mainApplication.getApplicationSettings() : settings);
    add(hp, BorderLayout.CENTER);
    Vector<String> atts = new Vector<String>();
    for (int i = 0; i < m_visualizeDataSet.numAttributes(); i++) {
        atts.add("(" + Attribute.typeToStringShort(m_visualizeDataSet.attribute(i)) + ") " + m_visualizeDataSet.attribute(i).name());
    }
    final JComboBox<String> classCombo = new JComboBox<String>();
    classCombo.setModel(new DefaultComboBoxModel<String>(atts));
    if (atts.size() > 0) {
        if (m_visualizeDataSet.classIndex() < 0) {
            classCombo.setSelectedIndex(atts.size() - 1);
        } else {
            classCombo.setSelectedIndex(m_visualizeDataSet.classIndex());
        }
        classCombo.setEnabled(true);
        for (int i = 0; i < m_plots.size(); i++) {
            m_plots.get(i).setColoringIndex(classCombo.getSelectedIndex());
        }
    }
    JPanel comboHolder = new JPanel();
    comboHolder.setLayout(new BorderLayout());
    JPanel tempHolder = new JPanel();
    tempHolder.setLayout(new BorderLayout());
    tempHolder.add(new JLabel("Class: "), BorderLayout.WEST);
    tempHolder.add(classCombo, BorderLayout.EAST);
    comboHolder.add(tempHolder, BorderLayout.WEST);
    add(comboHolder, BorderLayout.NORTH);
    classCombo.addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            int selected = classCombo.getSelectedIndex();
            if (selected >= 0) {
                for (int i = 0; i < m_plots.size(); i++) {
                    m_plots.get(i).setColoringIndex(selected);
                }
            }
        }
    });
}
