@Override
public void setEnvironment(final Environment env) {
    m_env = env;
    Vector<String> varKeys = new Vector<String>(env.getVariableNames());
    @SuppressWarnings("serial") DefaultComboBoxModel dm = new DefaultComboBoxModel(varKeys) {

        @Override
        public Object getSelectedItem() {
            Object item = super.getSelectedItem();
            if (item instanceof String) {
                if (env.getVariableValue((String) item) != null) {
                    String newS = "${" + (String) item + "}";
                    item = newS;
                }
            }
            return item;
        }
    };
    m_combo.setModel(dm);
    m_combo.setSelectedItem("");
    m_combo.addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            String selected = (String) m_combo.getSelectedItem();
            try {
                selected = processSelected(selected);
                selected = m_env.substitute(selected);
            } catch (Exception ex) {
            // quietly ignore unresolved variables
            }
            m_combo.setToolTipText(selected);
        }
    });
    m_combo.getEditor().getEditorComponent().addKeyListener(new KeyAdapter() {

        @Override
        public void keyReleased(KeyEvent e) {
            java.awt.Component theEditor = m_combo.getEditor().getEditorComponent();
            if (theEditor instanceof JTextField) {
                String selected = ((JTextField) theEditor).getText();
                m_currentContents = selected;
                if (m_env != null) {
                    try {
                        selected = m_env.substitute(selected);
                    } catch (Exception ex) {
                    // quietly ignore unresolved variables
                    }
                }
                m_combo.setToolTipText(selected);
            }
        }
    });
}
