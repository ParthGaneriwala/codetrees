protected double objectiveFunction(double[] x) {
    // -LogLikelihood
    double nll = 0;
    // Number of variables per class
    int dim = m_NumPredictors + 1;
    for (int i = 0; i < cls.length; i++) {
        // ith instance
        double[] exp = new double[m_NumClasses - 1];
        int index;
        for (int offset = 0; offset < m_NumClasses - 1; offset++) {
            index = offset * dim;
            for (int j = 0; j < dim; j++) {
                exp[offset] += m_Data[i][j] * x[index + j];
            }
        }
        double num = 0;
        if (cls[i] < m_NumClasses - 1) {
            // Class of this instance
            num = exp[cls[i]];
        }
        double denom = 0;
        for (int offset = 0; offset < m_NumClasses - 1; offset++) {
            denom = logOfSum(denom, exp[offset]);
        }
        // Weighted NLL
        nll -= weights[i] * (num - denom);
    }
    // Ridge: note that intercepts NOT included
    for (int offset = 0; offset < m_NumClasses - 1; offset++) {
        for (int r = 1; r < dim; r++) {
            nll += m_Ridge * x[offset * dim + r] * x[offset * dim + r];
        }
    }
    return nll;
}
