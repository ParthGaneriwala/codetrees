public void testStdDev() {
    Stats stats;
    String descr = "Incorrect stdDev!";
    /* We'll only focus on count > 0
     * because count <= 0 gets tested in testNegativeCount
     * And we'll only focus on values seen > 0
     * because values seen <= 0 gets tested in testNegativeCount
     */
    // test count <= 1 and values seen = 1
    stats = getStats();
    stats.add(1.0, 1.0);
    stats.calculateDerived();
    assertNaN(descr, stats.stdDev);
    stats = getStats();
    stats.add(2.0, 0.5);
    stats.calculateDerived();
    assertNaN(descr, stats.stdDev);
    stats = getStats();
    stats.add(-10.0, 0.10986);
    stats.calculateDerived();
    assertNaN(descr, stats.stdDev);
    // first add then subtract
    stats = getStats();
    addWeightedStats(stats, 1.0, 1.0, 2.0, 2.0, 3.0, 1.0);
    subtractWeightedStats(stats, 1.0, 1.0, 2.0, 2.0);
    stats.calculateDerived();
    assertNaN(descr, stats.stdDev);
    // first subtract then add
    stats = getStats();
    subtractWeightedStats(stats, 1.0, 1.0, 2.0, 2.0);
    addWeightedStats(stats, 1.0, 1.0, 2.0, 2.0, 3.0, 1.0);
    stats.calculateDerived();
    assertNaN(descr, stats.stdDev);
    // test count <= 1 and values seen > 1
    stats = getStats();
    addWeightedStats(stats, 1.0, 0.1, 2.0, 0.2, 3.0, 0.3);
    stats.calculateDerived();
    assertNaN(descr, stats.stdDev);
    stats = getStats();
    addWeightedStats(stats, 1.0, 0.2, 2.0, 0.2, 3.0, 0.4);
    stats.calculateDerived();
    assertNaN(descr, stats.stdDev);
    // first add then subtract
    stats = getStats();
    addWeightedStats(stats, 1.0, 0.4, 2.0, 0.2, 3.0, 0.3, 4.0, 0.2);
    subtractWeightedStats(stats, 2.0, 0.2, 4.0, 0.2);
    stats.calculateDerived();
    assertNaN(descr, stats.stdDev);
    // first subtract then add
    stats = getStats();
    subtractWeightedStats(stats, 2.0, 0.2, 4.0, 0.2);
    addWeightedStats(stats, 1.0, 0.4, 2.0, 0.2, 3.0, 0.3, 4.0, 0.2);
    stats.calculateDerived();
    assertNaN(descr, stats.stdDev);
// test count > 1 and values seen > 1
// We won't test this case as it's tested in other testcases
}
