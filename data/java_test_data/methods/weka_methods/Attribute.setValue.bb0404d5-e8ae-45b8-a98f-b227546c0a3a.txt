/**
 * Sets a value of a nominal attribute or string attribute. Creates a fresh
 * list of attribute values before it is set.
 *
 * @param index the value's index
 * @param string the value
 * @throws IllegalArgumentException if the attribute is not nominal or string.
 */
// @ requires string != null;
// @ requires isNominal() || isString();
final void setValue(int index, String string) {
    switch(m_Type) {
        case NOMINAL:
        case STRING:
            ((NominalAttributeInfo) m_AttributeInfo).m_Values = Utils.cast(((NominalAttributeInfo) m_AttributeInfo).m_Values.clone());
            ((NominalAttributeInfo) m_AttributeInfo).m_Hashtable = Utils.cast(((NominalAttributeInfo) m_AttributeInfo).m_Hashtable.clone());
            Object store = string;
            if (string.length() > STRING_COMPRESS_THRESHOLD) {
                try {
                    store = new SerializedObject(string, true);
                } catch (Exception ex) {
                    System.err.println("Couldn't compress string attribute value -" + " storing uncompressed.");
                }
            }
            ((NominalAttributeInfo) m_AttributeInfo).m_Hashtable.remove(((NominalAttributeInfo) m_AttributeInfo).m_Values.get(index));
            ((NominalAttributeInfo) m_AttributeInfo).m_Values.set(index, store);
            ((NominalAttributeInfo) m_AttributeInfo).m_Hashtable.put(store, new Integer(index));
            break;
        default:
            throw new IllegalArgumentException("Can only set values for nominal" + " or string attributes!");
    }
}
