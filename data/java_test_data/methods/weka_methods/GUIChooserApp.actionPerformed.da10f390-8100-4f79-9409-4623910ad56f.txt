@Override
public void actionPerformed(ActionEvent e) {
    // Do we have TigerJython?
    try {
        ClassLoader tigerLoader = WekaPackageClassLoaderManager.getWekaPackageClassLoaderManager().getPackageClassLoader("tigerjython");
        if (tigerLoader == null) {
            throw new Exception("no tigerjython");
        }
        Class tigerJythonClass = Class.forName("tigerjython.core.TigerJython", true, tigerLoader);
        Object[] args = new Object[1];
        args[0] = new String[0];
        tigerJythonClass.getMethod("main", String[].class).invoke(null, args);
    } catch (Exception ex) {
        // Default to built-in console
        final JythonPanel jythonPanel = new JythonPanel();
        final JFrame frame = Utils.getWekaJFrame(jythonPanel.getPlainTitle(), m_Self);
        frame.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        frame.setJMenuBar(jythonPanel.getMenuBar());
        frame.getContentPane().add(jythonPanel, BorderLayout.CENTER);
        frame.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosed(WindowEvent w) {
                m_Frames.remove(frame);
                checkExit();
            }
        });
        frame.pack();
        frame.setSize(1024, 768);
        frame.setLocationRelativeTo(m_Self);
        frame.setVisible(true);
        m_Frames.add(frame);
    }
}
