public void saveLayout(OutputStream out, int tabIndex) {
    // temporarily remove this panel as a property changle listener from
    // each bean
    Vector<Object> beans = BeanInstance.getBeanInstances(tabIndex);
    for (int i = 0; i < beans.size(); i++) {
        BeanInstance tempB = (BeanInstance) beans.elementAt(i);
        if (tempB.getBean() instanceof Visible) {
            ((Visible) (tempB.getBean())).getVisual().removePropertyChangeListener(this);
            if (tempB.getBean() instanceof MetaBean) {
                ((MetaBean) tempB.getBean()).removePropertyChangeListenersSubFlow(this);
            }
        }
    }
    // now serialize components vector and connections vector
    try {
        Vector<Vector<?>> v = new Vector<Vector<?>>();
        v.setSize(2);
        v.set(XMLBeans.INDEX_BEANINSTANCES, beans);
        v.set(XMLBeans.INDEX_BEANCONNECTIONS, BeanConnection.getConnections(tabIndex));
        XMLBeans xml = new XMLBeans(m_beanLayout, m_bcSupport, tabIndex);
        xml.write(out, v);
    } catch (Exception ex) {
        ex.printStackTrace();
    } finally {
        // restore this panel as a property change listener in the beans
        for (int i = 0; i < beans.size(); i++) {
            BeanInstance tempB = (BeanInstance) beans.elementAt(i);
            if (tempB.getBean() instanceof Visible) {
                ((Visible) (tempB.getBean())).getVisual().addPropertyChangeListener(this);
                if (tempB.getBean() instanceof MetaBean) {
                    ((MetaBean) tempB.getBean()).addPropertyChangeListenersSubFlow(this);
                }
            }
        }
    }
}
