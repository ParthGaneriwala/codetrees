public void testAttributeWithMissing() {
    ((MergeInfrequentNominalValues) m_Filter).setAttributeIndices("5");
    ((MergeInfrequentNominalValues) m_Filter).setMinimumFrequency(100);
    Instances result = useFilter();
    // Number of attributes and instances shouldn't change
    assertEquals(m_Instances.numAttributes(), result.numAttributes());
    assertEquals(m_Instances.numInstances(), result.numInstances());
    // Check that the merging is correct
    int mergedIndex = -1;
    for (int i = 0; i < result.numInstances(); i++) {
        if (m_Instances.instance(i).isMissing(4)) {
            assertTrue("Missing in input should give missing in result", result.instance(i).isMissing(4));
        } else if ((m_Instances.instance(i).value(4) == 1) || (m_Instances.instance(i).value(4) == 2)) {
            if (mergedIndex == -1) {
                mergedIndex = (int) result.instance(i).value(4);
            } else {
                assertEquals("Checking merged value for instance: " + (i + 1), mergedIndex, (int) result.instance(i).value(4));
            }
        }
    }
}
