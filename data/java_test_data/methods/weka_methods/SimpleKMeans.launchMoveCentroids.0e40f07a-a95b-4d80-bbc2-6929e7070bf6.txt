protected int launchMoveCentroids(Instances[] clusters) {
    int emptyClusterCount = 0;
    List<Future<double[]>> results = new ArrayList<Future<double[]>>();
    for (int i = 0; i < m_NumClusters; i++) {
        if (clusters[i].numInstances() == 0) {
            emptyClusterCount++;
        } else {
            Future<double[]> futureCentroid = m_executorPool.submit(new KMeansComputeCentroidTask(i, clusters[i]));
            results.add(futureCentroid);
        }
    }
    try {
        for (Future<double[]> d : results) {
            m_ClusterCentroids.add(new DenseInstance(1.0, d.get()));
        }
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    return emptyClusterCount;
}
