protected String[] createOptions() {
    String[] options = new String[m_ClassifierOptions.length + 2 * m_CVParams.size()];
    int start = 0, end = options.length;
    // Add the cross-validation parameters and their values
    for (int i = 0; i < m_CVParams.size(); i++) {
        CVParameter cvParam = (CVParameter) m_CVParams.elementAt(i);
        double paramValue = cvParam.m_ParamValue;
        if (cvParam.m_RoundParam) {
            // paramValue = (double)((int) (paramValue + 0.5));
            paramValue = Math.rint(paramValue);
        }
        boolean isInt = ((paramValue - (int) paramValue) == 0);
        if (cvParam.m_AddAtEnd) {
            options[--end] = "" + ((cvParam.m_RoundParam || isInt) ? Utils.doubleToString(paramValue, 4) : cvParam.m_ParamValue);
            // Utils.doubleToString(paramValue,4);
            options[--end] = "-" + cvParam.m_ParamChar;
        } else {
            options[start++] = "-" + cvParam.m_ParamChar;
            options[start++] = "" + ((cvParam.m_RoundParam || isInt) ? Utils.doubleToString(paramValue, 4) : cvParam.m_ParamValue);
        // + Utils.doubleToString(paramValue,4);
        }
    }
    // Add the static parameters
    System.arraycopy(m_ClassifierOptions, 0, options, start, m_ClassifierOptions.length);
    return options;
}
