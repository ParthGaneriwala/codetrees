@Override
public Object[] getResultTypes() {
    int addm = (m_AdditionalMeasures != null) ? m_AdditionalMeasures.length : 0;
    Object[] resultTypes = new Object[RESULT_SIZE + addm + m_numPluginStatistics];
    Double doub = new Double(0);
    int current = 0;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    // Timing stats
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    // sizes
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    // Prediction interval statistics
    resultTypes[current++] = doub;
    resultTypes[current++] = doub;
    resultTypes[current++] = "";
    // add any additional measures
    for (int i = 0; i < addm; i++) {
        resultTypes[current++] = doub;
    }
    // plugin metrics
    for (int i = 0; i < m_numPluginStatistics; i++) {
        resultTypes[current++] = doub;
    }
    if (current != RESULT_SIZE + addm + m_numPluginStatistics) {
        throw new Error("ResultTypes didn't fit RESULT_SIZE");
    }
    return resultTypes;
}
