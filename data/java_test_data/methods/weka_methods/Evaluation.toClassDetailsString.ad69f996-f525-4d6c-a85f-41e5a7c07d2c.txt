public String toClassDetailsString(String title) throws Exception {
    if (!m_ClassIsNominal) {
        throw new Exception("Evaluation: No per class statistics possible!");
    }
    boolean displayTP = m_metricsToDisplay.contains("tp rate");
    boolean displayFP = m_metricsToDisplay.contains("fp rate");
    boolean displayP = m_metricsToDisplay.contains("precision");
    boolean displayR = m_metricsToDisplay.contains("recall");
    boolean displayFM = m_metricsToDisplay.contains("f-measure");
    boolean displayMCC = m_metricsToDisplay.contains("mcc");
    boolean displayROC = m_metricsToDisplay.contains("roc area");
    boolean displayPRC = m_metricsToDisplay.contains("prc area");
    StringBuffer text = new StringBuffer(title + "\n                 " + (displayTP ? "TP Rate  " : "") + (displayFP ? "FP Rate  " : "") + (displayP ? "Precision  " : "") + (displayR ? "Recall   " : "") + (displayFM ? "F-Measure  " : "") + (displayMCC ? "MCC      " : "") + (displayROC ? "ROC Area  " : "") + (displayPRC ? "PRC Area  " : ""));
    if (m_pluginMetrics != null && m_pluginMetrics.size() > 0) {
        for (AbstractEvaluationMetric m : m_pluginMetrics) {
            if (m instanceof InformationRetrievalEvaluationMetric && m.appliesToNominalClass()) {
                String metricName = m.getMetricName().toLowerCase();
                if (m_metricsToDisplay.contains(metricName)) {
                    List<String> statNames = m.getStatisticNames();
                    for (String name : statNames) {
                        if (m_metricsToDisplay.contains(name.toLowerCase())) {
                            if (name.length() < 7) {
                                name = Utils.padRight(name, 7);
                            }
                            text.append(name).append("  ");
                        }
                    }
                }
            }
        }
    }
    text.append("Class\n");
    for (int i = 0; i < m_NumClasses; i++) {
        text.append("                 ");
        if (displayTP) {
            double tpr = truePositiveRate(i);
            if (Utils.isMissingValue(tpr)) {
                text.append("?        ");
            } else {
                text.append(String.format("%-9.3f", tpr));
            }
        }
        if (displayFP) {
            double fpr = falsePositiveRate(i);
            if (Utils.isMissingValue(fpr)) {
                text.append("?        ");
            } else {
                text.append(String.format("%-9.3f", fpr));
            }
        }
        if (displayP) {
            double p = precision(i);
            if (Utils.isMissingValue(p)) {
                text.append("?          ");
            } else {
                text.append(String.format("%-11.3f", precision(i)));
            }
        }
        if (displayR) {
            double r = recall(i);
            if (Utils.isMissingValue(r)) {
                text.append("?        ");
            } else {
                text.append(String.format("%-9.3f", recall(i)));
            }
        }
        if (displayFM) {
            double fm = fMeasure(i);
            if (Utils.isMissingValue(fm)) {
                text.append("?          ");
            } else {
                text.append(String.format("%-11.3f", fMeasure(i)));
            }
        }
        if (displayMCC) {
            double mat = matthewsCorrelationCoefficient(i);
            if (Utils.isMissingValue(mat)) {
                text.append("?        ");
            } else {
                text.append(String.format("%-9.3f", matthewsCorrelationCoefficient(i)));
            }
        }
        if (displayROC) {
            double rocVal = areaUnderROC(i);
            if (Utils.isMissingValue(rocVal)) {
                text.append("?         ");
            } else {
                text.append(String.format("%-10.3f", rocVal));
            }
        }
        if (displayPRC) {
            double prcVal = areaUnderPRC(i);
            if (Utils.isMissingValue(prcVal)) {
                text.append("?         ");
            } else {
                text.append(String.format("%-10.3f", prcVal));
            }
        }
        if (m_pluginMetrics != null && m_pluginMetrics.size() > 0) {
            for (AbstractEvaluationMetric m : m_pluginMetrics) {
                if (m instanceof InformationRetrievalEvaluationMetric && m.appliesToNominalClass()) {
                    String metricName = m.getMetricName().toLowerCase();
                    if (m_metricsToDisplay.contains(metricName)) {
                        List<String> statNames = m.getStatisticNames();
                        for (String name : statNames) {
                            if (m_metricsToDisplay.contains(name.toLowerCase())) {
                                double stat = ((InformationRetrievalEvaluationMetric) m).getStatistic(name, i);
                                if (name.length() < 7) {
                                    name = Utils.padRight(name, 7);
                                }
                                if (Utils.isMissingValue(stat)) {
                                    Utils.padRight("?", name.length());
                                } else {
                                    text.append(String.format("%-" + name.length() + ".3f", stat)).append("  ");
                                }
                            }
                        }
                    }
                }
            }
        }
        text.append(m_ClassNames[i]).append('\n');
    }
    text.append("Weighted Avg.    ");
    if (displayTP) {
        double wtpr = weightedTruePositiveRate();
        if (Utils.isMissingValue(wtpr)) {
            text.append("?        ");
        } else {
            text.append(String.format("%-9.3f", wtpr));
        }
    }
    if (displayFP) {
        double wfpr = weightedFalsePositiveRate();
        if (Utils.isMissingValue(wfpr)) {
            text.append("?        ");
        } else {
            text.append(String.format("%-9.3f", wfpr));
        }
    }
    if (displayP) {
        double wp = weightedPrecision();
        if (Utils.isMissingValue(wp)) {
            text.append("?          ");
        } else {
            text.append(String.format("%-11.3f", wp));
        }
    }
    if (displayR) {
        double wr = weightedRecall();
        if (Utils.isMissingValue(wr)) {
            text.append("?        ");
        } else {
            text.append(String.format("%-9.3f", wr));
        }
    }
    if (displayFM) {
        double wf = weightedFMeasure();
        if (Utils.isMissingValue(wf)) {
            text.append("?          ");
        } else {
            text.append(String.format("%-11.3f", wf));
        }
    }
    if (displayMCC) {
        double wmc = weightedMatthewsCorrelation();
        if (Utils.isMissingValue(wmc)) {
            text.append("?        ");
        } else {
            text.append(String.format("%-9.3f", wmc));
        }
    }
    if (displayROC) {
        double wroc = weightedAreaUnderROC();
        if (Utils.isMissingValue(wroc)) {
            text.append("?         ");
        } else {
            text.append(String.format("%-10.3f", wroc));
        }
    }
    if (displayPRC) {
        double wprc = weightedAreaUnderPRC();
        if (Utils.isMissingValue(wprc)) {
            text.append("?         ");
        } else {
            text.append(String.format("%-10.3f", wprc));
        }
    }
    if (m_pluginMetrics != null && m_pluginMetrics.size() > 0) {
        for (AbstractEvaluationMetric m : m_pluginMetrics) {
            if (m instanceof InformationRetrievalEvaluationMetric && m.appliesToNominalClass()) {
                String metricName = m.getMetricName().toLowerCase();
                if (m_metricsToDisplay.contains(metricName)) {
                    List<String> statNames = m.getStatisticNames();
                    for (String name : statNames) {
                        if (m_metricsToDisplay.contains(name.toLowerCase())) {
                            double stat = ((InformationRetrievalEvaluationMetric) m).getClassWeightedAverageStatistic(name);
                            if (name.length() < 7) {
                                name = Utils.padRight(name, 7);
                            }
                            if (Utils.isMissingValue(stat)) {
                                Utils.padRight("?", name.length());
                            } else {
                                text.append(String.format("%-" + name.length() + ".3f", stat)).append("  ");
                            }
                        }
                    }
                }
            }
        }
    }
    text.append("\n");
    return text.toString();
}
