private void processPackage(String tempBeanCompName, weka.gui.HierarchyPropertyParser hpp, DefaultMutableTreeNode parentNode, Map<String, DefaultMutableTreeNode> nodeTextIndex) {
    if (hpp.isLeafReached()) {
        // instantiate a bean and add it to the holderPanel
        // System.err.println("Would add "+hpp.fullValue());
        /*
       * String algName = hpp.fullValue(); JPanel tempBean =
       * instantiateToolBarBean(true, tempBeanCompName, algName); if (tempBean
       * != null && holderPanel != null) { holderPanel.add(tempBean); }
       */
        hpp.goToParent();
        return;
    }
    String[] children = hpp.childrenValues();
    for (String element : children) {
        hpp.goToChild(element);
        DefaultMutableTreeNode child = null;
        if (hpp.isLeafReached()) {
            String algName = hpp.fullValue();
            Object visibleCheck = instantiateBean(true, tempBeanCompName, algName);
            if (visibleCheck != null) {
                if (visibleCheck instanceof BeanContextChild) {
                    m_bcSupport.add(visibleCheck);
                }
                ImageIcon scaledForTree = null;
                if (visibleCheck instanceof Visible) {
                    BeanVisual bv = ((Visible) visibleCheck).getVisual();
                    if (bv != null) {
                        scaledForTree = new ImageIcon(bv.scale(0.33));
                    // m_iconLookup.put(algName, scaledForTree);
                    }
                }
                // try and get a tool tip
                String toolTip = "";
                try {
                    Object wrappedA = WekaPackageClassLoaderManager.objectForName(algName);
                    // Object wrappedA = Class.forName(algName).newInstance();
                    toolTip = getGlobalInfo(wrappedA);
                } catch (Exception ex) {
                }
                JTreeLeafDetails leafData = new JTreeLeafDetails(tempBeanCompName, algName, scaledForTree);
                if (toolTip != null && toolTip.length() > 0) {
                    leafData.setToolTipText(toolTip);
                }
                child = new InvisibleNode(leafData);
                nodeTextIndex.put(algName.toLowerCase() + " " + (toolTip != null ? toolTip.toLowerCase() : ""), child);
            }
        } else {
            child = new InvisibleNode(element);
        }
        if (child != null) {
            parentNode.add(child);
        }
        processPackage(tempBeanCompName, hpp, child, nodeTextIndex);
    }
    hpp.goToParent();
}
