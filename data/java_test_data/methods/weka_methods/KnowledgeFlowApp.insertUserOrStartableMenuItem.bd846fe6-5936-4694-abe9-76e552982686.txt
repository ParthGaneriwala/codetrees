private void insertUserOrStartableMenuItem(final JComponent bc, final boolean startable, String tempS, PopupMenu beanContextMenu) {
    boolean disabled = false;
    boolean confirmRequest = false;
    // check to see if this item is currently disabled
    if (tempS.charAt(0) == '$') {
        tempS = tempS.substring(1, tempS.length());
        disabled = true;
    }
    // check to see if this item requires confirmation
    if (tempS.charAt(0) == '?') {
        tempS = tempS.substring(1, tempS.length());
        confirmRequest = true;
    }
    final String tempS2 = tempS;
    // JMenuItem custItem = new JMenuItem(tempS2);
    MenuItem custItem = new MenuItem(tempS2);
    if (confirmRequest) {
        custItem.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                // 
                int result = JOptionPane.showConfirmDialog(KnowledgeFlowApp.this, tempS2, "Confirm action", JOptionPane.YES_NO_OPTION);
                if (result == JOptionPane.YES_OPTION) {
                    Thread startPointThread = new Thread() {

                        @Override
                        public void run() {
                            try {
                                if (startable) {
                                    ((Startable) bc).start();
                                } else if (bc instanceof UserRequestAcceptor) {
                                    ((UserRequestAcceptor) bc).performRequest(tempS2);
                                }
                                notifyIsDirty();
                            } catch (Exception ex) {
                                ex.printStackTrace();
                            }
                        }
                    };
                    startPointThread.setPriority(Thread.MIN_PRIORITY);
                    startPointThread.start();
                }
            }
        });
    } else {
        custItem.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Thread startPointThread = new Thread() {

                    @Override
                    public void run() {
                        try {
                            if (startable) {
                                ((Startable) bc).start();
                            } else if (bc instanceof UserRequestAcceptor) {
                                ((UserRequestAcceptor) bc).performRequest(tempS2);
                            }
                            notifyIsDirty();
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                    }
                };
                startPointThread.setPriority(Thread.MIN_PRIORITY);
                startPointThread.start();
            }
        });
    }
    if (disabled) {
        custItem.setEnabled(false);
    }
    beanContextMenu.add(custItem);
}
