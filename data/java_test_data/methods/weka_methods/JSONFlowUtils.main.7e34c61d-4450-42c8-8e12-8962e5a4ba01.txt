public static void main(String[] args) {
    try {
        weka.knowledgeflow.steps.Loader step = new weka.knowledgeflow.steps.Loader();
        weka.core.converters.ArffLoader arffL = new weka.core.converters.ArffLoader();
        arffL.setFile(new java.io.File("${user.home}/datasets/UCI/iris.arff"));
        step.setLoader(arffL);
        StepManagerImpl manager = new StepManagerImpl(step);
        Flow flow = new Flow();
        flow.addStep(manager);
        TrainingSetMaker step2 = new TrainingSetMaker();
        StepManagerImpl trainManager = new StepManagerImpl(step2);
        flow.addStep(trainManager);
        manager.addOutgoingConnection(StepManager.CON_DATASET, trainManager);
        ClassAssigner step3 = new ClassAssigner();
        StepManagerImpl assignerManager = new StepManagerImpl(step3);
        flow.addStep(assignerManager);
        trainManager.addOutgoingConnection(StepManager.CON_TRAININGSET, assignerManager);
        Saver step4 = new Saver();
        weka.core.converters.CSVSaver arffS = new weka.core.converters.CSVSaver();
        arffS.setDir(".");
        arffS.setFilePrefix("");
        step4.setSaver(arffS);
        StepManagerImpl saverManager = new StepManagerImpl(step4);
        // saverManager.setManagedStep(step3);
        flow.addStep(saverManager);
        assignerManager.addOutgoingConnection(StepManager.CON_TRAININGSET, saverManager);
        // Dummy steo2 = new Dummy();
        // StepManager manager2 = new StepManager();
        // manager2.setManagedStep(steo2);
        // flow.addStep(manager2);
        // 
        // manager.addOutgoingConnection(StepManager.CON_DATASET,
        // manager2);
        // String json = flowToJSON(flow);
        // System.out.println(json);
        // 
        // Flow newFlow = JSONToFlow(json);
        // json = flowToJSON(newFlow);
        // System.out.println(json);
        FlowRunner fr = new FlowRunner(new Settings("weka", KFDefaults.APP_ID));
        fr.setFlow(flow);
        fr.run();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}
