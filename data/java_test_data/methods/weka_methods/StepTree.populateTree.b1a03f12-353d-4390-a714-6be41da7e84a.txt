protected void populateTree(Set<String> stepClasses, DefaultMutableTreeNode jtreeRoot, Properties GOEProps) throws Exception {
    for (String stepClass : stepClasses) {
        try {
            Step toAdd = // (Step) Beans.instantiate(getClass().getClassLoader(), stepClass);
            (Step) WekaPackageClassLoaderManager.objectForName(stepClass);
            // check for ignore
            if (toAdd.getClass().getAnnotation(StepTreeIgnore.class) != null || toAdd.getClass().getAnnotation(weka.gui.beans.KFIgnore.class) != null) {
                continue;
            }
            String category = getStepCategory(toAdd);
            DefaultMutableTreeNode targetFolder = getCategoryFolder(jtreeRoot, category);
            if (toAdd instanceof WekaAlgorithmWrapper) {
                populateForWekaWrapper(targetFolder, (WekaAlgorithmWrapper) toAdd, GOEProps);
            } else {
                StepTreeLeafDetails leafData = new StepTreeLeafDetails(toAdd);
                DefaultMutableTreeNode fixedLeafNode = new InvisibleNode(leafData);
                targetFolder.add(fixedLeafNode);
                String tipText = leafData.getToolTipText() != null ? leafData.getToolTipText() : "";
                m_nodeTextIndex.put(stepClass.toLowerCase() + " " + tipText, fixedLeafNode);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
}
