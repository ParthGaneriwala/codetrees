protected void setupUserPerspectives() {
    // first clear the toolbar
    for (int i = m_perspectiveToolBar.getComponentCount() - 1; i > 0; i--) {
        m_perspectiveToolBar.remove(i);
        m_perspectives.remove(i);
    }
    int index = 1;
    for (String c : m_visiblePerspectives) {
        String impl = m_perspectiveNameLookup.get(c);
        Perspective toAdd = m_perspectiveCache.get(impl);
        if (toAdd instanceof JComponent) {
            toAdd.setLoaded(true);
            m_perspectives.add(toAdd);
            String titleM = toAdd.getPerspectiveTitle();
            Icon icon = toAdd.getPerspectiveIcon();
            JToggleButton tBut = null;
            if (icon != null) {
                tBut = new JToggleButton(titleM, icon, false);
            } else {
                tBut = new JToggleButton(titleM, false);
            }
            tBut.setToolTipText(toAdd.getPerspectiveTipText());
            final int theIndex = index;
            tBut.setEnabled(toAdd.okToBeActive());
            tBut.addActionListener(new ActionListener() {

                @Override
                public void actionPerformed(ActionEvent e) {
                    setActivePerspective(theIndex);
                }
            });
            m_perspectiveToolBar.add(tBut);
            m_perspectiveGroup.add(tBut);
            index++;
        }
    }
    Component[] comps = getComponents();
    Perspective current = null;
    int pIndex = 0;
    for (int i = 0; i < comps.length; i++) {
        if (comps[i] instanceof Perspective) {
            pIndex = i;
            current = (Perspective) comps[i];
            break;
        }
    }
    if (current != m_mainPerspective) {
        setActivePerspective(0);
    }
    m_mainApp.revalidate();
}
