@Override
public void processIncoming(Data data) throws WekaException {
    Instances structure;
    Instance inst;
    if (m_isReset) {
        if (getStepManager().numIncomingConnectionsOfType(StepManager.CON_INSTANCE) > 0) {
            inst = data.getPrimaryPayload();
            structure = inst.dataset();
            m_streaming = true;
        } else {
            structure = data.getPrimaryPayload();
            structure = new Instances(structure, 0);
        }
        try {
            m_matches = new SubstringLabelerRules(m_matchDetails, m_attName, getConsumeNonMatching(), getNominalBinary(), structure, ((StepManagerImpl) getStepManager()).stepStatusMessagePrefix(), getStepManager().getLog(), getStepManager().getExecutionEnvironment().getEnvironmentVariables());
        } catch (Exception ex) {
            throw new WekaException(ex);
        }
        m_isReset = false;
    }
    if (m_streaming) {
        if (getStepManager().isStreamFinished(data)) {
            m_streamingData.clearPayload();
            getStepManager().throughputFinished(m_streamingData);
            return;
        } else {
            processStreaming(data);
        }
    } else {
        processBatch(data);
    }
    if (isStopRequested()) {
        getStepManager().interrupted();
    } else if (!m_streaming) {
        getStepManager().finished();
    }
}
