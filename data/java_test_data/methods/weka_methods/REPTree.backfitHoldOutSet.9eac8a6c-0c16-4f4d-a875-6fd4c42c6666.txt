protected void backfitHoldOutSet() throws Exception {
    // Insert instance into hold-out class distribution
    if (m_Info.classAttribute().isNominal()) {
        // Nominal case
        if (m_ClassProbs == null) {
            m_ClassProbs = new double[m_Info.numClasses()];
        }
        System.arraycopy(m_Distribution, 0, m_ClassProbs, 0, m_Info.numClasses());
        for (int i = 0; i < m_HoldOutDist.length; i++) {
            m_ClassProbs[i] += m_HoldOutDist[i];
        }
        if (Utils.sum(m_ClassProbs) > 0) {
            doSmoothing();
            Utils.normalize(m_ClassProbs);
        } else {
            m_ClassProbs = null;
        }
    } else {
        // Numeric case
        double sumOfWeightsTrainAndHoldout = m_Distribution[1] + m_HoldOutDist[0];
        if (sumOfWeightsTrainAndHoldout <= 0) {
            return;
        }
        if (m_ClassProbs == null) {
            m_ClassProbs = new double[1];
        } else {
            m_ClassProbs[0] *= m_Distribution[1];
        }
        m_ClassProbs[0] += m_HoldOutDist[1];
        m_ClassProbs[0] /= sumOfWeightsTrainAndHoldout;
    }
    // The process is recursive
    if (m_Attribute != -1) {
        for (Tree m_Successor : m_Successors) {
            m_Successor.backfitHoldOutSet();
        }
    }
}
