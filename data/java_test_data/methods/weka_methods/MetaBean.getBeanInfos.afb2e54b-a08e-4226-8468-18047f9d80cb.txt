private Vector<BeanInfo> getBeanInfos(Vector<Object> beans, int type) {
    Vector<BeanInfo> infos = new Vector<BeanInfo>();
    for (int i = 0; i < beans.size(); i++) {
        BeanInstance temp = (BeanInstance) beans.elementAt(i);
        if (temp.getBean() instanceof MetaBean) {
            switch(type) {
                case 0:
                    infos.addAll(((MetaBean) temp.getBean()).getBeanInfoSubFlow());
                    break;
                case 1:
                    infos.addAll(((MetaBean) temp.getBean()).getBeanInfoInputs());
                    break;
                case 2:
                    infos.addAll(((MetaBean) temp.getBean()).getBeanInfoOutputs());
            }
        } else {
            try {
                infos.add(Introspector.getBeanInfo(temp.getBean().getClass()));
            } catch (IntrospectionException ex) {
                ex.printStackTrace();
            }
        }
    }
    return infos;
}
