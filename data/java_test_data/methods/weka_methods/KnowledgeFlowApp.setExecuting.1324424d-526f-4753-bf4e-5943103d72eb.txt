public synchronized void setExecuting(int index, boolean executing) {
    if (index < getNumTabs() && index >= 0) {
        m_executingList.set(index, new Boolean(executing));
        ((CloseableTabTitle) m_flowTabs.getTabComponentAt(index)).setButtonEnabled(!executing);
        m_saveB.setEnabled(!getExecuting());
        m_saveBB.setEnabled(!getExecuting());
        m_playB.setEnabled(!getExecuting());
        m_playBB.setEnabled(!getExecuting());
        m_stopB.setEnabled(getExecuting());
        m_groupB.setEnabled(false);
        if (getSelectedBeans().size() > 0 && !getExecuting()) {
            // Able to group selected subflow?
            final Vector<Object> selected = m_mainKFPerspective.getSelectedBeans();
            // check if sub flow is valid
            final Vector<Object> inputs = BeanConnection.inputs(selected, m_mainKFPerspective.getCurrentTabIndex());
            final Vector<Object> outputs = BeanConnection.outputs(selected, m_mainKFPerspective.getCurrentTabIndex());
            if (groupable(selected, inputs, outputs)) {
                m_groupB.setEnabled(true);
            }
        }
        m_cutB.setEnabled(getSelectedBeans().size() > 0 && !getExecuting());
        m_deleteB.setEnabled(getSelectedBeans().size() > 0 && !getExecuting());
        m_selectAllB.setEnabled(BeanInstance.getBeanInstances(getCurrentTabIndex()).size() > 0 && !getExecuting());
        m_copyB.setEnabled(getSelectedBeans().size() > 0 && !getExecuting());
        m_pasteB.setEnabled((m_pasteBuffer != null && m_pasteBuffer.length() > 0) && !getExecuting());
        m_undoB.setEnabled(!getExecuting() && getUndoBuffer().size() > 0);
    }
}
