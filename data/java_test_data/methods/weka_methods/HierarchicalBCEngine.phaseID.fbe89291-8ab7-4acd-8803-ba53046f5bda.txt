protected void phaseID(final int lindex, final int[][] levels) {
    // = new float[levels[lindex+1].size()];
    float[] colBC;
    colBC = calcColBC(lindex, levels);
    // System.out.println("In ID Level"+(lindex+1)+":");
    // System.out.print("\t");
    // for(int i=0; i<colBC.length; i++)
    // {System.out.print("Col"+(i+1)+":"+colBC[i]+" ");
    // }
    // System.out.println("");
    // colBC = calcColBC1(lindex, levels);
    // for(int i=0; i<colBC.length; i++)
    // {System.out.print("Col"+(i+1)+":"+colBC[i]+" ");
    // }
    // System.out.println("");
    // System.out.print("\n\tNodes ");
    // for(int i=0; i<levels[lindex+1].length; i++)
    // System.out.print(levels[lindex+1][i]+" ");
    // System.out.println("");
    // System.out.println("\nCrossings: "+crossings(levels));
    // inspect(false, lindex, levels, colBC);
    isort(levels[lindex + 1], colBC);
// combSort11(levels[lindex+1], colBC);
// System.out.println("After sorting");
// System.out.print("\t");
// for(int i=0; i<colBC.length; i++)
// {System.out.print("Col"+(i+1)+":"+colBC[i]+" ");
// }
// System.out.print("\n\tNodes ");
// for(int i=0; i<levels[lindex+1].length; i++)
// System.out.print(levels[lindex+1][i]+" ");
// System.out.println("\nCrossings: "+crossings(levels));
// /System.out.println("");
}
