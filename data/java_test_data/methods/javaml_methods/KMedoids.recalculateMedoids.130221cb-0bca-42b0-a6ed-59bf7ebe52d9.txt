private boolean recalculateMedoids(int[] assignment, Instance[] medoids, Dataset[] output, Dataset data) {
    boolean changed = false;
    for (int i = 0; i < numberOfClusters; i++) {
        output[i] = new DefaultDataset();
        for (int j = 0; j < assignment.length; j++) {
            if (assignment[j] == i) {
                output[i].add(data.instance(j));
            }
        }
        if (output[i].size() == 0) {
            // new random, empty medoid
            medoids[i] = data.instance(rg.nextInt(data.size()));
            changed = true;
        } else {
            Instance centroid = DatasetTools.average(output[i]);
            Instance oldMedoid = medoids[i];
            medoids[i] = data.kNearest(1, centroid, dm).iterator().next();
            if (!medoids[i].equals(oldMedoid))
                changed = true;
        }
    }
    return changed;
}
