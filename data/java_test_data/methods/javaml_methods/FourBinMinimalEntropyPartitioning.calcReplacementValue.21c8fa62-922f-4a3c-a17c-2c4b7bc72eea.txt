/**
 * Determine discrete bin to map on continuous value
 *
 * @param FN
 * feature name
 * @param FV
 * feature value
 */
private double calcReplacementValue(int FN, double FV) {
    if (!featureName_HT_Discretized.containsKey(FN)) {
        return FV;
    } else {
        Vector fvalues = featureName_HT_Discretized.get(FN);
        int bin = 0;
        boolean ok = true;
        if (!fvalues.isEmpty()) {
            while ((ok) && (FV >= (Double) fvalues.get(bin))) {
                // +1 for next bin index +1 for relative to size
                if ((bin + 2) > fvalues.size()) {
                    ok = false;
                }
                // for new bin at the end
                bin++;
            }
        }
        return (double) bin;
    }
}
