@Override
public Map<Object, Double> classDistribution(Instance instance) {
    Map<Object, Double> membership = new HashMap<Object, Double>();
    for (Object o : dataReference.classes()) membership.put(o, 0.0);
    for (int i = 0; i < classifiers.length; i++) {
        Object prediction = classifiers[i].classify(instance);
        membership.put(prediction, membership.get(prediction) + // [classifiers[i].classifyInstance(instance)]++;
        (1.0 / classifiers.length));
    }
    // membership[i] /= classifiers.length;
    return membership;
}
