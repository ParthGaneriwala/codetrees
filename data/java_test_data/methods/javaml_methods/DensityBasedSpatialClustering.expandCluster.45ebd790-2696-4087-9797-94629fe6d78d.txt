private boolean expandCluster(DataObject dataObject) {
    HashSet<DataObject> usedSeeds = new HashSet<DataObject>();
    List<DataObject> seedList = epsilonRangeQuery(epsilon, dataObject);
    usedSeeds.addAll(seedList);
    /**
     * dataObject is NO coreObject
     */
    if (seedList.size() < minPoints) {
        // System.out.println("This is noise...");
        dataObject.clusterIndex = DataObject.NOISE;
        return false;
    }
    /**
     * dataObject is coreObject, it has sufficient neighboring points
     */
    for (int i = 0; i < seedList.size(); i++) {
        DataObject seedListDataObject = seedList.get(i);
        /* Label seedListDataObject with the current clusterID */
        seedListDataObject.clusterIndex = clusterID;
        if (seedListDataObject.equals(dataObject)) {
            seedList.remove(i);
            i--;
        }
    }
    // for (int j = 0; j < seedList.size(); j++) {
    while (seedList.size() > 0) {
        DataObject seedListDataObject = seedList.get(0);
        List<DataObject> seedListDataObject_Neighbourhood = epsilonRangeQuery(epsilon, seedListDataObject);
        /**
         * seedListDataObject is coreObject
         */
        if (seedListDataObject_Neighbourhood.size() >= minPoints) {
            for (int i = 0; i < seedListDataObject_Neighbourhood.size(); i++) {
                DataObject p = seedListDataObject_Neighbourhood.get(i);
                if (p.clusterIndex == DataObject.UNCLASSIFIED || p.clusterIndex == DataObject.NOISE) {
                    if (p.clusterIndex == DataObject.UNCLASSIFIED) {
                        if (!usedSeeds.contains(p)) {
                            seedList.add(p);
                            usedSeeds.add(p);
                        }
                    }
                }
                p.clusterIndex = clusterID;
            }
        }
        seedList.remove(0);
    }
    return true;
}
