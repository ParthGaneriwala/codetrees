@Override
public void build(Dataset data) {
    weights = new double[data.noAttributes()];
    /* Normalize the data to [0,1] */
    NormalizeMidrange dnm = new NormalizeMidrange(0.5, 1);
    dnm.filter(data);
    /* Number of iterations */
    int m = data.size();
    for (int i = 0; i < m; i++) {
        Instance random = data.instance(rg.nextInt(data.size()));
        findNearest(data, random);
        for (int j = 0; j < weights.length; j++) weights[j] = weights[j] - diff(j, random, nearestHit) / m + diff(j, random, nearestMiss) / m;
    }
}
