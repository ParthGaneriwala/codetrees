static String format(double x, int ndigits, int strlen) {
    String s = null;
    boolean leftalign = false;
    if (strlen < 0) {
        strlen = -strlen;
        leftalign = true;
    }
    if (strlen < 5)
        throw new IllegalArgumentException("Cannot use yet abs(strlen) < 5");
    int pad = 0;
    ExpDouble d = new ExpDouble(x, ndigits);
    int len = d.strlen();
    pad = strlen - len;
    if (pad >= 0) {
        s = d.toString();
    } else {
        // if it has a fraction, it can be right-trucated
        if (d.exponent < 0) {
            // retry rounding if at least one digit can be displayed as
            // 0.00#
            int newdigits = d.digits - -pad;
            // at least one digit necessary
            if (newdigits > 0) {
                boolean plusone = d.round(newdigits);
                // if rounding up to next order of magnitude
                if (plusone && newdigits > 1) {
                    d.round(newdigits - 1);
                } else {
                    s = exponentialNotation(d, strlen);
                }
                s = d.toString();
            } else {
                s = exponentialNotation(d, strlen);
            }
        } else {
            // try exponential notation (1.2E3)
            s = exponentialNotation(d, strlen);
        }
        pad = strlen - s.length();
    }
    String spc = space(pad);
    if (leftalign) {
        return s + spc;
    } else {
        return spc + s;
    }
}
