public static void main(String[] args) throws Exception {
    ;
    Dataset data = TutorialData.IRIS.load();
    /* Load a data set */
    // data = inputFiles[fileindex];
    // start discretisation
    ThreeBinMinimalEntropyPartitioning rmep = new ThreeBinMinimalEntropyPartitioning(false);
    rmep.build(data);
    // Dataset ddata=data.copy();
    // int index = 0;
    // if (sparse) {
    // // start fix
    // // fix for sparse datasets but should be fixed in JML now
    // for (Instance inst : ddata) {
    // 
    // ddata.get(index).setClassValue(inst.classValue());
    // if (!ddata.classes().contains(inst.classValue())) {
    // ddata.classes().add(inst.classValue());
    // }
    // index++;
    // }
    // // end fix
    // }
    rmep.filter(data);
    int[] kparents = new int[6];
    // k ideal for cancer data
    kparents[0] = 0;
    kparents[1] = 1;
    kparents[2] = 2;
    kparents[3] = 3;
    kparents[4] = 4;
    kparents[5] = 10;
    double treshold = 0.0;
    KDependentBayesClassifier nbc = new KDependentBayesClassifier(false, treshold, kparents);
    nbc.buildClassifier(data);
    boolean test_1sample = false;
    for (int n = 0; n < kparents.length; n++) {
        // st.start();
        nbc.setcurrentWorkingK(kparents[n]);
        int[] res = classifyNewInstance(nbc, test_1sample, kparents[n], rmep);
        int result = kparents[n];
        System.out.println("---------------------\nKDB-" + result);
        System.out.println("correct: " + res[0]);
        System.out.println("incorrect: " + res[1]);
    }
}
