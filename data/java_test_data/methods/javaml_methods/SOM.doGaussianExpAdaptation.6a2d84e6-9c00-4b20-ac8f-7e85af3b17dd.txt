private void doGaussianExpAdaptation() {
    // the steps variable is the number of times this update is done
    for (int n = 0; n < steps; n++) {
        double wCache = math.gaussianWidth(width, n, steps);
        double exp = math.expLRP(n, lrate, steps);
        double[] input = iVector.getNodeValuesAt(generator.nextInt(iVectorSize));
        index = resolveIndexOfWinningNeuron(input);
        // winning node
        double[] wLocation = wV.getNodeLocationAt(index);
        for (int h = 0; h < wVectorSize; h++) {
            wV.setNodeValuesAt(h, math.gaussianAdaptation(input, wV.getNodeValuesAt(h), wLocation, wV.getNodeLocationAt(h), wCache, exp));
        }
    }
}
