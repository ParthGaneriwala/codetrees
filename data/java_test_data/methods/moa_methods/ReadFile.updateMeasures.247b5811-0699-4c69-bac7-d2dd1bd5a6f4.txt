public String updateMeasures(String[] algNames, String stream) {
    this.measures = new LinkedList<>();
    // read files
    boolean addFirst = true;
    for (int i = 0; i < algNames.length; i++) {
        File algorithm = new File(path + File.separator + stream + File.separator + algNames[i]);
        FileReader fr = null;
        try {
            fr = new FileReader(algorithm.getAbsolutePath());
        } catch (FileNotFoundException ex) {
            return "Problem with file: " + algorithm.getAbsolutePath();
        }
        BufferedReader br = new BufferedReader(fr);
        try {
            String line = br.readLine();
            if (addFirst) {
                measures.add(line);
                addFirst = false;
            } else if (measures.remove(line)) {
                measures.add(line);
            } else {
                String[] lineArray = line.split(",");
                String[] measureArray = measures.getFirst().split(",");
                String newMeasure = "";
                for (int l = 0; l < lineArray.length; l++) {
                    for (int m = 0; m < measureArray.length; m++) {
                        if (lineArray[l].equals(measureArray[m])) {
                            newMeasure += lineArray[l] + ",";
                        }
                    }
                }
                String[] s;
                if (newMeasure.endsWith(",")) {
                    s = newMeasure.split(",");
                    newMeasure = "";
                    for (int k = 0; k < s.length; k++) {
                        newMeasure += s[k];
                        if (k != s.length - 1) {
                            newMeasure += ",";
                        }
                    }
                }
                measures.removeFirst();
                measures.add(newMeasure);
            }
        } catch (IOException ex) {
            return "Problem with file: " + algorithm.getAbsolutePath();
        }
    }
    return null;
}
