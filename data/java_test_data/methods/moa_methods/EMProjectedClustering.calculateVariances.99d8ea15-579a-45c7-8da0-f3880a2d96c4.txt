private void calculateVariances() {
    // per dimension d:
    // sigma_i = [\sum_{x in D} (P(C_i|x) * (x-mu_i)^2)] / ] / [W_i * n]
    double xMinusMu;
    for (int i = 0; i < k; i++) {
        for (int d = 0; d < dim; d++) {
            clusterVariances[i][d] = 0.0;
            if (clusterWeights[i] <= 0.0)
                continue;
            for (int x = 0; x < n; x++) {
                xMinusMu = pointArray[x][d] - clusterMeans[i][d];
                clusterVariances[i][d] += pCgivenX[i][x] * (xMinusMu * xMinusMu);
            }
            if (clusterVariances[i][d] < this.minVariance)
                clusterVariances[i][d] = this.minVariance;
            else
                clusterVariances[i][d] /= (clusterWeights[i] * n);
        }
    }
}
