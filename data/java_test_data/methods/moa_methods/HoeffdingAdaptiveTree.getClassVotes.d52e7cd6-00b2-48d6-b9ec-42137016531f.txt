@Override
public double[] getClassVotes(Instance inst, HoeffdingTree ht) {
    double[] dist;
    int predictionOption = ((HoeffdingAdaptiveTree) ht).leafpredictionOption.getChosenIndex();
    if (predictionOption == 0) {
        // MC
        dist = this.observedClassDistribution.getArrayCopy();
    } else if (predictionOption == 1) {
        // NB
        dist = NaiveBayes.doNaiveBayesPrediction(inst, this.observedClassDistribution, this.attributeObservers);
    } else {
        // NBAdaptive
        if (this.mcCorrectWeight > this.nbCorrectWeight) {
            dist = this.observedClassDistribution.getArrayCopy();
        } else {
            dist = NaiveBayes.doNaiveBayesPrediction(inst, this.observedClassDistribution, this.attributeObservers);
        }
    }
    // New for option votes
    double distSum = Utils.sum(dist);
    if (distSum * this.getErrorEstimation() * this.getErrorEstimation() > 0.0) {
        // Adding weight
        Utils.normalize(dist, distSum * this.getErrorEstimation() * this.getErrorEstimation());
    }
    return dist;
}
