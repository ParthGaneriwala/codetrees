private void drawPoint(DataPoint point, boolean bShowDecay, Color c, boolean bFill, boolean bRedrawPointImg) {
    Graphics2D imageGraphics = (Graphics2D) pointImg.createGraphics();
    if (bAntiAlias) {
        imageGraphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    }
    int size = Math.min(getWidth(), getHeight());
    int x = (int) Math.round(point.value(getActiveXDim()) * size);
    int y = (int) Math.round(point.value(getActiveYDim()) * size);
    if (c == null) {
        // fixed color of points
        c = Color.GRAY;
    // get a color by class of point
    // Color c = PointPanel.getPointColorbyClass((int)point.classValue(), 10);
    }
    if (bShowDecay) {
        // 20
        int minValue = 40;
        double w = point.weight();
        int alpha = (int) (255 * w + minValue);
        if (alpha > 255)
            alpha = 255;
        // System.out.println("alpha="+alpha+"w="+w);
        c = new Color(c.getRed(), c.getGreen(), c.getBlue(), alpha);
    }
    imageGraphics.setColor(c);
    int psize = PointPanel.POINTSIZE;
    int poffset = 2;
    imageGraphics.drawOval(x - poffset, y - poffset, psize, psize);
    if (bFill)
        imageGraphics.fillOval(x - poffset, y - poffset, psize, psize);
    if (bRedrawPointImg) {
        ApplyToCanvas(pointImg);
        RedrawPointLayer();
    }
}
