private void paintFullCurve(Graphics g, MeasureCollection m, int mSelect, Color color) {
    if (m.getNumberOfValues(mSelect) == 0)
        return;
    boolean corrupted = false;
    int height = getHeight();
    int width = getWidth();
    int n = m.getNumberOfValues(mSelect);
    if (x_resolution > 1)
        n = (int) (n / (int) x_resolution);
    int[] x = new int[n];
    int[] y = new int[n];
    for (int i = 0; i < n; i++) {
        if (x_resolution > 1) {
            // we need to compress the values
            double sum_y = 0;
            int counter = 0;
            for (int j = 0; j < x_resolution; j++) {
                if ((i) * x_resolution + j < m.getNumberOfValues(mSelect)) {
                    sum_y += m.getValue(mSelect, i);
                    counter++;
                }
                sum_y /= counter;
            }
            x[i] = i;
            y[i] = (int) (height - (sum_y / max_value) * height);
        } else {
            // spreading one value
            x[i] = (i) * (int) (1 / x_resolution) + (int) (1 / x_resolution / 2);
            double value = m.getValue(mSelect, i);
            if (Double.isNaN(value)) {
                corrupted = true;
                break;
            }
            y[i] = (int) (height - (value / max_value) * height);
        }
    }
    if (!corrupted) {
        g.setColor(color);
        g.drawPolyline(x, y, n);
    }
}
