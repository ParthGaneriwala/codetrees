protected double[] getNaiveBayesPrediction(Instance inst) {
    double[] classDist = getMajorityClassVotes(inst);
    DoubleVector conditionalProbability = null;
    for (int i = 0; i < virtualChildren.size(); i++) {
        VirtualNode virtual = virtualChildren.get(i);
        if (virtual != null && virtual.hasInformation()) {
            double currentValue = inst.value(i);
            conditionalProbability = virtual.computeConditionalProbability(currentValue);
            if (conditionalProbability != null) {
                for (int j = 0; j < classDist.length; j++) {
                    classDist[j] *= conditionalProbability.getValue(j);
                }
            }
        }
    }
    double sum = 0.0;
    for (int i = 0; i < classDist.length; i++) {
        sum += classDist[i];
    }
    if (sum == 0.0) {
        for (int i = 0; i < classDist.length; i++) {
            classDist[i] = 1.0 / classDist.length;
        }
    } else {
        for (int i = 0; i < classDist.length; i++) {
            classDist[i] /= sum;
        }
    }
    return classDist;
}
