public void summaryCMD(String[] measures, String[] types) {
    List<Measure> algmeasures = new ArrayList<>();
    List<Stream> streams = new ArrayList<>();
    List<String> algPath = new ArrayList<>();
    List<String> algShortNames = new ArrayList<>();
    boolean type = true;
    for (int k = 0; k < measures.length; k++) {
        type = types[k].equals("Mean");
        Measure m = new Measure(measures[k], measures[k], type, 0);
        algmeasures.add(m);
    }
    String path = this.jTextFieldResultsPath.getText();
    for (int i = 0; i < streamModel.getRowCount(); i++) {
        algPath.clear();
        for (int j = 0; j < algoritmModel.getRowCount(); j++) {
            File inputFile = new File(FilenameUtils.separatorsToSystem(path + "\\" + streamModel.getValueAt(i, 0) + "\\" + algoritmModel.getValueAt(j, 0)));
            File streamFile = new File(FilenameUtils.separatorsToSystem(path + "\\" + streamModel.getValueAt(i, 0)));
            if (!inputFile.exists()) {
                System.out.println("File not found: " + inputFile.getAbsolutePath());
                return;
            } else {
                String algorithmPath = FilenameUtils.separatorsToSystem(path + "\\" + streamModel.getValueAt(i, 0).toString() + "\\" + algoritmModel.getValueAt(j, 0).toString());
                algPath.add(algorithmPath);
                if (i == 0) {
                    algShortNames.add(algoritmModel.getValueAt(j, 1).toString());
                }
            }
        }
        Stream s = new Stream(streamModel.getValueAt(i, 1).toString(), algPath, algShortNames, algmeasures);
        streams.add(s);
    }
    // create summary
    try {
        summary = new Summary(streams, FilenameUtils.separatorsToSystem(path + File.separator));
        jButtonSummarize.setEnabled(true);
        String summaryPath = this.jTextFieldResultsPath.getText() + File.separator;
        summary.invertedSumariesPerMeasure(summaryPath);
        summary.computeWinsTiesLossesHTML(summaryPath);
        summary.computeWinsTiesLossesLatex(summaryPath);
        summary.generateHTML(summaryPath);
        summary.generateLatex(summaryPath);
        System.out.println("Summaries created at: " + summaryPath);
    } catch (Exception exc) {
    // System.err.println("Problems generating summaries");
    }
}
