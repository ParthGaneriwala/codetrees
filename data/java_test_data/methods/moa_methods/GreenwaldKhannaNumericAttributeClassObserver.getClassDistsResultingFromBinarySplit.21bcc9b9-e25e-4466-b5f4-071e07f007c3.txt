public double[][] getClassDistsResultingFromBinarySplit(double splitValue) {
    DoubleVector lhsDist = new DoubleVector();
    DoubleVector rhsDist = new DoubleVector();
    for (int i = 0; i < this.attValDistPerClass.size(); i++) {
        GreenwaldKhannaQuantileSummary estimator = this.attValDistPerClass.get(i);
        if (estimator != null) {
            long countBelow = estimator.getCountBelow(splitValue);
            lhsDist.addToValue(i, countBelow);
            rhsDist.addToValue(i, estimator.getTotalCount() - countBelow);
        }
    }
    return new double[][] { lhsDist.getArrayRef(), rhsDist.getArrayRef() };
}
