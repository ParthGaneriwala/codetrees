private double rank(double t0, double[][] t) {
    double[] temp = new double[t.length * t[0].length + 1];
    temp[0] = t0;
    int p = 1;
    for (double[] t1 : t) {
        for (int j = 0; j < t1.length; j++) {
            temp[p++] = t1[j];
        }
    }
    double[] ordTemp = temp.clone();
    Arrays.sort(ordTemp);
    Map<Double, Double> map = new TreeMap();
    for (int i = 0; i < ordTemp.length; i++) {
        double xTemp = ordTemp[i], sum = i;
        int count = 1;
        while (i + 1 < ordTemp.length && xTemp == ordTemp[++i]) {
            sum += i;
            count++;
        }
        map.put(xTemp, 1 + sum / count);
        if (i + 1 == ordTemp.length) {
            map.put(ordTemp[i], 1.0 + i);
            break;
        } else {
            i--;
        }
    }
    return map.get(t0);
}
