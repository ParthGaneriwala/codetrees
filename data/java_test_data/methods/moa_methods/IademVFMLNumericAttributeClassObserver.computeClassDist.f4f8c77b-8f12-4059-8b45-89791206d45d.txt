@Override
public void computeClassDist(double[][][] cutClassDist) {
    int classes = this.classDist.numValues();
    Bin element = binList.get(0);
    double numLeftInst = element.classWeights.sumOfValues();
    double numRightInst = this.classDist.sumOfValues() - numLeftInst;
    double[] leftClassDist = new double[classes];
    double[] rightClassDist = new double[classes];
    for (int i = 0; i < classes; i++) {
        leftClassDist[i] = element.classWeights.getValue(i);
        rightClassDist[i] = this.classDist.getValue(i) - leftClassDist[i];
        cutClassDist[0][0][i] = leftClassDist[i];
        cutClassDist[0][1][i] = rightClassDist[i];
    }
    for (int i = 1; i < this.binList.size() - 1; i++) {
        element = this.binList.get(i);
        double numChangingInst = element.classWeights.sumOfValues();
        numLeftInst += numChangingInst;
        numRightInst -= numChangingInst;
        for (int j = 0; j < classes; j++) {
            double changingClassDist = element.classWeights.getValue(j);
            leftClassDist[j] += changingClassDist;
            rightClassDist[j] -= changingClassDist;
            cutClassDist[i][0][j] = leftClassDist[j];
            cutClassDist[i][1][j] = rightClassDist[j];
        }
    }
}
