private void addInstance(Instance instance) {
    DataPoint point = new DataPoint(instance, numGeneratedInstances);
    points.add(point);
    int minMicroIndex = -1;
    double minHullDist = Double.MAX_VALUE;
    boolean inserted = false;
    // we favour more recently build clusters so we can remove earlier cluster sooner
    for (int m = microClusters.size() - 1; m >= 0; m--) {
        SphereCluster micro = microClusters.get(m);
        double hulldist = micro.getCenterDistance(point) - micro.getRadius();
        // point fits into existing cluster
        if (hulldist <= 0) {
            microClustersPoints.get(m).add(point);
            microClustersDecay.set(m, numGeneratedInstances);
            inserted = true;
            break;
        } else // if not, check if its at least the closest cluster
        {
            if (hulldist < minHullDist) {
                minMicroIndex = m;
                minHullDist = hulldist;
            }
        }
    }
    // Reseting index choice for alternative cluster building
    int alt = 1;
    if (alt == 1)
        minMicroIndex = -1;
    if (!inserted) {
        // add to closest cluster and expand cluster
        if (minMicroIndex != -1) {
            microClustersPoints.get(minMicroIndex).add(point);
            // we should keep the miniball instances and just check in
            // new points instead of rebuilding the whole thing
            SphereCluster s = new SphereCluster(microClustersPoints.get(minMicroIndex), numAttsOption.getValue());
            // check if current microcluster is bigger then generating cluster
            if (s.getRadius() > generator.getRadius()) {
                // remove previously added point
                microClustersPoints.get(minMicroIndex).remove(microClustersPoints.get(minMicroIndex).size() - 1);
                minMicroIndex = -1;
            } else {
                microClusters.set(minMicroIndex, s);
                microClustersDecay.set(minMicroIndex, numGeneratedInstances);
            }
        }
        // create new micro cluster
        if (minMicroIndex == -1) {
            ArrayList<DataPoint> microPoints = new ArrayList<DataPoint>();
            microPoints.add(point);
            SphereCluster s;
            if (alt == 0)
                s = new SphereCluster(microPoints, numAttsOption.getValue());
            else
                s = new SphereCluster(generator.getCenter(), generator.getRadius(), 1);
            microClusters.add(s);
            microClustersPoints.add(microPoints);
            microClustersDecay.add(numGeneratedInstances);
            int id = 0;
            while (id < kernels.size()) {
                if (kernels.get(id) == this)
                    break;
                id++;
            }
            s.setGroundTruth(id);
        }
    }
}
