public void restart() {
    try {
        if (fileReader != null) {
            fileReader.close();
        }
        InputStream fileStream = new FileInputStream(arffFileOption.getFile());
        fileProgressMonitor = new InputStreamProgressMonitor(fileStream);
        fileReader = new BufferedReader(new InputStreamReader(fileProgressMonitor));
        instances = new Instances(fileReader, 1, this.classIndexOption.getValue());
        if (classIndexOption.getValue() < 0) {
            instances.setClassIndex(instances.numAttributes() - 1);
        } else if (classIndexOption.getValue() > 0) {
            instances.setClassIndex(classIndexOption.getValue() - 1);
        }
        // use hashset to delete duplicates and attributes numbers that aren't valid
        HashSet<Integer> attributes = new HashSet<Integer>();
        Option[] rawAttributeList = removeAttributesOption.getList();
        for (int i = 0; i < rawAttributeList.length; i++) {
            int attribute = ((IntOption) rawAttributeList[i]).getValue();
            if (1 <= attribute && attribute <= instances.numAttributes())
                attributes.add(attribute - 1);
            else
                System.out.println("Found invalid attribute removal description: " + "Attribute option " + attribute + " will be ignored. Filestream only has " + instances.numAttributes() + " attributes.");
        }
        // remove all non numeric attributes except the class attribute
        if (!keepNonNumericalAttrOption.isSet()) {
            for (int i = 0; i < instances.numAttributes(); i++) {
                if (!instances.attribute(i).isNumeric() && i != instances.classIndex()) {
                    attributes.add(i);
                }
            }
        }
        // read min/max values in case we need to normalize
        if (normalizeOption.isSet())
            valuesMinMaxDiff = readMinMaxDiffValues(attributes);
        // convert hashset to array and sort array so we can delete attributes in a sequence
        removeAttributes = attributes.toArray(new Integer[0]);
        Arrays.sort(removeAttributes);
        // set updated number of attributes (class attribute included)
        numAttsOption = new IntOption("numAtts", 'a', "", instances.numAttributes() - removeAttributes.length);
        if (removeAttributes.length > 0) {
            System.out.println("Removing the following attributes:");
            for (int i = 0; i < removeAttributes.length; i++) {
                System.out.println((removeAttributes[i] + 1) + " " + instances.attribute(removeAttributes[i]).name());
            }
        }
        // create filtered dataset
        filteredDataset = new Instances(instances);
        for (int i = removeAttributes.length - 1; i >= 0; i--) {
            filteredDataset.deleteAttributeAt(removeAttributes[i]);
            if (true) {
            }
        }
        this.numInstancesRead = 0;
        this.lastInstanceRead = null;
        this.hitEndOfFile = !readNextInstanceFromFile();
    } catch (IOException ioe) {
        throw new RuntimeException("ArffFileStream restart failed.", ioe);
    }
}
