protected Rule newRule(int ID, RuleActiveLearningNode node, double[] statistics) {
    Rule r = newRule(ID);
    if (node != null) {
        if (((RuleActiveRegressionNode) node).getPerceptron() != null) {
            ((RuleActiveRegressionNode) r.getLearningNode()).setPerceptron(new Perceptron(((RuleActiveRegressionNode) node).getPerceptron()));
            ((RuleActiveRegressionNode) r.getLearningNode()).getPerceptron().setLearningRatio(this.learningRatioOption.getValue());
        }
        if (statistics == null) {
            double mean;
            if (node.getNodeStatistics().getValue(0) > 0) {
                mean = node.getNodeStatistics().getValue(1) / node.getNodeStatistics().getValue(0);
                ((RuleActiveRegressionNode) r.getLearningNode()).getTargetMean().reset(mean, 1);
            }
        }
    }
    if (statistics != null && ((RuleActiveRegressionNode) r.getLearningNode()).getTargetMean() != null) {
        double mean;
        if (statistics[0] > 0) {
            mean = statistics[1] / statistics[0];
            ((RuleActiveRegressionNode) r.getLearningNode()).getTargetMean().reset(mean, (long) statistics[0]);
        }
    }
    return r;
}
