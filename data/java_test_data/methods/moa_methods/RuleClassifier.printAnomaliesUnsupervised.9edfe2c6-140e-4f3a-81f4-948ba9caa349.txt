public void printAnomaliesUnsupervised(StringBuilder out, int indent) {
    // Get Model Description (Unsupervised method)
    StringUtils.appendNewline(out);
    StringUtils.appendIndented(out, indent, "**********************UNSUPERVISED*****************");
    StringUtils.appendNewline(out);
    StringUtils.appendNewline(out);
    for (int k = 0; k < this.ruleSetAnomalies.size(); k++) {
        StringUtils.appendIndented(out, indent, "Case: " + this.caseAnomaly.get(k).get(0) + "   Anomaly Score: " + this.caseAnomaly.get(k).get(1) + "%");
        // Ver outra parte default
        StringUtils.appendNewline(out);
        StringUtils.appendIndented(out, indent, "Rule " + this.ruleAnomaliesIndex.get(k) + ": ");
        for (int i = 0; i < this.ruleSetAnomalies.get(k).predicateSet.size(); i++) {
            if (this.ruleSetAnomalies.get(k).predicateSet.size() == 1) {
                if (this.ruleSetAnomalies.get(k).predicateSet.get(i).getSymbol() == 0.0) {
                    String nam = this.instance.attribute((int) this.ruleSetAnomalies.get(k).predicateSet.get(i).getAttributeValue()).name();
                    String val = this.instance.attribute((int) this.ruleSetAnomalies.get(k).predicateSet.get(i).getAttributeValue()).value((int) this.ruleSetAnomalies.get(k).predicateSet.get(i).getValue());
                    StringUtils.appendIndented(out, indent, nam + " = " + val + " --> " + this.instance.classAttribute().value((int) getRuleMajorityClassIndex(this.ruleSetAnomalies.get(k))));
                    StringUtils.appendNewline(out);
                } else if (this.ruleSetAnomalies.get(k).predicateSet.get(i).getSymbol() == -1.0) {
                    String nam = this.instance.attribute((int) this.ruleSetAnomalies.get(k).predicateSet.get(i).getAttributeValue()).name();
                    StringUtils.appendIndented(out, indent, nam + " <= " + this.ruleSetAnomalies.get(k).predicateSet.get(i).getValue() + " --> " + this.instance.classAttribute().value((int) ruleClassIndex.getValue(ruleAnomaliesIndex.get(k) - 1)));
                    StringUtils.appendNewline(out);
                } else {
                    String nam = this.instance.attribute((int) this.ruleSetAnomalies.get(k).predicateSet.get(i).getAttributeValue()).name();
                    StringUtils.appendIndented(out, indent, nam + " > " + this.ruleSetAnomalies.get(k).predicateSet.get(i).getValue() + " --> " + this.instance.classAttribute().value((int) this.ruleClassIndex.getValue(ruleAnomaliesIndex.get(k) - 1)));
                    StringUtils.appendNewline(out);
                }
            } else {
                if (this.ruleSetAnomalies.get(k).predicateSet.get(i).getSymbol() == 0.0) {
                    String nam = this.instance.attribute((int) this.ruleSetAnomalies.get(k).predicateSet.get(i).getAttributeValue()).name();
                    String val = this.instance.attribute((int) this.ruleSetAnomalies.get(k).predicateSet.get(i).getAttributeValue()).value((int) this.ruleSetAnomalies.get(k).predicateSet.get(i).getValue());
                    StringUtils.appendIndented(out, indent, nam + " = " + val + " ");
                } else if (this.ruleSetAnomalies.get(k).predicateSet.get(i).getSymbol() == -1.0) {
                    String nam = this.instance.attribute((int) this.ruleSetAnomalies.get(k).predicateSet.get(i).getAttributeValue()).name();
                    StringUtils.appendIndented(out, indent, nam + " <= " + this.ruleSetAnomalies.get(k).predicateSet.get(i).getValue() + " ");
                } else {
                    String nam = this.instance.attribute((int) this.ruleSetAnomalies.get(k).predicateSet.get(i).getAttributeValue()).name();
                    StringUtils.appendIndented(out, indent, nam + " > " + this.ruleSetAnomalies.get(k).predicateSet.get(i).getValue() + " ");
                }
                if (i < this.ruleSetAnomalies.get(k).predicateSet.size() - 1) {
                    StringUtils.appendIndented(out, indent, "and ");
                } else {
                    int count = getCountNominalAttrib(this.ruleSetAnomalies.get(k).predicateSet);
                    if ((this.ruleSetAnomalies.get(k).predicateSet.get(i).getSymbol() == 0.0) || (count != 0)) {
                        StringUtils.appendIndented(out, indent, " --> " + this.instance.classAttribute().value((int) getRuleMajorityClassIndex(this.ruleSetAnomalies.get(k))));
                        StringUtils.appendNewline(out);
                    } else {
                        StringUtils.appendIndented(out, indent, " --> " + this.instance.classAttribute().value((int) this.ruleClassIndex.getValue(ruleAnomaliesIndex.get(k) - 1)));
                        StringUtils.appendNewline(out);
                    }
                }
            }
        }
        for (int z = 0; z < this.ruleAttribAnomalyStatistics.get(k).size(); z++) {
            if (this.ruleAttribAnomalyStatistics.get(k).get(z).size() == 5) {
                String s = String.format("%.3e", this.ruleAttribAnomalyStatistics.get(k).get(z).get(4));
                StringUtils.appendIndented(out, indent, instance.attribute(this.ruleAttribAnomalyStatistics.get(k).get(z).get(0).intValue()).name() + "=" + round(this.ruleAttribAnomalyStatistics.get(k).get(z).get(1)) + "   (" + round(this.ruleAttribAnomalyStatistics.get(k).get(z).get(2)) + " +- " + round(this.ruleAttribAnomalyStatistics.get(k).get(z).get(3)) + ")   P=" + s);
                StringUtils.appendNewline(out);
            } else {
                String s = String.format("%.3e", this.ruleAttribAnomalyStatistics.get(k).get(z).get(2));
                String val = this.instance.attribute(this.ruleAttribAnomalyStatistics.get(k).get(z).get(0).intValue()).value(this.ruleAttribAnomalyStatistics.get(k).get(z).get(1).intValue());
                StringUtils.appendIndented(out, indent, instance.attribute(this.ruleAttribAnomalyStatistics.get(k).get(z).get(0).intValue()).name() + "=" + val + "   P=" + s);
                StringUtils.appendNewline(out);
            }
        }
        StringUtils.appendNewline(out);
    }
}
