/*    @Override
    public double getMeritOfSplit(double[] preSplitDist, double[][] postSplitDists) {
   
    	double N = preSplitDist[0];
    	double SDR = computeSD(preSplitDist);

    //	System.out.print("postSplitDists.length"+postSplitDists.length+"\n");
    	for(int i = 0; i < postSplitDists.length; i++)
    	{
    		double Ni = postSplitDists[i][0];
    		SDR -= (Ni/N)*computeSD(postSplitDists[i]);
    	}

        return SDR;
    }*/
@Override
public double getMeritOfSplit(double[] preSplitDist, double[][] postSplitDists) {
    double SDR = 0.0;
    double N = preSplitDist[0];
    int count = 0;
    for (int i = 0; i < postSplitDists.length; i++) {
        double Ni = postSplitDists[i][0];
        if (Ni >= 5.0) {
            count = count + 1;
        }
    }
    if (count == postSplitDists.length) {
        SDR = computeSD(preSplitDist);
        for (int i = 0; i < postSplitDists.length; i++) {
            double Ni = postSplitDists[i][0];
            SDR -= (Ni / N) * computeSD(postSplitDists[i]);
        }
    }
    return SDR;
}
