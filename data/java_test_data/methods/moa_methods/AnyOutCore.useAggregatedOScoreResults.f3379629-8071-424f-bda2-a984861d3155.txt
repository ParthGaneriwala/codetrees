private void useAggregatedOScoreResults(int objectId) {
    if (oScoreK <= 1) {
        aggregatedOScoreResult.put(objectId, lastOScoreResult.get(objectId));
    } else {
        double mu = lastOScoreResult.get(objectId);
        int count = 0;
        for (int i = Math.max(0, previousOScoreResultList.get(objectId).size() - (oScoreK - 1)); i < previousOScoreResultList.get(objectId).size(); i++) {
            Double d = previousOScoreResultList.get(objectId).get(i);
            mu += d.doubleValue();
            count++;
        }
        aggregatedOScoreResult.put(objectId, mu / (count + 1));
    }
}
