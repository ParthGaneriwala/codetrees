public double[][] getClassDistsResultingFromMultiwaySplit(int maxAttValsObserved) {
    DoubleVector[] resultingDists = new DoubleVector[maxAttValsObserved];
    for (int i = 0; i < resultingDists.length; i++) {
        resultingDists[i] = new DoubleVector();
    }
    for (int i = 0; i < this.attValDistPerClass.size(); i++) {
        DoubleVector attValDist = this.attValDistPerClass.get(i);
        if (attValDist != null) {
            for (int j = 0; j < attValDist.numValues(); j++) {
                resultingDists[j].addToValue(i, attValDist.getValue(j));
            }
        }
    }
    double[][] distributions = new double[maxAttValsObserved][];
    for (int i = 0; i < distributions.length; i++) {
        distributions[i] = resultingDists[i].getArrayRef();
    }
    return distributions;
}
