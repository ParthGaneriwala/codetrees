@Override
public double[] getVotesForInstance(Instance inst) {
    double[] v = new double[C + 1];
    try {
        NearestNeighbourSearch search;
        if (this.nearestNeighbourSearchOption.getChosenIndex() == 0) {
            search = new LinearNNSearch(this.window);
        } else {
            search = new KDTree();
            search.setInstances(this.window);
        }
        if (this.window.numInstances() > 0) {
            Instances neighbours = search.kNearestNeighbours(inst, Math.min(kOption.getValue(), this.window.numInstances()));
            for (int i = 0; i < neighbours.numInstances(); i++) {
                v[(int) neighbours.instance(i).classValue()]++;
            }
        }
    } catch (Exception e) {
        // System.exit(1);
        return new double[inst.numClasses()];
    }
    return v;
}
