private Vector<TaggedInstance> dontnormalize(Dataset data) {
    Vector<TaggedInstance> out = new Vector<TaggedInstance>();
    for (int i = 0; i < data.size(); i++) {
        // Double[] old = data.instance(i).values().toArray(new Double[0]);
        // double[] conv = new double[old.length];
        // for (int j = 0; j < old.length; j++) {
        // conv[j] = old[j];
        // }
        // 
        // Mean m = new Mean();
        // 
        // double MU = m.evaluate(conv);
        // // System.out.println("MU = "+MU);
        // StandardDeviation std = new StandardDeviation();
        // double SIGM = std.evaluate(conv, MU);
        // System.out.println("SIGM = "+SIGM);
        // if (!MathUtils.eq(SIGM, 0)) {
        // double[] val = new double[old.length];
        // for (int j = 0; j < old.length; j++) {
        // val[j] = (float) ((old[j] - MU) / SIGM);
        // 
        // }
        // System.out.println("VAL "+i+" = "+Arrays.toString(val));
        out.add(new TaggedInstance(data.instance(i), i));
    // }
    }
    return out;
}
