@Override
public void insertAttributeAt(int position) {
    if ((position < 0) || (position > numAttributes())) {
        throw new IllegalArgumentException("Can't insert attribute: index out " + "of range");
    }
    int index = locateIndex(position);
    this.numberAttributes++;
    if ((index >= 0) && (indexValues[index] == position)) {
        int[] tempIndices = new int[indexValues.length + 1];
        double[] tempValues = new double[attributeValues.length + 1];
        System.arraycopy(indexValues, 0, tempIndices, 0, index);
        System.arraycopy(attributeValues, 0, tempValues, 0, index);
        tempIndices[index] = position;
        // Missing Value
        tempValues[index] = Double.NaN;
        for (int i = index; i < indexValues.length; i++) {
            tempIndices[i + 1] = indexValues[i] + 1;
            tempValues[i + 1] = attributeValues[i];
        }
        indexValues = tempIndices;
        attributeValues = tempValues;
    } else {
        int[] tempIndices = new int[indexValues.length + 1];
        double[] tempValues = new double[attributeValues.length + 1];
        System.arraycopy(indexValues, 0, tempIndices, 0, index + 1);
        System.arraycopy(attributeValues, 0, tempValues, 0, index + 1);
        tempIndices[index + 1] = position;
        // Missing Value
        tempValues[index + 1] = Double.NaN;
        for (int i = index + 1; i < indexValues.length; i++) {
            tempIndices[i + 1] = indexValues[i] + 1;
            tempValues[i + 1] = attributeValues[i];
        }
        indexValues = tempIndices;
        attributeValues = tempValues;
    }
}
