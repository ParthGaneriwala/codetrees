void ProcessNewNode(ISBNode nodeNew, boolean bNewNode) {
    if (bTrace) {
        Print("ProcessNewNode: ");
        PrintNode(nodeNew);
    }
    if (bTrace)
        Println("Perform R range query");
    nRangeQueriesExecuted++;
    Vector<ISBSearchResult> resultNodes;
    resultNodes = ISB.RangeSearch(nodeNew, m_radius);
    for (ISBSearchResult sr : resultNodes) {
        double distance = sr.distance;
        ISBNode q = sr.node;
        if ((nodeNew != q) && (distance <= m_radius)) {
            if (bTrace)
                Println("nodeNew has neighbor q.id " + q.id);
            nodeNew.AddPrecNeigh(q);
            q.count_after++;
            if (q.bOutlier) {
                int count = q.CountPrecNeighs(GetWindowStart()) + q.count_after;
                if (count >= m_k) {
                    if (bTrace)
                        Println("q.id " + q.id + " is now an inlier");
                    q.bOutlier = false;
                    RemoveOutlier(q);
                    // insert q to event queue
                    ISBNode nodeMinExp = q.GetMinPrecNeigh(GetWindowStart());
                    AddToEventQueue(q, nodeMinExp);
                }
            }
        }
    }
    if (bTrace)
        Println("Check if nodeNew is an inlier or outlier");
    int count = nodeNew.CountPrecNeighs(GetWindowStart()) + nodeNew.count_after;
    if (count >= m_k) {
        if (bTrace)
            Println("nodeNew is an inlier");
        nodeNew.bOutlier = false;
        // updates statistics
        RemoveOutlier(nodeNew);
        // insert nodeNew to event queue
        ISBNode nodeMinExp = nodeNew.GetMinPrecNeigh(GetWindowStart());
        AddToEventQueue(nodeNew, nodeMinExp);
    } else {
        if (bTrace)
            Println("nodeNew is an outlier");
        nodeNew.bOutlier = true;
        SaveOutlier(nodeNew);
    }
}
