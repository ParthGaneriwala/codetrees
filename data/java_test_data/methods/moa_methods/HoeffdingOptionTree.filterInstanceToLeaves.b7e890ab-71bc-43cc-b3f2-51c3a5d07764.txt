@Override
public void filterInstanceToLeaves(Instance inst, SplitNode myparent, int parentBranch, List<FoundNode> foundNodes, boolean updateSplitterCounts) {
    if (updateSplitterCounts) {
        this.observedClassDistribution.addToValue((int) inst.classValue(), inst.weight());
    }
    int childIndex = instanceChildIndex(inst);
    if (childIndex >= 0) {
        Node child = getChild(childIndex);
        if (child != null) {
            child.filterInstanceToLeaves(inst, this, childIndex, foundNodes, updateSplitterCounts);
        } else {
            foundNodes.add(new FoundNode(null, this, childIndex));
        }
    }
    if (this.nextOption != null) {
        this.nextOption.filterInstanceToLeaves(inst, this, -999, foundNodes, updateSplitterCounts);
    }
}
