@Override
public void prepareForUseImpl(TaskMonitor monitor, ObjectRepository repository) {
    Option[] filterOptions = this.filtersOption.getList();
    StreamFilter[] filters = new StreamFilter[filterOptions.length];
    for (int i = 0; i < filters.length; i++) {
        monitor.setCurrentActivity("Materializing filter " + (i + 1) + "...", -1.0);
        filters[i] = (StreamFilter) ((ClassOption) filterOptions[i]).materializeObject(monitor, repository);
        if (monitor.taskShouldAbort()) {
            return;
        }
        if (filters[i] instanceof OptionHandler) {
            monitor.setCurrentActivity("Preparing filter " + (i + 1) + "...", -1.0);
            ((OptionHandler) filters[i]).prepareForUse(monitor, repository);
            if (monitor.taskShouldAbort()) {
                return;
            }
        }
    }
    ExampleStream chain = (ExampleStream) getPreparedClassOption(this.streamOption);
    for (int i = 0; i < filters.length; i++) {
        filters[i].setInputStream(chain);
        chain = filters[i];
    }
    this.filterChain = chain;
}
