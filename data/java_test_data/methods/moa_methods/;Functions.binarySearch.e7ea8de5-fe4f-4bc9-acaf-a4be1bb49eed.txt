// =========================================================== binarySearch
static int binarySearch(Vector<Integer> sorted, int first, int upto, int key) {
    int comparisonCount = 0;
    while (first < upto) {
        // Compute mid point.
        int mid = (first + upto) / 2;
        if (key < sorted.get(mid)) {
            // repeat search in bottom half.
            upto = mid;
            comparisonCount++;
        } else if (key > sorted.get(mid)) {
            // Repeat search in top half.
            first = mid + 1;
            comparisonCount += 2;
        } else {
            comparisonCount += 2;
            // Found it. return position
            return mid;
        }
    }
    // Failed to find key
    return -(first + 1);
}
