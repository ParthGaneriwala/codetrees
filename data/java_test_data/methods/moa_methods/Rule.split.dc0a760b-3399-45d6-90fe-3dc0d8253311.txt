public void split() {
    // this.statisticsOtherBranchSplit  = this.learningNode.getStatisticsOtherBranchSplit();
    // create a split node,
    int splitIndex = this.learningNode.getSplitIndex();
    InstanceConditionalTest st = this.learningNode.getBestSuggestion().splitTest;
    if (st instanceof NumericAttributeBinaryTest) {
        NumericAttributeBinaryTest splitTest = (NumericAttributeBinaryTest) st;
        NumericAttributeBinaryRulePredicate predicate = new NumericAttributeBinaryRulePredicate(splitTest.getAttsTestDependsOn()[0], splitTest.getSplitValue(), splitIndex + 1);
        RuleSplitNode ruleSplitNode = new RuleSplitNode(predicate, this.learningNode.getStatisticsBranchSplit());
        if (this.nodeListAdd(ruleSplitNode) == true) {
            // create a new learning node
            RuleActiveLearningNode newLearningNode = newRuleActiveLearningNode(this.getBuilder().statistics(this.learningNode.getStatisticsNewRuleActiveLearningNode()));
            newLearningNode.initialize(this.learningNode);
            this.learningNode = newLearningNode;
        }
    } else
        throw new UnsupportedOperationException("AMRules (currently) only supports numerical attributes.");
}
