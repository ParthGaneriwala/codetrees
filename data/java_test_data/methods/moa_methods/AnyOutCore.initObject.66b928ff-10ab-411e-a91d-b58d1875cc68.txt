public void initObject(int objectId, double[] features) {
    previousOScoreResultList.put(objectId, new ArrayList<Double>());
    currentLevel.put(objectId, 0);
    // process root of the tree and set score according to the closest entry
    ClusKernel newKernel = new ClusKernel(features, features.length);
    objectAsKernel.put(objectId, newKernel);
    Entry closestEntry = root.nearestEntry(newKernel);
    if (UseMeanScoreOption.isSet())
        lastOScoreResult.put(objectId, newKernel.calcDistance(closestEntry.data));
    else
        lastOScoreResult.put(objectId, getDensityOutlierScore(newKernel, closestEntry.data));
    aggregatedOScoreResult.put(objectId, lastOScoreResult.get(objectId));
    // remember (store) next Node to descend into for further processing
    descendToNode.put(objectId, closestEntry.getChild());
    // update confidence
    updateConfidence(objectId);
}
