@Override
public double[] getVotesForInstance(Instance instance) {
    Instance testInstance = instance.copy();
    if (this.ensemble == null)
        initEnsemble(testInstance);
    double accounted = 0;
    DoubleVector predictions = new DoubleVector();
    DoubleVector ages = new DoubleVector();
    DoubleVector performance = new DoubleVector();
    for (int i = 0; i < this.ensemble.length; ++i) {
        double currentPrediction = this.ensemble[i].getVotesForInstance(testInstance)[0];
        ages.addToValue(i, this.instancesSeen - this.ensemble[i].createdOn);
        performance.addToValue(i, this.ensemble[i].evaluator.getSquareError());
        predictions.addToValue(i, currentPrediction);
        ++accounted;
    }
    double predicted = predictions.sumOfValues() / accounted;
    return new double[] { predictions.sumOfValues() / accounted };
}
