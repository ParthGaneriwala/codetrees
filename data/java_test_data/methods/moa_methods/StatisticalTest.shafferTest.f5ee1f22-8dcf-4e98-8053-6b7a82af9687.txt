public ArrayList<PValuePerTwoAlgorithm> shafferTest() {
    ArrayList<PValuePerTwoAlgorithm> algPValues = new ArrayList<>();
    double[] shafferPValues;
    shafferPValues = new double[Pi.length];
    pos = 0;
    tmp = Tarray.length - 1;
    for (i = 0; i < shafferPValues.length; i++) {
        shafferPValues[i] = Pi[i] * ((double) shafferPValues.length - (double) Math.max(pos, i));
        if (i == pos) {
            tmp--;
            pos = (int) combinatoria(2, algoritmos.size()) - Tarray[tmp];
        }
    }
    for (i = 1; i < shafferPValues.length; i++) {
        if (shafferPValues[i] < shafferPValues[i - 1]) {
            shafferPValues[i] = shafferPValues[i - 1];
        }
        if (shafferPValues[i] < shafferPValues[i - 1]) {
            shafferPValues[i] = shafferPValues[i - 1];
        }
    }
    for (i = 0; i < Pi.length; i++) {
        algPValues.add(new PValuePerTwoAlgorithm(algoritmos.get(parejitas[order[i]].i).toString(), algoritmos.get(parejitas[order[i]].j).toString(), shafferPValues[i]));
    }
    return algPValues;
}
