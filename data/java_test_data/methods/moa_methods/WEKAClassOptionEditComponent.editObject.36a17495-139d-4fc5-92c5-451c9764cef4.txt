public void editObject() {
    final GenericObjectEditor goe = new GenericObjectEditor(true);
    goe.setClassType(editedOption.getRequiredType());
    try {
        String[] options = Utils.splitOptions(editedOption.getValueAsCLIString());
        String classname = options[0];
        options[0] = "";
        Object obj = Class.forName(classname).newInstance();
        if (obj instanceof weka.core.OptionHandler) {
            ((weka.core.OptionHandler) obj).setOptions(options);
        }
        goe.setValue(obj);
        ((GOEPanel) goe.getCustomEditor()).addOkListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Object obj = goe.getValue();
                String s = obj.getClass().getName();
                if (obj instanceof weka.core.OptionHandler) {
                    s += " " + Utils.joinOptions(((weka.core.OptionHandler) obj).getOptions());
                }
                setEditState(s.trim());
            }
        });
        PropertyDialog dialog;
        if (PropertyDialog.getParentDialog(this) != null) {
            dialog = new PropertyDialog(PropertyDialog.getParentDialog(this), goe);
        } else {
            dialog = new PropertyDialog(PropertyDialog.getParentFrame(this), goe);
        }
        dialog.setModal(true);
        dialog.setVisible(true);
    } catch (Exception e) {
        e.printStackTrace();
    }
}
