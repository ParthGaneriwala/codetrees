private void prune() {
    this.leaf.setSplit(true);
    for (Node node = this.parent; node != null; node = node.parent) {
        ((AdaptiveSplitNode) node).leaf.restartVariablesAtDrift();
        this.leaf.estimator = (AbstractChangeDetector) this.leaf.estimator.copy();
    }
    // update tree
    this.leaf.setTree(this.tree);
    AutoExpandVector<VirtualNode> nodeList = this.leaf.getVirtualChildren();
    for (VirtualNode node : nodeList) {
        if (node != null) {
            node.setTree(this.tree);
        }
    }
    this.leaf.setParent(this.parent);
    if (this.parent == null) {
        this.tree.setTreeRoot(this.leaf);
    } else {
        ((SplitNode) this.parent).changeChildren(this, this.leaf);
    }
    int[] count = new int[3];
    getNumberOfNodes(count);
    ((Iadem3) this.tree).updateNumberOfLeaves(-count[1] + 1);
    ((Iadem3) this.tree).updateNumberOfNodes(-count[0] - count[1] + 1);
    ((Iadem3) this.tree).updateNumberOfNodesSplitByTieBreaking(-count[2]);
}
