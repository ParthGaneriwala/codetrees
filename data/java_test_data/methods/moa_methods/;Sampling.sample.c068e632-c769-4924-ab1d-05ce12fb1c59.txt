public Pair<Dataset, Dataset> sample(Dataset data, int size, long seed) {
    SamplingMethod s = null;
    switch(this) {
        case NormalBootstrapping:
        case StratifiedNormalBootstrapping:
            s = new NormalBootstrapping();
            break;
        case SubSampling:
        case StratifiedSubsampling:
            s = new SubSampling();
            break;
    }
    assert s != null;
    List<Integer> sampledIxs = null;
    switch(this) {
        case StratifiedNormalBootstrapping:
        case StratifiedSubsampling:
            sampledIxs = stratified(s, data, size, seed);
        case SubSampling:
        case NormalBootstrapping:
            sampledIxs = regular(s, data, size, seed);
    }
    /* Make ixs contain the out of sample indices */
    List<Integer> ixs = ListTools.incfill(data.size());
    ixs.removeAll(sampledIxs);
    Dataset in = new DefaultDataset();
    Dataset out = new DefaultDataset();
    for (int i : sampledIxs) in.add(data.get(i).copy());
    for (int i : ixs) out.add(data.get(i).copy());
    return new Pair<Dataset, Dataset>(in, out);
}
