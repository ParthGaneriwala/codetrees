@Override
protected Object doMainTask(TaskMonitor monitor, ObjectRepository repository) {
    Object result = null;
    String commandString = this.taskOption.getValueAsCLIString();
    // for each possible value of the parameter
    for (double valueParameter = this.firstValueOption.getValue(); valueParameter <= this.lastValueOption.getValue(); valueParameter += this.incrementValueOption.getValue()) {
        // Add parameter
        this.task = (Task) getPreparedClassOption(this.taskOption);
        if (this.task instanceof EvaluatePrequential) {
            String classifier = ((EvaluatePrequential) this.task).learnerOption.getValueAsCLIString();
            ((EvaluatePrequential) this.task).learnerOption.setValueViaCLIString(classifier + " -" + classifierParameterOption.getValue() + " " + valueParameter);
        }
        if (this.task instanceof EvaluateInterleavedTestThenTrain) {
            String classifier = ((EvaluateInterleavedTestThenTrain) this.task).learnerOption.getValueAsCLIString();
            ((EvaluateInterleavedTestThenTrain) this.task).learnerOption.setValueViaCLIString(classifier + " -" + classifierParameterOption.getValue() + " " + valueParameter);
        }
        // Run task
        result = this.task.doTask(monitor, repository);
    // System.out.println(((AbstractOptionHandler) this.task).getCLICreationString(Task.class));
    }
    return result;
}
