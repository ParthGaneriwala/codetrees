@Override
public Example<Instance> nextInstance() {
    // a value between 0.0 and 1.0 uniformly distributed
    double p = random.nextDouble();
    int iClass = -1;
    // loops over all class probabilities to see from which class the next instance should be from
    while (p > 0.0) {
        iClass++;
        p -= probPerClass[iClass];
    }
    // keeps on creating and storing instances until we have an instance for the desired class
    while (instancesBuffer[iClass].size() == 0) {
        Example<Instance> inst = originalStream.nextInstance();
        instancesBuffer[(int) inst.getData().classValue()].add(inst.getData());
    }
    // retrieves the instance from the desired class
    Instance instance = instancesBuffer[iClass].get(0);
    // and also removes it from the buffer
    instancesBuffer[iClass].delete(0);
    return new InstanceExample(instance);
}
