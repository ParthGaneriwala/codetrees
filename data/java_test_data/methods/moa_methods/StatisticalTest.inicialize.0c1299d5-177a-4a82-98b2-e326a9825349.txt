private void inicialize() {
    /*Compute the unadjusted p_i value for each comparison alpha=0.10*/
    Pi = new double[(int) combinatoria(2, algoritmos.size())];
    ordenAlgoritmos = new String[(int) combinatoria(2, algoritmos.size())];
    ordenRankings = new double[(int) combinatoria(2, algoritmos.size())];
    order = new int[(int) combinatoria(2, algoritmos.size())];
    parejitas = new Relation[(int) combinatoria(2, algoritmos.size())];
    T = new ArrayList();
    T = trueHShaffer(algoritmos.size());
    Tarray = new int[T.size()];
    for (i = 0; i < T.size(); i++) {
        Tarray[i] = ((Integer) T.get(i));
    }
    Arrays.sort(Tarray);
    SE = termino3;
    vistos = new boolean[(int) combinatoria(2, algoritmos.size())];
    for (i = 0, k = 0; i < algoritmos.size(); i++) {
        for (j = i + 1; j < algoritmos.size(); j++, k++) {
            ordenRankings[k] = Math.abs(Rj[i] - Rj[j]);
            ordenAlgoritmos[k] = (String) algoritmos.get(i) + " vs. " + (String) algoritmos.get(j);
            parejitas[k] = new Relation(i, j);
        }
    }
    Arrays.fill(vistos, false);
    for (i = 0; i < ordenRankings.length; i++) {
        for (j = 0; vistos[j] == true; j++) ;
        pos = j;
        maxVal = ordenRankings[j];
        for (j = j + 1; j < ordenRankings.length; j++) {
            if (vistos[j] == false && ordenRankings[j] > maxVal) {
                pos = j;
                maxVal = ordenRankings[j];
            }
        }
        vistos[pos] = true;
        order[i] = pos;
    }
    /*Computing the logically related hypotheses tests (Shaffer and Bergmann-Hommel)*/
    pos = 0;
    tmp = Tarray.length - 1;
    for (i = 0; i < order.length; i++) {
        Pi[i] = 2 * CDF_Normal.normp((-1) * Math.abs((ordenRankings[order[i]]) / SE));
    }
}
