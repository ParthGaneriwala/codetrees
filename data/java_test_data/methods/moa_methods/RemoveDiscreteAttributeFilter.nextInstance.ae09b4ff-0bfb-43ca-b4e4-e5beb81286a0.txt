@Override
public InstanceExample nextInstance() {
    Instance inst = (Instance) this.inputStream.nextInstance().getData();
    if (streamHeader == null) {
        // Create a new header
        FastVector attributes = new FastVector();
        numericAttributes = new ArrayList<Integer>();
        for (int i = 0; i < inst.numAttributes(); i++) {
            if (inst.attribute(i).isNumeric()) {
                numericAttributes.add(i);
                attributes.addElement(inst.attribute(i));
            }
        }
        attributes.addElement(inst.classAttribute());
        numericAttributes.add(inst.classIndex());
        this.streamHeader = new InstancesHeader(new Instances(getCLICreationString(InstanceStream.class), attributes, 0));
        this.streamHeader.setClassIndex(this.streamHeader.numAttributes() - 1);
    }
    // Create a new instance
    double[] vals = new double[getHeader().numAttributes()];
    for (int i = 0; i < numericAttributes.size(); i++) {
        vals[i] = inst.value(numericAttributes.get(i));
    }
    Instance instance = null;
    if (inst instanceof SparseInstance) {
        instance = new SparseInstance(inst.weight(), vals);
    } else {
        instance = new DenseInstance(inst.weight(), vals);
    }
    return new InstanceExample(instance);
}
