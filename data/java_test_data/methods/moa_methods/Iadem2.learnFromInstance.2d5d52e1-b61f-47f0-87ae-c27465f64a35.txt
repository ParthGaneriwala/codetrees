@Override
public Node learnFromInstance(Instance inst) {
    double attValue = inst.value(this.attIndex);
    if (Utils.isMissingValue(attValue)) {
    } else {
        int intAttValue = (int) attValue;
        this.attValueDist.addToValue(intAttValue, inst.weight());
        this.classValueDist.addToValue((int) inst.value(inst.classIndex()), inst.weight());
        DoubleVector valDist = this.nominalAttClassObserver.get(intAttValue);
        if (valDist == null) {
            valDist = new DoubleVector();
            this.nominalAttClassObserver.set(intAttValue, valDist);
        }
        int classValue = (int) inst.classValue();
        valDist.addToValue(classValue, inst.weight());
        this.heuristicMeasureUpdated = false;
    }
    return this;
}
