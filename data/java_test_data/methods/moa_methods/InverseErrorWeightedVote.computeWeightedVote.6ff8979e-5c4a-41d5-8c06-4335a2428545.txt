@Override
public double[] computeWeightedVote() {
    int n = votes.size();
    weights = new double[n];
    double[] weightedVote = null;
    if (n > 0) {
        int d = votes.get(0).length;
        weightedVote = new double[d];
        double sumError = 0;
        // weights are 1/(error+eps)
        for (int i = 0; i < n; ++i) {
            if (errors.get(i) < Double.MAX_VALUE) {
                weights[i] = 1.0 / (errors.get(i) + EPS);
                sumError += weights[i];
            } else
                weights[i] = 0;
        }
        if (sumError > 0)
            for (int i = 0; i < n; ++i) {
                // normalize so that weights sum 1
                weights[i] /= sumError;
                // compute weighted vote
                for (int j = 0; j < d; j++) weightedVote[j] += votes.get(i)[j] * weights[i];
            }
        else // Only occurs if all errors=Double.MAX_VALUE
        {
            // compute arithmetic vote
            for (int i = 0; i < n; ++i) {
                for (int j = 0; j < d; j++) weightedVote[j] += votes.get(i)[j] / n;
            }
        }
    }
    return weightedVote;
}
