private Complex[] characteristic(double[] lambdasquare, double[] t) {
    // z<--0.5*log(1-2i*lambdasquare%*%t(t));
    Complex c = new Complex(0, -2);
    Complex[] temp = new Complex[lambdasquare.length];
    for (int i = 0; i < temp.length; i++) {
        temp[i] = c.multiply(lambdasquare[i]);
    }
    Complex[][] z = this.complex(temp, t);
    // return(exp(complex(length(t),rowsum(Re(z),rep(1,length(lambdasquare))),rowsum(Im(z),rep(1,length(lambdasquare))))))
    double[] real = new double[t.length];
    double[] imag = new double[t.length];
    for (int j = 0; j < t.length; j++) {
        for (Complex[] z1 : z) {
            real[j] += z1[j].getReal();
            imag[j] += z1[j].getImaginary();
        }
    }
    Complex[] result = new Complex[t.length];
    for (int i = 0; i < t.length; i++) {
        result[i] = new Complex(real[i], imag[i]);
        result[i] = result[i].exp();
    }
    return result;
}
