// --------------------------------------------------------
// Generate next combination (algorithm from Rosen p. 286)
// --------------------------------------------------------
public int[] getNext() {
    if (numLeft.equals(total)) {
        numLeft = numLeft.subtract(BigInteger.ONE);
        int[] b = new int[a.length];
        for (int k = 0; k < a.length; k++) {
            b[k] = a[k];
        }
        return b;
    }
    int i = r - 1;
    while (a[i] == n - r + i) {
        i--;
    }
    a[i] = a[i] + 1;
    for (int j = i + 1; j < r; j++) {
        a[j] = a[i] + j - i;
    }
    numLeft = numLeft.subtract(BigInteger.ONE);
    int[] b = new int[a.length];
    for (int k = 0; k < a.length; k++) {
        b[k] = a[k];
    }
    return b;
}
