public double[] getVotesForInstance(Instance inst) {
    DoubleVector combinedVote = new DoubleVector();
    if (this.trainingWeightSeenByModel > 0.0) {
        for (int i = 0; i < this.learners.length; i++) {
            if (this.weights[i][0] > 0.0) {
                DoubleVector vote = new DoubleVector(this.learners[(int) this.weights[i][1]].getVotesForInstance(inst));
                if (vote.sumOfValues() > 0.0) {
                    vote.normalize();
                    // scale weight and prevent overflow
                    vote.scaleValues(this.weights[i][0] / (1.0 * this.learners.length + 1.0));
                    combinedVote.addValues(vote);
                }
            }
        }
    }
    // combinedVote.normalize();
    return combinedVote.getArrayRef();
}
