@Override
protected Object doMainTask(TaskMonitor monitor, ObjectRepository repository) {
    TimingUtils.enablePreciseTiming();
    int numInstances = 0;
    ExampleStream stream = (ExampleStream) getPreparedClassOption(this.streamOption);
    long genStartTime = TimingUtils.getNanoCPUTimeOfCurrentThread();
    while (numInstances < this.generateSizeOption.getValue()) {
        stream.nextInstance();
        numInstances++;
    }
    double genTime = TimingUtils.nanoTimeToSeconds(TimingUtils.getNanoCPUTimeOfCurrentThread() - genStartTime);
    return new LearningEvaluation(new Measurement[] { new Measurement("Number of instances generated", numInstances), new Measurement("Time elapsed", genTime), new Measurement("Instances per second", numInstances / genTime) });
}
