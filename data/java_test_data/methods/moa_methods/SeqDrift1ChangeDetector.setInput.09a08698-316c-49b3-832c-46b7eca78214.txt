public boolean setInput(double _inputValue) {
    ++instanceCount;
    addToRightRepository(_inputValue);
    total = total + _inputValue;
    if (// Drift point check
    (instanceCount % sampleSize) == 0) {
        rightRepository.markLastAddedBlock();
        if (isWarning) {
            removeExcessRightRepositoryValues();
        }
        // Assume that there is no warning or drift now
        isWarning = false;
        // Detect a drift with warning significance level
        int iDriftType = getDriftType();
        if (iDriftType == DRIFT) {
            // Warning state is set to false as it is an actual drift
            isWarning = false;
            clearLeftRepository();
            moveValuesFromRightToLeft();
            sampleSize = blockSize;
            return true;
        } else if (iDriftType == WARNING) {
            isWarning = true;
            sampleSize = sampleSize * 2;
            // In warning state no instance is moved from sliding window to repository. Thus returning now
            return false;
        } else /*
             else if(iDriftType == INTERNAL_DRIFT)
             {
             isWarning = false;
             isDrift   = false;  
             sampleSize = blockSize;
             clearrepository(); //Due to drift clear the data that belong to the old concept in repository
             movefromsliding windowTorepository(); 
             return false;
             }
             */
        {
            isWarning = false;
            // All instances in sliding window should be moved to repository if no drift or if drift but not in warning
            moveValuesFromRightToLeft();
            return false;
        }
    }
    return false;
}
