@Override
public void filter(Instance instance) {
    if (currentRange == null || currentMiddle == null)
        throw new TrainingRequiredException();
    if (instance instanceof DenseInstance) {
        Instance tmp = instance.minus(currentMiddle).divide(currentRange).multiply(normalRange).add(normalMiddle);
        instance.clear();
        instance.putAll(tmp);
    }
    if (instance instanceof SparseInstance) {
        for (int index : instance.keySet()) {
            instance.put(index, ((instance.value(index) - currentMiddle.value(index)) / currentRange.value(index)) * normalRange + normalMiddle);
        }
    }
    new ReplaceValueFilter(Double.NEGATIVE_INFINITY, normalMiddle).filter(instance);
    new ReplaceValueFilter(Double.POSITIVE_INFINITY, normalMiddle).filter(instance);
    new ReplaceValueFilter(Double.NaN, normalMiddle).filter(instance);
}
