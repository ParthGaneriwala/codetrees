private static double FishF(double f, int n1, int n2) {
    double x = n2 / (n1 * f + n2);
    if ((n1 % 2) == 0) {
        return StatCom(1 - x, n2, n1 + n2 - 4, n2 - 2) * Math.pow(x, n2 / 2.0);
    }
    if ((n2 % 2) == 0) {
        return 1 - StatCom(x, n1, n1 + n2 - 4, n1 - 2) * Math.pow(1 - x, n1 / 2.0);
    }
    double th = Math.atan(Math.sqrt(n1 * f / (1.0 * n2)));
    double a = th / (Math.PI / 2.0);
    double sth = Math.sin(th);
    double cth = Math.cos(th);
    if (n2 > 1) {
        a = a + sth * cth * StatCom(cth * cth, 2, n2 - 3, -1) / (Math.PI / 2.0);
    }
    if (n1 == 1) {
        return 1 - a;
    }
    double c = 4 * StatCom(sth * sth, n2 + 1, n1 + n2 - 4, n2 - 2) * sth * Math.pow(cth, n2) / Math.PI;
    if (n2 == 1) {
        return 1 - a + c / 2.0;
    }
    int k = 2;
    while (k <= (n2 - 1) / 2.0) {
        c = c * k / (k - .5);
        k = k + 1;
    }
    return 1 - a + c;
}
