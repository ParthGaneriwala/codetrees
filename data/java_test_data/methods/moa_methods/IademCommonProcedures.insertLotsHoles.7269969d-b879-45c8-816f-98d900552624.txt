public static void insertLotsHoles(ArrayList<Double> lots, ArrayList<Integer> holes, double inf, double sup) {
    if (inf != sup) {
        int currentPos = 1;
        if (inf == 0.0) {
            for (int i = 0; i < holes.size(); i++) {
                int aux = holes.get(i);
                aux++;
                holes.set(i, aux);
            }
        } else {
            while (inf > lots.get(currentPos)) {
                currentPos++;
            }
            if (inf < lots.get(currentPos)) {
                lots.add(currentPos, inf);
                holes.add(currentPos, (holes.get(currentPos - 1) + 1));
            } else {
                int aux = holes.get(currentPos);
                aux++;
                holes.set(currentPos, aux);
            }
            for (int i = (currentPos + 1); i < holes.size(); i++) {
                int aux = holes.get(i);
                aux++;
                holes.set(i, aux);
            }
        }
        while (sup > lots.get(currentPos)) {
            currentPos++;
        }
        if (sup < lots.get(currentPos)) {
            lots.add(currentPos, sup);
            holes.add(currentPos, (holes.get(currentPos - 1) - 1));
        } else if (currentPos < holes.size()) {
            int aux = holes.get(currentPos);
            aux--;
            holes.set(currentPos, aux);
        }
        for (int i = (currentPos + 1); i < holes.size(); i++) {
            int aux = holes.get(i);
            aux--;
            holes.set(i, aux);
        }
    }
}
