private Instance readDenseInstanceSparse() {
    // Returns a dense instance
    Instance instance = newDenseInstance(this.instanceInformation.numAttributes());
    // System.out.println(this.instanceInformation.numAttributes());
    int numAttribute;
    try {
        // while (streamTokenizer.ttype != StreamTokenizer.TT_EOF) {
        // Remove the '{' char
        streamTokenizer.nextToken();
        // For each line
        while (streamTokenizer.ttype != StreamTokenizer.TT_EOL && streamTokenizer.ttype != StreamTokenizer.TT_EOF) {
            while (streamTokenizer.ttype != '}') {
                // For each item
                // streamTokenizer.nextToken();
                // while (streamTokenizer.ttype != '}'){
                // System.out.print(streamTokenizer.nval+":");
                numAttribute = (int) streamTokenizer.nval;
                streamTokenizer.nextToken();
                if (streamTokenizer.ttype == StreamTokenizer.TT_NUMBER) {
                    // System.out.print(streamTokenizer.nval + " ");
                    this.setValue(instance, numAttribute, streamTokenizer.nval, true);
                // numAttribute++;
                } else if (streamTokenizer.sval != null && (streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == 34)) {
                    // System.out.print(streamTokenizer.sval + "/"+this.instanceInformation.attribute(numAttribute).indexOfValue(streamTokenizer.sval)+" ");
                    if (this.auxAttributes.get(numAttribute).isNumeric()) {
                        this.setValue(instance, numAttribute, Double.valueOf(streamTokenizer.sval).doubleValue(), true);
                    } else {
                        this.setValue(instance, numAttribute, this.instanceInformation.attribute(numAttribute).indexOfValue(streamTokenizer.sval), false);
                    // numAttribute++;
                    }
                }
                streamTokenizer.nextToken();
            }
            // Remove the '}' char
            streamTokenizer.nextToken();
        }
        streamTokenizer.nextToken();
    // System.out.println("EOL");
    // }
    } catch (IOException ex) {
        Logger.getLogger(ArffLoader.class.getName()).log(Level.SEVERE, null, ex);
    }
    return instance;
}
