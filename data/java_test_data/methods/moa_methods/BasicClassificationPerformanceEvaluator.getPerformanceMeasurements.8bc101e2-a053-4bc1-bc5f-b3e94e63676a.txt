@Override
public Measurement[] getPerformanceMeasurements() {
    ArrayList<Measurement> measurements = new ArrayList<Measurement>();
    measurements.add(new Measurement("classified instances", this.getTotalWeightObserved()));
    measurements.add(new Measurement("classifications correct (percent)", this.getFractionCorrectlyClassified() * 100.0));
    measurements.add(new Measurement("Kappa Statistic (percent)", this.getKappaStatistic() * 100.0));
    measurements.add(new Measurement("Kappa Temporal Statistic (percent)", this.getKappaTemporalStatistic() * 100.0));
    measurements.add(new Measurement("Kappa M Statistic (percent)", this.getKappaMStatistic() * 100.0));
    if (precisionRecallOutputOption.isSet())
        measurements.add(new Measurement("F1 Score (percent)", this.getF1Statistic() * 100.0));
    if (f1PerClassOption.isSet()) {
        for (int i = 0; i < this.numClasses; i++) {
            measurements.add(new Measurement("F1 Score for class " + i + " (percent)", 100.0 * this.getF1Statistic(i)));
        }
    }
    if (precisionRecallOutputOption.isSet())
        measurements.add(new Measurement("Precision (percent)", this.getPrecisionStatistic() * 100.0));
    if (precisionPerClassOption.isSet()) {
        for (int i = 0; i < this.numClasses; i++) {
            measurements.add(new Measurement("Precision for class " + i + " (percent)", 100.0 * this.getPrecisionStatistic(i)));
        }
    }
    if (precisionRecallOutputOption.isSet())
        measurements.add(new Measurement("Recall (percent)", this.getRecallStatistic() * 100.0));
    if (recallPerClassOption.isSet()) {
        for (int i = 0; i < this.numClasses; i++) {
            measurements.add(new Measurement("Recall for class " + i + " (percent)", 100.0 * this.getRecallStatistic(i)));
        }
    }
    Measurement[] result = new Measurement[measurements.size()];
    return measurements.toArray(result);
}
