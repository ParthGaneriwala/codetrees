@Override
public double[] getVotesForInstance(Instance inst) {
    DoubleVector combinedVote = new DoubleVector();
    StringBuilder sb = null;
    if (VerbosityOption.getValue() > 1)
        sb = new StringBuilder();
    for (int i = 0; i < this.ensemble.length; i++) {
        DoubleVector vote = new DoubleVector(this.ensemble[i].getVotesForInstance(transformInstance(inst, i)));
        if (VerbosityOption.getValue() > 1)
            sb.append(vote.getValue(0) + ", ");
        if (this.isRegression == false && vote.sumOfValues() != 0.0) {
            vote.normalize();
        }
        combinedVote.addValues(vote);
    }
    if (this.isRegression == true) {
        combinedVote.scaleValues(1.0 / this.ensemble.length);
    }
    if (VerbosityOption.getValue() > 1) {
        sb.append(combinedVote.getValue(0) + ", ").append(inst.classValue());
        System.out.println(sb.toString());
    }
    return combinedVote.getArrayRef();
}
