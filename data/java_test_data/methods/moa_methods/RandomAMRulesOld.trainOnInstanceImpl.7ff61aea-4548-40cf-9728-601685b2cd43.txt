@Override
public void trainOnInstanceImpl(Instance instance) {
    double factor = this.fadingErrorFactorOption.getValue();
    for (int i = 0; i < this.ensemble.length; i++) {
        Instance inst = instance.copy();
        int k = 1;
        if (this.useBaggingOption.isSet()) {
            k = MiscUtils.poisson(1.0, this.classifierRandom);
        }
        if (k > 0) {
            // Instance weightedInst = transformInstance(inst,i);
            inst.setWeight(inst.weight() * k);
            // estimate error
            double error = Math.abs(inst.classValue() - ensemble[i].getVotesForInstance(inst)[0]);
            sumError[i] = error * inst.weight() + sumError[i] * factor;
            nError[i] = inst.weight() + nError[i] * factor;
            // train learner
            this.ensemble[i].trainOnInstance(inst);
        }
    }
}
