@Override
public void resetLearningImpl() {
    this.ensemble = new Classifier[this.ensembleSizeOption.getValue()];
    this.alpha = new double[this.ensemble.length];
    this.alphainc = new double[this.ensemble.length];
    this.pipos = new double[this.ensemble.length];
    this.pineg = new double[this.ensemble.length];
    this.wpos = new double[this.ensemble.length][this.ensemble.length];
    this.wneg = new double[this.ensemble.length][this.ensemble.length];
    Classifier baseLearner = (Classifier) getPreparedClassOption(this.baseLearnerOption);
    baseLearner.resetLearning();
    for (int i = 0; i < this.ensemble.length; i++) {
        this.ensemble[i] = baseLearner.copy();
        alpha[i] = 0.0;
        alphainc[i] = 0.0;
        for (int j = 0; j < this.ensemble.length; j++) {
            wpos[i][j] = this.smoothingOption.getValue();
            wneg[i][j] = this.smoothingOption.getValue();
        }
    }
}
