@Override
public void addResult(Example<Instance> example, Prediction y) {
    int sumReunion = 0;
    int sumInterse = 0;
    int sumOnesTrue = 0;
    int sumOnesPred = 0;
    MultiLabelInstance x = (MultiLabelInstance) example.getData();
    if (L == 0) {
        L = x.numberOutputTargets();
    }
    if (y == null) {
        System.err.print("[WARNING] Prediction is null! (Ignoring this prediction)");
    } else if (y.numOutputAttributes() < x.numOutputAttributes()) {
        System.err.println("[WARNING] Only " + y.numOutputAttributes() + " labels found! (Expecting " + x.numOutputAttributes() + ")\n (Ignoring this prediction)");
    } else {
        sumExamples++;
        int correct = 0;
        for (int j = 0; j < y.numOutputAttributes(); j++) {
            int yp = (y.getVote(j, 1) > y.getVote(j, 0)) ? 1 : 0;
            int y_true = (int) x.valueOutputAttribute(j);
            if (y_true == yp)
                correct++;
            if (y_true == 1 || yp == 1)
                sumReunion++;
            if (y_true == 1 && yp == 1)
                sumInterse++;
            if (y_true == 1)
                sumOnesTrue++;
            if (yp == 1)
                sumOnesPred++;
        }
        // Accuracy by instance(Jaccard Index)
        if (sumReunion > 0) {
            sumAccuracy2 += (double) sumInterse / sumReunion;
        } else {
            sumAccuracy2 += 0.0;
        }
        // Precision by instance
        if (sumOnesTrue > 0) {
            sumPrecision += (double) sumInterse / sumOnesTrue;
        }
        // Recall by instance
        if (sumOnesPred > 0) {
            sumRecall += (double) (sumInterse / sumOnesPred);
        }
        // F-Measure by instance
        if ((sumOnesPred + sumOnesTrue) > 0) {
            sumFmeasure += (double) 2 * sumInterse / (sumOnesPred + sumOnesTrue);
        } else {
            sumFmeasure += 0.0;
        }
        // Hamming Score
        sumHamming += (correct / (double) L);
        // Exact Match
        sumAccuracy += (correct == L) ? 1 : 0;
    }
}
