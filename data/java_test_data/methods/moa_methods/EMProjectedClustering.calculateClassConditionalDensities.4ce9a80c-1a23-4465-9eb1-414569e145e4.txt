private void calculateClassConditionalDensities() {
    // P(x|C) = factor * e^( -0.5 (x-mu) * Sigma^-1 * (x-mu) )
    // exponent = -0.5 (x-mu) * Sigma^-1 * (x-mu) )
    // = -0.5 ( sum_d ((x_i - mu_i)^2 / var_i) )
    double exponent;
    double xMinusMu;
    // factor = 1 / sqrt( (2*PI)^d * \prod_d(variance) )
    // = 1 / sqrt((2*PI)^d) * sqrt(\prod_d(variance))
    // = 1 / (2*PI)^(d/2)   * \prod_d(sqrt(variance))
    double factor;
    // for each cluster C_i
    for (int i = 0; i < pXgivenC[0].length; i++) {
        // if the cluster is empty, set P(x|C_i) = 0
        if (clusterWeights[i] <= 0.0) {
            for (int x = 0; x < pXgivenC.length; x++) pXgivenC[x][i] = 0.0;
            continue;
        }
        // calculate the factor for each cluster
        factor = Math.pow((2.0 * Math.PI), ((dim / 2.0)));
        for (int d = 0; d < dim; d++) {
            factor *= Math.sqrt(clusterVariances[i][d]);
        }
        // factor = 1 / sqrt( (2*PI)^d * \prod_d(variance) )
        factor = 1 / factor;
        // calculate the density for each point x
        for (int x = 0; x < pXgivenC.length; x++) {
            exponent = 0.0;
            for (int d = 0; d < dim; d++) {
                xMinusMu = pointArray[x][d] - clusterMeans[i][d];
                exponent += (xMinusMu * xMinusMu) / clusterVariances[i][d];
            }
            exponent *= -0.5;
            pXgivenC[x][i] = factor * Math.exp(exponent);
        }
    }
}
