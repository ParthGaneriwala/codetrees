@Override
public void addPrediction(Prediction prediction, Prediction trueClass, double weight) {
    int numOutputs = prediction.numOutputAttributes();
    if (!hasStarted) {
        sumSquaredError = new double[numOutputs];
        sumY = new double[numOutputs];
        sumSquaredErrorToTargetMean = new double[numOutputs];
        hasStarted = true;
        for (int i = 0; i < numOutputs; i++) if (prediction.hasVotesForAttribute(i))
            ++numLearnedOutputs;
        hasStarted = true;
    }
    weightSeen = weight + fadingErrorFactor * weightSeen;
    for (int i = 0; i < numOutputs; i++) {
        if (prediction.hasVotesForAttribute(i)) {
            // sum target
            sumY[i] = trueClass.getVote(i, 0) * weight + fadingErrorFactor * sumY[i];
            double errorOutput = prediction.getVote(i, 0) - trueClass.getVote(i, 0);
            // error to target mean
            double errorOutputTM = prediction.getVote(i, 0) - sumY[i] / weightSeen;
            sumSquaredError[i] = errorOutput * errorOutput * weight + fadingErrorFactor * sumSquaredError[i];
            sumSquaredErrorToTargetMean[i] = errorOutputTM * errorOutputTM * weight + fadingErrorFactor * sumSquaredErrorToTargetMean[i];
        }
    }
}
