@Override
public void trainOnInstanceImpl(MultiLabelInstance instance) {
    if (!this.hasStarted) {
        baseLearner = new MultiTargetRegressor[NUM_LEARNERS];
        errorMeasurer = new MultiTargetErrorMeasurer[NUM_LEARNERS];
        baseLearner[0] = (MultiTargetRegressor) getPreparedClassOption(this.baseLearnerOption1);
        baseLearner[1] = (MultiTargetRegressor) getPreparedClassOption(this.baseLearnerOption2);
        for (int i = 0; i < NUM_LEARNERS; i++) {
            if (baseLearner[i].isRandomizable())
                baseLearner[i].setRandomSeed(this.randomSeed);
            baseLearner[i].resetLearning();
            errorMeasurer[i] = (MultiTargetErrorMeasurer) ((MultiTargetErrorMeasurer) getPreparedClassOption(this.errorMeasurerOption)).copy();
        }
        this.hasStarted = true;
    }
    for (int i = 0; i < NUM_LEARNERS; i++) {
        // Update online errors
        Prediction prediction = baseLearner[i].getPredictionForInstance(instance);
        if (// should happen only for first instance
        prediction != null)
            errorMeasurer[i].addPrediction(prediction, instance);
        // Train
        baseLearner[i].trainOnInstanceImpl(instance);
    }
}
