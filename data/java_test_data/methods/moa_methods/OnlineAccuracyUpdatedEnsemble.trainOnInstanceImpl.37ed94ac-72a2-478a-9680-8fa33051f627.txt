@Override
public void trainOnInstanceImpl(Instance inst) {
    this.initVariables();
    if (this.processedInstances < this.windowSize) {
        this.classDistributions[(int) inst.classValue()]++;
    } else {
        this.classDistributions[this.currentWindow[processedInstances % this.windowSize]]--;
        this.classDistributions[(int) inst.classValue()]++;
    }
    this.currentWindow[processedInstances % this.windowSize] = (int) inst.classValue();
    this.processedInstances++;
    this.computeMseR();
    if (this.processedInstances % this.windowSize == 0) {
        this.createNewClassifier(inst);
    } else {
        this.candidate.classifier.trainOnInstance(inst);
        for (int i = 0; i < this.ensemble.length; i++) {
            this.weights[i][0] = this.computeWeight(i, inst);
        }
    }
    for (int i = 0; i < this.ensemble.length; i++) {
        this.ensemble[i].classifier.trainOnInstance(inst);
    }
}
