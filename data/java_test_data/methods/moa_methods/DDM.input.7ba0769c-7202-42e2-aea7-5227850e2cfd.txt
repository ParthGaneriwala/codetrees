@Override
public void input(double prediction) {
    // It monitors the error rate
    if (this.isChangeDetected == true || this.isInitialized == false) {
        resetLearning();
        this.isInitialized = true;
    }
    m_p = m_p + (prediction - m_p) / (double) m_n;
    m_s = Math.sqrt(m_p * (1 - m_p) / (double) m_n);
    m_n++;
    // System.out.print(prediction + " " + m_n + " " + (m_p+m_s) + " ");
    this.estimation = m_p;
    this.isChangeDetected = false;
    this.isWarningZone = false;
    this.delay = 0;
    if (m_n < minNumInstances) {
        return;
    }
    if (m_p + m_s <= m_psmin) {
        m_pmin = m_p;
        m_smin = m_s;
        m_psmin = m_p + m_s;
    }
    if (m_n > minNumInstances && m_p + m_s > m_pmin + outcontrolLevel * m_smin) {
        // System.out.println(m_p + ",D");
        this.isChangeDetected = true;
    // resetLearning();
    } else if (m_p + m_s > m_pmin + warningLevel * m_smin) {
        // System.out.println(m_p + ",W");
        this.isWarningZone = true;
    } else {
        this.isWarningZone = false;
    // System.out.println(m_p + ",N");
    }
}
