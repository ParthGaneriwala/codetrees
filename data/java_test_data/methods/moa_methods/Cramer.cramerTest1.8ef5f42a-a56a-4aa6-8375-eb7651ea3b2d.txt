public CramerTest cramerTest1(List<List<Double>> x, List<List<Double>> y, double confLevel, int replicates, String sim, boolean justStatistic, int kernel, double maxM, int k) {
    CramerTest RVAL = new CramerTest(0, 0, 0, 0, 0, 0, 0, confLevel, replicates, null, null, null);
    // if ((is.matrix(x))&&(is.matrix(y))) if (ncol(x)==ncol(y)) RVAL$d<-ncol(x)
    RVAL.d = x.get(0).size();
    // RVAL$m<-nrow(x)
    RVAL.m = x.size();
    // RVAL$n<-nrow(y)
    RVAL.n = y.size();
    // daten<-matrix(c(t(x),t(y)),ncol=ncol(x),byrow=TRUE)
    double[][] daten = new double[RVAL.m + RVAL.n][];
    for (int i = 0; i < RVAL.m; i++) {
        double[] values = new double[x.get(i).size() - 1];
        System.arraycopy(x.get(i).toArray(), 0, values, 0, values.length);
        daten[i] = values;
    }
    for (int i = 0; i < RVAL.n; i++) {
        double[] values = new double[y.get(i).size() - 1];
        System.arraycopy(y.get(i).toArray(), 0, values, 0, values.length);
        daten[i + RVAL.m] = values;
    }
    return this.compute(RVAL, daten, replicates, sim, justStatistic, kernel, maxM, k);
}
