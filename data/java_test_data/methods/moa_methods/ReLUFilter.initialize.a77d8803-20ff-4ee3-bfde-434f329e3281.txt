private void initialize(Instance instance) {
    this.random = new Random(this.randomSeedOption.getValue());
    // suppose one class attribute
    int d = instance.numAttributes() - 1;
    if (numLatentOption.getValue() < 0)
        // set the number
        H = numLatentOption.getValue();
    else
        // use as a percentage!
        H = d * numLatentOption.getValue() / 100;
    // initialize ReLU features
    W = new double[H][d];
    for (int j = 0; j < H; j++) {
        for (int k = 0; k < d; k++) {
            W[j][k] = this.random.nextGaussian();
        }
    }
    // initialize instance space
    Instances ds = new Instances();
    List<Attribute> v = new ArrayList<Attribute>(H);
    List<Integer> indexValues = new ArrayList<Integer>(H);
    for (int j = 0; j < H; j++) {
        v.add(new Attribute("z" + String.valueOf(j)));
        indexValues.add(j);
    }
    v.add(instance.dataset().classAttribute());
    indexValues.add(H);
    ds.setAttributes(v, indexValues);
    Range r = new Range("start-end");
    ds.setRangeOutputIndices(r);
    dataset = (new InstancesHeader(ds));
    dataset.setClassIndex(H);
}
