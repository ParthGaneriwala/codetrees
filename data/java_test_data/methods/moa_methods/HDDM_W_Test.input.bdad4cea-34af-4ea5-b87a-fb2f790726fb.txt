@Override
public void input(double value) {
    double auxDecayRate = 1.0 - lambda;
    this.width++;
    if (total.EWMA_Estimator < 0) {
        total.EWMA_Estimator = value;
        total.independentBoundedConditionSum = 1;
    } else {
        total.EWMA_Estimator = lambda * value + auxDecayRate * total.EWMA_Estimator;
        total.independentBoundedConditionSum = lambda * lambda + auxDecayRate * auxDecayRate * total.independentBoundedConditionSum;
    }
    updateIncrStatistics(value, driftConfidence);
    if (monitorMeanIncr(value, driftConfidence)) {
        resetLearning();
        this.isChangeDetected = true;
        this.isWarningZone = false;
    } else if (monitorMeanIncr(value, warningConfidence)) {
        this.isChangeDetected = false;
        this.isWarningZone = true;
    } else {
        this.isChangeDetected = false;
        this.isWarningZone = false;
    }
    updateDecrStatistics(value, driftConfidence);
    if (!oneSidedTest && monitorMeanDecr(value, driftConfidence)) {
        resetLearning();
    }
    this.estimation = this.total.EWMA_Estimator;
}
