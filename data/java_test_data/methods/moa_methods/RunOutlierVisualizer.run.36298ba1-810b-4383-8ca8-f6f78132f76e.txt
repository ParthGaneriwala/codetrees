@Override
public void run() {
    nProcessed = 0;
    m_timePreObjSum[ALGORITHM_1] = 0L;
    m_timePreObjSum[ALGORITHM_2] = 0L;
    pointBuffer0 = new LinkedList<DataPoint>();
    while (!bStop) {
        if (!bWork || CanPause()) {
            updateSettings();
            drawOutliers();
            showOutliers(true);
            m_streampanel[ALGORITHM_1].repaint();
            if (bUseAlgorithm2)
                m_streampanel[ALGORITHM_2].repaint();
            // redraw();
            work_pause();
            if (bStop)
                break;
            updateSettings();
            showOutliers(false);
            m_streampanel[ALGORITHM_1].setHighlightedOutlierPanel(null);
            if (bUseAlgorithm2)
                m_streampanel[ALGORITHM_2].setHighlightedOutlierPanel(null);
        }
        synchronized (this) {
            processData();
        }
    }
}
