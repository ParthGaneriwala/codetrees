public double getHoldoutAUC() {
    double AUC = 0;
    double c = 0;
    double prevc = 0;
    double lastPosScore = Double.MAX_VALUE;
    if (holdoutSortedScores.isEmpty()) {
        return 0;
    }
    if (holdoutNumPos == 0 || holdoutNumNeg == 0) {
        return 1;
    }
    for (Score s : holdoutSortedScores) {
        if (s.isPositive) {
            if (s.value != lastPosScore) {
                prevc = c;
                lastPosScore = s.value;
            }
            c += 1;
        } else {
            if (s.value == lastPosScore) {
                // tie
                AUC += ((double) (c + prevc)) / 2.0;
            } else {
                AUC += c;
            }
        }
    }
    return AUC / (holdoutNumPos * holdoutNumNeg);
}
