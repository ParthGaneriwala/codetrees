private boolean nodeListAdd(RuleSplitNode ruleSplitNode) {
    // Check that the node is not already in the list
    boolean isIncludedInNodeList = false;
    boolean isUpdated = false;
    for (RuleSplitNode node : nodeList) {
        NumericAttributeBinaryRulePredicate nodeTest = (NumericAttributeBinaryRulePredicate) node.getSplitTest();
        NumericAttributeBinaryRulePredicate ruleSplitNodeTest = (NumericAttributeBinaryRulePredicate) ruleSplitNode.getSplitTest();
        if (nodeTest.isUsingSameAttribute(ruleSplitNodeTest)) {
            isIncludedInNodeList = true;
            if (nodeTest.isIncludedInRuleNode(ruleSplitNodeTest) == true) {
                // remove this line to keep the most recent attribute value
                // replace the value
                nodeTest.setAttributeValue(ruleSplitNodeTest);
                // if is updated (i.e. an expansion happened) a new learning node should be created
                isUpdated = true;
            }
        }
    }
    if (isIncludedInNodeList == false) {
        this.nodeList.add(ruleSplitNode);
    }
    return (!isIncludedInNodeList || isUpdated);
}
