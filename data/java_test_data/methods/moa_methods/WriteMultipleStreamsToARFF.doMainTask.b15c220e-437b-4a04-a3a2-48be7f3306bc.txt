@Override
protected Object doMainTask(TaskMonitor monitor, ObjectRepository repository) {
    // Store the original values of these two options, which may be altered during the remainder of this task.
    String streamCLI = this.streamOption.getValueAsCLIString();
    String fileCLI = this.arffFileOption.getValueAsCLIString();
    stream = (InstanceStream) getPreparedClassOption(this.streamOption);
    // For each stream to be created...
    for (int i = 0; i < this.numStreamsOption.getValue(); i++) {
        // ...provide different seeds for each of the selected random processes...
        String s = streamCLI;
        if (this.randomFlagOne.isSet()) {
            s = s.concat(" -" + randomOneOption.getValue() + " " + WriteMultipleStreamsToARFF.primesAndBiprimes[i]);
        }
        if (this.randomFlagTwo.isSet()) {
            s = s.concat(" -" + randomTwoOption.getValue() + " " + WriteMultipleStreamsToARFF.primesAndBiprimes[i / WriteMultipleStreamsToARFF.primesAndBiprimes.length]);
        }
        this.streamOption.setValueViaCLIString(s);
        // ...update the file name of the ARFF file to output...
        s = fileCLI;
        if (s.substring(s.length() - 5, s.length()).equals(".arff")) {
            s = s.substring(0, s.length() - 5);
        }
        s = s.concat("n" + i + ".arff");
        this.arffFileOption.setValueViaCLIString(s);
        File destFile = this.arffFileOption.getFile();
        // ...and attempt to write the file.
        if (destFile != null) {
            try {
                Writer w = new BufferedWriter(new FileWriter(destFile));
                System.out.println("Writing stream to ARFF: " + this.streamOption.getValueAsCLIString() + " to " + this.arffFileOption.getValueAsCLIString());
                monitor.setCurrentActivityDescription("Writing stream to ARFF: " + this.streamOption.getValueAsCLIString() + " to " + this.arffFileOption.getValueAsCLIString());
                if (!this.suppressHeaderOption.isSet()) {
                    w.write(stream.getHeader().toString());
                    w.write("\n");
                }
                int numWritten = 0;
                while ((numWritten < this.maxInstancesOption.getValue()) && stream.hasMoreInstances()) {
                    w.write(stream.nextInstance().getData().toString());
                    w.write("\n");
                    numWritten++;
                }
                w.close();
            } catch (Exception ex) {
                throw new RuntimeException("Failed writing to file " + destFile, ex);
            }
        }
    }
    return "Streams written to ARFF files";
}
