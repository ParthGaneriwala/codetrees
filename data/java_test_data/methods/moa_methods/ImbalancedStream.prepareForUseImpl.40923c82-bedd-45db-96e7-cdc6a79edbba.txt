@Override
protected void prepareForUseImpl(TaskMonitor monitor, ObjectRepository repository) {
    originalStream = (ExampleStream) getPreparedClassOption(streamOption);
    numClasses = originalStream.getHeader().numClasses();
    probPerClass = new double[numClasses];
    instancesBuffer = new Instances[numClasses];
    probPerClass = new double[numClasses];
    // checks and sets the probabilities
    double sumProbs = 0.0;
    String[] probs = classRatioOption.getValue().split(";");
    for (int i = 0; i < probs.length; i++) {
        if (i > probPerClass.length - 1)
            throw new IllegalArgumentException("Please make sure the number of class " + "ratios provided is less or equal the number of classes in the original stream.");
        Double p = Double.parseDouble(probs[i]);
        if (!p.isNaN() && !p.isInfinite() && p.doubleValue() >= 0.0 && p.doubleValue() <= 1.0) {
            // aka is a valid number between 0.0 and 1.0
            probPerClass[i] = p;
            sumProbs += p;
        } else {
            throw new IllegalArgumentException("Please make sure only numbers between 0.0 and 1.0 are inputted.");
        }
    }
    // checks if the values sum to 1.0
    if (sumProbs != 1.0)
        throw new IllegalArgumentException("Please make sure the class ratios sum up to 1.0.");
    // initializes the buffers using the original header
    for (int i = 0; i < instancesBuffer.length; i++) {
        instancesBuffer[i] = new Instances(originalStream.getHeader());
    }
    // initializes the random generator
    random = new Random(instanceRandomSeedOption.getValue());
}
