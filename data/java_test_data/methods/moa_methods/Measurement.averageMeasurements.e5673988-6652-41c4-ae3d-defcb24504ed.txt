public static Measurement[] averageMeasurements(Measurement[][] toAverage) {
    List<String> measurementNames = new ArrayList<String>();
    for (Measurement[] measurements : toAverage) {
        for (Measurement measurement : measurements) {
            if (measurementNames.indexOf(measurement.getName()) < 0) {
                measurementNames.add(measurement.getName());
            }
        }
    }
    GaussianEstimator[] estimators = new GaussianEstimator[measurementNames.size()];
    for (int i = 0; i < estimators.length; i++) {
        estimators[i] = new GaussianEstimator();
    }
    for (Measurement[] measurements : toAverage) {
        for (Measurement measurement : measurements) {
            estimators[measurementNames.indexOf(measurement.getName())].addObservation(measurement.getValue(), 1.0);
        }
    }
    List<Measurement> averagedMeasurements = new ArrayList<Measurement>();
    for (int i = 0; i < measurementNames.size(); i++) {
        String mName = measurementNames.get(i);
        GaussianEstimator mEstimator = estimators[i];
        if (mEstimator.getTotalWeightObserved() > 1.0) {
            averagedMeasurements.add(new Measurement("[avg] " + mName, mEstimator.getMean()));
            averagedMeasurements.add(new Measurement("[err] " + mName, mEstimator.getStdDev()));
        } else {
            averagedMeasurements.add(new Measurement("[avg] " + mName, 0.0));
            averagedMeasurements.add(new Measurement("[err] " + mName, 0.0));
        }
    }
    return averagedMeasurements.toArray(new Measurement[averagedMeasurements.size()]);
}
