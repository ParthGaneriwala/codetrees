public double get(int col, int row) {
    try {
        if (row < window.minJforI(col) || row > window.maxJforI(col))
            return (1.0D / 0.0D);
        if (col == currColIndex)
            return currCol[row - minCurrRow];
        if (col == currColIndex - 1)
            return lastCol[row - minLastRow];
        if (isSwapFileFreed)
            throw new InternalError("The SwapFileMatrix has been freeded by the freeMem() method");
        cellValuesFile.seek(colOffsets[col] + (long) (8 * (row - window.minJforI(col))));
        return cellValuesFile.readDouble();
    } catch (Exception e) {
        e.printStackTrace();
    }
    if (col > currColIndex)
        throw new InternalError("The requested value is in the search window but has not been entered into the matrix: (col=" + col + "row=" + row + ").");
    else
        throw new InternalError("Unable to read CostMatrix in the Swap file (IOException)");
}
