@Override
public String getStatistics() {
    StringBuilder sb = new StringBuilder();
    sb.append("Statistics:\n\n");
    // get counters of expired nodes
    int nBothInlierOutlier = m_nBothInlierOutlier;
    int nOnlyInlier = m_nOnlyInlier;
    int nOnlyOutlier = m_nOnlyOutlier;
    // add counters of non expired nodes
    for (ISBNode node : windowNodes) {
        if ((node.nInlier > 0) && (node.nOutlier > 0))
            nBothInlierOutlier++;
        else if (node.nInlier > 0)
            nOnlyInlier++;
        else
            nOnlyOutlier++;
    }
    int sum = nBothInlierOutlier + nOnlyInlier + nOnlyOutlier;
    if (sum > 0) {
        sb.append(String.format("  Nodes always inlier: %d (%.1f%%)\n", nOnlyInlier, (100 * nOnlyInlier) / (double) sum));
        sb.append(String.format("  Nodes always outlier: %d (%.1f%%)\n", nOnlyOutlier, (100 * nOnlyOutlier) / (double) sum));
        sb.append(String.format("  Nodes both inlier and outlier: %d (%.1f%%)\n", nBothInlierOutlier, (100 * nBothInlierOutlier) / (double) sum));
        sb.append("  (Sum: " + sum + ")\n");
    }
    sb.append("\n  Total range queries: " + nRangeQueriesExecuted + "\n");
    sb.append("  Max memory usage: " + iMaxMemUsage + " MB\n");
    sb.append("  Total process time: " + String.format("%.2f ms", nTotalRunTime / 1000.0) + "\n");
    return sb.toString();
}
