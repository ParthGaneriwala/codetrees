@Override
public InstanceExample nextInstance() {
    double a1 = 0, a2 = 0, group = 0;
    boolean desiredClassFound = false;
    while (!desiredClassFound) {
        a1 = this.instanceRandom.nextDouble();
        a2 = this.instanceRandom.nextDouble();
        group = classificationFunctions[this.functionOption.getValue() - 1].determineClass(a1, a2);
        if (!this.balanceClassesOption.isSet()) {
            desiredClassFound = true;
        } else {
            // balance the classes
            if ((this.nextClassShouldBeZero && (group == 0)) || (!this.nextClassShouldBeZero && (group == 1))) {
                desiredClassFound = true;
                this.nextClassShouldBeZero = !this.nextClassShouldBeZero;
            }
        // else keep searching
        }
    }
    // construct instance
    InstancesHeader header = getHeader();
    Instance inst = new DenseInstance(header.numAttributes());
    inst.setValue(0, a1);
    inst.setValue(1, a2);
    inst.setDataset(header);
    if (!this.suppressIrrelevantAttributesOption.isSet()) {
        for (int i = 0; i < NUM_IRRELEVANT_ATTRIBUTES; i++) {
            inst.setValue(i + 2, this.instanceRandom.nextDouble());
        }
    }
    inst.setClassValue(group);
    return new InstanceExample(inst);
}
