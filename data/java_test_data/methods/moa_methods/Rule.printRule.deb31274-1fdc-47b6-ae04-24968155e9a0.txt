public String printRule() {
    StringBuilder out = new StringBuilder();
    int indent = 1;
    // AC
    StringUtils.appendIndented(out, indent, "Rule Nr." + this.ruleNumberID + " Instances seen:" + this.learningNode.getInstancesSeen() + "\n");
    for (RuleSplitNode node : nodeList) {
        StringUtils.appendIndented(out, indent, node.getSplitTest().toString());
        StringUtils.appendIndented(out, indent, " ");
        StringUtils.appendIndented(out, indent, node.toString());
    }
    DoubleVector pred = new DoubleVector(this.learningNode.getSimplePrediction());
    StringUtils.appendIndented(out, 0, " --> y: " + pred.toString());
    StringUtils.appendNewline(out);
    if (this.learningNode instanceof RuleActiveRegressionNode) {
        if (((RuleActiveRegressionNode) this.learningNode).perceptron != null) {
            ((RuleActiveRegressionNode) this.learningNode).perceptron.getModelDescription(out, 0);
            StringUtils.appendNewline(out);
        }
    }
    return (out.toString());
}
