@Override
public AttributeExpansionSuggestion getBestEvaluatedSplitSuggestion(MultiLabelSplitCriterion criterion, DoubleVector[] preSplitStatistics, int inputAttributeIndex) {
    double bestSuggestionMerit = -Double.MAX_VALUE;
    AttributeExpansionSuggestion bestSuggestiong = null;
    Iterator<Entry<Integer, DoubleVector[]>> it = statisticsByNominalValue.entrySet().iterator();
    while (it.hasNext()) {
        Entry<Integer, DoubleVector[]> pair = it.next();
        int splitValue = pair.getKey();
        DoubleVector[] statistics = pair.getValue();
        DoubleVector[][] resultingStatistics = new DoubleVector[statistics.length][2];
        for (int i = 0; i < statistics.length; i++) {
            resultingStatistics[i] = new DoubleVector[2];
            resultingStatistics[i][0] = statistics[i];
            resultingStatistics[i][1] = new DoubleVector(preSplitStatistics[i]);
            resultingStatistics[i][1].subtractValues(statistics[i]);
        }
        double merit = criterion.getMeritOfSplit(preSplitStatistics, resultingStatistics);
        if (merit > bestSuggestionMerit) {
            bestSuggestionMerit = merit;
            bestSuggestiong = new AttributeExpansionSuggestion(new NominalRulePredicate(inputAttributeIndex, splitValue, true), Utils.copy(resultingStatistics), merit);
        }
    }
    return bestSuggestiong;
}
