private int getClassProbabilities(int attributeValue, ArrayList<Integer> attValueList, double[][] classDistPerValueLower, double[][] classDistPerValueUpper, double available) {
    int max, tmp;
    double maxProbUp, newProbUp;
    if (attValueList.isEmpty()) {
        return -1;
    } else {
        max = attValueList.get(0);
        maxProbUp = Math.min(classDistPerValueUpper[attributeValue][max], classDistPerValueLower[attributeValue][max] + available);
        for (int i = 1; i < attValueList.size(); i++) {
            tmp = attValueList.get(i);
            newProbUp = Math.min(classDistPerValueUpper[attributeValue][tmp], classDistPerValueLower[attributeValue][tmp] + available);
            if (newProbUp > maxProbUp) {
                max = tmp;
                maxProbUp = newProbUp;
            }
        }
        return max;
    }
}
