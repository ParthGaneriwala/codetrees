@Override
public void learnFromInstance(Instance inst, HoeffdingTree ht) {
    this.observedClassDistribution.addToValue((int) inst.classValue(), inst.weight());
    if (this.listAttributes == null) {
        setlistAttributes(((LimAttHoeffdingTree) ht).listAttributes);
    }
    for (int j = 0; j < this.numAttributes; j++) {
        int i = this.listAttributes[j];
        int instAttIndex = modelAttIndexToInstanceAttIndex(i, inst);
        AttributeClassObserver obs = this.attributeObservers.get(i);
        if (obs == null) {
            obs = inst.attribute(instAttIndex).isNominal() ? ht.newNominalClassObserver() : ht.newNumericClassObserver();
            this.attributeObservers.set(i, obs);
        }
        obs.observeAttributeClass(inst.value(instAttIndex), (int) inst.classValue(), inst.weight());
    }
}
