protected String[] parts() {
    String[] parts = new String[2];
    // integer part
    parts[0] = Long.toString((long) toDoubleUnsigned());
    // fractional part
    StringBuffer frac = new StringBuffer();
    if (exponent < 0) {
        int trailingZeros = -exponent - digits;
        int zerotail = 0;
        char[] zz;
        if (trailingZeros > 0) {
            zz = zeros(trailingZeros);
            frac.append(zz).append(mantissa);
        } else {
            String s = Long.toString(mantissa).substring(Math.abs(trailingZeros));
            frac.append(s);
            zerotail = digits - (s.length() - trailingZeros);
        }
        // #.###00
        if (zerotail > 0) {
            zz = zeros(zerotail);
            frac.append(zz);
        }
        parts[1] = frac.toString();
    }
    if (negative) {
        parts[0] = "-" + parts[0];
    }
    return parts;
}
