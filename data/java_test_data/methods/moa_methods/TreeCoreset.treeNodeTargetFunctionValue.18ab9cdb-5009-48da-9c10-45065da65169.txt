double treeNodeTargetFunctionValue() {
    // loop counter variable
    int i;
    // stores the cost
    double sum = 0.0;
    for (i = 0; i < this.n; i++) {
        // stores the distance
        double distance = 0.0;
        // loop counter variable
        int l;
        for (l = 0; l < this.points[i].dimension; l++) {
            // centroid coordinate of the point
            double centroidCoordinatePoint;
            if (this.points[i].weight != 0.0) {
                centroidCoordinatePoint = this.points[i].coordinates[l] / this.points[i].weight;
            } else {
                centroidCoordinatePoint = this.points[i].coordinates[l];
            }
            // centroid coordinate of the centre
            double centroidCoordinateCentre;
            if (this.centre.weight != 0.0) {
                centroidCoordinateCentre = this.centre.coordinates[l] / this.centre.weight;
            } else {
                centroidCoordinateCentre = this.centre.coordinates[l];
            }
            distance += (centroidCoordinatePoint - centroidCoordinateCentre) * (centroidCoordinatePoint - centroidCoordinateCentre);
        }
        sum += distance * this.points[i].weight;
    }
    return sum;
}
