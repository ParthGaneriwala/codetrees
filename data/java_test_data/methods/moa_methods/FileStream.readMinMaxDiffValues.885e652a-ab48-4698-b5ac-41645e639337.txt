protected ArrayList<Double[]> readMinMaxDiffValues(HashSet<Integer> ignoredAttributes) {
    ArrayList<Double[]> valuesMinMaxDiff = null;
    if (ignoredAttributes == null)
        ignoredAttributes = new HashSet<Integer>();
    try {
        InputStream fileStream = new FileInputStream(arffFileOption.getFile());
        InputStreamProgressMonitor fileProgressMonitor = new InputStreamProgressMonitor(fileStream);
        Reader fileReader = new BufferedReader(new InputStreamReader(fileProgressMonitor));
        Instances instances = new Instances(fileReader, 1, this.classIndexOption.getValue());
        valuesMinMaxDiff = new ArrayList<Double[]>();
        for (int i = 0; i < instances.numAttributes() - ignoredAttributes.size(); i++) {
            Double[] values = { Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY, 0.0 };
            valuesMinMaxDiff.add(values);
        }
        System.out.print("Reading arff file for normalization...");
        int counter = 0;
        while (instances.readInstance(fileReader)) {
            Instance instance = instances.instance(0);
            int a = 0;
            for (int i = 0; i < instances.numAttributes(); i++) {
                if (!ignoredAttributes.contains(i)) {
                    double value = instance.value(i);
                    if (value < valuesMinMaxDiff.get(a)[0])
                        valuesMinMaxDiff.get(a)[0] = value;
                    if (value > valuesMinMaxDiff.get(a)[1])
                        valuesMinMaxDiff.get(a)[1] = value;
                    a++;
                }
            }
            instances.delete();
            // show some progress
            counter++;
            if (counter >= 10000) {
                counter = 0;
                System.out.print(".");
            }
        }
        if (fileReader != null) {
            fileReader.close();
            fileReader = null;
        }
        System.out.println("done!");
        for (int i = 0; i < valuesMinMaxDiff.size(); i++) {
            valuesMinMaxDiff.get(i)[2] = valuesMinMaxDiff.get(i)[1] - valuesMinMaxDiff.get(i)[0];
        }
        return valuesMinMaxDiff;
    } catch (IOException ioe) {
        throw new RuntimeException("ArffFileStream failed to read instance from stream.", ioe);
    }
}
