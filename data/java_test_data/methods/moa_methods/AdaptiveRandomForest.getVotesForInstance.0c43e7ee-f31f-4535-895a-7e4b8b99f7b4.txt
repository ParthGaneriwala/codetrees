@Override
public double[] getVotesForInstance(Instance instance) {
    Instance testInstance = instance.copy();
    if (this.ensemble == null)
        initEnsemble(testInstance);
    DoubleVector combinedVote = new DoubleVector();
    for (int i = 0; i < this.ensemble.length; ++i) {
        DoubleVector vote = new DoubleVector(this.ensemble[i].getVotesForInstance(testInstance));
        if (vote.sumOfValues() > 0.0) {
            vote.normalize();
            double acc = this.ensemble[i].evaluator.getPerformanceMeasurements()[1].getValue();
            if (!this.disableWeightedVote.isSet() && acc > 0.0) {
                for (int v = 0; v < vote.numValues(); ++v) {
                    vote.setValue(v, vote.getValue(v) * acc);
                }
            }
            combinedVote.addValues(vote);
        }
    }
    return combinedVote.getArrayRef();
}
