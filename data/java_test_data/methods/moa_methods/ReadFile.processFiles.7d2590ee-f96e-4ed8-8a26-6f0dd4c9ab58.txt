public String processFiles() {
    // read files
    File file = new File(path);
    File[] listFiles = file.listFiles();
    boolean addFirst = true;
    for (int i = 0; i < listFiles.length; i++) {
        if (listFiles[i].isDirectory()) {
            stream.add(listFiles[i].getName());
            File files = new File(listFiles[i].getAbsolutePath());
            File[] algorithm = files.listFiles();
            for (int j = 0; j < algorithm.length; j++) {
                if (algorithm[j].isFile()) {
                    if (algNames.remove(algorithm[j].getName())) {
                        algNames.add(algorithm[j].getName());
                    } else {
                        algNames.add(algorithm[j].getName());
                    }
                    FileReader fr = null;
                    try {
                        fr = new FileReader(algorithm[j].getAbsolutePath());
                    } catch (FileNotFoundException ex) {
                        return "Problem with file: " + listFiles[j].getAbsolutePath();
                    }
                    BufferedReader br = new BufferedReader(fr);
                    try {
                        String line = br.readLine();
                        if (addFirst) {
                            measures.add(line);
                            addFirst = false;
                        } else if (measures.remove(line)) {
                            measures.add(line);
                        } else {
                            String[] lineArray = line.split(",");
                            String[] measureArray = measures.getFirst().split(",");
                            String newMeasure = "";
                            for (int l = 0; l < lineArray.length; l++) {
                                for (int m = 0; m < measureArray.length; m++) {
                                    if (lineArray[l].equals(measureArray[m])) {
                                        newMeasure += lineArray[l] + ",";
                                    }
                                }
                            }
                            String[] s;
                            if (newMeasure.endsWith(",")) {
                                s = newMeasure.split(",");
                                newMeasure = "";
                                for (int k = 0; k < s.length; k++) {
                                    newMeasure += s[k];
                                    if (k != s.length - 1) {
                                        newMeasure += ",";
                                    }
                                }
                            }
                            measures.removeFirst();
                            measures.add(newMeasure);
                        }
                    } catch (IOException ex) {
                        return "Problem with file: " + listFiles[j].getAbsolutePath();
                    }
                }
            }
        }
    }
    // end files
    algNames.stream().forEach((algName) -> {
        this.algShortNames.add(FilenameUtils.getBaseName(algName));
    });
    return "";
}
