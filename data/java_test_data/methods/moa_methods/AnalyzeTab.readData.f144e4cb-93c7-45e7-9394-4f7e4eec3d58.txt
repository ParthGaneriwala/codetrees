public void readData(String path) {
    reset();
    this.jTextFieldResultsPath.setText(path);
    this.path = path;
    rf = new ReadFile(path);
    String str = rf.processFiles();
    if (str.equals("")) {
        int algSize = rf.getAlgShortNames().size();
        int streamSize = rf.getStream().size();
        this.measures = rf.getMeasures();
        for (int i = 0; i < algSize; i++) {
            this.algoritmModel.addRow(new Object[] { rf.getAlgNames().get(i), rf.getAlgShortNames().get(i) });
        }
        for (int i = 0; i < streamSize; i++) {
            this.streamModel.addRow(new Object[] { rf.getStream().get(i), rf.getStream().get(i) });
        }
        String[] measuresNames = measures.getFirst().split(",");
        for (String measuresName : measuresNames) {
            jComboBoxMeasure.addItem(measuresName);
            if (measuresName.equals("classifications correct (percent)") == true || measuresName.equals("[avg] classifications correct (percent)") == true) {
                jComboBoxMeasure.setSelectedItem(measuresName);
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, str, "Error", JOptionPane.ERROR_MESSAGE);
    }
}
