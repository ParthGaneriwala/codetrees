void pivot_mb(int i) {
    int t = 1;
    mtf_mb(t);
    double max_e = 0.0, old_sqr_r = -1;
    pvt pivot = new pvt();
    do {
        max_e = max_excess(t, i, pivot);
        if (max_e > 0) {
            t = support_end;
            if (t == pivot.getVal()) {
                ++t;
            }
            old_sqr_r = B.squared_radius();
            double[] sp = (double[]) L.get(pivot.getVal());
            B.push(sp);
            mtf_mb(support_end);
            B.pop();
            move_to_front(pivot.getVal());
        }
    } while ((max_e > 0) && (B.squared_radius() > old_sqr_r));
}
