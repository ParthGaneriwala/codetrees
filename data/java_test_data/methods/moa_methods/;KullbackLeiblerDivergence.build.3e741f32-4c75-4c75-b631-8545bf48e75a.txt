@Override
public void build(Dataset data) {
    maxDivergence = new double[data.noAttributes()];
    /* Normalize to [0,100[ */
    NormalizeMidrange nm = new NormalizeMidrange(bins / 2, bins - 0.000001);
    nm.build(data);
    nm.filter(data);
    /* Calculate all pairwise divergencies */
    for (Object p : data.classes()) {
        for (Object q : data.classes()) {
            if (!p.equals(q)) {
                double[] d = pairWise(p, q, data);
                pairWiseDivergence.put(p, q, d);
            }
        }
    }
    /* Search for maximum pairwise divergencies */
    for (Object p : data.classes()) {
        for (Object q : data.classes()) {
            double[] d = pairWiseDivergence.get(p, q);
            if (d != null) {
                for (int i = 0; i < d.length; i++) {
                    if (d[i] > maxDivergence[i])
                        maxDivergence[i] = d[i];
                }
            }
        }
    }
}
