@Override
public Clustering getClusteringResult() {
    if (!this.initialized) {
        return new Clustering();
    }
    Clustering clustering = new Clustering();
    if (!evaluateOption.isSet()) {
        Point[] streamingCoreset = manager.getCoresetFromManager(dimension);
        // compute 5 clusterings of the coreset with kMeans++ and take the best
        CoresetCostTriple triple;
        double minCost = 0.0;
        double curCost = 0.0;
        triple = lloydPlusPlus(numberOfCentres, coresetsize, dimension, streamingCoreset);
        minCost = triple.getCoresetCost();
        for (int j = 0; j < this.numberOfCentres; j++) {
            centresStreamingCoreset[j] = triple.getCoresetCentres()[j].clone();
        }
        curCost = minCost;
        for (int i = 1; i < 5; i++) {
            triple = lloydPlusPlus(numberOfCentres, coresetsize, dimension, streamingCoreset);
            curCost = triple.getCoresetCost();
            if (curCost < minCost) {
                minCost = curCost;
                for (int j = 0; j < this.numberOfCentres; j++) {
                    centresStreamingCoreset[j] = triple.getCoresetCentres()[j].clone();
                }
            }
        }
        for (int i = 0; i < centresStreamingCoreset.length; i++) {
            if (centresStreamingCoreset[i] != null) {
                clustering.add(centresStreamingCoreset[i].toCluster(triple.getRadii()[i]));
            }
        }
    }
    return clustering;
}
