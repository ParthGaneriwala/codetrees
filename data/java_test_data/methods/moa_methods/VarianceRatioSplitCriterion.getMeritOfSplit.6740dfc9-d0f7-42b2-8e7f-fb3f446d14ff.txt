@Override
public double getMeritOfSplit(double[] preSplitDist, double[][] postSplitDists) {
    double N = preSplitDist[0];
    int count = 0;
    for (int i = 0; i < postSplitDists.length; i++) {
        double Ni = postSplitDists[i][0];
        if (Ni >= 0.05 * preSplitDist[0]) {
            count = count + 1;
        }
    }
    if (count == postSplitDists.length) {
        double SDR = VarianceReductionSplitCriterion.computeSD(preSplitDist);
        double sumPostSDR = 0;
        for (int i = 0; i < postSplitDists.length; i++) {
            double Ni = postSplitDists[i][0];
            sumPostSDR += (Ni / N) * VarianceReductionSplitCriterion.computeSD(postSplitDists[i]);
        // sumPostSDR += VarianceReductionSplitCriterion.computeSD(postSplitDists[i]);
        }
        // SDR=1-(sumPostSDR)/SDR;
        return (1 - (sumPostSDR / postSplitDists.length) / SDR);
    } else
        return -Double.MAX_VALUE;
}
