@Override
public Prediction computeWeightedVote() {
    int n = votes.size();
    if (n > 0) {
        int numOutputs = outputAttributesCount.length;
        weights = new double[n][numOutputs];
        weightedVote = new MultiLabelPrediction(numOutputs);
        // For each output attribute
        for (int o = 0; o < numOutputs; o++) {
            // For each vote
            for (int i = 0; i < n; i++) {
                if (votes.get(i).hasVotesForAttribute(o)) {
                    // set as weighted vote and set weight to 1
                    weights[i][o] = 1;
                    /*for(int j=0; j<numClasses; j++){
							weightedVote.setVote(o, j, votes.get(i).getVote(o, j));
						}*/
                    weightedVote.setVotes(o, votes.get(i).getVotes(o));
                    break;
                }
            }
        }
    }
    return weightedVote;
}
