@Override
protected void ProcessNewStreamObj(Instance inst) {
    if (bShowProgress)
        ShowProgress("Processed " + objId + " stream objects.");
    // PrintInstance(inst);
    double[] values = getInstanceValues(inst);
    StreamObj obj = new StreamObj(values);
    if (bTrace)
        Println("\n- - - - - - - - - - - -\n");
    // create new ISB node
    ISBNodeExact nodeNew = new ISBNodeExact(inst, obj, objId, m_k);
    if (bTrace) {
        Print("New obj: ");
        PrintNode(nodeNew);
    }
    // update object identifier
    objId++;
    // delete a node if it has expired
    DeleteExpiredNode();
    // init nodeNew
    nodeNew.count_after = 1;
    // perform range query search
    if (bTrace)
        Println("Perform range query seach:");
    nRangeQueriesExecuted++;
    Vector<ISBIndex.ISBSearchResult> nodes = ISB.RangeSearch(nodeNew, m_radius);
    // process each returned node
    for (ISBSearchResult res : nodes) {
        ISBNodeExact n = (ISBNodeExact) res.node;
        if (bTrace) {
            Printf("   Found at d=%.2f: ", res.distance);
            PrintNode(res.node);
        }
        n.count_after++;
        nodeNew.AddPrecNeigh(res.node.id);
    }
    if (bTrace)
        Println("Insert new node to ISB.");
    ISB.Insert(nodeNew);
    // insert node at window
    windowNodes.add(nodeNew);
    if (bTrace)
        PrintWindow();
    if (CanSearch()) {
        // invoke query function to detect outliers
        SearchOutliers();
    } else {
        // update statistics outlierness of new node
        UpdateNodeStatistics(nodeNew);
    }
}
