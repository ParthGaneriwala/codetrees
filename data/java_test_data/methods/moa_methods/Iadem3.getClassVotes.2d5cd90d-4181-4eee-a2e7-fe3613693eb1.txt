@Override
public double[] getClassVotes(Instance observacion) {
    double[] classDist = this.leaf.getClassVotes(observacion);
    double thisError = this.estimator.getEstimation();
    double leafError = this.leaf.estimator.getEstimation();
    int childIndex = instanceChildIndex(observacion);
    if (childIndex >= 0 && thisError < leafError) {
        Node hijo = getChild(childIndex);
        classDist = hijo.getClassVotes(observacion);
    }
    for (Iadem3Subtree subtree : this.alternativeTree) {
        double[] tmp = subtree.getClassVotes(observacion);
        double altWeight = 1.0 - subtree.estimacionValorMedio();
        for (int j = 0; j < classDist.length; j++) {
            classDist[j] = classDist[j] + tmp[j] * altWeight;
        }
    }
    return classDist;
}
