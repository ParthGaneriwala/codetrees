public InstanceExample nextInstance() {
    numGeneratedInstances++;
    eventScheduler();
    // make room for the classlabel
    // +1
    double[] values_new = new double[numAttsOption.getValue() + 1];
    double[] values = null;
    int clusterChoice = -1;
    if (instanceRandom.nextDouble() > noiseLevelOption.getValue()) {
        clusterChoice = chooseWeightedElement();
        values = kernels.get(clusterChoice).generator.sample(instanceRandom).toDoubleArray();
    } else {
        // get ranodm noise point
        values = getNoisePoint();
    }
    if (Double.isNaN(values[0])) {
        System.out.println("Instance corrupted:" + numGeneratedInstances);
    }
    // System.arraycopy(values, 0, values_new, 0, values.length);
    System.arraycopy(values, 0, values_new, 0, values.length);
    Instance inst = new DenseInstance(1.0, values_new);
    inst.setDataset(getHeader());
    if (clusterChoice == -1) {
        // 2013/06/02 (Yunsu Kim)
        // Noise instance has the last class value instead of "-1"
        // Preventing ArrayIndexOutOfBoundsException in WriteStreamToARFFFile
        inst.setClassValue(numClusterOption.getValue());
    } else {
        inst.setClassValue(kernels.get(clusterChoice).generator.getId());
        // Do we need micro cluster representation if have overlapping clusters?
        // if(!overlappingOption.isSet())
        kernels.get(clusterChoice).addInstance(inst);
    }
    return new InstanceExample(inst);
}
