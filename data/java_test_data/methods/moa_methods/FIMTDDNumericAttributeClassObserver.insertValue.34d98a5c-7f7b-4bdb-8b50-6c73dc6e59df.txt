public void insertValue(double val, double label, double weight) {
    // the left (<=) node information
    if (val == this.cut_point) {
        this.leftStatistics.addToValue(0, 1);
        this.leftStatistics.addToValue(1, label);
        this.leftStatistics.addToValue(2, label * label);
    } else // If no left child exists, create one
    if (val <= this.cut_point) {
        this.leftStatistics.addToValue(0, 1);
        this.leftStatistics.addToValue(1, label);
        this.leftStatistics.addToValue(2, label * label);
        if (this.left == null) {
            this.left = new Node(val, label, weight);
        } else {
            this.left.insertValue(val, label, weight);
        }
    } else // If the new value is greater than the value in a node, update the
    // right (>) distribution and send the value down to the right child node.
    // If no right child exists, create one
    {
        // val > cut_point
        this.rightStatistics.addToValue(0, 1);
        this.rightStatistics.addToValue(1, label);
        this.rightStatistics.addToValue(2, label * label);
        if (this.right == null) {
            this.right = new Node(val, label, weight);
        } else {
            this.right.insertValue(val, label, weight);
        }
    }
}
