public void drop(JComponent s, int x, int y) {
    DockNode src, dst, dparent, sparent, gparent;
    int region, index;
    boolean c1, c2, c3, c4;
    src = this.findComponent(s);
    dst = this.getLeafAtPoint(x, y);
    /*
         * Drop point could be at a splitter in which case the dst node would be
         * null. Bail.
         */
    if (dst == null || src == null)
        return;
    sparent = src.getParent();
    dparent = dst.getParent();
    if (dst != null && dst != src && dparent != null) {
        region = dst.getPointRegion(x - dst.x, y - dst.y);
        /*
             * First take care of the special case if the src and dst are
             * the only children of the same parent and the src->dst drop 
             * would result in collapse of src and dst into grandparent.
             */
        c1 = (sparent == dparent);
        c2 = (dparent.children.size() == 2);
        c3 = (dparent.orientation == Dock.DOCK_H && (region == DockNode.DOCKNODE_LEFT || (region == DockNode.DOCKNODE_RIGHT)));
        c4 = (dparent.orientation == Dock.DOCK_V && (region == DockNode.DOCKNODE_TOP || (region == DockNode.DOCKNODE_BOTTOM)));
        if (c1 && c2 && (c3 || c4)) {
            gparent = sparent.getParent();
            if (gparent != null) {
                this.remove(src, 0);
                index = gparent.children.indexOf(dparent);
                if (c3) {
                    if (region == DockNode.DOCKNODE_LEFT) {
                        this.insert(src, gparent, index, 0, true);
                    } else if (region == DockNode.DOCKNODE_RIGHT) {
                        this.insert(src, gparent, index, 1, true);
                    }
                } else if (c4) {
                    if (region == DockNode.DOCKNODE_TOP) {
                        this.insert(src, gparent, index, 0, true);
                    } else if (region == DockNode.DOCKNODE_BOTTOM) {
                        this.insert(src, gparent, index, 1, true);
                    }
                }
            } else {
                // TODO:
                System.out.println("TODO");
            }
        } else if (dparent.orientation == Dock.DOCK_H) {
            if (region == DockNode.DOCKNODE_RIGHT) {
                this.remove(src, 0);
                this.insert(src, dst, 0, 1, true);
            } else if (region == DockNode.DOCKNODE_LEFT) {
                this.remove(src, 0);
                this.insert(src, dst, 0, 0, true);
            } else if (region == DockNode.DOCKNODE_TOP) {
                this.remove(src, 0);
                if (c1 == false) {
                    /*
                         * If the sparent and dparent *before* remove() were 
                         * different, then there's possibility that dparent 
                         * has changed due to the remove() call. Recalculate 
                         * the dst parent again here to be safe. Same logic 
                         * applies to more cases below (not commented)
                         */
                    dparent = dst.getParent();
                }
                index = dparent.children.indexOf(dst);
                this.insert(src, dparent, index, 0, true);
            } else if (region == DockNode.DOCKNODE_BOTTOM) {
                this.remove(src, 0);
                if (!c1)
                    dparent = dst.getParent();
                index = dparent.children.indexOf(dst);
                this.insert(src, dparent, index, 1, true);
            }
        } else if (dparent.orientation == Dock.DOCK_V) {
            if (region == DockNode.DOCKNODE_TOP) {
                this.remove(src, 0);
                this.insert(src, dst, 0, 0, true);
            } else if (region == DockNode.DOCKNODE_BOTTOM) {
                this.remove(src, 0);
                this.insert(src, dst, 0, 1, true);
            } else if (region == DockNode.DOCKNODE_LEFT) {
                this.remove(src, 0);
                if (!c1)
                    dparent = dst.getParent();
                index = dparent.children.indexOf(dst);
                this.insert(src, dparent, index, 0, true);
            } else if (region == DockNode.DOCKNODE_RIGHT) {
                this.remove(src, 0);
                if (!c1)
                    dparent = dst.getParent();
                index = dparent.children.indexOf(dst);
                this.insert(src, dparent, index, 1, true);
            }
        }
    }
    this.preview.paint = false;
    this.sync();
    this.repaint();
}
