private void createDefaultActions(File[] files) {
    try {
        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
        DocumentBuilder db = dbf.newDocumentBuilder();
        Document doc;
        Element actions_list, action, name;
        NodeList actions, worldNodeList, repNodeList;
        StringFunction worldFunc, repFunc;
        // , j, k;//"j" or "k" is never read
        int i;
        for (File file : files) {
            if (!file.exists()) {
                myLogger.message("ActionFactory cannot find file: " + file + "\n", true);
                continue;
            }
            doc = db.parse(file);
            actions_list = (Element) doc.getElementsByTagName("actions").item(0);
            actions = actions_list.getElementsByTagName("action");
            for (i = actions.getLength() - 1; i >= 0; i--) {
                action = (Element) actions.item(i);
                name = (Element) action.getElementsByTagName("name").item(0);
                worldNodeList = action.getElementsByTagName("inworld");
                if (worldNodeList.getLength() == 0)
                    worldFunc = null;
                else
                    worldFunc = new StringFunction((Element) worldNodeList.item(0));
                repNodeList = action.getElementsByTagName("inrepresentation");
                if (repNodeList.getLength() == 0)
                    repFunc = null;
                else
                    repFunc = new StringFunction((Element) repNodeList.item(0));
                defaultActions.put(name.getTextContent(), new Action(name.getTextContent(), worldFunc, repFunc));
            }
        }
        if (defaultActions.isEmpty()) {
            myLogger.message("ActionFactory found no actions... You can't play a game without actions!\n", true);
            System.exit(1);
        }
        // iterate through hashmap to create our array...
        defaultActionKeys = new String[] { "" };
        defaultActionKeys = defaultActions.keySet().toArray(defaultActionKeys);
        Arrays.sort(defaultActionKeys);
        for (i = 0; i < defaultActionKeys.length; i++) {
            defaultActions.get(defaultActionKeys[i]).setId(i + 1);
        }
    } catch (// better error reporting!
    Exception e) {
        myLogger.message("Failed to read input files! : " + e.getMessage() + " :\n", true);
        e.printStackTrace();
    }
}
