private void renderAnnoAnterior(VerticalPanelLimitado vpAnnosAnteriores, final Tipo tipo) {
    String urlImgNoSel = tipo.getImgLogo();
    String urlSel = "SEL_" + urlImgNoSel;
    ImagenMenu img = new ImagenMenu(urlImgNoSel, urlSel);
    vpAnnosAnteriores.add(img);
    String palmares = tipo.getPalmares();
    StringBuffer sb = new StringBuffer(palmares);
    int n = sb.indexOf("·");
    if (n > -1) {
        sb.replace(n, n + 1, "<li>");
        sb.insert(n, "<ul style='list-style-type: circle;'>");
        sb.append("</li></ul>");
        palmares = sb.toString().replaceAll("·", "</li><li>");
    }
    String html = Format.substitute(tipo.getTxt().replaceFirst("\\{0\\}", "<b style='color: red; font-size: 14px;'>{0}</b>"), tipo.getNombre()) + "<br/><br/>" + palmares + "<br/><br/><img src='datos/annosAnteriores/" + tipo.getAnno() + ".png' style='padding: 10px;'/>";
    String title = Format.substitute("<b style='font-size: 14px;'>Año {0}:</b><br/><br/>", tipo.getAnno());
    ToolTipConfig config = new ToolTipConfig(title, html);
    config.setAutoHide(true);
    config.setDismissDelay(0);
    config.setAnchor("left");
    config.setAnchorOffset(100);
    config.setMouseOffset(new int[] { 20, -50 });
    config.setTrackMouse(true);
    config.setShowDelay(1000);
    final ToolTipWidget toolTip = new ToolTipWidget(img, config);
    img.addClickHandler(new ClickHandler() {

        @Override
        public void onClick(ClickEvent event) {
            toolTip.hide();
            onMenuSeleccionado(Seccion.FOTOS, tipo.getAnno(), null);
        }
    });
}
