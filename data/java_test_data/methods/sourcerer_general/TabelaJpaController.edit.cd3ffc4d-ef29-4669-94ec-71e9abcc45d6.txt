public void edit(Tabela tabela) throws NonexistentEntityException, Exception {
    EntityManager em = null;
    try {
        em = getEntityManager();
        em.getTransaction().begin();
        Tabela persistentTabela = em.find(Tabela.class, tabela.getId());
        Set<Item> itensOld = persistentTabela.getItens();
        Set<Item> itensNew = tabela.getItens();
        Set<Item> attachedItensNew = new HashSet<Item>();
        for (Item itensNewItemToAttach : itensNew) {
            itensNewItemToAttach = em.getReference(itensNewItemToAttach.getClass(), itensNewItemToAttach.getId());
            attachedItensNew.add(itensNewItemToAttach);
        }
        itensNew = attachedItensNew;
        tabela.setItens(itensNew);
        tabela = em.merge(tabela);
        for (Item itensOldItem : itensOld) {
            if (!itensNew.contains(itensOldItem)) {
                itensOldItem.setTabela(null);
                itensOldItem = em.merge(itensOldItem);
            }
        }
        for (Item itensNewItem : itensNew) {
            if (!itensOld.contains(itensNewItem)) {
                Tabela oldTabelaOfItensNewItem = itensNewItem.getTabela();
                itensNewItem.setTabela(tabela);
                itensNewItem = em.merge(itensNewItem);
                if (oldTabelaOfItensNewItem != null && !oldTabelaOfItensNewItem.equals(tabela)) {
                    oldTabelaOfItensNewItem.getItens().remove(itensNewItem);
                    oldTabelaOfItensNewItem = em.merge(oldTabelaOfItensNewItem);
                }
            }
        }
        em.getTransaction().commit();
    } catch (Exception ex) {
        String msg = ex.getLocalizedMessage();
        if (msg == null || msg.length() == 0) {
            long id = tabela.getId();
            if (findTabela(id) == null) {
                throw new NonexistentEntityException("The tabela with id " + id + " no longer exists.");
            }
        }
        throw ex;
    } finally {
        if (em != null) {
            em.close();
        }
    }
}
