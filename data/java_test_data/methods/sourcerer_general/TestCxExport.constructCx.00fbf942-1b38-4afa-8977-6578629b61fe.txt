private final void constructCx(final ICxExporter exporter) {
    // Component name.
    exporter.setName("PeriodicPrinter");
    // Activation order.
    exporter.setActivation(new CxUnit[] { new CxUnit("com.compunit.composite.test.unit.Stamper", "Stamper"), new CxUnit("com.compunit.composite.test.unit.RedPrinter", "RedPrinter"), new CxUnit("com.compunit.composite.test.unit.BlackPrinter", "BlackPrinter"), new CxUnit("com.compunit.composite.test.unit.Driver", null) });
    // Add exposed provided interface mapping.
    final CxMapping mp = new CxMapping(true);
    mp.setInterface("com.compunit.composite.test.unit.interfaces.IPrinter");
    mp.addClass("com.compunit.composite.test.unit.BlackPrinter");
    mp.addClass("com.compunit.composite.test.unit.RedPrinter");
    exporter.addMapping(mp);
    // Add exposed required interface mapping.
    final CxMapping mr = new CxMapping(false);
    mr.setInterface("com.compunit.composite.test.unit.interfaces.IStamper");
    mr.addClass("com.compunit.composite.test.unit.BlackPrinter");
    mr.addClass("com.compunit.composite.test.unit.RedPrinter");
    exporter.addMapping(mr);
    // Stamper to red printer binding.
    final CxBinding b1 = new CxBinding();
    b1.setProvider("com.compunit.composite.test.unit.Stamper");
    b1.setConsumer("com.compunit.composite.test.unit.RedPrinter");
    exporter.addBinding(b1);
    // Stamper to black printer binding.
    final CxBinding b2 = new CxBinding();
    b2.setProvider("com.compunit.composite.test.unit.Stamper");
    b2.setConsumer("com.compunit.composite.test.unit.BlackPrinter");
    exporter.addBinding(b2);
    // Red printer to driver binding.
    final CxBinding b3 = new CxBinding();
    b3.setProvider("com.compunit.composite.test.unit.RedPrinter");
    b3.setConsumer("com.compunit.composite.test.unit.Driver");
    exporter.addBinding(b3);
    // Black printer to driver binding.
    final CxBinding b4 = new CxBinding();
    b4.setProvider("com.compunit.composite.test.unit.BlackPrinter");
    b4.setConsumer("com.compunit.composite.test.unit.Driver");
    exporter.addBinding(b4);
}
