private int[] addDuration(int[] date, int index, int[] duration) {
    // REVISIT: some code could be shared between normalize() and this method,
    // however is it worth moving it? The structures are different...
    // 
    resetDateObj(duration);
    // add months (may be modified additionaly below)
    int temp = DATETIMES[index][M] + date[M];
    duration[M] = modulo(temp, 1, 13);
    int carry = fQuotient(temp, 1, 13);
    // add years (may be modified additionaly below)
    duration[CY] = DATETIMES[index][CY] + date[CY] + carry;
    // add seconds
    temp = DATETIMES[index][s] + date[s];
    carry = fQuotient(temp, 60);
    duration[s] = mod(temp, 60, carry);
    // add minutes
    temp = DATETIMES[index][m] + date[m] + carry;
    carry = fQuotient(temp, 60);
    duration[m] = mod(temp, 60, carry);
    // add hours
    temp = DATETIMES[index][h] + date[h] + carry;
    carry = fQuotient(temp, 24);
    duration[h] = mod(temp, 24, carry);
    duration[D] = DATETIMES[index][D] + date[D] + carry;
    while (true) {
        temp = maxDayInMonthFor(duration[CY], duration[M]);
        if (duration[D] < 1) {
            // original duration was negative
            duration[D] = duration[D] + maxDayInMonthFor(duration[CY], duration[M] - 1);
            carry = -1;
        } else if (duration[D] > temp) {
            duration[D] = duration[D] - temp;
            carry = 1;
        } else {
            break;
        }
        temp = duration[M] + carry;
        duration[M] = modulo(temp, 1, 13);
        duration[CY] = duration[CY] + fQuotient(temp, 1, 13);
    }
    duration[utc] = 'Z';
    return duration;
}
