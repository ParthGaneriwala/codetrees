public static void main(String[] Args) {
    String DriverName = "";
    String DBUrl = "";
    String DBUser = "";
    String DBPassword = "";
    boolean initialize_dataset = true;
    for (int i = 0; i < Args.length; i++) {
        if (Args[i].equals("-clients")) {
            if (i + 1 < Args.length) {
                i++;
                n_clients = Integer.parseInt(Args[i]);
            }
        } else if (Args[i].equals("-driver")) {
            if (i + 1 < Args.length) {
                i++;
                DriverName = Args[i];
                if (DriverName.equals("com.borland.datastore.jdbc.DataStoreDriver")) {
                }
                if (DriverName.equals("com.mckoi.JDBCDriver")) {
                    ShutdownCommand = "SHUTDOWN";
                }
                if (DriverName.equals("org.hsqldb.jdbc.JDBCDriver") || DriverName.equals("org.hsqldb.jdbcDriver")) {
                }
            }
        } else if (Args[i].equals("-url")) {
            if (i + 1 < Args.length) {
                i++;
                DBUrl = Args[i];
            }
        } else if (Args[i].equals("-user")) {
            if (i + 1 < Args.length) {
                i++;
                DBUser = Args[i];
            }
        } else if (Args[i].equals("-password")) {
            if (i + 1 < Args.length) {
                i++;
                DBPassword = Args[i];
            }
        } else if (Args[i].equals("-tpc")) {
            if (i + 1 < Args.length) {
                i++;
                n_txn_per_client = Integer.parseInt(Args[i]);
            }
        } else if (Args[i].equals("-init")) {
            initialize_dataset = true;
        } else if (Args[i].equals("-tps")) {
            if (i + 1 < Args.length) {
                i++;
                tps = Integer.parseInt(Args[i]);
            }
        } else if (Args[i].equals("-v")) {
            verbose = true;
        }
    }
    if (DriverName.length() == 0 || DBUrl.length() == 0) {
        System.out.println("usage: java TestBench -driver [driver_class_name] -url [url_to_db] -user [username] -password [password] [-v] [-init] [-tpc n] [-clients n]");
        System.out.println();
        System.out.println("-v          verbose error messages");
        System.out.println("-init       initialize the tables");
        System.out.println("-tpc        transactions per client");
        System.out.println("-clients    number of simultaneous clients");
        System.exit(-1);
    }
    System.out.println("*********************************************************");
    System.out.println("* TestBench v1.1                                        *");
    System.out.println("*********************************************************");
    System.out.println();
    System.out.println("Driver: " + DriverName);
    System.out.println("URL:" + DBUrl);
    System.out.println();
    System.out.println("Scale factor value: " + tps);
    System.out.println("Number of clients: " + n_clients);
    System.out.println("Number of transactions per client: " + n_txn_per_client);
    System.out.println();
    try {
        Class.forName(DriverName);
        TestBench Me = new TestBench(DBUrl, DBUser, DBPassword, initialize_dataset);
    } catch (Exception E) {
        System.out.println(E.getMessage());
        E.printStackTrace();
    }
}
