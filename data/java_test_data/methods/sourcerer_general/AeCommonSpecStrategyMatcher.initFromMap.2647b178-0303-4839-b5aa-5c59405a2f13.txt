protected void initFromMap() {
    // simple or complex type variable
    AeFromSpec fromSpec = new AeFromSpec();
    fromSpec.set(AeFromSpec.VARIABLE_TYPE);
    add(fromSpec, IAeFromStrategyKeys.KEY_FROM_VARIABLE_TYPE);
    // variable message part
    fromSpec = new AeFromSpec();
    fromSpec.set(AeFromSpec.VARIABLE_MESSAGE);
    fromSpec.set(AeFromSpec.PART);
    add(fromSpec, IAeFromStrategyKeys.KEY_FROM_VARIABLE_MESSAGE_PART);
    // whole message variable
    fromSpec = new AeFromSpec();
    fromSpec.set(AeFromSpec.VARIABLE_MESSAGE);
    add(fromSpec, IAeFromStrategyKeys.KEY_FROM_VARIABLE_MESSAGE);
    // variable element
    fromSpec = new AeFromSpec();
    fromSpec.set(AeFromSpec.VARIABLE_ELEMENT);
    add(fromSpec, IAeFromStrategyKeys.KEY_FROM_VARIABLE_ELEMENT);
    // message variable w/ property
    fromSpec = new AeFromSpec();
    fromSpec.set(AeFromSpec.VARIABLE_MESSAGE);
    fromSpec.set(AeFromSpec.PROPERTY);
    add(fromSpec, IAeFromStrategyKeys.KEY_FROM_PROPERTY_MESSAGE);
    // partnerlink with endpointreference for myRole or partnerRole
    fromSpec = new AeFromSpec();
    fromSpec.set(AeFromSpec.PARTNERLINK);
    fromSpec.set(AeFromSpec.ENDPOINTREFERENCE);
    add(fromSpec, IAeFromStrategyKeys.KEY_FROM_PARTNER_LINK);
    // literal
    fromSpec = new AeFromSpec();
    fromSpec.set(AeFromSpec.LITERAL);
    add(fromSpec, IAeFromStrategyKeys.KEY_FROM_LITERAL);
    // expression
    fromSpec = new AeFromSpec();
    fromSpec.set(AeFromSpec.EXPRESSION);
    add(fromSpec, IAeFromStrategyKeys.KEY_FROM_EXPRESSION);
    // variable / message / part / query
    fromSpec = new AeFromSpec();
    fromSpec.set(AeFromSpec.VARIABLE_MESSAGE);
    fromSpec.set(AeFromSpec.PART);
    fromSpec.set(AeFromSpec.QUERY);
    add(fromSpec, IAeFromStrategyKeys.KEY_FROM_VARIABLE_MESSAGE_PART_QUERY);
    // variable / element / query
    fromSpec = new AeFromSpec();
    fromSpec.set(AeFromSpec.VARIABLE_ELEMENT);
    fromSpec.set(AeFromSpec.QUERY);
    add(fromSpec, IAeFromStrategyKeys.KEY_FROM_VARIABLE_ELEMENT_QUERY);
}
