public void showShell() {
    String command = "";
    CommandLineParser parser = new PosixParser();
    CommandLine cmd = null;
    String[] a = {};
    cleverConsole.addCompletor(new SimpleCompletor(commands.keySet().toArray(a)));
    try {
        command = cleverConsole.readLine(prompt);
        if (command == null)
            return;
        do {
            if (command.isEmpty()) {
                continue;
            }
            cleverConsoleHistory.addToHistory(command);
            CleverCommand cleverCommand;
            try {
                if (command.equals("exit"))
                    return;
                cleverCommand = (CleverCommand) classFromCommand(command).newInstance();
                cmd = parser.parse(cleverCommand.getOptions(), command.split(" "));
                cleverCommand.exec(cmd);
            } catch (ParseException ex) {
                logger.error(ex);
                System.out.println("Command not found");
            } catch (ClassNotFoundException ex) {
                logger.error(ex);
                System.out.println("Command not found");
            } catch (IllegalAccessException ex) {
                logger.error(ex);
                System.out.println("Command error");
            } catch (InstantiationException ex) {
                logger.error(ex);
                System.out.println("Command error");
            }
            command = cleverConsole.readLine(prompt);
        } while (command != null);
    } catch (IOException ex) {
        logger.error("Shell IO Error: " + ex);
        System.exit(1);
    }
}
