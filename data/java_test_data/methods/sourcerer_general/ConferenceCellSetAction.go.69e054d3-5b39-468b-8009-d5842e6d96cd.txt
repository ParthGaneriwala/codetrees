@Override
protected String go() throws Exception {
    BasicSetService setservice = (BasicSetService) this.getBean("basicSetService");
    setservice.getAllSets();
    CellConferenceService service = (CellConferenceService) this.getBean("cellConferenceService");
    try {
        if (isdelete == 0) {
            int idx = cellkey.indexOf("-");
            String cellid = cellkey.substring(idx + 1);
            String lac = cellkey.substring(0, idx);
            if (!BasicSetService.ALL_CELLS.containsKey(cellkey)) {
                isok = "2";
            } else {
                if (service.isExistCell(cellid, lac)) {
                    isok = "4";
                } else {
                    service.saveConferenceCell(cellid, lac, userview, flowview, timeview1, timeview2, this.getLoginUser());
                    isok = "1";
                }
            }
        } else if (isdelete == 1) {
            StringTokenizer st = new StringTokenizer(cellkey, ",");
            while (st.hasMoreTokens()) {
                String str = st.nextToken();
                int idx = str.indexOf("-");
                String cellid1 = str.substring(idx + 1);
                String lac1 = str.substring(0, idx);
                _LOG.debug("cellid1" + cellid1);
                service.deleteConferenceCell(cellid1, lac1);
            }
            isok = "1";
        } else if (isdelete == 2) {
            // 修改时间点信息等
            int idx = cellkey.indexOf("-");
            String cellid1 = cellkey.substring(idx + 1);
            String lac1 = cellkey.substring(0, idx);
            _LOG.debug("cellid1" + cellid1);
            service.updateConferenceCell(cellid1, lac1, userview, flowview, timeview1, timeview2);
            isok = "1";
        }
        service.getAllConferenceCell(true);
    } catch (Exception e) {
        isok = "3";
        _LOG.error("监控会议小区设置错误", e);
    }
    return SUCCESS;
}
