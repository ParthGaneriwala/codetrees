public void envia_mensagem(ServiceRecord r, String msg, String addr) {
    escreveSaida("--------------------------------------------------------------------------------------");
    escreveSaida("Enviando Mensagem para Servidor");
    // Obt�m a URL para o servi�o serial do Servidor
    String url = r.getConnectionURL(ServiceRecord.NOAUTHENTICATE_NOENCRYPT, false);
    escreveSaida("URL do Servidor:" + url);
    try {
        // Obt�m a conex�o e o "stream" para este servi�o
        StreamConnection con = (StreamConnection) Connector.open(url);
        escreveSaida("-> Conectado ao Servidor ");
        escreveSaida("-> Enviando  '" + msg + "'");
        escreveSaida("-> Enviando  '" + addr + "'");
        DataOutputStream saida = con.openDataOutputStream();
        // Grava dados no "Stream Serial", s�o gravados uma Mensagem e o endere�o
        // MAC de origem do Cliente, a id�ia � simular uma comunica��o SYN->ACK
        saida.writeUTF(msg);
        saida.writeUTF(addr);
        saida.flush();
        escreveSaida("Finalizou Envio Dados SYN OK");
        // � definido um tempo para aguardar o retorno do servidor, na verdade este
        // tempo n�o � vital se estivermos falando de uma conex�o somente.
        Thread.sleep(1000);
        // fecha o stream de saida que ser� enviado
        saida.close();
        // Agora aguardamos o retorno de resposta do servidor, s�o enviados pelo
        // servidor 2 retornos Endere�o MAC do Servidor e o ACK de resposta ao
        // SYN do cliente.
        DataInputStream in = con.openDataInputStream();
        String s = in.readUTF();
        String s1 = in.readUTF();
        escreveSaida("Retorno Servidor -> '" + s + "'");
        escreveSaida("Retorno Servidor -> '" + s1 + "'");
        escreveSaida("Finalizou Recebimento Dados ACK OK");
        con.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
}
