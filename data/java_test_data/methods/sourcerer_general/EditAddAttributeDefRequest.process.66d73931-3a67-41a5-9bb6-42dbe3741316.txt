public boolean process(Request req, ResponseGroup rg) throws ItemPersistenceException, StaleDataException, InvalidOperationException {
    if (!checkRequest(req)) {
        throw new InvalidOperationException("Invalid add_attribute operatin");
    }
    EditAddAttributeDefRequest r = (EditAddAttributeDefRequest) req;
    if (DaoUtil.getModelDao().getById(r.getModelId(), true) == null) {
        throw new InvalidOperationException("Invalid model ID: " + r.getModelId());
    }
    EntityType entp = DaoUtil.getEntityTypeDao().getById(r.getEntityTypeId(), true);
    if (entp == null) {
        throw new InvalidOperationException("Invalid entity type id: " + r.getEntityTypeId());
    }
    AttributeType a = null;
    if (r.getAttrId() != null && (a = DaoUtil.getAttributeDefDao().getById(r.getAttrId(), false)) != null) {
        // An editing operation
        a.setAttrName(r.getAttr());
        a.setLastModifier(r.getRequesterId());
        a = DaoUtil.getAttributeDefDao().save(a);
    } else {
        // An adding operation
        if (entp.findAttributeTypeDef(r.getAttr(), true) != null) {
            throw new InvalidOperationException("Attribute has already existed: " + r.getAttr());
        }
        a = createAttribute(r);
        a.setHostType(entp);
        a = DaoUtil.getAttributeDefDao().save(a);
        entp.getAttrDefs().add(a);
        DaoUtil.getEntityTypeDao().save(entp);
        r.setAttrId(a.getId());
    }
    DefaultResponse rsp = createResponse(r);
    rsp.setExecTime(DataItemUtil.formatDate(a.getLastModifyTime()));
    rsp.setName(Resources.RSP_SUCCESS);
    rg.setBack(rsp);
    DefaultResponse rsp2 = createResponse(r);
    rsp.setExecTime(DataItemUtil.formatDate(a.getLastModifyTime()));
    rsp2.setName(Resources.RSP_FORWARD);
    rg.setBroadcast(rsp2);
    return true;
}
