public void testGraphAddSize() {
    Graph g0 = graphWith("x p y");
    // disjoint with g0
    Graph g1 = graphWith("x p z; z p zz");
    // intersects with g1
    Graph g2 = graphWith("x p y; z p a");
    int s0 = g0.size();
    int s1 = g1.size();
    int s2 = g2.size();
    MultiUnion m0 = new MultiUnion(new Graph[] { g0 });
    assertEquals("Size of union of g0 not correct", s0, m0.size());
    m0.addGraph(g1);
    assertEquals("Size of union of g1 and g0 not correct", s0 + s1, m0.size());
    m0.addGraph(g2);
    assertEquals("Size of union of g0, g1 and g2 not correct", s0 + s1 + s2 - 1, m0.size());
    m0.removeGraph(g1);
    assertEquals("Size of union of g0 and g2 not correct", s0 + s2 - 1, m0.size());
    m0.removeGraph(g0);
    assertEquals("Size of union of g2 not correct", s2, m0.size());
    // remove again
    m0.removeGraph(g0);
    assertEquals("Size of union of g2 not correct", s2, m0.size());
    m0.removeGraph(g2);
    assertEquals("Size of empty union not correct", 0, m0.size());
}
