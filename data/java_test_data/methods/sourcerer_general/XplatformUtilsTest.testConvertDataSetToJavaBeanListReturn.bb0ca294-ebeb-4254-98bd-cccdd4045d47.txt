@Test
public void testConvertDataSetToJavaBeanListReturn() throws SecurityException, IllegalArgumentException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException {
    DataSet dataSet = new DataSet("testDataSet");
    dataSet.addColumn("field1", DataTypes.STRING);
    dataSet.addColumn("field2", DataTypes.INT);
    dataSet.addColumn("field3", DataTypes.BOOLEAN);
    dataSet.addColumn("field4", DataTypes.LONG);
    dataSet.addColumn("field5", DataTypes.FLOAT);
    dataSet.addColumn("field6", DataTypes.DOUBLE);
    dataSet.addColumn("field7", DataTypes.BIG_DECIMAL);
    dataSet.addColumn("field8", DataTypes.DATE);
    dataSet.addColumn("field9", DataTypes.TIME);
    dataSet.addColumn("field10", DataTypes.DATE_TIME);
    dataSet.addColumn("field11", DataTypes.BLOB);
    dataSet.newRow();
    dataSet.set(0, "field1", "value1");
    dataSet.set(0, "field2", Integer.MAX_VALUE);
    dataSet.set(0, "field3", false);
    dataSet.set(0, "field4", Long.MAX_VALUE);
    dataSet.set(0, "field5", Float.MAX_VALUE);
    dataSet.set(0, "field6", Double.MAX_VALUE);
    dataSet.set(0, "field7", BigDecimal.valueOf(Double.MAX_VALUE));
    dataSet.set(0, "field8", Calendar.getInstance().getTime());
    dataSet.set(0, "field9", Calendar.getInstance().getTime());
    dataSet.set(0, "field10", Calendar.getInstance().getTime());
    dataSet.set(0, "field11", (new String("field11")).getBytes());
    dataSet.newRow();
    dataSet.set(1, "field1", "value1");
    dataSet.set(1, "field2", Integer.MAX_VALUE);
    dataSet.set(1, "field3", false);
    dataSet.set(1, "field4", Long.MAX_VALUE);
    dataSet.set(1, "field5", Float.MAX_VALUE);
    dataSet.set(1, "field6", Double.MAX_VALUE);
    dataSet.set(1, "field7", BigDecimal.valueOf(Double.MAX_VALUE));
    dataSet.set(1, "field8", Calendar.getInstance().getTime());
    dataSet.set(1, "field9", Calendar.getInstance().getTime());
    dataSet.set(1, "field10", Calendar.getInstance().getTime());
    dataSet.set(1, "field11", (new String("field11")).getBytes());
    List<Object> testDTOList = XplatformUtils.convertDataSetToJavaBeanList(dataSet, TestDTO.class);
    logger.debug("list size: {}", testDTOList.size());
    for (Object testDTO : testDTOList) {
        logger.debug("testDTO: {}", testDTO);
    }
}
