private void buildSkillsPanel() {
    GridBagConstraints c = new GridBagConstraints();
    nameSet = new LinkedList<JLabel>();
    levelSet = new LinkedList<JLabel>();
    useSelfButtonSet = new LinkedList<JButton>();
    useOtherButtonSet = new LinkedList<JButton>();
    upButtonSet = new LinkedList<JButton>();
    SkillsProxy myProxy = myCharacter.getMySkills();
    rangedSkillSet = myProxy.getRangedSkills();
    nonrangedSkillSet = myProxy.getNonRangedSkills();
    passiveSkillSet = myProxy.getPassiveSkills();
    int currentRow = 0;
    int rangedSize = rangedSkillSet.size();
    int nonrangedSize = nonrangedSkillSet.size();
    int passiveSize = passiveSkillSet.size();
    // TODO: change this based on updated skill thingie
    for (PassiveSkill s : passiveSkillSet) {
        nameSet.add(textLabel(s.getName(), Color.BLACK, 12));
        levelSet.add(levelLabel(s.getPointsAllocated()));
        JButton temp = upgradeButton(s);
        temp.setFocusable(false);
        upButtonSet.add(temp);
    }
    for (NonRangedActiveSkill s : nonrangedSkillSet) {
        nameSet.add(textLabel(s.getName(), Color.BLACK, 12));
        levelSet.add(levelLabel(s.getPointsAllocated()));
        JButton temp = upgradeButton(s);
        temp.setFocusable(false);
        upButtonSet.add(temp);
        temp = useSelfButton(s);
        temp.setFocusable(false);
        useSelfButtonSet.add(temp);
        temp = useOtherButton(s);
        temp.setFocusable(false);
        useOtherButtonSet.add(temp);
    }
    for (RangedActiveSkill s : rangedSkillSet) {
        nameSet.add(textLabel(s.getName(), Color.BLACK, 12));
        levelSet.add(levelLabel(s.getPointsAllocated()));
        JButton temp = upgradeButton(s);
        temp.setFocusable(false);
        upButtonSet.add(temp);
        temp = useOtherButton(s);
        temp.setFocusable(false);
        useOtherButtonSet.add(temp);
    }
    int i = passiveSize;
    for (int a = 0; a < i; ++a) {
        c.gridwidth = 1;
        c.gridy = ++currentRow;
        c.ipady = 5;
        c.gridx = 0;
        skillsPanel.add(nameSet.get(a), c);
        c.gridx = 1;
        c.gridy = currentRow;
        skillsPanel.add(levelSet.get(a), c);
        c.gridx = 0;
        c.gridy = ++currentRow;
        skillsPanel.add(upButtonSet.get(a), c);
    }
    i = nonrangedSize;
    for (int a = 0; a < i; ++a) {
        c.gridwidth = 1;
        c.gridy = ++currentRow;
        c.ipady = 5;
        c.gridx = 0;
        skillsPanel.add(nameSet.get(a + passiveSize), c);
        c.gridx = 1;
        c.gridy = currentRow;
        skillsPanel.add(levelSet.get(a + passiveSize), c);
        c.gridx = 0;
        c.gridy = ++currentRow;
        skillsPanel.add(upButtonSet.get(a + passiveSize), c);
        c.gridx = 1;
        skillsPanel.add(useSelfButtonSet.get(a), c);
        c.gridx = 2;
        skillsPanel.add(useOtherButtonSet.get(a), c);
    }
    i = rangedSize;
    for (int a = 0; a < i; ++a) {
        c.gridwidth = 1;
        c.gridy = ++currentRow;
        c.ipady = 5;
        c.gridx = 0;
        skillsPanel.add(nameSet.get(a + passiveSize + nonrangedSize), c);
        c.gridx = 1;
        c.gridy = currentRow;
        skillsPanel.add(levelSet.get(a + passiveSize + nonrangedSize), c);
        c.gridx = 0;
        c.gridy = ++currentRow;
        skillsPanel.add(upButtonSet.get(a + passiveSize + nonrangedSize), c);
        c.gridx = 1;
        skillsPanel.add(useOtherButtonSet.get(a), c);
    }
    skillsPanel.setOpaque(false);
    skillsPanel.validate();
    skillsPanel.repaint();
    myScrollPane = new JScrollPane(skillsPanel, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
    myScrollPane.setPreferredSize(new Dimension(375, 125));
    myScrollPane.setOpaque(false);
    add(myScrollPane);
    setPreferredSize(new Dimension(200, 50));
}
