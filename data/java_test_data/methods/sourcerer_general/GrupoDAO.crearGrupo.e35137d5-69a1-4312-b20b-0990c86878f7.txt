public void crearGrupo(Grupo grupo, Usuario admin) {
    // Obtenemos el sessionFactory que nos aportar� la session y hibernateTemplate
    SessionFactory sessionFactory = getSessionFactory();
    // Obtenemos la session para iniciar la transaccion
    Session session = sessionFactory.openSession();
    // Obtenemos el HibernateTemplate que nos aportar�
    // las funcionalidades para comunicarnos con la BD
    HibernateTemplate hibernateTemplate = new HibernateTemplate(sessionFactory);
    // Iniciamos la transacci�n
    Transaction transaccion = session.beginTransaction();
    try {
        // Creamos el calendario en la BD
        Calendar fechaActual = Calendar.getInstance();
        Calendario calendario = new Calendario();
        calendario.setFechaCreacion(fechaActual);
        calendario.setFechaUltimoAcceso(fechaActual);
        // Guardamos el objeto en Caledario en la BD y rescatamos su id
        Integer idCalendario = (Integer) hibernateTemplate.save(calendario);
        grupo.setCalendario(idCalendario.intValue());
        // Establecemos el administrador
        int idUsuario = admin.getIdUsuario();
        grupo.setAdministrador(idUsuario);
        // Guardamos el objeto en la BD y rescatamos el id con el que se ha insertado
        Integer idGr = (Integer) hibernateTemplate.save(grupo);
        int idGrupo = idGr.intValue();
        hibernateTemplate.flush();
        // Guardamos el calendarioGrupo
        CalendarioGrupo calGr = new CalendarioGrupo(idCalendario, idGrupo);
        hibernateTemplate.save(calGr);
        // Creamos el UsuarioGrupo
        UsuarioGrupo userGr = new UsuarioGrupo(idUsuario, idGrupo);
        // Guardamos el objeto en la BD
        hibernateTemplate.save(userGr);
        // Hacemos el commit de la transaci�n
        transaccion.commit();
    } catch (Exception excepcion) {
        transaccion.rollback();
        excepcion.printStackTrace();
    } finally {
        session.close();
    }
}
