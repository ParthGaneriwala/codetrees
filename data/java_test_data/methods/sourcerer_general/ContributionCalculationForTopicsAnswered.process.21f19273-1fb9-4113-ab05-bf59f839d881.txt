public void process(Connection db, LookupContribution lookupContribution) throws SQLException {
    lastRun = lookupContribution.getRunDate();
    currentRun = new Timestamp(System.currentTimeMillis());
    userPoints = new HashMap<String, Integer>();
    // Page through the updates just in case there are lots of users do 100 at a time...
    PagedListInfo pagedListInfo = new PagedListInfo();
    pagedListInfo.setItemsPerPage(100);
    pagedListInfo.setDefaultSort("entered", "DESC");
    // Use the paged list to paged through all users
    ReplyList replies = new ReplyList();
    replies.setPagedListInfo(pagedListInfo);
    replies.setSolutionDateStart(lastRun);
    replies.setSolutionDateEnd(currentRun);
    replies.setSolutionsOnly(Constants.TRUE);
    replies.buildList(db);
    while (replies.size() > 0) {
        for (Reply reply : replies) {
            int userId = reply.getEnteredBy();
            Topic topic = new Topic(db, reply.getIssueId());
            int projectId = topic.getProjectId();
            String userIdAndProjectId = userId + "-" + projectId;
            if (userPoints.containsKey(userIdAndProjectId)) {
                int currentPoints = userPoints.get(userIdAndProjectId);
                currentPoints = currentPoints + lookupContribution.getPointsAwarded();
                userPoints.put(userIdAndProjectId, currentPoints);
            } else {
                userPoints.put(userIdAndProjectId, lookupContribution.getPointsAwarded());
            }
        }
        // Always reset the list or else the records are included on buildList again
        replies.clear();
        if (pagedListInfo.getPage() < pagedListInfo.getNumberOfPages()) {
            pagedListInfo.setCurrentPage(pagedListInfo.getPage() + 1);
            replies.buildList(db);
        }
    }
    updatePoints(db, lookupContribution);
}
