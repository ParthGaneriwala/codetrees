public void setCompBirthday(int year, int month, int day) {
    try {
        SimpleDateFormat dateFormatter = new SimpleDateFormat("dd/MM/yyyy");
        String bd = day + "/" + month + "/" + year;
        // TODO: Repaint here the obtained values (in the case that the date is wrong)
        // 
        // REPAINT HERE
        // 
        final Date birthday = dateFormatter.parse(bd);
        final long bdTime = birthday.getTime();
        Calendar calendar = Calendar.getInstance(Locale.getDefault());
        calendar.setTimeInMillis(Math.abs(bdTime - System.currentTimeMillis()));
        if (System.currentTimeMillis() - bdTime < 0) {
            if (logger.isLoggable(Level.WARNING)) {
                logger.log(Level.WARNING, "Invalid date. Day not reached yet.");
            }
        } else {
            // Cleaning possible old birthday value
            this.compBirthday = null;
            // Setting the competitor age
            setCompAge(calendar.get(Calendar.YEAR) - 1970);
            // Setting the competitor birthday
            this.compBirthday = birthday;
            if (logger.isLoggable(Level.INFO)) {
                StringBuffer sb = new StringBuffer();
                sb.append("Date of input birthday: ");
                sb.append(bd);
                sb.append("\nA correct birthday value is: ");
                sb.append(dateFormatter.format(birthday));
                sb.append("\nNow printing the age: ");
                sb.append(calendar.get(Calendar.YEAR) - 1970);
                sb.append(" years; ");
                sb.append(calendar.get(Calendar.MONTH));
                sb.append(" months; ");
                sb.append(calendar.get(Calendar.DAY_OF_MONTH));
                sb.append(" days.");
                sb.append("\nAGE:");
                sb.append(this.getCompAge());
                logger.log(Level.INFO, sb.toString());
            }
        }
    } catch (ParseException ex) {
        logger.log(Level.SEVERE, "Date Parse exception!.", ex);
    }
}
