public GenericBean processAction(ActionRequest request, ActionResponse response) throws Exception {
    // Determine the project container to use
    Project project = findProject(request);
    if (project == null) {
        throw new Exception("Project is null");
    }
    // Check the user's permissions
    User user = getUser(request);
    if (!user.isLoggedIn()) {
        throw new PortletException("User needs to be logged in");
    }
    // Determine the database connection to use
    Connection db = useConnection(request);
    // Check the user's permissions
    if (Boolean.parseBoolean(request.getPreferences().getValue(ALLOW_USERS, "false"))) {
        if (!user.isLoggedIn()) {
            throw new PortletException("User needs to be logged in");
        }
    } else if (!ProjectUtils.hasAccess(project.getId(), user, "project-profile-activity-add")) {
        throw new PortletException("User does not have access to add activity");
    }
    // Determine the content to save
    String body = request.getParameter("body");
    // Validate the input
    if (StringUtils.hasText(body)) {
        // Turn content links into wiki links
        body = WikiUtils.addWikiLinks(body);
        ProjectHistory projectHistory = new ProjectHistory();
        projectHistory.setProjectId(project.getId());
        projectHistory.setEnabled(true);
        projectHistory.setEnteredBy(user.getId());
        projectHistory.setLinkStartDate(new Timestamp(System.currentTimeMillis()));
        // Determine the event type to save
        String eventType = request.getPreferences().getValue(EVENT_TYPE, null);
        if (eventType != null) {
            // ex. site-chatter
            projectHistory.setDescription(WikiLink.generateLink(user.getProfileProject()) + ": " + body);
            projectHistory.setLinkItemId(user.getId());
            projectHistory.setLinkObject(eventType);
        } else {
            if (project.getId() == user.getProfileProject().getId()) {
                // ex. on the user's profile
                projectHistory.setDescription(WikiLink.generateLink(user.getProfileProject()) + ": " + body);
            } else {
                // ex. on another profile
                projectHistory.setDescription(WikiLink.generateLink(user.getProfileProject()) + "  @" + WikiLink.generateLink(project) + ": " + body);
            }
            projectHistory.setLinkItemId(project.getId());
            projectHistory.setLinkObject(ProjectHistoryList.ACTIVITY_ENTRY_OBJECT);
            projectHistory.setEventType(ProjectHistoryList.ADD_ACTIVITY_ENTRY_EVENT);
        }
        projectHistory.insert(db);
    }
    // See if this is an AJAX response
    if ("text".equals(request.getParameter("out"))) {
        // Send a 200 response
        response.sendRedirect(response.encodeURL(request.getContextPath() + "/empty.html"));
        return null;
    } else {
        // Refresh the page
        return (PortalUtils.performRefresh(request, response, "/show"));
    }
}
