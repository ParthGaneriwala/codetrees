private void parseZScript(NodeInfo parent, Element el, AnnotationHelper annHelper) {
    if (el.getAttributeItem("forEach") != null)
        throw new UiException("forEach not applicable to <zscript>, " + el.getLocator());
    if (annHelper.clear())
        log.warning("Annotations are ignored since <zscript> doesn't support them, " + el.getLocator());
    final String ifc = el.getAttributeValue("if"), unless = el.getAttributeValue("unless"), zsrc = el.getAttributeValue("src");
    final boolean deferred = "true".equals(el.getAttributeValue("deferred"));
    String zslang = el.getAttributeValue("language");
    if (zslang == null) {
        zslang = parent.getPageDefinition().getZScriptLanguage();
    // we have to resolve it in parser since a page might be
    // created by use of createComponents
    } else {
        noEmpty("language", zslang, el);
        noEL("language", zslang, el);
    }
    final ConditionImpl cond = ConditionImpl.getInstance(ifc, unless);
    if (!isEmpty(zsrc)) {
        // ignore empty (not error)
        ZScript zs = null;
        if (zsrc.indexOf("${") < 0) {
            final URL url = getLocator().getResource(zsrc);
            if (url != null)
                zs = new ZScript(parent.getEvaluatorRef(), zslang, url, cond);
        // Bug 2929887: defer the error message since it might not be required
        }
        if (zs == null)
            zs = new ZScript(parent.getEvaluatorRef(), zslang, zsrc, cond, getLocator());
        if (deferred)
            zs.setDeferred(true);
        parent.appendChild(zs);
    }
    String script = el.getText(false);
    if (!isEmpty(script.trim())) {
        final org.zkoss.xml.Locator l = el.getLocator();
        int lno = l != null ? l.getLineNumber() : 0;
        if (lno > 1) {
            final StringBuffer sb = new StringBuffer(lno);
            while (--lno > 0) sb.append('\n');
            script = sb.toString() + script;
        }
        final ZScript zs = new ZScript(parent.getEvaluatorRef(), zslang, script, cond);
        if (deferred)
            zs.setDeferred(true);
        parent.appendChild(zs);
    }
}
