protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    // ���ñ��������н�����
    requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);
    Intent intent = getIntent();
    if (intent == null) {
        finish();
        return;
    }
    Bundle bundle = intent.getExtras();
    if (bundle == null) {
        finish();
        return;
    }
    _mFilePath = bundle.getString(Constant.FILE_PATH_KEY);
    if (_mFilePath == null || _mFilePath.equals("")) {
        finish();
        return;
    }
    setFullScreen();
    String tag = "onCreate";
    Log.d(tag, "initialize the new Activity");
    setContentView(R.layout.custom_reader);
    /**
     * the phone component initialization
     */
    viewFlipper = (ViewFlipper) findViewById(R.id.flipper);
    slideLeftIn = AnimationUtils.loadAnimation(this, R.anim.slide_left_in);
    slideLeftOut = AnimationUtils.loadAnimation(this, R.anim.slide_left_out);
    slideRightIn = AnimationUtils.loadAnimation(this, R.anim.slide_right_in);
    slideRightOut = AnimationUtils.loadAnimation(this, R.anim.slide_right_out);
    myCustomView = (CustomTextView) findViewById(R.id.textContent);
    if ("".equals(Constant.IMAGE_PATH)) {
        myCustomView.setBackgroundResource(R.drawable.defautbg);
    } else {
        myCustomView.setBackgroundDrawable(Drawable.createFromPath(Constant.IMAGE_PATH));
    }
    slideLeftIn = AnimationUtils.loadAnimation(this, R.anim.slide_left_in);
    slideRightIn = AnimationUtils.loadAnimation(this, R.anim.slide_right_in);
    // ��ʾ�������ڽ���
    loadData();
    // ȡ����ʾ
    gestureDetector = new GestureDetector(new MyGestureDetector());
    gestureListener = new View.OnTouchListener() {

        public boolean onTouch(View v, MotionEvent event) {
            if (gestureDetector.onTouchEvent(event)) {
                return true;
            }
            return false;
        }
    };
}
