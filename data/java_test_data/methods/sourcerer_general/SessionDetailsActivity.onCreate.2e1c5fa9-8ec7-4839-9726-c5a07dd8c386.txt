@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.session_details_view);
    // Set the title
    ((TextView) findViewById(R.id.title_text)).setText(R.string.session_details_title);
    Uri uri = getIntent().getData();
    Cursor cursor = getContentResolver().query(uri, null, null, null, null);
    if (cursor != null) {
        if (cursor.moveToFirst()) {
            int sti = cursor.getColumnIndexOrThrow(SessionsColumns.TITLE);
            int spni = cursor.getColumnIndexOrThrow(SessionsColumns.SPEAKER_NAMES);
            int ri = cursor.getColumnIndexOrThrow(SessionsColumns.ROOM);
            int tri = cursor.getColumnIndexOrThrow(TracksColumns.TRACK);
            int ctri = cursor.getColumnIndexOrThrow(TracksColumns.COLOR);
            int ai = cursor.getColumnIndexOrThrow(SessionsColumns.ABSTRACT);
            int ati = cursor.getColumnIndexOrThrow(SessionsColumns.STARRED);
            int btsi = cursor.getColumnIndexOrThrow(BlocksColumns.TIME_START);
            int btei = cursor.getColumnIndexOrThrow(BlocksColumns.TIME_END);
            // int mi = cursor.getColumnIndexOrThrow(SessionsColumns.LINK_ALT);
            ((TextView) findViewById(R.id.session_abstract)).setText(cursor.getString(ai));
            final SessionRenderItem sessionItem = new SessionRenderItem(this, Integer.parseInt(uri.getLastPathSegment()), cursor.getLong(btsi), cursor.getLong(btei), cursor.getString(sti), cursor.getString(spni), cursor.getString(ri), cursor.getString(tri), cursor.getInt(ctri), cursor.getInt(ati) == 1);
            ((TextView) findViewById(R.id.session_title)).setText(sessionItem.getTitle());
            CompoundButton cb = (CompoundButton) findViewById(R.id.session_star);
            cb.setChecked(sessionItem.isStarred());
            cb.setOnClickListener(new View.OnClickListener() {

                public void onClick(View v) {
                    // Update the item
                    sessionItem.setStarred(!sessionItem.isStarred());
                    // Update the content provider
                    ContentValues values = new ContentValues();
                    values.put(SessionsColumns.STARRED, sessionItem.isStarred() ? 1 : 0);
                    getContentResolver().update(sessionItem.getUri(), values, null, null);
                }
            });
            ((TextView) findViewById(R.id.session_speakers)).setText(sessionItem.getSpeakers());
            TextView st = ((TextView) findViewById(R.id.session_track));
            st.setText(sessionItem.getTrack());
            st.setTextColor(sessionItem.getColor());
            String startClause = StringUtils.getTimeAsString(StringUtils.DAY_HOUR_TIME, sessionItem.getStartTime());
            String endClause = StringUtils.getTimeAsString(StringUtils.HOUR_MIN_TIME, sessionItem.getEndTime());
            String time = getString(R.string.block_time, startClause, endClause);
            ((TextView) findViewById(R.id.session_time)).setText(time);
            Button roomBtn = ((Button) findViewById(R.id.session_room));
            roomBtn.setText(sessionItem.getRoom());
            roomBtn.setOnClickListener(new View.OnClickListener() {

                public void onClick(View v) {
                    // room 1 and 2 are on the floor level, the others on the first level
                    String roomNumber = sessionItem.getRoom();
                    if ((roomNumber.equalsIgnoreCase("room 1")) || (roomNumber.equalsIgnoreCase("room 2") || roomNumber.startsWith("BOF"))) {
                        AppUtil.showLevel(SessionDetailsActivity.this, 1);
                    } else {
                        AppUtil.showLevel(SessionDetailsActivity.this, 2);
                    }
                }
            });
            // if( cursor.getString( mi) != null)
            // {
            // ((TextView)findViewById(R.id.session_moderation)).setText( getString( R.string.session_details_moderation, cursor.getString( mi)));
            // }
            // else
            // {
            findViewById(R.id.session_moderation_layout).setVisibility(View.GONE);
            // }
            cursor.close();
        } else {
            cursor.close();
            finish();
            return;
        }
    } else {
        finish();
        return;
    }
}
