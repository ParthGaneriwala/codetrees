private void cupidMove(int keyCode) {
    // ��ȡ����ؾ���ĵ�ǰX����
    cupidCurX = cupidSprite.getX();
    // ��ȡ����ؾ���ĵ�ǰY����
    cupidCurY = cupidSprite.getY();
    // ������ת��Ϊ��Ϸ��
    int gameKey = getGameAction(keyCode);
    switch(gameKey) {
        case // ����"FIRE"�����²���
        FIRE:
            if (cupidSprite.getFrame() == 0) {
                try {
                    shootOutSound.start();
                    cupidSprite.setFrame(1);
                    arrowThread = new ArrowThread();
                    arrowThread.start();
                } catch (MediaException e) {
                    e.printStackTrace();
                }
            }
            break;
        case // ����"��"�����²���
        UP:
            cupidSprite.setPosition(cupidCurX, cupidCurY - cupidDy);
            break;
        case // ����"��"�����²���
        DOWN:
            cupidSprite.setPosition(cupidCurX, cupidCurY + cupidDy);
            break;
        case // ����"��"�����²���
        LEFT:
            cupidSprite.setTransform(Sprite.TRANS_NONE);
            isCupidMirror = false;
            cupidSprite.setPosition(cupidCurX, cupidCurY);
            cupidSprite.setPosition(cupidCurX - cupidDx, cupidCurY);
            break;
        case // ����"��"�����²���
        RIGHT:
            cupidSprite.setTransform(Sprite.TRANS_MIRROR);
            isCupidMirror = true;
            cupidSprite.setPosition(cupidCurX, cupidCurY);
            cupidSprite.setPosition(cupidCurX + cupidDx, cupidCurY);
            break;
    }
    // ��ײ���
    if (// �������ؾ����Ƿ���ײ�������ͼ
    isSpriteCollideTiledLayer(cupidSprite, churchLayer) || isCollideScreen(cupidSprite)) {
        // �������ؾ����Ƿ���ײ��Ļ��Ե
        cupidSprite.setPosition(cupidCurX, cupidCurY);
        return;
    }
    // ������Ļ
    paint();
}
