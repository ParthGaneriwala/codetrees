public void testLoaders() {
    // ID filter
    controller.getDefectFilter().setIDSelector(new SpecificIDSelector(1));
    assertEquals("1", controller.loadFilterIDField());
    controller.getDefectFilter().clearIDSelector();
    assertEquals("", controller.loadFilterIDField());
    controller.addProduct("product");
    controller.addBuild("product", "1.1");
    controller.addModule("product", "module");
    Product product = controller.getProducts().getProductByObject("product");
    Object[] filters = controller.loadFilterProductBox();
    assertEquals(3, filters.length);
    assertEquals(AllProductsSelector.getInstance(), filters[0]);
    assertEquals(UnassignedProductSelector.getInstance(), filters[1]);
    assertEquals(product.getProductSelector(), filters[2]);
    filters = controller.loadFilterBuildBox(product);
    Build build = product.getBuildList().getBuildByObject("1.1");
    assertEquals(3, filters.length);
    assertEquals(AllBuildsSelector.getInstance(), filters[0]);
    assertEquals(UnassignedBuildSelector.getInstance(), filters[1]);
    assertEquals(build.getBuildSelector(), filters[2]);
    filters = controller.loadFilterModuleBox(product);
    Module module = product.getModuleList().getModuleByObject("module");
    assertEquals(3, filters.length);
    assertEquals(AllModulesSelector.getInstance(), filters[0]);
    assertEquals(UnassignedModuleSelector.getInstance(), filters[1]);
    assertEquals(module.getModuleSelector(), filters[2]);
    controller.clearUsers();
    controller.addUser("user");
    User user = controller.getUser("user");
    user.setRole(Roles.TESTER);
    user.setRole(Roles.DEVELOPER);
    filters = controller.loadFilterCreatorBox();
    assertEquals(2, filters.length);
    assertEquals(AllUsersSelector.getInstance(), filters[0]);
    assertEquals(user.getUserSelector(), filters[1]);
    filters = controller.loadFilterTesterBox();
    assertEquals(3, filters.length);
    assertEquals(AllUsersSelector.getInstance(), filters[0]);
    assertEquals(UnassignedUserSelector.getInstance(), filters[1]);
    assertEquals(user.getUserSelector(), filters[2]);
    filters = controller.loadFilterDeveloperBox();
    assertEquals(3, filters.length);
    assertEquals(AllUsersSelector.getInstance(), filters[0]);
    assertEquals(UnassignedUserSelector.getInstance(), filters[1]);
    assertEquals(user.getUserSelector(), filters[2]);
}
