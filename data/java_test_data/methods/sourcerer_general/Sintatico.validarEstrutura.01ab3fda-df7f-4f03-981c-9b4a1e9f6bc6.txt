public ArrayList<String> validarEstrutura(String pNmArquivo) throws Exception {
    boolean vFimarquivo = false;
    Arquivo vArquivoEntrada, vArquivoSaida = null;
    DAO_TXT vDAOTxtEntrada, vDAOTxtSaida = null;
    FileReader fin = null;
    LuaLexer vLuaLexer = null;
    parser vMyParser = null;
    String vLinha = null;
    vArquivoEntrada = new Arquivo(pNmArquivo);
    vArquivoSaida = new Arquivo(vArquivoEntrada.getNmArquivoSemExtensao() + ".sol");
    if (vArquivoSaida.existe()) {
        vArquivoSaida.apagar();
    }
    vArquivoSaida.criar();
    vDAOTxtEntrada = new DAO_TXT(vArquivoEntrada);
    vDAOTxtSaida = new DAO_TXT(vArquivoSaida);
    System.out.println("Lendo arquivo!");
    int vCont = 1;
    boolean isFirst = false;
    while (!vFimarquivo) {
        try {
            vLinha = vDAOTxtEntrada.consultarLinha();
            if (vLinha.indexOf("\"") >= 0) {
                String vString = "";
                for (int i = vLinha.indexOf("\""); i < vLinha.length(); i++) {
                    if (vLinha.charAt(i) == '"') {
                        isFirst = !isFirst;
                        if (!isFirst) {
                            this.aHashString.put("_____" + vCont + "_____", vString);
                            vCont++;
                            vString = vString + vLinha.charAt(i);
                            break;
                        }
                    } else {
                        vString = vString + vLinha.charAt(i);
                    }
                }
                vLinha = Constantes.DS_STM_PRINT + "(\"_____" + (vCont - 1) + "_____\")";
            }
            vDAOTxtSaida.incluirLinha(vLinha);
        } catch (ExcecaoFimArquivo e) {
            vFimarquivo = true;
        }
    }
    vFimarquivo = false;
    vArquivoEntrada.fechar();
    vArquivoSaida.fechar();
    // System.out.println("Processando an�lise Sint�tica.");
    fin = new FileReader(vArquivoSaida.getNmCompletoArquivo());
    vLuaLexer = new LuaLexer(fin);
    vMyParser = new parser(vLuaLexer);
    vMyParser.parse();
    this.substituirString(LuaLexer.alTokens);
    System.out.println("Tokens encontrados no arquivo: \n" + LuaLexer.alTokens);
    this.preparaArray(LuaLexer.alTokens);
    // System.out.println("Preparando Tokens para compila��o.");
    System.out.println("Prepara��o de Tokens finalizada. : \n" + LuaLexer.alTokens);
    vArquivoEntrada.fechar();
    vArquivoSaida.fechar();
    vArquivoSaida.apagar();
    return LuaLexer.alTokens;
}
