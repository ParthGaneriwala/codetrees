public void mouseDragged(java.awt.event.MouseEvent e) {
    // label_1.setVisible(false);
    progressDrag = true;
    double sel = ((double) e.getX() / (double) progressBar.getWidth()) * (double) progressBar.getMaximum();
    progressBar.setValue((int) sel);
    // progressBar.repaint();
    // label_1.setVisible(false);
    dsDrag = (int) ((sel / (double) progressBar.getMaximum()) * (double) length);
    if (dsDrag != 0) {
        lockProgress(dsDrag);
        int d0 = dsDrag / 3600;
        int d1 = Math.abs(d0 * 60 - dsDrag / 60);
        int d2 = dsDrag % 60;
        StringBuffer str2 = new StringBuffer();
        str2.append("[");
        if (d0 < 10) {
            str2.append(0);
        }
        str2.append(d0);
        str2.append(":");
        if (d1 < 10) {
            str2.append(0);
        }
        str2.append(d1);
        str2.append(":");
        if (d2 < 10) {
            str2.append(0);
        }
        str2.append(d2);
        str2.append("]");
        label_1.setText(str2.toString());
        int x;
        java.awt.FontMetrics metrics = label_1.getFontMetrics(label_1.getFont());
        // �ַ�ĸ�, ֻ�������й�
        int textH = metrics.getHeight();
        // �ַ�Ŀ�
        int textW = metrics.stringWidth(label_1.getText());
        if (e.getX() + textW > progressBar.getWidth()) {
            x = e.getX() - textW;
        // label_1.setHorizontalAlignment(SwingConstants.TRAILING);
        } else {
            x = e.getX();
        // label_1.setHorizontalAlignment(SwingConstants.LEFT);
        }
        label_1.setBounds(x, 0, textW, textH);
    // seekto(dsDrag);
    }
    isPause = false;
    // setVolume(slider_1.getValue());
    float percent = (float) e.getPoint().x / (float) progressBar.getSize().width;
    pi = (int) (percent * 100);
    if (isFullScr) {
        hideThread.hideDelay();
    }
}
