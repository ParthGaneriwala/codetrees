static void playFile() throws IOException {
    // checkUi();
    isPlayOne = true;
    Menus.AddPlayRecord("aa");
    unLock();
    // stopPlay();
    progressBar.setValue(0);
    playOffset = 0;
    label_1.setBounds(0, 0, 0, 0);
    label_1.repaint();
    media = "F:\\Download\\dygzh.wmv";
    if (media != null) {
        if (isPlay) {
            stopPlay();
        }
        // toMaster();
        button_5.setIcon(new ImageIcon("./application/skin/b2c.png"));
        button_5.setForeground(java.awt.Color.BLUE);
        button_4.setForeground(java.awt.Color.BLACK);
        isPlay = true;
        Preferences userPrefs = Preferences.userRoot().node("lightp2p");
        String mplayerPath = "";
        if (embed) {
            mplayerPath = userPrefs.get("mplayerpath", "");
        } else {
            mplayerPath = peer.Config.basePath + "mplayer/MPlayer.exe";
        }
        String media2 = parseUrl(media);
        File file = new File(media2);
        String[] cmd = new String[] { mplayerPath, "-identify", "-slave", "-wid", String.valueOf(hwnd), "-ao", "win32", "-colorkey", "0x010101", "-nokeepaspect", "-osdlevel", String.valueOf(osdlevel), // "-cache",String.valueOf(1024*100),
        "-ss", String.valueOf(seekTime), "F:\\Download\\dygzh.wmv" };
        try {
            proc = Runtime.getRuntime().exec(cmd);
            final InputStream lOut1 = proc.getErrorStream();
            final InputStream lOut2 = proc.getInputStream();
            final Runnable lPrinter1 = new Runnable() {

                public void run() {
                    try {
                        final BufferedReader lReader = new BufferedReader(new InputStreamReader(lOut1));
                        for (String l = lReader.readLine(); l != null & isPlay; l = lReader.readLine()) {
                        // System.out.println("ERROR "+l);
                        }
                    } catch (Throwable t) {
                        t.printStackTrace();
                    }
                }
            };
            final Runnable lPrinter2 = new Runnable() {

                int i = 0;

                boolean b = true;

                boolean continuePlay = false;

                public void run() {
                    try {
                        final BufferedReader lReader = new BufferedReader(new InputStreamReader(lOut2));
                        for (String l = lReader.readLine(); l != null & isPlay; l = lReader.readLine()) {
                        // System.out.println("*** "+l);
                        }
                    } catch (Throwable t) {
                        t.printStackTrace();
                    }
                }
            };
            t1 = new Thread(lPrinter1);
            t1.start();
            t2 = new Thread(lPrinter2);
            t2.start();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
}
