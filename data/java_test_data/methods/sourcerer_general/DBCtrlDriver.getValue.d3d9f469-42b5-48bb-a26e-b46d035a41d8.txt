private String getValue(ResultSet rs, int dataType, int col) {
    String retVal = "";
    Integer iObj;
    try {
        switch(dataType) {
            case Types.DATE:
                java.sql.Date date = rs.getDate(col);
                if (rs.wasNull())
                    retVal = "";
                else
                    retVal = date.toString();
                break;
            case Types.TIME:
                java.sql.Time time = rs.getTime(col);
                if (rs.wasNull())
                    retVal = "";
                else
                    retVal = time.toString();
                break;
            case Types.TIMESTAMP:
                java.sql.Timestamp timestamp = rs.getTimestamp(col);
                if (rs.wasNull())
                    retVal = "";
                else
                    retVal = timestamp.toString();
                break;
            case Types.CHAR:
            case Types.VARCHAR:
            case Types.LONGVARCHAR:
                retVal = rs.getString(col);
                if (rs.wasNull())
                    retVal = "";
                break;
            case Types.NUMERIC:
            case Types.DECIMAL:
                double numeric = rs.getDouble(col);
                retVal = numeric + "";
                break;
            case Types.BIT:
                boolean bit = rs.getBoolean(col);
                Boolean boolObj = new Boolean(bit);
                retVal = boolObj.toString();
                break;
            case Types.TINYINT:
                byte tinyint = rs.getByte(col);
                iObj = new Integer(tinyint);
                retVal = iObj.toString();
                break;
            case Types.SMALLINT:
                short smallint = rs.getShort(col);
                iObj = new Integer(smallint);
                retVal = iObj.toString();
                break;
            case Types.INTEGER:
                int integer = rs.getInt(col);
                iObj = new Integer(integer);
                retVal = iObj.toString();
                break;
            case Types.BIGINT:
                long bigint = rs.getLong(col);
                Long lObj = new Long(bigint);
                retVal = lObj.toString();
                break;
            case Types.REAL:
                float real = rs.getFloat(col);
                Float fObj = new Float(real);
                retVal = fObj.toString();
                break;
            case Types.FLOAT:
            case Types.DOUBLE:
                double longreal = rs.getDouble(col);
                Double dObj = new Double(longreal);
                retVal = dObj.toString();
                break;
            case Types.BINARY:
            case Types.VARBINARY:
            case Types.LONGVARBINARY:
                byte[] binary = rs.getBytes(col);
                retVal = new String(binary);
                break;
            default:
                retVal = GetNText(rs.getString(col));
                if (rs.wasNull())
                    retVal = "";
                break;
        }
    } catch (SQLException e) {
        lasterror = "Code:" + String.valueOf(e.getErrorCode()) + " Mesg:" + e.getMessage();
        retVal = "";
    }
    if (retVal == null)
        retVal = "";
    return retVal.trim();
}
