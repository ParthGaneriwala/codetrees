public Pager getResources(int pageSize, int pageNo, String title) throws SQLException {
    List<Resources> list = new ArrayList<Resources>();
    int rownum = 0;
    try {
        String sql1 = "select count(*) from resources where resourcetitle like ?";
        // String
        // sql2="select * from(select u.*,rownum rn from(select * from resources  where resourcetitle like ? order by uploaddate desc) u where rownum<=?)where rn>?";
        String sql2 = "select * from (select resources.*, row_number() over(order by resourceid desc) rn from resources ";
        boolean flag = StringUtils.isNotBlank(title);
        String ctitle = null;
        if (flag) {
            ctitle = "%" + title + "%";
            sql1 += " where resourcetitle like ? ";
            sql2 += " where resourcetitle like ? ";
        }
        pstmt = con.prepareStatement(sql1);
        if (flag) {
            pstmt.setString(1, ctitle);
        }
        rs = pstmt.executeQuery();
        if (rs.next()) {
            rownum = rs.getInt(1);
        }
        pstmt = con.prepareStatement(sql2);
        if (flag) {
            pstmt.setString(1, ctitle);
            pstmt.setInt(2, (pageNo - 1) * pageSize);
            pstmt.setInt(3, pageNo * pageSize);
        } else {
            pstmt.setInt(1, (pageNo - 1) * pageSize);
            pstmt.setInt(2, pageNo * pageSize);
        }
        rs = pstmt.executeQuery();
        while (rs.next()) {
            Resources res = new Resources();
            res.setResourceid(rs.getLong("resourceid"));
            res.setResourcetitle(rs.getString("resourcetitle"));
            res.setResourcepath(rs.getString("resourcepath"));
            res.setUploaddate(rs.getDate("uploaddate"));
            list.add(res);
        }
    } catch (Exception ex) {
        ex.printStackTrace();
    } finally {
        closeAll(rs, pstmt);
    }
    Pager pager = new Pager(pageSize, pageNo, rownum, list);
    return pager;
}
