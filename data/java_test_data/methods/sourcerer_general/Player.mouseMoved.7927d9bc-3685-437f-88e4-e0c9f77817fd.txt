public void mouseMoved(java.awt.event.MouseEvent e) {
    if (isPlay) {
        progressMove = true;
        double sel = ((double) e.getX() / ((double) progressBar.getWidth())) * (double) progressBar.getMaximum();
        int vs = (int) (((sel - progressBar.getValue()) / (double) progressBar.getMaximum()) * (double) length);
        int ds = (int) ((sel / (double) progressBar.getMaximum()) * (double) length);
        if (ds != 0) {
            int d0 = ds / 3600;
            int d1 = Math.abs(d0 * 60 - ds / 60);
            int d2 = ds % 60;
            StringBuffer str2 = new StringBuffer();
            str2.append("[");
            if (d0 < 10) {
                str2.append(0);
            }
            str2.append(d0);
            str2.append(":");
            if (d1 < 10) {
                str2.append(0);
            }
            str2.append(d1);
            str2.append(":");
            if (d2 < 10) {
                str2.append(0);
            }
            str2.append(d2);
            str2.append("]");
            int vs2 = Math.abs(vs);
            int t0 = vs2 / 3600;
            int t1 = Math.abs(t0 * 60 - vs2 / 60);
            int t2 = vs2 % 60;
            StringBuffer str = new StringBuffer();
            StringBuffer str3 = new StringBuffer();
            String s1 = "";
            if (vs > 0) {
                s1 = ">>>";
            } else if (vs < 0) {
                s1 = "<<<";
            }
            str.append(s1);
            if (t0 != 0) {
                str.append(t0);
                str.append("Сʱ");
                str3.append(t0);
                str3.append("Сʱ");
            }
            if (t1 != 0) {
                str.append(t1);
                str.append("��");
                str3.append(t1);
                str3.append("��");
            }
            if (t2 != 0) {
                str.append(t2);
                str.append("��");
                str3.append(t2);
                str3.append("��");
            }
            StringBuffer str7 = new StringBuffer();
            str7.append(str);
            str7.append(str2);
            int x;
            java.awt.FontMetrics metrics = label_1.getFontMetrics(label_1.getFont());
            // �ַ�ĸ�,
            int textH = metrics.getHeight();
            // ֻ�������й�
            int textW = metrics.stringWidth(// �ַ�Ŀ�
            str7.toString());
            if (e.getX() + textW > progressBar.getWidth()) {
                StringBuffer str5 = new StringBuffer();
                str5.append(str2);
                str3.append(s1);
                str5.append(str3);
                label_1.setText(str5.toString());
                x = e.getX() - textW;
            // label_1.setHorizontalAlignment(SwingConstants.TRAILING);
            } else {
                StringBuffer str6 = new StringBuffer();
                str3.insert(0, s1);
                str6.append(str3);
                str6.append(str2);
                label_1.setText(str6.toString());
                x = e.getX();
            // label_1.setHorizontalAlignment(SwingConstants.LEFT);
            }
            label_1.setBounds(x, 0, textW, textH);
        }
    }
    if (isFullScr) {
        hideThread.hideDelay();
    }
}
