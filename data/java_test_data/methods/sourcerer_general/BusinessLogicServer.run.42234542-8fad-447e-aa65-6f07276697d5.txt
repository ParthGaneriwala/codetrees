@Override
public void run() {
    for (; ; ) {
        Order[] newOrders = crm.getNewOrders();
        while (newOrders.length == 0) {
            try {
                Thread.sleep(45000);
            } catch (InterruptedException e) {
                // Let thread wake up and check new orders again
                e.printStackTrace();
            }
            newOrders = crm.getNewOrders();
        }
        // If the routes are empty we need to create one route, otherwise the routing
        // engine will throw an exception
        corba.tracking.Vehicle[] currentRoutes = tracking.getAllCurrentRoutes();
        corba.tracking.Vehicle[] newRoutes = null;
        if (currentRoutes.length == 0) {
            currentRoutes = new corba.tracking.Vehicle[1];
            currentRoutes[0] = new corba.tracking.Vehicle();
            currentRoutes[0].id = 0;
            currentRoutes[0].capacity = newOrders[0].weight;
            corba.tracking.Stop[] routes = new corba.tracking.Stop[1];
            routes[0] = new corba.tracking.Stop();
            routes[0].location = newOrders[0].src;
            routes[0].pickups = new corba.tracking.Order[0];
            routes[0].deliveries = new corba.tracking.Order[1];
            routes[0].deliveries[0] = new corba.tracking.Order(newOrders[0].orderid, newOrders[0].src, newOrders[0].dst, newOrders[0].weight, ConversionUtilities.convertCRMSimpleDateToTrackingSimpleDate(newOrders[0].deadline));
            currentRoutes[0].route = routes;
            /* Remove the single new route from Orders so it is not duplicated.
					 * If orders is now empty, just return the route without invoking the
					 * routing engine.
					 */
            Order[] orders = new Order[newOrders.length - 1];
            for (int i = 0; i < orders.length; i++) {
                orders[i] = newOrders[i + 1];
            }
            try {
                newRoutes = ConversionUtilities.convertRoutingVehicleToTrackingVehicle(routing.computeAllRoutes(ConversionUtilities.convertTrackingVehicleToRoutingVehicle(currentRoutes), ConversionUtilities.convertCRMOrderToRoutingOrder(orders)));
            } catch (RoutingException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        } else {
            try {
                newRoutes = ConversionUtilities.convertRoutingVehicleToTrackingVehicle(routing.computeAllRoutes(ConversionUtilities.convertTrackingVehicleToRoutingVehicle(currentRoutes), ConversionUtilities.convertCRMOrderToRoutingOrder(newOrders)));
            } catch (RoutingException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
        for (Order o : newOrders) {
            crm.setOpen(o.orderid);
        }
        tracking.setAllRoutes(newRoutes);
    }
}
