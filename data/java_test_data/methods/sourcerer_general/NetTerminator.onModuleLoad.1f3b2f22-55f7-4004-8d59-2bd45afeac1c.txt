public void onModuleLoad() {
    final String initToken = History.getToken();
    // 初始化顶层容器
    VLayout main = new VLayout() {

        protected void onInit() {
            super.onInit();
            if (initToken.length() != 0) {
                onHistoryChanged(initToken);
            }
        }
    };
    main.setWidth100();
    main.setHeight100();
    main.setLayoutMargin(5);
    main.setStyleName("tabSetContainer");
    HLayout hLayout = new HLayout();
    hLayout.setWidth100();
    hLayout.setHeight100();
    // 顶层容器左侧菜单容器
    VLayout sideNavLayout = new VLayout();
    sideNavLayout.setHeight100();
    sideNavLayout.setWidth(185);
    sideNavLayout.setShowResizeBar(true);
    sideNav = new SideNavTree();
    // 菜单项添加监听
    sideNav.addLeafClickHandler(new LeafClickHandler() {

        public void onLeafClick(LeafClickEvent event) {
            TreeNode node = event.getLeaf();
            showSample(node);
        }
    });
    sideNavLayout.addMember(sideNav);
    hLayout.addMember(sideNavLayout);
    mainTabSet = new TabSet();
    mainTabSet.setTabBarThickness(23);
    mainTabSet.setWidth100();
    mainTabSet.setHeight100();
    // TAB添加监听事件
    mainTabSet.addTabSelectedHandler(new TabSelectedHandler() {

        public void onTabSelected(TabSelectedEvent event) {
            Tab selectedTab = event.getTab();
            String historyToken = selectedTab.getAttribute("historyToken");
            if (historyToken != null) {
                History.newItem(historyToken, false);
            } else {
                History.newItem("main", false);
            }
        }
    });
    LayoutSpacer layoutSpacer = new LayoutSpacer();
    layoutSpacer.setWidth(5);
    // UI风格选项组件初始化
    SelectItem selectItem = new SelectItem();
    selectItem.setWidth(130);
    LinkedHashMap<String, String> valueMap = new LinkedHashMap<String, String>();
    valueMap.put("Enterprise", "Enterprise");
    valueMap.put("SilverWave", "Silver Wave");
    valueMap.put("BlackOps", "Black Ops");
    valueMap.put("TreeFrog", "Tree Frog");
    valueMap.put("fleet", "Fleet");
    selectItem.setValueMap(valueMap);
    // 默认风格为 企业定制
    String currentSkin = Cookies.getCookie("skin");
    if (currentSkin == null) {
        currentSkin = "Enterprise";
    }
    selectItem.setDefaultValue(currentSkin);
    selectItem.setShowTitle(false);
    selectItem.addChangeHandler(new ChangeHandler() {

        public void onChange(ChangeEvent event) {
            Cookies.setCookie("skin", (String) event.getValue());
            com.google.gwt.user.client.Window.Location.reload();
        }
    });
    DynamicForm form = new DynamicForm();
    form.setPadding(0);
    form.setMargin(0);
    form.setCellPadding(1);
    form.setNumCols(1);
    form.setFields(selectItem);
    // 此段代码保留
    // -----------BEGIN----------------
    ImgButton imgButton = new ImgButton();
    imgButton.setWidth(18);
    imgButton.setHeight(18);
    imgButton.setSrc("silk/emoticon.png");
    imgButton.setShowFocused(false);
    imgButton.setShowFocusedIcon(false);
    imgButton.setPrompt("I'm feeling lucky");
    imgButton.setHoverWidth(110);
    imgButton.setHoverStyle("interactImageHover");
    imgButton.addClickHandler(new com.smartgwt.client.widgets.events.ClickHandler() {

        public void onClick(ClickEvent event) {
            ExplorerTreeNode[] data = sideNav.getNetTerminatorData();
            int size = data.length;
            for (int i = 0; i < 15; i++) {
                int sampleIndex = (int) (size * java.lang.Math.random());
                ExplorerTreeNode sample = data[sampleIndex];
                if (sample.getFactory() != null && !(sample instanceof CommandTreeNode)) {
                    showSample(sample);
                    break;
                }
            }
        }
    });
    // -------------END-------------------
    mainTabSet.setTabBarControls(TabBarControls.TAB_SCROLLER, TabBarControls.TAB_PICKER, layoutSpacer, form, imgButton);
    final Menu contextMenu = createContextMenu();
    mainTabSet.addShowContextMenuHandler(new ShowContextMenuHandler() {

        public void onShowContextMenu(ShowContextMenuEvent event) {
            int selectedTab = mainTabSet.getSelectedTabNumber();
            if (selectedTab != 0) {
                contextMenu.showContextMenu();
            }
            event.cancel();
        }
    });
    // 首页TAB
    Tab tab = new Tab();
    tab.setTitle("NetTerminator&nbsp;&nbsp;");
    tab.setIcon("pieces/16/cube_green.png");
    HLayout mainPanel = new HLayout();
    mainPanel.setHeight100();
    mainPanel.setWidth100();
    if (SC.hasFirebug()) {
        Label label = new Label();
        label.setContents("<p>Firebug can make the NetTerminator run slow.</p><p>For the best performance, we suggest disabling Firebug for this site.</p>");
        label.setWidth100();
        label.setHeight("auto");
        label.setMargin(20);
        Window fbWindow = new Window();
        fbWindow.setShowHeader(false);
        fbWindow.addItem(label);
        fbWindow.setWidth(220);
        fbWindow.setHeight(130);
        LayoutSpacer spacer = new LayoutSpacer();
        spacer.setWidth100();
        mainPanel.addMember(spacer);
        mainPanel.addMember(fbWindow);
    }
    tab.setPane(mainPanel);
    mainTabSet.addTab(tab);
    Canvas canvas = new Canvas();
    canvas.setBackgroundImage("[SKIN]/shared/background.gif");
    canvas.setWidth100();
    canvas.setHeight100();
    canvas.addChild(mainTabSet);
    hLayout.addMember(canvas);
    main.addMember(getTopPanel());
    main.addMember(hLayout);
    main.addMember(getBottomPanel());
    main.draw();
    // 添加历史侦听
    History.addValueChangeHandler(this);
    RootPanel.getBodyElement().removeChild(RootPanel.get("loadingWrapper").getElement());
}
