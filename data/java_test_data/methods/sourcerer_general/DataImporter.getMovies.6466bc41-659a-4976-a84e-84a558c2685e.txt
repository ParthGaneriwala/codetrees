private boolean getMovies() {
    Parser parser = new Parser();
    Set<MovieEntity> moviesSet = new LinkedHashSet<MovieEntity>();
    String patternRegExp = null;
    String fullMovieName, movieName, movieRomanNotation, movieMadeFor;
    int movieYear;
    Pattern pattern;
    Matcher matcher;
    int totalElementsNum = 0;
    parser.loadFile(listfilesMap.get(ListFilesEnum.MOVIES), ListFilesEnum.MOVIES);
    patternRegExp = moviesPattern;
    // Making sure we find the start of the list
    if (parser.findStartOfList()) {
        System.out.println("Found the start of the list!");
        pattern = Pattern.compile(patternRegExp);
        while (!parser.isEOF()) {
            matcher = pattern.matcher(parser.readLine());
            if (matcher.matches()) {
                fullMovieName = matcher.group(1).trim();
                movieName = matcher.group(2);
                movieRomanNotation = matcher.group(3);
                movieMadeFor = matcher.group(4);
                try {
                    movieYear = Integer.parseInt(matcher.group(5));
                } catch (Exception e) {
                    if (matcher.group(5).equals("????")) {
                        movieYear = 0;
                    } else
                        movieYear = 1900;
                }
                // NOTE: the fullMovieName is a temporary field used during the import and dropped from the DB at the end
                // it doesn't have a field in the MovieEntity, so for this occasion only, it is sent instead of the taglines field
                moviesSet.add(new MovieEntity(0, movieName, movieYear, movieRomanNotation, movieMadeFor, 0, 0, fullMovieName, null, null));
            }
            // flush results every BATCH_SIZE
            if ((moviesSet.size() > 0) && (moviesSet.size() % PSTMT_BATCH_SIZE == 0)) {
                System.out.println("Inserting " + moviesSet.size() + " elements to the DB");
                DBManager.getInstance().insertMoviesSetToDB(connection, moviesSet);
                totalElementsNum += moviesSet.size();
                moviesSet.clear();
            }
        }
        // flush the results that were left
        if ((moviesSet.size() > 0)) {
            System.out.println("Inserting " + moviesSet.size() + " elements to the DB");
            DBManager.getInstance().insertMoviesSetToDB(connection, moviesSet);
            totalElementsNum += moviesSet.size();
        }
        System.out.println("Total number of elements entered into DB: " + totalElementsNum);
    } else
        return false;
    parser.closeFile();
    return true;
}
