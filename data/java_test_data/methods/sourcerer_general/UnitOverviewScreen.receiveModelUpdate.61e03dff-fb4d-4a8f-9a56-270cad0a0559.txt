public void receiveModelUpdate(Set<ArmyMessenger> armies, Set<PlayerObjectMessenger> units) {
    // clean out the table and make a new table model
    this.removeAll();
    int rowSize = 0;
    for (PlayerObjectMessenger obj : units) {
        if (obj.getPlayerObjectType() == PlayerObjectType.UNIT) {
            rowSize++;
        }
    }
    Object[][] rowData = new Object[rowSize][10];
    int rowNum = 0;
    for (PlayerObjectMessenger obj : units) {
        // if (obj.getPlayerObjectType() == PlayerObjectType.UNIT) {
        if (obj.getPlayerObjectType() == PlayerObjectType.UNIT) {
            UnitMessenger unitMessenger = (UnitMessenger) obj;
            rowData[rowNum][0] = unitMessenger.getName();
            rowData[rowNum][1] = unitMessenger.getCurHealth();
            rowData[rowNum][2] = unitMessenger.getMaxHealth();
            rowData[rowNum][3] = unitMessenger.getDDamage();
            rowData[rowNum][4] = unitMessenger.getODamage();
            rowData[rowNum][5] = unitMessenger.getArmor();
            rowData[rowNum][6] = unitMessenger.getUpkeep();
            rowData[rowNum][7] = unitMessenger.getMoveRate();
            rowData[rowNum][8] = unitMessenger.getMovesLeft();
            GameObjectMessenger item = unitMessenger.getItemMessenger();
            if (item != null) {
                rowData[rowNum][9] = item.getName();
            }
            rowNum++;
        }
    }
    table.setModel(new UnitTableModel(colNames, rowData));
    Toolkit tk = Toolkit.getDefaultToolkit();
    Dimension d = tk.getScreenSize();
    table.setSize(new Dimension((int) d.getHeight() * 2 / 3, (int) d.getWidth()));
    add(new JScrollPane(table));
    table.getSelectedRows();
}
