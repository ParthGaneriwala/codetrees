public ActionForward AsociacionI(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    // Salidas
    final String SALIDA_0 = "asociacion";
    String salida = SALIDA_0;
    Session s = HibernateUtil.getSessionFactory().getCurrentSession();
    Transaction tr = s.beginTransaction();
    try {
        String id = request.getParameter("idAsociacion");
        Long idAsociacion = (id == null) ? (Long) request.getSession().getAttribute("idAsociacion") : new Long(id);
        HttpSession sess = request.getSession();
        FAsociacion fFAsociacion = (FAsociacion) sess.getAttribute("FAsociacion");
        if (fFAsociacion == null) {
            fFAsociacion = new FAsociacion();
            sess.setAttribute("FAsociacion", fFAsociacion);
        } else {
            fFAsociacion.reset(mapping, request);
        }
        Asociacion asociacion = (Asociacion) s.load(Asociacion.class, idAsociacion);
        fFAsociacion.setIdAsociacion(asociacion.getIdAsociacion());
        fFAsociacion.setModalidad(asociacion.getModalidad().getIdModalidad());
        if (asociacion.getRequisito() != null) {
            fFAsociacion.setRequisito(asociacion.getRequisito().getIdRequisito());
        } else {
            fFAsociacion.setRequisito(0);
        }
        fFAsociacion.setPeriodoAbs(asociacion.getPeriodoAbs());
        // Feed for combo listRequisitos.
        {
            java.util.List<ve.usb.cohesion.runtime.Pair> list = (java.util.List<ve.usb.cohesion.runtime.Pair>) s.createQuery("select new ve.usb.cohesion.runtime.Pair(asignatura.codigo, idRequisito) " + "from Requisitos").list();
            list.add(0, new ve.usb.cohesion.runtime.Pair("Ninguna", 0));
            fFAsociacion.setListRequisitos(list);
        }
        // Feed for combo listModalidad.
        {
            java.util.List<ve.usb.cohesion.runtime.Pair> list = (java.util.List<ve.usb.cohesion.runtime.Pair>) s.createQuery("select new ve.usb.cohesion.runtime.Pair(nombre, idModalidad) " + "from Modalidad").list();
            list.add(0, new ve.usb.cohesion.runtime.Pair("Ninguna", 0));
            fFAsociacion.setListModalidad(list);
        }
        request.getSession().setAttribute("idRequisito", fFAsociacion.getRequisito());
        request.getSession().setAttribute("idModalidad", fFAsociacion.getModalidad());
        request.getSession().setAttribute("idAsociacion", idAsociacion);
        tr.commit();
    } catch (Exception ex) {
        tr.rollback();
        throw ex;
    }
    return mapping.findForward(salida);
}
