public void parseFile() throws Exception {
    BufferedReader bf = new BufferedReader(new FileReader(fileName));
    String data;
    String[] move, moveInd;
    int srcX, srcY, dstX, dstY;
    boolean commentText = false;
    int lineNumber = 0;
    boolean whiteMove = true;
    char pawnPromotion = '-';
    while ((data = bf.readLine()) != null) {
        lineNumber++;
        data = data.trim();
        if (data.length() == 0) {
            continue;
        }
        if (data.startsWith(comment)) {
            continue;
        }
        move = data.split(" ");
        commentText = false;
        whiteMove = true;
        pawnPromotion = '-';
        for (int i = 0; i < move.length; i++) {
            if (move[i].length() == 0) {
                continue;
            }
            if (move[i].equals("1.")) {
                moves.add(new LinkedList<Move>());
            // System.out.println("Reading a new test.....");
            }
            if (move[i].startsWith("{")) {
                commentText = true;
                moves.getLast().getLast().leagalMove = false;
            // System.out.println(moves.getLast().getLast().leagalMove);
            }
            if (move[i].endsWith("}")) {
                commentText = false;
                continue;
            }
            if (commentText == false && move[i].contains("-")) {
                /*O-O King side castling
                     * for black: e8-g8
                     * for white: e1-g1
                     * O-O-O Queen  sie castling
                     * for black: e8-c8
                     * for white: e1-c1 
                     */
                if (move[i].startsWith("O-O")) {
                    srcX = 'e' - 'a';
                    if (// king side castling
                    move[i].length() == 3) {
                        dstX = 'g' - 'a';
                    } else {
                        dstX = 'c' - 'a';
                    }
                    if (whiteMove) {
                        srcY = '1' - '1';
                        dstY = '1' - '1';
                    } else {
                        srcY = '8' - '1';
                        dstY = '8' - '1';
                    }
                } else {
                    if (move[i].length() < 5) {
                        throw new Exception("Error @line: " + lineNumber + ":" + data);
                    }
                    // xy-xy
                    srcX = move[i].charAt(0) - 'a';
                    srcY = move[i].charAt(1) - '1';
                    dstX = move[i].charAt(3) - 'a';
                    dstY = move[i].charAt(4) - '1';
                }
                if (move[i].contains("=")) {
                    pawnPromotion = move[i].charAt(move[i].length() - 1);
                }
                moves.getLast().add(new Move(move[i], srcX, srcY, dstX, dstY, true, pawnPromotion));
                whiteMove = false;
            }
        }
    }
}
