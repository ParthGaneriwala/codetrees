public void loadMap(boolean nonUI) {
    CSLog.i(TAG, "Load Map");
    // Sets up a connection to the database.
    db = GeoDBConnector.open(this);
    // Initialize icons, current is red, saved is green, current saved is
    // purple
    Drawable currLocIcon = getResources().getDrawable(R.drawable.pin);
    currLocIcon.setBounds(0, 0, currLocIcon.getIntrinsicWidth(), currLocIcon.getIntrinsicHeight());
    Drawable saveLocIcon = getResources().getDrawable(R.drawable.green);
    currLocIcon.setBounds(0, 0, saveLocIcon.getIntrinsicWidth(), saveLocIcon.getIntrinsicHeight());
    Drawable saveCurLocIcon = getResources().getDrawable(R.drawable.purple);
    currLocIcon.setBounds(0, 0, saveCurLocIcon.getIntrinsicWidth(), saveCurLocIcon.getIntrinsicHeight());
    List<Overlay> listOfOverlays = mapView.getOverlays();
    listOfOverlays.clear();
    // Load and display saved locations including current one if saved
    Iterator<GeoStamp> pins = db.getGeoStamps().iterator();
    boolean currLocNotSaved = true;
    while (pins.hasNext()) {
        GeoStamp next = pins.next();
        CSLog.i(TAG, "Load saved geostamp: " + next);
        MapOverlay nextOverlay = new MapOverlay(saveLocIcon);
        OverlayItem nextOverlayItem = new OverlayItem(next.getGeoPoint(), "Saved Location", null);
        nextOverlay.addItem(nextOverlayItem);
        listOfOverlays.add(nextOverlay);
        GeoStamp currLoc = new GeoStamp(curGeoStamp.getLatitude(), curGeoStamp.getLongitude());
        if (next.equals(currLoc)) {
            currLocNotSaved = false;
        }
    }
    // with red pin else load a purple pin
    if (currLocNotSaved) {
        MapOverlay curLocOverlay = new MapOverlay(currLocIcon);
        OverlayItem curLocItem = new OverlayItem(curLocPoint, "Current Location", null);
        curLocOverlay.addItem(curLocItem);
        listOfOverlays.add(curLocOverlay);
    } else {
        MapOverlay saveCurrOverlay = new MapOverlay(saveCurLocIcon);
        OverlayItem saveCurLocItem = new OverlayItem(curLocPoint, "Saved Current Location", null);
        saveCurrOverlay.addItem(saveCurLocItem);
        listOfOverlays.add(saveCurrOverlay);
    }
    // Animate to current location
    mapControl.animateTo(curLocPoint);
    CSLog.i(TAG, "Animate to current geo point: " + curLocPoint);
    checkBorder();
    if (!nonUI) {
        mapView.invalidate();
    } else {
        // This is when the socket listener calls a map update
        mapView.postInvalidate();
    }
    // Close db
    db.close();
}
