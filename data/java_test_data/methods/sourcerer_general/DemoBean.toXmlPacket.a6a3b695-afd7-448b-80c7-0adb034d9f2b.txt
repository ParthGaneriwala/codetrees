public String toXmlPacket(String appId, String appCode, String appClientId) throws javax.xml.parsers.ParserConfigurationException {
    // Build an XML document needed for request
    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
    DocumentBuilder builder = dbf.newDocumentBuilder();
    Document document = builder.newDocument();
    // Document element
    Element documentElement = document.createElement("app");
    document.appendChild(documentElement);
    // Authentication node
    Element authElement = document.createElement("authentication");
    documentElement.appendChild(authElement);
    Element idElement = document.createElement("id");
    idElement.appendChild(document.createTextNode(appId));
    authElement.appendChild(idElement);
    Element codeElement = document.createElement("code");
    codeElement.appendChild(document.createTextNode(appCode));
    authElement.appendChild(codeElement);
    Element systemIdElement = document.createElement("systemId");
    systemIdElement.appendChild(document.createTextNode("4"));
    authElement.appendChild(systemIdElement);
    Element clientIdElement = document.createElement("clientId");
    clientIdElement.appendChild(document.createTextNode(appClientId));
    authElement.appendChild(clientIdElement);
    // Demo account node
    Element rootElement = document.createElement("demoAccount");
    documentElement.appendChild(rootElement);
    // First name
    Element nameFirstElement = document.createElement("nameFirst");
    nameFirstElement.appendChild(document.createTextNode(this.getNameFirst()));
    rootElement.appendChild(nameFirstElement);
    // Last name
    Element nameLastElement = document.createElement("nameLast");
    nameLastElement.appendChild(document.createTextNode(this.getNameLast()));
    rootElement.appendChild(nameLastElement);
    // Company name
    Element organizationElement = document.createElement("organization");
    organizationElement.appendChild(document.createTextNode(this.getCompanyName()));
    rootElement.appendChild(organizationElement);
    // Title
    Element titleElement = document.createElement("title");
    titleElement.appendChild(document.createTextNode(this.getTitle()));
    rootElement.appendChild(titleElement);
    // Phone
    Element phoneElement = document.createElement("phone");
    phoneElement.appendChild(document.createTextNode(this.getPhone()));
    rootElement.appendChild(phoneElement);
    // Extension
    Element extensionElement = document.createElement("extension");
    extensionElement.appendChild(document.createTextNode(this.getPhoneExt()));
    rootElement.appendChild(extensionElement);
    // Email address
    Element emailElement = document.createElement("email");
    emailElement.appendChild(document.createTextNode(this.getEmail()));
    rootElement.appendChild(emailElement);
    // IP address
    Element ipAddressElement = document.createElement("ipAddress");
    ipAddressElement.appendChild(document.createTextNode(this.getIpAddress()));
    rootElement.appendChild(ipAddressElement);
    // Browser
    if (this.getUserBrowser() != null) {
        Element browserElement = document.createElement("browser");
        browserElement.appendChild(document.createTextNode(this.getUserBrowser()));
        rootElement.appendChild(browserElement);
    }
    // Language
    if (this.getLanguage() != null) {
        Element languageElement = document.createElement("language");
        languageElement.appendChild(document.createTextNode(this.getLanguage()));
        rootElement.appendChild(languageElement);
    }
    // Referer
    if (this.getReferer() != null) {
        Element refererElement = document.createElement("referer");
        refererElement.appendChild(document.createTextNode(this.getReferer()));
        rootElement.appendChild(refererElement);
    }
    // return as string
    return XMLUtils.toString(documentElement);
}
