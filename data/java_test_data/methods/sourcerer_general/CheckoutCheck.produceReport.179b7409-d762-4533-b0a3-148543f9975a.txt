private void produceReport() {
    addChargeInfoToOrderList();
    if (processedOrderCount > 0) {
        toastText = "Done.";
        itemSummaries = new ArrayList<ItemSummary>();
        Set<String> itemNames = new HashSet<String>();
        Iterator<Order> it = orderList.iterator();
        while (it.hasNext()) {
            Order tempOrder = it.next();
            itemNames.add(tempOrder.getItemName());
        }
        Iterator<String> it2 = itemNames.iterator();
        while (it2.hasNext()) {
            String tempName = it2.next();
            ItemSummary tempItemSummary = new ItemSummary(tempName);
            tempItemSummary.setAndroidTransactions(androidTransactionsFees);
            Iterator<Order> it3 = orderList.iterator();
            while (it3.hasNext()) {
                Order tempOrder = it3.next();
                if (tempName.equals(tempOrder.getItemName())) {
                    BigDecimal tempItemPrice = tempOrder.getItemPrice();
                    if (tempOrder.getFinancialState().equals(orderStateText)) {
                        tempItemSummary.incrementItemCount();
                        totalUnits++;
                        tempItemSummary.setItemPrice(tempItemPrice);
                        System.out.println(tempItemPrice);
                    }
                }
            }
            int numItems = tempItemSummary.getItemCount();
            if (numItems > 0) {
                itemSummaries.add(tempItemSummary);
            }
        }
        NameComparator nc = new NameComparator();
        Collections.sort(itemSummaries, nc);
        setContentView(R.layout.report);
        final ListView itemSummaryList = (ListView) findViewById(R.id.item_summary_list);
        ArrayList<HashMap<String, String>> list = new ArrayList<HashMap<String, String>>();
        Iterator<ItemSummary> it4 = itemSummaries.iterator();
        MathContext mc = new MathContext(BigDecimal.ROUND_HALF_UP);
        totalGross.setScale(2, BigDecimal.ROUND_HALF_UP);
        totalNet.setScale(2, BigDecimal.ROUND_HALF_UP);
        while (it4.hasNext()) {
            ItemSummary tempItemSummary = it4.next();
            tempItemSummary.calcTotalGross();
            tempItemSummary.calcTotalNet();
            totalGross = totalGross.add(tempItemSummary.getTotalGross(), mc);
            totalNet = totalNet.add(tempItemSummary.getTotalNet(), mc);
            DecimalFormat df = new DecimalFormat("0.00");
            String formattedTotalGross = df.format(tempItemSummary.getTotalGross());
            String formattedTotalNet = df.format(tempItemSummary.getTotalNet());
            HashMap<String, String> item = new HashMap<String, String>();
            item.put("text1", tempItemSummary.getItemName().replaceAll(" ", ""));
            item.put("text2", Integer.toString(tempItemSummary.getItemCount()));
            item.put("text3", formattedTotalGross);
            item.put("text4", formattedTotalNet);
            list.add(item);
        }
        SimpleAdapter summaryAdapter = new SimpleAdapter(this, list, R.layout.report_item, new String[] { "text1", "text2", "text3", "text4" }, new int[] { R.id.item_label, R.id.units_label, R.id.gross_label, R.id.net_label });
        itemSummaryList.setAdapter(summaryAdapter);
        itemSummaryList.setFocusable(false);
        TextView totalUnitsView = (TextView) findViewById(R.id.total_units);
        TextView totalGrossView = (TextView) findViewById(R.id.total_gross);
        TextView totalNetView = (TextView) findViewById(R.id.total_net);
        totalUnitsView.setText(Integer.toString(totalUnits));
        DecimalFormat df = new DecimalFormat("0.00");
        String formattedTotalGrossValue = df.format(totalGross);
        String formattedTotalNetValue = df.format(totalNet);
        totalGrossView.setText(formattedTotalGrossValue);
        totalNetView.setText(formattedTotalNetValue);
        TextView reportDateRange = (TextView) findViewById(R.id.report_date);
        reportDateRange.setText(startYear + "-" + startMonth + "-" + startDay + " to " + endYear + "-" + endMonth + "-" + endDay + " (" + orderStateText + ")");
        backButton = (Button) findViewById(R.id.btnBack);
        backButton.setOnClickListener(new OnClickListener() {

            @Override
            public void onClick(View v) {
                totalUnits = 0;
                totalGross = new BigDecimal("0.00");
                totalNet = new BigDecimal("0.00");
                launchMainScreen();
            }
        });
    } else {
        toastText = "Error: No data found.";
    }
}
