public void testBasicDateSupport() throws Throwable {
    final String INSERT_DATE = "insert into date_test(date_test) values (?)";
    // See OracleTests class why we need to select tablename.*
    final String SELECT_DATE = "select date_test.* from date_test where date_test = ?";
    final String DELETE_DATE = "delete from date_test where date_test = ?";
    Calendar calGenerate = Calendar.getInstance();
    java.sql.Date insertDate;
    Connection connection = super.newConnection();
    PreparedStatement insertStatement;
    int iUpdateCount = 0;
    // Set date of my birthday ;-)
    calGenerate.set(1995, 9, 15, 1, 2, 3);
    insertDate = new java.sql.Date(calGenerate.getTime().getTime());
    insertStatement = connection.prepareStatement(INSERT_DATE);
    insertStatement.setDate(1, insertDate);
    iUpdateCount = insertStatement.executeUpdate();
    insertStatement.close();
    Assert.assertEquals("Exactly one record with date data shoud have been inserted.", iUpdateCount, 1);
    // Now select it back to be sure it is there
    PreparedStatement selectStatement = null;
    PreparedStatement deleteStatement = null;
    ResultSet results = null;
    java.sql.Date retrievedDate = null;
    boolean bHasMoreThanOne;
    int iDeletedCount = 0;
    // Set different time, since when we are dealing with just dates it
    // shouldn't matter
    calGenerate.set(1995, 9, 15, 2, 3, 4);
    java.sql.Date selectDate = new java.sql.Date(calGenerate.getTime().getTime());
    selectStatement = connection.prepareStatement(SELECT_DATE);
    selectStatement.setDate(1, selectDate);
    results = selectStatement.executeQuery();
    // Get the date from the database
    Assert.assertTrue("The inserted date is not in the database.", results.next());
    retrievedDate = results.getDate(1);
    deleteStatement = connection.prepareStatement(DELETE_DATE);
    deleteStatement.setDate(1, insertDate);
    iDeletedCount = deleteStatement.executeUpdate();
    deleteStatement.close();
    Assert.assertEquals("Exactly one record with date data shoud have been deleted.", iDeletedCount, 1);
    boolean result = retrievedDate.toString().startsWith(insertDate.toString().substring(0, 10));
    Assert.assertTrue("The date retrieved from database " + DateFormat.getDateTimeInstance().format(retrievedDate) + " is not the same as the inserted one " + DateFormat.getDateTimeInstance().format(insertDate), result);
}
