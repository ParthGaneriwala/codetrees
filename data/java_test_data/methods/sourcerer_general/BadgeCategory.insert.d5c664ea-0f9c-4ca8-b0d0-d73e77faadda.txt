public boolean insert(Connection db) throws SQLException {
    if (!isValid()) {
        return false;
    }
    Exception errorMessage = null;
    boolean commit = db.getAutoCommit();
    try {
        if (commit) {
            db.setAutoCommit(false);
        }
        StringBuffer sql = new StringBuffer();
        sql.append("INSERT INTO badge_category " + "(" + (id > -1 ? "code, " : "") + "project_category_id, " + "item_name, " + "logo_id, " + "enabled, " + "level ");
        if (entered != null) {
            sql.append(", entered ");
        }
        sql.append(") VALUES (");
        if (id > -1) {
            sql.append("?, ");
        }
        sql.append("?, ?, ?, ?, ?  ");
        if (entered != null) {
            sql.append(",? ");
        }
        sql.append(")");
        int i = 0;
        PreparedStatement pst = db.prepareStatement(sql.toString());
        if (id > -1) {
            pst.setInt(++i, id);
        }
        DatabaseUtils.setInt(pst, ++i, projectCategoryId);
        pst.setString(++i, itemName);
        DatabaseUtils.setInt(pst, ++i, logoId);
        pst.setBoolean(++i, enabled);
        pst.setInt(++i, level);
        if (entered != null) {
            pst.setTimestamp(++i, entered);
        }
        pst.execute();
        pst.close();
        id = DatabaseUtils.getCurrVal(db, "badge_category_code_seq", id);
        if (commit) {
            db.commit();
        }
    } catch (Exception e) {
        errorMessage = e;
        if (commit) {
            db.rollback();
        }
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
    if (errorMessage != null) {
        throw new SQLException(errorMessage.getMessage());
    }
    return true;
}
