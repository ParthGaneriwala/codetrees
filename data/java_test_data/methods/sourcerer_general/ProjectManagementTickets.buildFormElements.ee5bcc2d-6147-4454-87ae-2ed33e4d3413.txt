protected void buildFormElements(ActionContext context, Connection db, Project thisProject, Ticket thisTicket) throws SQLException {
    context.getRequest().setAttribute("TicketDetails", thisTicket);
    // Severity List
    LookupList severityList = new LookupList(db, "ticket_severity");
    context.getRequest().setAttribute("SeverityList", severityList);
    // Priority List
    LookupList priorityList = new LookupList(db, "ticket_priority");
    context.getRequest().setAttribute("PriorityList", priorityList);
    TicketCategoryList categoryList = new TicketCategoryList();
    categoryList.setProjectId(thisProject.getId());
    categoryList.setCatLevel(0);
    categoryList.setParentCode(0);
    categoryList.setHtmlJsEvent("onChange=\"javascript:updateSubList1();\"");
    categoryList.buildList(db);
    categoryList.getCatListSelect().addItem(0, "Undetermined");
    context.getRequest().setAttribute("CategoryList", categoryList);
    TicketCategoryList subList1 = new TicketCategoryList();
    subList1.setProjectId(thisProject.getId());
    subList1.setCatLevel(1);
    subList1.setParentCode(thisTicket.getCatCode());
    subList1.setHtmlJsEvent("onChange=\"javascript:updateSubList2();\"");
    subList1.buildList(db);
    if (System.getProperty("DEBUG") != null) {
        System.out.println("ProjectManagementTickets-> SubList1 size: " + subList1.size());
        System.out.println(subList1.toString());
    }
    subList1.getCatListSelect().addItem(0, "Undetermined");
    subList1.getCatListSelect().setDefaultKey(thisTicket.getSubCat1());
    context.getRequest().setAttribute("SubList1", subList1);
    TicketCategoryList subList2 = new TicketCategoryList();
    subList2.setProjectId(thisProject.getId());
    subList2.setCatLevel(2);
    subList2.setParentCode(thisTicket.getSubCat1());
    subList2.setHtmlJsEvent("onChange=\"javascript:updateSubList3();\"");
    subList2.buildList(db);
    subList2.getCatListSelect().addItem(0, "Undetermined");
    subList2.getCatListSelect().setDefaultKey(thisTicket.getSubCat2());
    context.getRequest().setAttribute("SubList2", subList2);
    TicketCategoryList subList3 = new TicketCategoryList();
    subList3.setProjectId(thisProject.getId());
    subList3.setCatLevel(3);
    subList3.setParentCode(thisTicket.getSubCat2());
    subList3.buildList(db);
    subList3.getCatListSelect().addItem(0, "Undetermined");
    subList3.getCatListSelect().setDefaultKey(thisTicket.getSubCat3());
    context.getRequest().setAttribute("SubList3", subList3);
    ProjectItemList causeList = new ProjectItemList();
    causeList.setProjectId(thisProject.getId());
    causeList.setEnabled(Constants.TRUE);
    causeList.setIncludeId(thisTicket.getCauseId());
    causeList.buildList(db, ProjectItemList.TICKET_CAUSE);
    context.getRequest().setAttribute("TicketCauseList", causeList);
    ProjectItemList resolutionList = new ProjectItemList();
    resolutionList.setProjectId(thisProject.getId());
    resolutionList.setEnabled(Constants.TRUE);
    resolutionList.setIncludeId(thisTicket.getResolutionId());
    resolutionList.buildList(db, ProjectItemList.TICKET_RESOLUTION);
    context.getRequest().setAttribute("TicketResolutionList", resolutionList);
    ProjectItemList defectList = new ProjectItemList();
    defectList.setProjectId(thisProject.getId());
    defectList.setEnabled(Constants.TRUE);
    defectList.setIncludeId(thisTicket.getDefectId());
    defectList.buildList(db, ProjectItemList.TICKET_DEFECT);
    context.getRequest().setAttribute("TicketDefectList", defectList);
    ProjectItemList escalationList = new ProjectItemList();
    escalationList.setProjectId(thisProject.getId());
    escalationList.setEnabled(Constants.TRUE);
    escalationList.setIncludeId(thisTicket.getEscalationId());
    escalationList.buildList(db, ProjectItemList.TICKET_ESCALATION);
    context.getRequest().setAttribute("TicketEscalationList", escalationList);
    ProjectItemList stateList = new ProjectItemList();
    stateList.setProjectId(thisProject.getId());
    stateList.setEnabled(Constants.TRUE);
    stateList.setIncludeId(thisTicket.getStateId());
    stateList.buildList(db, ProjectItemList.TICKET_STATE);
    context.getRequest().setAttribute("TicketStateList", stateList);
}
