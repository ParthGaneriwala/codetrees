private boolean initialize(HttpServletRequest request, ModelAndView next, WikiPageInfo pageInfo) throws Exception {
    setProperties(request, next);
    WikiUserAuth user = setAdminUser(request);
    Vector errors = validate(request, user);
    if (!errors.isEmpty()) {
        this.view(request, next, pageInfo);
        next.addObject("errors", errors);
        next.addObject("username", user.getUsername());
        next.addObject("newPassword", request.getParameter("newPassword"));
        next.addObject("confirmPassword", request.getParameter("confirmPassword"));
        return false;
    }
    if (previousInstall() && request.getParameter("override") == null) {
        // user is trying to do a new install when a previous installation exists
        next.addObject("upgrade", "true");
        next.addObject("username", user.getUsername());
        next.addObject("newPassword", request.getParameter("newPassword"));
        next.addObject("confirmPassword", request.getParameter("confirmPassword"));
        return false;
    }
    Environment.setBooleanValue(Environment.PROP_BASE_INITIALIZED, true);
    Environment.setValue(Environment.PROP_BASE_WIKI_VERSION, WikiVersion.CURRENT_WIKI_VERSION);
    if (user == null || !user.hasRole(Role.ROLE_USER)) {
        throw new IllegalArgumentException("Cannot pass null or anonymous WikiUserAuth object to setupAdminUser");
    }
    WikiBase.reset(request.getLocale(), user);
    WikiUserAuth.resetAnonymousGroupRoles();
    WikiUserAuth.resetDefaultGroupRoles();
    Environment.saveProperties();
    // the setup process does not add new topics to the index (currently)
    // TODO - remove this once setup uses safe connection handling
    WikiBase.getSearchEngine().refreshIndex();
    // force current user credentials to be removed and re-validated.
    SecurityContextHolder.clearContext();
    return true;
}
