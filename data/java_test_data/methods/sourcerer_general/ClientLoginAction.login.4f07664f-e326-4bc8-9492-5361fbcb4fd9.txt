public ActionForward login(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
    String loginName = request.getParameter("loginName");
    String password = request.getParameter("password");
    String remember = request.getParameter("remember");
    String history = request.getParameter("history");
    System.out.println("loginName=" + loginName);
    if (history != null && history.length() > 0) {
        request.setAttribute("RETURN_URL", BaseEncode.getFromBASE64(history));
    }
    try {
        int userCount = userLogin.getCount("username", loginName.trim());
        System.out.println("userCount = " + userCount);
        if (userCount >= 1) {
            UcMembers user = userLogin.clientVerifyPassword(loginName, password);
            // System.out.println("user is null = " + (user != null) );
            if (user != null) {
                // if( user.getActive().equals("Y")) {
                // System.out.println(" active Y");
                /*user.setLastLoginTime(new Date());
							user.setLastLoginIp(request.getRemoteAddr());*/
                userLogin.updateLoginLog(user);
                user = userInfoManager.initUserDetail(user);
                request.getSession().setAttribute("CLIENT", user);
                // ���cookie
                try {
                    if (remember.equals("Y")) {
                        String cookieMsg = user.getUid() + "@" + loginName + "@" + MD5.convert(password) + "@" + new Date().getTime();
                        Cookie c = new Cookie("FORBES", cookieMsg);
                        c.setMaxAge(60 * 60 * 24 * 365);
                        response.addCookie(c);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                // �������־
                UserActionTask actionTask = new UserActionTask();
                UserLoginAction action = new UserLoginAction(user);
                actionTask.setAction(action);
                // �첽ִ�У����������������
                TaskManager.getInstance().addTask(actionTask);
                // ͬ��ucneter��¼
                UCenterManager uc = new UCenterManager();
                uc.login(user.getUsername(), password);
                String syslogScript = uc.synlogin(user.getUid().toString());
                request.setAttribute("SYN_LGIN", syslogScript);
                return mapping.findForward("login");
            /*}
						else {
							//System.out.println(" active N");
							request.setAttribute("CLIENT", user);
							return mapping.findForward("verify");
						}*/
            } else {
                request.setAttribute("LOGIN_NAME", loginName);
                request.setAttribute("FAIL_MESSAGE", "������󣬻��߸��û��ѱ�ע����");
                return mapping.findForward("login_fail");
            }
        } else {
            request.setAttribute("LOGIN_NAME", loginName);
            request.setAttribute("FAIL_MESSAGE", "��ϵͳ���޸��û���");
            return mapping.findForward("login_fail");
        }
    } catch (Exception e) {
        request.setAttribute("LOGIN_NAME", loginName);
        // System.out.println(e.getMessage());
        request.setAttribute("FAIL_MESSAGE", "ϵͳ�������Ժ����ԡ�");
        return mapping.findForward("login_fail");
    }
}
