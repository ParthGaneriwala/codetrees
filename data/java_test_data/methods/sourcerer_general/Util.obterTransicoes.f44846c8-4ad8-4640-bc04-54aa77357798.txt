public static List obterTransicoes(String strTransicoes) {
    List listaDeTransicoes = new List();
    String[] lados = null;
    String[] ladoEsquerdo = null;
    String estadoInicial = null;
    String entrada = null;
    String proximoEstado = null;
    String[] linhas = strTransicoes.split("%");
    for (int i = 2; i < linhas.length; i++) {
        Log(linhas[i]);
        lados = linhas[i].split("->");
        proximoEstado = lados[1];
        Log(lados[0]);
        Log(proximoEstado);
        // lados[0]=lados[0].replaceFirst("\\(", "");
        lados[0] = lados[0].substring(1, lados[0].length() - 1);
        Log(lados[0]);
        lados[0] = lados[0].replaceFirst(",", "%");
        ladoEsquerdo = lados[0].split("%");
        estadoInicial = ladoEsquerdo[0];
        entrada = ladoEsquerdo[1];
        Log(estadoInicial);
        Log(entrada);
        Log("Transicao Lida - estado inicial:" + estadoInicial + " entrada:" + entrada + " proximo estado:" + proximoEstado);
        if (TipoMaquina.ehMaquina(entrada)) {
            listaDeTransicoes.add(new TransicaoSintatica(true, estadoInicial, entrada, proximoEstado, i - 2));
        } else {
            listaDeTransicoes.add(new TransicaoSintatica(false, estadoInicial, entrada.replace("\"", ""), proximoEstado, i - 2));
        }
    }
    if (log) {
        Log("Transicoes reconhecidas:");
        TransicaoSintatica t = null;
        for (int i = 0; i < listaDeTransicoes.tamanho; i++) {
            t = (TransicaoSintatica) listaDeTransicoes.get(i);
            Log("Tipo:" + ((t.transicaoParaMaquina) ? "Maquina " : "Terminal") + "  Estado Inicial:" + t.estadoInicial.toString() + " Entrada:" + ((t.transicaoParaMaquina) ? t.maquina.toString() : t.token.toString()) + "  Proximo Estado:" + t.proximoEstado.toString());
        }
    }
    return listaDeTransicoes;
}
