// documentation inherited
@Override
public boolean showDialog(Component parent) {
    // create the dialog
    Component root = SwingUtilities.getRoot(parent);
    String title = _msgs.get("m.select_config", _label);
    final JDialog dialog = (root instanceof Dialog) ? new JDialog((Dialog) root, title, true) : new JDialog((Frame) (root instanceof Frame ? root : null), title, true);
    dialog.add(this, BorderLayout.CENTER);
    // add the tree of configurations
    final ConfigTree tree = new ConfigTree(_groups);
    JScrollPane pane = new JScrollPane(tree);
    add(pane, BorderLayout.CENTER);
    // add button listeners
    final boolean[] result = new boolean[1];
    ActionListener al = new ActionListener() {

        public void actionPerformed(ActionEvent event) {
            if (event.getSource() == _ok) {
                _selected = tree.getSelectedNode().getName();
                result[0] = true;
            }
            dialog.setVisible(false);
        }
    };
    _ok.addActionListener(al);
    _cancel.addActionListener(al);
    // listen for selection events. select the current path
    tree.addTreeSelectionListener(new TreeSelectionListener() {

        public void valueChanged(TreeSelectionEvent event) {
            ConfigTreeNode node = tree.getSelectedNode();
            _ok.setEnabled(node != null && node.getConfig() != null);
        }
    });
    _ok.setEnabled(false);
    tree.setSelectedNode(_selected);
    // position and show the dialog
    dialog.setSize(300, 400);
    dialog.setLocationRelativeTo(parent);
    dialog.setVisible(true);
    // remove our listeners
    _ok.removeActionListener(al);
    _cancel.removeActionListener(al);
    // dispose of the tree
    remove(pane);
    tree.dispose();
    dialog.dispose();
    // return the stored result
    return result[0];
}
