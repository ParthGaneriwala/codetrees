public static MergeRequest parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception {
    MergeRequest object = new MergeRequest();
    int event;
    java.lang.String nillableValue = null;
    java.lang.String prefix = "";
    java.lang.String namespaceuri = "";
    try {
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance", "type") != null) {
            java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance", "type");
            if (fullTypeName != null) {
                java.lang.String nsPrefix = null;
                if (fullTypeName.indexOf(":") > -1) {
                    nsPrefix = fullTypeName.substring(0, fullTypeName.indexOf(":"));
                }
                nsPrefix = nsPrefix == null ? "" : nsPrefix;
                java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":") + 1);
                if (!"MergeRequest".equals(type)) {
                    // find namespace for the prefix
                    java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                    return (MergeRequest) com.sforce.soap.enterprise.sobject.ExtensionMapper.getTypeObject(nsUri, type, reader);
                }
            }
        }
        // Note all attributes that were handled. Used to differ normal attributes
        // from anyAttributes.
        java.util.Vector handledAttributes = new java.util.Vector();
        reader.next();
        java.util.ArrayList list2 = new java.util.ArrayList();
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("urn:enterprise.soap.sforce.com", "masterRecord").equals(reader.getName())) {
            object.setMasterRecord(com.sforce.soap.enterprise.sobject.SObject.Factory.parse(reader));
            reader.next();
        } else // End of if for expected property start element
        {
            // A start element we are not expecting indicates an invalid parameter was passed
            throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("urn:enterprise.soap.sforce.com", "recordToMergeIds").equals(reader.getName())) {
            // Process the array and step past its final element's end.
            list2.add(com.sforce.soap.enterprise.ID.Factory.parse(reader));
            // loop until we find a start element that is not part of this array
            boolean loopDone2 = false;
            while (!loopDone2) {
                // We should be at the end element, but make sure
                while (!reader.isEndElement()) reader.next();
                // Step out of this element
                reader.next();
                // Step to next element event.
                while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                if (reader.isEndElement()) {
                    // two continuous end elements means we are exiting the xml structure
                    loopDone2 = true;
                } else {
                    if (new javax.xml.namespace.QName("urn:enterprise.soap.sforce.com", "recordToMergeIds").equals(reader.getName())) {
                        list2.add(com.sforce.soap.enterprise.ID.Factory.parse(reader));
                    } else {
                        loopDone2 = true;
                    }
                }
            }
            // call the converter utility  to convert and set the array
            object.setRecordToMergeIds((com.sforce.soap.enterprise.ID[]) org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(com.sforce.soap.enterprise.ID.class, list2));
        } else // End of if for expected property start element
        {
            // A start element we are not expecting indicates an invalid parameter was passed
            throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement())
            // A start element we are not expecting indicates a trailing invalid property
            throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
    } catch (javax.xml.stream.XMLStreamException e) {
        throw new java.lang.Exception(e);
    }
    return object;
}
