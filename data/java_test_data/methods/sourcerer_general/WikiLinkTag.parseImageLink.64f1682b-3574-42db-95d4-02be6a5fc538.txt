private String parseImageLink(ParserInput parserInput, int mode, WikiLink wikiLink) throws Exception {
    String context = parserInput.getContext();
    String virtualWiki = parserInput.getVirtualWiki();
    boolean thumb = false;
    boolean frame = false;
    String caption = null;
    String align = null;
    int maxDimension = -1;
    if (!StringUtils.isBlank(wikiLink.getText())) {
        String[] tokens = wikiLink.getText().split("\\|");
        for (int i = 0; i < tokens.length; i++) {
            String token = tokens[i];
            if (StringUtils.isBlank(token)) {
                continue;
            }
            if (token.equalsIgnoreCase("noframe")) {
                frame = false;
            } else if (token.equalsIgnoreCase("frame")) {
                frame = true;
            } else if (token.equalsIgnoreCase("thumb")) {
                thumb = true;
            } else if (token.equalsIgnoreCase("right")) {
                align = "right";
            } else if (token.equalsIgnoreCase("left")) {
                align = "left";
            } else if (token.equalsIgnoreCase("center")) {
                align = "center";
            } else {
                Matcher m = IMAGE_SIZE_PATTERN.matcher(token);
                if (m.find()) {
                    maxDimension = new Integer(m.group(1)).intValue();
                } else {
                    // there was previous caption info append the new info.
                    if (StringUtils.isBlank(caption)) {
                        caption = token;
                    } else {
                        caption += "|" + token;
                    }
                }
            }
        }
        if (thumb && maxDimension <= 0) {
            maxDimension = DEFAULT_THUMBNAIL_SIZE;
        }
        caption = JFlexParserUtil.parseFragment(parserInput, caption, mode);
    }
    // do not escape html for caption since parser does it above
    return LinkUtil.buildImageLinkHtml(context, virtualWiki, wikiLink.getDestination(), frame, thumb, align, caption, maxDimension, false, null, false);
}
