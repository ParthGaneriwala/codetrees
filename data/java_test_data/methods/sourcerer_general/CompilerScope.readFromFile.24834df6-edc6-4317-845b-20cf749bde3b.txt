private void readFromFile() {
    JFileChooser fd = null;
    try {
        fd = new JFileChooser(previousLocation);
        fd.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f) {
                if (f.isDirectory() || f.getName().endsWith(".xml") || f.getName().endsWith(".tig")) {
                    return true;
                }
                return false;
            }

            @Override
            public String getDescription() {
                return "XML, tig files";
            }
        });
        if (fd.showOpenDialog(mainFrame) != JFileChooser.APPROVE_OPTION) {
            return;
        }
    } catch (Throwable e) {
        JOptionPane.showMessageDialog(mainFrame, "It appears your VM does not allow file loading.");
        return;
    }
    openedFile = fd.getSelectedFile();
    if (openedFile == null)
        return;
    previousLocation = openedFile.getParent();
    try {
        BufferedReader br = new BufferedReader(new FileReader(openedFile));
        StringBuffer fileText = new StringBuffer();
        String text = br.readLine();
        while (text != null) {
            fileText.append(text);
            fileText.append("\n");
            text = br.readLine();
        }
        codeTextPane.setText(fileText.toString());
        codeTextPane.requestFocus();
        br.close();
        setFileModified(false);
        generateCFG = true;
        if (selectedComponent == controlFlowGraphPane) {
            generateCFG();
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
