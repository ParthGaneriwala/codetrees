protected T doSwitch(int classifierID, EObject theEObject) {
    switch(classifierID) {
        case EquivalentsPackage.EQUIVALENT_BRANCH:
            {
                EquivalentBranch equivalentBranch = (EquivalentBranch) theEObject;
                T result = caseEquivalentBranch(equivalentBranch);
                if (result == null)
                    result = caseEquivalentEquipment(equivalentBranch);
                if (result == null)
                    result = caseConductingEquipment(equivalentBranch);
                if (result == null)
                    result = caseEquipment(equivalentBranch);
                if (result == null)
                    result = casePowerSystemResource(equivalentBranch);
                if (result == null)
                    result = caseIdentifiedObject(equivalentBranch);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case EquivalentsPackage.EQUIVALENT_EQUIPMENT:
            {
                EquivalentEquipment equivalentEquipment = (EquivalentEquipment) theEObject;
                T result = caseEquivalentEquipment(equivalentEquipment);
                if (result == null)
                    result = caseConductingEquipment(equivalentEquipment);
                if (result == null)
                    result = caseEquipment(equivalentEquipment);
                if (result == null)
                    result = casePowerSystemResource(equivalentEquipment);
                if (result == null)
                    result = caseIdentifiedObject(equivalentEquipment);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case EquivalentsPackage.EQUIVALENT_INJECTION:
            {
                EquivalentInjection equivalentInjection = (EquivalentInjection) theEObject;
                T result = caseEquivalentInjection(equivalentInjection);
                if (result == null)
                    result = caseEquivalentEquipment(equivalentInjection);
                if (result == null)
                    result = caseConductingEquipment(equivalentInjection);
                if (result == null)
                    result = caseEquipment(equivalentInjection);
                if (result == null)
                    result = casePowerSystemResource(equivalentInjection);
                if (result == null)
                    result = caseIdentifiedObject(equivalentInjection);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case EquivalentsPackage.EQUIVALENT_NETWORK:
            {
                EquivalentNetwork equivalentNetwork = (EquivalentNetwork) theEObject;
                T result = caseEquivalentNetwork(equivalentNetwork);
                if (result == null)
                    result = caseConnectivityNodeContainer(equivalentNetwork);
                if (result == null)
                    result = casePowerSystemResource(equivalentNetwork);
                if (result == null)
                    result = caseIdentifiedObject(equivalentNetwork);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case EquivalentsPackage.EQUIVALENT_SHUNT:
            {
                EquivalentShunt equivalentShunt = (EquivalentShunt) theEObject;
                T result = caseEquivalentShunt(equivalentShunt);
                if (result == null)
                    result = caseEquivalentEquipment(equivalentShunt);
                if (result == null)
                    result = caseConductingEquipment(equivalentShunt);
                if (result == null)
                    result = caseEquipment(equivalentShunt);
                if (result == null)
                    result = casePowerSystemResource(equivalentShunt);
                if (result == null)
                    result = caseIdentifiedObject(equivalentShunt);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        default:
            return defaultCase(theEObject);
    }
}
