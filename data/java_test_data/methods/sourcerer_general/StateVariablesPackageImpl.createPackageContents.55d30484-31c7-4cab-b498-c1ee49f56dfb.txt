public void createPackageContents() {
    if (isCreated)
        return;
    isCreated = true;
    // Create classes and their features
    stateVariableEClass = createEClass(STATE_VARIABLE);
    svInjectionEClass = createEClass(SV_INJECTION);
    createEReference(svInjectionEClass, SV_INJECTION__PNET_INJECTION);
    createEReference(svInjectionEClass, SV_INJECTION__QNET_INJECTION);
    svPowerFlowEClass = createEClass(SV_POWER_FLOW);
    createEReference(svPowerFlowEClass, SV_POWER_FLOW__P);
    createEReference(svPowerFlowEClass, SV_POWER_FLOW__Q);
    svShortCircuitEClass = createEClass(SV_SHORT_CIRCUIT);
    createEReference(svShortCircuitEClass, SV_SHORT_CIRCUIT__R0_PER_R);
    createEReference(svShortCircuitEClass, SV_SHORT_CIRCUIT__SSHORT_CIRCUIT);
    createEReference(svShortCircuitEClass, SV_SHORT_CIRCUIT__X0_PER_X);
    createEReference(svShortCircuitEClass, SV_SHORT_CIRCUIT__XPER_R);
    svShuntCompensatorSectionsEClass = createEClass(SV_SHUNT_COMPENSATOR_SECTIONS);
    createEReference(svShuntCompensatorSectionsEClass, SV_SHUNT_COMPENSATOR_SECTIONS__CONTINUOUS_SECTIONS);
    createEReference(svShuntCompensatorSectionsEClass, SV_SHUNT_COMPENSATOR_SECTIONS__SECTIONS);
    svStatusEClass = createEClass(SV_STATUS);
    createEReference(svStatusEClass, SV_STATUS__IN_SERVICE);
    svTapStepEClass = createEClass(SV_TAP_STEP);
    createEReference(svTapStepEClass, SV_TAP_STEP__CONTINUOUS_POSITION);
    createEReference(svTapStepEClass, SV_TAP_STEP__POSITION);
    svVoltageEClass = createEClass(SV_VOLTAGE);
    createEReference(svVoltageEClass, SV_VOLTAGE__ANGLE);
    createEReference(svVoltageEClass, SV_VOLTAGE__V);
}
