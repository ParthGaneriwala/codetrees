@Test
public void testAddMapHeaders() throws Exception {
    SipRequest request = (SipRequest) SipRequestTest.getMessage(SipRequestTest.INVITE);
    request.setInitial(true);
    String tag = request.getFrom().getParameter("tag");
    Map<String, List<String>> headerMap = new HashMap<String, List<String>>();
    headerMap.put("X-test", Arrays.asList("val1", "val2"));
    headerMap.put("From", Arrays.asList("\"Alice\" <sip:alice@cipango.voip>;tag=123"));
    headerMap.put("To", Arrays.asList("\"Bob\" <sip:bob@cipango.voip>;tag=123"));
    headerMap.put("Route", Arrays.asList("<sip:cipango.voip;lr>"));
    headerMap.put("Accept", Arrays.asList("text/plain"));
    // Contact compact header
    headerMap.put("m", Arrays.asList("Alice <sip:alice@127.0.0.22:5070;transport=UDP>;p=2"));
    new B2bHelper().addHeaders(request, headerMap);
    System.out.println(request);
    Iterator<String> it = request.getHeaders("X-test");
    assertEquals("val1", it.next());
    assertEquals("val2", it.next());
    assertFalse(it.hasNext());
    assertEquals("Alice <sip:alice@cipango.voip>;tag=" + tag, request.getFrom().toString());
    assertEquals("Bob <sip:bob@cipango.voip>", request.getTo().toString());
    it = request.getHeaders("Accept");
    assertEquals("text/plain", it.next());
    assertFalse(it.hasNext());
    it = request.getHeaders("Route");
    assertEquals("<sip:cipango.voip;lr>", it.next());
    assertFalse(it.hasNext());
    assertEquals("Alice <sip:alice@127.0.0.1:5060;transport=UDP>;p=2", request.getHeader("Contact"));
    headerMap.clear();
    headerMap.put("Via", Arrays.asList("SIP/2.0/UDP invalid:5061;branch=z9hG4bdes"));
    try {
        new B2bHelper().addHeaders(request, headerMap);
        fail("System header added");
    } catch (IllegalArgumentException e) {
    }
}
