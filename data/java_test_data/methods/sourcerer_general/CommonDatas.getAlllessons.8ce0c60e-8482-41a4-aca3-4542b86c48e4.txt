public static void getAlllessons() {
    // if (now - lessonInteractive > 60 * 60 * 60 * 1000) { // 每60分钟
    try {
        BasicService service = (BasicService) Globals.getBean("basicService");
        synchronized (AllLessonMap) {
            int size = AllLessonMap.size();
            DetachedCriteria dc = DetachedCriteria.forClass(Lessons.class);
            dc.addOrder(Order.desc("lessonid"));
            AllLessons.clear();
            AllLessonMap.clear();
            LATEST_LESSONS.clear();
            List list = service.findAllByCriteria(dc);
            int len = list == null ? 0 : list.size();
            int latest = 0;
            for (int i = 0; i < len; i++) {
                Lessons lessons = (Lessons) list.get(i);
                if ((lessons.getLessonstyle() == 2 || lessons.getLessonstyle() == 3)) {
                    if (latest++ <= 6)
                        LATEST_LESSONS.add(lessons);
                }
                AllLessonMap.put(lessons.getLessonid(), lessons.getTitle());
                AllLessons.put(lessons.getLessonid(), lessons);
            }
            LOG.info("课程更新成功!::前:" + size + "后:" + AllLessonMap.size());
        }
        LessonsService lservice = (LessonsService) Globals.getBean("lessonsService");
        List<Integer> list = lservice.getRecommandLessonids(5);
        RECOMMAND_LESSONS.clear();
        for (int i = 0; i < list.size(); i++) {
            RECOMMAND_LESSONS.add(AllLessons.get(list.get(i)));
        }
    } catch (ServiceException e) {
        LOG.error("获取所有课程失败" + e);
    }
// lessonInteractive = now;
// }
}
