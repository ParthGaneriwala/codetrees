@SuppressWarnings("unchecked")
public void init(Map config, Map args) {
    log.debug("(JDBCTemplatePropertySet) top of init.");
    super.init(config, args);
    // first let's see if we got given a configuration provider to use
    // already
    // $NON-NLS-1$
    this.configProvider = (JDBCTemplateConfigurationProvider) args.get("configurationProvider");
    /* if we did not get given one in the args, we need to set a config provider up */
    if (this.configProvider == null) {
        // lets see if we need to use a configurationProvider from a class
        // $NON-NLS-1$
        String configProviderClass = (String) config.get("configuration.provider.class");
        if (configProviderClass != null) {
            if (log.isDebugEnabled()) {
                // $NON-NLS-1$
                log.debug("Setting up property set provider of class: " + configProviderClass);
            }
            try {
                this.configProvider = (JDBCTemplateConfigurationProvider) ClassLoaderUtil.loadClass(configProviderClass, this.getClass()).newInstance();
            } catch (Exception e) {
                // $NON-NLS-1$
                log.error("Unable to load configuration provider class: " + configProviderClass, e);
                return;
            }
        } else {
            if (log.isDebugEnabled()) {
                // $NON-NLS-1$
                log.debug("Setting up property set with DefaultJDBCTemplateConfigurationProvider");
            }
            this.configProvider = new DefaultJDBCTemplateConfigurationProvider();
        }
    } else {
        if (log.isDebugEnabled()) {
            // $NON-NLS-1$
            log.debug("Setting up property set with jdbcTemplate provider passed in args.");
        }
    }
    dao = configProvider.getPropertySetDAO();
    dao.setGlobalKey((String) args.get("globalKey"));
    dao.setTableName((String) config.get("table.name"));
    dao.setColGlobalKey((String) config.get("col.globalKey"));
    dao.setColItemKey((String) config.get("col.itemKey"));
    dao.setColItemType((String) config.get("col.itemType"));
    dao.setColString((String) config.get("col.string"));
    dao.setColDate((String) config.get("col.date"));
    dao.setColData((String) config.get("col.data"));
    dao.setColFloat((String) config.get("col.float"));
    dao.setColNumber((String) config.get("col.number"));
}
