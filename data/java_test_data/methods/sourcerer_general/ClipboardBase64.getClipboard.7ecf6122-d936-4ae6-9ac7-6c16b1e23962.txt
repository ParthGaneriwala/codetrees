public Image getClipboard() {
    try {
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        DataFlavor[] flavors = clipboard.getAvailableDataFlavors();
        // System.out.println("Flavors:");
        String s = null;
        for (DataFlavor flavor : flavors) {
            // System.out.println(flavor);
            String type = flavor.getMimeType();
            Class<?> aClass = flavor.getRepresentationClass();
            if (type.startsWith("text/uri-list") && String.class.isAssignableFrom(aClass)) {
                Transferable t = clipboard.getContents(null);
                String[] files = ((String) t.getTransferData(flavor)).split("\n");
                for (String file : files) {
                    file = file.trim();
                    if (file.startsWith("file:"))
                        file = file.substring(5);
                    String lower = file.toLowerCase();
                    if (lower.endsWith(".png")) {
                        byte[] a = getBytesFromFile(new File(file));
                        StringBuilder sb = new StringBuilder(a.length * 2 + 27);
                        sb.append("url(data:image/png;base64,");
                        sb.append(encode(a, a.length));
                        sb.append(')');
                        if (s == null)
                            s = sb.toString();
                        else
                            s += "\n" + sb.toString();
                    }
                // System.out.println("file="+file);
                }
            } else if (type.startsWith("image/png") && InputStream.class.isAssignableFrom(aClass)) {
                Transferable t = clipboard.getContents(null);
                InputStream is = (InputStream) t.getTransferData(flavor);
                int available = is.available();
                StringBuilder sb = new StringBuilder(available * 2 + 27);
                sb.append("url(data:image/png;base64,");
                while (available > 0) {
                    byte[] a = new byte[available];
                    available = is.read(a);
                    char[] chars = encode(a, available);
                    sb.append(chars);
                    available = is.available();
                }
                sb.append(')');
                s = sb.toString();
            } else if (type.startsWith("application/x-java-file-list") && java.util.List.class.isAssignableFrom(aClass)) {
                Transferable t = clipboard.getContents(null);
                java.util.List<File> files = (java.util.List<File>) t.getTransferData(flavor);
                for (File file : files) {
                    s = processFile(file);
                    if (s != null)
                        break;
                }
            }
            if (s != null)
                break;
        }
        if (s != null) {
            if (text != null)
                text.setText(s);
            else
                System.out.println(s);
            if (put) {
                clipboard.setContents(new StringSelection(s), OWNER);
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    return null;
}
