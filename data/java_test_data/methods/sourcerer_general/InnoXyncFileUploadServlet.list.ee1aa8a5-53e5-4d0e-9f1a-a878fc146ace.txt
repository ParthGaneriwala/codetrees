@Override
protected void list(HttpServletRequest request, HttpServletResponse response) throws Exception {
    Map<String, Object> paramMap = RequestUtils.getParameterMap(request);
    logger.debug("paramMap: {}", paramMap.toString());
    String mapId = (String) paramMap.get("mapId");
    String repositoryType = (String) paramMap.get("repositoryType");
    IXyncOutputStream gos = null;
    List<FileDTO> fileDTOList = null;
    try {
        // innoxync stream
        gos = ((HttpIXyncResponse) response).getIXyncOutputStream();
        if (StringUtils.isEmpty(repositoryType)) {
            if (StringUtils.isEmpty(mapId)) {
                fileDTOList = fileManager.selectFile();
            } else {
                fileDTOList = fileManager.selectFileByMapId(mapId);
            }
        } else {
            switch(RepositoryType.valueOf(repositoryType)) {
                case DATABASE:
                    fileDTOList = fileManager.selectFileByRepositoryType(RepositoryType.DATABASE);
                    break;
                case FILE_SYSTEM:
                    fileDTOList = fileManager.selectFileByRepositoryType(RepositoryType.FILE_SYSTEM);
                    break;
            }
        }
        logger.debug("file count: {}", fileDTOList.size());
        // make dataset
        IXyncDataSet dataset = new IXyncDataSet("dsetFile");
        // dsetFile.SetDataHeader("chk:STRING(1),map_id:STRING(255),file_id:STRING(255),file_name:STRING(255),file_reference:URL(255), size:DECIMAL(10)");
        dataset.addDataColumn(new IXyncDataColumn("chk", IXyncDataColumn.TB_STRING, 1));
        dataset.addDataColumn(new IXyncDataColumn("map_id", IXyncDataColumn.TB_STRING, 255));
        dataset.addDataColumn(new IXyncDataColumn("file_id", IXyncDataColumn.TB_STRING, 255));
        dataset.addDataColumn(new IXyncDataColumn("file_name", IXyncDataColumn.TB_STRING, 255));
        dataset.addDataColumn(new IXyncDataColumn("file_reference", IXyncDataColumn.TB_URL, 255));
        dataset.addDataColumn(new IXyncDataColumn("size", IXyncDataColumn.TB_DECIMAL, 10));
        for (FileDTO fileDTO : fileDTOList) {
            IXyncDataRow dataRow = dataset.newDataRow();
            dataRow.addColumnValue("F");
            dataRow.addColumnValue(fileDTO.getMapId());
            dataRow.addColumnValue(fileDTO.getFileId());
            dataRow.addColumnValue(fileDTO.getRealFileName());
            dataRow.addColumnValue("");
            dataRow.addColumnValue(fileDTO.getFileSize());
            dataset.addDataRow(dataRow);
        }
        logger.debug("dataset: {}", dataset);
        logger.debug("dataset row count: {}", dataset.getDataRowCnt());
        logger.debug("dataset column count: {}", dataset.getDataColCnt());
        gos.write(dataset);
    } catch (Exception e) {
        e.printStackTrace();
        logger.error(e.getMessage());
    } finally {
        if (gos != null) {
            gos.close();
        }
    }
}
