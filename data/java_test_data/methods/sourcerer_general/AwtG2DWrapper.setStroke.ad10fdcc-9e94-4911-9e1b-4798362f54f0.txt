public void setStroke(Stroke s) {
    if (s instanceof BasicStroke) {
        BasicStroke bs = (BasicStroke) s;
        switch(bs.getEndCap()) {
            case BasicStroke.CAP_BUTT:
                gc.setLineCap(SWT.CAP_FLAT);
                break;
            case BasicStroke.CAP_ROUND:
                gc.setLineCap(SWT.CAP_FLAT);
                break;
            case BasicStroke.CAP_SQUARE:
                gc.setLineCap(SWT.CAP_FLAT);
                break;
            default:
                break;
        }
        switch(bs.getLineJoin()) {
            case BasicStroke.JOIN_BEVEL:
                gc.setLineJoin(SWT.JOIN_BEVEL);
                break;
            case BasicStroke.JOIN_MITER:
                gc.setLineJoin(SWT.JOIN_MITER);
                break;
            case BasicStroke.JOIN_ROUND:
                gc.setLineJoin(SWT.JOIN_ROUND);
                break;
            default:
                break;
        }
        gc.setLineWidth((int) bs.getLineWidth());
        float[] fDsh = bs.getDashArray();
        int[] iDsh = new int[0];
        if (fDsh != null && fDsh.length > 0) {
            int size = fDsh.length;
            iDsh = new int[size];
            for (int i = 0; i < size; i++) {
                iDsh[i] = (int) fDsh[i];
            }
        }
        gc.setLineDash(iDsh);
        int[] strokeKey = new int[3 + ((iDsh != null) ? iDsh.length : 0)];
        strokeKey[0] = bs.getEndCap();
        strokeKey[1] = bs.getLineJoin();
        strokeKey[2] = (int) bs.getLineWidth();
        if (iDsh != null) {
            for (int i = 1; i <= iDsh.length; i++) {
                strokeKey[2 + i] = iDsh[i - 1];
            }
        }
        String key = getStrokeRegisterKey(strokeKey, iDsh == null ? 0 : iDsh.length);
        if (!_strokeRegister.containsKey(key)) {
            _strokeRegister.put(key, bs);
        }
    }
// FIXME: Add Dash rule/Miter Limit as soon as SWT post it
}
