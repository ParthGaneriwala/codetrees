// end fileTransfertInit
private Message readMessage() {
    try {
        InputStream inputStream = transfertSocket.getInputStream();
        DataInputStream dataInputStream = new DataInputStream(inputStream);
        byte[] messageByte = new byte[1024];
        String messageString;
        Message mess;
        byte type = dataInputStream.readByte();
        String nickSrc = dataInputStream.readUTF();
        String nickDest = dataInputStream.readUTF();
        // the message can be a byte[] or a string
        if (type == Message.FILE) {
            int lenght = dataInputStream.readInt();
            dataInputStream.read(messageByte);
            mess = new Message(type, nickSrc, nickDest, lenght, messageByte);
        } else {
            messageString = dataInputStream.readUTF();
            mess = new Message(type, nickSrc, nickDest, messageString);
        }
        projetChatView.setSendEnabled(true);
        System.out.println(this.getName() + ": Message received (type " + mess.getType() + ").");
        return mess;
    } catch (Exception e) {
        if (e instanceof EOFException) {
            System.out.println(this.getName() + ": ERROR connection lost (" + e.toString() + ").");
            projetChatView.disconnection();
            clientNetwork.disconnect(false);
        } else {
            System.out.println(this.getName() + ": ERROR class ClientThread method readMessage" + e.toString());
            projetChatView.disconnection();
            clientNetwork.disconnect(false);
        }
        return null;
    }
}
