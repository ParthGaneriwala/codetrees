@BeforeClass
protected void setUp() throws IOException {
    System.out.println("\n\n FastInsertionTest: \n");
    final JdbcTemplate jdbcTemplate = new JdbcTemplate(m_dataSource);
    renderSeperator();
    System.out.println("Dropping table");
    jdbcTemplate.update("DROP TABLE IF EXISTS rounds;");
    System.out.println("Creating table");
    jdbcTemplate.update("CREATE TABLE rounds (round_id INT, player_id INT DEFAULT 0, gaming_center INT DEFAULT 1, last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP);");
    jdbcTemplate.update("ALTER TABLE rounds DISABLE KEYS;");
    jdbcTemplate.update("LOCK TABLES rounds WRITE;");
    final Date now = new Date();
    // delete file from previous run if existent
    final File javaIoTmpDir = SystemUtils.getJavaIoTmpDir();
    assertNotNull(javaIoTmpDir);
    assertTrue(javaIoTmpDir.exists());
    final File dumpFile = new File(javaIoTmpDir, "dump.txt");
    if (dumpFile.exists()) {
        assertTrue(dumpFile.delete());
    }
    Writer out = null;
    try {
        out = new BufferedWriter(new FileWriter(dumpFile));
    } catch (IOException e) {
        fail();
    }
    assertNotNull(out);
    final long records = getNumberOfRecords();
    try {
        for (int i = 0; i < records; i++) {
            out.write("1");
            out.write('\t');
            out.write("1");
            out.write('\t');
            out.write("1");
            out.write('\t');
            out.write("0000-00-00 00:00:00");
            out.write('\n');
        }
    } catch (IOException e) {
        fail();
    } finally {
        out.close();
    }
    jdbcTemplate.update("LOAD DATA INFILE '" + dumpFile.getPath() + "' INTO TABLE rounds");
    jdbcTemplate.update("UNLOCK TABLES;");
    jdbcTemplate.update("ALTER TABLE rounds ENABLE KEYS;");
    System.out.println("Inserting " + records + " rows took " + (new Date().getTime() - now.getTime()) + " ms");
    renderSeperator();
}
