private int parseCharacterMap(ParseState parser, int lineCount, ImmutableList.Builder<ImmutableList<LineFragment>> characterMapBuilder) throws SourceMapParseException, JSONException {
    int maxID = -1;
    // [0,,,,,,1,2]
    for (int i = 0; i < lineCount; ++i) {
        String currentLine = parser.readLine();
        // information for the line.
        if (currentLine.isEmpty()) {
            continue;
        }
        ImmutableList.Builder<LineFragment> fragmentList = ImmutableList.builder();
        // We need the start index to initialize this, needs to be done in the
        // loop.
        LineFragment myLineFragment = null;
        JSONArray charArray = new JSONArray(currentLine);
        int numOffsets = charArray.length();
        int lastID = -1;
        int startID = Integer.MIN_VALUE;
        List<Byte> currentOffsets = Lists.newArrayList();
        for (int j = 0; j < charArray.length(); ++j) {
            // Keep track of the current mappingID, if the next element in the
            // array is empty we reuse the existing mappingID for the column.
            int mappingID = lastID;
            if (!charArray.isNull(j)) {
                mappingID = charArray.optInt(j);
                if (mappingID > maxID) {
                    maxID = mappingID;
                }
            }
            if (startID == Integer.MIN_VALUE) {
                startID = mappingID;
            } else {
                // a new line fragment with a new start value.
                if (mappingID - lastID > Byte.MAX_VALUE || mappingID - lastID < Byte.MIN_VALUE) {
                    myLineFragment = new LineFragment(startID, Bytes.toArray(currentOffsets));
                    currentOffsets.clear();
                    // Start a new section.
                    fragmentList.add(myLineFragment);
                    startID = mappingID;
                } else {
                    currentOffsets.add((byte) (mappingID - lastID));
                }
            }
            lastID = mappingID;
        }
        if (startID != Integer.MIN_VALUE) {
            myLineFragment = new LineFragment(startID, Bytes.toArray(currentOffsets));
            fragmentList.add(myLineFragment);
        }
        characterMapBuilder.add(fragmentList.build());
    }
    return maxID;
}
