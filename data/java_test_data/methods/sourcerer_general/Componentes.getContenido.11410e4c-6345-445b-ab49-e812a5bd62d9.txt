@Override
public Panel getContenido() {
    cargaImagenesRolodex();
    for (int i = 0; i < c2009.getRolodexCards().length; i++) {
        c2009.getRolodexCards()[i].addClickListener(this);
    }
    for (int i = 0; i < f2009.getRolodexCards().length; i++) {
        f2009.getRolodexCards()[i].addClickListener(this);
    }
    for (int i = 0; i < lm2009.getRolodexCards().length; i++) {
        lm2009.getRolodexCards()[i].addClickListener(this);
    }
    figurantes = new AnimatedImage("figurantes", "images/menuPostulantesyFigurantes.png");
    letraymusica = new AnimatedImage("letraymusica", "images/menuLetrayMusica.png");
    figurantes.addAWClickListener(new AWClickListener() {

        public void onClick(AnimatedWidget sender) {
            setSubSeccion(SUBSECCIONES_COMPONENTES.FIGURANTES);
        }
    });
    letraymusica.addAWClickListener(new AWClickListener() {

        public void onClick(AnimatedWidget sender) {
            setSubSeccion(SUBSECCIONES_COMPONENTES.COLABORADORES);
        }
    });
    figurantes.moveTo(new Link(this, LinkPoint.CENTER_TOP, 0, -80, LinkPoint.CENTER_TOP));
    letraymusica.moveTo(new Link(this, LinkPoint.RIGHT_TOP, 0, -50, LinkPoint.RIGHT_TOP));
    figurantes.scale(0.6);
    letraymusica.scale(0.6);
    figurantes.hide();
    letraymusica.hide();
    imgPrincipal = new Image("images/loading.gif");
    imgPrincipal.addClickListener(new ClickListener() {

        public void onClick(Widget sender) {
            RolodexFichas rolodexActivo = getRolodexActivo();
            int total = rolodexActivo.getRolodexCards().length;
            Ficha f = rolodexActivo.getSiguiente();
            muestraFicha(f, total);
        }
    });
    DOM.setStyleAttribute(imgPrincipal.getElement(), "cursor", "hand");
    contenido = new SimplePanel();
    contenido.setWidget(new Image("images/loading.gif"));
    DOM.setIntStyleAttribute(contenido.getElement(), "padding", 5);
    DOM.setStyleAttribute(contenido.getElement(), "cursor", "hand");
    nombre = new TextBox();
    alias = new TextBox();
    puesto = new TextBox();
    desde = new TextBox();
    String textBoxWidth = "220px";
    nombre.setWidth(textBoxWidth);
    alias.setWidth(textBoxWidth);
    puesto.setWidth(textBoxWidth);
    desde.setWidth(textBoxWidth);
    VerticalPanel campos = new VerticalPanel();
    campos.setSpacing(4);
    campos.add(new Label("Nombre:"));
    campos.add(nombre);
    campos.add(new Label("Pero se le conoce por:"));
    campos.add(alias);
    campos.add(new Label("Puesto:"));
    campos.add(puesto);
    campos.add(new Label("Se enreó con nosotros en:"));
    campos.add(desde);
    cv = new CurriculumPanel();
    cv.setWidth("400px");
    columnas = new HorizontalPanel();
    columnas.setSpacing(5);
    columnas.setWidth("100%");
    flechaIzq = new Image("images/flechaIzq.gif");
    flechaDer = new Image("images/flechaDer.gif");
    flechaIzq.addMouseListener(this);
    flechaDer.addMouseListener(this);
    imgBtnCerrar = new Image("images/eliminar.png");
    DOM.setStyleAttribute(imgBtnCerrar.getElement(), "cursor", "hand");
    imgBtnCerrar.addClickListener(new ClickListener() {

        public void onClick(Widget sender) {
            panelInfoComponente.hide();
        }
    });
    imgBtnCerrar.setTitle("Cerrar y ver a otro gañan");
    columnas.add(imgBtnCerrar);
    columnas.add(flechaIzq);
    columnas.add(imgPrincipal);
    DOM.setStyleAttribute(imgPrincipal.getElement(), "paddingRight", "25px");
    columnas.add(campos);
    columnas.add(cv);
    columnas.add(flechaDer);
    columnas.setCellVerticalAlignment(flechaIzq, HasVerticalAlignment.ALIGN_MIDDLE);
    columnas.setCellVerticalAlignment(flechaDer, HasVerticalAlignment.ALIGN_MIDDLE);
    columnas.setCellVerticalAlignment(imgBtnCerrar, HasVerticalAlignment.ALIGN_TOP);
    columnas.setStylePrimaryName("fichaComponentes");
    datos = new SimplePanel();
    DOM.setStyleAttribute(datos.getElement(), "background", "white");
    datos.setWidget(columnas);
    setSubSeccion(SUBSECCIONES_COMPONENTES.COMPONENTES);
    return contenido;
}
