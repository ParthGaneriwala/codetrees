// $ANTLR start "parameter"
public final Compila_doresParser.parameter_return parameter() throws RecognitionException {
    Compila_doresParser.parameter_return retval = new Compila_doresParser.parameter_return();
    retval.start = input.LT(1);
    CommonTree root_0 = null;
    Token AS121 = null;
    Compila_doresParser.id_return id120 = null;
    Compila_doresParser.type_return type122 = null;
    CommonTree AS121_tree = null;
    RewriteRuleTokenStream stream_AS = new RewriteRuleTokenStream(adaptor, "token AS");
    RewriteRuleSubtreeStream stream_id = new RewriteRuleSubtreeStream(adaptor, "rule id");
    RewriteRuleSubtreeStream stream_type = new RewriteRuleSubtreeStream(adaptor, "rule type");
    try {
        // C:\\Documents and Settings\\user\\Meus documentos\\svn [Compila_dores]\\trunk\\grammar\\Compila_dores.g:198:2: ( id AS type -> ^( type id ) )
        // C:\\Documents and Settings\\user\\Meus documentos\\svn [Compila_dores]\\trunk\\grammar\\Compila_dores.g:198:4: id AS type
        {
            pushFollow(FOLLOW_id_in_parameter1370);
            id120 = id();
            state._fsp--;
            stream_id.add(id120.getTree());
            AS121 = (Token) match(input, AS, FOLLOW_AS_in_parameter1372);
            stream_AS.add(AS121);
            pushFollow(FOLLOW_type_in_parameter1374);
            type122 = type();
            state._fsp--;
            stream_type.add(type122.getTree());
            // AST REWRITE
            // elements: id, type
            // token labels:
            // rule labels: retval
            // token list labels:
            // rule list labels:
            // wildcard labels:
            retval.tree = root_0;
            RewriteRuleSubtreeStream stream_retval = new RewriteRuleSubtreeStream(adaptor, "rule retval", retval != null ? retval.tree : null);
            root_0 = (CommonTree) adaptor.nil();
            // 198:15: -> ^( type id )
            {
                // C:\\Documents and Settings\\user\\Meus documentos\\svn [Compila_dores]\\trunk\\grammar\\Compila_dores.g:198:18: ^( type id )
                {
                    CommonTree root_1 = (CommonTree) adaptor.nil();
                    root_1 = (CommonTree) adaptor.becomeRoot(stream_type.nextNode(), root_1);
                    adaptor.addChild(root_1, stream_id.nextTree());
                    adaptor.addChild(root_0, root_1);
                }
            }
            retval.tree = root_0;
        }
        retval.stop = input.LT(-1);
        retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
        adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
    } catch (RecognitionException re) {
        reportError(re);
        recover(input, re);
        retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);
    } finally {
    }
    return retval;
}
