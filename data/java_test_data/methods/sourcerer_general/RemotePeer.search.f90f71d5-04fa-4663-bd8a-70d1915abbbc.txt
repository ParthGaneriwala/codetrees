public ArrayList search(String arg, int myPort, String myAddr, int randomID) throws Exception {
    Socket s = this.createSocket();
    ArrayList results = new ArrayList();
    // Send Command
    Command cmd = new Command();
    cmd.setCmdEnum(CmdEnum.SEARCH);
    cmd.setPara1(String.valueOf(myPort));
    cmd.setPara2(arg);
    cmd.setPara3(String.valueOf(randomID));
    cmd.setPara4(myAddr);
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    ObjectOutputStream out = new ObjectOutputStream(bos);
    out.writeObject(cmd);
    OutputStream os = s.getOutputStream();
    os.write(bos.toByteArray());
    // Receive search results
    System.out.println("[RemotePeer] receiving search results...");
    try {
        ObjectInputStream is = new ObjectInputStream(s.getInputStream());
        results = (ArrayList) is.readObject();
    } catch (Exception e) {
        System.out.println("[RemotePeer] exception while rcving search results: " + e.toString());
    }
    this.closeSocket(s);
    System.out.println("[RemotePeer] received results: ");
    Iterator it = results.iterator();
    while (it.hasNext()) {
        SearchResult tmpResult = (SearchResult) it.next();
        System.out.println(tmpResult.getFilename() + "on " + tmpResult.getRemotePeer().toString());
    }
    return results;
}
