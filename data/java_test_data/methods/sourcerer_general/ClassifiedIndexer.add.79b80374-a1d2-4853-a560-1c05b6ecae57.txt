public void add(IndexWriter writer, Object item, boolean modified) throws IOException {
    Classified classified = (Classified) item;
    // add the document
    Document document = new Document();
    document.add(new Field("type", "classifieds", Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("classifiedId", String.valueOf(classified.getId()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("projectId", String.valueOf(classified.getProjectId()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    if (classified.getCategoryId() != -1) {
        document.add(new Field("categoryId", String.valueOf(classified.getCategoryId()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    }
    document.add(new Field("location", String.valueOf(ProjectUtils.loadProject(classified.getProjectId()).getLocation()), Field.Store.YES, Field.Index.TOKENIZED));
    document.add(new Field("instanceId", String.valueOf(ProjectUtils.loadProject(classified.getProjectId()).getInstanceId()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    if (classified.getProjectId() > -1) {
        // use the project's general access to speedup guest projects
        Project project = ProjectUtils.loadProject(classified.getProjectId());
        document.add(new Field("projectCategoryId", String.valueOf(project.getCategoryId()), Field.Store.YES, Field.Index.UN_TOKENIZED));
        document.add(new Field("guests", (project.getFeatures().getAllowGuests() ? "1" : "0"), Field.Store.YES, Field.Index.UN_TOKENIZED));
        document.add(new Field("participants", (project.getFeatures().getAllowParticipants() ? "1" : "0"), Field.Store.YES, Field.Index.UN_TOKENIZED));
        // determine if membership is needed for this content based on a guest's access to the data
        int membership = project.getFeatures().getMembershipRequired() ? 1 : 0;
        if (membership == 1 && ProjectUtils.hasAccess(project.getId(), UserUtils.createGuestUser(), "project-classifieds-view")) {
            membership = 0;
        }
        document.add(new Field("membership", String.valueOf(membership), Field.Store.YES, Field.Index.UN_TOKENIZED));
    }
    document.add(new Field("title", classified.getTitle(), Field.Store.YES, Field.Index.TOKENIZED));
    document.add(new Field("titleFull", classified.getTitle(), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("titleLower", classified.getTitle().toLowerCase(), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("contents", classified.getTitle() + " " + ContentUtils.toText(classified.getDescription()), Field.Store.YES, Field.Index.TOKENIZED));
    SimpleDateFormat formatter = new SimpleDateFormat("yyyyMMdd");
    if (classified.getPublishDate() != null) {
        document.add(new Field("modified", String.valueOf(formatter.format(classified.getPublishDate())), Field.Store.YES, Field.Index.UN_TOKENIZED));
        document.add(new Field("published", String.valueOf(formatter.format(classified.getPublishDate())), Field.Store.YES, Field.Index.UN_TOKENIZED));
    }
    if (classified.getExpirationDate() != null) {
        document.add(new Field("expired", String.valueOf(formatter.format(classified.getExpirationDate())), Field.Store.YES, Field.Index.UN_TOKENIZED));
    }
    writer.addDocument(document);
    if (System.getProperty("DEBUG") != null && modified) {
        System.out.println("ClassifiedIndexer-> Added: " + classified.getId());
    }
}
