public void testSetPagadoReciboAnteriorBad() throws ValidadorException {
    AdministradorDeLiquidaciones.HacerLiquidacion();
    Liquidacion liquidacion1 = AdministradorDeLiquidaciones.getUltimaLiquidacion();
    // Pone como devuelto un recibo del socio 0, de la primer liquidaciï¿½n
    List recibos1 = liquidacion1.getRecibosFor(socios[0]);
    Recibo r = (Recibo) recibos1.get(0);
    AdministradorDeLiquidaciones.setDevuelto(r.getNumeroRecibo(), 1, true);
    AdministradorDeLiquidaciones.HacerLiquidacion();
    Liquidacion liquidacion2 = AdministradorDeLiquidaciones.getUltimaLiquidacion();
    List recibos2 = liquidacion2.getRecibosFor(socios[0]);
    Recibo r1 = (Recibo) recibos2.get(0);
    Recibo r2 = (Recibo) recibos2.get(1);
    // Primero hay que establecer como devuelto el recibo mas nuevo
    Recibo rNuevo;
    Recibo rViejo;
    if ((r1.getAnio() > r2.getAnio()) || ((r1.getAnio() == r2.getAnio()) && (r1.getMes() > r2.getMes()))) {
        rNuevo = r1;
        rViejo = r2;
    } else {
        rNuevo = r2;
        rViejo = r1;
    }
    // Establece como devuelto el recibo mas nuevo
    AdministradorDeLiquidaciones.setDevuelto(rNuevo.getNumeroRecibo(), 1, true);
    // Establece como devuelto el recibo mas viejo
    AdministradorDeLiquidaciones.setDevuelto(rViejo.getNumeroRecibo(), 1, true);
    try {
        // Establece como pagado el recibo mas nuevo
        AdministradorDeLiquidaciones.setDevuelto(rNuevo.getNumeroRecibo(), 1, false);
        fail();
    } catch (ValidadorException e) {
    }
}
