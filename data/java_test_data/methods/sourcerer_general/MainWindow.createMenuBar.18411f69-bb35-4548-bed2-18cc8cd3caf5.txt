private void createMenuBar() {
    menuBar = new Menu(sShell, SWT.BAR);
    sShell.setMenuBar(menuBar);
    // File
    MenuItem fileMenuHeader = new MenuItem(menuBar, SWT.CASCADE);
    setText(fileMenuHeader, "&File");
    Menu fileMenu = new Menu(sShell, SWT.DROP_DOWN);
    fileMenuHeader.setMenu(fileMenu);
    MenuItem fileNewItem = new MenuItem(fileMenu, SWT.PUSH);
    setText(fileNewItem, "&Move to ...");
    fileNewItem.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent arg0) {
        }

        public void widgetSelected(SelectionEvent arg0) {
            DirectoryDialog dlg = new DirectoryDialog(sShell);
            dlg.setMessage("Please select the destination folder you want to move the file to.");
            String filename = dlg.open();
            if (filename != null) {
                if ((filename + File.separator + "chenance.db").equals(BaseService.filepath)) {
                    SWTUtil.showErrorMessage(sShell, "Source = Destination.  " + "Please select another different dir.");
                    return;
                }
                MessageDialog ret = new MessageDialog(sShell, "Chenance", null, "Are you sure to move the file in which " + "Chenance saves all your " + "householding data \n\n" + "From: \n\n" + BaseService.filepath + "\n\n" + "To: \n\n" + filename, SWT.ICON_QUESTION, new String[] { "Yes", "No" }, 1);
                if (ret.open() == 0) {
                    LOG.info("moving .db file to " + filename);
                    try {
                        BaseService.moveTo(filename);
                    } catch (IOException e) {
                        LOG.error("move .db failed", e);
                        SWTUtil.showErrorMessage(sShell, "Moving file failed.  The file remains its original place: \n\n" + BaseService.filepath + "\n\n" + "Chenance will be closed due to this error and " + "Chenance will use that file as usual.");
                        System.exit(0);
                    }
                    LOG.info(".db file moved successfully");
                }
            }
        }
    });
    // MenuItem fileOpenItem = new MenuItem(fileMenu, SWT.PUSH);
    // setText(fileOpenItem, "&Open");
    // fileOpenItem.addSelectionListener(new FileOpenListener());
    MenuItem fileSaveItem = new MenuItem(fileMenu, SWT.PUSH);
    setText(fileSaveItem, "&Save");
    fileSaveItem.addSelectionListener(new FileSaveListener());
    // Edit
    MenuItem menuItem2 = new MenuItem(menuBar, SWT.CASCADE);
    setText(menuItem2, "&Edit");
    // View
    MenuItem viewMenuHeader = new MenuItem(menuBar, SWT.CASCADE);
    setText(viewMenuHeader, "&View");
    Menu viewMenu = new Menu(sShell, SWT.DROP_DOWN);
    viewMenuHeader.setMenu(viewMenu);
    MenuItem viewBsItem = new MenuItem(viewMenu, SWT.RADIO);
    setText(viewBsItem, "Balance Sheet");
    // viewBsItem.addSelectionListener(new
    // ChangeLanguageListener(Locale.ENGLISH));
    MenuItem viewInvItem = new MenuItem(viewMenu, SWT.RADIO);
    setText(viewInvItem, "Investment History");
    MenuItem viewAssetItem = new MenuItem(viewMenu, SWT.RADIO);
    setText(viewAssetItem, "Asset Management");
    // Lang
    MenuItem langMenuHeader = new MenuItem(menuBar, SWT.CASCADE);
    setText(langMenuHeader, "&Language");
    Menu langMenu = new Menu(sShell, SWT.DROP_DOWN);
    langMenuHeader.setMenu(langMenu);
    MenuItem langEnItem = new MenuItem(langMenu, SWT.RADIO);
    setText(langEnItem, "English");
    langEnItem.addSelectionListener(new ChangeLanguageListener(Locale.ENGLISH));
    MenuItem langJaItem = new MenuItem(langMenu, SWT.RADIO);
    setText(langJaItem, "日本語");
    langJaItem.addSelectionListener(new ChangeLanguageListener(Locale.JAPANESE));
    MenuItem langZhItem = new MenuItem(langMenu, SWT.RADIO);
    setText(langZhItem, "简体中文");
    langZhItem.addSelectionListener(new ChangeLanguageListener(Locale.CHINESE));
    // Help
    MenuItem menuItem4 = new MenuItem(menuBar, SWT.CASCADE);
    setText(menuItem4, "&Help");
}
