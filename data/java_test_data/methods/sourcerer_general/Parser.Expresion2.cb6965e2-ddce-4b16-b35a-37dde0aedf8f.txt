tupla_id Expresion2() {
    // c2 = arg1
    // c3 = arg2
    tupla_id c2, c3;
    String arg1, arg2, temporal;
    Simbolo simba;
    tupla_Tercetos tupla = new tupla_Tercetos("", "", "");
    temporal = tercetos.darTemporal();
    if ((next2 != null) && (next2.kind == 22)) {
        next2 = null;
        c2 = Expresion2();
        if (c2.getTipo() != 'e')
            SemError("Se esperaba una expresión entera");
        Esperado(22);
        c3 = Expresion3();
        if (c3.getTipo() != 'e')
            SemError("Se esperaba una expresión entera");
        terceto_actual = tercetos.operacionBinaria(c2.getId(), c3.getId(), "+", temporal);
        tupla = new tupla_Tercetos(clase_actual, metodo_actual, terceto_actual);
        if (metodo_actual.equals("main"))
            colaMain.add(tupla);
        else
            colaTercetos.add(tupla);
        // Se mete el temporal en la Tabla de Símbolos
        simba = new Simbolo(temporal, 'e');
        simba.setTamano(1);
        tablasimbolos.InsertarSimbolo(simba, temporal);
        return new tupla_id(temporal, 'e');
    }
    if (StartOf(2)) {
        c3 = Expresion3();
        return c3;
    } else if (StartOf(2)) {
        c2 = Expresion2();
        arg1 = c2.getId();
        if (c2.getTipo() != 'e')
            SemError("Se esperaba una expresión entera");
        Esperado(22);
        c3 = Expresion3();
        arg2 = c3.getId();
        if (c3.getTipo() != 'e')
            SemError("Se esperaba una expresión entera");
        temporal = tercetos.darTemporal();
        terceto_actual = tercetos.operacionBinaria(arg1, arg2, "+", temporal);
        tupla = new tupla_Tercetos(clase_actual, metodo_actual, terceto_actual);
        if (metodo_actual.equals("main"))
            colaMain.add(tupla);
        else
            colaTercetos.add(tupla);
        // Se mete el temporal en la Tabla de Símbolos
        simba = new Simbolo(temporal, 'e');
        simba.setTamano(1);
        tablasimbolos.InsertarSimbolo(simba, temporal);
        return new tupla_id("temporal", 'e');
    } else {
        // SynErr(49);
        c3 = Expresion3();
        return c3;
    }
}
