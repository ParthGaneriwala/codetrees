public boolean registerTrans(UserProfileDTO userDTO, SubscriptionDTO subscriptionDTO) {
    Connection con = null;
    PreparedStatement pstmUser = null;
    PreparedStatement pstmSub = null;
    try {
        con = DatabaseUtil.getConnection();
        // connection set auto commit = false
        con.setAutoCommit(false);
        // prepare user Profile
        pstmUser = con.prepareStatement(SQL_CREATE);
        pstmUser.setString(1, userDTO.getUsername());
        pstmUser.setInt(2, userDTO.getRoleID());
        pstmUser.setString(3, userDTO.getPassword());
        pstmUser.setString(4, userDTO.getFirstName());
        pstmUser.setString(5, userDTO.getLastName());
        pstmUser.setString(6, userDTO.getEmail());
        pstmUser.setString(7, userDTO.getStreet());
        pstmUser.setString(8, userDTO.getCity());
        pstmUser.setString(9, userDTO.getState());
        pstmUser.setString(10, userDTO.getZipCode());
        pstmUser.setString(11, userDTO.getCountry());
        pstmUser.setString(12, userDTO.getPhone());
        pstmUser.setString(13, userDTO.getDescription());
        // execute insert UserProfile
        if (pstmUser.executeUpdate() > 0) {
            // prepare Subscription
            pstmSub = con.prepareStatement(SQL_SUPCIRIPTION_CREATE);
            pstmSub.setString(1, subscriptionDTO.getSubscriptionID());
            pstmSub.setString(2, subscriptionDTO.getUser().getUsername());
            pstmSub.setString(3, subscriptionDTO.getFromDate());
            pstmSub.setString(4, subscriptionDTO.getToDate());
            pstmSub.setInt(5, subscriptionDTO.getCost());
            pstmSub.setString(6, subscriptionDTO.getCreditCard());
            pstmSub.setString(7, subscriptionDTO.getCreditCardType());
            // execute command
            if (pstmSub.executeUpdate() > 0) {
                // success commit all into the database
                con.commit();
                // set auto commit = true;
                con.setAutoCommit(true);
                return true;
            } else {
                // error roll back transaction
                con.rollback();
                return false;
            }
        } else {
            // error roll back transaction
            con.rollback();
            return false;
        }
    } catch (SQLException ex) {
        try {
            logger.log(Level.SEVERE, null, ex);
            // roll back transaction
            con.rollback();
            return false;
        } catch (SQLException ex1) {
            logger.log(Level.SEVERE, null, ex1);
            return false;
        }
    } finally {
        DatabaseUtil.closeConnection(con);
    }
}
