public static void main(String[] argv) {
    RTConfig.setCommandLineArgs(argv);
    /* All available TimeZones */
    if (RTConfig.getBoolean("tzlist", false)) {
        String[] tzid = (String[]) ListTools.sort(TimeZone.getAvailableIDs(), null);
        for (int i = 0; i < tzid.length; i++) {
            TimeZone tz = TimeZone.getTimeZone(tzid[i]);
            String id = tz.getID();
            String name = tz.getDisplayName();
            String shortName = tz.getDisplayName(false, TimeZone.SHORT);
            String longName = tz.getDisplayName(false, TimeZone.LONG);
            // String testName   = TimeZone.getTimeZone(shortName).getDisplayName(false, TimeZone.SHORT);
            // + " [" + testName + "]");
            Print.sysPrintln(tzid[i] + "[" + id + "]: " + shortName + " / " + longName);
        }
        System.exit(0);
    }
    /* Read TimeZones from file */
    File tmzFile = RTConfig.getFile("tmzfile", null);
    if (tmzFile != null) {
        long nowTime = DateTime.getCurrentTimeSec();
        String[] TMZ_NAME = DateTime.readTimeZones(tmzFile);
        for (int i = 0; i < TMZ_NAME.length; i++) {
            String tzname = StringTools.leftJustify(TMZ_NAME[i], 28);
            TimeZone tz = TimeZone.getTimeZone(TMZ_NAME[i]);
            String idName = tz.getID().equals(TMZ_NAME[i]) ? "*" : tz.getID();
            String shortName = StringTools.leftJustify(tz.getDisplayName(false, TimeZone.SHORT), 5);
            String longName = tz.getDisplayName(false, TimeZone.LONG);
            int rawOfsMIN = tz.getOffset(nowTime) / (1000 * 60);
            int rawOfsHH = Math.abs(rawOfsMIN) / 60;
            int rawOfsMM = Math.abs(rawOfsMIN) % 60;
            String gmtStr = "GMT" + ((rawOfsMIN >= 0) ? "+" : "-") + StringTools.format(rawOfsHH, "00") + ":" + StringTools.format(rawOfsMM, "00");
            Print.sysPrintln(tzname + " [" + gmtStr + "]: " + idName + " , " + shortName + " , " + longName);
        }
        System.exit(0);
    }
    /* TimeZone */
    String tmz = RTConfig.getString("tmz", null);
    if ((tmz != null) && !tmz.equals("")) {
        long nowTime = DateTime.getCurrentTimeSec();
        TimeZone tz = TimeZone.getTimeZone(tmz);
        int rawOfsMIN = (tz.getOffset(nowTime) + tz.getDSTSavings()) / (1000 * 60);
        int rawOfsHH = Math.abs(rawOfsMIN) / 60;
        int rawOfsMM = Math.abs(rawOfsMIN) % 60;
        String gmtStr = "GMT" + ((rawOfsMIN >= 0) ? "+" : "-") + StringTools.format(rawOfsHH, "00") + ":" + StringTools.format(rawOfsMM, "00");
        Print.sysPrintln(tmz + " [" + gmtStr + "]: " + tz);
        Print.sysPrintln("Time : " + (new DateTime(nowTime, tz)));
        Print.sysPrintln("GMT  : " + (new DateTime(nowTime, DateTime.getGMTTimeZone())));
        System.exit(0);
    }
    /* time zones */
    String tzStr = RTConfig.getString("tz", null);
    TimeZone tz = (tzStr != null) ? DateTime.getTimeZone(tzStr) : DateTime.getDefaultTimeZone();
    TimeZone pstTZ = DateTime.getTimeZone("US/Pacific");
    TimeZone gmtTZ = DateTime.getGMTTimeZone();
    /* time */
    Print.sysPrintln("");
    DateTime nowDT = new DateTime(tz);
    if (RTConfig.hasProperty("time")) {
        String stime = RTConfig.getString("time", null);
        try {
            nowDT = DateTime.parseArgumentDate(stime, tz, false);
        } catch (DateParseException dpe) {
            Print.logError("Unable to parse date: " + stime + " [" + dpe.getMessage() + "]");
        }
    }
    long now = nowDT.getTimeSec();
    /* format */
    String fmt = RTConfig.getString("format", null);
    /* display dates */
    DateTime gmtNowDt = new DateTime(now, gmtTZ);
    DateTime pstNowDt = new DateTime(now, pstTZ);
    long pstDayN = DateTime.getDayNumberFromDate(pstNowDt);
    DateTime pstStrDt = new DateTime(pstNowDt.getDayStart(), pstTZ);
    DateTime pstEndDt = new DateTime(pstNowDt.getDayEnd(), pstTZ);
    DateTime tmzNowDt = nowDT;
    Print.sysPrintln("GMT time  : " + gmtNowDt + " [" + now + ":0x" + StringTools.toHexString(now, 32) + "]");
    Print.sysPrintln("TZ  time  : " + tmzNowDt);
    Print.sysPrintln("PST time  : " + pstNowDt);
    Print.sysPrintln("PST Day#  : " + pstDayN + " [" + ((pstDayN + 5) % 7) + "]");
    Print.sysPrintln("PST start : " + pstStrDt + " [" + pstStrDt.getTimeSec() + "]");
    Print.sysPrintln("PST end   : " + pstEndDt + " [" + pstEndDt.getTimeSec() + "]");
    if (!StringTools.isBlank(fmt)) {
        Print.sysPrintln("Formatted : " + nowDT.format(fmt));
    }
}
