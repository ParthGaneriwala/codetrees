public void put(int index, Scriptable start, Object value) {
    Object parent = Undefined.instance;
    // Convert text into XML if needed.
    XMLObject xmlValue;
    // Special-case checks for undefined and null
    if (value == null) {
        value = "null";
    } else if (value instanceof Undefined) {
        value = "undefined";
    }
    if (value instanceof XMLObject) {
        xmlValue = (XMLObject) value;
    } else {
        if (targetProperty == null) {
            xmlValue = XML.createFromJS(lib, value.toString());
        } else {
            xmlValue = XML.createTextElement(lib, targetProperty, value.toString());
        }
    }
    // Find the parent
    if (index < length()) {
        parent = item(index).parent();
    } else {
        // Appending
        parent = parent();
    }
    if (parent instanceof XML) {
        // found parent, alter doc
        XML xmlParent = (XML) parent;
        if (index < length()) {
            // We're replacing the the node.
            XML xmlNode = getXmlFromAnnotation(index);
            if (xmlValue instanceof XML) {
                xmlNode.replaceAll((XML) xmlValue);
                replace(index, xmlNode);
            } else if (xmlValue instanceof XMLList) {
                // Replace the first one, and add the rest on the list.
                XMLList list = (XMLList) xmlValue;
                if (list.length() > 0) {
                    int lastIndexAdded = xmlNode.childIndex();
                    xmlNode.replaceAll(list.item(0));
                    replace(index, list.item(0));
                    for (int i = 1; i < list.length(); i++) {
                        xmlParent.insertChildAfter(xmlParent.getXmlChild(lastIndexAdded), list.item(i));
                        lastIndexAdded++;
                        insert(index + i, list.item(i));
                    }
                }
            }
        } else {
            // Appending
            xmlParent.appendChild(xmlValue);
            addToList(xmlParent.getXmlChild(index));
        }
    } else {
        // Don't all have same parent, no underlying doc to alter
        if (index < length()) {
            XML xmlNode = XML.getFromAnnotation(lib, _annos.item(index));
            if (xmlValue instanceof XML) {
                xmlNode.replaceAll((XML) xmlValue);
                replace(index, xmlNode);
            } else if (xmlValue instanceof XMLList) {
                // Replace the first one, and add the rest on the list.
                XMLList list = (XMLList) xmlValue;
                if (list.length() > 0) {
                    xmlNode.replaceAll(list.item(0));
                    replace(index, list.item(0));
                    for (int i = 1; i < list.length(); i++) {
                        insert(index + i, list.item(i));
                    }
                }
            }
        } else {
            addToList(xmlValue);
        }
    }
}
