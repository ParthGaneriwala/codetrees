public String saveProcessDressmakerPurchaseDetail() {
    System.out.println("PurchaseDetailAction -> saveProcessDressmakerPurchaseDetail() ");
    if (processDressmakerPurchaseDetail.getQuantity() <= storageMaterial.getStock()) {
        StorageMaterial storageMaterialAux = storageMaterialManager.get(storageMaterial.getId());
        ProcessDressmaker processDressmakerAux = processDressmakerManager.get((Long) getSession().getAttribute("pDMid"));
        List<PurchaseDetail> purchaseDetailList = purchaseDetailManager.findByMaterialStockNoCero(storageMaterialAux.getMaterial().getId());
        Double quantity = processDressmakerPurchaseDetail.getQuantity();
        for (Iterator<PurchaseDetail> it = purchaseDetailList.iterator(); it.hasNext(); ) {
            PurchaseDetail purchaseDetailIt = it.next();
            ProcessDressmakerPurchaseDetail pDressmakerPDetailAux = new ProcessDressmakerPurchaseDetail();
            pDressmakerPDetailAux.setProcessDressmaker(processDressmakerAux);
            pDressmakerPDetailAux.setPurchaseDetail(purchaseDetailIt);
            pDressmakerPDetailAux.setQuantityFail(0.0D);
            pDressmakerPDetailAux.setTotalAmountQuantityFail(0.0D);
            pDressmakerPDetailAux.setPriceQuantityFail(0.0D);
            if (quantity >= purchaseDetailIt.getCurrentQuantity()) {
                pDressmakerPDetailAux.setQuantity(purchaseDetailIt.getCurrentQuantity());
                quantity = quantity - purchaseDetailIt.getCurrentQuantity();
                purchaseDetailIt.setCurrentQuantity(0.0D);
                purchaseDetailManager.save(purchaseDetailIt);
                processDressmakerPurchaseDetailManager.save(pDressmakerPDetailAux);
            } else {
                pDressmakerPDetailAux.setQuantity(quantity);
                purchaseDetailIt.setCurrentQuantity(purchaseDetailIt.getCurrentQuantity() - quantity);
                quantity = 0.0D;
                purchaseDetailManager.save(purchaseDetailIt);
                processDressmakerPurchaseDetailManager.save(pDressmakerPDetailAux);
                break;
            }
        }
        storageMaterialAux.setStock(storageMaterialAux.getStock() - processDressmakerPurchaseDetail.getQuantity());
        storageMaterialManager.save(storageMaterialAux);
        saveMessage(getText("PurchaseDetailAction -> purchaseDetailAction.savedPurchaseDetailCutProcess"));
        return INPUT;
    } else {
        System.out.println("PurchaseDetailAction -> end saveProcessDressmakerPurchaseDetail() ");
        storageMaterial = storageMaterialManager.get(storageMaterial.getId());
        errorMessage(getText("purchaseDetailAction.errorPurchaseDetailCutProcess"));
        return ERROR;
    }
}
