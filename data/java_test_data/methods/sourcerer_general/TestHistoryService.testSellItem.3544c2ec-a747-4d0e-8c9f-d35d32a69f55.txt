@Test
@DirtiesContext
public void testSellItem() throws Exception {
    configureMinimalGame();
    System.out.println("**** testSellItem ****");
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    userService.createUser("Actor", "test", "test", "test");
    userService.login("Actor", "test");
    movableService.sendTutorialProgress(TutorialConfig.TYPE.TUTORIAL, "xx", "xx", 0, 0);
    SimpleBase simpleBase = getMyBase();
    movableService.sellItem(getFirstSynItemId(simpleBase, TEST_START_BUILDER_ITEM_ID));
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Verify
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    List<DisplayHistoryElement> displayHistoryElements = historyService.getNewestHistoryElements(userService.getUser("Actor"), 1000);
    System.out.println("----- Actor Target-----");
    for (DisplayHistoryElement displayHistoryElement : displayHistoryElements) {
        System.out.println(displayHistoryElement);
    }
    System.out.println("----- Actor End -----");
    Assert.assertEquals(4, displayHistoryElements.size());
    Assert.assertTrue(displayHistoryElements.get(0).getTimeStamp() >= displayHistoryElements.get(1).getTimeStamp());
    Assert.assertEquals(TEST_START_BUILDER_ITEM + " has been sold", displayHistoryElements.get(0).getMessage());
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
