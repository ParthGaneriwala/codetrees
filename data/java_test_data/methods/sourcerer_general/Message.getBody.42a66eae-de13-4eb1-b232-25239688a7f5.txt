private String getBody(MessageType type) throws MessageNotValidException {
    StringBuilder body = new StringBuilder();
    String sep = System.getProperty("line.separator");
    switch(type) {
        case TECH:
            String formattedDate;
            SimpleDateFormat df = new SimpleDateFormat("EEEE MMMM d, yyyy");
            formattedDate = df.format(request.getDateEntered());
            // Submission Date
            body.append("Date Submitted: ");
            body.append(formattedDate);
            body.append(sep);
            // Customer Name
            body.append("Submitted by: ");
            body.append(request.getLastName());
            body.append(", ");
            body.append(request.getFirstName());
            body.append(sep);
            // Location
            body.append("Location: ");
            body.append(request.getLocation().getDisplayValue());
            body.append(", Room ");
            body.append(request.getRoomNumber());
            body.append(sep);
            // Telephone Number
            body.append("Phone: ");
            body.append(request.getPhoneNumberFormatted());
            body.append(sep);
            // Issue
            body.append("Issue: ");
            body.append(request.getIssue().getDisplayValue());
            body.append(sep).append(sep);
            // Comment
            body.append("Additional Comments: ");
            body.append(sep).append(sep);
            body.append(request.getComments());
            return body.toString();
        case CUSTOMER:
            body.append("Thank you for contacting CHC Helpdesk.  Your request has been recieved and will be processed shortly.  So we can more easily assist you, please remember your case number and give it to the tech helping you with this problem.");
            body.append(sep);
            body.append("Thank you and have a nice day.");
            body.append(sep);
            body.append("Case Number: ");
            body.append(request.getRequestID());
            return body.toString();
        default:
            throw new MessageNotValidException();
    }
}
