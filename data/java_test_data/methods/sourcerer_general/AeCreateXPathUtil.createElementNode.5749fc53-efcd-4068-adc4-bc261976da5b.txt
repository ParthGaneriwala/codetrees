protected static Element createElementNode(String aToken, Node aCurrentNode, IAeNamespaceContext aContext) throws AeBusinessProcessException {
    Element newElement = null;
    // get the namespace info based on path (may be empty - null)
    String localName, namespaceURI, prefix;
    int colonOffset;
    if (// $NON-NLS-1$
    (colonOffset = aToken.indexOf(":")) >= 0) {
        if (colonOffset > 0 && colonOffset < (aToken.length() - 1)) {
            prefix = aToken.substring(0, colonOffset);
            localName = aToken.substring(colonOffset + 1);
            namespaceURI = aContext.resolvePrefixToNamespace(prefix);
        } else {
            // $NON-NLS-1$
            throw new AeBusinessProcessException(AeMessages.getString("AeActivityAssignImpl.ERROR_12") + aToken);
        }
    } else {
        localName = aToken;
        namespaceURI = null;
        prefix = null;
    }
    // check if we are at root of document or in an element
    if (aCurrentNode.getNodeType() == Node.DOCUMENT_NODE) {
        Document doc = (Document) aCurrentNode;
        if (doc.getDocumentElement() == null) {
            newElement = doc.createElementNS(namespaceURI, aToken);
            doc.appendChild(newElement);
            if (namespaceURI != null)
                // $NON-NLS-1$
                newElement.setAttributeNS(IAeConstants.W3C_XMLNS, "xmlns:" + prefix, namespaceURI);
        } else {
            // TODO make sure they didn't mess up and have a different name or namespace
            newElement = doc.getDocumentElement();
        }
    } else if (aCurrentNode.getNodeType() == Node.ELEMENT_NODE) {
        Element element = (Element) aCurrentNode;
        boolean found = false;
        for (Node child = element.getFirstChild(); (!found) && (child != null); child = child.getNextSibling()) {
            if (localName.equals(child.getLocalName())) {
                // if both null or matching
                if (AeUtil.compareObjects(namespaceURI, child.getNamespaceURI())) {
                    newElement = (Element) child;
                    found = true;
                    break;
                }
            }
        }
        // if we didn't find the node then create it now
        if (!found) {
            // check if namespace has a prefix and if so use it
            if (namespaceURI != null) {
                String newPrefix = AeXmlUtil.getPrefixForNamespace(element, namespaceURI);
                if (newPrefix == null) {
                    newElement = aCurrentNode.getOwnerDocument().createElementNS(namespaceURI, aToken);
                    // $NON-NLS-1$
                    newElement.setAttributeNS(IAeConstants.W3C_XMLNS, "xmlns:" + prefix, namespaceURI);
                } else if (// $NON-NLS-1$
                newPrefix.equals("")) {
                    newElement = aCurrentNode.getOwnerDocument().createElementNS(namespaceURI, localName);
                } else {
                    // $NON-NLS-1$
                    newElement = aCurrentNode.getOwnerDocument().createElementNS(namespaceURI, newPrefix + ":" + localName);
                }
            } else {
                newElement = aCurrentNode.getOwnerDocument().createElementNS(namespaceURI, localName);
            }
            element.appendChild(newElement);
        }
    } else {
        // $NON-NLS-1$
        throw new AeBusinessProcessException(AeMessages.getString("AeActivityAssignImpl.ERROR_17") + aToken);
    }
    return newElement;
}
