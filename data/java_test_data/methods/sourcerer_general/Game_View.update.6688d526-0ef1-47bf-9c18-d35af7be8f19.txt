@Override
public void update(Observable o, Object arg) {
    if (arg == null) {
        Playable p = (Playable) o;
        int count = 0;
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                if (p.getBoard().getGrid()[j][i].isOccupied()) {
                    button_list.get(count).set_Label((p.getBoard().getGrid()[j][i].getPiece().toString()));
                    if (!(p instanceof Chess)) {
                        button_list.get(count).setEnabled(false);
                    }
                } else {
                    button_list.get(count).set_Label(" ");
                    button_list.get(count).setEnabled(true);
                }
                count++;
            }
        }
        return;
    }
    ButtonEventBundle beb = (ButtonEventBundle) arg;
    for (int i = 0; i < (SIZE * SIZE); i++) {
        if (button_list.get(i).equals(new GridButton("", beb.getSource().getX(), beb.getSource().getY()))) {
            int index = button_list.indexOf(new GridButton("", beb.getDest().getX(), beb.getDest().getY()));
            if (!gc.getClickType()) {
                button_list.get(index).set_Label(button_list.get(i).get_Label());
                button_list.get(i).set_Label(" ");
                if (beb.getPromoChk()) {
                    if (beb.getPiece() != null) {
                        button_list.get(index).set_Label(beb.getPiece().toString());
                    } else {
                        gc.setPromo_x(beb.getPromo().getX());
                        gc.setPromo_y(beb.getPromo().getY());
                        JButton[] selection = { new JButton("Queen"), new JButton("Knight"), new JButton("Bishop"), new JButton("Rook") };
                        for (JButton j : selection) {
                            j.addActionListener(gc);
                        }
                        JOptionPane.showOptionDialog(null, "Select a Piece", "Promotion...", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, selection, selection[3]);
                    }
                }
                if (beb.getWon()) {
                    JOptionPane.showMessageDialog(null, "Congrats...", "You have Won!!", JOptionPane.OK_OPTION);
                    gameEnd(false);
                } else if (beb.getLost()) {
                    JOptionPane.showMessageDialog(null, "You have Lost!! Game will now Close!", "alert", JOptionPane.OK_OPTION);
                }
                if (beb.getCheck()) {
                    JOptionPane.showMessageDialog(null, "You are in Check!!!", "alert", JOptionPane.OK_OPTION);
                }
            } else {
                button_list.get(index).set_Label(beb.getPiece().toString());
                button_list.get(index).setEnabled(false);
                if (beb.getLost()) {
                    JOptionPane.showMessageDialog(null, "You have Lost!! Game will now close!", "alert", JOptionPane.OK_OPTION);
                    gameEnd(false);
                } else if (beb.getWon()) {
                    JOptionPane.showMessageDialog(null, "Congrats...", "You have Won!!", JOptionPane.OK_OPTION);
                    gameEnd(false);
                }
            }
        }
    }
}
