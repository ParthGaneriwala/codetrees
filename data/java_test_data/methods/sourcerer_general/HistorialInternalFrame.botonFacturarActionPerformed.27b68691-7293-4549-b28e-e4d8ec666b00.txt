// </editor-fold>//GEN-END:initComponents
private void botonFacturarActionPerformed(java.awt.event.ActionEvent evt) {
    // GEN-FIRST:event_botonFacturarActionPerformed
    String s = (String) JOptionPane.showInputDialog(this, "Importe:", "Inserte el importe de la factura", JOptionPane.PLAIN_MESSAGE);
    Double importe;
    try {
        importe = Double.parseDouble(s.replace(",", "."));
    } catch (Exception ex) {
        JOptionPane jop = new JOptionPane();
        jop.showMessageDialog(null, "La cifra introducidad no es correcta", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        return;
    }
    if (listaConsultas.getSelectedIndex() == -1) {
        JOptionPane jop = new JOptionPane();
        jop.showMessageDialog(null, "No se ha seleccionado ninguna consulta", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        return;
    }
    Consulta consulta = consultas.get(listaConsultas.getSelectedIndex());
    Factura factura = new Factura();
    factura.setCargo(importe);
    factura.setIdPaciente(paciente.getIdPaciente());
    factura.setFecha(consulta.getFecha());
    try {
        factura.guardaEnBD();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    FacturaFacade facturaFacade = new FacturaFacade();
    Reporter reporter = new Reporter();
    try {
        reporter.imprimirFactura(facturaFacade.capturarUltimoIdDeBD());
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane jop = new JOptionPane();
        jop.showMessageDialog(null, "Error al imprimir la factura", "Error", JOptionPane.INFORMATION_MESSAGE);
        return;
    }
}
