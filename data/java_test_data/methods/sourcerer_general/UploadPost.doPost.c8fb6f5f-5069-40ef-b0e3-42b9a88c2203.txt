public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {
    UserService userService = UserServiceFactory.getUserService();
    User user = userService.getCurrentUser();
    Map<String, BlobKey> blobs = blobstoreService.getUploadedBlobs(req);
    if (blobs.keySet().isEmpty()) {
        resp.sendRedirect("/?error=" + URLEncoder.encode("No file uploaded", "UTF-8"));
        return;
    }
    Iterator<String> names = blobs.keySet().iterator();
    String blobName = names.next();
    BlobKey blobKey = blobs.get(blobName);
    if (user == null) {
        blobstoreService.delete(blobKey);
        resp.sendRedirect("/?error=" + URLEncoder.encode("Must be logged in to upload", "UTF-8"));
        return;
    }
    BlobInfoFactory blobInfoFactory = new BlobInfoFactory();
    BlobInfo blobInfo = blobInfoFactory.loadBlobInfo(blobKey);
    String contentType = blobInfo.getContentType();
    long size = blobInfo.getSize();
    Date creation = blobInfo.getCreation();
    String fileName = blobInfo.getFilename();
    String title = req.getParameter("title");
    String description = req.getParameter("description");
    boolean isShared = "public".equalsIgnoreCase(req.getParameter("share"));
    try {
        MediaObject mediaObj = new MediaObject(user, blobKey, creation, contentType, fileName, size, title, description, isShared);
        PMF.get().getPersistenceManager().makePersistent(mediaObj);
        resp.sendRedirect("/");
    } catch (Exception e) {
        blobstoreService.delete(blobKey);
        resp.sendRedirect("/?error=" + URLEncoder.encode("Object save failed: " + e.getMessage(), "UTF-8"));
    }
}
