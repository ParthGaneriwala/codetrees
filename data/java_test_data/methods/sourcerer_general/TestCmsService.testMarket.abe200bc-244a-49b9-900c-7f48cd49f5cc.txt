@Test
@DirtiesContext
public void testMarket() throws Exception {
    configureMinimalGame();
    // Setup CMS content
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    CrudRootServiceHelper<DbPage> pageCrud = cmsService.getPageCrudRootServiceHelper();
    DbPage dbPage1 = pageCrud.createDbChild();
    dbPage1.setPredefinedType(CmsUtil.CmsPredefinedPage.HOME);
    dbPage1.setName("Home");
    DbContentList dbContentList = new DbContentList();
    dbContentList.init(userService);
    dbPage1.setContentAndAccessWrites(dbContentList);
    dbContentList.setRowsPerPage(5);
    dbContentList.setSpringBeanName("marketService");
    dbContentList.setContentProviderGetter("availableCrud");
    DbContentContainer dbContentContainer = (DbContentContainer) dbContentList.getColumnsCrud().createDbChild(DbContentContainer.class);
    DbExpressionProperty image = (DbExpressionProperty) dbContentContainer.getContentCrud().createDbChild(DbExpressionProperty.class);
    image.setExpression("dbMarketEntry.itemType");
    DbExpressionProperty price = (DbExpressionProperty) dbContentContainer.getContentCrud().createDbChild(DbExpressionProperty.class);
    price.setExpression("dbMarketEntry.price");
    DbExpressionProperty name = (DbExpressionProperty) dbContentContainer.getContentCrud().createDbChild(DbExpressionProperty.class);
    name.setExpression("dbMarketEntry.itemType.name");
    DbContentActionButton buyButton = (DbContentActionButton) dbContentContainer.getContentCrud().createDbChild(DbContentActionButton.class);
    buyButton.setName("buy");
    buyButton.setParameterExpression("dbMarketEntry");
    buyButton.setMethodName("buy");
    buyButton.setSpringBeanName("marketService");
    buyButton.setLeftSideSpringBeanName("marketService");
    buyButton.setLeftSideOperandExpression("userItemTypeAccess.xp");
    buyButton.setRightSideOperandExpression("dbMarketEntry.price");
    buyButton.setUnfilledHtml("UnfilledText");
    pageCrud.updateDbChild(dbPage1);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Activate
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    cmsService.activateCms();
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    beginHttpSession();
    // No market
    beginHttpRequestAndOpenSessionInViewFilter();
    tester.startPage(CmsPage.class);
    endHttpRequestAndOpenSessionInViewFilter();
    // Enter game
    beginHttpRequestAndOpenSessionInViewFilter();
    movableService.sendTutorialProgress(TutorialConfig.TYPE.TUTORIAL, "", "", 0, 0);
    endHttpRequestAndOpenSessionInViewFilter();
    // Verify
    beginHttpRequestAndOpenSessionInViewFilter();
    Assert.assertFalse(serverMarketService.getUserItemTypeAccess().contains(TEST_SIMPLE_BUILDING_ID));
    endHttpRequestAndOpenSessionInViewFilter();
    // Not enough XPs
    beginHttpRequestAndOpenSessionInViewFilter();
    tester.startPage(CmsPage.class);
    tester.assertLabel("form:content:table:rows:1:cells:1:cell:container:3", TEST_SIMPLE_BUILDING);
    tester.assertInvisible("form:content:table:rows:1:cells:1:cell:container:4:button");
    tester.assertLabel("form:content:table:rows:1:cells:1:cell:container:4:label", "UnfilledText");
    tester.assertVisible("form:content:table:rows:1:cells:1:cell:container:4:label");
    endHttpRequestAndOpenSessionInViewFilter();
    // Get Some XP
    beginHttpRequestAndOpenSessionInViewFilter();
    serverMarketService.getUserItemTypeAccess().setXp(10);
    endHttpRequestAndOpenSessionInViewFilter();
    // Buy in market
    beginHttpRequestAndOpenSessionInViewFilter();
    tester.startPage(CmsPage.class);
    tester.assertLabel("form:content:table:rows:1:cells:1:cell:container:3", TEST_SIMPLE_BUILDING);
    tester.assertInvisible("form:content:table:rows:1:cells:1:cell:container:4:label");
    FormTester formTester = tester.newFormTester("form");
    formTester.submit("content:table:rows:1:cells:1:cell:container:4:button");
    endHttpRequestAndOpenSessionInViewFilter();
    // Verify
    beginHttpRequestAndOpenSessionInViewFilter();
    Assert.assertTrue(serverMarketService.getUserItemTypeAccess().contains(TEST_SIMPLE_BUILDING_ID));
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
