@SuppressWarnings("unchecked")
private Voucher getVoucher(String id, int payRequestId) throws Exception {
    Apvoucher ap = (Apvoucher) DataObjectUtils.objectForQuery(context, new ObjectIdQuery(new ObjectId("Apvoucher", "vouchernum", id)));
    if (ap != null) {
        Voucher voucher = new Voucher();
        voucher.setAccountCompanyId(ap.getVennum());
        voucher.setAmount(ap.getAmount());
        voucher.setCompanyId(getCompanyId(voucher.getAccountCompanyId()));
        voucher.setDate(ap.getInvdate());
        voucher.setDescription(ap.getDes());
        voucher.setDiscount(ap.getDisctaken());
        voucher.setId(id);
        voucher.setInvoiceNum(ap.getInvnum());
        voucher.setName(ap.getVenname());
        voucher.setPaid(ap.getPtd());
        voucher.setPayRequestId(payRequestId);
        voucher.setPoNum(ap.getPonum());
        voucher.setRetention(ap.getRetheld());
        List<Apvoucherdist> dist = ap.getDistribution();
        Apvoucherdist apd;
        VoucherDistribution vd;
        for (Iterator<Apvoucherdist> i = dist.iterator(); i.hasNext(); ) {
            apd = i.next();
            vd = getVoucherDistribution(apd);
            vd.setVoucherId(id);
            voucher.addVoucherDistribution(vd);
        }
        Check check;
        Apcheck ac;
        List checks = ap.getChecks();
        if (checks != null) {
            for (Iterator i = ap.getChecks().iterator(); i.hasNext(); ) {
                ac = (Apcheck) i.next();
                check = new Check();
                check.setAmount(ac.getApamt());
                check.setCheckNum(ac.getChecknum());
                check.setVoucherNum(id);
                check.setName(ac.getName());
                voucher.addCheck(check);
            }
        }
        return voucher;
    } else
        return null;
}
