public String execute() {
    Collection<SolicitudRequerimiento> solicitudes = new ArrayList<SolicitudRequerimiento>();
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    int i = 1;
    try {
        if (this.idSolicitud == null)
            this.listaSolicitud = SolicitudRequerimientoFacade.obtieneTodasLasSolicitudes();
        else {
            solicitudes.add(SolicitudRequerimientoFacade.obtenerSolicitudRequerimientoPorSp(this.idSolicitud));
            this.listaSolicitud = solicitudes;
        }
        WritableWorkbook workbook = Workbook.createWorkbook(bos);
        WritableSheet sheet = workbook.createSheet("Consulta Solicitud", 0);
        sheet.addCell(new Label(0, 0, "N� Solicitud"));
        sheet.addCell(new Label(1, 0, "Fecha de Ingreso"));
        sheet.addCell(new Label(2, 0, "Fecha de Inicio"));
        sheet.addCell(new Label(3, 0, "Estado"));
        sheet.addCell(new Label(4, 0, "T�cnico Asignado"));
        DateFormat customDateFormat = new DateFormat("dd/mm/yyyy h:mm");
        WritableCellFormat dateFormat = new WritableCellFormat(customDateFormat);
        for (SolicitudRequerimiento solReq : this.listaSolicitud) {
            sheet.addCell(new Number(0, i, solReq.getObjectId()));
            if (solReq.getFechaIngreso() == null)
                sheet.addCell(new Label(1, i, ""));
            else
                sheet.addCell(new DateTime(1, i, solReq.getFechaIngreso(), dateFormat));
            if (solReq.getFechaInicio() == null)
                sheet.addCell(new Label(2, i, ""));
            else
                sheet.addCell(new DateTime(2, i, solReq.getFechaInicio(), dateFormat));
            sheet.addCell(new Label(3, i, solReq.getEstado().getName()));
            sheet.addCell(new Label(4, i, solReq.getTecnico().getName()));
            i++;
        }
        workbook.write();
        workbook.close();
        this.excelInputStream = new ByteArrayInputStream(bos.toByteArray());
    } catch (Exception e) {
        return ERROR;
    }
    return SUCCESS;
}
