public Anno obtenerAnno(Usuario user, int annoMostrado, String opcion) {
    /* Obtenemos el calendario actual a mostrar */
    Calendar cal = Calendar.getInstance();
    int annoActual = cal.get(Calendar.YEAR);
    int mesActual = cal.get(Calendar.MONTH);
    int diaActual = cal.get(Calendar.DATE);
    /* Obtenemos el calendario para recorrerlo */
    Calendar calFor = Calendar.getInstance();
    /* Establecemos el primer mes del a�o a mostrar*/
    calFor.set(Calendar.MONTH, Calendar.JANUARY);
    /* Establecemos el a�o a mostrar seg�n la opci�n*/
    if (opcion.equals("siguiente")) {
        calFor.set(Calendar.YEAR, annoMostrado);
        calFor.add(Calendar.YEAR, 1);
    } else if (opcion.equals("anterior")) {
        calFor.set(Calendar.YEAR, annoMostrado);
        calFor.add(Calendar.YEAR, -1);
    }
    Anno anno = new Anno();
    anno.setAnno(calFor.get(Calendar.YEAR));
    Mes[] meses = new Mes[12];
    for (int i = 0; i < 12; i++) {
        /*
			 * Obtenemos el primer y el �ltimo d�a del mes en
			 * el que estamos dentro del for.
			 */
        calFor.set(Calendar.DATE, 1);
        int primerDia = calFor.get(Calendar.DAY_OF_WEEK);
        // JavaCalendar devuelve 1 para domingo, 2 para lunes, ... Lo arregamos
        if (primerDia == 1) {
            primerDia = 6;
        } else {
            primerDia -= 2;
        }
        /* Obtenemos el �ltimo d�a del mes */
        int ultDiaMes = diaFinalMes(calFor.get(Calendar.MONTH) + 1, calFor.get(Calendar.YEAR));
        /* Mostramos los meses pasados o no en funci�n del a�o en el que estamos*/
        if (annoActual == calFor.get(Calendar.YEAR)) {
            if (mesActual < i) {
                meses[i] = rellenaMes(user, calFor, ultDiaMes, primerDia, 0);
            } else if (mesActual > i) {
                meses[i] = rellenaMes(user, calFor, ultDiaMes, primerDia, 32);
            } else {
                meses[i] = rellenaMes(user, calFor, ultDiaMes, primerDia, diaActual);
            }
        } else // Dias futuros
        if (annoActual < calFor.get(Calendar.YEAR)) {
            meses[i] = rellenaMes(user, calFor, ultDiaMes, primerDia, 0);
        } else // Dias pasados
        if (annoActual > calFor.get(Calendar.YEAR)) {
            meses[i] = rellenaMes(user, calFor, ultDiaMes, primerDia, 32);
        }
        calFor.add(Calendar.MONTH, 1);
    }
    anno.setMeses(meses);
    return anno;
}
