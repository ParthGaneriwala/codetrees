/* (non-Javadoc)
	 * @see contratosonline.ejb.controller.ContratoControllerLocal#altera(contratosonline.entity.Contrato)
	 */
public void altera(Contrato contrato) throws Exception {
    EntityManager em = null;
    try {
        em = getEntityManager();
        Contrato persistentContrato = em.find(Contrato.class, contrato.getIdcontrato());
        FiscalContrato fiscalOld = persistentContrato.getFiscal();
        FiscalContrato fiscalNew = contrato.getFiscal();
        LicitacaoOrigem licitacaoOrigemOld = persistentContrato.getLicitacaoOrigem();
        LicitacaoOrigem licitacaoOrigemNew = contrato.getLicitacaoOrigem();
        Collection<TermoAditivo> termoaditivoCollectionOld = persistentContrato.getTermoaditivoCollection();
        Collection<TermoAditivo> termoaditivoCollectionNew = contrato.getTermoaditivoCollection();
        if (fiscalNew != null) {
            fiscalNew = em.getReference(fiscalNew.getClass(), fiscalNew.getIdFiscalContrato());
            contrato.setFiscal(fiscalNew);
        }
        if (licitacaoOrigemNew != null) {
            licitacaoOrigemNew = em.getReference(licitacaoOrigemNew.getClass(), licitacaoOrigemNew.getIdlicitacaoOrigem());
            contrato.setLicitacaoOrigem(licitacaoOrigemNew);
        }
        Collection<TermoAditivo> attachedTermoaditivoCollectionNew = new ArrayList<TermoAditivo>();
        for (TermoAditivo termoaditivoCollectionNewTermoaditivoToAttach : termoaditivoCollectionNew) {
            termoaditivoCollectionNewTermoaditivoToAttach = em.getReference(termoaditivoCollectionNewTermoaditivoToAttach.getClass(), termoaditivoCollectionNewTermoaditivoToAttach.getIdTermoAditivo());
            attachedTermoaditivoCollectionNew.add(termoaditivoCollectionNewTermoaditivoToAttach);
        }
        termoaditivoCollectionNew = attachedTermoaditivoCollectionNew;
        contrato.setTermoaditivoCollection(termoaditivoCollectionNew);
        contrato = em.merge(contrato);
        if (fiscalOld != null && !fiscalOld.equals(fiscalNew)) {
            fiscalOld.getContratoCollection().remove(contrato);
            fiscalOld = em.merge(fiscalOld);
        }
        if (fiscalNew != null && !fiscalNew.equals(fiscalOld)) {
            fiscalNew.getContratoCollection().add(contrato);
            fiscalNew = em.merge(fiscalNew);
        }
        if (licitacaoOrigemOld != null && !licitacaoOrigemOld.equals(licitacaoOrigemNew)) {
            licitacaoOrigemOld.getContratoCollection().remove(contrato);
            licitacaoOrigemOld = em.merge(licitacaoOrigemOld);
        }
        if (licitacaoOrigemNew != null && !licitacaoOrigemNew.equals(licitacaoOrigemOld)) {
            licitacaoOrigemNew.getContratoCollection().add(contrato);
            licitacaoOrigemNew = em.merge(licitacaoOrigemNew);
        }
        for (TermoAditivo termoaditivoCollectionOldTermoaditivo : termoaditivoCollectionOld) {
            if (!termoaditivoCollectionNew.contains(termoaditivoCollectionOldTermoaditivo)) {
                termoaditivoCollectionOldTermoaditivo.setContrato(null);
                termoaditivoCollectionOldTermoaditivo = em.merge(termoaditivoCollectionOldTermoaditivo);
            }
        }
        for (TermoAditivo termoaditivoCollectionNewTermoaditivo : termoaditivoCollectionNew) {
            if (!termoaditivoCollectionOld.contains(termoaditivoCollectionNewTermoaditivo)) {
                Contrato oldContratoOfTermoaditivoCollectionNewTermoaditivo = termoaditivoCollectionNewTermoaditivo.getContrato();
                termoaditivoCollectionNewTermoaditivo.setContrato(contrato);
                termoaditivoCollectionNewTermoaditivo = em.merge(termoaditivoCollectionNewTermoaditivo);
                if (oldContratoOfTermoaditivoCollectionNewTermoaditivo != null && !oldContratoOfTermoaditivoCollectionNewTermoaditivo.equals(contrato)) {
                    oldContratoOfTermoaditivoCollectionNewTermoaditivo.getTermoaditivoCollection().remove(termoaditivoCollectionNewTermoaditivo);
                    oldContratoOfTermoaditivoCollectionNewTermoaditivo = em.merge(oldContratoOfTermoaditivoCollectionNewTermoaditivo);
                }
            }
        }
    } catch (Exception ex) {
        String msg = ex.getLocalizedMessage();
        if (msg == null || msg.length() == 0) {
            Integer id = contrato.getIdcontrato();
            if (findContrato(id) == null) {
                throw new Exception("The contrato with id " + id + " no longer exists.");
            }
        }
        throw ex;
    } finally {
        if (em != null) {
        // em.close();
        }
    }
}
