private void writePoundTildaStream(byte[] text) {
    int off = parser.getCLRHeader().getMetaData() - Write_RVA + parser.getPoundTildaMetaDataStreamHeader().getOffset();
    PoundTildaStream poundTildaStream = parser.getPoundTildaStream();
    insertInt(text, off, poundTildaStream.getReserved1());
    text[off + 4] = poundTildaStream.getMajorVersion();
    text[off + 5] = poundTildaStream.getMinorVersion();
    text[off + 6] = poundTildaStream.getHeapSizes();
    text[off + 7] = poundTildaStream.getReserved2();
    insertLong(text, off + 8, poundTildaStream.getValid());
    insertLong(text, off + 16, poundTildaStream.getSorted());
    ArrayList<Integer> rows = poundTildaStream.getRows();
    int i;
    Integer num_rows;
    off += 24;
    for (i = 0; i < rows.size(); i++) {
        num_rows = rows.get(i);
        if (num_rows > 0) {
            insertInt(text, off, num_rows.intValue());
            off += 4;
        }
    }
    ArrayList<StreamTable> st = poundTildaStream.getTables();
    StreamTable stream;
    for (i = 0; i < st.size(); i++) {
        stream = st.get(i);
        writeOneStreamTable(text, off, stream);
        off += stream.getLengthBytes();
    }
}
