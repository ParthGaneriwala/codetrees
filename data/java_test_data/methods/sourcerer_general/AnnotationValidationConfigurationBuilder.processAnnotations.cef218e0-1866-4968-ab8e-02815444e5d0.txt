private static List<ValidatorConfig> processAnnotations(Object o) {
    List<ValidatorConfig> result = new ArrayList<ValidatorConfig>();
    String fieldName = null;
    String methodName = null;
    Annotation[] annotations = null;
    if (o instanceof Class) {
        Class clazz = (Class) o;
        annotations = clazz.getAnnotations();
    }
    if (o instanceof Method) {
        Method method = (Method) o;
        fieldName = resolvePropertyName(method);
        methodName = method.getName();
        annotations = method.getAnnotations();
    }
    if (annotations != null) {
        for (Annotation a : annotations) {
            // Process collection of custom validations
            if (a instanceof Validations) {
                processValidationAnnotation(a, fieldName, result);
            }
            // Process single custom validator
            if (a instanceof Validation) {
                Validation v = (Validation) a;
                if (v.validations() != null) {
                    for (Validations val : v.validations()) {
                        processValidationAnnotation(val, fieldName, result);
                    }
                }
            } else // Process single custom validator
            if (a instanceof ExpressionValidator) {
                ExpressionValidator v = (ExpressionValidator) a;
                ValidatorConfig temp = processExpressionValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            } else // Process single custom validator
            if (a instanceof CustomValidator) {
                CustomValidator v = (CustomValidator) a;
                ValidatorConfig temp = processCustomValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            } else // Process ConversionErrorFieldValidator
            if (a instanceof ConversionErrorFieldValidator) {
                ConversionErrorFieldValidator v = (ConversionErrorFieldValidator) a;
                ValidatorConfig temp = processConversionErrorFieldValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            } else // Process DateRangeFieldValidator
            if (a instanceof DateRangeFieldValidator) {
                DateRangeFieldValidator v = (DateRangeFieldValidator) a;
                ValidatorConfig temp = processDateRangeFieldValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            } else // Process EmailValidator
            if (a instanceof EmailValidator) {
                EmailValidator v = (EmailValidator) a;
                ValidatorConfig temp = processEmailValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            } else // Process FieldExpressionValidator
            if (a instanceof FieldExpressionValidator) {
                FieldExpressionValidator v = (FieldExpressionValidator) a;
                ValidatorConfig temp = processFieldExpressionValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            } else // Process IntRangeFieldValidator
            if (a instanceof IntRangeFieldValidator) {
                IntRangeFieldValidator v = (IntRangeFieldValidator) a;
                ValidatorConfig temp = processIntRangeFieldValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            } else // Process DoubleRangeFieldValidator
            if (a instanceof DoubleRangeFieldValidator) {
                DoubleRangeFieldValidator v = (DoubleRangeFieldValidator) a;
                ValidatorConfig temp = processDoubleRangeFieldValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            } else // Process RequiredFieldValidator
            if (a instanceof RequiredFieldValidator) {
                RequiredFieldValidator v = (RequiredFieldValidator) a;
                ValidatorConfig temp = processRequiredFieldValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            } else // Process RequiredStringValidator
            if (a instanceof RequiredStringValidator) {
                RequiredStringValidator v = (RequiredStringValidator) a;
                ValidatorConfig temp = processRequiredStringValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            } else // Process StringLengthFieldValidator
            if (a instanceof StringLengthFieldValidator) {
                StringLengthFieldValidator v = (StringLengthFieldValidator) a;
                ValidatorConfig temp = processStringLengthFieldValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            } else // Process UrlValidator
            if (a instanceof UrlValidator) {
                UrlValidator v = (UrlValidator) a;
                ValidatorConfig temp = processUrlValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            } else // Process VisitorFieldValidator
            if (a instanceof VisitorFieldValidator) {
                VisitorFieldValidator v = (VisitorFieldValidator) a;
                ValidatorConfig temp = processVisitorFieldValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            } else // Process RegexFieldValidator
            if (a instanceof RegexFieldValidator) {
                RegexFieldValidator v = (RegexFieldValidator) a;
                ValidatorConfig temp = processRegexFieldValidatorAnnotation(v, fieldName);
                if (temp != null) {
                    result.add(temp);
                }
            }
        }
        if (methodName != null) {
            for (ValidatorConfig vc : result) {
                vc.getParams().put("methodName", methodName);
            }
        }
    }
    return result;
}
