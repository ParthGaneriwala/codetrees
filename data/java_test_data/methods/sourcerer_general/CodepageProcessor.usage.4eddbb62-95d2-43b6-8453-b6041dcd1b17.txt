protected void usage() {
    StringBuffer tmp = new StringBuffer();
    tmp.append("usage: java -cp jargs-1.0.jar").append(File.separatorChar).append("cpdetector_1.0.8.jar").append(File.pathSeparatorChar).append("antlr-2.7.4.jar").append(File.pathSeparatorChar).append("chardet.jar info.monitorenter.cpdetector.CodepageProcessor -r <testdocumentdir> -o <testoutputdir> [options]");
    tmp.append("\n");
    tmp.append("options: \n");
    tmp.append("\n  Optional:\n");
    tmp.append("  -c              : Only print available charsets on this system.\n");
    tmp.append("  -e <extensions> : A comma- or semicolon- separated string for document extensions like \"-e txt,dat\" (without dot or space!).\n");
    tmp.append("  -m              : Move files with unknown charset to directory \"unknown\".\n");
    tmp.append("  -v              : Verbose output.\n");
    tmp.append("  -w <int>        : Wait <int> seconds before trying next document (good, if you want to work on the very same machine).\n");
    tmp.append("  -t <charset>    : Try to transform the document to given charset (codepage) name. \n");
    tmp.append("                    This is only possible for documents that are detected to have a  \n");
    tmp.append("                    codepage that is supported by the current java VM. If not possible \n");
    tmp.append("                    sorting will be done as normal. \n");
    tmp.append("  -d              : Semicolon-separated list of fully qualified classnames. \n");
    tmp.append("                    These classes will be casted to ICodepageDetector instances \n");
    tmp.append("                    and used in the order specified.\n");
    tmp.append("                    If this argument is ommited, a HTMLCodepageDetector followed by .\n");
    tmp.append("                    a JChardetFacade is used by default.\n");
    tmp.append("  Mandatory (if no -c option given) :\n");
    tmp.append("  -r            : Root directory containing the collection (recursive).\n");
    tmp.append("  -o            : Output directory containing the sorted collection.\n");
    System.out.print(tmp.toString());
}
