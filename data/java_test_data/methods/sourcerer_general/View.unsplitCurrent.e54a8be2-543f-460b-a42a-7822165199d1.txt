// }}}
// {{{ unsplitCurrent() method
public void unsplitCurrent() {
    if (splitPane != null) {
        lastSplitConfig = getSplitConfig();
        PerspectiveManager.setPerspectiveDirty(true);
        // find first split pane parenting current edit pane
        Component comp = editPane;
        while (!(comp instanceof JSplitPane)) {
            comp = comp.getParent();
        }
        // get rid of any edit pane that is a child
        // of the current edit pane's parent splitter
        EditPane[] editPanes = getEditPanes();
        for (int i = 0; i < editPanes.length; i++) {
            EditPane _editPane = editPanes[i];
            if (GUIUtilities.isAncestorOf(comp, _editPane) && _editPane != editPane)
                _editPane.close();
        }
        JComponent parent = (JComponent) comp.getParent();
        if (parent instanceof JSplitPane) {
            JSplitPane parentSplit = (JSplitPane) parent;
            int pos = parentSplit.getDividerLocation();
            if (parentSplit.getLeftComponent() == comp)
                parentSplit.setLeftComponent(editPane);
            else
                parentSplit.setRightComponent(editPane);
            parentSplit.setDividerLocation(pos);
        } else {
            parent.remove(comp);
            parent.add(editPane, 0);
            splitPane = null;
        }
        parent.revalidate();
        updateTitle();
        editPane.focusOnTextArea();
    } else
        getToolkit().beep();
}
