public void stop(long patientID, String simType) {
    if (!ManageListener.containsKey(new Long(patientID))) {
        System.out.println("There is no information for this patient " + patientID + " Simulator: " + simType + " : Monitoring Service");
        return;
    }
    SimulatorGroup sim = ManageListener.get(new Long(patientID));
    if (sim == null) {
        System.err.println("Error in stopping the monitoring service : Monitoring Service");
        return;
    }
    if (simType.equals(BLOOD_PRESSURE)) {
        try {
            if (sim.BP == null) {
                System.out.println("There is no BloodPressure listener for this patient : Monitoring Service :" + patientID);
                return;
            }
            sim.ListenerCount--;
            if (sim.BP.MessageTopicName != null)
                sim.BP.MessageTopicName = null;
            if (sim.BP.consumer != null) {
                sim.BP.consumer.close();
                sim.BP.consumer = null;
            }
            if (sim.BP.destination_bp != null)
                sim.BP.destination_bp = null;
            if (sim.BP != null)
                sim.BP = null;
            if (sim.ListenerCount == 0) {
                sim = null;
                ManageListener.remove(patientID);
            }
        } catch (JMSException e) {
            System.err.println("Error Stopping Blood Pressure : Monitoring Service : " + e.getMessage());
        }
    }
    if (simType.equals(HEART_RATE)) {
        try {
            if (sim.HR == null) {
                System.out.println("There is no HeartRate listener for this patient : Monitoring Service : " + patientID);
                return;
            }
            sim.ListenerCount--;
            sim.isHeartRateflag = false;
            if (sim.HR.MessageTopicName != null)
                sim.HR.MessageTopicName = null;
            if (sim.HR.consumer != null) {
                sim.HR.consumer.close();
                sim.HR.consumer = null;
            }
            if (sim.HR.destination_hr != null)
                sim.HR.destination_hr = null;
            if (sim.HR != null)
                sim.HR = null;
            if (sim.ListenerCount == 0) {
                sim = null;
                ManageListener.remove(patientID);
            }
        } catch (JMSException e) {
            System.err.println("Error Stopping Heart Rate : Monitoring Service : " + e.getMessage());
        }
    }
    if (simType.equals(RESPIRATION_RATE)) {
        try {
            if (sim.RR == null) {
                System.out.println("There is no RespirationRate listener for this patient: : Monitoring Service : " + patientID);
                return;
            }
            sim.ListenerCount--;
            sim.isRespirationRateflag = false;
            if (sim.RR.MessageTopicName != null)
                sim.RR.MessageTopicName = null;
            if (sim.RR.consumer != null) {
                sim.RR.consumer.close();
                sim.RR.consumer = null;
            }
            if (sim.RR.destination_rr != null)
                sim.RR.destination_rr = null;
            if (sim.RR != null)
                sim.RR = null;
            if (sim.ListenerCount == 0) {
                sim = null;
                ManageListener.remove(patientID);
            }
        } catch (JMSException e) {
            System.err.println("Error Stopping Respiration : Monitoring Service : " + e.getMessage());
        }
    }
    if (simType.equals(TEMPERATURE)) {
        try {
            if (sim.BT == null) {
                System.out.println("There is no Body Temperature listener for this patient: " + patientID);
                return;
            }
            sim.ListenerCount--;
            if (sim.BT.MessageTopicName != null)
                sim.BT.MessageTopicName = null;
            if (sim.BT.consumer != null) {
                sim.BT.consumer.close();
                sim.BT.consumer = null;
            }
            if (sim.BT.destination_bt != null)
                sim.BT.destination_bt = null;
            if (sim.BT != null)
                sim.BT = null;
            if (sim.ListenerCount == 0) {
                sim = null;
                ManageListener.remove(patientID);
            }
        } catch (JMSException e) {
            System.err.println("Error Stopping Body Temperature : Monitoring Service : " + e.getMessage());
        }
    }
}
