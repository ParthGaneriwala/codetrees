public static float[][] coverageToMatrix(GridCoverage2D coverage) {
    Envelope bounds = coverage.getEnvelope();
    GridRange range = coverage.getGridGeometry().getGridRange();
    int dimensions = range.getDimension();
    int[] lengths = new int[dimensions];
    for (int i = 0; i < dimensions; i++) {
        lengths[i] = range.getLength(i);
    }
    int[] lowers = range.getLowers();
    int[] uppers = range.getUppers();
    System.out.println("there are " + dimensions + " dimensions.");
    for (int i = 0; i < dimensions; i++) {
        System.out.println("Dimension " + i);
        System.out.println("Min: " + lowers[i]);
        System.out.println("Max: " + uppers[i]);
        System.out.println("Len: " + lengths[i]);
    }
    double minXEnv = coverage.getEnvelope2D().getMinX();
    double minYEnv = coverage.getEnvelope2D().getMinY();
    double maxXEnv = coverage.getEnvelope2D().getMaxX();
    double maxYEnv = coverage.getEnvelope2D().getMaxY();
    System.out.println("Coverage envelope:");
    System.out.println("(" + minXEnv + "," + minYEnv + ") -- (" + maxXEnv + "," + maxYEnv + ")");
    double xIncrement = (maxXEnv - minXEnv) / lengths[0];
    double yIncrement = (maxYEnv - minYEnv) / lengths[1];
    System.out.println("xIncrement: " + xIncrement);
    System.out.println("yIncrement: " + yIncrement);
    float[][] raster = new float[lengths[1]][lengths[0]];
    Raster r = coverage.getRenderedImage().getData();
    for (int i = 0; i < lengths[0]; i++) {
        for (int j = 0; j < lengths[1]; j++) {
            float[] temp = new float[coverage.getDimension()];
            temp = r.getPixel(i, j, temp);
            // temp = coverage.evaluate(new Point2D.Double(minXEnv + i * xIncrement, minYEnv + j * yIncrement), temp);
            // yes, this seems backwards as does the [lengths[1]][lengths[0]] in the r declaration, but it works.
            raster[j][i] = temp[0];
        }
    }
    return raster;
}
