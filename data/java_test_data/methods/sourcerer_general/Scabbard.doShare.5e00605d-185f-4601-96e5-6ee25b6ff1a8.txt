public void doShare(String server) {
    try {
        // First, we need to figure out who
        // called us.
        Intent intent = getIntent();
        // a stream to send to the server.
        if (Intent.ACTION_SEND.equals(intent.getAction()) && intent.hasExtra(Intent.EXTRA_STREAM)) {
            // Grab the stream for the image, video, or
            // other shareable object...
            String type = intent.getType();
            stream = (Uri) intent.getParcelableExtra(Intent.EXTRA_STREAM);
            if (stream != null && type != null) {
                Log.i("VShare", "Got a stream for an image...");
                // myHand_.post(new showPicture(stream));
                // The content resolver allows us to grab the data
                // that the URI refers to. We can also use it to
                // read some metadata about the file.
                ContentResolver contentResolver = getContentResolver();
                // This call tries to guess what type of stream
                // we have been passed.
                String contentType = contentResolver.getType(stream);
                Log.i("VShare", "Image type: " + contentType);
                String name = null;
                int size = -1;
                // Now, we index into the metadata for the stream and
                // figure out what we are dealing with...size/name.
                Cursor metadataCursor = contentResolver.query(stream, new String[] { OpenableColumns.DISPLAY_NAME, OpenableColumns.SIZE }, null, null, null);
                if (metadataCursor != null) {
                    try {
                        if (metadataCursor.moveToFirst()) {
                            name = metadataCursor.getString(0);
                            size = metadataCursor.getInt(1);
                        }
                    } finally {
                        metadataCursor.close();
                    }
                }
                Log.i("VShare", "The size is: " + size);
                // we just use the last path segment as the name.
                if (name == null)
                    name = stream.getLastPathSegment();
                // Now, we try to resolve the URI to an actual InputStream
                // that we can read.
                InputStream in = contentResolver.openInputStream(stream);
                // Finally, we pipe the stream to the network.
                sendData(server, in, name);
            } else {
                Log.i("VShare", "Stream was null");
            }
        } else {
            Log.i("VShare", "Invoked outside of send....");
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
