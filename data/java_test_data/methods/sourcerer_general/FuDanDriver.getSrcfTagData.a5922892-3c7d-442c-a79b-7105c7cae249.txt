public String getSrcfTagData(int start) throws DriverException {
    try {
        if (start < 0 || start > FUDAN_MAX_BLOCK)
            throw new DriverException("set tagdata error [input start position error]!");
        int length = 1024;
        StringBuffer tagData = new StringBuffer();
        String temp;
        String res;
        int num = 0;
        if (num == 0) {
            num++;
            if (!cardtype(num))
                return null;
            num++;
            if (!loadkey(num))
                return null;
        }
        int blockNum = length % 16 == 0 ? length / 16 : length / 16 + 1;
        for (int i = 0; i < blockNum; i++) {
            int block = (start + i + 1) + (start + i + 1) / 3;
            num++;
            temp = hlread(null, block, num);
            if (temp == null) {
                if (i == 0)
                    return null;
                else
                    break;
            } else {
                tagData.append(temp.substring(8, 40));
            }
            if (temp.indexOf("0000") != -1) {
                break;
            }
            String tempHex = StaticFactory.convertHex2Str(temp);
            if (tempHex.indexOf("!") != -1) {
                break;
            }
        }
        // return tagData.toString();
        // String res1 = StaticFactory.convertHex2Str(tagData.toString().substring(0,length*2));
        res = StaticFactory.convertHex2Str(tagData.toString());
        temp = new String(res.getBytes("ISO-8859-1"), "UTF-8");
        // System.out.println(temp);
        num++;
        beep(num);
        int index = temp.indexOf((char) 0x0);
        if (index != -1) {
            temp = temp.substring(0, index);
        }
        index = temp.indexOf("!");
        if (index != -1) {
            temp = temp.substring(0, index);
        }
        return temp;
    } catch (Exception e) {
        e.printStackTrace();
        throw new DriverException("get tagdata error [" + e.getMessage() + "]!");
    }
}
