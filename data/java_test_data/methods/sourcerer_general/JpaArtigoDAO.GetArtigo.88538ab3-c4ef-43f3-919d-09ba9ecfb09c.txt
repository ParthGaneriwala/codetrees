public ArtigoPessoaRelMidiaArtigoLinkPalavrasChaveSecaoRelGrupoArtigoGrupoVO GetArtigo(int artigoId) {
    ArtigoPessoaRelMidiaArtigoLinkPalavrasChaveSecaoRelGrupoArtigoGrupoVO artigoPessoaRelMidiaArtigoLinkPalavrasChaveSecaoRelGrupoArtigoGrupoVO = new ArtigoPessoaRelMidiaArtigoLinkPalavrasChaveSecaoRelGrupoArtigoGrupoVO();
    try {
        /* SELECIONAR DADOS ARTIGO */
        String hqlSelect = "select tbartigo, tbecpessoa from TbArtigo as tbartigo, TbecPessoa as tbecpessoa" + " where tbartigo.artId = :artigoId" + " and tbartigo.artIdInclusaoAudit = tbecpessoa.pesId";
        List resultList = em.createQuery(hqlSelect).setParameter("artigoId", artigoId).getResultList();
        // Copia dados para o VO
        for (Iterator iter = resultList.iterator(); iter.hasNext(); ) {
            Object[] linha = (Object[]) iter.next();
            TbArtigo tbartigo = (TbArtigo) linha[0];
            TbecPessoa tbecpessoa = (TbecPessoa) linha[1];
            ArtigoPessoaVO artigoPessoaVO = new ArtigoPessoaVO();
            ArtigoVO artigoVO = new ArtigoVO();
            try {
                BeanUtils.copyProperties(artigoVO, tbartigo);
            } catch (Exception e) {
                e.printStackTrace();
            }
            artigoPessoaVO.setArtigoVO(artigoVO);
            PessoaVO pessoaVO = new PessoaVO();
            try {
                BeanUtils.copyProperties(pessoaVO, tbecpessoa);
            } catch (Exception e) {
                e.printStackTrace();
            }
            artigoPessoaVO.setPessoaVO(pessoaVO);
            artigoPessoaRelMidiaArtigoLinkPalavrasChaveSecaoRelGrupoArtigoGrupoVO.setArtigoPessoaVO(artigoPessoaVO);
        }
        /* SELECIONAR TODAS MIDIAS */
        hqlSelect = "select tbrelmidiaartigo from TbRelMidiaArtigo as tbrelmidiaartigo" + " where tbrelmidiaartigo.tbArtigo.artId = :artigoId";
        List resultList2 = em.createQuery(hqlSelect).setParameter("artigoId", artigoId).getResultList();
        for (Iterator iter = resultList2.iterator(); iter.hasNext(); ) {
            TbRelMidiaArtigo element = (TbRelMidiaArtigo) iter.next();
            RelMidiaArtigoVO relMidiaArtigoVO = new RelMidiaArtigoVO();
            relMidiaArtigoVO.setRmaArtId(element.getTbArtigo().getArtId());
            try {
                BeanUtils.copyProperties(relMidiaArtigoVO, element);
            } catch (Exception e) {
                e.printStackTrace();
            }
            artigoPessoaRelMidiaArtigoLinkPalavrasChaveSecaoRelGrupoArtigoGrupoVO.getRelMidiaArtigoVO().add(relMidiaArtigoVO);
        }
        /* SELECIONAR  LINKS*/
        hqlSelect = "select tblink from TbLink as tblink" + " where tblink.tbArtigo.artId = :artigoId";
        List resultList3 = em.createQuery(hqlSelect).setParameter("artigoId", artigoId).getResultList();
        // Copia dados para o VO
        for (Iterator iter = resultList3.iterator(); iter.hasNext(); ) {
            TbLink element = (TbLink) iter.next();
            LinkVO linkVO = new LinkVO();
            linkVO.setLnkArtId(element.getTbArtigo().getArtId());
            try {
                BeanUtils.copyProperties(linkVO, element);
            } catch (Exception e) {
                e.printStackTrace();
            }
            artigoPessoaRelMidiaArtigoLinkPalavrasChaveSecaoRelGrupoArtigoGrupoVO.getLinkVO().add(linkVO);
        }
        /* SELECIONAR KEYWORDS */
        hqlSelect = "select tbpalavraschave from TbPalavrasChave as tbpalavraschave" + " where tbpalavraschave.tbArtigo.artId = :artigoId";
        List resultList4 = em.createQuery(hqlSelect).setParameter("artigoId", artigoId).getResultList();
        // Copia dados para o VO
        for (Iterator iter = resultList4.iterator(); iter.hasNext(); ) {
            TbPalavrasChave element = (TbPalavrasChave) iter.next();
            PalavrasChaveVO palavrasChaveVO = new PalavrasChaveVO();
            palavrasChaveVO.setPchArtId(element.getTbArtigo().getArtId());
            try {
                BeanUtils.copyProperties(palavrasChaveVO, element);
            } catch (Exception e) {
                e.printStackTrace();
            }
            artigoPessoaRelMidiaArtigoLinkPalavrasChaveSecaoRelGrupoArtigoGrupoVO.getPalavrasChaveVO().add(palavrasChaveVO);
        }
        /* SELECIONAR SE��ES */
        hqlSelect = "select tbsecao from TbSecao as tbsecao" + " join tbsecao.tbSecaoArtigoCollection tbsecaoartigo" + " where tbsecaoartigo.tbArtigo.artId = :artigoId";
        List resultList5 = em.createQuery(hqlSelect).setParameter("artigoId", artigoId).getResultList();
        // Copia dados para o VO
        for (Iterator iter = resultList5.iterator(); iter.hasNext(); ) {
            TbSecao element = (TbSecao) iter.next();
            SecaoVO secaoVO = new SecaoVO();
            secaoVO.setSecPorId(element.getTbPortal().getPorId());
            secaoVO.setSecPagId(element.getTbPagina().getPagId());
            try {
                BeanUtils.copyProperties(secaoVO, element);
            } catch (Exception e) {
                e.printStackTrace();
            }
            artigoPessoaRelMidiaArtigoLinkPalavrasChaveSecaoRelGrupoArtigoGrupoVO.getSecaoVO().add(secaoVO);
        }
        /*SELECIONAR GRUPOS*/
        hqlSelect = "select tbrelgrupoartigo from TbRelGrupoArtigo as tbrelgrupoartigo" + " left outer join tbrelgrupoartigo.tbGrupo tbgrupo" + " where tbrelgrupoartigo.tbArtigo.artId = :artigoId";
        List resultList6 = em.createQuery(hqlSelect).setParameter("artigoId", artigoId).getResultList();
        // Copia dados para o VO
        for (Iterator iter = resultList6.iterator(); iter.hasNext(); ) {
            GrupoRelGrupoArtigoVO grupoRelGrupoArtigoVO = new GrupoRelGrupoArtigoVO();
            TbRelGrupoArtigo element = (TbRelGrupoArtigo) iter.next();
            RelGrupoArtigoVO relGrupoArtigoVO = new RelGrupoArtigoVO();
            relGrupoArtigoVO.setRgaArtId(element.getTbArtigo().getArtId());
            relGrupoArtigoVO.setRgaGruId(element.getRgaGruId());
            try {
                BeanUtils.copyProperties(relGrupoArtigoVO, element);
            } catch (Exception e) {
                e.printStackTrace();
            }
            grupoRelGrupoArtigoVO.setRelGrupoArtigoVO(relGrupoArtigoVO);
            GrupoVO grupoVO = new GrupoVO();
            if (element.getRgaGruId() == /*getTbGrupo().getGruId().intValue()*/
            UtilsDAO.C_GRUPO_TODOS) {
                // Grupo TODOS: repassa a camada de view de forma transparente
                grupoVO.setGruId(new Integer(UtilsDAO.C_GRUPO_TODOS));
                grupoVO.setGruNmGrupo(UtilsDAO.C_DS_GRUPO_TODOS);
                grupoVO.setGruDsGrupo(UtilsDAO.C_DS_GRUPO_TODOS);
            } else {
                try {
                    BeanUtils.copyProperties(grupoVO, element.getTbGrupo());
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            grupoRelGrupoArtigoVO.setGrupoVO(grupoVO);
            artigoPessoaRelMidiaArtigoLinkPalavrasChaveSecaoRelGrupoArtigoGrupoVO.getGrupoRelGrupoArtigoVO().add(grupoRelGrupoArtigoVO);
        }
    } catch (Exception e) {
        throw new EJBException(e);
    }
    return artigoPessoaRelMidiaArtigoLinkPalavrasChaveSecaoRelGrupoArtigoGrupoVO;
}
