// trade entire groups with someone!
public void colorTrade(MPlayer p) {
    // int[] colList = new int[Prop.MAXCOL];
    StringBuffer S = new StringBuffer("0. Exit" + G.Serv.CR);
    for (int c = 0; c < Prop.MAXCOL; c++) {
        S.append((c + 1) + ". " + Prop.Colors[c] + G.Serv.CR);
    }
    // colour to give
    int g = MiscUtil.strToInt(p.ask("Offer Colour:", S.toString(), "0"));
    if (g <= 0 || g > Prop.MAXCOL)
        return;
    if (isGroupDev(g)) {
        G.Serv.say(p.name, "That group has houses on it.");
        return;
    }
    boolean ok = false;
    for (int i = 0; i < 40; i++) if (props[i].owner == p && props[i].group == g) {
        ok = true;
        break;
    }
    if (!ok) {
        G.Serv.say(p.name, "You haven't any of that colour.");
        return;
    }
    // colour to receive
    int g2 = MiscUtil.strToInt(p.ask("Request Colour:", S.toString(), "0"));
    if (g2 <= 0 || g2 > Prop.MAXCOL)
        return;
    if (isGroupDev(g2)) {
        G.Serv.say(p.name, "That group has houses on it.");
        return;
    }
    MPlayer p2 = null;
    for (int i = 0; i < 40; i++) if (props[i].group == g2 && !isBank(props[i].owner) && props[i].owner != p) {
        p2 = props[i].owner;
        break;
    }
    if (p2 == null) {
        G.Serv.say(p.name, "No one else owns that group.");
        return;
    }
    // money
    String mc = p.ask("How much money are you throwing in? (X to cancel)", "0");
    if (mc.equalsIgnoreCase("X"))
        return;
    int m = MiscUtil.strToInt(mc);
    if (p.cash < m || p2.cash < -m) {
        G.Serv.say(p.name, "Not enough cash: trade aborted.");
        return;
    }
    // trade
    StringBuffer s = new StringBuffer("");
    StringBuffer s2 = new StringBuffer("");
    for (int i = 0; i < 40; i++) if (props[i].group == g && props[i].owner == p)
        s.append(props[i].longname + " and ");
    else if (props[i].group == g2 && props[i].owner == p2)
        s2.append(props[i].longname + " and ");
    String give = s.substring(0, s.length() - 4);
    String get = s2.substring(0, s2.length() - 4);
    spam(p.name + " offers " + p2.name + " " + give.trim() + " and " + m + " dollars for " + get.trim() + ".");
    String OK = p2.askYesNo("Trade " + get + " for " + give + " and " + m + " dollars?", "N");
    if (OK.equalsIgnoreCase("Y")) {
        for (int i = 0; i < 40; i++) if (props[i].owner == p && props[i].group == g)
            props[i].owner = p2;
        else if (props[i].owner == p2 && props[i].group == g2)
            props[i].owner = p;
        p.cash -= m;
        p2.cash += m;
        spam("Trade accepted.");
    } else
        spam("Trade declined.");
}
