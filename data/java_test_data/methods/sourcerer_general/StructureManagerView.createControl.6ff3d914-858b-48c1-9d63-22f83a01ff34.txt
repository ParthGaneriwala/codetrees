@Override
protected JComponent createControl() {
    JPanel view = new JPanel(new GridBagLayout());
    GridBagConstraints c = new GridBagConstraints();
    c.fill = GridBagConstraints.BOTH;
    c.weightx = 0.5;
    c.weighty = 0.5;
    c.gridx = 0;
    c.gridy = 0;
    c.gridheight = 1;
    c.gridwidth = 1;
    ProgressMonitor pm = getActiveWindow().getStatusBar().getProgressMonitor();
    inputConnectorTableModel.setConnectorManager(connectorManager);
    outputConnectorTableModel.setConnectorManager(connectorManager);
    inputConnectorTableModel.setConnectorNameManager(connectorNameManager);
    outputConnectorTableModel.setConnectorNameManager(connectorNameManager);
    LogicalDetailsTableModel ldtm = new LogicalDetailsTableModel();
    JXTable elementsTable = tableFactory.getElementTable(equipmentTableModel);
    JTable propertiesTable = tableFactory.getTable(ldtm);
    JTable historyTable = tableFactory.getHistoryTable(historyTableModel);
    JTree structureTree = new JTree(structureTreeModel);
    JTable inputConnectionsTable = tableFactory.getTable(inputConnectorTableModel);
    JTable outputConnectionsTable = tableFactory.getTable(outputConnectorTableModel);
    JScrollPane inputConnectionsScrPane = new JScrollPane(inputConnectionsTable);
    JScrollPane outputConnectionsScrPane = new JScrollPane(outputConnectionsTable);
    structureTree.setCellRenderer(new EquipmentTreeCellRenderer(getIconSource()));
    structureTree.setRootVisible(false);
    structureTree.setShowsRootHandles(true);
    structureTreeModel.addSelectionListener(ldtm);
    structureTreeModel.setPm(pm);
    structureTree.addTreeSelectionListener(structureTreeModel);
    structureTreeModel.addSelectionListener(equipmentTableModel);
    equipmentTableModel.addPhysicalElementSelectionListener(historyTableModel);
    structureTreeModel.addSelectionListener(inputConnectorTableModel);
    structureTreeModel.addSelectionListener(outputConnectorTableModel);
    structureTreeModel.addSelectionListener(insertElementCommandExecutor);
    structureTreeModel.addSelectionListener(historyTableModel);
    // structureTreeModel.addSelectionListener(ejectElementCommandExecutor);
    elementsTable.setHighlighters(equipmentTableModel.getHighlighter());
    JTable search = new JTable(searchTableModel);
    searchTableModel.addTableModelListener(search);
    equipmentTableModel.addColumnModelListener(searchTableModel);
    equipmentTableModel.addMarkedRowSelectionListener(ejectElementCommandExecutor);
    equipmentTableModel.addNoneRowMarkedListener(insertElementCommandExecutor);
    insertElementCommandExecutor.addRefreshListener(equipmentTableModel);
    ejectElementCommandExecutor.addRefreshListener(equipmentTableModel);
    searchTableModel.addSearchFilterListener(equipmentTableModel);
    equipmentTableModel.recreateColumnModel();
    // equipmentTableModel.addPhysicalElementSelectionListener(addEventExecutor);
    equipmentTableModel.addActiveModelListener(addNewCommandExecutor);
    equipmentTableModel.addPhysicalElementSelectionListener(ejectElementCommandExecutor);
    equipmentTableModel.addPhysicalElementSelectionListener(insertElementCommandExecutor);
    // historyTableModel.addEventModifiactionListener(saveEventsCommandExecutor);
    // historyTableModel.addEventModifiactionListener(reloadEventsCommandExecutor);
    // search.setColumnModel(elementsTable.getColumnModel());
    JScrollPane treeScrPane = new JScrollPane(structureTree);
    JScrollPane elementsScrPane = new JScrollPane(elementsTable);
    JScrollPane propertiesScrPane = new JScrollPane(propertiesTable);
    JScrollPane historyScrPane = new JScrollPane(historyTable);
    search.setTableHeader(null);
    JSplitPane jsp = new JSplitPane(JSplitPane.VERTICAL_SPLIT, search, elementsScrPane);
    jsp.setEnabled(false);
    JSplitPane verticalLeftSplitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT, treeScrPane, propertiesScrPane);
    JSplitPane connectorsSplitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, inputConnectionsScrPane, outputConnectionsScrPane);
    JSplitPane downRightSplitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT, connectorsSplitPane, historyScrPane);
    JSplitPane verticalRightSplitPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT, jsp, downRightSplitPane);
    JSplitPane horizontalSplitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT, verticalLeftSplitPane, verticalRightSplitPane);
    verticalLeftSplitPane.setDividerLocation(450);
    verticalRightSplitPane.setDividerLocation(350);
    horizontalSplitPane.setDividerLocation(250);
    downRightSplitPane.setDividerLocation(200);
    connectorsSplitPane.setDividerLocation(450);
    view.add(horizontalSplitPane, c);
    canEdit = applicationSecurityManager.isUserInRole(User.WRITE_ROLE);
    equipmentTableModel.setEditable(canEdit);
    equipmentTableModel.addActiveModelListener(saveModelCommandExecutor);
    equipmentTableModel.addModelModificationListener(saveModelCommandExecutor);
    historyTableModel.addActiveModelListener(saveModelCommandExecutor);
    historyTableModel.addModelModificationListener(saveModelCommandExecutor);
    historyTableModel.addActiveModelListener(addNewCommandExecutor);
    structureTreeModel.addActiveModelListener(addNewCommandExecutor);
    structureTreeModel.addActiveModelListener(saveModelCommandExecutor);
    return view;
}
