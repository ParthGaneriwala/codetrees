@Test
public void test3() {
    CountCollection<Integer> countCollection = new CountCollection<Integer>();
    countCollection.add(0);
    countCollection.add(1);
    countCollection.add(1);
    countCollection.add(2);
    countCollection.add(2);
    countCollection.add(3);
    countCollection.add(3);
    countCollection.add(3);
    List<CountObject<Integer>> counts = countCollection.sortCounts(false, true);
    assertEquals(4, counts.size());
    test(counts, 0, 3, 3);
    test(counts, 1, 1, 2);
    test(counts, 2, 2, 2);
    test(counts, 3, 0, 1);
    counts = countCollection.sortCounts(false, false);
    test(counts, 0, 3, 3);
    test(counts, 1, 2, 2);
    test(counts, 2, 1, 2);
    test(counts, 3, 0, 1);
    counts = countCollection.sortCounts(true, true);
    test(counts, 0, 0, 1);
    test(counts, 1, 1, 2);
    test(counts, 2, 2, 2);
    test(counts, 3, 3, 3);
    counts = countCollection.sortCounts(true, false);
    test(counts, 0, 0, 1);
    test(counts, 1, 2, 2);
    test(counts, 2, 1, 2);
    test(counts, 3, 3, 3);
    counts = countCollection.sortObjects(true);
    test(counts, 0, 0, 1);
    test(counts, 1, 1, 2);
    test(counts, 2, 2, 2);
    test(counts, 3, 3, 3);
    counts = countCollection.sortObjects(false);
    test(counts, 0, 3, 3);
    test(counts, 1, 2, 2);
    test(counts, 2, 1, 2);
    test(counts, 3, 0, 1);
}
