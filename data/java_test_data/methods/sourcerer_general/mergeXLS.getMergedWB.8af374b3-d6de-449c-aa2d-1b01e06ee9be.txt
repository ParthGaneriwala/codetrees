@SuppressWarnings({ "unchecked", "deprecation" })
public HSSFWorkbook getMergedWB() {
    InputStream myxls = null;
    HSSFWorkbook wb_in = null;
    HSSFWorkbook wb_out = new HSSFWorkbook();
    HSSFSheet sheet_out = wb_out.createSheet("merged_testQuestions");
    // create title row
    HSSFRow row = sheet_out.createRow((short) 0);
    HSSFCell cell0 = row.createCell((short) 0);
    HSSFCell cell1 = row.createCell((short) 1);
    cell0.setCellValue(new HSSFRichTextString("Test Question"));
    cell1.setCellValue(new HSSFRichTextString("Correct ID"));
    int out_rown = 0;
    for (String file : inputSheets) {
        System.out.println("Reading XLS file " + file);
        try {
            myxls = new FileInputStream(file);
        } catch (FileNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        try {
            wb_in = new HSSFWorkbook(myxls);
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        HSSFSheet sheet_in = wb_in.getSheetAt(0);
        int in_rown = 0;
        for (Iterator<HSSFRow> rit = (Iterator<HSSFRow>) sheet_in.rowIterator(); rit.hasNext(); in_rown++) {
            // skip title row
            if (in_rown == 0) {
                rit.next();
                continue;
            }
            out_rown++;
            HSSFRow row_in = rit.next();
            HSSFRow row_out = sheet_out.createRow((short) out_rown);
            int celln = 0;
            for (Iterator<HSSFCell> cit = (Iterator<HSSFCell>) row_in.cellIterator(); cit.hasNext(); celln++) {
                HSSFCell cell_in = cit.next();
                HSSFCell cell_out = row_out.createCell((short) celln);
                cell_out = row_out.getCell(celln);
                cell_out.setCellType(HSSFCell.CELL_TYPE_STRING);
                cell_out.setCellValue(new HSSFRichTextString(cell_in.getStringCellValue()));
            }
        }
    }
    return wb_out;
}
