@Override
protected Result evaluate(final LogicContext context, final Integer patientId, final Map<String, Object> parameters) throws LogicException {
    Result result = new Result();
    Set<Summary> summarySet = new HashSet<Summary>();
    EncounterWithRestrictionRule encounterWithRestrictionRule = new EncounterWithStringRestrictionRule();
    SummaryService summaryService = Context.getService(SummaryService.class);
    List<Mapping> mappings = summaryService.getMappings(null, null, MappingType.LATEST_ENCOUNTER);
    Map<String, Summary> encounterTypeSummaryMap = new HashMap<String, Summary>();
    for (Mapping mapping : mappings) {
        EncounterType encounterType = mapping.getEncounterType();
        encounterTypeSummaryMap.put(encounterType.getName(), mapping.getSummary());
    }
    parameters.clear();
    parameters.put(EvaluableConstants.ENCOUNTER_FETCH_SIZE, 1);
    parameters.put(EvaluableConstants.ENCOUNTER_TYPE, new ArrayList<String>(encounterTypeSummaryMap.keySet()));
    Result encounterResults = encounterWithRestrictionRule.eval(context, patientId, parameters);
    for (Result encounterResult : encounterResults) {
        Encounter latestEncounter = (Encounter) encounterResult.getResultObject();
        EncounterType encounterType = latestEncounter.getEncounterType();
        Summary summary = encounterTypeSummaryMap.get(encounterType.getName());
        if (summary != null)
            summarySet.add(summary);
    }
    // clear up artifact from previous search
    encounterTypeSummaryMap.clear();
    parameters.clear();
    mappings = summaryService.getMappings(null, null, MappingType.ANY_ENCOUNTER);
    for (Mapping mapping : mappings) {
        EncounterType encounterType = mapping.getEncounterType();
        encounterTypeSummaryMap.put(encounterType.getName(), mapping.getSummary());
    }
    parameters.put(EvaluableConstants.ENCOUNTER_TYPE, new ArrayList<String>(encounterTypeSummaryMap.keySet()));
    encounterResults = encounterWithRestrictionRule.eval(context, patientId, parameters);
    for (Result encounterResult : encounterResults) {
        Encounter latestEncounter = (Encounter) encounterResult.getResultObject();
        EncounterType encounterType = latestEncounter.getEncounterType();
        Summary summary = encounterTypeSummaryMap.get(encounterType.getName());
        if (summary != null)
            summarySet.add(summary);
    }
    for (Summary summary : summarySet) result.add(new Result(new Date(), String.valueOf(summary.toString()), summary));
    return result;
}
