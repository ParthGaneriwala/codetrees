public void run() {
    Config.printlnASS2("����AssistServer�ڶ˿�" + Config.AssistServerPort);
    byte[] data = new byte[1000];
    DatagramPacket dp = new DatagramPacket(data, data.length);
    while (true) {
        try {
            ds.receive(dp);
        } catch (IOException e) {
            e.printStackTrace();
            continue;
        }
        int sType = MessageCheck.checkSType(dp);
        if (sType == peer.tools.MessageType.sType_Assist_RegMessage) {
            System.out.println("AssistServer  " + sType);
            int sessionId;
            while (true) {
                sessionId = peer.tools.RandomNum.randomInt();
                if (!AssistConfig.assistUserMange.containsUser(sessionId)) {
                    break;
                }
            }
            RegMessage rm = new RegMessage(dp);
            AssistUser assistUser = new AssistUser(sessionId, dp.getAddress(), dp.getPort(), rm.getOutIp(), rm.getOutPort(), rm.getLanIp(), rm.getLanPort());
            AssistUserMange.addUser(sessionId, assistUser);
            RegMessage2 rm2 = new RegMessage2(sessionId);
            rm2.setDstAddress(dp.getAddress());
            rm2.setDstPort(dp.getPort());
            try {
                ds.send(rm2.getDatagramPacket());
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else if (sType == peer.tools.MessageType.sType_Assist_LiveMessage) {
            LiveMessage lm = new LiveMessage(dp);
            int sessionId = lm.getSessionId();
            // System.out.println("Assist_LiveMessage "+dp.getAddress()+" "+dp.getPort()+" "+sessionId+" "+AssistConfig.assistUserMange.containsUser(sessionId));
            if (AssistConfig.assistUserMange.containsUser(sessionId)) {
                // System.out.println("11111111");
                AssistUser au = AssistConfig.userTable.get(sessionId);
                au.active();
                LiveMessage2 lm2 = new LiveMessage2();
                lm2.setDstAddress(dp.getAddress());
                lm2.setDstPort(dp.getPort());
                try {
                    ds.send(lm2.getDatagramPacket());
                    au.clientPort = dp.getPort();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        } else if (sType == peer.tools.MessageType.sType_Assist_OtherOutAddressMessage) {
            OtherOutAddressMessage oom = new OtherOutAddressMessage(dp);
            int sessionId = oom.getSessionId();
            if (AssistConfig.assistUserMange.containsUser(sessionId)) {
                AssistUser au = AssistUserMange.getUser(sessionId);
                OtherOutAddressMessage2 oom2 = null;
                if (!dp.getAddress().equals(au.getOutIp())) {
                    oom2 = new OtherOutAddressMessage2(au.getOutIp(), au.getOutPort());
                } else {
                    oom2 = new OtherOutAddressMessage2(au.getLanIp(), au.getLanPort());
                }
                oom2.setDstAddress(dp.getAddress());
                oom2.setDstPort(dp.getPort());
                try {
                    ds.send(oom2.getDatagramPacket());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            } else {
                OtherOutAddressMessage3 oom3 = new OtherOutAddressMessage3();
                oom3.setDstAddress(dp.getAddress());
                oom3.setDstPort(dp.getPort());
                try {
                    ds.send(oom3.getDatagramPacket());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        } else if (sType == peer.tools.MessageType.sType_ReversePingMessage1) {
            ReversePingMessage1 rp1 = new ReversePingMessage1(dp);
            int sessionId = rp1.getAssistSessionId();
            AssistUser assistUser = AssistUserMange.getUser(sessionId);
            if (assistUser != null) {
                ReversePingMessage2 rp2 = new ReversePingMessage2(rp1.getPingSessionId(), dp.getAddress(), dp.getPort());
                rp2.setDstAddress(assistUser.getClientIp());
                rp2.setDstPort(assistUser.getClientPort());
                try {
                    ds.send(rp2.getDatagramPacket());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        } else if (sType == peer.tools.MessageType.sType_CleanMessage1) {
            CleanMessage cm = new CleanMessage(dp);
            int sourceSessionId = cm.getSourceSessionId();
            Mdb mdb = cm.getMdb();
            new RemoveThread_CleanExit(mdb, sourceSessionId);
        }
    }
}
