protected T doSwitch(int classifierID, EObject theEObject) {
    switch(classifierID) {
        case CM3Package.COMPONENT:
            {
                Component component = (Component) theEObject;
                T result = caseComponent(component);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case CM3Package.INTERFACE:
            {
                Interface interface_ = (Interface) theEObject;
                T result = caseInterface(interface_);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case CM3Package.FIELD:
            {
                Field field = (Field) theEObject;
                T result = caseField(field);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case CM3Package.COMPOSITION:
            {
                Composition composition = (Composition) theEObject;
                T result = caseComposition(composition);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case CM3Package.CONNECTION:
            {
                Connection connection = (Connection) theEObject;
                T result = caseConnection(connection);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case CM3Package.SCHEDULE:
            {
                Schedule schedule = (Schedule) theEObject;
                T result = caseSchedule(schedule);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case CM3Package.SEQUENTIAL_SCHEDULE:
            {
                SequentialSchedule sequentialSchedule = (SequentialSchedule) theEObject;
                T result = caseSequentialSchedule(sequentialSchedule);
                if (result == null)
                    result = caseSchedule(sequentialSchedule);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case CM3Package.WORKSPACE:
            {
                Workspace workspace = (Workspace) theEObject;
                T result = caseWorkspace(workspace);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        default:
            return defaultCase(theEObject);
    }
}
