public static void main(String[] args) {
    System.out.println("Starting photo cropper...");
    System.out.println("Getting list of photo files...");
    File[] rawFiles = new File(INPUT_PATH).listFiles(new FilenameFilter() {

        public boolean accept(File dir, String name) {
            return name.endsWith(IMAGE_EXT);
        }
    });
    File outputDir = new File(OUTPUT_PATH);
    outputDir.mkdirs();
    if (rawFiles != null && rawFiles.length > 0) {
        System.out.println("Processing new photos: " + rawFiles.length);
        for (File rawFile : rawFiles) {
            System.out.println("Loading photo file: " + rawFile);
            BufferedImage photo = loadPhoto(rawFile);
            if (photo == null) {
                System.out.println("ERROR");
                break;
            }
            System.out.println("Cropping photo...");
            BufferedImage cropped = photo.getSubimage(OFFSET.x, OFFSET.y, OFFSET.width, OFFSET.height);
            System.out.println("Scaling photo to thumbnail...");
            Image scaled = cropped.getScaledInstance(THUMB_SIZE, THUMB_SIZE, Image.SCALE_SMOOTH);
            BufferedImage thumbnail = new BufferedImage(THUMB_SIZE, THUMB_SIZE, BufferedImage.TYPE_INT_RGB);
            Graphics g = thumbnail.getGraphics();
            g.drawImage(scaled, 0, 0, null);
            g.dispose();
            File outputFile = new File(outputDir + File.separator + rawFile.getName());
            System.out.println("Saving thumbnail file: " + outputFile);
            savePhoto(outputFile, thumbnail);
            System.out.println("Complete.\n");
        }
    } else {
        System.out.println("Not photos found.");
    }
    System.out.println("Exiting photo cropper.");
}
