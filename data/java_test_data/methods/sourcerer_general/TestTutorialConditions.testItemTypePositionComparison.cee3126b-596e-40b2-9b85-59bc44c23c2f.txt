@Test
@DirtiesContext
public void testItemTypePositionComparison() throws Exception {
    configureMinimalGame();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    DbSimulationLevel dbSimulationLevel = setupItemTypePositionSimulationLevel("test");
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    movableService.getGameInfo();
    userGuidanceService.promote(userService.getUserState(), dbSimulationLevel.getId());
    SimulationInfo simulationInfo = (SimulationInfo) movableService.getGameInfo();
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Start simulation
    ConditionServiceListener<Object> conditionServiceListener = EasyMock.createStrictMock(ConditionServiceListener.class);
    conditionServiceListener.conditionPassed(null);
    EasyMock.replay(conditionServiceListener);
    // 
    SyncBaseItem syncItem = createSyncBaseItem(TEST_START_BUILDER_ITEM_ID, new Index(100, 100), new Id(1, -100, -100));
    // 
    SimulationConditionServiceImpl.getInstance().activateCondition(simulationInfo.getTutorialConfig().getTasks().get(0).getStepConfigs().get(0).getConditionConfig(), null);
    SimulationConditionServiceImpl.getInstance().setConditionServiceListener(conditionServiceListener);
    syncItem.setPosition(new Index(400, 400));
    SimulationConditionServiceImpl.getInstance().onSyncItemDeactivated(syncItem);
    EasyMock.verify(conditionServiceListener);
}
