public String saveImport() throws Exception {
    currentProject = this.getCurrentProject();
    List<String> outFileList = null;
    List<CardData> cardDatas = new ArrayList<CardData>();
    try {
        if (file != null) {
            // the directory to upload to
            String uploadDir = ServletActionContext.getServletContext().getRealPath("/resources") + "/" + this.getCurrentProject().getProjectId() + "/image/";
            // write the file to the file specified
            File dirPath = new File(uploadDir);
            if (!dirPath.exists()) {
                dirPath.mkdirs();
            }
            outFileList = ZipUtil.unzipImage(file, uploadDir);
            if (outFileList == null && outFileList.isEmpty()) {
                addActionError(getText("zip.error.isNull"));
                return SUCCESS;
            }
            for (String outFile : outFileList) {
                List<String> args = new ArrayList<String>();
                args.add(outFile);
                try {
                    File imageFile = new File(uploadDir + outFile);
                    Integer[] imgSize = ImageUtil.getImage(imageFile);
                    if (!(imgSize != null && imgSize.length == 2 && imgSize[0] <= Constants.IMG_WIDTH && imgSize[1] <= Constants.IMG_HEITH)) {
                        addActionError(getText("error.zip.image.upload", args));
                    } else {
                        String userName = FileUtil.getFileNameWithOutExt(outFile);
                        CardData cardData = cardDataManager.getCardDataByProjectAndName(currentProject, userName);
                        if (cardData == null) {
                            addActionError(getText("error.zip.image.noData", args));
                            imageFile.deleteOnExit();
                        } else {
                            Set<Attachment> attachments = new HashSet<Attachment>();
                            Attachment attachment = new Attachment();
                            attachment.setAttachmentType(Constants.ATTACHMENT_TYPE_IMAGE);
                            attachment.setProject(currentProject);
                            attachment.setFilePath(uploadDir + outFile);
                            attachment.setCreatedDate(new Date());
                            attachment.setLoginName(this.getUser().getLoginName());
                            attachment.setCardData(cardData);
                            attachments.add(attachment);
                            cardData.setAttachments(attachments);
                            cardData = cardDataManager.saveCardData(cardData);
                            cardDatas.add(cardData);
                        }
                    }
                } catch (Exception ex) {
                    args.add(ex.getMessage());
                    addActionError(getText("error.zip.image.unknown", args));
                }
            }
            if (cardDatas != null && !cardDatas.isEmpty()) {
                // the directory to upload to
                uploadDir = ServletActionContext.getServletContext().getRealPath("/resources") + "/" + this.getCurrentProject().getProjectId() + "/import/";
                // write the file to the file specified
                dirPath = new File(uploadDir);
                if (!dirPath.exists()) {
                    dirPath.mkdirs();
                }
                // String fileFileName = file.getName();
                // retrieve the file data
                InputStream stream = new FileInputStream(file);
                // write the file to the file specified
                OutputStream bos = new FileOutputStream(uploadDir + fileFileName);
                int bytesRead;
                byte[] buffer = new byte[8192];
                while ((bytesRead = stream.read(buffer, 0, 8192)) != -1) {
                    bos.write(buffer, 0, bytesRead);
                }
                bos.close();
                stream.close();
                Attachment attachment = new Attachment();
                attachment.setAttachmentType(Constants.ATTACHMENT_TYPE_ZIP);
                attachment.setProject(currentProject);
                attachment.setFilePath(fileFileName);
                attachment.setCreatedDate(new Date());
                attachment.setLoginName(this.getUser().getLoginName());
                attachmentManager.save(attachment);
            }
        } else {
            addActionError(getText("error.req.import.isNull"));
            return SUCCESS;
        }
        this.getRequest().setAttribute("req_data", cardDatas);
    } catch (Exception ex) {
        List<String> args = new ArrayList<String>();
        args.add(ex.getMessage());
        addActionError(getText("error.zip.saved", args));
        return SUCCESS;
    }
    return SUCCESS;
}
