public boolean insert(Connection db) throws SQLException {
    if (!isValid()) {
        return false;
    }
    boolean commit = db.getAutoCommit();
    if (commit) {
        db.setAutoCommit(false);
    }
    StringBuffer sql = new StringBuffer();
    sql.append("INSERT INTO ad " + "( project_id " + (id > -1 ? ", ad_id " : "") + ", project_category_id" + ", ad_category_id" + ", heading" + ", brief_description_1" + ", brief_description_2" + ", content" + ", web_page" + ", destination_url" + ", enabled");
    if (entered != null) {
        sql.append(", entered ");
    }
    if (modified != null) {
        sql.append(", modified ");
    }
    sql.append(", enteredby" + ", modifiedby" + ", publish_date" + ", expiration_date" + ", rating_count" + ", rating_value" + ", rating_avg" + ", read_count" + ", read_date" + " ) ");
    // project_id
    sql.append("VALUES (? ");
    if (id > -1) {
        // ad_id
        sql.append(", ?");
    }
    sql.append(// project_category_id
    ", ?" + // ad_category_id
    ", ?" + // heading
    ", ?" + ", ?" + ", ?" + // content
    ", ?" + // web_page
    ", ?" + ", ?" + // enabled
    ", ?");
    if (entered != null) {
        // entered
        sql.append(", ?");
    }
    if (modified != null) {
        // modified
        sql.append(", ?");
    }
    sql.append(// enteredBy
    ", ?" + // modifiedBy
    ", ?" + // publish_date
    ", ?" + // expiration_date
    ", ?" + // rating_count
    ", ?" + // rating_value
    ", ?" + // rating_avg
    ", ?" + // read_count
    ", ?" + // read_date
    ", ?" + ") ");
    int i = 0;
    try {
        // Insert the ad
        PreparedStatement pst = db.prepareStatement(sql.toString());
        DatabaseUtils.setInt(pst, ++i, projectId);
        if (id > -1) {
            pst.setInt(++i, id);
        }
        DatabaseUtils.setInt(pst, ++i, projectCategoryId);
        DatabaseUtils.setInt(pst, ++i, categoryId);
        pst.setString(++i, heading);
        pst.setString(++i, briefDescription1);
        pst.setString(++i, briefDescription2);
        pst.setString(++i, content);
        pst.setString(++i, webPage);
        pst.setString(++i, destinationUrl);
        pst.setBoolean(++i, enabled);
        if (entered != null) {
            pst.setTimestamp(++i, entered);
        }
        if (modified != null) {
            pst.setTimestamp(++i, modified);
        }
        pst.setInt(++i, enteredBy);
        pst.setInt(++i, modifiedBy);
        DatabaseUtils.setTimestamp(pst, ++i, publishDate);
        DatabaseUtils.setTimestamp(pst, ++i, expirationDate);
        pst.setInt(++i, ratingCount);
        pst.setInt(++i, ratingValue);
        pst.setDouble(++i, ratingAvg);
        pst.setInt(++i, readCount);
        pst.setTimestamp(++i, readDate);
        pst.execute();
        pst.close();
        id = DatabaseUtils.getCurrVal(db, "ad_ad_id_seq", id);
        if (commit) {
            db.commit();
        }
    } catch (SQLException e) {
        if (commit) {
            db.rollback();
        }
        throw e;
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
    return true;
}
