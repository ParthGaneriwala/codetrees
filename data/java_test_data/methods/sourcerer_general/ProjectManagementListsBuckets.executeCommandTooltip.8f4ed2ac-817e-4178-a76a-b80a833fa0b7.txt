public String executeCommandTooltip(ActionContext context) {
    Connection db = null;
    // Parameters
    String xId = context.getRequest().getParameter("id");
    String taskId = xId.substring(xId.indexOf("_") + 1);
    try {
        db = getConnection(context);
        // Load the task
        Task thisTask = new Task(db, Integer.parseInt(taskId));
        // Load the project
        Project thisProject = retrieveAuthorizedProject(thisTask.getProjectId(), context);
        if (!hasProjectAccess(context, thisProject.getId(), "project-lists-view")) {
            return "PermissionError";
        }
        context.getRequest().setAttribute("task", thisTask);
        // Build lookup lists
        ProjectItemList functionalAreaList = new ProjectItemList();
        functionalAreaList.setProjectId(thisProject.getId());
        functionalAreaList.buildList(db, ProjectItemList.LIST_FUNCTIONAL_AREA);
        context.getRequest().setAttribute("functionalAreaList", functionalAreaList);
        ProjectItemList complexityList = new ProjectItemList();
        complexityList.setProjectId(thisProject.getId());
        complexityList.buildList(db, ProjectItemList.LIST_COMPLEXITY);
        context.getRequest().setAttribute("complexityList", complexityList);
        ProjectItemList businessValueList = new ProjectItemList();
        businessValueList.setProjectId(thisProject.getId());
        businessValueList.buildList(db, ProjectItemList.LIST_VALUE);
        context.getRequest().setAttribute("businessValueList", businessValueList);
        ProjectItemList targetSprintList = new ProjectItemList();
        targetSprintList.setProjectId(thisProject.getId());
        targetSprintList.buildList(db, ProjectItemList.LIST_TARGET_SPRINT);
        context.getRequest().setAttribute("targetSprintList", targetSprintList);
        ProjectItemList targetReleaseList = new ProjectItemList();
        targetReleaseList.setProjectId(thisProject.getId());
        targetReleaseList.buildList(db, ProjectItemList.LIST_TARGET_RELEASE);
        context.getRequest().setAttribute("targetReleaseList", targetReleaseList);
        ProjectItemList statusList = new ProjectItemList();
        statusList.setProjectId(thisProject.getId());
        statusList.buildList(db, ProjectItemList.LIST_STATUS);
        context.getRequest().setAttribute("statusList", statusList);
        ProjectItemList loeRemainingList = new ProjectItemList();
        loeRemainingList.setProjectId(thisProject.getId());
        loeRemainingList.buildList(db, ProjectItemList.LIST_LOE_REMAINING);
        context.getRequest().setAttribute("loeRemainingList", loeRemainingList);
        return "BucketTooltipOK";
    } catch (Exception errorMessage) {
        context.getRequest().setAttribute("Error", errorMessage);
        return ("SystemError");
    } finally {
        this.freeConnection(context, db);
    }
}
