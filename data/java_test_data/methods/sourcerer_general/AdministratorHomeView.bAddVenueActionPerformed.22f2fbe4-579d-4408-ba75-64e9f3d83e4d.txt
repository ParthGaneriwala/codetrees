private void bAddVenueActionPerformed(java.awt.event.ActionEvent evt) {
    // GEN-FIRST:event_bAddVenueActionPerformed
    // TODO add your handling code here:
    String str;
    int newid;
    // validate if empty
    if (// check if any textfield is empty  //reminder : the Venue Type should be an integer
    this.tfVenueName.getText().equals("") || this.tfVenueLocation.getText().equals("") || this.tfVenueType.getText().equals("")) {
        JOptionPane.showMessageDialog(this, "All fields are mandatory.");
    } else if (// text field venue name , but it did not validate if the event/venue name has existed
    !StringHelper.validateString(this.tfVenueName.getText())) {
        // did you validate if the input is an integer ?
        JOptionPane.showMessageDialog(this, "Invalid characters in Name");
        tfVenueName.setText("");
        tfVenueName.requestFocus();
    } else if (// text field venue name , but it did not validate if the event/venue name has existed
    !StringHelper.validateString(this.tfVenueLocation.getText())) {
        // did you validate if the input is an integer ?
        JOptionPane.showMessageDialog(this, "Invalid characters in Location");
        tfVenueLocation.setText("");
        tfVenueLocation.requestFocus();
    } else if (!StringHelper.isValidNumber(this.tfVenueType.getText())) {
        JOptionPane.showMessageDialog(this, "VenueType is invalid!It must be a number !");
        tfVenueType.setText("");
        tfVenueType.requestFocus();
    } else // check length for each field
    if (this.tfVenueName.getText().length() > 45) {
        JOptionPane.showMessageDialog(this, "Invalid length in Name field!Must be in 1-45 characters!");
        tfVenueName.setText("");
        tfVenueName.requestFocus();
    } else if (this.tfVenueLocation.getText().length() > 45) {
        JOptionPane.showMessageDialog(this, "Invalid length in Location field!Must be in 1-45 characters!");
        tfVenueLocation.setText("");
        tfVenueLocation.requestFocus();
    } else if (this.tfVenueType.getText().length() > 11) {
        JOptionPane.showMessageDialog(this, "Invalid length in Type filed!Must be in 1-11 characters!");
        tfVenueType.setText("");
        tfVenueType.requestFocus();
    } else if (!validateSeat()) {
    // JOptionPane.showMessageDialog(this, "There is a/many error in seat number part!Please check it again!");
    } else // THE END OF PART1
    {
        Venue venue = new Venue();
        // call the method in venue.java
        venue.setName(this.tfVenueName.getText());
        venue.setLocation(this.tfVenueLocation.getText());
        venue.setType(Integer.parseInt(this.tfVenueType.getText()));
        // insert venue into venue table ,using VenueController class ,remember to complete those two methods in VenueController
        VenueController venueContent = new VenueController();
        // insert venue to database
        // give the new venue id to newid in order to insert seats into seat table
        newid = venueContent.addVenue(venue);
        if (newid != 0) {
            // connected to Venue.java which is a data object
            venue.setVenueID(newid);
            JOptionPane.showMessageDialog(this, "Venue added Successfully!!");
            // check for adding seat numbers for each category ,related with two methods : private seatNumberobj ,
            if (seatNumberobj(venue) == true) {
                JOptionPane.showMessageDialog(this, "seat number is added successfully");
            } else {
                venueContent.deleteVenue(venue);
                JOptionPane.showMessageDialog(this, "Error on  adding seats numbers");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Fail to add venue! The venue exists!");
        }
    }
}
