public DependencyList processDependencies(Connection db) throws SQLException {
    ResultSet rs = null;
    String sql = null;
    DependencyList dependencyList = new DependencyList();
    sql = "SELECT count(*) as linkcount " + "FROM tasklink_contact " + "WHERE task_id = ? ";
    int i = 0;
    PreparedStatement pst = db.prepareStatement(sql);
    pst.setInt(++i, this.getId());
    rs = pst.executeQuery();
    if (rs.next()) {
        int linkcount = rs.getInt("linkcount");
        if (linkcount != 0) {
            Dependency thisDependency = new Dependency();
            thisDependency.setName("contacts");
            thisDependency.setCount(linkcount);
            thisDependency.setCanDelete(true);
            dependencyList.add(thisDependency);
        }
    }
    rs.close();
    pst.close();
    sql = "SELECT count(*) as linkcount " + "FROM tasklink_ticket " + "WHERE task_id = ? ";
    i = 0;
    pst = db.prepareStatement(sql);
    pst.setInt(++i, this.getId());
    rs = pst.executeQuery();
    if (rs.next()) {
        int linkcount = rs.getInt("linkcount");
        if (linkcount != 0) {
            Dependency thisDependency = new Dependency();
            thisDependency.setName("tickets");
            thisDependency.setCount(linkcount);
            thisDependency.setCanDelete(true);
            dependencyList.add(thisDependency);
        }
    }
    rs.close();
    pst.close();
    sql = "SELECT count(*) as linkcount " + "FROM tasklink_project " + "WHERE task_id = ? ";
    i = 0;
    pst = db.prepareStatement(sql);
    pst.setInt(++i, this.getId());
    rs = pst.executeQuery();
    if (rs.next()) {
        int linkcount = rs.getInt("linkcount");
        if (linkcount != 0) {
            Dependency thisDependency = new Dependency();
            thisDependency.setName("projects");
            thisDependency.setCount(linkcount);
            thisDependency.setCanDelete(true);
            dependencyList.add(thisDependency);
        }
    }
    rs.close();
    pst.close();
    return dependencyList;
}
