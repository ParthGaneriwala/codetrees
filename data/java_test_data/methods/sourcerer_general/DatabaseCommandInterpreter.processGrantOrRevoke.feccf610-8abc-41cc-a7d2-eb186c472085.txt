private void processGrantOrRevoke(boolean grant) throws HsqlException {
    int right;
    Object accessKey;
    String token;
    session.checkAdmin();
    session.checkDDLWrite();
    session.setScripting(true);
    right = 0;
    token = tokenizer.getSimpleToken();
    tokenizer.back();
    if (!GranteeManager.validRightString(token)) {
        processRoleGrantOrRevoke(grant);
        return;
    }
    do {
        token = tokenizer.getSimpleToken();
        right |= GranteeManager.getCheckRight(token);
    } while (tokenizer.isGetThis(Token.T_COMMA));
    tokenizer.getThis(Token.T_ON);
    accessKey = null;
    if (tokenizer.isGetThis(Token.T_CLASS)) {
        accessKey = tokenizer.getSimpleName();
        if (!tokenizer.wasQuotedIdentifier()) {
            throw Trace.error(Trace.QUOTED_IDENTIFIER_REQUIRED);
        }
    } else {
        token = tokenizer.getName();
        String schema = session.getSchemaName(tokenizer.getLongNameFirst());
        Table t = database.schemaManager.getTable(session, token, schema);
        accessKey = t.getName();
        session.setScripting(true);
    }
    tokenizer.getThis(grant ? Token.T_TO : Token.T_FROM);
    token = getUserIdentifier();
    GranteeManager gm = database.getGranteeManager();
    if (grant) {
        gm.grant(token, accessKey, right);
    } else {
        gm.revoke(token, accessKey, right);
    }
}
