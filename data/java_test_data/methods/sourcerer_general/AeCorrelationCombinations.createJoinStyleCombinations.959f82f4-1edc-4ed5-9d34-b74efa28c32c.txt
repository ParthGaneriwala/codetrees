private Collection createJoinStyleCombinations() {
    Set combinationSet = new HashSet();
    for (Iterator iter = getJoinsIterator(); iter.hasNext(); ) {
        // this set will contain at least one correlationSet that is a join style
        Set setOfCorrelationSetDefs = (Set) iter.next();
        // divide the corr sets into the initiated style and join style
        List initiatedList = new LinkedList();
        List joinList = new LinkedList();
        for (Iterator iterator = setOfCorrelationSetDefs.iterator(); iterator.hasNext(); ) {
            AeCorrelationSetDef corrSetDef = (AeCorrelationSetDef) iterator.next();
            if (corrSetDef.isJoinStyle()) {
                joinList.add(corrSetDef);
            } else {
                initiatedList.add(corrSetDef);
            }
        }
        // convert to array
        AeCorrelationSetDef[] joinCorrSets = new AeCorrelationSetDef[joinList.size()];
        joinList.toArray(joinCorrSets);
        // get all of the initiated props since they'll be the same for each combination
        Set initiatedProps = new HashSet();
        for (Iterator iterator = initiatedList.iterator(); iterator.hasNext(); ) {
            AeCorrelationSetDef corrSetDef = (AeCorrelationSetDef) iterator.next();
            initiatedProps.addAll(corrSetDef.getProperties());
        }
        // add the combination which covers none of the join style sets being initiated
        if (!initiatedProps.isEmpty()) {
            combinationSet.add(initiatedProps);
        }
        // get all combinations of the array
        for (Iterator combinationsIter = AeCombinations.createAllCombinations(joinCorrSets); combinationsIter.hasNext(); ) {
            HashSet set = new HashSet();
            set.addAll(initiatedProps);
            Object[] next = (Object[]) combinationsIter.next();
            for (int i = 0; i < next.length; i++) {
                AeCorrelationSetDef corrSetDef = (AeCorrelationSetDef) next[i];
                set.addAll(corrSetDef.getProperties());
            }
            combinationSet.add(set);
        }
    }
    addInitiatedCorrelationSetProperties(combinationSet, getInitiatedIterator());
    return combinationSet;
}
