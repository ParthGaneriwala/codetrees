public RGBImage apply() {
    int w = hist.getW();
    int h = hist.getH();
    int n = h * w;
    int ulx = hist.getUlx();
    int uly = hist.getUly();
    int[] hr = hist.getRed();
    int[] hg = hist.getGreen();
    int[] hb = hist.getBlue();
    // compute probability
    for (int i = 0; i < 256; i++) {
        pr[i] = (float) hr[i] / n;
        pg[i] = (float) hg[i] / n;
        pb[i] = (float) hb[i] / n;
    }
    // compute new sk
    for (int i = 1; i < 256; i++) {
        pr[i] = pr[i] + pr[i - 1];
        pg[i] = pg[i] + pg[i - 1];
        pb[i] = pb[i] + pb[i - 1];
        hr[i] = (int) (pr[i] * 255);
        hg[i] = (int) (pg[i] * 255);
        hb[i] = (int) (pb[i] * 255);
    }
    // Draw it
    for (int y = uly; y < uly + h; y++) {
        for (int x = ulx; x < ulx + w; x++) {
            // System.out.println(x+""+y);
            RGBColor color = source.getRGBColor(x, y);
            int red = hr[color.getRed()];
            int green = hg[color.getGreen()];
            int blue = hb[color.getBlue()];
            source.setRGB(x, y, red, green, blue);
        }
    }
    return source;
}
