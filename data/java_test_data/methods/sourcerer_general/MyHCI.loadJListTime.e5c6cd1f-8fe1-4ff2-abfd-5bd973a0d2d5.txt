private void loadJListTime() {
    String major = (String) jComboBoxUpdateMajor.getSelectedItem();
    String degree = UNDG;
    if (jRadioButtonUndg.isSelected()) {
        degree = UNDG;
    }
    /*else if(jRadioButtonPost.isSelected()){
            degree = POST;
        }else if(jRadioButtonExte.isSelected()){
            degree = EXTE;
        }*/
    // need to implement when more data is available
    ObjArea[] core = db.getCore(major, degree);
    ObjArea[] support = db.getSupport(major, degree);
    ObjArea[] elective = db.getElective(major, degree);
    ObjArea[] areaa = db.getAreaA(major, degree);
    ObjArea[] areab = db.getAreaB(major, degree);
    ObjArea[] areac = db.getAreaC(major, degree);
    ObjArea[] aread = db.getAreaD(major, degree);
    ObjArea[] areae = db.getAreaE(major, degree);
    String[] c = new String[core.length];
    String[] s = new String[support.length];
    String[] e = new String[elective.length];
    String[] aa = new String[areaa.length];
    String[] ab = new String[areab.length];
    String[] ac = new String[areac.length];
    String[] ad = new String[aread.length];
    String[] ae = new String[areae.length];
    for (int i = 0; i < c.length && i < core.length; ++i) c[i] = (String) core[i].getCourseid();
    for (int i = 0; i < s.length && i < support.length; ++i) s[i] = (String) support[i].getCourseid();
    for (int i = 0; i < e.length && i < elective.length; ++i) e[i] = (String) elective[i].getCourseid();
    for (int i = 0; i < aa.length && i < areaa.length; ++i) aa[i] = (String) areaa[i].getCourseid();
    for (int i = 0; i < ab.length && i < areab.length; ++i) ab[i] = (String) areab[i].getCourseid();
    for (int i = 0; i < ac.length && i < areac.length; ++i) ac[i] = (String) areac[i].getCourseid();
    for (int i = 0; i < ad.length && i < aread.length; ++i) ad[i] = (String) aread[i].getCourseid();
    for (int i = 0; i < ae.length && i < areae.length; ++i) ae[i] = (String) areae[i].getCourseid();
    int cnt = 0;
    c = filterOutCompletedCourse(c);
    s = filterOutCompletedCourse(s);
    e = filterOutCompletedCourse(e);
    aa = filterOutCompletedCourse(aa);
    ab = filterOutCompletedCourse(ab);
    ac = filterOutCompletedCourse(ac);
    ad = filterOutCompletedCourse(ad);
    ae = filterOutCompletedCourse(ae);
    c = filterOutReqNeeded(major, degree, c);
    s = filterOutReqNeeded(major, degree, s);
    e = filterOutReqNeeded(major, degree, e);
    aa = filterOutReqNeeded(major, degree, aa);
    ab = filterOutReqNeeded(major, degree, ab);
    ac = filterOutReqNeeded(major, degree, ac);
    ad = filterOutReqNeeded(major, degree, ad);
    ae = filterOutReqNeeded(major, degree, ae);
    cnt = c.length + s.length + e.length + aa.length + ab.length + ac.length + ad.length + ae.length;
    String[] courseID = new String[cnt + 8];
    cnt = 0;
    courseID[cnt++] = "----------Core Courses------------------------------------";
    for (int i = 0; i < c.length; ++i) courseID[cnt++] = filterInName(c[i]);
    courseID[cnt++] = "----------Elective Courses---------------------------------";
    for (int i = 0; i < e.length; ++i) courseID[cnt++] = filterInName(e[i]);
    courseID[cnt++] = "----------Support Courses----------------------------------";
    for (int i = 0; i < s.length; ++i) courseID[cnt++] = filterInName(s[i]);
    courseID[cnt++] = "----------General Education Area A Courses------------------------";
    for (int i = 0; i < aa.length; ++i) courseID[cnt++] = filterInName(aa[i]);
    courseID[cnt++] = "----------General Education Area B Courses------------------------";
    for (int i = 0; i < ab.length; ++i) courseID[cnt++] = filterInName(ab[i]);
    courseID[cnt++] = "----------General Education Area C Courses------------------------";
    for (int i = 0; i < ac.length; ++i) courseID[cnt++] = filterInName(ac[i]);
    courseID[cnt++] = "----------General Education Area D Courses------------------------";
    for (int i = 0; i < ad.length; ++i) courseID[cnt++] = filterInName(ad[i]);
    courseID[cnt++] = "----------General Education Area E Courses------------------------";
    for (int i = 0; i < ae.length; ++i) courseID[cnt++] = filterInName(ae[i]);
    jListTimeCourses.setListData(courseID);
}
