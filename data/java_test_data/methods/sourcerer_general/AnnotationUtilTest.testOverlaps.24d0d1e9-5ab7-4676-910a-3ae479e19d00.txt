@Test
public void testOverlaps() {
    Token token1 = new Token(jCas, 0, 0);
    Token token2 = new Token(jCas, 0, 0);
    assertTrue(AnnotationUtil.overlaps(token1, token2));
    assertTrue(AnnotationUtil.overlaps(token2, token1));
    token1 = new Token(jCas, 0, 0);
    token2 = new Token(jCas, 0, 1);
    assertTrue(AnnotationUtil.overlaps(token1, token2));
    assertTrue(AnnotationUtil.overlaps(token2, token1));
    token1 = new Token(jCas, 0, 5);
    token2 = new Token(jCas, 5, 10);
    assertFalse(AnnotationUtil.overlaps(token1, token2));
    assertFalse(AnnotationUtil.overlaps(token2, token1));
    token1 = new Token(jCas, 0, 5);
    token2 = new Token(jCas, 4, 10);
    assertTrue(AnnotationUtil.overlaps(token1, token2));
    assertTrue(AnnotationUtil.overlaps(token2, token1));
    token1 = new Token(jCas, 0, 5);
    token2 = new Token(jCas, 6, 10);
    assertFalse(AnnotationUtil.overlaps(token1, token2));
    assertFalse(AnnotationUtil.overlaps(token2, token1));
    token1 = new Token(jCas, 0, 5);
    token2 = new Token(jCas, 1, 10);
    assertTrue(AnnotationUtil.overlaps(token1, token2));
    assertTrue(AnnotationUtil.overlaps(token2, token1));
}
