private void init() {
    File cliConfiguration = new File(cfgCLIPath + "/config_clever_cli.xml");
    InputStream inxml = null;
    FileStreamer fs = null;
    ParserXML pXML = null;
    if (!cliConfiguration.exists()) {
        createConfigurationFile();
    }
    try {
        inxml = new FileInputStream(cfgCLIPath + "/config_clever_cli.xml");
    } catch (FileNotFoundException e) {
        System.out.println("Configuration file not found: " + e);
        System.exit(1);
    }
    try {
        fs = new FileStreamer();
        pXML = new ParserXML(fs.xmlToString(inxml));
    } catch (IOException ex) {
        System.out.println("Error in parsig configuration file: " + ex);
        System.exit(1);
    }
    ClusterManagerAdministrationTools adminTools = ClusterManagerAdministrationTools.instance();
    if (!adminTools.connect(pXML.getElementContent("server"), pXML.getElementContent("username"), pXML.getElementContent("password"), Integer.parseInt(pXML.getElementContent("port")), pXML.getElementContent("room"), pXML.getElementContent("nickname"))) {
        System.out.println("Error in connecting the administrator. The server might be turned off or please verify the configuration file.");
        System.exit(1);
    } else {
        setPrompt("");
    }
    // Read the configuration from the file in the package
    Properties prop = new Properties();
    InputStream in = getClass().getResourceAsStream("/org/clever/administration/config/logger.properties");
    try {
        prop.load(in);
    } catch (IOException ex) {
        System.out.println("Error while initializing logger: " + ex);
        System.exit(1);
    }
    PropertyConfigurator.configure(prop);
    logger = Logger.getLogger("CLI");
    try {
        collectCommands();
        cleverConsole = new ConsoleReader();
        cleverConsole.setBellEnabled(true);
        cleverConsoleHistory = new History();
        File cleverHistoryFile = new File("cleverHistory.txt");
        if (!cleverHistoryFile.exists()) {
            System.out.println("History file created.");
            cleverHistoryFile.createNewFile();
        }
        cleverConsoleHistory.setHistoryFile(cleverHistoryFile);
        cleverConsole.setHistory(cleverConsoleHistory);
        if (args != null)
            showShell(args);
        else
            showShell();
    } catch (IOException e) {
        System.out.println("Error history file creation. " + e);
    }
}
