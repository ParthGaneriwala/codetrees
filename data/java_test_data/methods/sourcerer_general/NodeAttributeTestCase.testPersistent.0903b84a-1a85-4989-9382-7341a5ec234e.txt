public void testPersistent() throws Exception {
    ChromatticSessionImpl session = login();
    Node rootNode = session.getRoot();
    Node aNode = rootNode.addNode("tna_a_a", "nodeattribute:a");
    String aName = aNode.getName();
    String aId = aNode.getUUID();
    String aPath = aNode.getPath();
    String workspaceName = session.getJCRSession().getWorkspace().getName();
    // 
    TNA_A a = session.findById(TNA_A.class, aId);
    assertEquals(aName, a.getName());
    assertEquals(aId, a.getId());
    assertEquals(aPath, a.getPath());
    assertEquals(workspaceName, a.getWorkspace());
    // 
    a.setName("foo");
    try {
        a.setId("foo");
        fail();
    } catch (UnsupportedOperationException e) {
    }
    try {
        a.setPath("foo");
        fail();
    } catch (UnsupportedOperationException e) {
    }
    try {
        a.setWorkspace("foo");
        fail();
    } catch (UnsupportedOperationException e) {
    }
    // 
    String newPath = aPath.substring(0, aPath.lastIndexOf('/')) + "/foo";
    // Check state has not changed
    assertEquals("foo", a.getName());
    assertEquals(aId, a.getId());
    assertEquals(newPath, a.getPath());
    assertEquals(workspaceName, a.getWorkspace());
    // 
    session.save();
    // 
    session = login();
    a = session.findById(TNA_A.class, aId);
    assertEquals("foo", a.getName());
    assertEquals(aId, a.getId());
    assertEquals(newPath, a.getPath());
    assertEquals(workspaceName, a.getWorkspace());
}
