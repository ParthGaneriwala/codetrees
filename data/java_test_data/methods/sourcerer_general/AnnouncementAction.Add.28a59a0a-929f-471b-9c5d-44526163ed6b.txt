public ActionForward Add(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String username = (String) request.getSession().getAttribute("username");
    String role = (String) request.getSession().getAttribute("Role");
    if (username != null) {
        if (role.equals("Admin")) {
            DynaValidatorForm dynaForm = (DynaValidatorForm) form;
            String title = dynaForm.getString("title");
            String contestId = dynaForm.getString("contestID");
            String content = dynaForm.getString("content");
            try {
                // 
                AnnouncementDTO announceDTO = new AnnouncementDTO();
                // call Util.generateUUID() auto gennerate Id
                announceDTO.setAnnouncementID(Util.generateUUID());
                // set username
                UserProfileDTO userDTO = new UserProfileDTO();
                userDTO.setUsername(username);
                announceDTO.setUserProfile(userDTO);
                // set Contest id
                ContestDTO contestDTO = new ContestDTO();
                contestDTO.setContestID(contestId);
                announceDTO.setContest(contestDTO);
                announceDTO.setTitle(title);
                announceDTO.setContent(content);
                announceDTO.setUploadDate(Util.getDateTimeNow());
                announceDAO = new AnnouncementDAO();
                // execute
                if (announceDAO.create(announceDTO)) {
                    // set current menu position
                    Collection listAnnouncements = announceDAO.readByLimit();
                    request.getSession().setAttribute("listAnnouncements", listAnnouncements);
                    request.setAttribute("from", "announcement");
                    return mapping.findForward(SUCCESS);
                } else {
                    request.setAttribute("message", "Add New Announcement ERROR!");
                    return mapping.findForward(ERROR);
                }
            } catch (Exception e) {
                request.setAttribute("message", e.toString());
                return mapping.findForward(ERROR);
            }
        } else {
            request.setAttribute("message", "Access is denied permission!");
            return mapping.findForward(ERROR);
        }
    } else {
        request.setAttribute("message", "Please Login!");
        return mapping.findForward(LOGIN);
    }
}
