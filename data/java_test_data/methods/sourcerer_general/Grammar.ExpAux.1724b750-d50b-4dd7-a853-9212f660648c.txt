public final TExp ExpAux(TExp e1) throws ParseException {
    Token id2;
    TExp e2;
    TExpList el;
    switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
        case SUM:
        case SUB:
        case MULTI:
        case LESSTHAN:
        case AND:
            switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
                case SUM:
                    jj_consume_token(SUM);
                    e2 = Exp();
                    {
                        if (true)
                            return new TExpOpPlus(e1, e2);
                    }
                    break;
                case SUB:
                    jj_consume_token(SUB);
                    e2 = Exp();
                    {
                        if (true)
                            return new TExpOpMinus(e1, e2);
                    }
                    break;
                case MULTI:
                    jj_consume_token(MULTI);
                    e2 = Exp();
                    {
                        if (true)
                            return new TExpOpTimes(e1, e2);
                    }
                    break;
                case AND:
                    jj_consume_token(AND);
                    e2 = Exp();
                    {
                        if (true)
                            return new TExpOpAnd(e1, e2);
                    }
                    break;
                case LESSTHAN:
                    jj_consume_token(LESSTHAN);
                    e2 = Exp();
                    {
                        if (true)
                            return new TExpOpLessThan(e1, e2);
                    }
                    break;
                default:
                    jj_la1[19] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
            break;
        case BRACKET_L:
            jj_consume_token(BRACKET_L);
            e2 = Exp();
            jj_consume_token(BRACKET_R);
            {
                if (true)
                    return new TExpArrayLookup(e1, e2);
            }
            break;
        case DOT:
            jj_consume_token(DOT);
            switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
                case LENGTH:
                    jj_consume_token(LENGTH);
                    {
                        if (true)
                            return new TExpArrayLength(e1);
                    }
                    break;
                case ID:
                    id2 = jj_consume_token(ID);
                    jj_consume_token(PAREN_L);
                    el = ExpList();
                    jj_consume_token(PAREN_R);
                    break;
                default:
                    jj_la1[20] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
            {
                if (true)
                    return new TExpCall(e1, new TIdentifier(id2.image), el);
            }
            break;
        default:
            jj_la1[21] = jj_gen;
            {
                if (true)
                    return e1;
            }
    }
    throw new Error("Missing return statement in function");
}
