public void actionPerformed(ActionEvent e) {
    String name = parentWindow.getPlayerName();
    File gameplayKeys = new File("data/" + name + "GameplayKeys.txt");
    File contextKeys = new File("data/" + name + "ContextKeys.txt");
    File inventoryKeys = new File("data/" + name + "GameplayKeys.txt");
    File skillKeys = new File("data/" + name + "ContextKeys.txt");
    File vendorKeys = new File("data/" + name + "ContextKeys.txt");
    if (!gameplayKeys.exists())
        gameplayKeys = new File("data/DefaultGameplayKeys.txt");
    if (!contextKeys.exists())
        contextKeys = new File("data/DefaultContextKeys.txt");
    if (!inventoryKeys.exists())
        inventoryKeys = new File("data/DefaultInventoryKeys.txt");
    if (!skillKeys.exists())
        skillKeys = new File("data/DefaultSkillKeys.txt");
    if (!vendorKeys.exists())
        vendorKeys = new File("data/DefaultVendorKeys.txt");
    GameWorld world = SaverLoader.Load(name);
    MainFrame mFrame = new MainFrame();
    mFrame.setGameWorld(world);
    // Add input stuffs
    KeyboardPoller keyboard = new KeyboardPoller(256, "MainKeyboard");
    mFrame.addKeyListener(keyboard);
    InputManager.instance().registerPoller(keyboard);
    ListIndexListener skillIndexer = new ListIndexListener();
    ListIndexListener itemIndexer = new ListIndexListener();
    ListIndexListener equipIndexer = new ListIndexListener();
    ListIndexListener unequipIndexer = new ListIndexListener();
    ListIndexListener buyIndexer = new ListIndexListener();
    ListIndexListener sellIndexer = new ListIndexListener();
    Iteration3CommandsFactory comFactory = new Iteration3CommandsFactory();
    comFactory.setGameWorld(world);
    comFactory.setMainFrame(mFrame);
    comFactory.setAbilityListListener(skillIndexer);
    comFactory.setItemListListener(itemIndexer);
    comFactory.setBuyListListener(buyIndexer);
    comFactory.setSellListListener(sellIndexer);
    comFactory.setEquipListListener(equipIndexer);
    comFactory.setUnequipListListener(unequipIndexer);
    mFrame.addListIndexers(skillIndexer, buyIndexer, sellIndexer, equipIndexer, unequipIndexer, itemIndexer);
    KeyboardConfigFileIO keyLoader = new KeyboardConfigFileIO(comFactory);
    KeyboardTriggerHandler handler = keyLoader.loadHandler(gameplayKeys.getPath());
    handler.setPoller(keyboard);
    KeyboardTriggerHandler h2 = keyLoader.loadHandler(contextKeys.getPath());
    h2.setPoller(keyboard);
    KeyboardTriggerHandler h3 = keyLoader.loadHandler(vendorKeys.getPath());
    h3.setPoller(keyboard);
    KeyboardTriggerHandler h4 = keyLoader.loadHandler(inventoryKeys.getPath());
    h4.setPoller(keyboard);
    KeyboardTriggerHandler h5 = keyLoader.loadHandler(skillKeys.getPath());
    h5.setPoller(keyboard);
    InputManager.instance().registerHandler(handler);
    InputManager.instance().registerHandler(h2);
    InputManager.instance().registerHandler(h3);
    InputManager.instance().registerHandler(h4);
    InputManager.instance().registerHandler(h5);
    InputManager.instance().disableHandler("VendorKeys");
    InputManager.instance().disableHandler("InventoryKeys");
    InputManager.instance().disableHandler("SkillKeys");
    GameLoop loop = new GameLoop(mFrame);
    parentWindow.hideme();
    new Thread(loop).start();
}
