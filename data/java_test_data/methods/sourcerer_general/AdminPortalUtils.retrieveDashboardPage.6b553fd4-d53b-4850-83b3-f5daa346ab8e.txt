public static DashboardPage retrieveDashboardPage(AdminPortalBean portalBean) throws Exception {
    // Use the admin-portal-config.xml to determine the dashboard page to use for the current url
    URL resource = AdminPortalUtils.class.getResource("/portal/admin-portal-config.xml");
    LOG.debug("portal config file: " + resource.toString());
    XMLUtils library = new XMLUtils(resource);
    // The nodes are listed under the <module> tag
    Element portal = XMLUtils.getFirstChild(library.getDocumentElement(), "portal", "type", "controller");
    String moduleLayout = null;
    String page = null;
    // Look through the modules
    NodeList moduleNodeList = portal.getElementsByTagName("module");
    for (int i = 0; i < moduleNodeList.getLength(); i++) {
        Node thisModule = moduleNodeList.item(i);
        NodeList urlNodeList = ((Element) thisModule).getElementsByTagName("url");
        for (int j = 0; j < urlNodeList.getLength(); j++) {
            Element urlElement = (Element) urlNodeList.item(j);
            // Construct a AdminPortalURL and add to the list for retrieving
            String name = urlElement.getAttribute("name");
            // <url name="/show" object="/" page="default"/>
            if (name.equals("/" + portalBean.getAction())) {
                String object = urlElement.getAttribute("object");
                if (object.equals("/" + portalBean.getDomainObject())) {
                    // Set the module for tab highlighting
                    portalBean.setModule(((Element) thisModule).getAttribute("name"));
                    // Set the page for looking up
                    page = urlElement.getAttribute("page");
                    // Set the layout filename to find the referenced page
                    moduleLayout = ((Element) thisModule).getAttribute("layout");
                    break;
                }
            }
        }
    }
    URL moduleResource = AdminPortalUtils.class.getResource("/portal/" + moduleLayout);
    LOG.debug("module config file: " + moduleResource.toString());
    XMLUtils module = new XMLUtils(moduleResource);
    Element moduleElement = XMLUtils.getFirstChild(module.getDocumentElement(), "controller");
    NodeList pageNodeList = moduleElement.getElementsByTagName("page");
    if (pageNodeList.getLength() == 0) {
        LOG.warn("No pages found in moduleLayout: " + moduleLayout);
    }
    for (int j = 0; j < pageNodeList.getLength(); j++) {
        Node thisPage = pageNodeList.item(j);
        String pageName = ((Element) thisPage).getAttribute("name");
        if (pageName.equals(page)) {
            LOG.debug("Found page " + pageName);
            // Find a portal template to use
            LOG.debug("Trying a specific portal: " + page);
            DashboardPage dashboardPage = DashboardUtils.loadDashboardPage(DashboardTemplateList.TYPE_CONTROLLER, (portalBean.isPopup() ? page + "-popup" : page), moduleLayout);
            if (dashboardPage == null) {
                LOG.warn("Page not found: " + page);
                return null;
            }
            return dashboardPage;
        }
    }
    return null;
}
