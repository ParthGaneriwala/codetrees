private void createMainTabItem(CTabFolder tabFolder) {
    CTabItem item = new CTabItem(tabFolder, SWT.NONE);
    item.setText("Main");
    item.setImage(SunlightImages.GENERAL.get());
    /* adds the main composite */
    Composite mainArea = new Composite(tabFolder, SWT.NONE);
    mainArea.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));
    mainArea.setLayout(new GridLayout(1, false));
    /* adds the title group */
    titleCheckBoxes = new ArrayList<Button>(Title.values().length - 1);
    Group titleGroup = createGroup("Title", mainArea);
    titleGroup.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));
    titleGroup.setLayout(new GridLayout(Title.values().length - 1, false));
    for (Title title : Title.values()) {
        if (title != Title.UNKNOWN) {
            createTitleCheckBox(title, titleGroup);
        }
    }
    /* adds the name group */
    Group nameGroup = createGroup("Name", mainArea);
    nameGroup.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));
    nameGroup.setLayout(new GridLayout(2, false));
    firstNameText = createTextField("First Name:", nameGroup);
    middleNameText = createTextField("Middle Name:", nameGroup);
    lastNameText = createTextField("Last Name:", nameGroup);
    nameSuffixText = createTextField("Name Suffix:", nameGroup);
    nicknameText = createTextField("Nickname:", nameGroup);
    if (searchToEdit != null) {
        setTextFieldValue(firstNameText, searchToEdit.getQuery().getFirstNameList());
        setTextFieldValue(middleNameText, searchToEdit.getQuery().getMiddleNameList());
        setTextFieldValue(lastNameText, searchToEdit.getQuery().getLastNameList());
        setTextFieldValue(nameSuffixText, searchToEdit.getQuery().getNameSuffixList());
        setTextFieldValue(nicknameText, searchToEdit.getQuery().getNicknameList());
    }
    /* adds the gender group */
    genderCheckBoxes = new ArrayList<Button>(Gender.values().length - 1);
    Group genderGroup = createGroup("Gender", mainArea);
    genderGroup.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));
    genderGroup.setLayout(new GridLayout(Gender.values().length - 1, false));
    for (Gender gender : Gender.values()) {
        if (gender != Gender.UNKNOWN) {
            createGenderCheckBox(gender, genderGroup);
        }
    }
    /* adds the party group */
    partyCheckBoxes = new ArrayList<Button>(Party.values().length - 1);
    Group partyGroup = createGroup("Party", mainArea);
    partyGroup.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));
    partyGroup.setLayout(new GridLayout(Party.values().length - 1, false));
    for (Party party : Party.values()) {
        if (party != Party.UNKNOWN) {
            createPartyCheckBox(party, partyGroup);
        }
    }
    /* adds the active/inactive group */
    inOfficeCheckBoxes = new ArrayList<Button>(2);
    Group inOfficeGroup = createGroup("In Office", mainArea);
    inOfficeGroup.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false));
    inOfficeGroup.setLayout(new GridLayout(2, false));
    createInOfficeCheckBox("Active", Boolean.TRUE, inOfficeGroup);
    createInOfficeCheckBox("Inactive", Boolean.FALSE, inOfficeGroup);
    /* sets the dialog main area */
    item.setControl(mainArea);
}
