protected String buildQuerySQL(Object object) {
    Class cla = object.getClass();
    Field[] fields = cla.getDeclaredFields();
    StringBuilder sb = new StringBuilder();
    String className = cla.getName().replaceAll("ticketmaster.dataobject.", "");
    sb.append("select * from ticket_master.`");
    sb.append(className);
    sb.append("`");
    boolean hasWhere = false;
    for (Field field : fields) {
        field.setAccessible(true);
        try {
            Object obj = field.get(object);
            field.setAccessible(false);
            if ("int".equals(field.getType().toString()) || "float".equals(field.getType().toString()) || "double".equals(field.getType().toString())) {
                if (Integer.parseInt(obj.toString()) != 0) {
                    hasWhere = true;
                    break;
                } else {
                    continue;
                }
            } else if (obj != null) {
                hasWhere = true;
                break;
            }
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(BaseEntityDAO.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(BaseEntityDAO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    if (!hasWhere) {
        return sb.toString();
    }
    sb.append(" where ");
    for (Field field : fields) {
        field.setAccessible(true);
        try {
            Object obj = field.get(object);
            field.setAccessible(false);
            String parameter = null;
            if ("int".equals(field.getType().toString()) || "float".equals(field.getType().toString()) || "double".equals(field.getType().toString())) {
                if (Integer.parseInt(obj.toString()) != 0) {
                    parameter = obj.toString();
                } else {
                    continue;
                }
            } else if ("boolean".equals(field.getType().toString())) {
                parameter = String.valueOf(Converter.BooleanToInt(obj.toString()));
            } else {
                if (obj != null) {
                    parameter = "\'" + obj.toString().replaceAll("'", "''") + "\'";
                } else {
                    continue;
                }
            }
            sb.append(field.getName());
            sb.append(" = ");
            sb.append(parameter);
            sb.append(" and ");
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(UserDAO.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(UserDAO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    sb.replace(sb.lastIndexOf("and "), sb.lastIndexOf("and ") + 4, "");
    return sb.toString();
}
