public void paintNodeBody(Graphics g, TGPanel tgPanel) {
    g.setFont(font);
    fontMetrics = g.getFontMetrics();
    int ix = (int) drawx;
    int iy = (int) drawy;
    int h = getHeight();
    int w = getWidth();
    // arc radius
    int r = h / 2 + 1;
    Color borderCol = getPaintBorderColor(tgPanel);
    g.setColor(borderCol);
    if (typ == TYPE_ROUNDRECT) {
        g.fillRoundRect(ix - w / 2, iy - h / 2, w, h, r, r);
    } else if (typ == TYPE_ELLIPSE) {
        g.fillOval(ix - w / 2, iy - h / 2, w, h);
    } else if (typ == TYPE_CIRCLE) {
        // just use width for both dimensions
        g.fillOval(ix - w / 2, iy - w / 2, w, w);
    } else {
        // TYPE_RECTANGLE
        g.fillRect(ix - w / 2, iy - h / 2, w, h);
    }
    Color backCol = getPaintBackColor(tgPanel);
    g.setColor(backCol);
    if (typ == TYPE_ROUNDRECT) {
        g.fillRoundRect(ix - w / 2 + 2, iy - h / 2 + 2, w - 4, h - 4, r, r);
    } else if (typ == TYPE_ELLIPSE) {
        g.fillOval(ix - w / 2 + 2, iy - h / 2 + 2, w - 4, h - 4);
    } else if (typ == TYPE_CIRCLE) {
        g.fillOval(ix - w / 2 + 2, iy - w / 2 + 2, w - 4, w - 4);
    } else {
        // TYPE_RECTANGLE
        g.fillRect(ix - w / 2 + 2, iy - h / 2 + 2, w - 4, h - 4);
    }
    Color textCol = getPaintTextColor(tgPanel);
    g.setColor(textCol);
    g.drawString(lbl, ix - fontMetrics.stringWidth(lbl) / 2, iy + fontMetrics.getDescent() + 1);
}
