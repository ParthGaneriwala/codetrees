protected void insertMovie() {
    cleanAllComposites();
    Color frontColor = new Color(display, 222, 235, 247);
    insertMovie = new Composite(shell.getShell(), SWT.BORDER);
    // insertMovie.setBackground(frontColor);
    Calendar toDay = Calendar.getInstance();
    final int year = toDay.get(Calendar.YEAR);
    insertMovie.setLocation(2, 145);
    insertMovie.setLayout(new FillLayout(1));
    if ((bar != null) && !(bar.isDisposed()))
        bar.dispose();
    bar = new ExpandBar(insertMovie, SWT.V_SCROLL);
    bar.setBackground(new Color(display, 177, 200, 231));
    Image image = ImageCache.getImage("add_48.png");
    // Main item
    Composite composite = new Composite(bar, SWT.NONE);
    composite.setBackground(frontColor);
    GridLayout layout = new GridLayout(6, false);
    layout.marginLeft = layout.marginTop = layout.marginRight = layout.marginBottom = 5;
    layout.verticalSpacing = 10;
    composite.setLayout(layout);
    Label label = new Label(composite, SWT.NONE);
    label.setText("Movie Name:");
    label.setBackground(frontColor);
    final Text nameText = new Text(composite, SWT.SINGLE | SWT.FILL | SWT.BORDER);
    label = new Label(composite, SWT.NONE);
    label.setText("Movie Year:");
    label.setBackground(frontColor);
    final Text yearText = new Text(composite, SWT.SINGLE | SWT.FILL | SWT.BORDER);
    label = new Label(composite, SWT.NONE);
    label.setText("Running Time:");
    label.setBackground(frontColor);
    final Text timeText = new Text(composite, SWT.SINGLE | SWT.FILL | SWT.BORDER);
    label = new Label(composite, SWT.NONE);
    label.setText("Plot:");
    label.setBackground(frontColor);
    final Text plotText = new Text(composite, SWT.MULTI | SWT.BORDER | SWT.V_SCROLL);
    GridData gridData = new GridData();
    gridData.horizontalAlignment = GridData.FILL;
    gridData.horizontalSpan = 5;
    gridData.verticalAlignment = GridData.FILL;
    gridData.verticalSpan = 2;
    plotText.setLayoutData(gridData);
    label = new Label(composite, SWT.NONE);
    Button button = new Button(composite, SWT.PUSH);
    button.setText("Insert");
    button.setBackground(frontColor);
    ExpandItem item0 = new ExpandItem(bar, SWT.NONE, 0);
    item0.setText("Insert New Movie");
    item0.setHeight(composite.computeSize(SWT.DEFAULT, SWT.DEFAULT).y);
    item0.setControl(composite);
    item0.setImage(image);
    item0.setExpanded(true);
    // listen to the insert button
    button.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            boolean valid = true;
            int mYear = 0;
            int time = 0;
            String plot = null;
            if ((nameText.getText() == "") || (yearText.getText() == ""))
                okMessageBox("Please insert movie name and movie year.");
            else {
                try {
                    mYear = Integer.parseInt(yearText.getText());
                    if ((mYear < 1880) || (mYear > year + 100)) {
                        okMessageBox("Year is not valid. Must be between 1880 and " + (year + 100) + ".");
                        valid = false;
                    }
                } catch (NumberFormatException nfe) {
                    okMessageBox("Year must be a number.");
                    valid = false;
                }
                if (timeText.getText() != "") {
                    try {
                        time = Integer.parseInt(timeText.getText());
                        if (time < 0) {
                            okMessageBox("Running time must be a positive number.");
                            valid = false;
                        }
                    } catch (NumberFormatException nfe) {
                        okMessageBox("Running time must be a number.");
                        valid = false;
                    }
                }
                if (plotText.getText() != "")
                    plot = plotText.getText();
                if (valid) {
                    // inserting
                    AbsType movie = new MovieEntity(0, nameText.getText(), mYear, null, null, time, null, plot);
                    try {
                        pool.execute(DataManager.insertMovieData(MovieDataEnum.MOVIE, movie, false));
                    } catch (InterruptedException e1) {
                        e1.printStackTrace();
                    }
                }
            }
        }
    });
    bar.setSpacing(8);
    insertMovie.setSize((shell.getShell().getSize().x) - 5, (shell.getShell().getSize().y) / 3);
}
