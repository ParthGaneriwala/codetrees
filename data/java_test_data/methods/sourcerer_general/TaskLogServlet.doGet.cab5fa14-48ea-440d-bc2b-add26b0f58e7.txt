@Override
public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    long start = 0;
    long end = -1;
    boolean plainText = false;
    TaskLog.LogName filter = null;
    String taskIdStr = request.getParameter("taskid");
    if (taskIdStr == null) {
        response.sendError(HttpServletResponse.SC_BAD_REQUEST, "Argument taskid is required");
        return;
    }
    TaskAttemptID taskId = TaskAttemptID.forName(taskIdStr);
    String logFilter = request.getParameter("filter");
    if (logFilter != null) {
        try {
            filter = TaskLog.LogName.valueOf(TaskLog.LogName.class, logFilter.toUpperCase());
        } catch (IllegalArgumentException iae) {
            response.sendError(HttpServletResponse.SC_BAD_REQUEST, "Illegal value for filter: " + logFilter);
            return;
        }
    }
    String sLogOff = request.getParameter("start");
    if (sLogOff != null) {
        start = Long.valueOf(sLogOff).longValue();
    }
    String sLogEnd = request.getParameter("end");
    if (sLogEnd != null) {
        end = Long.valueOf(sLogEnd).longValue();
    }
    String sPlainText = request.getParameter("plaintext");
    if (sPlainText != null) {
        plainText = Boolean.valueOf(sPlainText);
    }
    OutputStream out = response.getOutputStream();
    if (!plainText) {
        out.write(("<html>\n" + "<title>Task Logs: '" + taskId + "'</title>\n" + "<body>\n" + "<h1>Task Logs: '" + taskId + "'</h1><br>\n").getBytes());
        if (filter == null) {
            printTaskLog(response, out, taskId, start, end, plainText, TaskLog.LogName.STDOUT);
            printTaskLog(response, out, taskId, start, end, plainText, TaskLog.LogName.STDERR);
            printTaskLog(response, out, taskId, start, end, plainText, TaskLog.LogName.SYSLOG);
            if (haveTaskLog(taskId, TaskLog.LogName.DEBUGOUT)) {
                printTaskLog(response, out, taskId, start, end, plainText, TaskLog.LogName.DEBUGOUT);
            }
            if (haveTaskLog(taskId, TaskLog.LogName.PROFILE)) {
                printTaskLog(response, out, taskId, start, end, plainText, TaskLog.LogName.PROFILE);
            }
        } else {
            printTaskLog(response, out, taskId, start, end, plainText, filter);
        }
        out.write("</body></html>\n".getBytes());
        out.close();
    } else if (filter == null) {
        response.sendError(HttpServletResponse.SC_BAD_REQUEST, "You must supply a value for `filter' (STDOUT, STDERR, or SYSLOG) if you set plainText = true");
    } else {
        printTaskLog(response, out, taskId, start, end, plainText, filter);
    }
}
