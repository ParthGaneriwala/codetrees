public static void ecrire(int largeurImage, int hauteurImage, List<Rectangle> rectanglesLuminance, List<Integer> valeursLuminance, List<Rectangle> rectanglesCrominanceRouge, List<Integer> valeursCrominanceRouge, List<Rectangle> rectanglesCrominanceBleu, List<Integer> valeursCrominanceBleu, List<Integer> valeursRestantesLuminance, List<Integer> valeursRestantesCRouge, List<Integer> valeursRestantesCBleu) throws IOException {
    DataOutputStream ecriture;
    JFileChooser jfc = new JFileChooser("./");
    jfc.setDialogType(JFileChooser.SAVE_DIALOG);
    jfc.removeChoosableFileFilter(jfc.getFileFilter());
    jfc.addChoosableFileFilter(new Filtre());
    jfc.setName("enregistrer une grollure ...");
    jfc.setDialogTitle("creer une grollure ici");
    jfc.setApproveButtonText("creer une grollure ici");
    if (jfc.showOpenDialog(null) != JFileChooser.APPROVE_OPTION) {
        return;
    }
    ecriture = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(jfc.getSelectedFile().getAbsolutePath())));
    // Extension
    ecriture.writeChars(".grol");
    // System.out.println("Extension : "+".grol");
    // System.out.println();
    // Hauteur img
    ecriture.writeShort(hauteurImage);
    System.out.println("Hauteur image : " + hauteurImage);
    // System.out.println();
    // Largeur img
    ecriture.writeShort(largeurImage);
    System.out.println("Largeur image : " + largeurImage);
    // System.out.println();
    // System.out.println("TEST AVEC 6 rect pour Y et 4 pour Cr et Cb");
    // System.out.println();
    /**
     * LUMINANCE
     */
    // Nombre de rectangle pour la Luminance
    ecriture.writeShort(rectanglesLuminance.size());
    System.out.println(rectanglesLuminance.size() + " rectangles en Y");
    for (int i = 0; i < rectanglesLuminance.size(); i++) {
        // Valeur de la luminance
        int valeur = valeursLuminance.get(i);
        ecriture.writeShort(valeur);
        // //System.out.println("Val Y ["+i+"] : "+valeursLuminance.get(i));
        int x = (int) rectanglesLuminance.get(i).getX();
        int y = (int) rectanglesLuminance.get(i).getY();
        int largeur = (int) rectanglesLuminance.get(i).getWidth();
        int hauteur = (int) rectanglesLuminance.get(i).getHeight();
        // //System.out.print("Rect Y ["+i+"] =");
        ecriture.writeShort(x);
        // //System.out.print(" X = "+x+" ");
        ecriture.writeShort(y);
        // //System.out.print(" Y = "+y+" ");
        ecriture.writeShort(largeur);
        // //System.out.print(" larg = "+largeur+" ");
        ecriture.writeShort(hauteur);
    // //System.out.print(" haut = "+hauteur+" ");
    // //System.out.println();
    }
    // //System.out.println();
    // Nombre de px restant pour Y
    /**
     * *****************************************************
     */
    /**
     * *****************************************************
     */
    // //System.out.println();
    ecriture.writeShort(valeursRestantesLuminance.size());
    System.out.println(valeursRestantesLuminance.size() + " pixels complementaires pour Y");
    // Pix restant
    for (int i = 0; i < valeursRestantesLuminance.size(); i++) {
        // Valeur de la luminance
        int valeur = valeursRestantesLuminance.get(i);
        ecriture.writeShort(valeur);
    // //System.out.println("Px (Y) ["+i+"] : "+ecriture);
    }
    // //System.out.println();
    // //System.out.println();
    /**
     * *****************************************************
     */
    /**
     * *****************************************************
     */
    /**
     * CHROMINANCE R
     */
    // Nombre de rectangle pour la Chrominance de Rouge
    ecriture.writeShort(rectanglesCrominanceRouge.size());
    System.out.println(rectanglesCrominanceRouge.size() + " rectangles en Cr");
    for (int i = 0; i < rectanglesCrominanceRouge.size(); i++) {
        // Valeur de la luminance
        int valeur = valeursCrominanceRouge.get(i);
        ecriture.writeShort(valeur);
        // //System.out.println("Val Cr ["+i+"] : "+valeur);
        int x = (int) rectanglesCrominanceRouge.get(i).getX();
        int y = (int) rectanglesCrominanceRouge.get(i).getY();
        int largeur = (int) rectanglesCrominanceRouge.get(i).getWidth();
        int hauteur = (int) rectanglesCrominanceRouge.get(i).getHeight();
        // //System.out.print("Rect Cr ["+i+"] =");
        ecriture.writeShort(x);
        // //System.out.print(" X = "+x+" ");
        ecriture.writeShort(y);
        // //System.out.print(" Y = "+y+" ");
        ecriture.writeShort(largeur);
        // //System.out.print(" larg = "+largeur+" ");
        ecriture.writeShort(hauteur);
    // //System.out.print(" haut = "+hauteur+" ");
    // //System.out.println();
    // //System.out.println();
    }
    // Nombre de px restant pour Cr
    /**
     * *****************************************************
     */
    /**
     * *****************************************************
     */
    // //System.out.println();
    ecriture.writeShort(valeursRestantesCRouge.size());
    System.out.println(valeursRestantesCRouge.size() + " pixels complementaires pour Cr");
    // Pix restant
    for (int i = 0; i < valeursRestantesCRouge.size(); i++) {
        // Valeur de la luminance
        int valeur = valeursRestantesCRouge.get(i);
        ecriture.writeShort(valeur);
    // //System.out.println("Px (Cr) ["+i+"] : "+ecriture);
    }
    // //System.out.println();
    // //System.out.println();
    /**
     * *****************************************************
     */
    /**
     * *****************************************************
     */
    /**
     * CHROMINANCE B
     */
    // Nombre de rectangle pour la Chrominance de Bleu
    ecriture.writeShort(rectanglesCrominanceBleu.size());
    System.out.println(rectanglesCrominanceBleu.size() + " rectangles en Cb");
    for (int i = 0; i < rectanglesCrominanceBleu.size(); i++) {
        // Valeur de la luminance
        int valeur = valeursCrominanceBleu.get(i);
        ecriture.writeShort(valeur);
        // //System.out.println("Val Cb ["+i+"] : "+valeur);
        int x = (int) rectanglesCrominanceBleu.get(i).getX();
        int y = (int) rectanglesCrominanceBleu.get(i).getY();
        int largeur = (int) rectanglesCrominanceBleu.get(i).getWidth();
        int hauteur = (int) rectanglesCrominanceBleu.get(i).getHeight();
        // //System.out.print("Rect Cb ["+i+"] =");
        ecriture.writeShort(x);
        // //System.out.print(" X = "+x+" ");
        ecriture.writeShort(y);
        // //System.out.print(" Y = "+y+" ");
        ecriture.writeShort(largeur);
        // //System.out.print(" larg = "+largeur+" ");
        ecriture.writeShort(hauteur);
    // //System.out.print(" haut = "+hauteur+" ");
    // //System.out.println();
    // //System.out.println();
    }
    /**
     * *****************************************************
     */
    /**
     * *****************************************************
     */
    // Nombre de px restant pour Cb
    // //System.out.println();
    ecriture.writeShort(valeursRestantesCBleu.size());
    System.out.println(valeursRestantesCBleu.size() + " pixels complementaires pour Cb");
    // Pix restant
    for (int i = 0; i < valeursRestantesCBleu.size(); i++) {
        // Valeur de la luminance
        int valeur = valeursRestantesCBleu.get(i);
        ecriture.writeShort(valeur);
    // //System.out.println("Px (Cb) ["+i+"] : "+ecriture);
    }
    // //System.out.println();
    // //System.out.println();
    /**
     * *****************************************************
     */
    /**
     * *****************************************************
     */
    // FERMER LES FLUX
    // //System.out.println();
    System.out.println("Taille fic binaire :" + ecriture.size());
    ecriture.close();
}
