private static void parsePageDirective(PageDefinition pgdef, ProcessingInstruction pi, Map params) throws Exception {
    for (Iterator it = pi.parseData().entrySet().iterator(); it.hasNext(); ) {
        final Map.Entry me = (Map.Entry) it.next();
        final String nm = (String) me.getKey();
        final String val = (String) me.getValue();
        if ("language".equals(nm)) {
            if (!(pi.getParent() instanceof Document))
                log.warning("Ignored language attribute since the page directive is not at the top level, " + pi.getLocator());
        } else if ("title".equals(nm)) {
            pgdef.setTitle(val);
        } else if ("style".equals(nm)) {
            pgdef.setStyle(val);
        } else if ("id".equals(nm)) {
            pgdef.setId(val);
        } else if ("widgetClass".equals(nm)) {
            pgdef.setWidgetClass(val);
        } else if ("zscriptLanguage".equals(nm) || "zscript-language".equals(nm)) {
            // backward compatible with 2.4.x
            noELnorEmpty("zscriptLanguage", val, pi);
            pgdef.setZScriptLanguage(val);
        } else if ("cacheable".equals(nm)) {
            noELnorEmpty("cacheable", val, pi);
            pgdef.setCacheable(Boolean.valueOf("true".equals(val)));
        } else if ("automaticTimeout".equals(nm)) {
            noELnorEmpty("automaticTimeout", val, pi);
            pgdef.setAutomaticTimeout(Boolean.valueOf("true".equals(val)));
        } else if ("contentType".equals(nm)) {
            noEmpty("contentType", val, pi);
            pgdef.setContentType(val);
        } else if ("docType".equals(nm)) {
            pgdef.setDocType(isEmpty(val) ? "" : "<!DOCTYPE " + val + '>');
        } else if ("xml".equals(nm)) {
            noEmpty("xml", val, pi);
            pgdef.setFirstLine("<?xml " + val + "?>");
        } else if ("complete".equals(nm)) {
            pgdef.setComplete("true".equals(val));
        } else {
            log.warning("Ignored unknown attribute: " + nm + ", " + pi.getLocator());
        }
    }
}
