// ----------------------------------------------------
// Acoes
@Override
public String execute() throws Exception {
    clearErrorsAndMessages();
    if (adicionar != null) {
        adicionar = null;
        if (matProfessor == null || nomeProfessor == null || emailProfessor == null || matProfessor.isEmpty() || nomeProfessor.isEmpty() || emailProfessor.isEmpty()) {
            addActionMessage("Todos os dados s�o obrigat�rios.");
            return "view";
        }
        if (matProfessor.length() != 6 || professorFacade.consultarMatricula(matProfessor) != null) {
            addActionMessage("A matr�cula est� errada ou professor j� est� matriculado");
            return "view";
        }
        Professor professor = new Professor(matProfessor, nomeProfessor, emailProfessor);
        professor.setSenha(AplicacaoAction.encripta(matProfessor));
        professor.setAdministrador(admProfessor);
        professorFacade.salvar(professor);
        professors = professorFacade.consultarTodos();
        addActionMessage("O professor foi adicionado corretamente.");
        return "view";
    }
    if (consultar != null) {
        consultar = null;
        if (idProfessor == null) {
            addActionMessage("Um professor deve ser selecionado.");
            return "view";
        }
        Professor c = professorFacade.consultar(idProfessor);
        if (c != null) {
            idProfessor = c.getId();
            matProfessor = c.getMatricula();
            nomeProfessor = c.getNome();
            emailProfessor = c.getEmail();
            admProfessor = c.getAdministrador();
        }
        return "view";
    }
    if (editar != null) {
        editar = null;
        Professor c = professorFacade.consultar(idProfessor);
        c.setNome(nomeProfessor);
        c.setMatricula(matProfessor);
        c.setSenha(AplicacaoAction.encripta(matProfessor));
        c.setEmail(emailProfessor);
        c.setId(idProfessor);
        c.setAdministrador(admProfessor);
        professorFacade.alterar(c);
        professors = professorFacade.consultarTodos();
        addActionMessage("O professor foi editado corretamente.");
        return "view";
    }
    if (remover != null) {
        remover = null;
        Professor c = professorFacade.consultar(idProfessor);
        if (c != null) {
            professorFacade.remover(c);
        }
        professors = professorFacade.consultarTodos();
        addActionMessage("O professor foi removido corretamente.");
        return "view";
    }
    if (menu != null) {
        menu = null;
        return "menu";
    }
    return "menu";
}
