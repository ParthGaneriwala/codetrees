@Test
@DirtiesContext
public void testUniqueSurfaceRect() {
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    DbTerrainSetting dbTerrainSetting = setupMinimalTerrain();
    Assert.assertEquals(0, getTerrainTileCount(dbTerrainSetting));
    Assert.assertEquals(1, getSurfaceRectCount(dbTerrainSetting));
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    DbSurfaceImage dbSurfaceImage = createDbSurfaceImage(SurfaceType.LAND);
    Collection<TerrainImagePosition> terrainImagePositions = new ArrayList<TerrainImagePosition>();
    Collection<SurfaceRect> surfaceRects = new ArrayList<SurfaceRect>();
    surfaceRects.add(new SurfaceRect(new Rectangle(0, 0, 100, 100), dbSurfaceImage.getId()));
    surfaceRects.add(new SurfaceRect(new Rectangle(0, 0, 100, 100), dbSurfaceImage.getId()));
    terrainService.saveTerrain(terrainImagePositions, surfaceRects, dbTerrainSetting.getId());
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    Assert.assertEquals(0, getTerrainTileCount(dbTerrainSetting));
    Assert.assertEquals(1, getSurfaceRectCount(dbTerrainSetting));
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
