public void testObjectArray() {
    BeanRegistry.registerType(SimpleIndexedPojo.class);
    SimpleIndexedPojo p = new SimpleIndexedPojo();
    p.setObjectArray(new Object[] { "a", null, new Long(3) });
    SimpleIndexedPojo ep = BeanEnhancer.addPropertyChangeSupport(p);
    assertNotNull(ep.getObjectArray());
    assertEquals("a", ep.getObjectArray()[0]);
    assertNull(ep.getObjectArray()[1]);
    assertEquals(new Long(3), ep.getObjectArray()[2]);
    PropertyChangeListenerSupport pcls = (PropertyChangeListenerSupport) ep;
    PropertyChangeListener pcl1 = new PropertyChangeListener() {

        public void propertyChange(PropertyChangeEvent evt) {
            assertTrue(evt instanceof IndexedPropertyChangeEvent);
            IndexedPropertyChangeEvent ievt = (IndexedPropertyChangeEvent) evt;
            assertEquals("objectArray", ievt.getPropertyName());
            assertEquals(1, ievt.getIndex());
            assertNull(ievt.getOldValue());
            assertTrue(ievt.getNewValue() instanceof java.util.Date);
        }
    };
    pcls.addPropertyChangeListener(pcl1);
    final java.util.Date today = new java.util.Date();
    ep.setObjectArray(1, today);
    assertNotNull(ep.getObjectArray());
    assertEquals("a", ep.getObjectArray()[0]);
    assertTrue(ep.getObjectArray()[1] instanceof java.util.Date);
    assertEquals(new Long(3), ep.getObjectArray()[2]);
    assertNotNull(p.getObjectArray());
    assertEquals("a", p.getObjectArray()[0]);
    assertTrue(p.getObjectArray()[1] instanceof java.util.Date);
    assertEquals(new Long(3), p.getObjectArray()[2]);
    pcls.removePropertyChangeListener(pcl1);
    PropertyChangeListener pcl2 = new PropertyChangeListener() {

        public void propertyChange(PropertyChangeEvent evt) {
            assertTrue(evt instanceof PropertyChangeEvent);
            assertEquals("objectArray", evt.getPropertyName());
            assertTrue(Arrays.equals(new Object[] { "a", today, new Long(3) }, (Object[]) evt.getOldValue()));
            assertTrue(Arrays.equals(new Object[] { new Long(3), "a", today }, (Object[]) evt.getNewValue()));
        }
    };
    pcls.addPropertyChangeListener("objectArray", pcl2);
    ep.setObjectArray(new Object[] { new Long(3), "a", today });
}
