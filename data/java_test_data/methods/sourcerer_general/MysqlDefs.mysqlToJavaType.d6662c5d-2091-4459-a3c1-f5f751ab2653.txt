static int mysqlToJavaType(int mysqlType) {
    int jdbcType;
    switch(mysqlType) {
        case MysqlDefs.FIELD_TYPE_NEW_DECIMAL:
        case MysqlDefs.FIELD_TYPE_DECIMAL:
            jdbcType = Types.DECIMAL;
            break;
        case MysqlDefs.FIELD_TYPE_TINY:
            jdbcType = Types.TINYINT;
            break;
        case MysqlDefs.FIELD_TYPE_SHORT:
            jdbcType = Types.SMALLINT;
            break;
        case MysqlDefs.FIELD_TYPE_LONG:
            jdbcType = Types.INTEGER;
            break;
        case MysqlDefs.FIELD_TYPE_FLOAT:
            jdbcType = Types.REAL;
            break;
        case MysqlDefs.FIELD_TYPE_DOUBLE:
            jdbcType = Types.DOUBLE;
            break;
        case MysqlDefs.FIELD_TYPE_NULL:
            jdbcType = Types.NULL;
            break;
        case MysqlDefs.FIELD_TYPE_TIMESTAMP:
            jdbcType = Types.TIMESTAMP;
            break;
        case MysqlDefs.FIELD_TYPE_LONGLONG:
            jdbcType = Types.BIGINT;
            break;
        case MysqlDefs.FIELD_TYPE_INT24:
            jdbcType = Types.INTEGER;
            break;
        case MysqlDefs.FIELD_TYPE_DATE:
            jdbcType = Types.DATE;
            break;
        case MysqlDefs.FIELD_TYPE_TIME:
            jdbcType = Types.TIME;
            break;
        case MysqlDefs.FIELD_TYPE_DATETIME:
            jdbcType = Types.TIMESTAMP;
            break;
        case MysqlDefs.FIELD_TYPE_YEAR:
            jdbcType = Types.DATE;
            break;
        case MysqlDefs.FIELD_TYPE_NEWDATE:
            jdbcType = Types.DATE;
            break;
        case MysqlDefs.FIELD_TYPE_ENUM:
            jdbcType = Types.CHAR;
            break;
        case MysqlDefs.FIELD_TYPE_SET:
            jdbcType = Types.CHAR;
            break;
        case MysqlDefs.FIELD_TYPE_TINY_BLOB:
            jdbcType = Types.VARBINARY;
            break;
        case MysqlDefs.FIELD_TYPE_MEDIUM_BLOB:
            jdbcType = Types.LONGVARBINARY;
            break;
        case MysqlDefs.FIELD_TYPE_LONG_BLOB:
            jdbcType = Types.LONGVARBINARY;
            break;
        case MysqlDefs.FIELD_TYPE_BLOB:
            jdbcType = Types.LONGVARBINARY;
            break;
        case MysqlDefs.FIELD_TYPE_VAR_STRING:
        case MysqlDefs.FIELD_TYPE_VARCHAR:
            jdbcType = Types.VARCHAR;
            break;
        case MysqlDefs.FIELD_TYPE_STRING:
            jdbcType = Types.CHAR;
            break;
        case MysqlDefs.FIELD_TYPE_GEOMETRY:
            jdbcType = Types.BINARY;
            break;
        case MysqlDefs.FIELD_TYPE_BIT:
            jdbcType = Types.BIT;
            break;
        default:
            jdbcType = Types.VARCHAR;
    }
    return jdbcType;
}
