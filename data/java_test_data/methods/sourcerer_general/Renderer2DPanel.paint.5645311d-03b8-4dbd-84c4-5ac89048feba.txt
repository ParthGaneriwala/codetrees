public void paint(Graphics g) {
    super.paint(g);
    // TODO paint Map...
    Graphics2D g2 = (Graphics2D) g;
    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2.drawString(getRealWorldPoint(new Point2D.Double()).toString(), 10, 10);
    AffineTransform normalTransform = g2.getTransform();
    String statusText = "<html>";
    Point2D pt2 = getScreenPosition(new Point3d(0, 0, 0));
    g2.translate(pt2.getX(), pt2.getY());
    g2.scale(3.625, 3.625);
    g2.drawImage(otaImage, -1016, -712, null);
    for (VehicleState vs : state.getVehicleStates()) {
        g2.setTransform(new AffineTransform());
        Point2D pt = getScreenPosition(vs.getPoint());
        if (vs.getDestination() != null) {
            Point2D target = getScreenPosition(vs.getDestination());
            // g2.setColor(new Color(255,0,0));
            g2.setStroke(new BasicStroke(2));
            g2.setColor(new Color(255, 0, 0, 75));
            g2.draw(new Line2D.Double(pt.getX(), pt.getY(), target.getX(), target.getY()));
            g2.setColor(new Color(255, 0, 0));
            g2.draw(new Ellipse2D.Double(target.getX() - 10, target.getY() - 10, 20, 20));
            g2.setColor(new Color(255, 0, 0, 75));
            g2.fill(new Ellipse2D.Double(target.getX() - 10, target.getY() - 10, 20, 20));
        }
        g2.translate(pt.getX(), pt.getY());
        g2.setColor(Color.white);
        g2.drawString(vs.getId(), 10, 10);
        g2.rotate(-vs.getYaw() + Math.PI / 2);
        Image img;
        if (vehImages.containsKey(vs.getModel()))
            img = vehImages.get(vs.getModel());
        else
            img = vehImages.get("default");
        int width = img.getWidth(null);
        int height = img.getWidth(null);
        // g2.scale(0.1, 0.1);
        g2.drawImage(img, -width / 2, -height / 2, null);
        statusText = statusText + "<font color='red'>" + vs.getId() + "</font> (" + ((int) vs.getPoint().x) + ", " + ((int) vs.getPoint().y) + ") f=" + ((int) vs.getFuel()) + ", yaw=" + (int) Math.toDegrees(vs.getYaw()) + "<br>";
    }
    g2.setTransform(new AffineTransform());
    if (pt != null)
        statusText = statusText + "Pointer: (" + (int) pt.x + ", " + (int) pt.y + ")";
    g2.translate(getWidth() - statusLabel.getPreferredSize().width - 10, getHeight() - statusLabel.getPreferredSize().height - 10);
    statusLabel.setText(statusText);
    statusLabel.setBounds(0, 0, statusLabel.getPreferredSize().width, statusLabel.getPreferredSize().height);
    statusLabel.paint(g2);
    g2.setTransform(new AffineTransform());
    Point2D pt = getScreenPosition(new Point3d(0, 0, 0));
    g2.translate(pt.getX(), pt.getY());
    g2.drawLine(-10, 0, 10, 0);
    g2.drawLine(0, 10, 0, -10);
}
