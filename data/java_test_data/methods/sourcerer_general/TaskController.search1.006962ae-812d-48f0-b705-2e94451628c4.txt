@RequestMapping("/search1.do")
public ModelAndView search1(HttpServletRequest request, HttpServletResponse response) {
    String q = request.getParameter("q");
    String gse = request.getParameter("gse");
    String gpl = request.getParameter("gpl");
    String oper = request.getParameter("oper");
    int operType = 0;
    if (oper.equals("AND"))
        operType = GeneDao.SEARCH_OPER_AND;
    else if (oper.equals("OR"))
        operType = GeneDao.SEARCH_OPER_OR;
    // System.out.println("q : "+q);
    // System.out.println("gse : "+gse);
    // System.out.println("gpl : "+gpl);
    List<Gse> gseList = null;
    List<String> gpl2gseList = null;
    String[] keywordParts = null;
    if (q != null) {
        q = q.replace("_/", " ");
        keywordParts = q.split(" ");
    }
    try {
        if (q != null && gpl != null) {
            gseList = geneService.readGse(keywordParts, GeneDao.ONLY_SUMMARY, operType);
            gpl2gseList = geneService.readGpl2gse(gpl);
        } else if (q != null) {
            gseList = geneService.readGse(keywordParts, GeneDao.ONLY_SUMMARY, operType);
        } else if (gse != null) {
            gseList = geneService.readGseById(gse);
        }
        if (gseList != null && q != null) {
            for (int count = 0; count < gseList.size(); count++) {
                Gse tmpGse = gseList.get(count);
                if (gpl2gseList.indexOf(tmpGse.getId()) < 0) {
                    gseList.remove(count);
                    count--;
                } else {
                    // Highlight Keywords
                    if (keywordParts != null) {
                        for (int kwCount = 0; kwCount < keywordParts.length; kwCount++) {
                            tmpGse.setTitle(tmpGse.getTitle().replace(keywordParts[kwCount], "<b>" + keywordParts[kwCount] + "</b>"));
                            tmpGse.setSummary(tmpGse.getSummary().replace(keywordParts[kwCount], "<b>" + keywordParts[kwCount] + "</b>"));
                        }
                    }
                    int length = 50;
                    // int curIndex = 0;
                    String result = "";
                    for (int curIndex = 0; curIndex < tmpGse.getTitle().length(); curIndex += length) {
                        String sub = "";
                        if (curIndex + length < tmpGse.getTitle().length())
                            sub = tmpGse.getTitle().substring(curIndex, curIndex + length);
                        else
                            sub = tmpGse.getTitle().substring(curIndex);
                        result += sub + "";
                    }
                    tmpGse.setTitle(result);
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    ModelAndView model = new ModelAndView("search_1");
    if (gseList != null) {
        model.addObject("gseList", gseList);
        model.addObject("totalSize", gseList.size());
        model.addObject("gpl", gpl);
    }
    return model;
}
