/**
 * @author alberto
 * @param order = campo para ordenar , inic = valor onde inicia a pagina ,limit = limite de registrs por parginas
 */
public Vector<Cliente> getListClinte(int valueBusca, String buscar, int order, int inic, int quant) throws ClassNotFoundException, SQLException {
    String condicao = "";
    if (valueBusca != 0 && buscar != null) {
        if (valueBusca == ClienteDAO.BUSCA_NOME) {
            condicao = " and pe.nome  like '" + buscar + "%'";
        }
    }
    String format = condicao + " order by  pe.nome   limit 0, 10";
    switch(order) {
        case 1:
            format = condicao + " order by  pe.nome  limit " + inic + ", " + quant;
            break;
        case 4:
            format = condicao + " order by  pe.data_cadastro  limit " + inic + " , " + quant;
            break;
        case 3:
            format = condicao + " order by  cli.limite_credito  limit " + inic + " , " + quant;
            break;
        case // / falta emplemetar
        5:
            format = condicao + " order by  cli.ult_venda  limit " + inic + ", " + quant;
            break;
        default:
            // / falta emplemetar
            format = "order by  pe.nome   limit " + inic + " , " + quant;
            break;
    }
    Statement statement = this.banc.getConexao().createStatement();
    ResultSet result = statement.executeQuery("select cli.idcliente as id,cli.profissao as profiss," + "cli.idpessoa as idpessoa,cli.nome_pai as pai,cli.nome_mae as mae,cli.conjuge as conjuge," + "cli.nascido_em as nasc_em,cli.limite_credito as credito,cli.natural_de as natur,cli.ult_venda as ult_venda," + "pe.nome as nome,pe.telefone as tel,pe.celular as cel,pe.logradouro as endereco,pe.bairro as bairro," + "pe.data_cadastro as cadast_em from tb_cliente cli,tb_pessoas pe where pe.idpessoa=cli.idpessoa " + format);
    Vector<Cliente> clientes = new Vector<Cliente>();
    while (result.next()) {
        Cliente clinte = new Cliente();
        clinte.setId(result.getInt("idpessoa"));
        clinte.setId(result.getInt("id"));
        clinte.setProfissao(result.getString("profiss"));
        clinte.setNascido(result.getDate("nasc_em"));
        clinte.setUltVenda(result.getTimestamp("ult_venda"));
        clinte.setNome(result.getString("nome"));
        clinte.setTelefone(result.getString("tel"));
        clinte.setLimitCred(result.getDouble("credito"));
        clientes.add(clinte);
    }
    statement.close();
    return clientes;
}
