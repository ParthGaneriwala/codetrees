public HashMap createContextMap(Map requestMap, Map parameterMap, Map sessionMap, Map applicationMap, PortletRequest request, PortletResponse response, PortletConfig portletConfig, Integer phase) throws IOException {
    // TODO Must put http request/response objects into map for use with
    // ServletActionContext
    HttpServletResponse dummyResponse = new PortletServletResponse(response);
    HttpServletRequest dummyRequest = new PortletServletRequest(request, getPortletContext());
    ServletContext dummyServletContext = new PortletServletContext(getPortletContext());
    if (EVENT_PHASE.equals(phase)) {
        dummyRequest = dispatcherUtils.wrapRequest(dummyRequest, dummyServletContext);
    }
    HashMap<String, Object> extraContext = new HashMap<String, Object>();
    // The dummy servlet objects. Eases reuse of existing interceptors that uses the servlet objects.
    extraContext.put(StrutsStatics.HTTP_REQUEST, dummyRequest);
    extraContext.put(StrutsStatics.HTTP_RESPONSE, dummyResponse);
    extraContext.put(StrutsStatics.SERVLET_CONTEXT, dummyServletContext);
    // End dummy servlet objects
    extraContext.put(ActionContext.PARAMETERS, parameterMap);
    extraContext.put(ActionContext.SESSION, sessionMap);
    extraContext.put(ActionContext.APPLICATION, applicationMap);
    String defaultLocale = dispatcherUtils.getContainer().getInstance(String.class, StrutsConstants.STRUTS_LOCALE);
    Locale locale = null;
    if (defaultLocale != null) {
        locale = LocalizedTextUtil.localeFromString(defaultLocale, request.getLocale());
    } else {
        locale = request.getLocale();
    }
    extraContext.put(ActionContext.LOCALE, locale);
    extraContext.put(StrutsStatics.STRUTS_PORTLET_CONTEXT, getPortletContext());
    extraContext.put(REQUEST, request);
    extraContext.put(RESPONSE, response);
    extraContext.put(PORTLET_CONFIG, portletConfig);
    extraContext.put(PORTLET_NAMESPACE, portletNamespace);
    extraContext.put(DEFAULT_ACTION_FOR_MODE, actionMap.get(request.getPortletMode()));
    // helpers to get access to request/session/application scope
    extraContext.put("request", requestMap);
    extraContext.put("session", sessionMap);
    extraContext.put("application", applicationMap);
    extraContext.put("parameters", parameterMap);
    extraContext.put(MODE_NAMESPACE_MAP, modeMap);
    extraContext.put(PHASE, phase);
    AttributeMap attrMap = new AttributeMap(extraContext);
    extraContext.put("attr", attrMap);
    return extraContext;
}
