public void runTest() {
    Model m = ModelFactory.createDefaultModel();
    Resource nil = m.getResource(RDF.nil.getURI());
    RDFList list0 = (RDFList) nil.as(RDFList.class);
    RDFList list1 = (RDFList) nil.as(RDFList.class);
    Resource r0 = m.createResource(NS + "x");
    Resource r1 = m.createResource(NS + "y");
    Resource r2 = m.createResource(NS + "z");
    for (int i = 0; i < 10; i++) {
        list0 = list0.cons(r0);
        list1 = list1.cons(r1);
    }
    // delete the elements of list0 one at a time
    while (!list0.isEmpty()) {
        list0 = list0.removeHead();
        checkValid("removeTest0", list0, true);
    }
    // delete all of list1 in one go
    list1.removeList();
    // model should now be empty
    assertEquals("Model should be empty after deleting two lists", 0, m.size());
    // selective remove
    RDFList list2 = ((RDFList) nil.as(RDFList.class)).cons(r2).cons(r1).cons(r0);
    assertTrue("list should contain x ", list2.contains(r0));
    assertTrue("list should contain y ", list2.contains(r1));
    assertTrue("list should contain z ", list2.contains(r2));
    list2 = list2.remove(r1);
    assertTrue("list should contain x ", list2.contains(r0));
    assertTrue("list should contain y ", !list2.contains(r1));
    assertTrue("list should contain z ", list2.contains(r2));
    list2 = list2.remove(r0);
    assertTrue("list should contain x ", !list2.contains(r0));
    assertTrue("list should contain y ", !list2.contains(r1));
    assertTrue("list should contain z ", list2.contains(r2));
    list2 = list2.remove(r2);
    assertTrue("list should contain x ", !list2.contains(r0));
    assertTrue("list should contain y ", !list2.contains(r1));
    assertTrue("list should contain z ", !list2.contains(r2));
    assertTrue("list should be empty", list2.isEmpty());
}
