public void doView(RenderRequest request, RenderResponse response) throws PortletException, IOException {
    // Manage the form bean and make available to the request (do this first)
    PortalUtils.processFormBean(request);
    // Set global preferences
    request.setAttribute(TITLE, request.getPreferences().getValue(PREF_TITLE, null));
    request.setAttribute(INTRODUCTION_MESSAGE, request.getPreferences().getValue(PREF_INTRODUCTION_MESSAGE, null));
    // Add custom labels to the request as "labelMap"
    PortalUtils.populateDisplayLabels(request);
    // Retrieve objects from the page and populate in the request automatically
    Project project = PortalUtils.findProject(request);
    User user = PortalUtils.getUser(request);
    // Determine the view to use...
    String viewType = request.getParameter(VIEW_TYPE);
    String returnView = null;
    if (CLOSE.equals(viewType)) {
        // The panel is being closed, so the listing view will be refreshed
        returnView = CLOSE_PAGE;
    } else if (SAVE_SUCCESS.equals(viewType)) {
        // The form was successfully saved
        request.setAttribute(SUCCESS_MESSAGE, request.getPreferences().getValue(PREF_SUCCESS_MESSAGE, null));
        returnView = MESSAGE_PAGE;
    } else if (!user.isLoggedIn()) {
        // If user is not logged in, show error
        returnView = MESSAGE_PAGE;
        request.setAttribute(ERROR_MESSAGE, "You need to be logged in to perform this action");
    } else if (project == null || project.getId() == -1) {
        // If project is invalid, show error
        request.setAttribute(ERROR_MESSAGE, "No project was specified");
        returnView = MESSAGE_PAGE;
    } else if (project.getOwner() > -1) {
        // If project is already claimed, show error
        request.setAttribute(ERROR_MESSAGE, "This listing has a claim already pending");
        returnView = MESSAGE_PAGE;
    }
    // If there is no return view, then display the form by default
    if (returnView == null) {
        // Check the request for the record
        ProjectFormBean claimForm = (ProjectFormBean) PortalUtils.getFormBean(request, CLAIM, ProjectFormBean.class);
        // Prepare the claim project form
        claimForm.setProjectId(project.getId());
        claimForm.setUniqueId(project.getUniqueId());
        claimForm.setProjectTitle(project.getTitle());
        claimForm.setFirstName(user.getFirstName());
        claimForm.setLastName(user.getLastName());
        if (claimForm.getEmail() == null) {
            claimForm.setEmail(user.getEmail());
        }
        request.setAttribute(CLAIM, claimForm);
        returnView = FORM_PAGE;
    }
    // Show the view
    PortletContext context = getPortletContext();
    PortletRequestDispatcher requestDispatcher = context.getRequestDispatcher(returnView);
    requestDispatcher.include(request, response);
}
