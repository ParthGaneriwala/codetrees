public static final String format(long l, int type) {
    if (type == FILE_FORMAT) {
        String s = String.valueOf(l);
        int digits = 0;
        while (s.length() > 3) {
            s = s.substring(0, s.length() - 3);
            digits++;
        }
        StringBuffer buffer = new StringBuffer();
        buffer.append(s);
        if ((s.length() == 1) && (String.valueOf(l).length() >= 3)) {
            buffer.append(".");
            buffer.append(String.valueOf(l).substring(1, 3));
        } else if ((s.length() == 2) && (String.valueOf(l).length() >= 3)) {
            buffer.append(".");
            buffer.append(String.valueOf(l).substring(2, 3));
        }
        if (digits == 0) {
            buffer.append(" B");
        } else if (digits == 1) {
            buffer.append(" KB");
        } else if (digits == 2) {
            buffer.append(" MB");
        } else if (digits == 3) {
            buffer.append(" GB");
        } else if (digits == 4) {
            buffer.append(" TB");
        }
        return buffer.toString();
    } else if (type == NUMBER_FORMAT) {
        String s = String.valueOf(l);
        int i = Integer.parseInt(s.charAt(s.length() - 1) + "");
        String end = "th";
        if ((l >= 10) && (l <= 19))
            end = "th";
        else if (i == 1)
            end = "st";
        else if (i == 2)
            end = "nd";
        else if (i == 3)
            end = "rd";
        return l + end;
    } else if (type == TIME_FORMAT) {
        String ending;
        float f = l;
        if (f > 24 * 60 * 60 * 1000) {
            f /= 24 * 60 * 1000;
            ending = "d";
        } else if (f > 60 * 60 * 1000) {
            f /= 60 * 60 * 1000;
            ending = "h";
        } else if (f > 60 * 1000) {
            f /= 60 * 1000;
            ending = "m";
        } else if (f > 1000) {
            f /= 1000;
            ending = "s";
        } else {
            ending = "ms";
        }
        NumberFormat format = NumberFormat.getInstance();
        format.setMaximumFractionDigits(2);
        return format.format(f) + ending;
    }
    return null;
}
