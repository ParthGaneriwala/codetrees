@RequestMapping(value = "/allforms", method = RequestMethod.GET)
public ModelAndView getAllForms() {
    UserService userService = UserServiceFactory.getUserService();
    User currentUser = userService.getCurrentUser();
    if (currentUser == null) {
        ModelAndView mv = new ModelAndView("allforms");
        mv.addObject("error", true);
        mv.addObject("errorMessage", "You are not logged in");
        mv.addObject("isUserAdmin", false);
        return mv;
    }
    if (userService.isUserAdmin() == false) {
        ModelAndView model = new ModelAndView("home");
        return model;
    }
    ModelAndView mv = new ModelAndView("allforms");
    mv.addObject("error", false);
    // Query the datastore
    DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();
    Query q = new Query("DataCollectionInfo");
    // Build the list of results
    PreparedQuery pq = datastore.prepare(q);
    List<MyFormResult> forms = new ArrayList<MyFormResult>();
    for (Entity result : pq.asIterable()) {
        MyFormResult r = new MyFormResult();
        r.name = result.getProperty("name").toString();
        r.owner = result.getProperty("user").toString();
        Key k = result.getKey();
        r.id = KeyFactory.keyToString(k);
        forms.add(r);
    }
    mv.addObject("forms", forms);
    mv.addObject("isUserAdmin", userService.isUserAdmin());
    return mv;
}
