public void sqrt() {
    /*
         * Adapted from:
         * Cephes Math Library Release 2.2:  December, 1990
         * Copyright 1984, 1990 by Stephen L. Moshier
         *
         * sqrtl.c
         *
         * long double sqrtl(long double x);
         */
    if ((this.exponent < 0 && this.mantissa != 0))
        return;
    if ((this.exponent == 0 && this.mantissa == 0)) {
        sign = 0;
        return;
    }
    if ((this.sign != 0)) {
        makeNan();
        return;
    }
    if ((this.exponent < 0 && this.mantissa == 0))
        return;
    // Save X
    {
        recipTmp.mantissa = this.mantissa;
        recipTmp.exponent = this.exponent;
        recipTmp.sign = this.sign;
    }
    ;
    // normalize to range [0.5, 1)
    int e = exponent - 0x3fffffff;
    exponent = 0x3fffffff;
    // quadratic approximation, relative error 6.45e-4
    {
        recipTmp2.mantissa = this.mantissa;
        recipTmp2.exponent = this.exponent;
        recipTmp2.sign = this.sign;
    }
    ;
    // -0.2044058315473477195990
    {
        sqrtTmp.sign = (byte) 1;
        sqrtTmp.exponent = 0x3ffffffd;
        sqrtTmp.mantissa = 0x68a7e193370ff21bL;
    }
    // -0.2044058315473477195990
    ;
    mul(sqrtTmp);
    // 0.89019407351052789754347
    {
        sqrtTmp.sign = (byte) 0;
        sqrtTmp.exponent = 0x3fffffff;
        sqrtTmp.mantissa = 0x71f1e120690deae8L;
    }
    // 0.89019407351052789754347
    ;
    add(sqrtTmp);
    mul(recipTmp2);
    // 0.31356706742295303132394
    {
        sqrtTmp.sign = (byte) 0;
        sqrtTmp.exponent = 0x3ffffffe;
        sqrtTmp.mantissa = 0x5045ee6baf28677aL;
    }
    // 0.31356706742295303132394
    ;
    add(sqrtTmp);
    // adjust for odd powers of 2
    if ((e & 1) != 0)
        mul(SQRT2);
    // calculate exponent
    exponent += e >> 1;
    // Yn+1 = (Yn + X/Yn)/2
    for (int i = 0; i < 3; i++) {
        {
            recipTmp2.mantissa = recipTmp.mantissa;
            recipTmp2.exponent = recipTmp.exponent;
            recipTmp2.sign = recipTmp.sign;
        }
        ;
        recipTmp2.div(this);
        add(recipTmp2);
        scalbn(-1);
    }
}
