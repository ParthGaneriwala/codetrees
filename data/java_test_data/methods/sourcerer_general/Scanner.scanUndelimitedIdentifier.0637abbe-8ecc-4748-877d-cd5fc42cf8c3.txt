public boolean scanUndelimitedIdentifier() {
    if (currentPosition == limit) {
        return false;
    }
    char start = sqlString.charAt(currentPosition);
    if (!Character.isLetter(start)) {
        token.tokenString = Character.toString(start);
        token.tokenType = Tokens.X_UNKNOWN_TOKEN;
        token.isMalformed = true;
        return false;
    }
    int i = currentPosition + 1;
    for (; i < limit; i++) {
        char c = sqlString.charAt(i);
        if (c == '_' || Character.isLetterOrDigit(c)) {
            continue;
        }
        break;
    }
    token.tokenString = sqlString.substring(currentPosition, i).toUpperCase(Locale.ENGLISH);
    currentPosition = i;
    if (nullAndBooleanAsValue) {
        int tokenLength = currentPosition - tokenPosition;
        if (tokenLength == 4 || tokenLength == 5) {
            switch(start) {
                case 'T':
                case 't':
                    if (Tokens.T_TRUE.equals(token.tokenString)) {
                        token.tokenString = Tokens.T_TRUE;
                        token.tokenType = Tokens.X_VALUE;
                        token.tokenValue = Boolean.TRUE;
                        token.dataType = Type.SQL_BOOLEAN;
                        return false;
                    }
                    break;
                case 'F':
                case 'f':
                    if (Tokens.T_FALSE.equals(token.tokenString)) {
                        token.tokenString = Tokens.T_FALSE;
                        token.tokenType = Tokens.X_VALUE;
                        token.tokenValue = Boolean.FALSE;
                        token.dataType = Type.SQL_BOOLEAN;
                        return false;
                    }
                    break;
                case 'N':
                case 'n':
                    if (Tokens.T_NULL.equals(token.tokenString)) {
                        token.tokenString = Tokens.T_NULL;
                        token.tokenType = Tokens.X_VALUE;
                        token.tokenValue = null;
                        return false;
                    }
                    break;
            }
        }
    }
    return true;
}
