<P> void generateCommandParamsBody(List<P> parameters, PropertyLikeAccess<P> access, String commandName) throws IOException {
    if (parameters != null) {
        boolean hasDoc = false;
        for (P param : parameters) {
            if (access.forTypedObject().getDescription(param) != null) {
                hasDoc = true;
                break;
            }
        }
        if (hasDoc) {
            getWriter().write("  /**\n");
            for (P param : parameters) {
                String propertyDescription = access.forTypedObject().getDescription(param);
                if (propertyDescription != null) {
                    getWriter().write("   @param " + getParamName(param, access) + " " + propertyDescription + "\n");
                }
            }
            getWriter().write("   */\n");
        }
    }
    getWriter().write("  public " + getShortClassName() + "(");
    {
        boolean needComa = false;
        if (parameters != null) {
            for (P param : parameters) {
                if (needComa) {
                    getWriter().write(", ");
                }
                String paramName = getParamName(param, access);
                ClassScope.MemberScope memberScope = newMemberScope(paramName);
                ReturnTypeData typeData = memberScope.resolveType(param, access.forTypedObject());
                getWriter().write(typeData.getName() + " " + paramName);
                needComa = true;
            }
        }
    }
    getWriter().write(") {\n");
    if (parameters != null) {
        for (P param : parameters) {
            boolean isOptional = access.forTypedObject().getOptional(param) == Boolean.TRUE;
            String paramName = getParamName(param, access);
            if (isOptional) {
                getWriter().write("    if (" + paramName + " != null) {\n  ");
            }
            getWriter().write("    this.put(\"" + access.getName(param) + "\", " + paramName + ");\n");
            if (isOptional) {
                getWriter().write("    }\n");
            }
        }
    }
    getWriter().write("  }\n");
    getWriter().write("\n");
}
