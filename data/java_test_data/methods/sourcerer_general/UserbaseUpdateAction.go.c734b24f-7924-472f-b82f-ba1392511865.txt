protected String go() throws Exception {
    UserService userService = (UserService) this.getBean("userService");
    CoreUser user = userService.getUserById(currentUserid);
    user.setUserName(username);
    if (currentRole == 1) {
        user.setGender(sex);
        user.setBirthday(birth);
    }
    user.setMobile(phone);
    user.setCardno(cardno);
    user.setEntno(entno);
    user.setSign(sign);
    userService.update(user);
    String usersession = get("USERSESSION").toString();
    usersession = currentUserid + "," + provinceid + "," + cityid + "," + districtid + "," + currentRole + "," + username + "," + usertype;
    set("USERSESSION", usersession);
    // 保存生日和性别
    CoreUserDetail detail = userService.getUserDetailById(currentUserid);
    if (detail == null) {
        detail = new CoreUserDetail();
        detail.setUserid(currentUserid);
    }
    detail.setUserAddress(address);
    detail.setSummary(summary);
    detail.setPostcode(postcode);
    detail.setQq(qq);
    detail.setMsn(msn);
    userService.saveOrupdate(detail);
    if (user.getUserRole() == 1)
        message = "恭喜您，您的个人资料修改成功！";
    else
        message = "恭喜您，您的企业资料修改成功！";
    this.redirectURL = "javascript:$.unblockUI()";
    if (fromorder != null && fromorder.equals("true")) {
        user.setStatus((short) 2);
        user.setApproveType(approve_type);
        int waitid = WaitWork.Sendwait(currentUserid, "用户认证", userService);
        user.setWaitid(waitid);
        userService.update(user);
        // this.message="ok";
        this.message = "您的身份认证提交成功,请等待身份认证通过后再订购产品";
        this.redirectURL = "javascript:$.unblockUI()";
    }
    return SUCCESS;
}
