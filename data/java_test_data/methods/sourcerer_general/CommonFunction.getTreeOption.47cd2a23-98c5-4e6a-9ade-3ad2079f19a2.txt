public static String getTreeOption(Session session, TsysUser user) {
    try {
        long userid = user.getUserid();
        List list = null;
        TsysFunction function = new TsysFunction();
        // 如果用户是系统管理则拥有全部权限
        if (user.isIsadmin()) {
            Query query = session.createQuery("from TsysFunction as function  where function.ismenu=1 order by function.tsysModule.moduleorder,function.functionorder,function.functionid");
            list = query.list();
        } else {
            // 非管理员权限
            Query query1 = session.createQuery("from TsysUserRole as userrole where userrole.comp_id.tsysUser.userid=" + userid);
            Query query3 = session.createQuery("from TsysFunctionUser as functionuser where functionuser.comp_id.tsysUser.userid=" + userid);
            List list1 = query1.list();
            List list3 = query3.list();
            TsysUserRole userrole = new TsysUserRole();
            TsysFunctionUser functionuser = new TsysFunctionUser();
            TsysFunctionRole functionrole = new TsysFunctionRole();
            String roleids = "0";
            String functionids = "'0'";
            int n = 0;
            n = list1.size();
            for (int i = 0; i < n; i++) {
                userrole = (TsysUserRole) list1.get(i);
                roleids = roleids + "," + userrole.getComp_id().getTsysRole().getRoleid();
            }
            n = list3.size();
            for (int i = 0; i < n; i++) {
                functionuser = (TsysFunctionUser) list3.get(i);
                functionids = functionids + ",'" + functionuser.getComp_id().getTsysFunction().getFunctionid() + "'";
            }
            Query query4 = session.createQuery("from TsysFunctionRole as functionrole where functionrole.comp_id.tsysRole.roleid in(" + roleids + ")");
            List list4 = query4.list();
            n = list4.size();
            for (int i = 0; i < n; i++) {
                functionrole = (TsysFunctionRole) list4.get(i);
                functionids = functionids + ",'" + functionrole.getComp_id().getTsysFunction().getFunctionid() + "'";
            }
            Query query = session.createQuery("from TsysFunction as function where function.ismenu=1 and function.iscommon=1 or function.functionid in (" + functionids + ") order by function.tsysModule.moduleorder,function.functionorder,function.functionid");
            list = query.list();
        }
        int n = list.size();
        String moduleid = "";
        String modulename = "";
        String functionname = "";
        String functionurl = "";
        String treeoption = "";
        for (int i = 0; i < n; i++) {
            function = (TsysFunction) list.get(i);
            if (!moduleid.equals(function.getTsysModule().getModuleid()) || moduleid.equals("")) {
                modulename = function.getTsysModule().getModulename();
                if (!treeoption.equals("")) {
                    treeoption = treeoption.substring(0, treeoption.length() - 3);
                    treeoption = treeoption + "1,";
                }
                treeoption = treeoption + "0,\"" + modulename + "\",\"\",\"\",\"\",\"\",4,\"\",\"\",\"\",-1,";
            }
            moduleid = function.getTsysModule().getModuleid();
            functionname = function.getFunctionname();
            functionurl = function.getUrl();
            treeoption = treeoption + "2,\"" + functionname + "\",\"\",\"\",\"\",3,\"\",\"" + functionurl + "\",\"\",-1,";
        }
        treeoption = treeoption.substring(0, treeoption.length() - 3) + "5";
        return treeoption;
    } catch (Exception e) {
        e.printStackTrace();
        return "";
    }
}
