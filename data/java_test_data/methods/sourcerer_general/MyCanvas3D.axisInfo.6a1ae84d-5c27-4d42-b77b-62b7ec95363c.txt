public void axisInfo(int w, int h, J3DGraphics2D g2) {
    g2.setColor(Color.BLACK);
    Cam c = new Cam();
    if (camera.lockobj == null)
        c.camdef(20, camera.psi + Math.PI / 2, camera.theta, -(camera.phi - Math.PI));
    else
        c.camdef(20, (camera.psi + camera.lockobj.yaw) + Math.PI / 2, (camera.theta), -((camera.phi) - Math.PI));
    // System.out.println("psi="+camera.psi+" theta="+camera.theta+" phi="+camera.phi);//ok...
    int xr1 = w - 78, yr1 = 8, xr2 = w - 8, yr2 = 89;
    window(xr1, yr1, xr2, yr2);
    int xc = w - 58, yc = 51;
    // desenhar
    g2.drawLine(xr1 + 10, yr1 + 10, xr2 - 10, yr1 + 10);
    // desenhar
    g2.drawLine(xr1 + 10, yr1 + 5, xr1 + 10, yr1 + 15);
    // desenhar
    g2.drawLine(xr2 - 10, yr1 + 5, xr2 - 10, yr1 + 15);
    if (camera.projection == View.PERSPECTIVE_PROJECTION) {
        // desenhar
        g2.drawLine(xr1 + 22, yr1 + 7, xr1 + 22, yr1 + 13);
        // desenhar
        g2.drawLine(xr2 - 22, yr1 + 7, xr2 - 22, yr1 + 13);
        // desenhar
        g2.drawLine(xr1 + 31, yr1 + 9, xr1 + 31, yr1 + 11);
        // desenhar
        g2.drawLine(xr2 - 31, yr1 + 9, xr2 - 31, yr1 + 11);
    // g2.drawString("Presp",xr1+15,yr1+25);
    } else {
        int x1 = xr1 + 10, y1 = yr1 + 10;
        int x2 = xr2 - 10, y2 = yr1 + 10;
        Point3d point3d1 = new Point3d();
        camera.canvas.getPixelLocationInImagePlate(x1, y1, point3d1);
        Transform3D temp = new Transform3D();
        camera.canvas.getImagePlateToVworld(temp);
        temp.transform(point3d1);
        // System.out.println("x1:"+point3d1.x+"y1:"+point3d1.y+"z1:"+point3d1.z);
        Point3d point3d2 = new Point3d();
        camera.canvas.getPixelLocationInImagePlate(x2, y2, point3d2);
        temp.transform(point3d2);
        // System.out.println("x2:"+point3d2.x+"y2:"+point3d2.y+"z2:"+point3d2.z);
        double scale = point3d2.distance(point3d1);
        // System.out.println("dist:"+scale);
        String units = " m";
        if (scale < 1) {
            units = "cm";
            scale *= 100;
        } else {
            if (scale > 1000) {
                units = "Km";
                scale /= 1000;
            }
        }
        int scaleint = (int) (scale * 100);
        scale = scaleint;
        scale /= 100;
        g2.drawString(scale + "", xr1 + 15, yr1 + 25);
        g2.drawString(units, xr1 + 45, yr1 + 25);
    }
    Vector2f vec2a = null;
    Vector2f vec2b = null;
    // -----------------zz
    Vector3f vec3a = new Vector3f(0, 0, -8);
    Vector3f vec3b = new Vector3f(0, 0, 0);
    vec2a = c.to2d(vec3a);
    vec2b = c.to2d(vec3b);
    // vec2a.x=(float) ((vec2a.x*Math.cos(camera.phi))-(vec2a.y*Math.sin(camera.phi)));
    // vec2a.y=(float) ((vec2a.x*Math.sin(camera.phi))-(vec2a.y*Math.cos(camera.phi)));
    int x1 = (int) (3 * vec2a.x);
    int y1 = (int) (3 * vec2a.y);
    int x2 = (int) (3 * vec2b.x);
    int y2 = (int) (3 * vec2b.y);
    // translate
    x1 += xc;
    y1 += yc;
    x2 += xc;
    y2 += yc;
    // desenhar
    g2.drawLine(x1, y1, x2, y2);
    g2.drawString("Z", x1 - 5, y1);
    // ---------------------------------yy
    vec3a = new Vector3f(0, 8, 0);
    vec3b = new Vector3f(0, 0, 0);
    vec2a = c.to2d(vec3a);
    vec2b = c.to2d(vec3b);
    x1 = (int) (3 * vec2a.x);
    y1 = (int) (3 * vec2a.y);
    x2 = (int) (3 * vec2b.x);
    y2 = (int) (3 * vec2b.y);
    // translate
    x1 += xc;
    y1 += yc;
    x2 += xc;
    y2 += yc;
    // cima
    g2.drawLine(x1, y1, x2, y2);
    g2.drawString("Y", x1 - 5, y1);
    // ------------------------xx
    vec3a = new Vector3f(8, 0, 0);
    vec3b = new Vector3f(0, 0, 0);
    vec2a = c.to2d(vec3a);
    vec2b = c.to2d(vec3b);
    x1 = (int) (3 * vec2a.x);
    y1 = (int) (3 * vec2a.y);
    x2 = (int) (3 * vec2b.x);
    y2 = (int) (3 * vec2b.y);
    // translate
    x1 += xc;
    y1 += yc;
    x2 += xc;
    y2 += yc;
    // cima
    g2.drawLine(x1, y1, x2, y2);
    g2.drawString("X", x1 - 5, y1);
// g2.drawLine(0,40,40,40);  //cima
}
