private void initialize() {
    mainTextQuestionsPane = new JSplitPane(JSplitPane.VERTICAL_SPLIT);
    textPanel = new TextFromFilePanel();
    treePanel = new TreeSelectorPanel("Materials");
    exQuestionsScrollPane = new JScrollPane();
    exQuestionsScrollPane.setPreferredSize(new Dimension(600, 350));
    questionLabels = new HashMap<String, JLabel>();
    answerBoxes = new HashMap<String, JTextArea>();
    if (exerciseHandler.getExercise() != null) {
        containsExQuestions = true;
        Set<Entry<String, String>> questions = exerciseHandler.getExercise().getQuestions().entrySet();
        for (Entry question : questions) {
            JLabel label = new JLabel((String) question.getValue());
            questionLabels.put((String) question.getKey(), label);
            // populate answer if theres one in the db
            answerBoxes.put((String) question.getKey(), new JTextArea());
        }
        exQuestionsPanel = new JPanel(new GridBagLayout());
    }
    setLayout(new GridBagLayout());
    groupAssignTabbedPane = new JTabbedPane();
    chatQuestionTabbedPane = new JTabbedPane();
    groupPanel = new JPanel(new GridBagLayout());
    groupList = new JList();
    JScrollPane groupListPane = new JScrollPane(groupList);
    groupListPane.setPreferredSize(new Dimension(150, 200));
    groupPanel.add(groupListPane);
    try {
        UserHandler.getInstance(ConnectionHandler.getInstance()).requestGroupMembers();
    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    sidePanel = new JPanel(new GridBagLayout());
    chatPanel = new JPanel(new GridBagLayout());
    chatBox = new JTextPane();
    chatBox.setPreferredSize(new Dimension(150, 100));
    chatBox.setEnabled(false);
    chatTextBox = new JTextArea(1, 2);
    chatTextBox.setPreferredSize(new Dimension(150, 50));
    chatTextBox.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED));
    // chatScrollPane = new JScrollPane(chatBox);
    // chatScrollPane.setPreferredSize(new Dimension(150,100));
    // chatScrollPane.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED));
    questionAnswerPanel = new JPanel(new GridBagLayout());
    if (authHandler.checkTeacherAuthentication()) {
        questionListData = new DefaultListModel();
        questionList = new JList(questionListData);
        questionScrollPane = new JScrollPane(questionList);
        questionScrollPane.setPreferredSize(new Dimension(150, 100));
    } else {
        questionBox = new JTextArea(2, 2);
        questionBox.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED));
        questionBox.setText("Please type your question here.");
        questionScrollPane = new JScrollPane(questionBox);
        questionScrollPane.setPreferredSize(new Dimension(150, 100));
    }
    answerBox = new JTextArea(2, 2);
    answerBox.setPreferredSize(new Dimension(150, 100));
    answerBox.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED));
    answerBox.setEditable(false);
    submitAnswer = new JButton("Submit Answer");
    submitAnswer.addActionListener(this);
    submitQuestion = new JButton("Submit Question");
    submitQuestion.addActionListener(this);
    newQuestion = new JButton("New Question");
    newQuestion.addActionListener(this);
    submitChat = new JButton("Send");
    submitChat.addActionListener(this);
    submitExerciseAnswer = new JButton("Submit Exercise Answer");
    submitExerciseAnswer.addActionListener(this);
}
