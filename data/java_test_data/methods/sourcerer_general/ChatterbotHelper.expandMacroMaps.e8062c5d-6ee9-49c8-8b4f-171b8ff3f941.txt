private void expandMacroMaps() {
    Pattern MACRO = Pattern.compile("#([^#]+)#");
    Matcher matcher;
    boolean somethingChanged;
    int temp;
    /*
		 * EN
		 */
    temp = 0;
    do {
        somethingChanged = false;
        temp++;
        for (Map.Entry<String, String> entry : macroMapEN.entrySet()) {
            String key = entry.getKey();
            String value = entry.getValue();
            // Ignore macro FUNCTION syntax:
            value = value.replaceAll("\\$1\\$", "foobar");
            matcher = MACRO.matcher(value);
            if (matcher.find()) {
                String replacementValue = replaceMacrosMasked(value, "EN");
                macroMapEN.put(key, replacementValue);
                somethingChanged = true;
            }
        }
    } while (somethingChanged);
    System.err.println("Number of macro expansion iterations needed for EN: " + temp);
    /*
		 * DE
		 */
    temp = 0;
    do {
        somethingChanged = false;
        temp++;
        for (Map.Entry<String, String> entry : macroMapDE.entrySet()) {
            String key = entry.getKey();
            String value = entry.getValue();
            // Ignore macro FUNCTION syntax:
            value = value.replaceAll("\\$1\\$", "foobar");
            matcher = MACRO.matcher(value);
            if (matcher.find()) {
                String replacementValue = replaceMacrosMasked(value, "DE");
                macroMapDE.put(key, replacementValue);
                somethingChanged = true;
            }
        }
    } while (somethingChanged);
    System.err.println("Number of macro expansion iterations needed for DE: " + temp);
    /*
		 * IT
		 */
    temp = 0;
    do {
        somethingChanged = false;
        temp++;
        for (Map.Entry<String, String> entry : macroMapIT.entrySet()) {
            String key = entry.getKey();
            String value = entry.getValue();
            // Ignore macro FUNCTION syntax:
            value = value.replaceAll("\\$1\\$", "foobar");
            matcher = MACRO.matcher(value);
            if (matcher.find()) {
                String replacementValue = replaceMacrosMasked(value, "IT");
                macroMapIT.put(key, replacementValue);
                somethingChanged = true;
            }
        }
    } while (somethingChanged);
    System.err.println("Number of macro expansion iterations needed for IT: " + temp);
}
