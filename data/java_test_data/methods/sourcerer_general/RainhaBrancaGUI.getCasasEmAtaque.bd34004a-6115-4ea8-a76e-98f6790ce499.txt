public Vector getCasasEmAtaque(Tabuleiro tabuleiro) {
    // possï¿½veis casas que o bispo pode ocupar.
    super.casasEmAtaque = new Vector();
    // verifica se pode mover para diagonal inferior direita
    int cont = 1;
    while (tabuleiro.getCasa(x + cont, y + cont) != null) {
        if (tabuleiro.getCasa(x + cont, y + cont).getPeca() != null) {
            if (tabuleiro.getCasa(x + cont, y + cont).getPeca().getCor() == Color.BLACK) {
                casasEmAtaque.add(tabuleiro.getCasa(x + cont, y + cont));
                break;
            }
            if (tabuleiro.getCasa(x + cont, y + cont).getPeca().getCor() == Color.WHITE) {
                break;
            }
        }
        casasEmAtaque.add(tabuleiro.getCasa(x + cont, y + cont));
        cont++;
    }
    // verifica se pode mover para diagonal inferior esquerda
    cont = 1;
    while (tabuleiro.getCasa(x - cont, y + cont) != null) {
        if (tabuleiro.getCasa(x - cont, y + cont).getPeca() != null) {
            if (tabuleiro.getCasa(x - cont, y + cont).getPeca().getCor() == Color.BLACK) {
                casasEmAtaque.add(tabuleiro.getCasa(x - cont, y + cont));
                break;
            }
            if (tabuleiro.getCasa(x - cont, y + cont).getPeca().getCor() == Color.WHITE) {
                break;
            }
        }
        casasEmAtaque.add(tabuleiro.getCasa(x - cont, y + cont));
        cont++;
    }
    // verifica se pode mover para diagonal superior esquerda
    cont = 1;
    while (tabuleiro.getCasa(x - cont, y - cont) != null) {
        if (tabuleiro.getCasa(x - cont, y - cont).getPeca() != null) {
            if (tabuleiro.getCasa(x - cont, y - cont).getPeca().getCor() == Color.BLACK) {
                casasEmAtaque.add(tabuleiro.getCasa(x - cont, y - cont));
                break;
            }
            if (tabuleiro.getCasa(x - cont, y - cont).getPeca().getCor() == Color.WHITE) {
                break;
            }
        }
        casasEmAtaque.add(tabuleiro.getCasa(x - cont, y - cont));
        cont++;
    }
    // verifica se pode mover para diagonal superior direita
    cont = 1;
    while (tabuleiro.getCasa(x + cont, y - cont) != null) {
        if (tabuleiro.getCasa(x + cont, y - cont).getPeca() != null) {
            if (tabuleiro.getCasa(x + cont, y - cont).getPeca().getCor() == Color.BLACK) {
                casasEmAtaque.add(tabuleiro.getCasa(x + cont, y - cont));
                break;
            }
            if (tabuleiro.getCasa(x + cont, y - cont).getPeca().getCor() == Color.WHITE) {
                break;
            }
        }
        casasEmAtaque.add(tabuleiro.getCasa(x + cont, y - cont));
        cont++;
    }
    // verifica se pode mover para baixo
    cont = 1;
    while (tabuleiro.getCasa(x, y + cont) != null) {
        if (tabuleiro.getCasa(x, y + cont).getPeca() != null) {
            if (tabuleiro.getCasa(x, y + cont).getPeca().getCor() == Color.BLACK) {
                casasEmAtaque.add(tabuleiro.getCasa(x, y + cont));
                break;
            }
            if (tabuleiro.getCasa(x, y + cont).getPeca().getCor() == Color.WHITE) {
                break;
            }
        }
        casasEmAtaque.add(tabuleiro.getCasa(x, y + cont));
        cont++;
    }
    // verifica se pode mover para esquerda
    cont = 1;
    while (tabuleiro.getCasa(x - cont, y) != null) {
        if (tabuleiro.getCasa(x - cont, y).getPeca() != null) {
            if (tabuleiro.getCasa(x - cont, y).getPeca().getCor() == Color.BLACK) {
                casasEmAtaque.add(tabuleiro.getCasa(x - cont, y));
                break;
            }
            if (tabuleiro.getCasa(x - cont, y).getPeca().getCor() == Color.WHITE) {
                break;
            }
        }
        casasEmAtaque.add(tabuleiro.getCasa(x - cont, y));
        cont++;
    }
    // verifica se pode mover para direita
    cont = 1;
    while (tabuleiro.getCasa(x + cont, y) != null) {
        if (tabuleiro.getCasa(x + cont, y).getPeca() != null) {
            if (tabuleiro.getCasa(x + cont, y).getPeca().getCor() == Color.BLACK) {
                casasEmAtaque.add(tabuleiro.getCasa(x + cont, y));
                break;
            }
            if (tabuleiro.getCasa(x + cont, y).getPeca().getCor() == Color.WHITE) {
                break;
            }
        }
        casasEmAtaque.add(tabuleiro.getCasa(x + cont, y));
        cont++;
    }
    // verifica se pode mover para cima
    cont = 1;
    while (tabuleiro.getCasa(x, y - cont) != null) {
        if (tabuleiro.getCasa(x, y - cont).getPeca() != null) {
            if (tabuleiro.getCasa(x, y - cont).getPeca().getCor() == Color.BLACK) {
                casasEmAtaque.add(tabuleiro.getCasa(x, y - cont));
                break;
            }
            if (tabuleiro.getCasa(x, y - cont).getPeca().getCor() == Color.WHITE) {
                break;
            }
        }
        casasEmAtaque.add(tabuleiro.getCasa(x, y - cont));
        cont++;
    }
    return casasEmAtaque;
}
