public String executeCommandSaveDatabase(ActionContext context) {
    if (SetupUtils.isConfigured(getApplicationPrefs(context))) {
        return "AlreadySetupOK";
    }
    SetupDatabaseBean bean = (SetupDatabaseBean) context.getFormBean();
    if (bean.isValid()) {
        // Verify the database connection with the specified parameters
        Connection db = null;
        // If timeout needs to be adjusted, record the default before changing
        int timeout = DriverManager.getLoginTimeout();
        try {
            // Create a connection
            Class.forName(bean.getDriver());
            DriverManager.setLoginTimeout(10);
            db = DriverManager.getConnection(bean.getUrl(), bean.getUser(), bean.getPassword());
            db.close();
            // Store the database connection prefs
            ApplicationPrefs prefs = getApplicationPrefs(context);
            prefs.add("DATABASE.NAME", bean.getDatabase());
            prefs.add("SITE.DBTYPE", bean.getType());
            prefs.add("SITE.ADDRESS", String.valueOf(bean.getAddress()));
            prefs.add("SITE.PORT", String.valueOf(bean.getPort()));
            prefs.add(ApplicationPrefs.CONNECTION_DRIVER, bean.getDriver());
            prefs.add(ApplicationPrefs.CONNECTION_URL, bean.getUrl());
            prefs.add(ApplicationPrefs.CONNECTION_USER, bean.getUser());
            prefs.add(ApplicationPrefs.CONNECTION_PASSWORD, bean.getPassword());
            // Store the connection pool prefs
            prefs.add(ApplicationPrefs.CONNECTION_POOL_DEBUG, "false");
            prefs.add(ApplicationPrefs.CONNECTION_POOL_TEST_CONNECTIONS, "false");
            prefs.add(ApplicationPrefs.CONNECTION_POOL_ALLOW_SHRINKING, "true");
            prefs.add(ApplicationPrefs.CONNECTION_POOL_MAX_CONNECTIONS, "10");
            prefs.add(ApplicationPrefs.CONNECTION_POOL_MAX_IDLE_TIME, "60");
            prefs.add(ApplicationPrefs.CONNECTION_POOL_MAX_DEAD_TIME, "300");
            prefs.add(ApplicationPrefs.CONNECTION_POOL_MAX_RSS_CONNECTIONS, "2");
            prefs.add(ApplicationPrefs.CONNECTION_POOL_MAX_API_CONNECTIONS, "2");
            prefs.add(ApplicationPrefs.CONNECTION_POOL_MAX_WORKFLOW_CONNECTIONS, "3");
            prefs.add(ApplicationPrefs.CONNECTION_POOL_MAX_SCHEDULER_CONNECTIONS, "5");
            prefs.add(ApplicationPrefs.CONNECTION_POOL_MAX_CACHE_CONNECTIONS, "3");
            // save the temporary prefs so user can return
            prefs.save();
            // ask to reload prefs to instantiate connection pool
            prefs.initializePrefs(context.getServletContext());
            return "SetupSaveDatabaseOK";
        } catch (Exception e) {
            context.getRequest().setAttribute("actionError", "An error occurred while trying to connect to the database, the " + "following error was provided by the database driver: " + e.getMessage());
        } finally {
            DriverManager.setLoginTimeout(timeout);
            if (db != null) {
                try {
                    db.close();
                } catch (Exception ee) {
                }
            }
        }
    }
    processErrors(context, bean.getErrors());
    return "SetupSaveDatabaseERROR";
}
