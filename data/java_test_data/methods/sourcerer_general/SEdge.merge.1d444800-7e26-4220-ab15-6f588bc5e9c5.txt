public static boolean merge(SEdge edge, SEdge dedge, SJunction djunction, Schematic schematic) {
    SObject endobject;
    int other_end;
    int end;
    assert (edge.head == djunction || edge.tail == djunction);
    assert (dedge.head == djunction || dedge.tail == djunction);
    /*
         * First remove the delete-junction.
         */
    schematic.checkpoint(djunction, -1);
    schematic.remove_internal(djunction);
    /*
         * Modify the non-delete edge: modify it's body and unlink it from the
         * end that is attached to the delete-junction.
         */
    schematic.checkpoint(edge, 0);
    mergeBody(edge, dedge, djunction);
    if (edge.head == djunction)
        end = 0;
    else
        end = 1;
    if (end == 0)
        other_end = 1;
    else
        other_end = 0;
    edge.unlink(end, djunction, true, false);
    /*
         * Unlink the end object who was opposite to the delete-junction-end on
         * the delete-edge.
         */
    if (dedge.head == djunction)
        end = 1;
    else
        end = 0;
    endobject = dedge.endobject(end == 1 ? dedge.tail : dedge.head);
    schematic.checkpoint(endobject, 0);
    dedge.unlink(end, endobject, false, true);
    /*
         * Remove the delete-edge.
         */
    schematic.checkpoint(dedge, -1);
    schematic.remove_internal(dedge);
    /*
         * 
         */
    edge.link(other_end, endobject, schematic);
    return true;
}
