public void BB_AsHtml(java.io.CharArrayWriter sb) throws Exception {
    String hygeine = "clean";
    if (this.Dirty) {
        hygeine = "dirty";
    }
    int keycount = 0;
    if (this.isLeaf) {
        for (int i = 0; i < this.Size; i++) {
            String key = this.ChildKeys[i];
            long seek = this.ChildBufferNumbers[i];
            if (key != null) {
                key = PrintableString(key);
                sb.write("'" + key + "' : " + seek + "<br>\r\n");
                keycount++;
            }
        }
        sb.write("leaf " + this.indexInParent + " at " + this.myBufferNumber + " #keys==" + keycount + " " + hygeine + "\r\n");
    } else {
        sb.write("<table border>\r\n");
        sb.write("<tr><td colspan=2>nonleaf " + this.indexInParent + " at " + this.myBufferNumber + " " + hygeine + "</td></tr>\r\n");
        if (this.ChildBufferNumbers[0] != BPTDataLong.NULLBUFFERNUMBER) {
            this.MaterializeNodeAtIndex(0);
            sb.write("<tr><td></td><td>" + this.ChildBufferNumbers[0] + "</td><td>\r\n");
            this.MaterializedChildNodes[0].BB_AsHtml(sb);
            sb.write("</td></tr>\r\n");
        }
        for (int i = 0; i < this.Size; i++) {
            String key = this.ChildKeys[i];
            if (key == null) {
                break;
            }
            key = PrintableString(key);
            sb.write("<tr><th>'" + key + "'</th><td></td><td></td></tr>\r\n");
            try {
                this.MaterializeNodeAtIndex(i + 1);
                sb.write("<tr><td></td><td>" + this.ChildBufferNumbers[i + 1] + "</td><td>\r\n");
                this.MaterializedChildNodes[i + 1].BB_AsHtml(sb);
                sb.write("</td></tr>\r\n");
            } catch (BPTException e) {
                sb.write("<tr><td></td><th>COULDN'T MATERIALIZE NODE " + (i + 1) + "</th></tr>");
            }
            keycount++;
        }
        sb.write("<tr><td colspan=2> #keys==" + keycount + "</td></tr>\r\n");
        sb.write("</table>\r\n");
    }
}
