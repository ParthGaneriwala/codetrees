public static void main(String[] args) throws Exception {
    String name = "刘0华锋1";
    int lawyerids = 123452;
    String url = "";
    url += "?stoken=" + new String(Base64.encode((lawyerids + "|" + name).getBytes("gb2312")), "gb2312");
    System.out.println(url);
    String s = "<?xml version=\"1.0\" encoding=\"utf-8\"?><learns><learn id=\"1\"><lawyerid>11</lawyerid><lawyername>111的名字</lawyername><lessonid>22</lessonid><lessonname>在你方系统该课程的名称</lessonname><maxjifen>5</maxjifen><learnjifen>3</learnjifen><learndate>2010-3-15</learndate></learn><learn id=\"2\"><lawyerid>111</lawyerid><lawyername>1111的名字</lawyername><lessonid>222</lessonid><lessonname>在你方系统该课程的名称</lessonname><maxjifen>5</maxjifen><learnjifen>3</learnjifen><learndate>2010-4-15</learndate></learn></learns>";
    Document document = DocumentHelper.parseText(s);
    LOG.debug("document:::" + document);
    Element element = document.getRootElement();
    // Element skrecselement = element.element("learns");
    Iterator iterator = element.elementIterator("learn");
    // LawyerlessonxfService skservice = (LawyerlessonxfService)
    // Globals.getBean("lawyerlessonxfService");
    // BasicService basicService = (BasicService)
    // Globals.getBean("basicService");
    // SysUnionparams params = (SysUnionparams)
    // basicService.get(SysUnionparams.class, 8078);
    // 根据用户选择的年份以及年审时间得到查询的起始终止时间段
    // JifenTime jifentime =
    // com.changpeng.jifen.util.CommonDatas.getJifenTime(0,
    // params.getNianshen());
    // int theyear = jifentime.getNianshenyear();
    int theyear = 2000;
    while (iterator.hasNext()) {
        Element learn = (Element) iterator.next();
        String id = learn.attributeValue("id");
        try {
            String _lawyerid = learn.elementText("lawyerid");
            String lawyername = learn.elementText("lawyername");
            String lessonid = learn.elementText("lessonid");
            String title = learn.elementText("lessonname");
            String maxjifen = learn.elementText("maxjifen");
            String date = learn.elementText("learndate");
            String jifen = learn.elementText("learnjifen");
            System.out.println(_lawyerid + "," + lawyername + "," + lessonid + "," + title + "," + maxjifen + "," + jifen + ",");
            int djlessonid = Integer.parseInt(lessonid);
            float learnjifen = Float.parseFloat(jifen);
            Date learndate = df.parse(date);
            int lawyerid = Integer.parseInt(_lawyerid);
        // skservice
        // .saveDianjingJifen(lawyerid, lawyername, djlessonid, title,
        // learnjifen,maxjifen, learndate, theyear);
        // <resps>
        // <resp id="post提交到我方的时候的听课id,即<learn>节点中的id属性"
        // value="成功或失败说明"/>
        // <resp id="post提交到我方的时候的听课id,即<learn>节点中的id属性"
        // value="成功或失败说明"/>
        // <resp id="post提交到我方的时候的听课id,即<learn>节点中的id属性"
        // value="成功或失败说明"/>
        // </resps>
        // <learn id="在你方系统的一个听课序号，唯一，response消息的时候带回">
        // <lawyerid> 通过上面的url传送过去的律师id </lawyerid>
        // <lawyername> 通过上面的url传送过去的律师名字 </lawyername>
        // <lessonid> 在你方系统该课程的编号 </lessonid>
        // <lessonname> 在你方系统该课程的名称 </lessonname>
        // <maxjifen> 该课程的最大积分 </maxjifen>
        // <learnjifen> 该课程已学习积分
        // </learnjifen>(如果听10分钟积0.1分并调用一次接口，则第10分钟时传递的积分值为0.1，第60分钟的时候传递的积分值为0.6。依此类推)
        // <learndate> 课程的学习时间 </learndate>
        // </learn>
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
