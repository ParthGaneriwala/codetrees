private ClLoversTheme[] searchForThemes(final String keywords, final String filename, int mode) {
    String[] modes = { "?", "/top?", "/new?", "/random" };
    StringBuffer url = new StringBuffer("http://www.colourlovers.com/api/palettes?").append(modes[mode]);
    if (mode != 3) {
        url.append("hueRange=").append(hueRange[0]).append(",").append(hueRange[1]).append("&briRange=").append(briRange[0]).append(",").append(briRange[1]).append("&numResults=").append(numResults).append("&resultOffset=").append(resultOffset);
        if (keywords != null) {
            url.append("&keywords=").append(keywords);
        }
    }
    XMLElement xml = getXML(url.toString(), filename);
    XMLElement[] palettes = xml.getChildren("palette");
    ArrayList themes = new ArrayList();
    if (palettes.length > 0) {
        for (int i = 0; i < palettes.length; i++) {
            ClLoversTheme theme = new ClLoversTheme(p);
            XMLElement palette = palettes[i];
            theme.setTitle(palette.getChildren("title")[0].getContent());
            theme.setUserName(palette.getChildren("userName")[0].getContent());
            theme.setNumViews(palette.getChildren("numViews")[0].getContent());
            theme.setNumComments(palette.getChildren("numComments")[0].getContent());
            theme.setNumHearts(palette.getChildren("numHearts")[0].getContent());
            theme.setRank(palette.getChildren("rank")[0].getContent());
            theme.setDateCreated(palette.getChildren("dateCreated")[0].getContent());
            theme.setDescription(palette.getChildren("description")[0].getContent());
            XMLElement[] colors = palette.getChildren("colors/hex");
            for (int j = 0; j < colors.length; j++) {
                theme.addColor(PApplet.unhex("FF" + colors[j].getContent()));
            }
            themes.add(theme);
        }
    }
    return (ClLoversTheme[]) themes.toArray(new ClLoversTheme[themes.size()]);
}
