public boolean delete(Connection db) throws SQLException {
    if (id == -1) {
        throw new SQLException("ID not specified");
    }
    int deleteCount = 0;
    boolean commit = db.getAutoCommit();
    try {
        if (commit) {
            db.setAutoCommit(false);
        }
        // Remove the entry and any replies
        PreparedStatement pst = db.prepareStatement("DELETE FROM project_history " + "WHERE history_id = ? OR top_id = ? ");
        pst.setInt(1, id);
        pst.setInt(2, id);
        deleteCount = pst.executeUpdate();
        pst.close();
        if (topId > -1) {
            // Update the position values
            pst = db.prepareStatement("UPDATE project_history " + "SET position = position - 1 " + "WHERE top_id = ? " + "AND position > ? ");
            pst.setInt(1, topId);
            pst.setInt(2, position);
            pst.executeUpdate();
            pst.close();
            // Update the thread position values
            pst = db.prepareStatement("UPDATE project_history " + "SET thread_position = thread_position - 1 " + "WHERE top_id = ? " + "AND thread_position > ? ");
            pst.setInt(1, topId);
            pst.setInt(2, threadPosition);
            pst.executeUpdate();
            pst.close();
        }
        // Update the parent value
        if (parentId > -1) {
            pst = db.prepareStatement("UPDATE project_history " + "SET child_count = child_count - 1 " + "WHERE history_id = ? ");
            pst.setInt(1, parentId);
            pst.executeUpdate();
            pst.close();
        }
        if (commit) {
            db.commit();
        }
        return (deleteCount > 0);
    } catch (Exception e) {
        if (commit) {
            db.rollback();
        }
        throw new SQLException(e.getMessage());
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
}
