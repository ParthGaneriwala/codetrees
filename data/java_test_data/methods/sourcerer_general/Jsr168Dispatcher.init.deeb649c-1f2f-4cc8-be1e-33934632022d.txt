public void init(PortletConfig cfg) throws PortletException {
    super.init(cfg);
    LOG.debug("Initializing portlet " + getPortletName());
    Map<String, String> params = new HashMap<String, String>();
    for (Enumeration e = cfg.getInitParameterNames(); e.hasMoreElements(); ) {
        String name = (String) e.nextElement();
        String value = cfg.getInitParameter(name);
        params.put(name, value);
    }
    // TODO: CHECK IF NEEDED (RG Portlet Refactoring Backports)
    Dispatcher.setPortletSupportActive(true);
    dispatcherUtils = new Dispatcher(new PortletServletContext(cfg.getPortletContext()), params);
    dispatcherUtils.init();
    // For testability
    if (factory == null) {
        factory = dispatcherUtils.getConfigurationManager().getConfiguration().getContainer().getInstance(ActionProxyFactory.class);
    }
    portletNamespace = cfg.getInitParameter("portletNamespace");
    LOG.debug("PortletNamespace: " + portletNamespace);
    parseModeConfig(cfg, PortletMode.VIEW, "viewNamespace", "defaultViewAction");
    parseModeConfig(cfg, PortletMode.EDIT, "editNamespace", "defaultEditAction");
    parseModeConfig(cfg, PortletMode.HELP, "helpNamespace", "defaultHelpAction");
    parseModeConfig(cfg, new PortletMode("config"), "configNamespace", "defaultConfigAction");
    parseModeConfig(cfg, new PortletMode("about"), "aboutNamespace", "defaultAboutAction");
    parseModeConfig(cfg, new PortletMode("print"), "printNamespace", "defaultPrintAction");
    parseModeConfig(cfg, new PortletMode("preview"), "previewNamespace", "defaultPreviewAction");
    parseModeConfig(cfg, new PortletMode("edit_defaults"), "editDefaultsNamespace", "defaultEditDefaultsAction");
    if (!TextUtils.stringSet(portletNamespace)) {
        portletNamespace = "";
    }
    LocalizedTextUtil.addDefaultResourceBundle("org/apache/struts2/struts-messages");
    Container container = dispatcherUtils.getContainer();
    // check for configuration reloading
    if ("true".equalsIgnoreCase(container.getInstance(String.class, StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD))) {
        FileManager.setReloadingConfigs(true);
    }
    actionMapper = container.getInstance(ActionMapper.class);
}
