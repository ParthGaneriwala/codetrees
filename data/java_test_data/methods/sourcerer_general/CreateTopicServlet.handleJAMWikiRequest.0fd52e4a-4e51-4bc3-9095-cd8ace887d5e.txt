@Override
protected ModelAndView handleJAMWikiRequest(HttpServletRequest request, HttpServletResponse response, ModelAndView next, WikiPageInfo pageInfo) throws Exception {
    String actionType = request.getParameter("actionType");
    if ("public".equalsIgnoreCase(actionType)) {
        String id = request.getParameter("topicId");
        WikiBase.getDataHandler().updateTopicAuditStatus(Integer.parseInt(id), null);
        String virtualWiki = WikiUtil.getVirtualWikiFromURI(request);
        Pagination pagination = ServletUtil.loadPagination(request, next);
        Collection items = WikiBase.getDataHandler().getTopicsPublic(virtualWiki, pagination);
        next.addObject("itemCount", new Integer(items.size()));
        next.addObject("items", items);
        next.addObject("rootUrl", "Special:PublicList");
        pageInfo.setPageTitle(new WikiMessage("public.title"));
        pageInfo.setContentJsp("middle.jsp");
        pageInfo.setSpecial(true);
    } else if ("addwatch".equals(actionType)) {
        String virtualWiki = WikiUtil.getVirtualWikiFromURI(request);
        String topicName = request.getParameter("topicName");
        WikiUserAuth user = ServletUtil.currentUser();
        Watchlist watchlist = ServletUtil.currentWatchlist(request, virtualWiki);
        if (!watchlist.containsTopic(topicName)) {
            WikiBase.getDataHandler().writeWatchlistEntry(watchlist, virtualWiki, topicName, user.getUserId(), null);
        }
        Pagination pagination = ServletUtil.loadPagination(request, next);
        view(request, next, pageInfo);
    } else {
        pageInfo.setPageTitle(new WikiMessage("createtopic.title"));
        pageInfo.setContentJsp(CREATTOPIC);
        pageInfo.setSpecial(true);
    }
    return next;
}
