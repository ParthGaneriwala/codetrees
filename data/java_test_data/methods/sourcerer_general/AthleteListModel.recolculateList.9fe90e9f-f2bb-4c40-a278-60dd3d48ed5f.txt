private void recolculateList() {
    if (athletes != null) {
        List<AthleteIcon> athletesNew = new ArrayList<AthleteIcon>();
        Iterator<AthleteIcon> it = athletes.iterator();
        while (it.hasNext()) {
            if (athletesNew.size() == 0)
                athletesNew.add(it.next());
            else {
                int j = 0;
                AthleteIcon first = athletesNew.get(j);
                AthleteIcon cur = it.next();
                int size = athletesNew.size();
                int curTime = cur.getTotalTime().getTimeInSeconds();
                while (curTime >= first.getTotalTime().getTimeInSeconds()) {
                    j++;
                    if (j == size)
                        break;
                    first = athletesNew.get(j);
                }
                athletesNew.add(j, cur);
            }
        }
        athletes = athletesNew;
        if (athletes.size() > 0) {
            int timeBefore = athletes.get(0).getTotalTime().getTimeInSeconds();
            athletes.get(0).setPosition(1);
            int position = 1;
            for (int j = 1; j < athletes.size(); j++) {
                int curTime = athletes.get(j).getTotalTime().getTimeInSeconds();
                if (curTime > timeBefore) {
                    timeBefore = curTime;
                    position = j + 1;
                }
                selected[j] = athletes.get(j).isSelected();
                athletes.get(j).setPosition(position);
            }
        }
        Iterator<ListDataListener> it2 = listeners.iterator();
        while (it2.hasNext()) {
            it2.next().contentsChanged(new ListDataEvent(this, ListDataEvent.CONTENTS_CHANGED, 0, athletes.size()));
        }
    }
}
