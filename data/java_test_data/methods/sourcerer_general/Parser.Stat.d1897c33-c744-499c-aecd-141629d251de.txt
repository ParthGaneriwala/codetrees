public final Statement Stat() {
    StatementList statList;
    Exp e;
    Statement stat1, stat2;
    Token tk, tk1;
    switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
        case LBRACE:
            tk = jj_consume_token(LBRACE);
            statList = Stat_prime();
            tk1 = jj_consume_token(RBRACE);
            Block b = new Block(statList);
            b.beginLine = tk.beginLine;
            b.endLine = tk1.endLine;
            b.beginColumn = tk.beginColumn;
            b.endColumn = tk1.endColumn;
            {
                if (true)
                    return b;
            }
            break;
        case IF:
            tk = jj_consume_token(IF);
            jj_consume_token(P_OPEN);
            e = Exp();
            jj_consume_token(P_CLOSE);
            stat1 = Stat();
            tk1 = jj_consume_token(ELSE);
            stat2 = Stat();
            If se = new If(e, stat1, stat2);
            se.beginLine = tk.beginLine;
            se.endLine = tk1.endLine;
            se.beginColumn = tk.beginColumn;
            se.endColumn = tk1.endColumn;
            {
                if (true)
                    return se;
            }
            break;
        case WHILE:
            tk = jj_consume_token(WHILE);
            jj_consume_token(P_OPEN);
            e = Exp();
            tk1 = jj_consume_token(P_CLOSE);
            stat1 = Stat();
            While w = new While(e, stat1);
            w.beginLine = tk.beginLine;
            w.endLine = tk1.endLine;
            w.beginColumn = tk.beginColumn;
            w.endColumn = tk1.endColumn;
            {
                if (true)
                    return w;
            }
            break;
        case PRINT:
            tk = jj_consume_token(PRINT);
            jj_consume_token(P_OPEN);
            e = Exp();
            jj_consume_token(P_CLOSE);
            tk1 = jj_consume_token(CLOSER);
            Print p = new Print(e);
            p.beginLine = tk.beginLine;
            p.endLine = tk1.endLine;
            p.beginColumn = tk.beginColumn;
            p.endColumn = tk1.endColumn;
            {
                if (true)
                    return p;
            }
            break;
        case ID:
            tk = jj_consume_token(ID);
            stat1 = Stat_lf(tk);
            stat1.beginLine = tk.beginLine;
            stat1.beginColumn = tk.beginColumn;
            {
                if (true)
                    return stat1;
            }
            break;
        default:
            jj_la1[8] = jj_gen;
            jj_consume_token(-1);
            Error.getInstance().addErro("Esperado {, identificador,'while', 'if' ou 'System.out.println(' no lugar de " + token.image, token.beginLine);
    }
    return new Block(null);
}
