// GEN-LAST:event_historyButtonMouseClicked
private void HistoryDetailRowSelected(java.awt.event.MouseEvent evt) {
    // TODO add your handling code here:
    try {
        DefaultTableModel bottomTable = (DefaultTableModel) MainForm.historyBottomTable.getModel();
        int rows = bottomTable.getRowCount();
        for (int i = rows - 1; i >= 0; i--) {
            bottomTable.removeRow(i);
        }
        historyTopTable.getSelectedRow();
        int row_sel = historyTopTable.getSelectedRow();
        String col_Value = (String) historyTopTable.getValueAt(row_sel, 0);
        Databse_HistoryOnDate object = new Databse_HistoryOnDate();
        // System.out.println(col_Value);
        Object[][] tableRow_HistoryInfo = object.get_HistoryOnDate(SettingsXml.getUser(), col_Value);
        int len = tableRow_HistoryInfo.length;
        String[] columnNames = null;
        if (historyTopTable.getValueAt(row_sel, 1).toString().equals("Restore")) {
            columnNames = new String[] { "StartTime", "FileName", "FilePath", "Size", "Transfer Time", "TransferRate", "Restored To" };
        } else {
            columnNames = new String[] { "StartTime", "FileName", "FilePath", "Size", "Transfer Time", "TransferRate", "OtherDetails" };
        }
        for (int counter = 0; counter < len; counter++) {
            String file = tableRow_HistoryInfo[counter][1].toString();
            String fileName = file.substring(file.replace("\\", "/").lastIndexOf("/") + 1);
            String dirName = file.substring(0, file.replace("\\", "/").lastIndexOf("/"));
            long fileSize = Long.parseLong(tableRow_HistoryInfo[counter][2].toString());
            long transferTime = Long.parseLong(tableRow_HistoryInfo[counter][3].toString());
            String details = (tableRow_HistoryInfo[counter][5] == null) ? tableRow_HistoryInfo[counter][4].toString() : tableRow_HistoryInfo[counter][5].toString();
            float transferRate = 0;
            if (transferTime != 0) {
                transferRate = (float) fileSize * 1000 / transferTime * 1024;
            }
            bottomTable.addRow(new Object[] { tableRow_HistoryInfo[counter][0], fileName, dirName, fileSize, transferTime, transferRate, details });
        }
        for (int i = 0; i < columnNames.length; i++) {
            historyBottomTable.getColumnModel().getColumn(i).setHeaderValue(columnNames[i]);
        }
    } catch (Exception e) {
        e.printStackTrace();
    // System.out.println("History Details Row selected Error "+e);
    }
}
