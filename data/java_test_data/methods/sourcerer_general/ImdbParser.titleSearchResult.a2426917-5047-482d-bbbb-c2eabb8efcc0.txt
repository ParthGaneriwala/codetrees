private ImdbSearchResult titleSearchResult(String group) {
    Pattern pattern = Pattern.compile("[<img[^>]+><br>]*<a\\shref=\"[http://www.imdb.com]*/title/tt(\\d{7})/\"[^>]+>([^<]+)</a>\\s\\((\\d{4})\\)\\s*([()A-Z]{0,6})(.*)\\z");
    Matcher matcher = pattern.matcher(group);
    String title;
    String year;
    String id;
    MovieType type;
    ImdbSearchResult result = null;
    if (matcher.find()) {
        id = matcher.group(1);
        if (id == null) {
            System.out.println("\t(ImdbParser) The id of html = " + html + " was not found please check regular expresion");
        }
        title = matcher.group(2);
        year = matcher.group(3);
        title = CONST.fixHtmlCharacters(title);
        if (title.startsWith("\"") && title.endsWith("\"")) {
            title = title.substring(1, title.length() - 1);
            if (matcher.group(4).equals("(mini)"))
                type = MovieType.miniseries;
            else
                type = MovieType.tvseries;
        } else if (matcher.group(4).equals("(TV)"))
            type = MovieType.tvmovie;
        else if (matcher.group(4).equals("(V)"))
            type = MovieType.videomovie;
        else if (matcher.group(4).equals("(VG)"))
            // Video games will be skipped
            return null;
        else
            type = MovieType.film;
        String[] altTitles = altTitleSearchResult(matcher.group(5));
        result = new ImdbSearchResult(new MovieInfo(type, title, year, altTitles), id);
    }
    return result;
}
