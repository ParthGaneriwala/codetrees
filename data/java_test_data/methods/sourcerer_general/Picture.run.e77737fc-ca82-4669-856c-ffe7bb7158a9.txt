// 
// Runnable interface
// 
public void run() {
    String suffix;
    File file;
    byte[] data;
    InputStream in;
    FileOutputStream out;
    int read;
    URL url;
    Image image;
    suffix = mURL.toString();
    Thread.currentThread().setName(suffix);
    suffix = suffix.substring(suffix.lastIndexOf("."));
    try {
        file = File.createTempFile("thumbelina", suffix);
        file.deleteOnExit();
        data = new byte[TRANSFER_SIZE];
        try {
            in = mURL.openStream();
            try {
                out = new FileOutputStream(file);
                try {
                    while (-1 != (read = in.read(data, 0, data.length))) out.write(data, 0, read);
                    mLocalFile = file;
                    image = getImage();
                    setExtent(new Point(image.getWidth(this), image.getHeight(this)));
                    if (null != mListener)
                        mListener.pictureReceived(this);
                } finally {
                    out.close();
                }
            } catch (FileNotFoundException fnfe) {
                fnfe.printStackTrace();
            } finally {
                in.close();
            }
        } catch (FileNotFoundException fnfe) {
            System.err.println("broken link " + fnfe.getMessage() + " ignored");
        }
    } catch (IOException ioe) {
        System.err.println("I/O problem: " + ioe.getMessage());
        file = null;
    }
}
