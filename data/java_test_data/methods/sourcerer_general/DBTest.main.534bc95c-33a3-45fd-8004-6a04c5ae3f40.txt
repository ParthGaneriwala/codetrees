public static void main(String[] args) {
    boolean schreiben = true;
    boolean lesen = true;
    // ---------------------------------------------------------------
    System.out.println(">>> Start >>>\n");
    // ---------------------------------------------------------------
    long startZeit = System.nanoTime();
    Database colibriDB = null;
    if (schreiben) {
        try {
            colibriDB = new Database("colibri");
        } catch (Exception e3) {
            e3.printStackTrace();
            System.exit(1);
        }
        try {
            colibriDB.createTable("Stammdaten");
        } catch (Exception e2) {
            e2.printStackTrace();
        }
        Table table = colibriDB.getTable("Stammdaten");
        table.addColumn("Name", String.class);
        table.addColumn("Vorname", String.class);
        table.addColumn("Alter", Integer.class);
        table.addColumn("Personalnummer", Integer.class);
        try {
            String[] namen = { "Mircea", "Bauer", "M�ller", "J�ger" };
            String[] vornamen = { "Horia", "Sabine", "Bernd", "Torsten" };
            for (int i = 1; i <= 10; i++) {
                table.addRow(new Object[] { namen[(int) (Math.random() * 4)], vornamen[(int) (Math.random() * 4)], (int) (Math.random() * 40 + 20), (int) (Math.random() * 5000 + 1) });
                // TODO: Horia implementieren
                StringBuffer sql = new StringBuffer("INSERT INTO Stammdaten ");
                sql.append("(Name, Vorname, Personalnummer, Alter) ");
                sql.append("VALUES(?, ?, ?, ?)");
                Object[] newRow = { "Amareto", "Sabrina", new Integer(28), new Integer(87654) };
                int result = colibriDB.executeUpdate(sql.toString(), newRow);
            }
        } catch (Exception e1) {
            e1.printStackTrace();
            System.exit(1);
        }
        try {
            colibriDB.storeDatabase("C:/");
        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }
    }
    // -----------------------------------------------------------------------------------
    colibriDB = null;
    System.gc();
    if (lesen) {
        try {
            colibriDB = new Database("colibri");
        } catch (Exception e1) {
            e1.printStackTrace();
        }
        try {
            colibriDB.loadDatabase("C:/");
        } catch (IOException e) {
            e.printStackTrace();
        }
        // Table test = db3.getTable("Stammdaten");
        // test.printRows();
        String sql = "SELECT Vorname, Alter, Name, Personalnummer FROM Stammdaten WHERE Alter > 31";
        ResultSet rs = null;
        try {
            rs = colibriDB.executeQuery(sql);
        } catch (SQLException e1) {
            e1.printStackTrace();
        }
        // Ergebnisliste durchlaufen
        try {
            while (rs.next()) {
                String vorname = rs.getString(1);
                int alter = rs.getInt(2);
                String name = rs.getString(3);
                int persoNr = rs.getInt(4);
                System.out.println("> " + name + ", " + vorname + ", " + alter + ", " + persoNr);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    long endeZeit = System.nanoTime();
    // ---------------------------------------------------------------
    System.out.println("\n<<< Ende <<<<");
    System.out.println("\n-> Zeitdauer(ms): " + (endeZeit - startZeit) / 1000000);
// ---------------------------------------------------------------
}
