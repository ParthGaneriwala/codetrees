public void testExecute() throws ConstraintViolationException {
    User bob = new User("bob", "");
    // Should have neither unExecutables nor reExecutabls.
    assertFalse(history.hasUnExecutable());
    assertFalse(history.hasReExecutable());
    // Execute a command
    DefectCommand command = new AddDefectCommand("title", bob);
    history.execute(command);
    // Should have only unExecutables
    assertTrue(history.hasUnExecutable());
    assertFalse(history.hasReExecutable());
    // UnExecute the command
    history.unExecute();
    // Should have only reExecutables
    assertFalse(history.hasUnExecutable());
    assertTrue(history.hasReExecutable());
    // ReExecute the command
    history.reExecute();
    // Should have only unExecutables
    assertTrue(history.hasUnExecutable());
    assertFalse(history.hasReExecutable());
    // Execute another command
    DefectCommand command2 = new AddDefectCommand("title", bob);
    history.execute(command2);
    // Should have only unExecutables
    assertTrue(history.hasUnExecutable());
    assertFalse(history.hasReExecutable());
    // UnExecute the command
    history.unExecute();
    // Should have both un- and re-Executables
    assertTrue(history.hasUnExecutable());
    assertTrue(history.hasReExecutable());
}
