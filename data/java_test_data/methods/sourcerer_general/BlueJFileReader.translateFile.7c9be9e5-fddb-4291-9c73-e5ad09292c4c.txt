private static void translateFile(File template, File dest, Dictionary translations, boolean replaceTabs, Charset templateCharset) throws IOException {
    InputStreamReader in = null;
    FileWriter out = null;
    String newline = System.getProperty("line.separator");
    try {
        in = new InputStreamReader(new FileInputStream(template), templateCharset);
        out = new FileWriter(dest);
        for (int c; (c = in.read()) != -1; ) {
            if (c == '$') {
                StringBuffer buf = new StringBuffer();
                while (((c = in.read()) != -1) && Character.isLetter((char) c)) {
                    buf.append((char) c);
                }
                String key = buf.toString();
                if (key.length() != 0) {
                    String value = (String) translations.get(key);
                    if (value == null) {
                        out.write('$');
                        value = key;
                    }
                    // If there are tabs, replace
                    if (replaceTabs && value.indexOf(TAB_CHAR) != -1) {
                        value = convertTabsToSpaces(value);
                    }
                    out.write(value);
                } else if (c != '$') {
                    // let '$$' be an escape for single $
                    out.write('$');
                }
                if (c != -1) {
                    out.write(c);
                }
            } else if (replaceTabs && c == TAB_CHAR) {
                out.write(tabAsSpace());
            } else if (c == '\r') {
                // The template is encoded with CR+LF line endings
                int nc = in.read();
                if (nc == '\n') {
                    out.write(newline);
                } else {
                    out.write(c);
                    if (nc != -1) {
                        out.write(nc);
                    }
                }
            } else {
                out.write(c);
            }
        }
        in.close();
        out.close();
    } catch (IOException e) {
        if (in != null)
            in.close();
        if (out != null) {
            out.close();
        }
        throw e;
    }
}
