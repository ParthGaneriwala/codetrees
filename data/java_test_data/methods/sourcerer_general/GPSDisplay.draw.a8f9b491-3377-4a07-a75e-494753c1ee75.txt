public void draw(Graphics2D g) {
    if (mState != State.INACTIVE) {
        int displayWidth = mMapDisplay.getWidth();
        int displayHeight = mMapDisplay.getHeight();
        g.setColor(Color.WHITE);
        g.setComposite(makeComposite((float) 0.80));
        g.fillRect(0, 0, displayWidth, displayHeight);
        if (mInfoText != null && !mInfoText.equals("")) {
            g.setFont(new Font("Helvetica", Font.BOLD, 18));
            g.setColor(Color.GRAY);
            FontMetrics metrics = g.getFontMetrics();
            int width = metrics.stringWidth(mInfoText);
            if (width > displayWidth) {
                int countWidth = 0;
                int y = TEXT_START_Y;
                int height = metrics.getHeight() + 2;
                String[] split = mInfoText.split(" ");
                StringBuffer buf = new StringBuffer();
                String newStr = null;
                for (String str : split) {
                    int curWidth = metrics.stringWidth(str + " ");
                    if ((countWidth += curWidth) > displayWidth) {
                        newStr = buf.toString();
                        g.drawString(newStr, (displayWidth - metrics.stringWidth(newStr)) / 2, y);
                        buf = new StringBuffer();
                        y += height;
                        countWidth = 0;
                    }
                    buf.append(str + " ");
                }
                // draw the remainder
                newStr = buf.toString();
                g.drawString(newStr, (displayWidth - metrics.stringWidth(newStr)) / 2, y);
            } else
                g.drawString(mInfoText, (displayWidth - width) / 2, 100);
        }
    }
    GeoResoluteRectangle rect = mViewArea.getVisibleRectangle();
    double resolution = rect.getResolution().doubleValue();
    int count = 0;
    for (GPSPoint pnt : mWaypoints) pnt.draw(g, rect.getRectangle(), mMapDisplay, resolution, count++);
    for (GPSPoint pnt : mMeetingPoints) pnt.draw(g, rect.getRectangle(), mMapDisplay, resolution, count++);
    for (GPSPoint pnt : mPoints) pnt.draw(g, rect.getRectangle(), mMapDisplay, resolution);
}
