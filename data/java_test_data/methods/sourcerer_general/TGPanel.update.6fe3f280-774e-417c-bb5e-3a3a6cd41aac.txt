public synchronized void update(Graphics g) {
    Dimension d = getSize();
    if ((offscreen == null) || (d.width != offscreensize.width) || (d.height != offscreensize.height)) {
        offscreen = createImage(d.width, d.height);
        offscreensize = d;
        offgraphics = offscreen.getGraphics();
        processGraphMove();
        findMouseOver();
        fireMovedEvent();
    }
    offgraphics.setColor(BACK_COLOR);
    offgraphics.fillRect(0, 0, d.width, d.height);
    synchronized (this) {
        paintListeners = (Vector) paintListeners.clone();
    }
    for (int i = 0; i < paintListeners.size(); i++) {
        TGPaintListener pl = (TGPaintListener) paintListeners.elementAt(i);
        pl.paintFirst(offgraphics);
    }
    TGForEachEdge fee = new TGForEachEdge() {

        public void forEachEdge(Edge edge) {
            edge.paint(offgraphics, TGPanel.this);
        }
    };
    visibleLocality.forAllEdges(fee);
    for (int i = 0; i < paintListeners.size(); i++) {
        TGPaintListener pl = (TGPaintListener) paintListeners.elementAt(i);
        pl.paintAfterEdges(offgraphics);
    }
    TGForEachNode fen = new TGForEachNode() {

        public void forEachNode(Node node) {
            node.paint(offgraphics, TGPanel.this);
        }
    };
    visibleLocality.forAllNodes(fen);
    if (mouseOverE != null) {
        // Make the edge the mouse is over appear on top.
        mouseOverE.paint(offgraphics, this);
        mouseOverE.from.paint(offgraphics, this);
        mouseOverE.to.paint(offgraphics, this);
    }
    if (select != null) {
        // Make the selected node appear on top.
        select.paint(offgraphics, this);
    }
    if (mouseOverN != null) {
        // Make the node the mouse is over appear on top.
        mouseOverN.paint(offgraphics, this);
    }
    for (int i = 0; i < paintListeners.size(); i++) {
        TGPaintListener pl = (TGPaintListener) paintListeners.elementAt(i);
        pl.paintLast(offgraphics);
    }
    // Paint any components that have been added to this panel
    paintComponents(offgraphics);
    g.drawImage(offscreen, 0, 0, null);
}
