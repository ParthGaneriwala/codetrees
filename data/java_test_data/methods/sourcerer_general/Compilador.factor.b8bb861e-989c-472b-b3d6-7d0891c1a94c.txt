private sintetizados factor(boolean porValorH, String idPredefH) throws ErrorLexico, ErrorArchivo, ErrorSintactico, ErrorSemantico, Exception {
    String idH;
    entrada en;
    sintetizados s = new sintetizados();
    sintetizados sE, sFac;
    if (numeroTokenActual == Token.IDENTIFICADOR) {
        idH = tokenActual.getLexema();
        en = TS.getEntrada(idH);
        if (en != null) {
            match(Token.IDENTIFICADOR);
            // if ((en instanceof Variable) && (((Variable)en).getTipo() instanceof Arreglo)) {
            // generador.genInst1ArgCte("", generador.APCT, 0);
            // }
            s = factorFac(idH, porValorH, idPredefH);
        } else {
            throw new ErrorSemantico(ErrorSemantico.ID_NO_DEC, getNumeroLinea(), getNumeroColumna(), idH);
        }
    } else if (numeroTokenActual == Token.NUMERO) {
        if (!porValorH) {
            throw new ErrorSemantico(ErrorSemantico.PARAM_REF, getNumeroLinea(), getNumeroColumna());
        } else {
            s.setTipoS(new Entero(TS.getNivelActual()));
            generador.genInst1ArgCte("", generador.APCT, Integer.parseInt(tokenActual.getLexema()));
            match(Token.NUMERO);
        }
    } else if (numeroTokenActual == Token.PARENTESISABRE) {
        match(Token.PARENTESISABRE);
        if (!porValorH) {
            throw new ErrorSemantico(ErrorSemantico.EXP_POR_VALOR, getNumeroLinea(), getNumeroColumna());
        } else {
            sE = expresion(porValorH, idPredefH);
            match(Token.PARENTESISCIERRA);
            s.setTipoS(sE.getTipoS());
        }
    } else {
        if (!porValorH) {
            throw new ErrorSemantico(ErrorSemantico.EXP_POR_VALOR, getNumeroLinea(), getNumeroColumna());
        } else {
            match(Token.NOT);
            sFac = factor(porValorH, idPredefH);
            if (sFac.getTipoS() instanceof Booleano) {
                s.setTipoS(sFac.getTipoS());
                generador.genInstSinArg("", generador.NEGA);
            } else {
                String t = ErrorSemantico.construirMsj(sFac.getTipoS().toString());
                throw new ErrorSemantico(ErrorSemantico.TIPO_INV_NOT, getNumeroLinea(), getNumeroColumna(), t);
            }
        }
    }
    return s;
}
