void Modified_Berlekamp_Massey() {
    int n, L, L2, k, d, i;
    int[] psi = new int[MAXDEG];
    int[] psi2 = new int[MAXDEG];
    int[] D = new int[MAXDEG];
    int[] gamma = new int[MAXDEG];
    /* initialize Gamma, the erasure locator polynomial */
    init_gamma(gamma);
    /* initialize to z */
    copy_poly(D, gamma);
    mul_z_poly(D);
    copy_poly(psi, gamma);
    k = -1;
    L = NErasures;
    for (n = NErasures; n < 8; n++) {
        d = compute_discrepancy(psi, synBytes, L, n);
        if (d != 0) {
            /* psi2 = psi - d*D */
            for (i = 0; i < MAXDEG; i++) psi2[i] = psi[i] ^ gmult(d, D[i]);
            if (L < (n - k)) {
                L2 = n - k;
                k = n - L;
                /* D = scale_poly(ginv(d), psi); */
                for (i = 0; i < MAXDEG; i++) D[i] = gmult(psi[i], ginv(d));
                L = L2;
            }
            /* psi = psi2 */
            for (i = 0; i < MAXDEG; i++) psi[i] = psi2[i];
        }
        mul_z_poly(D);
    }
    for (i = 0; i < MAXDEG; i++) Lambda[i] = psi[i];
    compute_modified_omega();
}
