public static String buildUrl(String action, String namespace, String method, Map params, String scheme, String type, String portletMode, String windowState, boolean includeContext, boolean encodeResult) {
    StringBuffer resultingAction = new StringBuffer();
    RenderRequest request = PortletActionContext.getRenderRequest();
    RenderResponse response = PortletActionContext.getRenderResponse();
    LOG.debug("Creating url. Action = " + action + ", Namespace = " + namespace + ", Type = " + type);
    namespace = prependNamespace(namespace, portletMode);
    if (!TextUtils.stringSet(portletMode)) {
        portletMode = PortletActionContext.getRenderRequest().getPortletMode().toString();
    }
    String result = null;
    int paramStartIndex = action.indexOf('?');
    if (paramStartIndex > 0) {
        String value = action;
        action = value.substring(0, value.indexOf('?'));
        String queryStr = value.substring(paramStartIndex + 1);
        StringTokenizer tok = new StringTokenizer(queryStr, "&");
        while (tok.hasMoreTokens()) {
            String paramVal = tok.nextToken();
            String key = paramVal.substring(0, paramVal.indexOf('='));
            String val = paramVal.substring(paramVal.indexOf('=') + 1);
            params.put(key, new String[] { val });
        }
    }
    if (TextUtils.stringSet(namespace)) {
        resultingAction.append(namespace);
        if (!action.startsWith("/") && !namespace.endsWith("/")) {
            resultingAction.append("/");
        }
    }
    resultingAction.append(action);
    if (TextUtils.stringSet(method)) {
        resultingAction.append("!").append(method);
    }
    LOG.debug("Resulting actionPath: " + resultingAction);
    params.put(PortletActionConstants.ACTION_PARAM, new String[] { resultingAction.toString() });
    PortletURL url = null;
    if ("action".equalsIgnoreCase(type)) {
        LOG.debug("Creating action url");
        url = response.createActionURL();
    } else {
        LOG.debug("Creating render url");
        url = response.createRenderURL();
    }
    params.put(PortletActionConstants.MODE_PARAM, portletMode);
    url.setParameters(ensureParamsAreStringArrays(params));
    if ("HTTPS".equalsIgnoreCase(scheme)) {
        try {
            url.setSecure(true);
        } catch (PortletSecurityException e) {
            LOG.error("Cannot set scheme to https", e);
        }
    }
    try {
        url.setPortletMode(getPortletMode(request, portletMode));
        url.setWindowState(getWindowState(request, windowState));
    } catch (Exception e) {
        LOG.error("Unable to set mode or state:" + e.getMessage(), e);
    }
    result = url.toString();
    // TEMP BUG-WORKAROUND FOR DOUBLE ESCAPING OF AMPERSAND
    if (result.indexOf("&amp;") >= 0) {
        result = result.replace("&amp;", "&");
    }
    return result;
}
