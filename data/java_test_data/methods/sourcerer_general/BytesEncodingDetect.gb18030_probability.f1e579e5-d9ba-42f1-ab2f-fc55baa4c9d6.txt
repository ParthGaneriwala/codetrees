int gb18030_probability(byte[] rawtext) {
    int i, rawtextlen = 0;
    int dbchars = 1, gbchars = 1;
    long gbfreq = 0, totalfreq = 1;
    float rangeval = 0, freqval = 0;
    int row, column;
    // Stage 1: Check to see if characters fit into acceptable ranges
    rawtextlen = rawtext.length;
    for (i = 0; i < rawtextlen - 1; i++) {
        // System.err.println(rawtext[i]);
        if (rawtext[i] >= 0) {
        // asciichars++;
        } else {
            dbchars++;
            if (// Original GB range
            (byte) 0xA1 <= rawtext[i] && rawtext[i] <= (byte) 0xF7 && i + 1 < rawtextlen && (byte) 0xA1 <= rawtext[i + 1] && rawtext[i + 1] <= (byte) 0xFE) {
                gbchars++;
                totalfreq += 500;
                row = rawtext[i] + 256 - 0xA1;
                column = rawtext[i + 1] + 256 - 0xA1;
                // System.out.println("original row " + row + " column " + column);
                if (GBFreq[row][column] != 0) {
                    gbfreq += GBFreq[row][column];
                } else if (15 <= row && row < 55) {
                    gbfreq += 200;
                }
            } else if ((byte) 0x81 <= rawtext[i] && rawtext[i] <= (byte) 0xFE && // Extended GB range
            i + 1 < rawtextlen && (((byte) 0x80 <= rawtext[i + 1] && rawtext[i + 1] <= (byte) 0xFE) || ((byte) 0x40 <= rawtext[i + 1] && rawtext[i + 1] <= (byte) 0x7E))) {
                gbchars++;
                totalfreq += 500;
                row = rawtext[i] + 256 - 0x81;
                if (0x40 <= rawtext[i + 1] && rawtext[i + 1] <= 0x7E) {
                    column = rawtext[i + 1] - 0x40;
                } else {
                    column = rawtext[i + 1] + 256 - 0x40;
                }
                // System.out.println("extended row " + row + " column " + column + " rawtext[i] " + rawtext[i]);
                if (GBKFreq[row][column] != 0) {
                    gbfreq += GBKFreq[row][column];
                }
            } else if ((byte) 0x81 <= rawtext[i] && rawtext[i] <= (byte) 0xFE && // Extended GB range
            i + 3 < rawtextlen && (byte) 0x30 <= rawtext[i + 1] && rawtext[i + 1] <= (byte) 0x39 && (byte) 0x81 <= rawtext[i + 2] && rawtext[i + 2] <= (byte) 0xFE && (byte) 0x30 <= rawtext[i + 3] && rawtext[i + 3] <= (byte) 0x39) {
                gbchars++;
            /*
           * totalfreq += 500; row = rawtext[i] + 256 - 0x81; if (0x40 <= rawtext[i+1] && rawtext[i+1] <= 0x7E) { column =
           * rawtext[i+1] - 0x40; } else { column = rawtext[i+1] + 256 - 0x40; } //System.out.println("extended row " + row + "
           * column " + column + " rawtext[i] " + rawtext[i]); if (GBKFreq[row][column] != 0) { gbfreq += GBKFreq[row][column]; }
           */
            }
            i++;
        }
    }
    rangeval = 50 * ((float) gbchars / (float) dbchars);
    freqval = 50 * ((float) gbfreq / (float) totalfreq);
    // For regular GB files, this would give the same score, so I handicap it slightly
    return (int) (rangeval + freqval) - 1;
}
