public boolean stageIn() {
    String key = "";
    String line;
    try {
        OutputStream stdin = null;
        InputStream stdout = null;
        BufferedReader brCleanUp = null;
        // launch EXE and grab stdin/stdout and stderr
        Process process = Runtime.getRuntime().exec("cmd.exe");
        // public Process exec(String [] cmdArray);
        stdin = process.getOutputStream();
        stdout = process.getInputStream();
        // launch grid client in hidden command
        line = "\"" + GlobalVar.getGenesisDir() + "\\grid.exe\"" + "\n";
        // shell
        // System.out.println(line);
        stdin.write(line.getBytes());
        stdin.flush();
        // Get output from grid
        // brCleanUp = new BufferedReader(new InputStreamReader(stdout));
        line = "cd " + GlobalVar.getWorkingDir() + " \n";
        // System.out.println(line);
        stdin.write(line.getBytes());
        stdin.flush();
        line = "mkdir CondorTemp \n";
        stdin.write(line.getBytes());
        stdin.flush();
        line = "cd CondorTemp \n";
        stdin.write(line.getBytes());
        stdin.flush();
        if (GlobalVar.getInitialDir() != null) {
            line = "mkdir " + GlobalVar.getInitialDir() + " \n";
            stdin.write(line.getBytes());
            stdin.flush();
            line = "cd " + GlobalVar.getInitialDir() + " \n";
            stdin.write(line.getBytes());
            stdin.flush();
        }
        // stage data files into directory
        for (int i = 0; i < filenames.size(); i++) {
            line = "cp --local-src " + filenames.get(i) + " ./ \n";
            stdin.write(line.getBytes());
            stdin.flush();
        }
        line = "ls \n";
        stdin.write(line.getBytes());
        stdin.flush();
        int temp = 0;
        int tempByte;
        while (stdout.available() > 0) {
            temp = stdout.available();
            tempByte = stdout.read();
            System.out.print(tempByte);
        }
    // may need to catch output so program does not stall
    // while ((line = brCleanUp.readLine()) != null) {
    // System.out.println ("[Stdout] " + line);
    // line = brCleanUp.readLine();
    // Know exact format of status string to pull necessary information out
    // System.out.println(line);
    // break;
    // }
    } catch (Exception e) {
        e.printStackTrace();
        return false;
    }
    System.out.println("Data Staged In");
    // Transfer Succeeded
    return true;
}
