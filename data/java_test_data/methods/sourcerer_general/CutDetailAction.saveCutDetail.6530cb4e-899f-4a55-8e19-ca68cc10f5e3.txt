public String saveCutDetail() throws Exception {
    System.out.println("CutDetailAction -> saveCutDetail() ");
    Long idCutProcess = (Long) getSession().getAttribute("idCutProcess");
    cutProcess = cutProcessManager.get(idCutProcess);
    PantDesign pantDesign = null;
    if (cutDetail.getId() != null) {
        if (!cutDetail.getPantDesign().getModel().getId().equals("-1") && !cutDetail.getPantDesign().getModelSize().getId().equals("-1") && !cutDetail.getPantDesign().getMaterial().getId().equals("-1")) {
            CutDetail cutDetailAux = cutDetailManager.get(cutDetail.getId());
            List<PantDesign> listPantDesign = (List<PantDesign>) pantDesignManager.findByModel(cutDetail.getPantDesign().getModel().getId(), cutDetail.getPantDesign().getModelSize().getId(), cutDetail.getPantDesign().getMaterial().getId());
            if (listPantDesign != null && listPantDesign.size() > 0) {
                pantDesign = listPantDesign.get(0);
            } else {
                pantDesign = new PantDesign();
                pantDesign.setModel(modelManager.get(cutDetail.getPantDesign().getModel().getId()));
                pantDesign.setModelSize(modelSizeManager.get(cutDetail.getPantDesign().getModelSize().getId()));
                pantDesign.setMaterial(materialManager.get(cutDetail.getPantDesign().getMaterial().getId()));
                pantDesign = pantDesignManager.save(pantDesign);
            }
            cutDetailAux.setPantDesign(pantDesign);
            cutDetailManager.save(cutDetailAux);
            String key = "cutDetail.updated";
            saveMessage(getText(key));
        }
    } else {
        if (!cutDetail.getPantDesign().getModel().getId().equals("-1") && !cutDetail.getPantDesign().getModelSize().getId().equals("-1") && !cutDetail.getPantDesign().getMaterial().getId().equals("-1")) {
            CutDetail cutDetailNew = new CutDetail();
            List<PantDesign> listPantDesign = pantDesignManager.findByModel(modelManager.get(cutDetail.getPantDesign().getModel().getId()).getId(), modelSizeManager.get(cutDetail.getPantDesign().getModelSize().getId()).getId(), materialManager.get(cutDetail.getPantDesign().getMaterial().getId()).getId());
            if (listPantDesign != null && listPantDesign.size() > 0) {
                pantDesign = listPantDesign.get(0);
            } else {
                pantDesign = new PantDesign();
                pantDesign.setModel(modelManager.get(cutDetail.getPantDesign().getModel().getId()));
                pantDesign.setModelSize(modelSizeManager.get(cutDetail.getPantDesign().getModelSize().getId()));
                pantDesign.setMaterial(materialManager.get(cutDetail.getPantDesign().getMaterial().getId()));
                pantDesign = pantDesignManager.save(pantDesign);
            }
            cutDetailNew.setPantDesign(pantDesign);
            cutDetailNew.setQuantity(cutDetail.getQuantity());
            cutDetailNew.setCutProcess(cutProcess);
            cutDetailNew.setQuantity(1);
            cutDetailNew.setPriceXclotheFail(0.0D);
            cutDetailNew.setQuantity(1);
            cutDetailNew.setQuantityFail(0);
            cutDetailNew.setPriceXclothes(0.0D);
            cutDetailNew.setQuantityRealClothes(0);
            cutDetailNew.setQuantityRealClothesCurrent(0);
            cutDetailNew.setTotalAmount(0.0D);
            cutDetailNew.setTotalAmountClothes(0.0D);
            cutDetailNew.setTotalAmountFailClothes(0.0D);
            cutDetailNew.setQuantityGet(0);
            cutDetailNew.setCurrentAmount(0.0D);
            cutDetailNew.setModify(true);
            cutDetailManager.save(cutDetailNew);
            saveMessage(getText("cutDetailAction.saveCutDetail"));
        } else {
            errorMessage(getText("cutDetailAction.errorCutDetail"));
            return ERROR;
        }
    }
    return SUCCESS;
}
