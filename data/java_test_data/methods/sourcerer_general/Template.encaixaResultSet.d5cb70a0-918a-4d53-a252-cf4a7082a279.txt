@SuppressWarnings("unchecked")
public void encaixaResultSet(List resultado) {
    encaixaResultSet(resultado, 0, resultado.size());
    if (true)
        return;
    // ini nope
    try {
        String templateRs = "";
        Matcher mat = patRs.matcher(template);
        if (mat.find()) {
            templateRs = mat.group(1);
            StringBuilder sb = new StringBuilder();
            String item;
            int tot = resultado.size();
            for (int i = 0; i < tot; i++) {
                Object obj = resultado.get(i);
                Class cls = obj.getClass();
                item = templateRs;
                Matcher matCol = patRsItens.matcher(templateRs);
                while (matCol.find()) {
                    try {
                        String chave = matCol.group(1);
                        Method meth = cls.getMethod(chave);
                        Object retobj = meth.invoke(obj);
                        item = atribuiRsString(item, retobj.toString(), chave);
                    } catch (NoSuchMethodException e) {
                        System.out.println("Template.encaixaResultSet() Atencao, o metodo nao existe " + e.getMessage());
                    }
                }
                // procurar pelas imagens
                matCol = patRsImagens.matcher(item);
                while (matCol.find()) {
                    try {
                        String chave = matCol.group(1);
                        Object retobj = cls.getMethod(chave).invoke(obj);
                        item = matCol.replaceAll(substituiSrcImagem(matCol.group(2), retobj.toString()));
                    // item = atribuiRsString(item,retobj.toString(),chave);
                    } catch (NoSuchMethodException e) {
                        System.out.println("Template.encaixaResultSet() Atencao, o metodo nao existe " + e.getMessage());
                    }
                }
                if (rsItemCustomizado != null) {
                    item = rsItemCustomizado.tratar(obj, item);
                }
                sb.append(item);
            }
            template = mat.replaceAll(StringUtils.tratarCaracteresEspeciaisRegex(sb.toString()));
        }
    } catch (Exception e) {
        System.out.println("Erro no plugin.Template");
        e.printStackTrace();
    }
}
