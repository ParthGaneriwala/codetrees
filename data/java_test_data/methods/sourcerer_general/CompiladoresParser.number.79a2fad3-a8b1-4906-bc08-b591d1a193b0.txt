// $ANTLR start "number"
public final CompiladoresParser.number_return number() throws RecognitionException {
    CompiladoresParser.number_return retval = new CompiladoresParser.number_return();
    retval.start = input.LT(1);
    CommonTree root_0 = null;
    Token INTEGER151 = null;
    CommonTree INTEGER151_tree = null;
    try {
        dbg.enterRule(getGrammarFileName(), "number");
        if (getRuleLevel() == 0) {
            dbg.commence();
        }
        incRuleLevel();
        dbg.location(196, 1);
        try {
            // /home/CIN/fmm/Desktop/grammar/Compiladores.g:196:10: ( INTEGER )
            dbg.enterAlt(1);
            // /home/CIN/fmm/Desktop/grammar/Compiladores.g:196:12: INTEGER
            {
                root_0 = (CommonTree) adaptor.nil();
                dbg.location(196, 12);
                INTEGER151 = (Token) match(input, INTEGER, FOLLOW_INTEGER_in_number1622);
                INTEGER151_tree = (CommonTree) adaptor.create(INTEGER151);
                adaptor.addChild(root_0, INTEGER151_tree);
            }
            retval.stop = input.LT(-1);
            retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
            retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);
        } finally {
        }
        dbg.location(196, 19);
    } finally {
        dbg.exitRule(getGrammarFileName(), "number");
        decRuleLevel();
        if (getRuleLevel() == 0) {
            dbg.terminate();
        }
    }
    return retval;
}
