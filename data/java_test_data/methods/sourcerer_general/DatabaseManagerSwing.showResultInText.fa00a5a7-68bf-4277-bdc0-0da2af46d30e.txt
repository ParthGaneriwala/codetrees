private void showResultInText() {
    Object[] col = gResult.getHead();
    int width = col.length;
    int[] size = new int[width];
    Vector data = gResult.getData();
    Object[] row;
    int height = data.size();
    for (int i = 0; i < width; i++) {
        size[i] = col[i].toString().length();
    }
    for (int i = 0; i < height; i++) {
        row = (Object[]) data.elementAt(i);
        for (int j = 0; j < width; j++) {
            String item = ((row[j] == null) ? "" : row[j].toString());
            int l = item.length();
            if (l > size[j]) {
                size[j] = l;
            }
        }
    }
    StringBuffer b = new StringBuffer();
    for (int i = 0; i < width; i++) {
        b.append(col[i]);
        for (int l = col[i].toString().length(); l <= size[i]; l++) {
            b.append(' ');
        }
    }
    b.append(NL);
    for (int i = 0; i < width; i++) {
        for (int l = 0; l < size[i]; l++) {
            b.append('-');
        }
        b.append(' ');
    }
    b.append(NL);
    for (int i = 0; i < height; i++) {
        row = (Object[]) data.elementAt(i);
        for (int j = 0; j < width; j++) {
            String item = ((row[j] == null) ? "" : row[j].toString());
            b.append(item);
            for (int l = item.length(); l <= size[j]; l++) {
                b.append(' ');
            }
        }
        b.append(NL);
    }
    // b.append(NL + height + " row(s) in " + lTime + " ms");
    // There is no reason why this report should be text-output-specific.
    // Moving it to bottom of the setWaiting method (where the report
    // gets written to the status line).
    // I'm only doing the rowcount now.  Add the time report there if
    // you are so inclined.
    txtResult.setText(b.toString());
}
