public void addPlate(Plate plate) {
    if (plate.contains(topLeft)) {
        if (leftStack.size() > 1) {
            leftStack.push(plate);
            Stack<Plate> temp = checkColor(leftStack);
            if (temp.isEmpty()) {
                score++;
                // update the score at the GUI view
                observ.update(this, "score");
                topLeft.y += (levelPlateNum - 1) * Plate.PLATE_HEIGHT;
            } else {
                while (!temp.isEmpty()) leftStack.push(temp.pop());
                leftStack.pop();
                add(leftStack, plate, topLeft);
                if (topLeft.y < PlateSky.getInstance().getLeastHeight() + Plate.PLATE_HEIGHT)
                    observ.update(this, "lost Score:" + score);
            }
        } else
            // the stack is empty or size = 1
            add(leftStack, plate, topLeft);
    } else {
        // plate.contains(topRight)
        if (rightStack.size() > 1) {
            rightStack.push(plate);
            Stack<Plate> temp = checkColor(rightStack);
            if (temp.isEmpty()) {
                score++;
                observ.update(this, "score");
                topRight.y += (levelPlateNum - 1) * Plate.PLATE_HEIGHT;
            } else {
                while (!temp.isEmpty()) rightStack.push(temp.pop());
                rightStack.pop();
                add(rightStack, plate, topRight);
                if (topRight.y < PlateSky.getInstance().getLeastHeight() + Plate.PLATE_HEIGHT)
                    observ.update(this, "lost Score:" + score);
            }
        } else
            // the stack is empty or size = 1
            add(rightStack, plate, topRight);
    }
}
