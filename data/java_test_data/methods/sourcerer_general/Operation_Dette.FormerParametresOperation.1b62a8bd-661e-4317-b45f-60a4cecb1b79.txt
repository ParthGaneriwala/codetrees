public Parametres FormerParametresOperation() {
    Parametres parametres;
    if (pret.getValue()) {
        /*
      Operation_Pret:
        Date Date = date;
        Boolean Verifie = verifie;
        OperationFactoryInfos.TypeOperation Typeoperation = OPERATION_PRET;

        List<CategorieInfos> Categories = void;
        List<ProprietaireInfos> Proprietaires = void;
        List<Compte> Comptes = compte debourseur, compte receveur;
        List<String> Libelles = new ArrayList<String>() = void;
        List<Dette> Dettes = new ArrayList<Dette>() = void;
        List<MonnaieInfos> Monnaies = new ArrayList<MonnaieInfos>() = void;
        List<Float> Sommes = new ArrayList<Float>() = somme concernee;
      */
        parametres = new Parametres(getDate(), verifie.getValue(), OperationFactoryInfos.TypeOperation.OPERATION_PRET);
        try {
            parametres.ajouterCompte(comptes_debourseur.donneLeCompteSelectionne());
        } catch (MonException e) {
            message_information.setMessage(Label_MessageInformation.Etat.MAUVAISEENTREE, e.getMessage());
            throw e;
        }
        try {
            parametres.ajouterCompte(comptes_receveur.donneLeCompteSelectionne());
        } catch (MonException e) {
            message_information.setMessage(Label_MessageInformation.Etat.MAUVAISEENTREE, e.getMessage());
            throw e;
        }
        if (checkbox_categorie_specifique.getValue()) {
            try {
                parametres.ajouterCategorie(arbre_categorie.donneLaCategorieSelectionnee());
            } catch (MonException e) {
                message_information.setMessage(Label_MessageInformation.Etat.MAUVAISEENTREE, e.getMessage());
                throw new MonException(e.getMessage());
            }
        }
        try {
            Float s = Float.valueOf(somme.getText().trim());
            parametres.ajouterSomme(s);
        } catch (NumberFormatException nfe) {
            MessageErreurEntree("La somme n'a pas ete rentree correctement. L'operation n'a pas ete entree.");
            throw new MonException("NumberFormatException: " + nfe.getMessage());
        }
    } else if (remboursement.getValue()) {
        /*
      Operation_Remboursement:
        Date Date = date;
        Boolean Verifie = verifie;
        OperationFactoryInfos.TypeOperation Typeoperation = OPERATION_REMBOURSEMENT;

        List<CategorieInfos> Categories = void;
        List<ProprietaireInfos> Proprietaires = void;
        List<Compte> Comptes = compte debourseur, compte receveur;
        List<String> Libelles = new ArrayList<String>() = void;
        List<Dette> Dettes = new ArrayList<Dette>() = void;
        List<MonnaieInfos> Monnaies = new ArrayList<MonnaieInfos>() = void;
        List<Float> Sommes = new ArrayList<Float>() = somme concernee;
      */
        parametres = new Parametres(getDate(), verifie.getValue(), OperationFactoryInfos.TypeOperation.OPERATION_REMBOURSEMENT);
        try {
            parametres.ajouterCompte(comptes_debourseur.donneLeCompteSelectionne());
        } catch (MonException e) {
            message_information.setMessage(Label_MessageInformation.Etat.MAUVAISEENTREE, e.getMessage());
            throw e;
        }
        try {
            parametres.ajouterCompte(comptes_receveur.donneLeCompteSelectionne());
        } catch (MonException e) {
            message_information.setMessage(Label_MessageInformation.Etat.MAUVAISEENTREE, e.getMessage());
            throw e;
        }
        if (checkbox_categorie_specifique.getValue()) {
            try {
                parametres.ajouterCategorie(arbre_categorie.donneLaCategorieSelectionnee());
            } catch (MonException e) {
                message_information.setMessage(Label_MessageInformation.Etat.MAUVAISEENTREE, e.getMessage());
                throw new MonException(e.getMessage());
            }
        }
        try {
            Float s = Float.valueOf(somme.getText().trim());
            parametres.ajouterSomme(s);
        } catch (NumberFormatException nfe) {
            MessageErreurEntree("La somme n'a pas ete rentree correctement. L'operation n'a pas ete entree.");
            throw new MonException("NumberFormatException: " + nfe.getMessage());
        }
    } else {
        MessageErreurEntree("Tu n'as pas dit si tu voulais une dette ou un remboursement");
        parametres = null;
    }
    return parametres;
}
