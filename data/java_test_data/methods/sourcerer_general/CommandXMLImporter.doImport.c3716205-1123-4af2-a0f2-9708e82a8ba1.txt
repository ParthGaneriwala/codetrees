// $JAVA_TOP/adb/oracle/apps/adbpos/cms/mgt/firm/webui/ADBPOSCmsfAddressBookPG.xml
// -username apps
// -password $1
// -rootdir $JAVA_TOP
// -dbconnection "(description =
public static void doImport(String[] args) {
    if (CommandLineUtils.shouldPrintHelpMessage(args)) {
        printHelpMessage(CommandLineUtils.getPlatform(args));
        System.exit(0);
    }
    CommandLineArgs commandLineArgs = null;
    String s = "loadRefs!|includeSubpackages!|displayOnly!|rootdir|mmddir|rootPackage|validate!|username*|password*|dbconnection*|userId|jdk13!|help|platform|middleTier!|verbose!";
    try {
        MDSException.init("oracle.adf.mds.exception.MDSResources");
        CommandLineProcessor commandLineProcessor = new CommandLineProcessor(args, true, s);
        commandLineArgs = commandLineProcessor.processArgs();
    } catch (MissingResourceException missingresourceexception) {
        System.out.println("Missing resource bundle MDSResources file.");
    } catch (MDSException mdsexception) {
        System.out.println(sUserMsgResource.getMessage("ERROR") + " " + mdsexception.getErrorMessage());
        if (Debug.DEBUG) {
            mdsexception.printStackTrace();
        }
        System.exit(1);
    }
    String path = commandLineArgs.getValueByPosition(1);
    String loadRefs = commandLineArgs.getValue("loadRefs", "n");
    String includeSubpackages = commandLineArgs.getValue("includeSubpackages", "n");
    String userId = commandLineArgs.getValue("userId", "");
    String rootdir = commandLineArgs.getValue("rootdir", "");
    String rootPackage = commandLineArgs.getValue("rootPackage", "");
    String displayOnly = commandLineArgs.getValue("displayOnly", "n");
    String validate = commandLineArgs.getValue("validate", "n");
    boolean loadRefsFlag = false;
    boolean includeSubpackagesFlag = false;
    boolean displayOnlyFlag = false;
    boolean validateFlag = false;
    if (displayOnly.equalsIgnoreCase("y") || displayOnly.equalsIgnoreCase("yes")) {
        displayOnlyFlag = true;
    }
    if (loadRefs.equalsIgnoreCase("y") || loadRefs.equalsIgnoreCase("yes")) {
        loadRefsFlag = true;
    }
    if (includeSubpackages.equalsIgnoreCase("y") || includeSubpackages.equalsIgnoreCase("yes")) {
        includeSubpackagesFlag = true;
    }
    if (validate.equalsIgnoreCase("y") || validate.equalsIgnoreCase("yes")) {
        validateFlag = true;
    }
    Object obj = null;
    try {
        String connectionString = ConnectUtils.getConnectString(commandLineArgs);
        String canonicalPath = XMLImportHelper.getCanonicalPath(path);
        if (canonicalPath == null) {
            throw new MDSException(null, "FILE_NOT_EXIST_ERROR", new Object[] { path });
        }
        if (rootdir.equals("")) {
            throw new MDSException(null, "ERROR_MISSING_PARAMETER", new Object[] { "rootdir" });
        }
        String rootCanonicalPath = null;
        if (!rootdir.equals("")) {
            rootCanonicalPath = XMLImportHelper.getCanonicalPath(rootdir);
            if (rootCanonicalPath == null) {
                throw new MDSException(null, "ROOT_NOT_EXIST_ERROR", new Object[] { rootdir });
            }
            if (!canonicalPath.startsWith(rootCanonicalPath)) {
                throw new MDSException("ROOT_DIR_ERROR");
            }
        }
        if (!rootPackage.equals("") && !rootPackage.startsWith("/")) {
            throw new MDSException("ROOT_PACKAGE_ERROR");
        }
        if (rootPackage.endsWith("/")) {
            rootPackage = rootPackage.substring(0, rootPackage.length() - 1);
        }
        String mmddir = commandLineArgs.getValue("mmddir", "");
        if (mmddir.equals("")) {
            throw new MDSException(null, "ERROR_MISSING_PARAMETER", new Object[] { "mmddir" });
        }
        XMLImporter.doImport(canonicalPath, loadRefsFlag, includeSubpackagesFlag, rootCanonicalPath, connectionString, userId, rootPackage, mmddir, validateFlag);
    } catch (MDSException mdsexception1) {
        System.out.println(sUserMsgResource.getMessage("ERROR") + " " + mdsexception1.getErrorMessage());
        if (Debug.DEBUG) {
            mdsexception1.printStackTrace();
        }
        System.out.println("\n" + sUserMsgResource.getMessage("IMPORT_FAIL_MSG"));
        System.exit(1);
    }
}
