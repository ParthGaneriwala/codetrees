private void buildTestXmiFiles() throws Exception {
    AnalysisEngine xWriter = AnalysisEngineFactory.createPrimitive(XWriter.class, typeSystemDescription, XWriter.PARAM_OUTPUT_DIRECTORY_NAME, "src/test/resources/eval/provider/corpus/xmi-factory-test-data/xmi");
    super.setUp();
    tokenBuilder.buildTokens(jCas, "This is a test.", "This is a test .", "t1 t2 t3 t4 t5");
    // 1.xmi
    SimplePipeline.runPipeline(jCas, xWriter);
    jCas.reset();
    tokenBuilder.buildTokens(jCas, "A B C D", "A B C D", "t1 t2 t3 t4");
    // 2.xmi
    SimplePipeline.runPipeline(jCas, xWriter);
    jCas.reset();
    tokenBuilder.buildTokens(jCas, "1 2 3 4", "1 2 3 4", "tA tB tC tD");
    // 3.xmi
    SimplePipeline.runPipeline(jCas, xWriter);
    jCas.reset();
    tokenBuilder.buildTokens(jCas, "1 2 3 4", "1 2 3 4", "tA tB tC tD");
    // 4.xmi
    SimplePipeline.runPipeline(jCas, xWriter);
    jCas.reset();
    tokenBuilder.buildTokens(jCas, "10 20 30 40 50", "10 20 30 40 50", "1 2 3 4 5");
    // 5.xmi
    SimplePipeline.runPipeline(jCas, xWriter);
    jCas.reset();
    tokenBuilder.buildTokens(jCas, "first sentence. second sentence.", "first sentence . \n second sentence .", "1 2 3 1 2 3");
    // 6.xmi
    SimplePipeline.runPipeline(jCas, xWriter);
    jCas.reset();
    tokenBuilder.buildTokens(jCas, "A1 A1 B2 B2", "A1 A1 B2 B2", "A A B B");
    // 7.xmi
    SimplePipeline.runPipeline(jCas, xWriter);
    jCas.reset();
    tokenBuilder.buildTokens(jCas, "AAAA", "A A A A", "1 2 3 4");
    // 8.xmi
    SimplePipeline.runPipeline(jCas, xWriter);
    jCas.reset();
    tokenBuilder.buildTokens(jCas, "AA AA", "AA AA", "1 2");
    // 9.xmi
    SimplePipeline.runPipeline(jCas, xWriter);
    jCas.reset();
    tokenBuilder.buildTokens(jCas, "A", "A", "1");
    // 10.xmi
    SimplePipeline.runPipeline(jCas, xWriter);
    jCas.reset();
    tokenBuilder.buildTokens(jCas, "b", "b", "BB1");
    // 11.xmi
    SimplePipeline.runPipeline(jCas, xWriter);
}
