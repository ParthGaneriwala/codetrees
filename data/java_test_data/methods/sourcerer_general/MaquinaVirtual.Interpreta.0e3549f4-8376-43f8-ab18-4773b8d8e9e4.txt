public static void Interpreta(AreaInstrucoes AI, AreaLiterais AL) {
    topo = 0;
    // registrador base
    b = 0;
    // aponta proxima instru��o
    p = 0;
    // SL
    S[1] = 0;
    // DL
    S[2] = 0;
    // RA
    S[3] = 0;
    operador = 0;
    String leitura;
    while (operador != 26) {
        // Enquanto instru��o diferente de Pare
        operador = AI.AI[p].codigo;
        l = AI.AI[p].op1;
        a = AI.AI[p].op2;
        p = p + 1;
        switch(operador) {
            case // RETU
            1:
                p = S[b + 2];
                topo = b - a;
                b = S[b + 1];
                break;
            case // CRVL
            2:
                topo = topo + 1;
                S[topo] = S[Base() + a];
                break;
            case // CRCT
            3:
                topo = topo + 1;
                S[topo] = a;
                break;
            case // ARMZ
            4:
                S[Base() + a] = S[topo];
                topo = topo - 1;
                break;
            case // SOMA
            5:
                S[topo - 1] = S[topo - 1] + S[topo];
                topo = topo - 1;
                break;
            case // SUBT
            6:
                S[topo - 1] = S[topo - 1] - S[topo];
                topo = topo - 1;
                break;
            case // MULT
            7:
                S[topo - 1] = S[topo - 1] * S[topo];
                topo = topo - 1;
                break;
            case // DIVI
            8:
                if (S[topo] == 0) {
                    JOptionPane.showMessageDialog(null, "Divis�o por zero.", "Erro durante a execu��o", JOptionPane.ERROR_MESSAGE);
                } else {
                    S[topo - 1] = S[topo - 1] / S[topo];
                    topo = topo - 1;
                }
                break;
            case // INVR
            9:
                S[topo] = -S[topo];
                break;
            case // NEGA
            10:
                S[topo] = 1 - S[topo];
                break;
            case // CONJ
            11:
                if ((S[topo - 1] == 1) && (S[topo] == 1)) {
                    // A no material impresso est� como "1" e // aqui estava como "-1"
                    S[topo - 1] = 1;
                } else {
                    S[topo - 1] = 0;
                    topo = topo - 1;
                }
                break;
            case // DISJ
            12:
                if ((S[topo - 1] == 1 || S[topo] == 1)) {
                    S[topo - 1] = 1;
                } else {
                    S[topo - 1] = 0;
                    topo = topo - 1;
                }
                break;
            case // CMME
            13:
                if (S[topo - 1] < S[topo]) {
                    S[topo - 1] = 1;
                } else {
                    S[topo - 1] = 0;
                }
                topo = topo - 1;
                break;
            case // CMMA
            14:
                if (S[topo - 1] > S[topo]) {
                    S[topo - 1] = 1;
                } else {
                    S[topo - 1] = 0;
                }
                topo = topo - 1;
                break;
            case // CMIG
            15:
                if (S[topo - 1] == S[topo]) {
                    S[topo - 1] = 1;
                } else {
                    S[topo - 1] = 0;
                }
                topo = topo - 1;
                break;
            case // CMDF
            16:
                if (S[topo - 1] != S[topo]) {
                    S[topo - 1] = 1;
                } else {
                    S[topo - 1] = 0;
                }
                topo = topo - 1;
                break;
            case // CMEI
            17:
                if (S[topo - 1] <= S[topo]) {
                    S[topo - 1] = 1;
                } else {
                    S[topo - 1] = 0;
                }
                topo = topo - 1;
                break;
            case // CMAI
            18:
                if (S[topo - 1] >= S[topo]) {
                    S[topo - 1] = 1;
                } else {
                    S[topo - 1] = 0;
                }
                topo = topo - 1;
                break;
            case // DSVS
            19:
                p = a;
                break;
            case // DSVF
            20:
                if (S[topo] == 0) {
                    p = a;
                // topo=topo-1; //A no material impresso esta linha est�
                // fora do "if"!
                }
                topo = topo - 1;
                break;
            case // LEIT
            21:
                topo = topo + 1;
                leitura = JOptionPane.showInputDialog(null, "Informe o valor:", "Leitura", JOptionPane.QUESTION_MESSAGE);
                // System.out.print("Leia: "); A
                // problema aqui A
                (S[topo]) = Integer.parseInt(leitura);
                break;
            case // IMPR
            22:
                JOptionPane.showMessageDialog(null, "" + S[topo], "Informa��o", JOptionPane.INFORMATION_MESSAGE);
                // System.out.println(S[topo]); A
                topo = topo - 1;
                break;
            case // IMPRLIT
            23:
                if (a >= AL.LIT) {
                    JOptionPane.showMessageDialog(null, "Literal n�o encontrado na �rea dos literais.", "Erro durante a execu��o", JOptionPane.ERROR_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "" + AL.AL[a], "Informa��o", JOptionPane.INFORMATION_MESSAGE);
                }
                break;
            case // AMEM
            24:
                topo = topo + a;
                break;
            case // CALL
            25:
                S[topo + 1] = Base();
                S[topo + 2] = b;
                S[topo + 3] = p;
                b = topo + 1;
                p = a;
                break;
            case 26:
                // PARA
                break;
            case 27:
                // NADA
                break;
            case // COPI
            28:
                topo = topo + 1;
                S[topo] = S[topo - 1];
                break;
            case // DSVT
            29:
                if (S[topo] == 1) {
                    p = a;
                // topo=topo-1; //A no material impresso esta linha est� // fora do "if"!
                }
                topo = topo - 1;
        }
    // fim do case
    }
// fim do while
}
