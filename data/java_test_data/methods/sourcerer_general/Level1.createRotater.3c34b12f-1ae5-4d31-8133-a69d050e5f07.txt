private void createRotater(int time, double y) {
    IFlightObject fo;
    FlightObjectCommandContainer series;
    FlightObjectCommandContainer parallel;
    FlightObjectCommand command;
    LevelData ld;
    fo = new Enemy();
    fo.setFaction("enemy");
    fo.setCenterX(LEFT2.getX());
    fo.setCenterY(y);
    fo.setLiveTime(180);
    series = new SeriesCommands();
    command = new MoveCommand(fo, 4, 0, -4 / 30, 0);
    command.setLiveTime(30);
    series.add(command);
    parallel = new ParallelCommands();
    command = new RotateCommand(fo, 2);
    command.setLiveTime(120);
    parallel.add(command);
    command = new FireCommand(fo, FireCommand.MAIN);
    command.setLiveTime(120);
    parallel.add(command);
    series.add(parallel);
    command = new MoveCommand(fo, -4, 0, 4 / 30, 0);
    command.setLiveTime(30);
    series.add(command);
    fo.setCommand(series);
    ld = new LevelData();
    ld.setTime(time);
    ld.setAction(LevelData.ADD);
    ld.setTarget(fo);
    _data.add(ld);
    fo = new Enemy();
    fo.setFaction("enemy");
    fo.setCenterX(RIGHT2.getX());
    fo.setCenterY(y);
    fo.setLiveTime(180);
    series = new SeriesCommands();
    command = new MoveCommand(fo, -4, 0, 4 / 30, 0);
    command.setLiveTime(30);
    series.add(command);
    parallel = new ParallelCommands();
    command = new RotateCommand(fo, -2);
    command.setLiveTime(120);
    parallel.add(command);
    command = new FireCommand(fo, FireCommand.MAIN);
    command.setLiveTime(120);
    parallel.add(command);
    series.add(parallel);
    command = new MoveCommand(fo, 4, 0, -4 / 30, 0);
    command.setLiveTime(30);
    series.add(command);
    fo.setCommand(series);
    ld = new LevelData();
    ld.setTime(time);
    ld.setAction(LevelData.ADD);
    ld.setTarget(fo);
    _data.add(ld);
}
