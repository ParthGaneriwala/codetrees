private void parseCapabilities(Document capabilities) {
    // basics
    String baseTag = isOGCCompliant(capabilities) ? "//OGC_Capabilities" : "//WMT_MS_Capabilities";
    Node baseNode = capabilities.selectSingleNode(baseTag);
    version = baseNode.valueOf("@version");
    Node titleNode = capabilities.selectSingleNode(baseTag + "/Service/Title");
    title = titleNode.getText();
    Node onlineResNode = capabilities.selectSingleNode(baseTag + "/Service/OnlineResource");
    onlineResource = onlineResNode.getText();
    // srs
    // Node srs = baseNode.selectSingleNode( "SRS" );
    Node capabilityNode = capabilities.selectSingleNode(baseTag + "/Capability");
    // scan formats
    List formatNodes = capabilityNode.selectNodes("Request/GetMap/Format");
    Iterator itr = formatNodes.iterator();
    while (itr.hasNext()) {
        Node formatNode = (Node) itr.next();
        String format = formatNode.getText();
        formats.add(format);
    }
    for (int index = 0; index < PREFERRED_FORMATS.length; index++) {
        if (formats.contains(PREFERRED_FORMATS[index])) {
            format = PREFERRED_FORMATS[index];
            System.out.println("found format: " + format);
            break;
        }
    }
    for (int index = 0; index < optionChoices.length; index++) {
        String option = optionChoices[index];
        List nodes = getBottom(capabilityNode, option);
        if (nodes != null && nodes.size() > 0) {
            putOptions(option, nodes);
        } else {
            for (int other = 0; other < optionChoices.length; other++) {
                String prefix = optionChoices[other];
                if (other != index) {
                    nodes = getBottom(capabilityNode, prefix, option);
                    if (nodes != null && nodes.size() > 0) {
                        putOptions(option, nodes);
                    }
                }
            }
        }
    }
    putQueries();
    // set possible layers
    List layerNodes = capabilityNode.selectNodes("Layer/Layer/Layer");
    if (layerNodes.size() == 0) {
        layerNodes = capabilityNode.selectNodes("Layer/Layer");
    }
    Iterator iter = layerNodes.iterator();
    while (iter.hasNext()) {
        Node layerNode = (Node) iter.next();
        Node name = layerNode.selectSingleNode("Name");
        layers += (name != null) ? name.getText() + "," : "";
    /*Node boundary = layerNode.selectSingleNode("BoundingBox");
         if (boundary != null) {
            double minX = Double.parseDouble(boundary.valueOf("@minx"));
            double minY = Double.parseDouble(boundary.valueOf("@miny"));
            double maxX = Double.parseDouble(boundary.valueOf("@maxx"));
            double maxY = Double.parseDouble(boundary.valueOf("@maxy"));
         }*/
    }
    layers = layers.substring(0, Math.max(0, layers.length() - 2));
}
