protected static PrintStream openLogFile() {
    /* check to see if this has been called before RTConfig has completed initialization */
    if (!RTConfig.isInitialized()) {
        return Print.getSystemErr();
    }
    /* return log PrintStream */
    PrintStream out = null;
    synchronized (Print.logLock) {
        if (openLogFile_recursion > 0) {
            Print.sysPrintln("[Print.openLogFile] Recursive call to 'openLogFile'!!!");
            Throwable t = new Throwable();
            t.fillInStackTrace();
            // [OUTPUT]
            t.printStackTrace();
            return Print.getSystemErr();
        } else {
            openLogFile_recursion++;
            /* increment log counter */
            Print.logRefCount++;
            /* get log file */
            if (Print.logOutput != null) {
                /* already open */
                out = Print.logOutput;
            } else {
                /* get/return log file */
                File file = Print.getLogFile();
                if ((file == null) || file.toString().equals("")) {
                    out = Print.getSystemErr();
                } else if (file.isDirectory()) {
                    Print.setLogFile(null);
                    Print.sysPrintln("ERROR: Invalid Print log file specification: " + file);
                    out = Print.getSystemErr();
                } else {
                    if (file.exists()) {
                        long maxLogFileSize = printMaxLogFileSize;
                        if ((maxLogFileSize > 8000L) && (file.length() > maxLogFileSize)) {
                            String bkuName = file.getAbsolutePath() + "." + Print.formatDate("yyMMdd");
                            File bkuFile = new File(bkuName);
                            for (int i = 1; bkuFile.exists(); i++) {
                                bkuFile = new File(bkuName + "." + i);
                            }
                            file.renameTo(bkuFile);
                        }
                    }
                    try {
                        out = new PrintStream(new FileOutputStream(file, true));
                    } catch (IOException ioe) {
                        Print.setLogFile(null);
                        Print.sysPrintln("ERROR: Unable to open Print log file: " + file);
                        out = Print.getSystemErr();
                    }
                }
                Print.logOutput = out;
            }
            openLogFile_recursion--;
        }
    }
    return out;
}
