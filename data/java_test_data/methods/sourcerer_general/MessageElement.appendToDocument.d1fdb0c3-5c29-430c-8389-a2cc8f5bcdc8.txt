private void appendToDocument(Document doc, AttributeSet at, LocalSettings locals) throws BadLocationException {
    AttributeSet attrs = new SimpleAttributeSet(at);
    // -----Open of container
    switch(type) {
        case TEXT:
            if (settings != null && !settings.emoticonsOn)
                _textWithoutIcons(doc, text, attrs, locals);
            else
                _textWithIcons(doc, text, attrs, locals);
            break;
        case BOLD:
            attrs = styleContext.addAttribute(attrs, StyleConstants.Bold, Boolean.TRUE);
            break;
        case ITALIC:
            attrs = styleContext.addAttribute(attrs, StyleConstants.Italic, Boolean.TRUE);
            break;
        case COLOUR_INDEX:
        case COLOUR_ABS:
        case COLOUR_NAME:
            attrs = styleContext.addAttribute(attrs, StyleConstants.Foreground, colour);
            break;
        case UNDERLINE:
            attrs = styleContext.addAttribute(attrs, StyleConstants.Underline, Boolean.TRUE);
            break;
        case FONT:
            attrs = styleContext.addAttribute(attrs, StyleConstants.FontFamily, fontFace);
            attrs = styleContext.addAttribute(attrs, StyleConstants.FontSize, new Integer(fontSize));
            break;
        case FADE:
            if (settings != null && settings.respectFade)
                locals.colourTransition = new FadeEnumeration(transition, childTextSize());
            break;
        case ALT:
            if (settings != null && settings.respectAlt)
                locals.colourTransition = new AltEnumeration(transition);
            break;
    }
    // -----Container chilren
    for (int i = 0; i < children.size(); i++) {
        MessageElement sc = (MessageElement) children.elementAt(i);
        sc.appendToDocument(doc, attrs, locals);
    }
    // -----Close container
    switch(type) {
        case BOLD:
            attrs = styleContext.addAttribute(attrs, StyleConstants.Bold, Boolean.FALSE);
            break;
        case ITALIC:
            attrs = styleContext.addAttribute(attrs, StyleConstants.Italic, Boolean.FALSE);
            break;
        case COLOUR_INDEX:
        case COLOUR_ABS:
        case COLOUR_NAME:
            attrs = styleContext.addAttribute(attrs, StyleConstants.Foreground, styleContext.getForeground(at));
            break;
        case UNDERLINE:
            attrs = styleContext.addAttribute(attrs, StyleConstants.Underline, Boolean.FALSE);
            break;
        case FONT:
            Font f = styleContext.getFont(at);
            attrs = styleContext.addAttribute(attrs, StyleConstants.FontFamily, f.getFamily());
            attrs = styleContext.addAttribute(attrs, StyleConstants.FontSize, new Integer(f.getSize()));
            break;
        case FADE:
        case ALT:
            locals.colourTransition = null;
            break;
    }
}
