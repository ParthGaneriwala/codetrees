private boolean validateTicketRate() {
    boolean breturn = true;
    if (this.ffA.getText().isEmpty() && this.ffB.getText().isEmpty() && this.ffC.getText().isEmpty() && this.ffD.getText().isEmpty() && this.ffE.getText().isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter atleast one ticket rate price");
        breturn = false;
    }
    if (this.ckbA.isVisible() && !this.ffA.getText().isEmpty()) {
        if (StringHelper.limitone(this.ffA.getText())) {
            JOptionPane.showMessageDialog(this, "Please enter a reasonable price for A");
            this.ffA.setText("");
            breturn = false;
        }
    }
    if (this.ckbB.isVisible() && !this.ffB.getText().isEmpty()) {
        if (StringHelper.limitone(this.ffB.getText())) {
            JOptionPane.showMessageDialog(this, "Please enter a reasonable price for B");
            this.ffB.setText("");
            breturn = false;
        }
    }
    if (this.ckbC.isVisible() && !this.ffC.getText().isEmpty()) {
        if (StringHelper.limitone(this.ffC.getText())) {
            JOptionPane.showMessageDialog(this, "Please enter a reasonable price for C");
            this.ffC.setText("");
            breturn = false;
        }
    }
    if (this.ckbD.isVisible() && !this.ffD.getText().isEmpty()) {
        if (StringHelper.limitone(this.ffD.getText())) {
            JOptionPane.showMessageDialog(this, "Please enter a reasonable price for D");
            this.ffD.setText("");
            breturn = false;
        }
    }
    if (this.ckbE.isVisible() && !this.ffE.getText().isEmpty()) {
        if (StringHelper.limitone(this.ffE.getText())) {
            JOptionPane.showMessageDialog(this, "Please enter a reasonable price for E");
            this.ffE.setText("");
            breturn = false;
        }
    }
    if (breturn) {
        if (this.ckbA.isVisible() && !this.ffA.getText().isEmpty()) {
            try {
                if (Double.parseDouble(this.ffA.getText()) < 0) {
                    JOptionPane.showMessageDialog(this, "A price can't be negative");
                    breturn = false;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Invalid price entered in A");
                ffA.setText("");
                breturn = false;
            }
        }
        if (this.ckbB.isVisible() && !this.ffB.getText().isEmpty()) {
            try {
                if (Double.parseDouble(this.ffB.getText()) < 0) {
                    JOptionPane.showMessageDialog(this, "B price can't be negative");
                    breturn = false;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Invalid price entered in B");
                ffB.setText("");
                breturn = false;
            }
        }
        if (this.ckbC.isVisible() && !this.ffC.getText().isEmpty()) {
            try {
                if (Double.parseDouble(this.ffC.getText()) < 0) {
                    JOptionPane.showMessageDialog(this, "C price can't be negative");
                    breturn = false;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Invalid price entered in C");
                ffC.setText("");
                breturn = false;
            }
        }
        if (this.ckbD.isVisible() && !this.ffD.getText().isEmpty()) {
            try {
                if (Double.parseDouble(this.ffD.getText()) < 0) {
                    JOptionPane.showMessageDialog(this, "C price can't be negative");
                    breturn = false;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Invalid price entered in D");
                ffD.setText("");
                breturn = false;
            }
        }
        if (this.ckbE.isVisible() && !this.ffE.getText().isEmpty()) {
            try {
                if (Double.parseDouble(this.ffE.getText()) < 0) {
                    JOptionPane.showMessageDialog(this, "C price can't be negative");
                    breturn = false;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Invalid price entered in E");
                ffE.setText("");
                breturn = false;
            }
        }
    }
    return breturn;
}
