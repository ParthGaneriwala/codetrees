public static void mainEh(String[] args, ErrorHandler eh, ARPEventHandler ap) {
    boolean doneOne = false;
    startMem = -1;
    andMeToo = ap;
    // SH sh = new SH();
    int i;
    arp = new ARP();
    ARPHandlers handlers = arp.getHandlers();
    handlers.setStatementHandler(getSH(true));
    // arp.getOptions().setEmbedding(true);
    if (ap != null) {
        handlers.setNamespaceHandler(ap);
        handlers.setExtendedHandler(ap);
    }
    if (eh != null)
        handlers.setErrorHandler(eh);
    for (i = 0; i < args.length - 1; i++) {
        if (args[i].startsWith("-")) {
            i += processOpts(args[i].substring(1), args[i + 1]);
        } else {
            doneOne = true;
            process(args[i]);
        }
    }
    if (args.length > 0) {
        if (args[i].startsWith("-")) {
            if (doneOne || processOpts(args[i].substring(1), "100") == 1)
                usage();
        } else {
            doneOne = true;
            process(args[i]);
        }
    }
    if (!doneOne) {
        process(System.in, "http://example.org/stdin", "standard input");
    }
    if (startMem != -1) {
        rt.gc();
        System.out.println(rt.totalMemory() - rt.freeMemory() - startMem);
        rt.gc();
        System.out.println(rt.totalMemory() - rt.freeMemory() - startMem);
        rt.gc();
        System.out.println(rt.totalMemory() - rt.freeMemory() - startMem);
        rt.gc();
        System.out.println(rt.totalMemory() - rt.freeMemory() - startMem);
    }
}
