public static void main(String[] args) {
    Veterinaria veterinaria = new Veterinaria("nomVet", "locVet", "dirVet", "telVet");
    veterinaria.inicializarAgenda(CANTIDAD_CONSULTAS_SIMULTANEAS, MINUTOS_TURNO);
    Cliente cliente1 = new Cliente("nomCli1", "locCli1", "dirCli1", "telCli1", "celCli1", "mailCli1", "obsCli1");
    cliente1.setId(new Long(1));
    Mascota mascota1 = new Mascota("nomMas1", "espMas1", "razaMas1", new Date(), 'M', "pesoMas1", "carMas1");
    Cliente cliente2 = new Cliente("nomCli2", "locCli2", "dirCli2", "telCli2", "celCli2", "mailCli2", "obsCli2");
    cliente2.setId(new Long(2));
    Mascota mascota2 = new Mascota("nomMas2", "espMas2", "razaMas2", new Date(), 'M', "pesoMas2", "carMas2");
    Cliente cliente3 = new Cliente("nomCli3", "locCli3", "dirCli3", "telCli3", "celCli3", "mailCli3", "obsCli3");
    cliente3.setId(new Long(3));
    Mascota mascota3 = new Mascota("nomMas3", "espMas3", "razaMas3", new Date(), 'M', "pesoMas3", "carMas3");
    veterinaria.darDeAltaCliente(cliente1);
    veterinaria.darDeAltaMascota(cliente1, mascota1);
    veterinaria.darDeAltaCliente(cliente2);
    veterinaria.darDeAltaMascota(cliente2, mascota2);
    veterinaria.darDeAltaCliente(cliente3);
    veterinaria.darDeAltaMascota(cliente3, mascota3);
    try {
        cliente1.sacarTurno(newDate(15, 35));
    } catch (IllegalStateException e) {
        System.out.println(e.getMessage());
    }
    Turno turnoCliente1 = cliente1.sacarTurno(newDate(15, 30));
    try {
        cliente1.sacarTurno(newDate(15, 30));
    } catch (IllegalStateException e) {
        System.out.println(e.getMessage());
    }
    cliente2.sacarTurno(newDate(15, 30));
    Turno turnoCliente3 = cliente3.sacarTurno(newDate(15, 30));
    imprimirTurnos(veterinaria);
    cliente1.cancelarTurno(turnoCliente1);
    veterinaria.rechazarTurno(turnoCliente3);
    imprimirTurnos(veterinaria);
}
