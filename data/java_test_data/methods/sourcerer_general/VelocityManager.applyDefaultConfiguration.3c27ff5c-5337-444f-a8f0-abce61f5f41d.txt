private void applyDefaultConfiguration(ServletContext context, Properties p) {
    /**
     * Load a default resource loader definition if there isn't one present.
     * Ben Hall (22/08/2003)
     */
    if (p.getProperty(Velocity.RESOURCE_LOADER) == null) {
        p.setProperty(Velocity.RESOURCE_LOADER, "strutsfile, strutsclass");
    }
    /**
     * If there's a "real" path add it for the strutsfile resource loader.
     * If there's no real path and they haven't configured a loader then we change
     * resource loader property to just use the strutsclass loader
     * Ben Hall (22/08/2003)
     */
    if (context.getRealPath("") != null) {
        p.setProperty("strutsfile.resource.loader.description", "Velocity File Resource Loader");
        p.setProperty("strutsfile.resource.loader.class", "org.apache.velocity.runtime.resource.loader.FileResourceLoader");
        p.setProperty("strutsfile.resource.loader.path", context.getRealPath(""));
        p.setProperty("strutsfile.resource.loader.modificationCheckInterval", "2");
        p.setProperty("strutsfile.resource.loader.cache", "true");
    } else {
        // remove strutsfile from resource loader property
        String prop = p.getProperty(Velocity.RESOURCE_LOADER);
        if (prop.indexOf("strutsfile,") != -1) {
            prop = replace(prop, "strutsfile,", "");
        } else if (prop.indexOf(", strutsfile") != -1) {
            prop = replace(prop, ", strutsfile", "");
        } else if (prop.indexOf("strutsfile") != -1) {
            prop = replace(prop, "strutsfile", "");
        }
        p.setProperty(Velocity.RESOURCE_LOADER, prop);
    }
    /**
     * Refactored the Velocity templates for the Struts taglib into the classpath from the web path.  This will
     * enable Struts projects to have access to the templates by simply including the Struts jar file.
     * Unfortunately, there does not appear to be a macro for the class loader keywords
     * Matt Ho - Mon Mar 17 00:21:46 PST 2003
     */
    p.setProperty("strutsclass.resource.loader.description", "Velocity Classpath Resource Loader");
    p.setProperty("strutsclass.resource.loader.class", "org.apache.struts2.views.velocity.StrutsResourceLoader");
    p.setProperty("strutsclass.resource.loader.modificationCheckInterval", "2");
    p.setProperty("strutsclass.resource.loader.cache", "true");
    // components
    StringBuffer sb = new StringBuffer();
    for (TagLibrary tagLibrary : tagLibraries) {
        List<Class> directives = tagLibrary.getVelocityDirectiveClasses();
        for (Class directive : directives) {
            addDirective(sb, directive);
        }
    }
    String directives = sb.toString();
    String userdirective = p.getProperty("userdirective");
    if ((userdirective == null) || userdirective.trim().equals("")) {
        userdirective = directives;
    } else {
        userdirective = userdirective.trim() + "," + directives;
    }
    p.setProperty("userdirective", userdirective);
}
