public Node setReferenced(Node referent, String propertyName, Node referenced) throws RepositoryException {
    Node oldReferenced = null;
    if (referent.hasProperty(propertyName)) {
        Property property = referent.getProperty(propertyName);
        oldReferenced = _getReferenced(property);
        if (oldReferenced != null) {
            Entry entry = getEntry(oldReferenced);
            boolean scheduleForAddition = true;
            NodeSet propertyScheduledForAddition = entry.propertiesScheduledForAddition.get(propertyName);
            if (propertyScheduledForAddition != null) {
                if (propertyScheduledForAddition.contains(referent)) {
                    propertyScheduledForAddition.remove(referent);
                    scheduleForAddition = false;
                }
            }
            // 
            if (scheduleForAddition) {
                NodeSet propertyScheduledForRemoval = entry.propertiesScheduledForRemoval.get(propertyName);
                if (propertyScheduledForRemoval == null) {
                    propertyScheduledForRemoval = new NodeSet();
                    entry.propertiesScheduledForRemoval.put(propertyName, propertyScheduledForRemoval);
                }
                propertyScheduledForRemoval.add(referent);
                entry.version++;
            }
        }
    }
    // 
    _setReferenced(referent, propertyName, referenced);
    // 
    if (referenced != null) {
        Entry entry = getEntry(referenced);
        NodeSet srcs = entry.propertiesScheduledForAddition.get(propertyName);
        if (srcs == null) {
            srcs = new NodeSet();
            entry.propertiesScheduledForAddition.put(propertyName, srcs);
        }
        srcs.add(referent);
        entry.version++;
    } else {
    // 
    }
    // 
    return oldReferenced;
}
