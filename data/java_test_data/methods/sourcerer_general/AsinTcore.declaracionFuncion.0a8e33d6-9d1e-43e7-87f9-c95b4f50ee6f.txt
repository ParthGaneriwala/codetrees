private void declaracionFuncion() throws AleXcore.ExcepcionCaracterInvalido, AleXcore.ExcepcionComentarioSinCerrar, AleXcore.ExcepcionIdentificadorInvalido, AleXcore.ExcepcionComentarioCerrado, ExcepcionErrorSintactico, ExcepcionErrorSemantico {
    ArrayList<ParametroFormal> lista = new ArrayList<ParametroFormal>();
    String identificador;
    Funcion f;
    Tipo t;
    int etiqueta, cantMemoria = 0;
    etiqueta = TdS.nuevaEtiqueta();
    ultimoToken = alex.getToken();
    MepaH.generarInstruccion("l" + etiqueta + " ENPR " + (TdS.getNivelLexico() + 1));
    if (ultimoToken.isToken(Token.IDENTIFICADOR)) {
        identificador = ultimoToken.getLexema();
        if (!TdS.perteneceNivelActual(identificador)) {
            ultimoToken = alex.getToken();
            if (ultimoToken.isToken(Token.DOSPUNTOS)) {
                ultimoToken = alex.getToken();
                if (TdS.getTope().getIdentificador().equals(identificador.toUpperCase())) {
                    throw new ExcepcionErrorSemantico("En linea: " + ultimoToken.getLinea() + ". El identificador " + identificador + " es el identificador de funcion/procedimiento, no puede utilizarse en este nivel lexico");
                }
                TdS.apilarNivel(identificador);
                if (ultimoToken.isToken(Token.IDENTIFICADOR)) {
                    t = tipoSimple();
                    if (t.esArreglo()) {
                        throw new ExcepcionErrorSemantico("En linea: " + ultimoToken.getLinea() + ". El resultado de la función debe ser de tipo simple");
                    }
                    if (ultimoToken.isToken(Token.PUNTOCOMA)) {
                        // FUNCION SIN PARAMETROS
                        lista = new ArrayList();
                    } else {
                        throw new ExcepcionErrorSintactico("Se esperaba ';', en linea: " + ultimoToken.getLinea());
                    }
                } else {
                    throw new ExcepcionErrorSintactico("Se esperaba identificador de tipo, en linea: " + ultimoToken.getLinea());
                }
            } else if (ultimoToken.isToken(Token.PARABRE)) {
                // Definicion de parametros
                if (TdS.getTope().getIdentificador().equals(identificador.toUpperCase())) {
                    throw new ExcepcionErrorSemantico("En linea: " + ultimoToken.getLinea() + ". El identificador " + identificador + " es el identificador de funcion/procedimiento, no puede utilizarse en este nivel lexico");
                }
                TdS.apilarNivel(identificador);
                declaracionParametrosFormales(lista);
                if (ultimoToken.isToken(Token.PARCIERRA)) {
                    ultimoToken = alex.getToken();
                    if (ultimoToken.isToken(Token.DOSPUNTOS)) {
                        ultimoToken = alex.getToken();
                        if (ultimoToken.isToken(Token.IDENTIFICADOR)) {
                            t = tipoSimple();
                            if (t.esArreglo()) {
                                throw new ExcepcionErrorSemantico("En linea: " + ultimoToken.getLinea() + ". El resultado de la función debe ser de tipo simple");
                            }
                            if (ultimoToken.isToken(Token.PUNTOCOMA)) {
                            // FUNCION CORRECTA
                            } else {
                                throw new ExcepcionErrorSintactico("Se esperaba ';', en linea: " + ultimoToken.getLinea());
                            }
                        } else {
                            throw new ExcepcionErrorSintactico("Se esperaba un identificador de tipo, en linea: " + ultimoToken.getLinea());
                        }
                    } else {
                        throw new ExcepcionErrorSintactico("Se esperaba ':', en linea: " + ultimoToken.getLinea());
                    }
                } else {
                    throw new ExcepcionErrorSintactico("Se esperaba ')' , en linea: " + ultimoToken.getLinea());
                }
            } else {
                throw new ExcepcionErrorSintactico("Se esperaba ':' o '(', en linea: " + ultimoToken.getLinea());
            }
        } else {
            throw new ExcepcionErrorSemantico("En linea: " + ultimoToken.getLinea() + ". El identificador '" + identificador + "' se encuentra en uso");
        }
    } else {
        throw new ExcepcionErrorSintactico("Se esperaba un identificador, en linea: " + ultimoToken.getLinea());
    }
    f = new Funcion(etiqueta, lista, t, TdS.getNivelLexico());
    // TdS.getTope().registrarFuncion(identificador, f);
    // TdS.apilarNivel(identificador);
    ElementoDePila tope = TdS.getTope();
    TdS.desapilarNivel();
    TdS.getTope().registrarFuncion(identificador, f);
    TdS.apilarNivel(tope);
    bloque();
    TdS.desapilarNivel();
    cantMemoria = f.getCantMemoria();
    MepaH.generarInstruccion("RTPR " + (f.getNivelLexico()) + " , " + cantMemoria);
// TdS.desapilarNivel();
}
