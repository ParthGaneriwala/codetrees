public static void drawChain(JspWriter out, String chainId) {
    try {
        ChainManager chainManager = (ChainManager) SpringUtil.getBean("chainManager");
        Chain chain = chainManager.getChain(chainId);
        // out.print("Chain id:" + this.chainsID + "<br>");
        out.print("<br/>");
        out.print("Chain name:" + chain.getName() + "<br/>");
        out.print("Chain date:" + chain.getUpdatedDate() + "<br/>");
        out.print("Chain description:" + chain.getDescription() + "<br/>");
        out.print("<br/>");
        out.print("<hr/>");
        Iterator iter = chain.getChainFlows().iterator();
        int i = 0;
        while (iter.hasNext()) {
            ChainFlow dataflow = (ChainFlow) iter.next();
            if (dataflow.getChain() == null) {
                dataflow.setChain(chain);
            }
            out.print("\n\n<script>ShowImg[" + String.valueOf(i) + "]=new ShowImgArray();\n");
            out.print("ShowImg[" + String.valueOf(i) + "].sID='" + dataflow.getFlowId() + "';\n");
            out.print("ShowImg[" + String.valueOf(i) + "].x=" + dataflow.getPosLeft() + ";\n");
            out.print("ShowImg[" + String.valueOf(i) + "].y=" + dataflow.getPosTop() + ";\n");
            out.print("ShowImg[" + String.valueOf(i) + "].width=" + dataflow.getWidth() + ";\n");
            out.print("ShowImg[" + String.valueOf(i) + "].height=" + dataflow.getHeight() + ";\n");
            out.print("</script>\n");
            FlowType flowType = getFlowType(dataflow.getFlowType());
            flowType.setChainFlow(dataflow);
            flowType.drowFlow(out);
            i++;
        }
    } catch (Exception e) {
        log.warn("Draw chain error.", e);
    }
// out.print("<script>SET_DHTML(CURSOR_MOVE, RESIZABLE, NO_ALT,
// SCROLL"+sFlowid+");</script>");
}
