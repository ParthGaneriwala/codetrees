public ActionForward home(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    if (log.isDebugEnabled()) {
        log.debug("entering 'home' method...");
    }
    request.setAttribute("categories", categoryManager.getTopCategoryList());
    request.setAttribute("bestSold", goodsManager.getBestSoldGoodsList());
    request.setAttribute("hotSold", goodsManager.getHotSoldGoodsList());
    request.setAttribute("newGoods", goodsManager.getNewGoodsList());
    List<Brand> brands = brandManager.getBrandList();
    // 统计相应品牌下的货物数量
    Criteria criteria = new Criteria();
    Condition cond = new Condition();
    cond.setField("brand");
    cond.setOperator(Condition.EQUALS);
    List<BrandInfo> brandInfoList = new ArrayList<BrandInfo>();
    for (Iterator it = brands.iterator(); it.hasNext(); ) {
        Brand brand = (Brand) it.next();
        cond.setValue(brand.getId() + "");
        criteria.addCondition(cond);
        brandInfoList.add(new BrandInfo(brandManager.getBrand(brand.getId() + ""), goodsManager.getGoodsCount(criteria)));
        criteria.removeAllCondition();
    }
    request.setAttribute("brandinfoList", brandInfoList);
    // top 10
    // List<OrderGoods> orderGoods = new ArrayList<OrderGoods>();
    // orderGoods = orderGoodsManager.getOrderGoodsList();
    // String[] goodId = new String[10];
    // int index = 0;
    // for (Iterator it = orderGoods.iterator(); it.hasNext();) {
    // OrderGoods orderGood = (OrderGoods)it.next();
    // goodId[index] = orderGood.getGoods().getId()+"";
    // index++;
    // }
    // 销量前十
    List<OrderGoods> topList = new ArrayList<OrderGoods>();
    topList = orderGoodsManager.getList("from OrderGoods t GROUP by t.goods ORDER by COUNT(t.goods) DESC limit 10");
    request.setAttribute("topList", topList);
    // 购物车信息
    cartInfoShow(request);
    return mapping.findForward("home");
}
