void close() throws IOException {
    if (this.infoServer != null) {
        LOG.info("Stopping infoServer");
        try {
            this.infoServer.stop();
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
    }
    if (this.interTrackerServer != null) {
        LOG.info("Stopping interTrackerServer");
        this.interTrackerServer.stop();
    }
    if (this.expireTrackersThread != null && this.expireTrackersThread.isAlive()) {
        LOG.info("Stopping expireTrackers");
        this.expireTrackersThread.interrupt();
        try {
            this.expireTrackersThread.join();
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
    }
    if (this.retireJobsThread != null && this.retireJobsThread.isAlive()) {
        LOG.info("Stopping retirer");
        this.retireJobsThread.interrupt();
        try {
            this.retireJobsThread.join();
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
    }
    if (taskScheduler != null) {
        taskScheduler.terminate();
    }
    if (this.expireLaunchingTaskThread != null && this.expireLaunchingTaskThread.isAlive()) {
        LOG.info("Stopping expireLaunchingTasks");
        this.expireLaunchingTaskThread.interrupt();
        try {
            this.expireLaunchingTaskThread.join();
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
    }
    if (this.completedJobsStoreThread != null && this.completedJobsStoreThread.isAlive()) {
        LOG.info("Stopping completedJobsStore thread");
        this.completedJobsStoreThread.interrupt();
        try {
            this.completedJobsStoreThread.join();
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
    }
    LOG.info("stopped all jobtracker services");
    return;
}
