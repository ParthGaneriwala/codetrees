void update() {
    Collections.sort(list);
    hm = new HashMap<Integer, Integer>();
    int off = 0;
    int offset = 0;
    B: while (true) {
        if (off < list.size()) {
            offset = list.get(off);
        } else {
            break;
        }
        int length = 1;
        C: while (true) {
            if (off < list.size()) {
                int nowBlock = list.get(off);
                if ((off + 1) < list.size()) {
                    int nextBlock = list.get(off + 1);
                    off++;
                    if (nextBlock - nowBlock == 1) {
                        length++;
                    } else {
                        break C;
                    }
                } else {
                    off++;
                    break C;
                }
            } else {
                break B;
            }
        }
        hm.put(offset, length);
    }
    bb = new byte[2 + hm.size() * 8];
    ByteShortSwitch.toByteArray((short) hm.size(), bb, 0);
    Iterator<Integer> it = hm.keySet().iterator();
    for (int i = 0; i < hm.size(); i++) {
        int offset2 = it.next();
        int length2 = hm.get(offset2);
        ByteIntSwitch.toByteArray(offset2, bb, 2 + i * 8);
        ByteIntSwitch.toByteArray(length2, bb, 2 + i * 8 + 4);
    }
    isChange = false;
}
