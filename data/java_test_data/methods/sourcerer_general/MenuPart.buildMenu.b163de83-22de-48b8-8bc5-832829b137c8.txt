private MenuBarExt buildMenu() {
    menu = new MenuBarExt(false);
    MenuBarExt fileMenu = new MenuBarExt(true);
    addMenuItem(fileMenu, IconsHelper.icons.NewDocument(), "New", new NewDocumentStartCommand());
    fileMenu.addSeparator();
    addMenuItem(fileMenu, IconsHelper.icons.OpenDocument(), "Open", new ExistingDocumentOpenCommand());
    addMenuItem(fileMenu, IconsHelper.icons.Save(), "Save", new CurrentDocumentSaveCommand());
    addMenuItem(fileMenu, IconsHelper.icons.Blank(), "Save as new copy", new CurrentDocumentCopyCommand());
    addMenuItem(fileMenu, IconsHelper.icons.Blank(), "Rename...", new CurrentDocumentRenameCommand());
    addMenuItem(fileMenu, IconsHelper.icons.Blank(), "Delete...", new CurrentDocumentDeleteCommand());
    addMenuItem(fileMenu, IconsHelper.icons.Blank(), "Revision History", new CurrentDocumentRevisionHistoryCommand());
    fileMenu.addSeparator();
    addMenuItem(fileMenu, IconsHelper.icons.UploadDocument(), "Upload Files...", new SystemUploadDocumentsCommand());
    this.menu.addItem("File", fileMenu);
    MenuBarExt viewMenu = new MenuBarExt(true);
    addMenuItem(viewMenu, IconsHelper.icons.Blank(), "Full-screen mode", new DesktopFullScreenCommand());
    this.menu.addItem("View", viewMenu);
    MenuBarExt desktopMenu = new MenuBarExt(true);
    addMenuItem(desktopMenu, IconsHelper.icons.IconNew(), "Add new icon", new DialogIconNewCommand());
    addMenuItem(desktopMenu, IconsHelper.icons.FolderNew(), "Add new folder", new DialogFolderNewCommand());
    addMenuItem(desktopMenu, IconsHelper.icons.WindowNew(), "Add new window", new DialogWindowNewCommand());
    desktopMenu.addSeparator();
    addMenuItem(desktopMenu, IconsHelper.icons.Style(), "Desktop Preferences", new DialogPreferencesCommand());
    this.menu.addItem("Desktop", desktopMenu);
    MenuBarExt helpMenu = new MenuBarExt(true);
    addMenuItem(helpMenu, IconsHelper.icons.Blank(), "About", new DialogAboutCommand());
    this.menu.addItem("Help", helpMenu);
    return menu;
}
