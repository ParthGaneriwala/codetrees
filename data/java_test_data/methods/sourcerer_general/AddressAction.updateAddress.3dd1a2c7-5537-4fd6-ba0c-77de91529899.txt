public ActionForward updateAddress(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse resqonse) {
    if (!isLoggedIn(request)) {
        return mapping.findForward(ForwardConstants.INDEX);
    }
    if (!this.isTokenValid(request)) {
        this.saveToken(request);
        SessionContainer existingContainer = getSessionContainer(request);
        Customer customer = existingContainer.getCustomer();
        List<Address> allAddress = addressService.findAddresssesById(customer.getId());
        request.setAttribute("allAddress", allAddress);
        List<AllAddress> provinces = allAddressService.findFirst();
        request.setAttribute("provinces", provinces);
        return mapping.findForward(ForwardConstants.ADDRESS);
    } else {
        this.resetToken(request);
    }
    DynaBean addressForm = (DynaBean) form;
    Integer id = (Integer) addressForm.get("id");
    String name = (String) addressForm.get("name");
    String province = (String) addressForm.get("province");
    String city = (String) addressForm.get("city");
    String county = (String) addressForm.get("county");
    String street = (String) addressForm.get("street");
    String zipcode = (String) addressForm.get("zipcode");
    String mobilePhone = (String) addressForm.get("mobilePhone");
    String phone = (String) addressForm.get("phone");
    String idCard = (String) addressForm.get("idcard");
    SessionContainer existingContainer = getSessionContainer(request);
    Customer customer = existingContainer.getCustomer();
    Address address = addressService.findById((id));
    address.setName(name);
    address.setProvince(province);
    address.setCity(city);
    address.setCounty(county);
    address.setStreet(street);
    address.setZipcode(zipcode);
    address.setMobilePhone(mobilePhone);
    address.setPhone(phone);
    address.setIdCard(idCard);
    address.setCustomer(customer);
    customer.getAddresses().add(address);
    addressService.updateAddress(address);
    List<AllAddress> provinces = allAddressService.findFirst();
    request.setAttribute("provinces", provinces);
    // int count = addressService.findAddressesCountByCustomerId(customer.getId());
    // Pager pager = initPager(form, count);
    // request.setAttribute("pager", pager);
    // List<Address> allAddress = addressService.findAddresssesByStartRowAndEndRow(customer.getId(),
    // pager.getOffset(), pager.getPageRecordSize());
    List<Address> allAddress = addressService.findAddresssesById(customer.getId());
    request.setAttribute("allAddress", allAddress);
    return mapping.findForward("showAddress");
}
