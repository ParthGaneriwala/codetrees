public ObjOffering[] getOffering(String quarter, int year) {
    String tablename = "Offering";
    ObjOffering[] off = new ObjOffering[countRow(tablename)];
    for (int i = 0; i < off.length; ++i) off[i] = new ObjOffering();
    try {
        ResultSet rs = stmt.executeQuery("SELECT * " + "FROM " + tablename + " " + "WHERE quarter='" + quarter + "'  AND " + "      year= " + year + " ");
        for (int i = 0; rs.next(); ++i) {
            int start = rs.getInt("start");
            int end = rs.getInt("end");
            off[i].courseid = rs.getString("courseid");
            off[i].section = rs.getString("section");
            off[i].quarter = rs.getString("quarter");
            off[i].instructor = rs.getString("instructor");
            off[i].room = rs.getString("room");
            off[i].year = rs.getInt("year");
            off[i].startdate = rs.getString("startdate");
            if (rs.getString("sunday") != null) {
                off[i].days[0][0] = start;
                off[i].days[0][1] = end;
                off[i].sunS = start;
                off[i].sunE = end;
            } else {
                off[i].days[0][0] = 2400;
                off[i].days[0][1] = -1;
                off[i].sunS = 2400;
                off[i].sunE = -1;
            }
            if (rs.getString("monday") != null) {
                off[i].days[1][0] = start;
                off[i].days[1][1] = end;
                off[i].monS = start;
                off[i].monE = end;
            } else {
                off[i].days[1][0] = 2400;
                off[i].days[1][1] = -1;
                off[i].monS = 2400;
                off[i].monE = -1;
            }
            if (rs.getString("tuesday") != null) {
                off[i].days[2][0] = start;
                off[i].days[2][1] = end;
                off[i].tueS = start;
                off[i].tueE = end;
            } else {
                off[i].days[2][0] = 2400;
                off[i].days[2][1] = -1;
                off[i].tueS = 2400;
                off[i].tueE = -1;
            }
            if (rs.getString("wednesday") != null) {
                off[i].days[3][0] = start;
                off[i].days[3][1] = end;
                off[i].wedS = start;
                off[i].wedE = end;
            } else {
                off[i].days[3][0] = 2400;
                off[i].days[3][1] = -1;
                off[i].wedS = 2400;
                off[i].wedE = -1;
            }
            if (rs.getString("thursday") != null) {
                off[i].days[4][0] = start;
                off[i].days[4][1] = end;
                off[i].thuS = start;
                off[i].thuE = end;
            } else {
                off[i].days[4][0] = 2400;
                off[i].days[4][1] = -1;
                off[i].thuS = 2400;
                off[i].thuE = -1;
            }
            if (rs.getString("friday") != null) {
                off[i].days[5][0] = start;
                off[i].days[5][1] = end;
                off[i].friS = start;
                off[i].friE = end;
            } else {
                off[i].days[5][0] = 2400;
                off[i].days[5][1] = -1;
                off[i].friS = 2400;
                off[i].friE = -1;
            }
            if (rs.getString("saturday") != null) {
                off[i].days[6][0] = start;
                off[i].days[6][1] = end;
                off[i].satS = start;
                off[i].satE = end;
            } else {
                off[i].days[6][0] = 2400;
                off[i].days[6][1] = -1;
                off[i].satS = 2400;
                off[i].satE = -1;
            }
        }
    } catch (SQLException e) {
        qp("SQL ERROR: Found in Obj[] getOffering(quarter,year)");
        e.printStackTrace(System.err);
    }
    return off;
}
