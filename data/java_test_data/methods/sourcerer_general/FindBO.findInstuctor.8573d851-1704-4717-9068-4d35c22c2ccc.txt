public ArrayList<InstructorVO> findInstuctor(InstructorSearchCriteria searchCriteria) throws SjsuUniversiryException {
    ArrayList<InstructorVO> instructorList = null;
    StringBuilder sql = new StringBuilder();
    sql.append(" SELECT * FROM PERSON  WHERE PERSONTYPE='Instructor' ");
    boolean[] isWhr = new boolean[1];
    isWhr[0] = true;
    sql.append(getPersonClause(searchCriteria, isWhr));
    // searchByEmployeeId
    if (searchCriteria.isSearchByEmployeeId()) {
        if (isWhr[0])
            sql.append(" and ");
        sql.append(" Pid= '" + searchCriteria.getInstructor().getEmployeeID() + "'");
        isWhr[0] = true;
    }
    // searchByDepartment
    if (searchCriteria.isSearchByDepartment()) {
        if (isWhr[0])
            sql.append(" and ");
        sql.append(" Dept= '" + searchCriteria.getInstructor().getDepartment() + "'");
        isWhr[0] = true;
    }
    try {
        System.out.println("SQL > " + sql);
        MyDBConnection db = new MyDBConnection();
        Connection con = db.getMyConnection();
        Statement smt = con.createStatement();
        ResultSet rs = smt.executeQuery(sql.toString());
        instructorList = new ArrayList<InstructorVO>();
        while (rs.next()) {
            InstructorVO instructor = new InstructorVO();
            instructor.setFisrtName(rs.getString("firstname"));
            instructor.setLastName(rs.getString("lastname"));
            instructor.setAddress(rs.getString("address"));
            instructor.setCity(rs.getString("city"));
            instructor.setState(rs.getString("state"));
            instructor.setEmployeeID(rs.getString("pid"));
            instructor.setDepartment(rs.getString("Dept"));
            MeetingHrs hrs = new MeetingHrs();
            hrs.setDay(rs.getString("PDay"));
            hrs.setStartHr(rs.getInt("PStartTime"));
            hrs.setEndHr(rs.getInt("PEndTime"));
            instructor.setOfficeHours(hrs);
            int locationId = rs.getInt("Lid");
            LocationVO location = null;
            if (locationId > 0) {
                location = getLocationInfo(locationId);
            }
            instructor.setLocation(location);
            instructor.setZip(rs.getInt("zip"));
            instructorList.add(instructor);
        }
        MyDBConnection.close(smt);
        MyDBConnection.close(rs);
    } catch (Exception e) {
        e.printStackTrace();
        SjsuUniversiryException.raiseException("Unable to Search the Person : " + e.getMessage(), e);
    }
    return instructorList;
}
