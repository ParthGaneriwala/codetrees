protected Node parseJsp(int start) throws ParserException {
    boolean done;
    char ch;
    int state;
    Vector attributes;
    int code;
    done = false;
    state = 0;
    code = 0;
    attributes = new Vector();
    // 0122223d
    while (!done) {
        ch = mPage.getCharacter(mCursor);
        switch(state) {
            case // prior to the percent
            0:
                switch(ch) {
                    case // <%
                    '%':
                        state = 1;
                        break;
                    // case '>': // <>
                    default:
                        done = true;
                        break;
                }
                break;
            case // prior to the optional qualifier
            1:
                switch(ch) {
                    // <%\0
                    case Page.EOF:
                    case // <%>
                    '>':
                        done = true;
                        break;
                    // <%=
                    case '=':
                    case // <%@
                    '@':
                        code = mCursor.getPosition();
                        attributes.addElement(new PageAttribute(mPage, start + 1, code, -1, -1, (char) 0));
                        state = 2;
                        break;
                    default:
                        // <%x
                        code = mCursor.getPosition() - 1;
                        attributes.addElement(new PageAttribute(mPage, start + 1, code, -1, -1, (char) 0));
                        state = 2;
                        break;
                }
                break;
            case // prior to the closing percent
            2:
                switch(ch) {
                    // <%x\0
                    case Page.EOF:
                    case // <%x>
                    '>':
                        done = true;
                        break;
                    case '\'':
                    case // <%???"
                    '"':
                        state = ch;
                        break;
                    case // <%???%
                    '%':
                        state = 3;
                        break;
                    case // // or /*
                    '/':
                        ch = mPage.getCharacter(mCursor);
                        if (ch == '/') {
                            // find the \n or \r
                            while (true) {
                                ch = mPage.getCharacter(mCursor);
                                if (ch == Page.EOF) {
                                    done = true;
                                    break;
                                } else if (ch == '\n' || ch == '\r') {
                                    break;
                                }
                            }
                        } else if (ch == '*') {
                            do {
                                do ch = mPage.getCharacter(mCursor); while ((Page.EOF != ch) && ('*' != ch));
                                ch = mPage.getCharacter(mCursor);
                                if (ch == '*')
                                    mPage.ungetCharacter(mCursor);
                            } while ((Page.EOF != ch) && ('/' != ch));
                        } else
                            mPage.ungetCharacter(mCursor);
                        break;
                    default:
                        // <%???x
                        break;
                }
                break;
            case 3:
                switch(ch) {
                    case // <%x??%\0
                    Page.EOF:
                        done = true;
                        break;
                    case '>':
                        state = 4;
                        done = true;
                        break;
                    default:
                        // <%???%x
                        state = 2;
                        break;
                }
                break;
            case '"':
                switch(ch) {
                    case // <%x??"\0
                    Page.EOF:
                        done = true;
                        break;
                    case '"':
                        state = 2;
                        break;
                    default:
                        // <%???'??x
                        break;
                }
                break;
            case '\'':
                switch(ch) {
                    case // <%x??'\0
                    Page.EOF:
                        done = true;
                        break;
                    case '\'':
                        state = 2;
                        break;
                    default:
                        // <%???"??x
                        break;
                }
                break;
            default:
                throw new IllegalStateException("how the fuck did we get in state " + state);
        }
    }
    if (// normal exit
    4 == state) {
        if (0 != code) {
            // reuse state
            state = mCursor.getPosition() - 2;
            attributes.addElement(new PageAttribute(mPage, code, state, -1, -1, (char) 0));
            attributes.addElement(new PageAttribute(mPage, state, state + 1, -1, -1, (char) 0));
        } else
            throw new IllegalStateException("jsp with no code!");
    } else
        // hmmm, true?
        return (parseString(start, true));
    return (makeTag(start, mCursor.getPosition(), attributes));
}
