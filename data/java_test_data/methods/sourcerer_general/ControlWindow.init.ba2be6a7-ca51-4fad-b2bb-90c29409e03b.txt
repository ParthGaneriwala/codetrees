protected void init() {
    _myPointer = new Pointer();
    String myRenderer = _myApplet.g.getClass().toString().toLowerCase();
    is3D = (myRenderer.contains("gl") || myRenderer.contains("3d"));
    _myPicking = new ControlPicking(this);
    _myTabs = new ControllerList();
    _myControlWindowCanvas = new ArrayList<ControlWindowCanvas>();
    _myControlCanvas = new ArrayList<ControlCanvas>();
    mouseoverlist = new ArrayList<Controller>();
    // TODO next section conflicts with Android
    if (_myApplet instanceof PAppletWindow) {
        _myName = ((PAppletWindow) _myApplet).name();
        isPAppletWindow = true;
        ((PAppletWindow) _myApplet).setControlWindow(this);
    }
    if (_myApplet instanceof PAppletWindow) {
        background = 0xff000000;
    }
    if (isInit == false) {
        // TODO next section conflicts with Android
        if (_myApplet instanceof PAppletWindow) {
            _myApplet.registerKeyEvent(new ControlWindowKeyListener(this));
        } else {
            ControlP5.keyHandler.update(this);
        }
    }
    _myTabs.add(new Tab(controlP5, this, "global"));
    _myTabs.add(new Tab(controlP5, this, "default"));
    activateTab((Tab) _myTabs.get(1));
    if (_myApplet.g.getClass().getName().indexOf("PGraphics2D") > -1 || _myApplet.g.getClass().getName().indexOf("PGraphics3D") > -1) {
        if (rendererNotification == false) {
            ControlP5.logger().info("You are using renderer " + _myApplet.g.getClass().getName() + ".\n" + "In order to render controlP5 elements you need to call the ControlP5's draw() manually.\n" + "Suggestion is to put controlP5.draw(); at the bottom of the draw function of your sketch.");
            rendererNotification = true;
        }
    } else {
        if (isInit == false) {
            _myApplet.registerPre(this);
            // _myApplet.registerPost(this);
            _myApplet.registerDraw(this);
        }
    }
    isInit = true;
}
