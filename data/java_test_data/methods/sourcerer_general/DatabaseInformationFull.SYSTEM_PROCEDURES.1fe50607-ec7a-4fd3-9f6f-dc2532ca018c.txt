Table SYSTEM_PROCEDURES() throws HsqlException {
    Table t = sysTables[SYSTEM_PROCEDURES];
    if (t == null) {
        return super.SYSTEM_PROCEDURES();
    }
    // calculated column values
    // ------------------------
    // required
    // ------------------------
    String catalog;
    String schema;
    String procName;
    Integer numInputParams;
    Integer numOutputParams;
    Integer numResultSets;
    String remarks;
    Integer procRType;
    // -------------------
    // extended
    // -------------------
    String procOrigin;
    String specificName;
    // intermediate holders
    String alias;
    HsqlArrayList aliasList;
    Iterator methods;
    Object[] methodInfo;
    Method method;
    String methodOrigin;
    Object[] row;
    // Initialization
    // and aliases
    methods = ns.iterateAllAccessibleMethods(session, true);
    // Do it.
    while (methods.hasNext()) {
        methodInfo = (Object[]) methods.next();
        method = (Method) methodInfo[0];
        aliasList = (HsqlArrayList) methodInfo[1];
        methodOrigin = (String) methodInfo[2];
        pi.setMethod(method);
        catalog = ns.getCatalogName(method);
        schema = ns.getSchemaName(method);
        procName = pi.getFQN();
        numInputParams = pi.getInputParmCount();
        numOutputParams = pi.getOutputParmCount();
        numResultSets = pi.getResultSetCount();
        remarks = pi.getRemark();
        procRType = pi.getResultType(methodOrigin);
        procOrigin = pi.getOrigin(methodOrigin);
        specificName = pi.getSpecificName();
        addProcRows(t, aliasList, catalog, schema, procName, numInputParams, numOutputParams, numResultSets, remarks, procRType, procOrigin, specificName);
    }
    t.setDataReadOnly(true);
    return t;
}
