public void onClickKeyCreation(TEnumCreationKey keyType) {
    // Couleurs par défaut
    Color normalColor = CProfil.getInstance().getDefaultColor().getDefaultKeyNormal().getColor();
    Color enteredColor = CProfil.getInstance().getDefaultColor().getDefaultKeyEntered().getColor();
    Color pressedColor = CProfil.getInstance().getDefaultColor().getDefaultKeyClicked().getColor();
    TPoint newKeyMin = new TPoint(.5f - (NEW_KEY_RELATIVE_WIDTH / 2), .5f - (NEW_KEY_RELATIVE_HEIGHT / 2));
    TPoint newKeyMax = new TPoint(.5f + (NEW_KEY_RELATIVE_WIDTH / 2), .5f + (NEW_KEY_RELATIVE_HEIGHT / 2));
    UIKey newUIKeyGlobal;
    // Points
    if (keyType == TEnumCreationKey.T_KEY_CHARACTER) {
        // Création de l'objet du noyau
        CKeyCharacter newCoreKey = new CKeyCharacter(normalColor, pressedColor, enteredColor, false, newKeyMin, newKeyMax);
        // Création de l'objet de l'UI
        UIKeyCharacter newUIKey = new UIKeyCharacter(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else if (keyType == TEnumCreationKey.T_KEY_CLAVICOM_CLOSE_APPLICATION) {
        // Création de l'objet du noyau
        CKeyClavicom newCoreKey = new CKeyClavicom(normalColor, pressedColor, enteredColor, false, newKeyMin, newKeyMax, TKeyClavicomActionType.CLOSE_APPLICATION, CFilePaths.getToolKeyClavicomClosePicture());
        // On dit que c'est une image
        newCoreKey.setCaptionImage(true);
        // Création de l'objet de l'UI
        UIKeyClavicom newUIKey = new UIKeyClavicom(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else if (keyType == TEnumCreationKey.T_KEY_CLAVICOM_OPEN_CONFIGURATION) {
        // Création de l'objet du noyau
        CKeyClavicom newCoreKey = new CKeyClavicom(normalColor, pressedColor, enteredColor, false, newKeyMin, newKeyMax, TKeyClavicomActionType.OPEN_CONFIGURATION, CFilePaths.getToolKeyClavicomConfigurationPicture());
        // On dit que c'est une image
        newCoreKey.setCaptionImage(true);
        // Création de l'objet de l'UI
        UIKeyClavicom newUIKey = new UIKeyClavicom(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else if (keyType == TEnumCreationKey.T_KEY_CLAVICOM_SWITCH_SOURICOM) {
        // Création de l'objet du noyau
        CKeyClavicom newCoreKey = new CKeyClavicom(normalColor, pressedColor, enteredColor, false, newKeyMin, newKeyMax, TKeyClavicomActionType.SWITCH_KEYBOARD_MOUSE, CFilePaths.getToolKeyClavicomSwitchSouricomPicture());
        // On dit que c'est une image
        newCoreKey.setCaptionImage(true);
        // Création de l'objet de l'UI
        UIKeyClavicom newUIKey = new UIKeyClavicom(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else if (keyType == TEnumCreationKey.T_KEY_CLAVICOM_MINIMIZE_APPLICATION) {
        // Création de l'objet du noyau
        CKeyClavicom newCoreKey = new CKeyClavicom(normalColor, pressedColor, enteredColor, false, newKeyMin, newKeyMax, TKeyClavicomActionType.MINIMIZE_APPLICATION, CFilePaths.getToolKeyClavicomMinimizePicture());
        // On dit que c'est une image
        newCoreKey.setCaptionImage(true);
        // Création de l'objet de l'UI
        UIKeyClavicom newUIKey = new UIKeyClavicom(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else if (keyType == TEnumCreationKey.T_KEY_LASTWORD) {
        // Création de l'objet du noyau
        CKeyLastWord newCoreKey = new CKeyLastWord(normalColor, pressedColor, enteredColor, false, newKeyMin, newKeyMax);
        // Création de l'objet de l'UI
        UIKeyLastWord newUIKey = new UIKeyLastWord(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else if (keyType == TEnumCreationKey.T_KEY_LAUNCHER) {
        // Création de l'objet du noyau
        CKeyLauncher newCoreKey = new CKeyLauncher(normalColor, pressedColor, enteredColor, false, newKeyMin, newKeyMax);
        // Création de l'objet de l'UI
        UIKeyLauncher newUIKey = new UIKeyLauncher(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else if (keyType == TEnumCreationKey.T_KEY_SOUND) {
        // Création de l'objet du noyau
        CKeySound newCoreKey = new CKeySound(normalColor, pressedColor, enteredColor, false, newKeyMin, newKeyMax);
        // Création de l'objet de l'UI
        UIKeySound newUIKey = new UIKeySound(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else if (keyType == TEnumCreationKey.T_KEY_LEVEL_SHIFT) {
        // Création de l'objet du noyau
        CKeyLevel newCoreKey = new CKeyLevel(normalColor, pressedColor, enteredColor, true, newKeyMin, newKeyMax, TLevelEnum.SHIFT, "", false);
        // Création de l'objet de l'UI
        UIKeyLevel newUIKey = new UIKeyLevel(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else if (keyType == TEnumCreationKey.T_KEY_LEVEL_CAPS_LOCK) {
        // Création de l'objet du noyau
        CKeyLevel newCoreKey = new CKeyLevel(normalColor, pressedColor, enteredColor, true, newKeyMin, newKeyMax, TLevelEnum.SHIFT, "", true);
        // Création de l'objet de l'UI
        UIKeyLevel newUIKey = new UIKeyLevel(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else if (keyType == TEnumCreationKey.T_KEY_LEVEL_ALTGR) {
        // Création de l'objet du noyau
        CKeyLevel newCoreKey = new CKeyLevel(normalColor, pressedColor, enteredColor, true, newKeyMin, newKeyMax, TLevelEnum.ALT_GR, "", false);
        // Création de l'objet de l'UI
        UIKeyLevel newUIKey = new UIKeyLevel(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else if (keyType == TEnumCreationKey.T_KEY_PREDICTION) {
        // Création de l'objet du noyau
        CKeyPrediction newCoreKey = new CKeyPrediction(normalColor, pressedColor, enteredColor, false, newKeyMin, newKeyMax);
        // Création de l'objet de l'UI
        UIKeyPrediction newUIKey = new UIKeyPrediction(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else if (keyType == TEnumCreationKey.T_KEY_SHORTCUT) {
        // Création de l'objet du noyau
        CKeyShortcut newCoreKey = new CKeyShortcut(normalColor, pressedColor, enteredColor, false, newKeyMin, newKeyMax);
        // Création de l'objet de l'UI
        UIKeyShortcut newUIKey = new UIKeyShortcut(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else if (keyType == TEnumCreationKey.T_KEY_STRING) {
        // Création de l'objet du noyau
        CKeyString newCoreKey = new CKeyString(normalColor, pressedColor, enteredColor, false, newKeyMin, newKeyMax);
        // Création de l'objet de l'UI
        UIKeyString newUIKey = new UIKeyString(newCoreKey);
        // Affectation à l'objet global
        addCreatedKey(newUIKey);
        newUIKeyGlobal = newUIKey;
    } else {
        return;
    }
    // On met la grille à la touche
    newUIKeyGlobal.setMagnetGrid(magnetGrid);
    newUIKeyGlobal.setMagnetGridUsed(useMagnedGrid);
    // Taille du texte par défaut
    newUIKeyGlobal.setFontSize(fontSize);
    // Abonnement au moteur de clic temporisé
    newUIKeyGlobal.addMouseOverListener(ClickTemporiseEngine.getInstance());
    // On alerte qu'une nouvelle key a été créée
    fireKeyCreated(newUIKeyGlobal);
}
