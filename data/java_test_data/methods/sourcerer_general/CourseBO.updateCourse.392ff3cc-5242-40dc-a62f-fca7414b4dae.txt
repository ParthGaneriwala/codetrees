public void updateCourse(CourseVO course) throws SjsuUniversiryException {
    try {
        Statement s;
        Connection conn;
        conn = con.getMyConnection();
        String Coursename = course.getName();
        if (Coursename.equals("")) {
            SjsuUniversiryException.raiseException("Enter course name");
        }
        int Section = course.getSection();
        if (Section <= 0) {
            SjsuUniversiryException.raiseException("Malformed section");
        }
        int Units = course.getUnits();
        if (Units <= 0) {
            SjsuUniversiryException.raiseException("Malformed units");
        }
        String[] days = { "M", "T", "W", "R", "F", "S", "U", "TBA" };
        String day = course.getMeetingHrs().getDay();
        boolean isDayFound = false;
        for (int i = 0; i < days.length; i++) {
            if (day.equals(days[i]))
                ;
            isDayFound = true;
        }
        if (!isDayFound || day == null)
            SjsuUniversiryException.raiseException("Malformed day format");
        int starttime = course.getMeetingHrs().getStartHr();
        int endtime = course.getMeetingHrs().getEndHr();
        boolean p = false;
        if (!(starttime >= 0 || starttime <= 2359))
            p = true;
        if (!(endtime >= 0 || endtime <= 2359))
            p = true;
        if (starttime >= endtime)
            p = true;
        if (p)
            SjsuUniversiryException.raiseException("Malformed time format");
        if (course.getLoction().getBuilding().equals(""))
            SjsuUniversiryException.raiseException("Please enter building");
        if (isStudentEnrolled(course))
            SjsuUniversiryException.raiseException("Students are already enrolled");
        s = conn.createStatement();
        int locid = 0;
        String Building = course.getLoction().getBuilding();
        int room = course.getLoction().getRoom();
        locid = locExists(Building, room);
        if (locid == 0)
            locid = insertLocation(Building, room);
        if (locClash(course, locid))
            SjsuUniversiryException.raiseException("Location clas for two courses at same time");
        String sql = "Update course c, location l SET c.CourseName = '" + course.getName() + "', c.Section = '" + course.getSection() + "', c.Units = '" + course.getUnits() + "', c.CDay = '" + course.getMeetingHrs().getDay() + "', c.CStartTime = '" + course.getMeetingHrs().getStartHr() + "', c.CEndTime = '" + course.getMeetingHrs().getEndHr() + "', l.Lid = '" + locid + "', l.Building = '" + course.getLoction().getBuilding() + "', l.RoomNo = '" + course.getLoction().getRoom() + "' where (c.CourseName = '" + course.getName() + "' AND l.Lid = '" + locid + "' AND c.Section = '" + course.getSection() + "')";
        s.executeUpdate(sql);
        System.out.println("Course updated");
        MyDBConnection.close(s);
    } catch (SjsuUniversiryException ex) {
        throw ex;
    } catch (Exception e) {
        SjsuUniversiryException.raiseException("Cannot update course", e);
        e.printStackTrace();
    }
}
