private void play(Alarm alarm) {
    // stop() checks to see if we are already playing.
    stop();
    if (Log.LOGV) {
        Log.v("AlarmKlaxon.play() " + alarm.id + " alert " + alarm.alert);
    }
    if (!alarm.silent) {
        Uri alert = alarm.alert;
        // alarm stored.
        if (alert == null) {
            alert = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_ALARM);
            if (Log.LOGV) {
                Log.v("Using default alarm: " + alert.toString());
            }
        }
        // TODO: Reuse mMediaPlayer instead of creating a new one and/or use
        // RingtoneManager.
        mMediaPlayer = new MediaPlayer();
        mMediaPlayer.setOnErrorListener(new OnErrorListener() {

            public boolean onError(MediaPlayer mp, int what, int extra) {
                Log.e("Error occurred while playing audio.");
                mp.stop();
                mp.release();
                mMediaPlayer = null;
                return true;
            }
        });
        try {
            // resource at a low volume to not disrupt the call.
            if (mTelephonyManager.getCallState() != TelephonyManager.CALL_STATE_IDLE) {
                Log.v("Using the in-call alarm");
                mMediaPlayer.setVolume(IN_CALL_VOLUME, IN_CALL_VOLUME);
                setDataSourceFromResource(getResources(), mMediaPlayer, R.raw.in_call_alarm);
            } else {
                mMediaPlayer.setDataSource(this, alert);
            }
            startAlarm(mMediaPlayer);
        } catch (Exception ex) {
            Log.v("Using the fallback ringtone");
            // now. Use the fallback ringtone.
            try {
                // Must reset the media player to clear the error state.
                mMediaPlayer.reset();
                setDataSourceFromResource(getResources(), mMediaPlayer, R.raw.in_call_alarm);
                startAlarm(mMediaPlayer);
            } catch (Exception ex2) {
                // At this point we just don't play anything.
                Log.e("Failed to play fallback ringtone", ex2);
            }
        }
    }
    /* Start the vibrator after everything is ok with the media player */
    if (alarm.vibrate) {
        mVibrator.vibrate(sVibratePattern, 0);
    } else {
        mVibrator.cancel();
    }
    enableKiller(alarm);
    mPlaying = true;
    mStartTime = System.currentTimeMillis();
}
