public static Eval updateResult(Eval eval, String result, ArrayList<String> hp1, ArrayList<String> hp2, ArrayList<String> wp1, ArrayList<String> wp2) {
    int relscore = Config.relscore;
    int priscore = Config.priscore;
    String topic = eval.getTid();
    String type = eval.getType();
    int rr1 = 0;
    int rr2 = 0;
    double p10 = 0.0;
    double dcg = 0.0;
    int chp = 0;
    int cwp = 0;
    try {
        FileReader sw = new FileReader(result);
        BufferedReader swRead = new BufferedReader(sw);
        String st;
        while ((st = swRead.readLine()) != null) {
            if (st.length() < 2)
                continue;
            // System.out.println(st);
            String[] ss = st.split(" ");
            if (!topic.equals(ss[0].split("-")[0]) || !type.equals(ss[0].split("-")[1].substring(0, 2)))
                continue;
            String docno = ss[2];
            // int rank=Integer.parseInt(ss[3]);
            String runid = ss[5];
            if (type.equals("WP")) {
                cwp += 1;
                if (wp1.contains(docno)) {
                    rr1 += 1;
                    if (cwp == 1)
                        dcg = relscore;
                    else {
                        dcg += relscore / (Math.log(chp) / Math.log(2));
                    }
                } else if (wp2.contains(docno)) {
                    rr2 += 1;
                    if (cwp <= 10)
                        p10 += 1;
                    if (cwp == 1)
                        dcg = priscore;
                    else {
                        dcg += priscore / (Math.log(chp) / Math.log(2));
                    }
                }
            } else if (type.equals("HP")) {
                chp += 1;
                if (hp1.contains(docno)) {
                    rr1 += 1;
                    if (chp == 1)
                        dcg = relscore;
                    else {
                        dcg += relscore / (Math.log(chp) / Math.log(2));
                    }
                } else if (hp2.contains(docno)) {
                    rr2 += 1;
                    if (chp <= 10)
                        p10 += 1;
                    if (chp == 1)
                        dcg = priscore;
                    else {
                        dcg += priscore / (Math.log(chp) / Math.log(2));
                    }
                // System.out.println(eval.getTid()+"\t"+eval.getType()+"\t"+dcg+"\t"+chp);
                }
            // System.out.println(eval.getTid()+"\t"+eval.getType()+"\t"+dcg+"\t"+chp);
            }
        }
        swRead.close();
        sw.close();
    } catch (Exception e) {
        e.printStackTrace();
    }
    int pri = eval.getNum_pri();
    int rel = eval.getNum_rel();
    // System.out.println(pri);
    double idcg = 0.0;
    int rank = chp;
    if (type.equals("WP"))
        rank = cwp;
    if (rank <= pri) {
        if (pri > 0) {
            idcg = priscore;
        }
        for (int m = 2; m < rank + 1; m++) {
            idcg += priscore / (Math.log(m) / Math.log(2));
        }
    } else if (rank <= pri + rel) {
        if (pri > 0) {
            idcg = priscore;
        } else if (rel > 0)
            idcg = relscore;
        if (pri > 1) {
            for (int m = 2; m < pri + 1; m++) {
                idcg += priscore / (Math.log(m) / Math.log(2));
            }
        }
        if (rel > 1) {
            for (int m = 1; m < rank - pri + 1; m++) {
                idcg += relscore / (Math.log(m + pri) / Math.log(2));
            }
        }
    } else {
        if (pri > 0) {
            idcg = priscore;
        } else if (rel > 0)
            idcg = relscore;
        // System.out.println("==> idcg"+eval.getTid()+"\t"+eval.getType()+"\t"+rank+"\t"+idcg);
        if (pri > 1) {
            for (int m = 2; m < pri + 1; m++) {
                idcg += priscore / (Math.log(m) / Math.log(2));
            // System.out.println("==> idcg"+eval.getTid()+"\t"+eval.getType()+"\t"+rank+"\t"+m+"\t"+idcg);
            }
        }
        if (rel > 1) {
            for (int m = 1; m < rel + 1; m++) {
                idcg += relscore / (Math.log(m + pri) / Math.log(2));
            // System.out.println("==> idcg"+eval.getTid()+"\t"+eval.getType()+"\t"+rank+"\t"+idcg);
            }
        }
    }
    double ndcg = 0;
    if (dcg > 0)
        ndcg = dcg / idcg;
    if (idcg == 0)
        ndcg = 0;
    // System.out.println(eval.getTid()+"\t"+eval.getType()+"\t"+dcg+"\t"+idcg);
    eval.setNum_ret(chp);
    if (type.equals("WP"))
        eval.setNum_ret(cwp);
    eval.setPri_ret(rr2);
    eval.setRet_rel(rr1);
    eval.setP10(p10 / 10);
    eval.setNdcg(ndcg);
    return eval;
}
