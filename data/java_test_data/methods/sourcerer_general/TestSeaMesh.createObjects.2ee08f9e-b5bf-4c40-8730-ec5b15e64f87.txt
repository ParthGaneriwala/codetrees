private Node createObjects() {
    Node objects = new Node("objects");
    int torusRadius = 20;
    Torus torusVisible = new Torus("Torus", 20, 20, torusCylRadius, torusCylRadius * 2);
    // torus.setLocalTranslation( new Vector3f( 50, 50, 20 ) );
    TextureState ts = display.getRenderer().createTextureState();
    Texture t0 = TextureManager.loadTexture(TestProjectedWater.class.getClassLoader().getResource("jmetest/data/images/Monkey.jpg"), Texture.MM_LINEAR_LINEAR, Texture.FM_LINEAR);
    Texture t1 = TextureManager.loadTexture(TestProjectedWater.class.getClassLoader().getResource("jmetest/data/texture/north.jpg"), Texture.MM_LINEAR_LINEAR, Texture.FM_LINEAR);
    t1.setEnvironmentalMapMode(Texture.EM_SPHERE);
    ts.setTexture(t0, 0);
    ts.setTexture(t1, 1);
    ts.setEnabled(true);
    torusVisible.setRenderState(ts);
    if (buoyantNodes == null)
        buoyantNodes = new Vector<DynamicPhysicsNode>();
    float mass = 0.8f;
    // DynamicPhysicsNode torusContainer = getPhysicsSpace().createDynamicNode();
    Node torusContainer = new Node("Torus Container");
    center = getPhysicsSpace().createDynamicNode();
    center.setMass(mass);
    buoyantNodes.add(center);
    center.setAffectedByGravity(true);
    center.attachChild(torusVisible);
    center.generatePhysicsGeometry(true);
    torusContainer.attachChild(center);
    // torusContainer.attachChild( torusVisible );
    DynamicPhysicsNode rightHandle = getPhysicsSpace().createDynamicNode();
    rightHandle.setMass(mass);
    rightHandle.setLocalTranslation(new Vector3f(torusRadius, 0, 0));
    Joint rJoint = getPhysicsSpace().createJoint();
    rJoint.attach(rightHandle, center);
    buoyantNodes.add(rightHandle);
    torusContainer.attachChild(rightHandle);
    DynamicPhysicsNode leftHandle = getPhysicsSpace().createDynamicNode();
    leftHandle.setMass(mass);
    leftHandle.setLocalTranslation(new Vector3f(-torusRadius, 0, 0));
    Joint lJoint = getPhysicsSpace().createJoint();
    lJoint.attach(leftHandle, center);
    buoyantNodes.add(leftHandle);
    torusContainer.attachChild(leftHandle);
    DynamicPhysicsNode topHandle = getPhysicsSpace().createDynamicNode();
    topHandle.setMass(mass);
    topHandle.setLocalTranslation(new Vector3f(0, torusRadius, 0));
    Joint tJoint = getPhysicsSpace().createJoint();
    tJoint.attach(topHandle, center);
    buoyantNodes.add(topHandle);
    torusContainer.attachChild(topHandle);
    DynamicPhysicsNode bottomHandle = getPhysicsSpace().createDynamicNode();
    bottomHandle.setMass(mass);
    bottomHandle.setLocalTranslation(new Vector3f(0, -torusRadius, 0));
    buoyantNodes.add(bottomHandle);
    torusContainer.attachChild(bottomHandle);
    Joint bJoint = getPhysicsSpace().createJoint();
    bJoint.attach(bottomHandle, center);
    Joint jtTL = getPhysicsSpace().createJoint();
    jtTL.attach(topHandle, leftHandle);
    Joint jtLB = getPhysicsSpace().createJoint();
    jtLB.attach(leftHandle, bottomHandle);
    Joint jtBR = getPhysicsSpace().createJoint();
    jtBR.attach(bottomHandle, rightHandle);
    Joint jtRT = getPhysicsSpace().createJoint();
    jtRT.attach(rightHandle, topHandle);
    torusContainer.setLocalTranslation(new Vector3f(50, 0, 20));
    // torusContainer.generatePhysicsGeometry(true);
    // buoyantNodes.add(torusContainer);
    objects.attachChild(torusContainer);
    ts = display.getRenderer().createTextureState();
    t0 = TextureManager.loadTexture(TestProjectedWater.class.getClassLoader().getResource("jmetest/data/texture/wall.jpg"), Texture.MM_LINEAR_LINEAR, Texture.FM_LINEAR);
    t0.setWrap(Texture.WM_WRAP_S_WRAP_T);
    ts.setTexture(t0);
    Box box = new Box("box1", new Vector3f(-10, -10, -10), new Vector3f(10, 10, 10));
    box.setLocalTranslation(new Vector3f(0, -7, 0));
    box.setRenderState(ts);
    objects.attachChild(box);
    box = new Box("box2", new Vector3f(-5, -5, -5), new Vector3f(5, 5, 5));
    box.setLocalTranslation(new Vector3f(15, 10, 0));
    box.setRenderState(ts);
    objects.attachChild(box);
    box = new Box("box3", new Vector3f(-5, -5, -5), new Vector3f(5, 5, 5));
    box.setLocalTranslation(new Vector3f(0, -10, 15));
    box.setRenderState(ts);
    objects.attachChild(box);
    box = new Box("box4", new Vector3f(-5, -5, -5), new Vector3f(5, 5, 5));
    box.setLocalTranslation(new Vector3f(20, 0, 0));
    box.setRenderState(ts);
    objects.attachChild(box);
    ts = display.getRenderer().createTextureState();
    t0 = TextureManager.loadTexture(TestSimpleQuadWater.class.getClassLoader().getResource("jmetest/data/images/Monkey.jpg"), Texture.MM_LINEAR_LINEAR, Texture.FM_LINEAR);
    t0.setWrap(Texture.WM_WRAP_S_WRAP_T);
    ts.setTexture(t0);
    box = new Box("box5", new Vector3f(-50, -2, -50), new Vector3f(50, 2, 50));
    box.setLocalTranslation(new Vector3f(0, -15, 0));
    box.setRenderState(ts);
    box.setModelBound(new BoundingBox());
    box.updateModelBound();
    objects.attachChild(box);
    return objects;
}
