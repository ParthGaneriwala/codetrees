public void paintChildren(Graphics g) {
    super.paintChildren(g);
    // draw interconnecting (horizontal) lines between each of the choice parts.
    Color c = g.getColor();
    g.setColor(getUiPrefs().getBorderColor());
    int n = getComponentCount();
    Rectangle rv1 = new Rectangle();
    Rectangle rv2 = new Rectangle();
    for (int i = 0; i < n - 1; i++) {
        Component child1 = getComponent(i);
        Component child2 = getComponent(i + 1);
        child1.getBounds(rv1);
        child2.getBounds(rv2);
        int x1 = rv1.x + rv1.width / 2;
        int y1 = 0;
        int x2 = rv2.x + rv2.width / 2;
        int y2 = 0;
        g.drawLine(x1, y1, x2, y2);
        g.drawLine(x1, y1, x1, y1 + 5);
        if (i == (n - 2)) {
            // vertical line for the last choice part.
            g.drawLine(x2, y2, x2, y2 + 5);
        }
    }
    // with the link's active (evaulated) color.
    for (int i = 0; i < n; i++) {
        Component child = getComponent(i);
        if ((child instanceof AeBpelFigureBase) && ((AeBpelFigureBase) child).isEvaluated()) {
            g.setColor(getUiPrefs().getLinkActiveColor());
            child.getBounds(rv1);
            int x1 = rv1.x + rv1.width / 2;
            int y1 = 0;
            g.drawLine(x1, y1, x1, y1 + 5);
            int x2 = getWidth() / 2;
            g.drawLine(x1, y1, x2, y1);
            break;
        }
    }
    g.setColor(c);
}
