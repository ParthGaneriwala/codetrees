private boolean parseCmd(String[] args) {
    for (int i = 0; i < args.length; ++i) {
        if (args[i].equals("-e"))
            this.exp = args[++i];
        if (args[i].equals("-c"))
            this.className = args[++i];
        if (args[i].equals("-i"))
            this.interName = args[++i];
        if (args[i].equals("-m"))
            this.methodName = args[++i];
        if (args[i].equals("-dir")) {
            StringTokenizer st = new StringTokenizer(args[++i], ";");
            dirs = new File[st.countTokens()];
            int j = 0;
            while (st.hasMoreTokens()) {
                this.dirs[j++] = new File(st.nextToken());
            }
        }
        if (args[i].equals("-cmd"))
            this.gui = false;
    }
    if (((this.exp == null && this.interName == null && this.className == null && this.methodName == null) || this.dirs == null) && this.gui == false) {
        System.out.println("ClassSearcher [options]");
        System.out.println("Version " + ClassSearcherGui.VERSION);
        System.out.println("-e Expressoin, follow a query expression");
        System.out.println("-c ClassName, follow a query class name");
        System.out.println("-i InterfaceName, follow a query interface name");
        System.out.println("-m MethodName, follow a query method name");
        System.out.println("-dir directories, follow to-be-queried files and directories, seprated by ;");
        System.out.println("\nInstructions to expressions\n . \\ and / seprate is supported\n\".ws.Buffer\" presents \"com/ibm/ws/Buffer.class\" and \"com/sun/ws/Buffer.class\" will be matched.");
        System.out.println(" \".ws.\" presents \"com/ibm/ws/Buffer.class\" and \"com/sun/ws/Client.class\" will be matched");
        System.out.println("\n.zip .jar .war and .ear will be supported in this util.");
        System.out.println("\nYou can run this application in command line mode with \"-cmd\" option.");
        return false;
    }
    return true;
}
