public void run() {
    String line = null;
    try {
        // received analyze it and act appropriately
        while (((line = in.readLine()) != null) && !socket.isClosed()) {
            // read the first word of the line
            // which corresponds to a command
            String command = (line.split(" ")[0]).toUpperCase();
            // if command is PRINT, information, don't preface message
            if (command.equals("PRINT")) {
                System.out.println(line.substring(6));
                chatClientPanel.appendOutput(line.substring(6));
                continue;
            }
            // if command is PM, information, display it in the PM window
            if (command.equals("PM")) {
                System.out.println(line.substring(3));
                chatClientPanel.appendPM(line.substring(3));
                continue;
            }
            // the distinction may become useful with added functionality.
            if (command.equals("ERR")) {
                System.out.println(line.substring(4));
                chatClientPanel.appendOutput(line.substring(4));
                continue;
            }
            // if command is MEM, update the member list.
            if (command.equals("MEM")) {
                updateMembers(line.substring(4));
                continue;
            }
            // if command is EXT, disconnect.
            if (command.equals("EXT")) {
                System.out.println("Disconnected.");
                chatClientPanel.appendOutput("Disconnected.");
                disconnect = true;
                out.close();
                in.close();
                socket.close();
                break;
            }
        }
    } catch (IOException e) {
        // In case of exception:
        e.printStackTrace();
    } catch (Exception e) {
        // In case of an exception:
        e.printStackTrace();
    }
    // assume that the server disconnected)
    if (!disconnect) {
        System.out.println("Server disconnected.");
        chatClientPanel.appendOutput("Server disconnected.");
        System.exit(1);
    }
}
