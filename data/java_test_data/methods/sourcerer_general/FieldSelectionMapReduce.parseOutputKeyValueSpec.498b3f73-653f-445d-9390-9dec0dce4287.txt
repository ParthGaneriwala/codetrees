private void parseOutputKeyValueSpec() {
    String[] mapKeyValSpecs = mapOutputKeyValueSpec.split(":", -1);
    String[] mapKeySpec = mapKeyValSpecs[0].split(",");
    String[] mapValSpec = new String[0];
    if (mapKeyValSpecs.length > 1) {
        mapValSpec = mapKeyValSpecs[1].split(",");
    }
    int i = 0;
    ArrayList<Integer> fieldList = new ArrayList<Integer>();
    extractFields(mapKeySpec, fieldList);
    this.mapOutputKeyFieldList = new int[fieldList.size()];
    for (i = 0; i < fieldList.size(); i++) {
        this.mapOutputKeyFieldList[i] = fieldList.get(i).intValue();
    }
    fieldList = new ArrayList<Integer>();
    allMapValueFieldsFrom = extractFields(mapValSpec, fieldList);
    this.mapOutputValueFieldList = new int[fieldList.size()];
    for (i = 0; i < fieldList.size(); i++) {
        this.mapOutputValueFieldList[i] = fieldList.get(i).intValue();
    }
    String[] reduceKeyValSpecs = reduceOutputKeyValueSpec.split(":", -1);
    String[] reduceKeySpec = reduceKeyValSpecs[0].split(",");
    String[] reduceValSpec = new String[0];
    if (reduceKeyValSpecs.length > 1) {
        reduceValSpec = reduceKeyValSpecs[1].split(",");
    }
    fieldList = new ArrayList<Integer>();
    extractFields(reduceKeySpec, fieldList);
    this.reduceOutputKeyFieldList = new int[fieldList.size()];
    for (i = 0; i < fieldList.size(); i++) {
        this.reduceOutputKeyFieldList[i] = fieldList.get(i).intValue();
    }
    fieldList = new ArrayList<Integer>();
    allReduceValueFieldsFrom = extractFields(reduceValSpec, fieldList);
    this.reduceOutputValueFieldList = new int[fieldList.size()];
    for (i = 0; i < fieldList.size(); i++) {
        this.reduceOutputValueFieldList[i] = fieldList.get(i).intValue();
    }
}
