public void quoteFlash(int bot) {
    float[] readquote = new float[maxplayerintourney];
    float[] placequote = new float[maxplayerintourney];
    int[] rememberindex = new int[events[bot].countplayers];
    String[] readplayer = new String[maxplayerintourney];
    String amountlength = "";
    String amountlength2 = "";
    String amountlength3 = "";
    String amountlength4 = "";
    String numberlength = "";
    String numberlength2 = "";
    String longstring = "";
    String toSend = "";
    int lastprinted = 0;
    if (events[bot].countplayers < 1) {
        problematicBot(bot);
    } else {
        if (events[bot].inProgress) {
            toSend = toSend.concat("BettingBot  +++ " + events[bot].BotList + " current market odds update (STARTED) +++\\n");
        } else {
            toSend = toSend.concat("BettingBot  +++ " + events[bot].BotList + " current market odds update +++\\n");
        }
        if (events[bot].nodouble) {
            for (int i = 0; i < events[bot].countplayers; i++) {
                readquote[i] = tote(i, bot);
                placequote[i] = 0;
            }
        } else {
            readquote = totewin(bot);
            placequote = toteplace(bot);
        }
        for (int i = 0; i < events[bot].countplayers; i++) {
            rememberindex[i] = i + 1;
            readquote[i] = convertQuote(readquote[i], false);
            placequote[i] = convertQuote(placequote[i], false);
            readplayer[i] = events[bot].Player[i];
            if (readplayer[i] == "-noncontestant-") {
                readquote[i] = 3000001;
            }
            if (readquote[i] == 0) {
                readquote[i] = 3000000;
            // very ugly
            }
        }
        for (int i = events[bot].countplayers; --i >= 0; ) {
            for (int j = 0; j < i; j++) {
                if (readquote[j] > readquote[j + 1]) {
                    float temp = readquote[j];
                    float temppl = placequote[j];
                    String tempstring = readplayer[j];
                    int tempind = rememberindex[j];
                    readquote[j] = readquote[j + 1];
                    placequote[j] = placequote[j + 1];
                    readplayer[j] = readplayer[j + 1];
                    rememberindex[j] = rememberindex[j + 1];
                    rememberindex[j + 1] = tempind;
                    readquote[j + 1] = temp;
                    placequote[j + 1] = temppl;
                    readplayer[j + 1] = tempstring;
                }
            }
        }
        for (int i = 0; i < Math.min(10, events[bot].countplayers - events[bot].countleaver - 1); i = i + 2) {
            if (readquote[i] == 3000000) {
                readquote[i] = 0;
            }
            if (readquote[i + 1] == 3000000) {
                readquote[i + 1] = 0;
            }
            if (readquote[i] < 11) {
                amountlength = Float.toString(readquote[i]);
            } else {
                amountlength = Integer.toString((int) (Math.floor(readquote[i])));
            }
            if (readquote[i + 1] < 11) {
                amountlength2 = Float.toString(readquote[i + 1]);
            } else {
                amountlength2 = Integer.toString((int) (Math.floor(readquote[i + 1])));
            }
            numberlength = Integer.toString(rememberindex[i]);
            numberlength2 = Integer.toString(rememberindex[i + 1]);
            toSend = toSend.concat(rememberindex[i] + spaces.substring(0, 3 - Math.min(numberlength.length(), 2)) + readplayer[i] + spaces.substring(0, 19 - readplayer[i].length()) + amountlength + spaces.substring(0, 7 - amountlength.length()) + rememberindex[i + 1] + spaces.substring(0, 3 - Math.min(numberlength2.length(), 2)) + readplayer[i + 1] + spaces.substring(0, 19 - readplayer[i + 1].length()) + amountlength2 + "\\n");
            lastprinted = i + 1;
        }
        if (events[bot].countplayers - events[bot].countleaver < 10) {
            if (lastprinted == events[bot].countplayers - events[bot].countleaver - 1) {
            // nothing here
            } else {
                if (readquote[lastprinted + 1] == 3000000) {
                    readquote[lastprinted + 1] = 0;
                }
                numberlength = Integer.toString(rememberindex[lastprinted + 1]);
                if (readquote[lastprinted + 1] < 11) {
                    amountlength3 = Float.toString(readquote[lastprinted + 1]);
                } else {
                    amountlength3 = Integer.toString((int) (Math.floor(readquote[lastprinted + 1])));
                }
                /* vorherige ergab einmal ein ArrayIndexOutOfBounds */
                toSend = toSend.concat(rememberindex[lastprinted + 1] + spaces.substring(0, 3 - Math.min(numberlength.length(), 2)) + readplayer[lastprinted + 1] + spaces.substring(0, 19 - readplayer[lastprinted + 1].length()) + amountlength3);
            }
        }
        if (events[bot].countplayers - events[bot].countleaver > 10) {
            numberlength = Integer.toString(rememberindex[10]);
            if (events[bot].countplayers - events[bot].countleaver == 11) {
                if (readquote[10] < 11) {
                    amountlength4 = Float.toString(readquote[10]);
                } else {
                    amountlength4 = Integer.toString((int) (Math.floor(readquote[10])));
                }
                toSend = toSend.concat(rememberindex[10] + spaces.substring(0, 3 - Math.min(numberlength.length(), 2)) + readplayer[10] + spaces.substring(0, 19 - readplayer[10].length()) + amountlength4 + "\\n");
            } else {
                if (readquote[10] < 11) {
                    amountlength = Float.toString(readquote[10]);
                } else {
                    amountlength = Integer.toString((int) (Math.floor(readquote[10])));
                }
                if (readquote[11] < 11) {
                    amountlength4 = Float.toString(readquote[11]);
                } else {
                    amountlength4 = Integer.toString((int) (Math.floor(readquote[11])));
                }
                toSend = toSend.concat(rememberindex[10] + spaces.substring(0, 3 - Math.min(numberlength.length(), 2)) + readplayer[10] + spaces.substring(0, 19 - readplayer[10].length()) + amountlength + spaces.substring(0, 7 - amountlength.length()) + "   *field*" + spaces.substring(0, 12) + amountlength4);
            }
        }
        for (int i = 0; i < events[bot].countplayers - events[bot].countleaver; i++) {
            longstring = longstring.concat(Integer.toString(rememberindex[i]));
            longstring = longstring.concat(" ");
            longstring = longstring.concat(readplayer[i]);
            longstring = longstring.concat(" ");
            longstring = longstring.concat(Integer.toString(events[bot].rating[rememberindex[i] - 1]));
            longstring = longstring.concat(" ");
            longstring = longstring.concat(Float.toString(readquote[i]));
            longstring = longstring.concat(" ");
            longstring = longstring.concat(Float.toString(placequote[i]));
            longstring = longstring.concat(" ");
            if ((longstring.length() > 800) && (i < events[bot].countplayers - events[bot].countleaver - 1)) {
                sendLine("qimpart 282 2 " + events[bot].BotList + " " + longstring);
                longstring = "";
            }
        }
        sendQTell(toSend, bettingBotChannel);
        sendLine("qimpart 282 2 " + events[bot].BotList + " " + longstring + "{END}");
        events[bot].didntdoitbefore = false;
    }
}
