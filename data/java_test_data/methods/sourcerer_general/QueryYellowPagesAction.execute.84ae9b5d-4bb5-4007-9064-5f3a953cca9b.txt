@Override
public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    int COMMON_PAGE_SIZE = 4;
    YellowSearchForm tForm = (YellowSearchForm) form;
    CompanyServiceImpl naservice = new CompanyServiceImpl();
    ProductcategoryService pcService = new ProductcategoryServiceImpl();
    CompanyproductcategoryService cpcService = new CompanyproductcategoryServiceImpl();
    BusinesscategoryService bcService = new BusinesscategoryServiceImpl();
    Businesscategory bc = null;
    List cpcList = null;
    List companyList = new ArrayList();
    List pcList = null;
    List ckwordList = null;
    int currentPage = tForm.getCurrentPage();
    int pageSize = COMMON_PAGE_SIZE;
    String keyword = tForm.getKeyword();
    System.out.println("keyword" + keyword);
    if (null != keyword && !"".equals(keyword)) {
        keyword = keyword.replace(' ', '%');
        ckwordList = pcService.getCompanyByProductcategoryName(keyword);
        if (null != ckwordList && ckwordList.size() > 0) {
            for (int i = 0; i < ckwordList.size(); i++) {
                Company company = ((Companykeyword) ckwordList.get(i)).getCompany();
                // 判断公司是否已经加到公司列表中
                if (!hasCompany(company, companyList)) {
                    if (null != company) {
                        // 主营产品/服务set到company对象中
                        company.setProductcategoryNames(getProductcategoryNames(cpcService.getProductcategoryNameByCompanyId(company.getId() + "")));
                        companyList.add(company);
                    }
                }
            }
        }
    }
    String productcategoryId = request.getParameter("productcategoryId");
    String bcId = request.getParameter("bcId");
    if (null != bcId && !"".equals(bcId)) {
        bc = bcService.getBusinesscategoryById(bcId);
        pcList = bcService.getProductcategoryByBusinesscategory(bc);
        for (int i = 0; i < pcList.size(); i++) {
            Productcategory pc = null;
            pc = (Productcategory) pcList.get(i);
            cpcList = cpcService.getCompanyproductcategoryByProductcategoryId(pc.getId() + "");
            for (int k = 0; k < cpcList.size(); k++) {
                Companyproductcategory cpc = (Companyproductcategory) cpcList.get(k);
                Company company = cpc.getCompany();
                // 判断公司是否已经加到公司列表中
                if (!hasCompany(company, companyList)) {
                    System.out.println(companyList.size());
                    if (null != company) {
                        // 主营产品/服务set到company对象中
                        company.setProductcategoryNames(getProductcategoryNames(cpcService.getProductcategoryNameByCompanyId(company.getId() + "")));
                        companyList.add(company);
                    }
                }
            }
        }
    }
    if (null != productcategoryId && !"".equals(productcategoryId)) {
        cpcList = cpcService.getCompanyproductcategoryByProductcategoryId(productcategoryId);
        for (int i = 0; i < cpcList.size(); i++) {
            Companyproductcategory cpc = (Companyproductcategory) cpcList.get(i);
            Company company = cpc.getCompany();
            // 判断公司是否已经加到公司列表中
            if (!hasCompany(company, companyList)) {
                if (null != company) {
                    // 主营产品/服务set到company对象中
                    company.setProductcategoryNames(getProductcategoryNames(cpcService.getProductcategoryNameByCompanyId(company.getId() + "")));
                    companyList.add(company);
                }
            }
        }
    }
    int pageCount = 1;
    // 把公司列表set到request中
    request.setAttribute("companyList", companyList);
    String toPageAct = PageUtil.getGotoAction(request.getRequestURL().toString(), request.getParameterMap());
    String linkStr = PageUtil.getFy3(pageCount, currentPage, toPageAct);
    String selectionStr = PageUtil.getFy4(pageCount, currentPage, toPageAct);
    tForm.setLinkStr(linkStr);
    tForm.setSelectionStr(selectionStr);
    return mapping.findForward("yellowPage");
}
