public void actualizarTablaEstadoCuenta() {
    EntityManager entityManager = Persistence.createEntityManagerFactory("ConsejoVeterinariosPU").createEntityManager();
    Query pagosQuery;
    List<entidades.Pagomatricula> listaPagos;
    DefaultTableModel modelo = (DefaultTableModel) this.tblEstadoCuenta.getModel();
    List listaProfesionales = this.profesionalQuery.getResultList();
    Iterator iteradorProfesionales = listaProfesionales.iterator();
    modelo.getDataVector().clear();
    while (// Se reccorre cada profesional para inspeccionar sus pagos.
    iteradorProfesionales.hasNext()) {
        Profesional prof = (Profesional) iteradorProfesionales.next();
        Vector fila = new Vector();
        // Se agrega los datos del profesional a la fila
        fila.add(prof.toString());
        pagosQuery = entityManager.createQuery("SELECT pm FROM Pagomatricula pm where pm.matricula.profesional.idProfesional = " + prof.getIdProfesional());
        listaPagos = pagosQuery.getResultList();
        Iterator iteradorPagos = listaPagos.iterator();
        // cada posicion corresponde a un mes e indica si fue pagado o no.
        boolean[] mesPagado = new boolean[12];
        for (int i = 0; i < 12; i++) // se inicia con cada mes como no pagado
        mesPagado[i] = false;
        while (iteradorPagos.hasNext()) {
            Pagomatricula pago = (Pagomatricula) iteradorPagos.next();
            System.out.print(pago.getPeriodo());
            Calendar c = Calendar.getInstance();
            c.setTime(pago.getPeriodo());
            mesPagado[c.get(c.MONTH)] = true;
        }
        for (int i = 0; i < 12; i++) fila.add(mesPagado[i]);
        // Se agrega los pagos.
        modelo.addRow(fila);
    }
    this.tblEstadoCuenta.setModel(modelo);
}
