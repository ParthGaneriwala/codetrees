// ------------------------------------------
// interface OnClickListener
public void onClick(View v) {
    Logger.log(TAG + ".onClick()");
    switch(v.getId()) {
        case R.id.lblItem:
            if (lblItem.getText().toString().endsWith(MORE)) {
                new AlertDialog.Builder(ActivityDetail.this).setMessage(mItem.item).setPositiveButton("Close", new DialogInterface.OnClickListener() {

                    public void onClick(DialogInterface dialog, int whichButton) {
                    // do nothing
                    }
                }).show();
            }
            break;
        case R.id.lblDescription:
            if (lblDescription.getText().toString().endsWith(MORE)) {
                new AlertDialog.Builder(ActivityDetail.this).setMessage(mItem.description).setPositiveButton("Close", new DialogInterface.OnClickListener() {

                    public void onClick(DialogInterface dialog, int whichButton) {
                    // do nothing
                    }
                }).show();
            }
            break;
        case R.id.lblTags:
            if (lblTags.getText().toString().endsWith(MORE)) {
                new AlertDialog.Builder(ActivityDetail.this).setMessage(mItem.tags).setPositiveButton("Close", new DialogInterface.OnClickListener() {

                    public void onClick(DialogInterface dialog, int whichButton) {
                    // do nothing
                    }
                }).show();
            }
            break;
        case R.id.btnAudio:
            try {
                if (mItem.audio.length() > 0) {
                    if (mPlayer == null) {
                        mPlayer = MediaPlayer.create(this, Media.getTmpAudioUri());
                        mPlayer.setVolume(1.0f, 1.0f);
                    }
                    if (mPlayer.isPlaying())
                        mPlayer.stop();
                    else {
                        Toast.makeText(this, "Playing audio...", Toast.LENGTH_SHORT).show();
                        mPlayer.start();
                    }
                } else {
                    new AlertDialog.Builder(ActivityDetail.this).setMessage("No audio available!").setPositiveButton("Close", new DialogInterface.OnClickListener() {

                        public void onClick(DialogInterface dialog, int whichButton) {
                        // do nothing
                        }
                    }).show();
                }
            } catch (Exception e) {
                Logger.log(e);
            }
            break;
        case R.id.btnLink:
            try {
                if (mItem.link.length() > 0) {
                    Toast.makeText(this, "Starting browser...", Toast.LENGTH_SHORT).show();
                    startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(mItem.link)));
                } else {
                    new AlertDialog.Builder(ActivityDetail.this).setMessage("No link available!").setPositiveButton("Close", new DialogInterface.OnClickListener() {

                        public void onClick(DialogInterface dialog, int whichButton) {
                        // do nothing
                        }
                    }).show();
                }
            } catch (Exception e) {
                Logger.log(e);
            }
            break;
        case R.id.btnFavs:
            try {
                String message = null;
                if (flagIsFavourite)
                    message = "Remove '" + mItem.item + "' from My Words list?";
                else
                    message = "Add '" + mItem.item + "' to My Words list?";
                new AlertDialog.Builder(this).setMessage(message).setPositiveButton("Yes", new DialogInterface.OnClickListener() {

                    public void onClick(DialogInterface dialog, int whichButton) {
                        if (flagIsFavourite)
                            favRemove();
                        else
                            favAdd();
                    }
                }).setNegativeButton("No", new DialogInterface.OnClickListener() {

                    public void onClick(DialogInterface dialog, int whichButton) {
                    // do nothing
                    }
                }).show();
            } catch (Exception e) {
                Logger.log(e);
            }
            break;
        case R.id.btnEdit:
            try {
                Intent edit = new Intent(ActivityDetail.this, ActivityEdit.class);
                edit.putExtra("mItem", mItem.toString());
                startActivityForResult(edit, R.id.btnEdit);
            } catch (Exception e) {
                Logger.log(e);
            }
            break;
        case R.id.btnBack:
            setResult(RESULT_CANCELED);
            finish();
            break;
    }
}
