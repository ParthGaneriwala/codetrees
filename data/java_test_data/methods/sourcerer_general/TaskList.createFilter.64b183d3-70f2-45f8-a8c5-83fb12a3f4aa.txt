protected void createFilter(StringBuffer sqlFilter) {
    if (sqlFilter == null) {
        sqlFilter = new StringBuffer();
    }
    if (enteredBy != -1) {
        sqlFilter.append("AND t.enteredby = ? ");
    }
    if (tasksAssignedByUser > 0) {
        sqlFilter.append("AND t.enteredby = ? AND t.owner NOT IN (SELECT user_id FROM contact WHERE user_id = ?) AND t.owner IS NOT NULL ");
    }
    if (owner > -1) {
        if (owner == 0) {
            sqlFilter.append("AND t.owner IS NULL ");
        } else {
            sqlFilter.append("AND t.owner = ? ");
        }
    }
    if (complete != -1) {
        sqlFilter.append("AND t.complete = ? ");
    }
    if (alertRangeStart != null) {
        sqlFilter.append("AND t.duedate >= ? ");
    }
    if (alertRangeEnd != null) {
        sqlFilter.append("AND t.duedate < ? ");
    }
    if (categoryId > 0) {
        sqlFilter.append("AND t.category_id = ? ");
    }
    if (projectId > 0) {
        sqlFilter.append("AND t.task_id IN (SELECT task_id FROM tasklink_project WHERE project_id = ?) ");
    }
    if (ticketId > 0) {
        sqlFilter.append("AND t.task_id IN (SELECT task_id FROM tasklink_ticket WHERE ticket_id = ?) ");
    }
    if (functionalArea > -1) {
        if (functionalArea == 0) {
            sqlFilter.append("AND t.functional_area IS NULL ");
        } else {
            sqlFilter.append("AND t.functional_area = ? ");
        }
    }
    if (status > -1) {
        if (status == 0) {
            sqlFilter.append("AND t.status IS NULL ");
        } else {
            sqlFilter.append("AND t.status = ? ");
        }
    }
    if (businessValue > -1) {
        if (businessValue == 0) {
            sqlFilter.append("AND t.business_value IS NULL ");
        } else {
            sqlFilter.append("AND t.business_value = ? ");
        }
    }
    if (complexity > -1) {
        if (complexity == 0) {
            sqlFilter.append("AND t.complexity IS NULL ");
        } else {
            sqlFilter.append("AND t.complexity = ? ");
        }
    }
    if (targetRelease > -1) {
        if (targetRelease == 0) {
            sqlFilter.append("AND t.target_release IS NULL ");
        } else {
            sqlFilter.append("AND t.target_release = ? ");
        }
    }
    if (targetSprint > -1) {
        if (targetSprint == 0) {
            sqlFilter.append("AND t.target_sprint IS NULL ");
        } else {
            sqlFilter.append("AND t.target_sprint = ? ");
        }
    }
    if (loeRemaining > -1) {
        if (loeRemaining == 0) {
            sqlFilter.append("AND t.loe_remaining IS NULL ");
        } else {
            sqlFilter.append("AND t.loe_remaining = ? ");
        }
    }
    if (assignedPriority > -1) {
        if (assignedPriority == 0) {
            sqlFilter.append("AND t.assigned_priority IS NULL ");
        } else {
            sqlFilter.append("AND t.assigned_priority = ? ");
        }
    }
    if (linkModuleId > -1 && linkItemId > -1) {
        sqlFilter.append("AND t.link_module_id = ? AND t.link_item_id = ? ");
    }
}
