public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {
    Object nodeUserObject = ((DefaultMutableTreeNode) value).getUserObject();
    Component toReturn = this.defaultTreeCellRenderer.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);
    if (nodeUserObject instanceof OWLObject) {
        toReturn = this.owlCellRenderer.getTreeCellRendererComponent(tree, nodeUserObject, selected, expanded, leaf, row, hasFocus);
    } else if (nodeUserObject instanceof MAEStart) {
        Icon openIcon = this.defaultTreeCellRenderer.getOpenIcon();
        Icon closedIcon = this.defaultTreeCellRenderer.getClosedIcon();
        URL url = ReportTreeCellRenderer.class.getClassLoader().getResource("icon_math.gif");
        Icon formulaIcon = new ImageIcon(url);
        this.defaultTreeCellRenderer.setOpenIcon(formulaIcon);
        this.defaultTreeCellRenderer.setClosedIcon(formulaIcon);
        ViewFormulaCellRederer render = new ViewFormulaCellRederer(false, this.owlEditorKit);
        ((MAEStart) nodeUserObject).jjtAccept(render, null);
        String rendering = render.getFormulaString();
        this.defaultTreeCellRenderer.getTreeCellRendererComponent(tree, rendering, selected, expanded, leaf, row, hasFocus);
        this.defaultTreeCellRenderer.setOpenIcon(openIcon);
        this.defaultTreeCellRenderer.setClosedIcon(closedIcon);
    } else if (nodeUserObject instanceof Exception) {
        Icon icon = this.defaultTreeCellRenderer.getIcon();
        URL url = ReportTreeCellRenderer.class.getClassLoader().getResource("exception.gif");
        Icon exceptionIcon = new ImageIcon(url);
        this.defaultTreeCellRenderer.setLeafIcon(exceptionIcon);
        String exceptionText = ((Exception) nodeUserObject).getMessage() == null ? ((Exception) nodeUserObject).toString() : ((Exception) nodeUserObject).getMessage();
        this.defaultTreeCellRenderer.getTreeCellRendererComponent(tree, exceptionText, selected, expanded, leaf, row, hasFocus);
        this.defaultTreeCellRenderer.setLeafIcon(icon);
    }
    return toReturn;
}
