public void switchPawn(int newX, int newY, Pawn p) {
    // get coordinates of pawn
    int x = p.getX();
    int y = p.getY();
    // remove him
    removePiece(x, y);
    board.print();
    System.out.println("You have reached the end of the board!");
    System.out.println("Which piece would you like to swap your pawn for?");
    System.out.println("Queen \nBishop \nRook \nKnight");
    Scanner scan = new Scanner(System.in);
    while (true) {
        String input = scan.next();
        if (input.equals("Bishop")) {
            // create piece
            Bishop b = new Bishop(newX, newY, currentPlayer);
            // add it to players hashmap
            currentPlayer.returnMap().get("B").add(b);
            // add it to board
            board.placePiece(newX, newY, "B", currentPlayer);
            break;
        } else if (input.equals("Queen")) {
            // create piece
            Queen queen = new Queen(newX, newY, currentPlayer);
            // add it to players hashmap
            currentPlayer.returnMap().get("Q").add(queen);
            // add it to board
            board.placePiece(newX, newY, "Q", currentPlayer);
            break;
        } else if (input.equals("Rook")) {
            // create piece
            Rook r = new Rook(newX, newY, currentPlayer);
            // add it to players hashmap
            currentPlayer.returnMap().get("R").add(r);
            // add it to board
            board.placePiece(newX, newY, "R", currentPlayer);
            break;
        } else if (input.equals("Knight")) {
            // create piece
            Knight n = new Knight(newX, newY, currentPlayer);
            // add it to players hashmap
            currentPlayer.returnMap().get("N").add(n);
            // add it to board
            board.placePiece(newX, newY, "N", currentPlayer);
            break;
        } else {
            System.out.println("Sorry, your input was not recognized. Please enter exactly as written and try again.");
        }
    }
}
