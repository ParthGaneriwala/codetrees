@Test
public void testQuickSearch_GetSearchResults_GetSearchResultCount() throws ClassNotFoundException, SQLException {
    DatabaseTests.setupTestDatabase();
    DatabaseTests.populateDatabase();
    DBManager dbm = new DBManager();
    GUIControllerImpl gci = new GUIControllerImpl(dbm);
    dbm.openDatabaseConnection();
    // Check getting a single result
    gci.quickSearch("comp");
    Object[][] comps = gci.getSearchResults(1, 1);
    assertTrue(comps.length == 1);
    assertTrue(comps[0][0].equals(Boolean.valueOf(false)));
    assertTrue(comps[0][1].equals(2L));
    assertTrue(comps[0][2].equals(2L));
    assertTrue(comps[0][3].equals("tags2"));
    assertTrue(comps[0][4].equals("smiles2"));
    assertTrue(comps[0][6].equals("links2"));
    assertTrue(comps[0][7].equals("notes2"));
    // Check getting more than one result, and a result offset
    gci.quickSearch("comp");
    comps = gci.getSearchResults(2, 2);
    assertTrue(comps.length == 2);
    assertTrue(comps[0][0].equals(Boolean.valueOf(false)));
    assertTrue(comps[0][1].equals(3L));
    assertTrue(comps[0][2].equals(3L));
    assertTrue(comps[0][3].equals("tags3"));
    assertTrue(comps[0][4].equals("smiles3"));
    assertTrue(comps[0][6].equals("links3"));
    assertTrue(comps[0][7].equals("notes3"));
    assertTrue(comps[1][0].equals(Boolean.valueOf(false)));
    assertTrue(comps[1][1].equals(4L));
    assertTrue(comps[1][2].equals(4L));
    assertTrue(comps[1][3].equals("tags4"));
    assertTrue(comps[1][4].equals("smiles4"));
    assertTrue(comps[1][6].equals("links4"));
    assertTrue(comps[1][7].equals("notes4"));
    // Check different search
    gci.quickSearch("Test");
    comps = gci.getSearchResults(1, 4);
    assertTrue(comps.length == 1);
    assertTrue(comps[0][0].equals(Boolean.valueOf(false)));
    assertTrue(comps[0][1].equals(1L));
    assertTrue(comps[0][2].equals(0L));
    assertTrue(comps[0][3].equals("test"));
    assertTrue(comps[0][4].equals("C-Test"));
    assertTrue(comps[0][6].equals("www.test.net"));
    assertTrue(comps[0][7].equals("test notes here"));
}
