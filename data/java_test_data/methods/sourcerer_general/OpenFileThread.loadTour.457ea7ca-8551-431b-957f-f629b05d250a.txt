private void loadTour(String realName, String[] labels) {
    String tabName = realName + " (" + MapKeys.NET_TOUR + ")";
    String key = MapKeys.DESCR + realName;
    String shortDescr = props.getProperty(key);
    if (shortDescr == null)
        shortDescr = "N/A";
    else
        shortDescr = shortDescr.replace("%20", " ");
    key = MapKeys.LONG_DESCR + realName;
    String longDescr = props.getProperty(key);
    if (longDescr != null) {
        longDescr = longDescr.replace("%20", " ");
        longDescr = longDescr.replace("\\n", "\n");
    }
    NetworkFactory.create(NetworkFactory.Type.TOUR, tabName, shortDescr, longDescr);
    // Cache this tour network to connect the segues later
    TourNetwork tourNet = (TourNetwork) NetworkFactory.getNetwork(tabName);
    this.keyToTourNetMap.put(MapKeys.NET + realName, tourNet);
    tourTabs.add(tabName);
    // Get each step indexed by label which starts as the 2nd (index 1) value
    TourTableModel model = (TourTableModel) NetworkFactory.getTable(tabName).getModel();
    for (int row = 1; row < labels.length; row++) {
        String label = labels[row];
        // map.net.<real tabName>.<label> <x> <y> <longitude> <latitude>
        key = MapKeys.TOUR + realName + "." + label;
        String value = props.getProperty(key);
        // String[] values = toArray(value);
        String[] values = value.split(" +");
        int x = Integer.parseInt(values[0]);
        int y = Integer.parseInt(values[1]);
        double lon = Double.parseDouble(values[2]);
        double lat = Double.parseDouble(values[3]);
        sb.delete(0, sb.length());
        formatter.format("%9.5f", lon);
        String lons = sb.toString();
        sb.delete(0, sb.length());
        formatter.format("%9.5f", lat);
        String lats = sb.toString();
        TourStep step = new TourStep(labels[row], lons, lats);
        step.setX(x);
        step.setY(y);
        step.setRealLat(lat);
        step.setRealLon(lon);
        step.setNetName(tabName);
        model.addWay(step);
        // Save reference to this step in case it's an extent
        keyToWayMap.put(key, step);
    }
}
