protected Map referenceData(HttpServletRequest request, Object o, Errors errors) throws Exception {
    if (logger.isDebugEnabled()) {
        logger.debug("ReserveFieldStep5Controller.referenceData");
    }
    ReservationFieldRequest reservationFieldRequest = (ReservationFieldRequest) o;
    Map dataMap = new HashMap();
    UserContext userContext = (UserContext) request.getSession().getAttribute(KeyConstant.USER_CONTEXT_KEY);
    if (userContext == null) {
        // we must to redirect to login view
        return dataMap;
    }
    User user = userManager.findUser(userContext.getId());
    Calendar reservationDate = Calendar.getInstance();
    reservationDate.setTime(reservationFieldRequest.getReservationDate());
    String startDateString = reservationFieldRequest.getStartHour();
    String endDateString = reservationFieldRequest.getStartHour();
    String[] times = startDateString.split("_");
    String hour = times[0];
    String minute = times[1];
    reservationDate.set(Calendar.HOUR_OF_DAY, Integer.valueOf(hour));
    reservationDate.set(Calendar.MINUTE, Integer.valueOf(minute));
    reservationDate.set(Calendar.SECOND, 0);
    reservationDate.set(Calendar.MILLISECOND, 0);
    System.out.println("reservationDate getTime()= " + reservationDate.getTime());
    Timestamp startDate = new Timestamp(reservationDate.getTimeInMillis());
    times = endDateString.split("_");
    hour = times[0];
    minute = times[1];
    reservationDate.set(Calendar.HOUR_OF_DAY, Integer.valueOf(hour));
    reservationDate.set(Calendar.MINUTE, Integer.valueOf(minute));
    reservationDate.set(Calendar.SECOND, 0);
    reservationDate.set(Calendar.MILLISECOND, 0);
    System.out.println("reservationDate getTime()= " + reservationDate.getTime());
    Timestamp endDate = new Timestamp(reservationDate.getTimeInMillis());
    Turn reservedTurn = clubManager.saveReservationField(reservationFieldRequest.getFieldId(), startDate, endDate, user);
    dataMap.put("regions", reservationFieldRequest.getRegions());
    dataMap.put("reservedTurn", reservedTurn);
    return dataMap;
}
