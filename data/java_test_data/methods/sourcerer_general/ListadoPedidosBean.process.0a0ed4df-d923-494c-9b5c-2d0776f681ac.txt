public ProcessError process() {
    // listado de pedidos
    Connection connection = JDBCConnectionManager.getInstance().getConnection();
    Statement statement = null;
    ResultSet rs = null;
    StringBuffer result = null;
    // magic number para buscar por dia
    Date today = new Date();
    if (this.getEstadoId() != null && this.getEstadoId() == 101) {
        this.setFecha(dateFormatter.format(today));
    }
    System.out.println("Fecha?:" + this.getFecha());
    try {
        statement = connection.createStatement();
        rs = statement.executeQuery("select p.id as id, p.fecha_entrega_real::time as hora, c.razon_social as cliente, c.id as clienteId, c.orden as clienteO, p.fecha_entrega as fecha, s.id as sucursalId," + " s.nombre as sucursal, cal.nombre_completo || ' ' || s.numero as direccion, s.localidad as localidad, s.orden as sucursalO," + " p.comentarios as comentarios, p.estado_id as estadoId, est.orden as estadoO, est.valor as estado" + " from pedido p, cliente c, sucursal s, calle cal, estadopedido est" + " where p.cliente_id = c.id" + " and p.sucursal_envio_id = s.id" + " and s.calle_id = cal.id" + " and p.estado_id = est.id" + ((this.getPedidoId() != null) ? (" and p.id = " + this.getPedidoId()) : "") + ((this.getClienteId() != null && this.getClienteId() != 0) ? (" and c.id = " + this.getClienteId()) : "") + ((this.getSucursalId() != null) ? (" and s.id = " + this.getSucursalId()) : "") + ((this.getEstadoId() != null && this.getEstadoId() == 100) ? (" and (est.id = 4 or est.id = 3 or est.id = 5)") : "") + // ((this.getEstadoId() != null && this.getEstadoId() == 101) ? (" and (est.id = 2 or est.id = 3)") : "") +
        ((this.getEstadoId() != null && this.getEstadoId() < 100) ? (" and est.id = " + this.getEstadoId() + " and p.fecha_entrega::date > '" + dateFormatter.format(today) + "'") : "") + ((this.getFecha() != null) ? (" and p.fecha_entrega::date = '" + this.getFecha()) + "'" : "") + " and p.eliminado is null" + " order by fecha desc");
        String s = null;
        result = new StringBuffer();
        result.append("<pedidos>");
        while (rs.next()) {
            result.append("<pedido>");
            result.append("<accion></accion>");
            Integer i = rs.getInt("id");
            String si = i.toString();
            if (si.length() < 4) {
                for (int j = 0; si.length() < 4; j++) {
                    si = "0" + si;
                }
            }
            result.append("<id>" + si + "</id>");
            result.append("<cliente>" + rs.getString("cliente") + "</cliente>");
            result.append("<clienteId>" + rs.getInt("clienteId") + "</clienteId>");
            result.append("<clienteO>" + rs.getInt("clienteO") + "</clienteO>");
            result.append("<fecha>" + rs.getTimestamp("fecha") + "</fecha>");
            Integer estado = rs.getInt("estadoId");
            if (estado == 2 || estado == 3) {
                String hr = rs.getString("hora");
                if (null == hr)
                    result.append("<hora>" + "-" + "</hora>");
                else {
                    if (hr.lastIndexOf(":") > -1) {
                        hr = hr.substring(0, hr.lastIndexOf(":"));
                    }
                    result.append("<hora>" + hr + "</hora>");
                }
            } else {
                result.append("<hora>" + "-" + "</hora>");
            }
            Timestamp timestamp = rs.getTimestamp("fecha");
            Date date = new Date(timestamp.getTime());
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
            result.append("<dia>" + calendar.get(Calendar.DATE) + "</dia>");
            result.append("<mes>" + (calendar.get(Calendar.MONTH) + 1) + "</mes>");
            result.append("<ano>" + calendar.get(Calendar.YEAR) + "</ano>");
            String mes = "" + (calendar.get(Calendar.MONTH) + 1);
            if (mes.length() == 1)
                mes = "0" + mes;
            String dia = "" + calendar.get(Calendar.DATE);
            if (dia.length() == 1)
                dia = "0" + dia;
            result.append("<fecha2>" + dia + "-" + mes + "-" + calendar.get(Calendar.YEAR) + "</fecha2>");
            result.append("<sucursalId>" + rs.getInt("sucursalId") + "</sucursalId>");
            result.append("<sucursalO>" + rs.getInt("sucursalO") + "</sucursalO>");
            result.append("<sucursal>" + rs.getString("sucursal") + "</sucursal>");
            result.append("<direccion>" + rs.getString("direccion") + "</direccion>");
            result.append("<localidad>" + rs.getString("localidad") + "</localidad>");
            result.append("<comentarios>" + (((s = rs.getString("comentarios")) == null) ? "" : s) + "</comentarios>");
            result.append("<estadoId>" + estado + "</estadoId>");
            result.append("<estadoO>" + rs.getInt("estadoO") + "</estadoO>");
            result.append("<estado>" + rs.getString("estado") + "</estado>");
            result.append("</pedido>");
        }
        result.append("</pedidos>");
    } catch (SQLException e) {
        e.printStackTrace();
        ProcessError error = new ProcessError();
        error.addError("fatal");
        return error;
    } finally {
        try {
            rs.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        try {
            statement.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        try {
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    this.result = result.toString();
    return null;
}
