public boolean unzipRovFile() {
    boolean lNeededFilesFound = false;
    try {
        File lTempfolder = File.createTempFile("temp", "temp").getParentFile();
        File lTempRovFolder = new File(lTempfolder, "rover");
        if (lTempRovFolder.exists() == false) {
            lTempRovFolder.mkdir();
        }
        File lTempUnzippedRovFileFolder = new File(lTempRovFolder, iOriginalRovFile.getName());
        lTempUnzippedRovFileFolder.deleteOnExit();
        if (!lTempUnzippedRovFileFolder.exists()) {
            // Folder does not exist yet.
            if (!lTempUnzippedRovFileFolder.mkdir()) {
                // Making of folder failed, quit!
                iFlamable.passHotPotato(new Throwable("Unable to create temporary directory ' " + lTempUnzippedRovFileFolder.getName() + "' for distiller rov project '" + iOriginalRovFile.getName() + "'!!"));
                // If temporary dir could not be created, return null to stop the process.
                return false;
            }
            // Unzip the files in the new temp folder
            BufferedOutputStream out = null;
            ZipInputStream in = new ZipInputStream(new BufferedInputStream(new FileInputStream(iOriginalRovFile)));
            ZipEntry entry;
            while ((entry = in.getNextEntry()) != null) {
                int count;
                byte[] data = new byte[1000];
                // write the files to the disk
                out = new BufferedOutputStream(new FileOutputStream(lTempUnzippedRovFileFolder.getPath() + "/" + entry.getName()), 1000);
                while ((count = in.read(data, 0, 1000)) != -1) {
                    out.write(data, 0, count);
                }
                out.flush();
                out.close();
            }
            in.close();
        }
        // Ok, all files should have been unzipped  in the lTempUnzippedRovFileFolder by now.
        // Try to find the distiller xml file..
        File[] lUnzippedRovFiles = lTempUnzippedRovFileFolder.listFiles();
        boolean lQuantFound = false;
        boolean lDatFileFound = false;
        for (int i = 0; i < lUnzippedRovFiles.length; i++) {
            File lUnzippedRovFile = lUnzippedRovFiles[i];
            if (lUnzippedRovFile.getName().toLowerCase().indexOf("rover_data+bb8") != -1) {
                lQuantFound = true;
                iQuantitationXmlFile = lUnzippedRovFile;
            }
            if (lUnzippedRovFile.getName().toLowerCase().indexOf("rover_data+bb9") != -1) {
                lQuantFound = true;
                iQuantitationXmlFile = lUnzippedRovFile;
            }
            if (lUnzippedRovFile.getName().toLowerCase().indexOf("mdro_search_status+1") != -1) {
                lDatFileFound = true;
                iMascotIdentificationFile = new DatFile(lUnzippedRovFile, iFlamable);
            }
        }
        if (lQuantFound && lDatFileFound) {
            // we found both files, yipee
            lNeededFilesFound = true;
        }
    } catch (IOException e) {
        iFlamable.passHotPotato(new Throwable("Error in parsing the .rov file"));
        logger.error(e.getMessage(), e);
    }
    return lNeededFilesFound;
}
