public void sendMailConfirmacionFinal(List ponencias) throws MailException, DataAccessException {
    Iterator it = ponencias.iterator();
    while (it.hasNext()) {
        Ponencia pon = (Ponencia) it.next();
        Usuario usr = usuarioDao.getUsuario(pon.getAutor());
        // comprobacion extra por seguridad
        if (!pon.getRevisionFinal().isNotificada()) {
            SimpleMailMessage msg = new SimpleMailMessage(this.message);
            if (pon.getCoautores() != null && pon.getCoautores().size() > 0) {
                String[] coautores = new String[pon.getCoautores().size()];
                for (int i = 0; i < pon.getCoautores().size(); i++) coautores[i] = (String) pon.getCoautores().get(i);
                msg.setCc(coautores);
            }
            msg.setTo(usr.getEmail());
            msg.setSubject("CIO 2005 - Revisión del trabajo final");
            String body = "Estimad@ " + usr.getNombre() + "\n\n";
            if (pon.getRevisionFinal().getResultado().equals("ACEPTADA")) {
                body += bodyFinalAceptada(usr, pon);
            } else if (pon.getRevisionFinal().getResultado().equals("POSTER")) {
                body += bodyFinalPoster(usr, pon);
            } else {
                body += bodyFinalRechazada(usr, pon);
            }
            body += "\n\nLe saluda atentamente,\n\nEl Comité Organizador de CIO2005-Gijón";
            msg.setText(body);
            try {
                mailSender.send(msg);
            } catch (Exception e) {
                log.trace("Problema al enviar mail de confirmacion para el trabajo final " + pon.getId() + " a la direccion " + usr.getEmail());
                log.trace("Causa " + e.getMessage());
            }
            ponenciaDao.marcaFinalConfirmada(pon.getId());
            log.trace("final " + pon.getId() + " (" + pon.getRevision().getResultado() + ") confirmada y marcada");
        }
    }
}
