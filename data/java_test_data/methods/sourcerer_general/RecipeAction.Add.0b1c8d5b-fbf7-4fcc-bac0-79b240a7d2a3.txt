public ActionForward Add(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String username = (String) request.getSession().getAttribute("username");
    if (username != null) {
        DynaValidatorForm recipeContestForm = (DynaValidatorForm) form;
        String contestId = recipeContestForm.getString("contestID");
        String title = recipeContestForm.getString("title");
        String ingredient = recipeContestForm.getString("ingredient");
        String cookingProcedure = recipeContestForm.getString("cookingProcedure");
        String categoryID = recipeContestForm.getString("categoryID");
        String imageUrl = recipeContestForm.getString("imageUrl");
        boolean free = (Boolean) recipeContestForm.get("free");
        // user profile object
        UserProfileDTO user = new UserProfileDTO();
        user.setUsername(username);
        // contest object
        ContestDTO contestDTO = new ContestDTO();
        contestDTO.setContestID(contestId);
        // Post object
        PostDTO postDTO = new PostDTO();
        postDTO.setPostID(Util.generateUUID());
        postDTO.setPostTitle(title);
        postDTO.setFree(free);
        postDTO.setPostType("Recipe");
        postDTO.setUploadDate(Util.getDateTimeNow());
        postDTO.setUserProfile(user);
        // Category
        CategoryRecipeDTO category = new CategoryRecipeDTO();
        category.setCategoryID(categoryID);
        // recipe object
        RecipeDTO recipeDTO = new RecipeDTO();
        recipeDTO.setRecipeID(Util.generateUUID());
        recipeDTO.setPost(postDTO);
        recipeDTO.setIngredient(ingredient);
        recipeDTO.setCookingProcedure(cookingProcedure);
        recipeDTO.setImagePath("recipeimages/" + imageUrl);
        recipeDTO.setCategory(category);
        // execute
        RecipeDAO recipeDAO = new RecipeDAO();
        if (recipeDAO.createNewRecipe(postDTO, recipeDTO)) {
            Collection list3Recipes = recipeDAO.readLimitByFree(true);
            request.getSession().setAttribute("list3Recipes", list3Recipes);
            request.setAttribute("message", "Add New Recipe Successfuly!");
            return mapping.findForward(SUCCESS);
        } else {
            request.setAttribute("message", "Add New Recipe error!");
            return mapping.findForward(ERROR);
        }
    } else {
        request.setAttribute("message", "Please Login!");
        return mapping.findForward(LOGIN);
    }
}
