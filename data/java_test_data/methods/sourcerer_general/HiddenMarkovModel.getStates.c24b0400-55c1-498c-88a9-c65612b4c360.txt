public static void getStates(ArrayList<Exon> exons, ArrayList<Exon> expectedValues, ArrayList<Exon> stdDeviations, String parameterFileName, double threshold, int nSamples, Gamma gamma, double gammaK, double gammaTheta, double gammaSNPsK, double gammaSNPsTheta) {
    States = State.initializeStates(parameterFileName);
    ArrayList<HashMap<State, Double>> ForwardProbability = HiddenMarkovModel.computeForwardProbabilities(exons, expectedValues, stdDeviations, nSamples, gamma, gammaK, gammaTheta, gammaSNPsK, gammaSNPsTheta);
    ArrayList<HashMap<State, Double>> BackwardProbability = HiddenMarkovModel.computeBackwardProbabilities(exons, expectedValues, stdDeviations, nSamples, gamma, gammaK, gammaTheta, gammaSNPsK, gammaSNPsTheta);
    // most likely state = argmax(forward prob * back prob)
    for (int exonIndex = 0; exonIndex < exons.size(); exonIndex++) {
        double maxProb = Double.NEGATIVE_INFINITY;
        State maxState = null;
        double nextMaxProb = Double.NEGATIVE_INFINITY;
        State nextMaxState = null;
        // double threshold = 1000.0;
        State normalState = HiddenMarkovModel.States.get("NORMAL");
        double normalProb = ForwardProbability.get(exonIndex).get(normalState) + BackwardProbability.get(exonIndex).get(normalState);
        maxProb = normalProb;
        maxState = normalState;
        // System.out.println(exons.get(exons.size()-1));
        for (int stateIndex = 0; stateIndex < HiddenMarkovModel.States.size(); stateIndex++) {
            if (ForwardProbability.isEmpty())
                System.out.println("fwd empty");
            if (ForwardProbability.get(exonIndex).isEmpty())
                System.out.println("fwd.get(exon) empty");
            if (BackwardProbability.isEmpty())
                System.out.println("bwd empty");
            if (BackwardProbability.get(exonIndex).isEmpty())
                System.out.println("bwd.get(exon) empty");
            if (HiddenMarkovModel.getStateFromIndex(stateIndex) == null)
                System.out.println("states are wrong " + stateIndex);
            double prob = ForwardProbability.get(exonIndex).get(HiddenMarkovModel.getStateFromIndex(stateIndex)) + BackwardProbability.get(exonIndex).get(HiddenMarkovModel.getStateFromIndex(stateIndex));
            if (prob > nextMaxProb && !HiddenMarkovModel.getStateFromIndex(stateIndex).equals(normalState)) {
                nextMaxProb = prob;
                nextMaxState = HiddenMarkovModel.getStateFromIndex(stateIndex);
            }
            if ((prob > maxProb) && (prob > (normalProb + threshold))) {
                // how to find the next max state when max state is normal?
                // nextMaxProb = maxProb;
                // nextMaxState = maxState;
                maxProb = prob;
                maxState = HiddenMarkovModel.getStateFromIndex(stateIndex);
            }
        }
        Exon e = exons.get(exonIndex);
        e.state = maxState;
        // finding the likelihood ratio of this state vs the normal state
        e.likelihoodRatio = -2 * (normalProb - maxProb);
        // if normal is the max state.. then look at likleihood compared to the next most likely state
        if (maxState.equals(normalState))
            e.likelihoodRatio = -2 * (nextMaxProb - normalProb);
        ChiSquare chi = new ChiSquare(1, RandomEngine.makeDefault());
        e.pValue = 1 - chi.cdf(e.likelihoodRatio);
        exons.set(exonIndex, e);
    }
}
