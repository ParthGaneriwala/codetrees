@Test
@DirtiesContext
public void testWiki() throws Exception {
    configureMinimalGame();
    // Setup CMS content
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    CrudRootServiceHelper<DbPage> pageCrud = cmsService.getPageCrudRootServiceHelper();
    DbPage dbPage1 = pageCrud.createDbChild();
    dbPage1.setPredefinedType(CmsUtil.CmsPredefinedPage.HOME);
    dbPage1.setName("Home");
    DbContentList dbContentList = new DbContentList();
    dbContentList.init(userService);
    dbPage1.setContentAndAccessWrites(dbContentList);
    dbContentList.setRowsPerPage(5);
    dbContentList.setSpringBeanName("contentService");
    dbContentList.setContentProviderGetter("wikiSectionCrudRootServiceHelper");
    dbContentList.setWriteRestricted(DbContent.Access.REGISTERED_USER);
    CrudListChildServiceHelper<DbContent> columnCrud = dbContentList.getColumnsCrud();
    DbExpressionProperty nameProperty = (DbExpressionProperty) columnCrud.createDbChild(DbExpressionProperty.class);
    nameProperty.setExpression("name");
    DbContentDetailLink detailLink = (DbContentDetailLink) columnCrud.createDbChild(DbContentDetailLink.class);
    detailLink.setName("Details");
    CrudChildServiceHelper<DbContentBook> contentBookCrud = dbContentList.getContentBookCrud();
    DbContentBook dbContentBook = contentBookCrud.createDbChild();
    dbContentBook.setClassName("com.btxtech.game.services.cms.DbWikiSection");
    CrudListChildServiceHelper<DbContentRow> rowCrud = dbContentBook.getRowCrud();
    DbContentRow dbContentRow = rowCrud.createDbChild();
    dbContentRow.setName("theName");
    DbExpressionProperty expProperty = new DbExpressionProperty();
    expProperty.setParent(dbContentRow);
    expProperty.setExpression("html");
    expProperty.setEscapeMarkup(false);
    dbContentRow.setDbContent(expProperty);
    pageCrud.updateDbChild(dbPage1);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Activate
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    cmsService.activateCms();
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    beginHttpSession();
    // Create User
    beginHttpRequestAndOpenSessionInViewFilter();
    userService.createUser("test", "test", "test", "");
    userService.login("test", "test");
    endHttpRequestAndOpenSessionInViewFilter();
    // Write
    beginHttpRequestAndOpenSessionInViewFilter();
    tester.startPage(CmsPage.class);
    tester.assertVisible("form:content:edit:edit");
    FormTester formTester = tester.newFormTester("form");
    formTester.submit("content:edit:edit");
    endHttpRequestAndOpenSessionInViewFilter();
    beginHttpRequestAndOpenSessionInViewFilter();
    formTester = tester.newFormTester("form");
    formTester.submit("content:edit:create");
    endHttpRequestAndOpenSessionInViewFilter();
    beginHttpRequestAndOpenSessionInViewFilter();
    formTester = tester.newFormTester("form");
    formTester.setValue("content:table:rows:1:cells:1:cell:field", "TEST 1");
    formTester.submit("content:edit:save");
    endHttpRequestAndOpenSessionInViewFilter();
    beginHttpRequestAndOpenSessionInViewFilter();
    tester.clickLink("form:content:table:rows:2:cells:2:cell:link");
    endHttpRequestAndOpenSessionInViewFilter();
    beginHttpRequestAndOpenSessionInViewFilter();
    formTester = tester.newFormTester("form");
    formTester.setValue("content:table:rows:1:cells:2:cell:textArea", "Content Content Content");
    formTester.submit("content:edit:save");
    endHttpRequestAndOpenSessionInViewFilter();
    beginHttpRequestAndOpenSessionInViewFilter();
    formTester = tester.newFormTester("form");
    formTester.submit("content:edit:cancelEdit");
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    Collection<DbWikiSection> wiki = contentService.getWikiSectionCrudRootServiceHelper().readDbChildren();
    Assert.assertEquals(1, wiki.size());
    DbWikiSection dbWikiSection = wiki.iterator().next();
    Assert.assertEquals("TEST 1", dbWikiSection.getName());
    Assert.assertEquals("Content Content Content", dbWikiSection.getHtml());
}
