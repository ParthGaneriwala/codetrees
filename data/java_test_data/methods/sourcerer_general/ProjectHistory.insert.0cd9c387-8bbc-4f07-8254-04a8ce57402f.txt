public boolean insert(Connection db) throws SQLException {
    StringBuffer sql = new StringBuffer();
    sql.append("INSERT INTO project_history " + "(enteredby, project_id, link_object, link_item_id");
    if (parentId != -1) {
        sql.append(", parent_id");
    }
    if (topId != -1) {
        sql.append(", top_id");
    }
    if (position != -1) {
        sql.append(", position");
    }
    if (threadPosition != -1) {
        sql.append(", thread_position");
    }
    if (indent != -1) {
        sql.append(", indent");
    }
    if (childCount != -1) {
        sql.append(", child_count");
    }
    sql.append(", relative_enteredby");
    if (linkStartDate != null) {
        sql.append(", link_start_date");
    }
    if (entered != null) {
        sql.append(", entered");
    }
    sql.append(", description, enabled, event_type, lineage) VALUES " + "(?, ?, ?, ?");
    if (parentId != -1) {
        sql.append(", ?");
    }
    if (topId != -1) {
        sql.append(", ?");
    }
    if (position != -1) {
        sql.append(", ?");
    }
    if (threadPosition != -1) {
        sql.append(", ?");
    }
    if (indent != -1) {
        sql.append(", ?");
    }
    if (childCount != -1) {
        sql.append(", ?");
    }
    sql.append(", ?");
    /*if (relativeDate != null) {
      sql.append(", ?");
    }*/
    if (linkStartDate != null) {
        sql.append(", ?");
    }
    if (entered != null) {
        sql.append(", ?");
    }
    sql.append(", ?, ?, ?, ?) ");
    PreparedStatement pst = db.prepareStatement(sql.toString());
    int i = 0;
    pst.setInt(++i, enteredBy);
    pst.setInt(++i, projectId);
    pst.setString(++i, linkObject);
    pst.setInt(++i, linkItemId);
    if (parentId != -1) {
        DatabaseUtils.setInt(pst, ++i, parentId);
    }
    if (topId != -1) {
        DatabaseUtils.setInt(pst, ++i, topId);
    }
    if (position != -1) {
        pst.setInt(++i, position);
    }
    if (threadPosition != -1) {
        pst.setInt(++i, threadPosition);
    }
    if (indent != -1) {
        pst.setInt(++i, indent);
    }
    if (childCount != -1) {
        pst.setInt(++i, childCount);
    }
    if (relativeEnteredby != -1) {
        pst.setInt(++i, relativeEnteredby);
    } else {
        pst.setInt(++i, enteredBy);
    }
    /*  if (relativeDate != null) {
      pst.setTimestamp(++i, relativeDate);
    }*/
    if (linkStartDate != null) {
        pst.setTimestamp(++i, linkStartDate);
    }
    if (entered != null) {
        pst.setTimestamp(++i, entered);
    }
    pst.setString(++i, description);
    pst.setBoolean(++i, enabled);
    pst.setInt(++i, eventType);
    pst.setString(++i, lineage);
    pst.execute();
    pst.close();
    id = DatabaseUtils.getCurrVal(db, "project_history_history_id_seq", -1);
    return true;
}
