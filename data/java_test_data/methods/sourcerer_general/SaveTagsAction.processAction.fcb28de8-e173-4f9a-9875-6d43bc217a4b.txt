public GenericBean processAction(ActionRequest request, ActionResponse response) throws Exception {
    // get the modules details
    int linkItemId = PortalUtils.getPageViewAsInt(request);
    String moduleName = PortalUtils.getPageDomainObject(request);
    // get parameter values
    String tags = request.getParameter(TAGS);
    // Determine the project container to use
    Project project = findProject(request);
    if (project == null) {
        throw new Exception("Project is null");
    }
    // @todo Load the object being tagged to make sure it exists
    // Check the user's permissions
    User user = getUser(request);
    if (!user.isLoggedIn()) {
        throw new PortletException("Unauthorized to add tags");
    }
    // @todo figure out the permission to check!
    if (!ProjectUtils.hasAccess(project.getId(), user, "project-profile-view")) {
        throw new PortletException("Unauthorized to access this profile");
    }
    // get database connection
    Connection db = useConnection(request);
    // update the tag changes
    UserTagLogList userTagLogList = new UserTagLogList();
    userTagLogList.setUserId(user.getId());
    userTagLogList.setLinkModuleId(ModuleUtils.getLinkModuleIdFromModuleName(moduleName));
    userTagLogList.setLinkItemId(linkItemId);
    userTagLogList.buildList(db);
    userTagLogList.updateTags(db, tags);
    // reload the tags to the page
    TagLogList tagLogList = new TagLogList();
    tagLogList.setTableName(ModuleUtils.getTableFromModuleName(moduleName));
    tagLogList.setUniqueField(ModuleUtils.getPrimaryKeyFromModuleName(moduleName));
    tagLogList.setLinkItemId(linkItemId);
    tagLogList.buildList(db);
    HttpServletRequest req = (HttpServletRequest) request;
    req.getSession().setAttribute(CURRENT_TAGS, StringUtils.toHtml(tagLogList.getTagsAsString()));
    response.sendRedirect(response.encodeURL(request.getContextPath() + "/projects_center_ajax_message.jsp"));
    return null;
}
