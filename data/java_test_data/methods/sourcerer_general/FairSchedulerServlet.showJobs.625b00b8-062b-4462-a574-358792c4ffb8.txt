private void showJobs(PrintWriter out, boolean advancedView) {
    out.print("<h2>Running Jobs</h2>\n");
    out.print("<table border=\"2\" cellpadding=\"5\" cellspacing=\"2\">\n");
    int colsPerTaskType = advancedView ? 5 : 3;
    out.printf("<tr><th rowspan=2>Submitted</th>" + "<th rowspan=2>JobID</th>" + "<th rowspan=2>User</th>" + "<th rowspan=2>Name</th>" + "<th rowspan=2>Pool</th>" + "<th rowspan=2>Priority</th>" + "<th colspan=%d>Maps</th>" + "<th colspan=%d>Reduces</th>", colsPerTaskType, colsPerTaskType);
    out.print("</tr><tr>\n");
    out.print("<th>Finished</th><th>Running</th><th>Fair Share</th>" + (advancedView ? "<th>Weight</th><th>Deficit</th>" : ""));
    out.print("<th>Finished</th><th>Running</th><th>Fair Share</th>" + (advancedView ? "<th>Weight</th><th>Deficit</th>" : ""));
    out.print("</tr>\n");
    Collection<JobInProgress> runningJobs = jobTracker.runningJobs();
    for (JobInProgress job : runningJobs) {
        JobProfile profile = job.getProfile();
        JobInfo info = scheduler.infos.get(job);
        if (info == null) {
            // Job finished, but let's show 0's for info
            info = new JobInfo();
        }
        out.print("<tr>\n");
        out.printf("<td>%s</td>\n", DATE_FORMAT.format(new Date(job.getStartTime())));
        out.printf("<td><a href=\"jobdetails.jsp?jobid=%s\">%s</a></td>", profile.getJobID(), profile.getJobID());
        out.printf("<td>%s</td>\n", profile.getUser());
        out.printf("<td>%s</td>\n", profile.getJobName());
        out.printf("<td>%s</td>\n", generateSelect(scheduler.getPoolManager().getPoolNames(), scheduler.getPoolManager().getPoolName(job), "/scheduler?setPool=<CHOICE>&jobid=" + profile.getJobID() + (advancedView ? "&advanced" : "")));
        out.printf("<td>%s</td>\n", generateSelect(Arrays.asList(new String[] { "VERY_LOW", "LOW", "NORMAL", "HIGH", "VERY_HIGH" }), job.getPriority().toString(), "/scheduler?setPriority=<CHOICE>&jobid=" + profile.getJobID() + (advancedView ? "&advanced" : "")));
        out.printf("<td>%d / %d</td><td>%d</td><td>%8.1f</td>\n", job.finishedMaps(), job.desiredMaps(), info.runningMaps, info.mapFairShare);
        if (advancedView) {
            out.printf("<td>%8.1f</td>\n", info.mapWeight);
            out.printf("<td>%s</td>\n", info.neededMaps > 0 ? (info.mapDeficit / 1000) + "s" : "--");
        }
        out.printf("<td>%d / %d</td><td>%d</td><td>%8.1f</td>\n", job.finishedReduces(), job.desiredReduces(), info.runningReduces, info.reduceFairShare);
        if (advancedView) {
            out.printf("<td>%8.1f</td>\n", info.reduceWeight);
            out.printf("<td>%s</td>\n", info.neededReduces > 0 ? (info.reduceDeficit / 1000) + "s" : "--");
        }
        out.print("</tr>\n");
    }
    out.print("</table>\n");
}
