public static void main(String[] args) {
    String dirEntrada = "", dirSaida = "", arqSaida = null, arquivo = null;
    byte modoExec = MODO_NENHUM;
    boolean bBSI = false;
    boolean bMes = false;
    // Assegura argumentos corretos
    try {
        // Contador para o n�mero de argumentos
        int i = -1;
        // Realiza o parse nos argumentos
        while (++i < args.length) {
            // Checa a exist�ncia de um diret�rio de entrada
            if (args[i].compareTo("-DF") == 0) {
                if (dirEntrada.compareTo("") == 0) {
                    dirEntrada = args[++i];
                } else
                    throw new Exception("Mais de uma especificacao de diretorio de fonte.");
            } else // Diret�rio de sa�da
            if (args[i].compareTo("-DS") == 0) {
                if (dirSaida.compareTo("") == 0) {
                    dirSaida = args[++i];
                    if (!dirSaida.endsWith("/"))
                        dirSaida = dirSaida + "/";
                } else
                    throw new Exception("Mais de uma especificacao de diretorio de saida.");
            } else // Identifica��o do programa
            if (args[i].compareTo("-I") == 0) {
                modoExec = validaModoExecucao(modoExec, MODO_ID);
            } else // Modo ajuda
            if (args[i].compareTo("-?") == 0) {
                modoExec = validaModoExecucao(modoExec, MODO_AJUDA);
            } else // Modo l�xico
            if (args[i].compareTo("-L") == 0) {
                modoExec = validaModoExecucao(modoExec, MODO_LEXICO);
                arqSaida = args[++i];
            } else // Modo Sint�tico
            if (args[i].compareTo("-SI") == 0) {
                modoExec = validaModoExecucao(modoExec, MODO_SINTATICO);
                arqSaida = args[++i];
            } else // Modo completo
            if (args[i].compareTo("-R") == 0) {
                modoExec = validaModoExecucao(modoExec, MODO_COMPLETO);
                arqSaida = args[++i];
            } else // Modo completo com percurso
            if (args[i].compareTo("-BSI") == 0) {
                // Checa se -BSI ainda n�o foi passado
                if (!bBSI)
                    bBSI = true;
                else
                    throw new Exception("Mais de uma especificacao de -BSI.");
            } else // Arquivo .mes
            if (args[i].compareTo("-GL") == 0) {
                // Checa se -GL ainda n�o foi passado
                if (!bMes)
                    bMes = true;
                else
                    throw new Exception("Mais de uma especificacao de -GL.");
            } else // Sem�ntico
            if (args[i].compareTo("-SE") == 0) {
                modoExec = validaModoExecucao(modoExec, MODO_SEMANTICO);
                arqSaida = args[++i];
            } else // Arquivo-fonte
            if (args[i].toLowerCase().endsWith(".l06")) {
                arquivo = args[i];
            } else if (args[i].compareTo("-GC") == 0) {
            // just ignore this one
            } else
                throw new Exception("Parametro " + args[i] + " desconhecido.");
        }
        // Se n�o foi especificado nenhum modo, assume-se o modo completo
        if (modoExec == MODO_NENHUM)
            modoExec = MODO_COMPLETO;
        // Se n�o foi especificado nenhum arquivo-fonte
        if (arquivo == null && modoExec != MODO_ID && modoExec != MODO_AJUDA)
            throw new Exception("Nenhum arquivo-fonte (*.l06) especifidado.");
        // Se foi pedido -BSI ilegalmente
        if (bBSI && (modoExec == MODO_ID || modoExec == MODO_AJUDA || modoExec == MODO_LEXICO))
            throw new Exception("Impossivel realizar percurso na Arvore de Programa " + "no modo de execucao pedido.");
        // Se foi pedido -BSI ilegalmente
        if (bMes && (modoExec == MODO_ID || modoExec == MODO_AJUDA || modoExec == MODO_LEXICO || modoExec == MODO_SINTATICO || modoExec == MODO_SEMANTICO))
            throw new Exception("Impossivel gerar arquivo .mes no modo de execucao pedido.");
    } catch (// Trata a incorretude de argumentos
    Exception exc) {
        System.err.println("Erro na especificacao dos argumentos:\n\t" + exc.getMessage() + "\nExecute com -? para Ajuda.");
        return;
    }
    // Corrige dirEntrada
    dirEntrada = l06c.corrigeCaminho(dirEntrada);
    // Corrige dirSaida
    dirSaida = l06c.corrigeCaminho(dirSaida);
    // Executa em algum modo
    executa(modoExec, dirEntrada, dirSaida, arqSaida, arquivo, bBSI, bMes);
}
