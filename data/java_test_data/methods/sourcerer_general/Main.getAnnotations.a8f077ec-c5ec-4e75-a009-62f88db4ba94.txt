public static void getAnnotations() throws NotFoundException, ClassNotFoundException, IllegalAccessException, IllegalArgumentException, InvocationTargetException, InstantiationException {
    ClassPool classPool = ClassPool.getDefault();
    CtClass anotationClass = classPool.get("testes.MiBean");
    /*anotaciones para los metodos*/
    CtMethod[] ctMethods = anotationClass.getMethods();
    for (int i = 0; i < ctMethods.length; i++) {
        CtMethod ctMethod = ctMethods[i];
        Object[] objects = ctMethod.getAnnotations();
        for (int j = 0; j < objects.length; j++) {
            Annotation anotacionMethod = (Annotation) objects[j];
            System.out.println("--->" + anotacionMethod.annotationType().getName());
        }
    }
    /*anotaciones para las  clases*/
    Object[] annotations = anotationClass.getAvailableAnnotations();
    for (int i = 0; i < annotations.length; i++) {
        Annotation annotation = (Annotation) annotations[i];
        System.out.println("--->" + annotation.annotationType().getName());
        Method[] methods = annotation.annotationType().getDeclaredMethods();
        System.out.println("---------->fields para \t" + annotation.annotationType().getName());
        for (int j = 0; j < methods.length; j++) {
            Method method = methods[j];
            System.out.println("metodos---> " + method.getName());
            Object[] objects = new Object[] { null };
            String string = (String) method.invoke(annotation, null);
            System.out.println("valor---> " + string);
        }
        System.out.println("fin clases anno");
    }
    /*anotaciones para las  Field*/
    CtField[] ctField = anotationClass.getDeclaredFields();
    for (int i = 0; i < ctField.length; i++) {
        CtField ctField1 = ctField[i];
        Object[] objects = ctField1.getAnnotations();
        for (int j = 0; j < objects.length; j++) {
            Annotation annotationField = (Annotation) objects[j];
            System.out.println("--->" + annotationField.annotationType().getName());
        }
    }
}
