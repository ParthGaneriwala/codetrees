public IAeAddressingHeaders getReplyAddressing(IAeWsAddressingHeaders aSource, String aAction) throws AeBusinessProcessException {
    AeAddressingHeaders outAddrHeaders = new AeAddressingHeaders(aSource.getSourceNamespace());
    // Get the address that was invoked and
    // use it for the From address
    String incommingTo = aSource.getTo();
    String fromAddressURI = incommingTo;
    IAeEndpointReference from = new AeEndpointReference();
    from.setAddress(fromAddressURI);
    from.setSourceNamespace(aSource.getSourceNamespace());
    outAddrHeaders.setFrom(from);
    // Add RelatesTo
    String incommingMessageId = aSource.getMessageId();
    if (!AeUtil.isNullOrEmpty(incommingMessageId)) {
        outAddrHeaders.addRelatesTo(incommingMessageId, getReplyRelation(aSource.getSourceNamespace()));
    } else {
        // WS-Addressing requires a RelatesTo header if a reply is expected
        if (aSource.getReplyTo() != null)
            // $NON-NLS-1$
            throw new IllegalArgumentException(AeMessages.getString("AePartnerAddressing.0"));
    }
    // Setting To endpoint
    if (getFaultAction(aSource.getSourceNamespace()).equals(aAction) && (aSource.getFaultTo() != null)) {
        // For wsa fault action, use the FaultTo address, if any
        IAeEndpointReference endpoint = (IAeEndpointReference) aSource.getFaultTo();
        outAddrHeaders.setRecipient(endpoint);
    } else if (aSource.getReplyTo() != null) {
        // Use reply to, if specified
        IAeEndpointReference endpoint = (IAeEndpointReference) aSource.getReplyTo();
        outAddrHeaders.setRecipient(endpoint);
    } else if (aSource.getFrom() != null) {
        // otherwise, use from if available
        IAeEndpointReference endpoint = (IAeEndpointReference) aSource.getFrom();
        outAddrHeaders.setRecipient(endpoint);
    } else {
        // use anonymous role if no other choice
        outAddrHeaders.setTo(getAnonymousRole(aSource.getSourceNamespace()));
    }
    try {
        for (Iterator it = outAddrHeaders.getRecipient().getReferenceProperties().iterator(); it.hasNext(); ) {
            Element el = AeXmlUtil.cloneElement((Element) it.next());
            if (el.getNamespaceURI() == IAeConstants.WSA_NAMESPACE_URI_2005_08) {
                // $NON-NLS-1$ //$NON-NLS-2$
                el.setAttributeNS(IAeConstants.WSA_NAMESPACE_URI_2005_08, "wsa:IsReferenceParameter", "true");
            }
            outAddrHeaders.addHeaderElement(el);
        }
    } catch (AeWsAddressingException wse) {
        // $NON-NLS-1$
        throw new AeBusinessProcessException(AeMessages.getString("AePartnerAddressing.2"), wse);
    }
    // Set the action to the one given
    outAddrHeaders.setAction(aAction);
    return outAddrHeaders;
}
