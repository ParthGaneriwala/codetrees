private void initComponents() {
    jLabel1 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTextArea1 = new javax.swing.JTextArea();
    fechar = new javax.swing.JButton();
    jLabel2 = new javax.swing.JLabel();
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setResizable(false);
    // NOI18N
    jLabel1.setFont(new java.awt.Font("DejaVu Sans", 1, 16));
    jLabel1.setText("Interpretador Pascal / IJVM 0.1");
    // NOI18N
    jLabel1.setName("jLabel1");
    // NOI18N
    jScrollPane1.setName("jScrollPane1");
    jTextArea1.setColumns(20);
    jTextArea1.setEditable(false);
    jTextArea1.setRows(5);
    jTextArea1.setText("Interpretador Pascal / IJVM 0.1\nPor Clodoaldo Brasilino\n      Diogo Coutinho\n      Felipe Lemos\n      Tiago de França\n\n\t         INSTRUÇÕES DE USO\n\nInterpretador Pascal / IJVM é um \"tradutor\" de linguagens de alto nível para a linguagen de baixo nível IJVM.Ele capaz de interpretar uma única linguagem de alto nível, o Pascal.\n\nSegue abaixo alguns exemplos de teste.\n\nTeste do while:\n------------------------\nprogram n;\n\nvar k, g:integer;\n\nbegin\n\nwhile k = 2 do k := 1;\n\nend.\n------------------------\n\nTeste do if/else:\n\n-----------------------\nprogram n;\n\nvar k, g:integer;\n\nbegin\n\nif k = 2 then k := 1\nelse k := 2\n\nend.\n-----------------------\n\nApós concluído o código em alto nível, basta clicar na lupa para gerar o código equivalente em IJVM.\n");
    // NOI18N
    jTextArea1.setName("jTextArea1");
    jScrollPane1.setViewportView(jTextArea1);
    fechar.setText("Fechar");
    // NOI18N
    fechar.setName("fechar");
    fechar.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            fecharActionPerformed(evt);
        }
    });
    jLabel2.setText("Instruções de uso");
    // NOI18N
    jLabel2.setName("jLabel2");
    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(82, 82, 82).addComponent(jLabel1)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap().addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addGap(163, 163, 163).addComponent(jLabel2)).addGroup(layout.createSequentialGroup().addGap(184, 184, 184).addComponent(fechar))).addContainerGap()));
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(21, 21, 21).addComponent(jLabel1).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel2).addGap(18, 18, 18).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(fechar).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
    pack();
}
