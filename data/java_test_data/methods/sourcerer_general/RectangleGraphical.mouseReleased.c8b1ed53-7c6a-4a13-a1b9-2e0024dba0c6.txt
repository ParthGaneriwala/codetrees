@Override
public void mouseReleased(MouseEvent e) {
    GraphicView gv = (GraphicView) this.getParent();
    for (Graphical g : gv.getAllNodes()) {
        RectangleGraphical rg = (RectangleGraphical) g;
        if (rg.isSelected()) {
            // linksklik release
            int jumpx = 0;
            int jumpy = 0;
            int xn = rg.getUpperLeft().getX();
            int yn = rg.getUpperLeft().getY();
            if (gv.isGridOn() && gv.isSnapped()) {
                jumpx = xn % 25;
                jumpy = yn % 25;
                xn = xn - jumpx;
                yn = yn - jumpy;
                if (!rg.isBoxed() && !GTransmitterNode.class.isAssignableFrom(rg.getClass())) {
                    rg.getUpperLeft().setXY(xn, yn);
                    rg.setLocations(rg.getUpperLeft());
                }
            }
            if (GBoxNode.class.isAssignableFrom(rg.getClass()) && !rg.isBoxed()) {
                GBoxNode bn = (GBoxNode) rg;
                for (Graphical gr : bn.getInternalObjects()) {
                    if (RectangleGraphical.class.isAssignableFrom(gr.getClass())) {
                        RectangleGraphical intern = (RectangleGraphical) gr;
                        intern.getUpperLeft().setXY(intern.getUpperLeft().getX() - jumpx, intern.getUpperLeft().getY() - jumpy);
                        intern.setLocations(intern.getUpperLeft());
                    }
                }
            }
        }
    }
    // rechtsklikrelease
    if (e.isPopupTrigger()) {
        gv.notifyObservers(new ClearSelectionCommand());
        gv.notifyObservers(new SetSelectedCommand(this, true));
        if (this.isBoxed()) {
            gv.getPopup().menuBoxedInNode();
        } else if (GBoxNode.class.isAssignableFrom(this.getClass())) {
            gv.getPopup().menuBoxNode();
        } else {
            if (this.getType().startsWith("StoreIO")) {
                gv.getPopup().menuStore();
            } else {
                gv.getPopup().menuNode();
            }
        }
        gv.getPopup().getPopup().show(this, e.getX(), e.getY());
    }
    gv.notifyObservers(new SetSelectedCommand(this, true));
    gv.repaint();
}
