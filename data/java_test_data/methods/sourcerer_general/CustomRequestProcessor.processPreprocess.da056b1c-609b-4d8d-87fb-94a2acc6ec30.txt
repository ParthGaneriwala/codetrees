@Override
protected boolean processPreprocess(HttpServletRequest request, HttpServletResponse response) {
    String pagina = request.getServletPath();
    String contexto = request.getContextPath();
    boolean autorizado = false;
    String redirect = null;
    /*
		 * Login and Logout don't need authorization
		 */
    if (Arrays.asList(ALLOWED_PAGES).contains(pagina)) {
        autorizado = true;
    } else {
        HttpSession httpSession = request.getSession();
        // Get the user in the session
        Usuario usuario = (Usuario) httpSession.getAttribute(LoginAction.SESSION_ATTRIBUTE_USER);
        PersistenceFactory factory = PersistenceFactory.getFactory();
        PersistenceContext pc = factory.createPersistenceContext();
        UsuarioBO usuarioBO = new UsuarioBO(pc);
        String perform = request.getParameter("perform");
        if (perform == null) {
            perform = DEFAULT_PERFORM;
        }
        try {
            pc.beginTrans();
            // validate the user
            if (usuario != null && usuarioBO.isAutorizado(usuario, pagina)) {
                autorizado = true;
            } else {
                if (null == usuario) {
                    redirect = PAGE_RESTRICT;
                }
            }
        } catch (Exception e) {
            System.out.println("Erro: " + e);
            e.printStackTrace();
            redirect = DEFAULT_PAGE_ERROR;
        } finally {
            pc.close();
        }
    }
    // Redirect to another page
    if (redirect != null) {
        try {
            response.sendRedirect(contexto + redirect);
        } catch (IOException e) {
            logger.log(Level.SEVERE, e.getMessage());
        }
    }
    return autorizado;
}
