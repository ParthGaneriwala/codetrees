private void initGUI() {
    try {
        {
            this.setTitle("\u8fdc\u7a0b\u526a\u5207\u677f");
            getContentPane().setLayout(null);
            {
                remoteClipGetBtn = new JButton();
                getContentPane().add(remoteClipGetBtn);
                remoteClipGetBtn.setText("\u83b7\u5f97\u8fdc\u7a0b\u526a\u5207\u677f");
                remoteClipGetBtn.setBounds(12, 12, 151, 29);
                remoteClipGetBtn.addActionListener(new ActionListener() {

                    public void actionPerformed(ActionEvent evt) {
                        doInSocket(new SocketCallback() {

                            @Override
                            public Object connected(Socket socket) throws Exception {
                                ClipCommand cmd = new ClipCommand();
                                cmd.setCmdCode(ClipCommand.CMD_GET_CLIP);
                                // 发送命令
                                ObjectOutputStream out = new ObjectOutputStream(socket.getOutputStream());
                                out.writeObject(cmd);
                                // 获得结果
                                ObjectInputStream in = new ObjectInputStream(socket.getInputStream());
                                ClipResult result = (ClipResult) in.readObject();
                                if (result.isSuccess()) {
                                    if ("string".equals(result.getAttr(ClipCommand.ATTR_DATA_FLAVOR))) {
                                        String data = (String) result.getAttr(ClipCommand.ATTR_DATA);
                                        ClipboardUtils.setSystemClipboardText(data);
                                    } else if ("image".equals(result.getAttr(ClipCommand.ATTR_DATA_FLAVOR))) {
                                        byte[] data = (byte[]) result.getAttr(ClipCommand.ATTR_DATA);
                                        ClipboardUtils.setSystemClipboardImage(toImage(data));
                                    } else {
                                        JOptionPane.showMessageDialog(ClipboardTransferMain.this, "未支持的剪切板类型:" + result.getAttr(ClipCommand.ATTR_DATA_FLAVOR));
                                        in.close();
                                        out.close();
                                        return null;
                                    }
                                    updateMessage("获得剪切板成功，剪切板类型：" + result.getAttr(ClipCommand.ATTR_DATA_FLAVOR));
                                } else {
                                    JOptionPane.showMessageDialog(ClipboardTransferMain.this, "获得剪切板失败:" + result.getMessage());
                                }
                                in.close();
                                out.close();
                                return null;
                            }
                        });
                    }
                });
            }
            {
                remoteClipSetBtn = new JButton();
                getContentPane().add(remoteClipSetBtn);
                remoteClipSetBtn.setText("\u8bbe\u7f6e\u8fdc\u7a0b\u526a\u5207\u677f");
                remoteClipSetBtn.setBounds(181, 12, 159, 29);
                remoteClipSetBtn.addActionListener(new ActionListener() {

                    public void actionPerformed(ActionEvent evt) {
                        setRemoteClipboard(true);
                    }
                });
            }
            {
                serverLeb = new JLabel();
                getContentPane().add(serverLeb);
                serverLeb.setText("\u8fdc\u7a0b\u670d\u52a1\u5668\u5730\u5740(IP:PORT)");
                serverLeb.setBounds(12, 53, 162, 17);
            }
            {
                serverAddrTxt = new JTextField();
                getContentPane().add(serverAddrTxt);
                serverAddrTxt.setBounds(169, 48, 186, 27);
            }
            {
                jLabel1 = new JLabel();
                getContentPane().add(jLabel1);
                jLabel1.setText("\u6d88\u606f\uff1a");
                jLabel1.setBounds(12, 97, 48, 24);
            }
            {
                messageLeb = new JLabel();
                getContentPane().add(messageLeb);
                messageLeb.setBounds(60, 97, 295, 24);
            }
            {
                jLabel2 = new JLabel();
                getContentPane().add(jLabel2);
                jLabel2.setText("\u672c\u5730\u526a\u5207\u677f\u670d\u52a1");
                jLabel2.setBounds(12, 141, 91, 20);
            }
            {
                clipServerStartBtn = new JButton();
                getContentPane().add(clipServerStartBtn);
                clipServerStartBtn.setText("\u542f\u52a8");
                clipServerStartBtn.setBounds(12, 173, 79, 29);
                clipServerStartBtn.addActionListener(new ActionListener() {

                    public void actionPerformed(ActionEvent evt) {
                        try {
                            final int port = Integer.parseInt(portTxt.getText());
                            Thread t = new Thread() {

                                @Override
                                public void run() {
                                    try {
                                        // 给关闭留点时间,保证重启时服务已经停止
                                        Thread.sleep(200);
                                        server = new ServerSocket(port);
                                        // 
                                        clipServerStartBtn.setEnabled(false);
                                        clipServerStopBtn.setEnabled(true);
                                        portTxt.setEnabled(false);
                                        tostop = false;
                                        while (!tostop) {
                                            Socket client = server.accept();
                                            if (!tostop) {
                                                ClipSendThread t = new ClipSendThread(client);
                                                t.start();
                                            }
                                        }
                                        server.close();
                                        Thread.sleep(200);
                                        clipServerStartBtn.setEnabled(true);
                                        clipServerStopBtn.setEnabled(false);
                                        portTxt.setEnabled(true);
                                    } catch (Exception e) {
                                        throw new RuntimeException(e.getMessage(), e);
                                    }
                                }
                            };
                            t.start();
                        } catch (NumberFormatException e) {
                            JOptionPane.showMessageDialog(ClipboardTransferMain.this, "端口号错误:" + e.getMessage());
                        }
                    }
                });
            }
            {
                clipServerStopBtn = new JButton();
                getContentPane().add(clipServerStopBtn);
                clipServerStopBtn.setText("\u505c\u6b62");
                clipServerStopBtn.setBounds(103, 173, 81, 29);
                clipServerStopBtn.setEnabled(false);
                clipServerStopBtn.addActionListener(new ActionListener() {

                    public void actionPerformed(ActionEvent evt) {
                        shutdown();
                    }
                });
            }
            {
                jLabel3 = new JLabel();
                getContentPane().add(jLabel3);
                jLabel3.setText("\u7aef\u53e3\uff1a");
                jLabel3.setBounds(196, 179, 44, 17);
            }
            {
                portTxt = new JTextField();
                getContentPane().add(portTxt);
                portTxt.setText("11221");
                portTxt.setBounds(252, 174, 88, 27);
            }
            {
                modifyClipChk = new JCheckBox();
                getContentPane().add(modifyClipChk);
                modifyClipChk.setText("\u5141\u8bb8\u8fdc\u7a0b\u4fee\u6539\u526a\u5207\u677f");
                modifyClipChk.setBounds(12, 221, 157, 22);
            }
            {
                clearBtn = new JButton();
                getContentPane().add(clearBtn);
                clearBtn.setText("\u6e05\u7a7a\u672c\u5730\u7cfb\u7edf\u526a\u5207\u677f");
                clearBtn.setBounds(196, 218, 159, 29);
                clearBtn.addActionListener(new ActionListener() {

                    public void actionPerformed(ActionEvent evt) {
                        ClipboardUtils.setSystemClipboardText(null);
                    }
                });
            }
            {
                autoChk = new JCheckBox();
                getContentPane().add(autoChk);
                autoChk.setText("\u81ea\u52a8\u8bbe\u7f6e\u8fdc\u7a0b\u526a\u5207\u677f");
                autoChk.setBounds(12, 249, 151, 22);
            }
        }
        this.setSize(394, 309);
        {
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
