private String generateThresholdJS() {
    StringBuilder js = new StringBuilder();
    js.append("var draggedItem;\n");
    js.append("function dragStart(evt)\n");
    js.append("{\n");
    js.append("  evt = evt || window.event;\n");
    js.append("  var target = evt.target != null ? evt.target : evt.srcElement; \n");
    js.append("  draggedItem = target;\n");
    js.append("  document.addEventListener('mousemove', dragging, true);\n");
    js.append("  document.addEventListener('mouseup', dragEnd, true);\n");
    js.append("}\n");
    js.append("\n");
    js.append("function dragging(evt)\n");
    js.append("{\n");
    js.append("  var x = evt.clientX;\n");
    js.append("  var min_x = draggedItem.getAttribute('min_x');\n");
    js.append("  var max_x = draggedItem.getAttribute('max_x');\n");
    js.append("  if (x < min_x)  x = min_x;\n");
    js.append("  else if (x > max_x - 3)  x = max_x - 3;\n");
    js.append("  draggedItem.setAttributeNS(null, 'x', x);\n");
    js.append("  draggedItem.setAttributeNS(null, 'width', max_x - x);\n");
    js.append("  var scalingFactor = draggedItem.getAttribute('scalingFactor');\n");
    js.append("  var threshold = (max_x - min_x) * (1 - (x - min_x)/(max_x - min_x)) / scalingFactor;\n");
    js.append("  threshold = Math.round(threshold * 100) /100;\n");
    js.append("  document.getElementById('threshold').innerHTML = threshold;\n");
    js.append("}\n");
    js.append("\n");
    js.append("function dragEnd()\n");
    js.append("{\n");
    js.append("  document.removeEventListener('mousemove', dragging,true);\n");
    js.append("  document.removeEventListener('mouseup', dragEnd,true);\n");
    js.append("}\n");
    js.append("\n");
    js.append("\n");
    return js.toString();
}
