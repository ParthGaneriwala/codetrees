public void testConvertList() {
    Graph data = Factory.createGraphMem();
    Node first = RDF.Nodes.first;
    Node rest = RDF.Nodes.rest;
    Node nil = RDF.Nodes.nil;
    data.add(new Triple(n1, first, p));
    data.add(new Triple(n1, rest, n2));
    data.add(new Triple(n2, first, q));
    data.add(new Triple(n2, rest, nil));
    data.add(new Triple(n3, first, p));
    data.add(new Triple(n3, rest, n4));
    data.add(new Triple(n4, rest, n5));
    data.add(new Triple(n5, first, q));
    data.add(new Triple(n5, rest, nil));
    String rules = "[rule1: (?x p ?y) -> (?x q ?y)]";
    List ruleList = Rule.parseRules(rules);
    InfGraph infgraph = new BasicForwardRuleReasoner(ruleList).bind(data);
    RuleContext context = new BFRuleContext((ForwardRuleInfGraphI) infgraph);
    List result = Util.convertList(n1, context);
    assertEquals(result.size(), 2);
    assertEquals(result.get(0), p);
    assertEquals(result.get(1), q);
    List result2 = Util.convertList(n3, context);
    assertEquals(result2.size(), 1);
    assertEquals(result2.get(0), p);
}
