/*
       * Sets properties only if they have changed; to replace expensive DOM
       * calls with cheap inequality tests.
       * 
       * TODO: Investigate moving properties that are guaranteed to be the same
       * across all elements in the image panel (backgroundColor, borderColor,
       * borderWidth, borderStyle, image url, possibly more) into a single style
       * for the image panel as a whole, and just add that styleName to each
       * image, and set the properties once, in the style. If this worked, it
       * would save both time and space (style would be internal and not
       * intended for direct developer access, since in some charts canvas, not
       * styles, would be responsible for these curve properties), and the same
       * approach could be applied to the labelPanel.
       */
void setReusableProperties(int fontSize, String fontFamily, String fontStyle, String fontWeight, String fontColor, HasHorizontalAlignment.HorizontalAlignmentConstant hAlign, HasVerticalAlignment.VerticalAlignmentConstant vAlign, String labelText, boolean isHTML, Widget labelWidget) {
    if (this.fontSize != fontSize) {
        DOM.setIntStyleAttribute(innerGrid.getCellFormatter().getElement(0, 0), "fontSize", fontSize);
        this.fontSize = fontSize;
    }
    if (this.fontFamily != fontFamily) {
        DOM.setStyleAttribute(innerGrid.getCellFormatter().getElement(0, 0), "fontFamily", fontFamily);
        this.fontFamily = fontFamily;
    }
    if (this.fontStyle != fontStyle) {
        DOM.setStyleAttribute(innerGrid.getCellFormatter().getElement(0, 0), "fontStyle", fontStyle);
        this.fontStyle = fontStyle;
    }
    if (this.fontWeight != fontWeight) {
        DOM.setStyleAttribute(innerGrid.getCellFormatter().getElement(0, 0), "fontWeight", fontWeight);
        this.fontWeight = fontWeight;
    }
    if (this.fontColor != fontColor) {
        DOM.setStyleAttribute(innerGrid.getCellFormatter().getElement(0, 0), "color", fontColor);
        this.fontColor = fontColor;
    }
    if (this.hAlign != hAlign) {
        getCellFormatter().setHorizontalAlignment(0, 0, hAlign);
        // without this, only IE6-quirks doesn't quite align right:
        innerGrid.getCellFormatter().setHorizontalAlignment(0, 0, hAlign);
        this.hAlign = hAlign;
    }
    if (this.vAlign != vAlign) {
        getCellFormatter().setVerticalAlignment(0, 0, vAlign);
        // without this, only IE6-quirks doesn't quite align right:
        innerGrid.getCellFormatter().setVerticalAlignment(0, 0, vAlign);
        this.vAlign = vAlign;
    }
    if (null != labelWidget) {
        if (this.labelWidget != labelWidget) {
            innerGrid.setWidget(0, 0, labelWidget);
            this.labelWidget = labelWidget;
            this.labelText = null;
        }
    } else if (this.labelText != labelText || this.isHTML != isHTML) {
        if (null == labelText || "" == labelText)
            innerGrid.setText(0, 0, "");
        else if (!isHTML) {
            innerGrid.setText(0, 0, labelText);
        } else {
            innerGrid.setHTML(0, 0, labelText);
        }
        this.isHTML = isHTML;
        this.labelText = labelText;
        this.labelWidget = null;
    }
}
