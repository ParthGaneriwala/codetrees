public void generate_custom_report() throws SQLException {
    int num_of_cols = 0, col1 = 0, col2 = 0, col3 = 0, col4 = 0;
    String from = this.tffrom.getText();
    String to = this.tfto.getText();
    if (this.cbBase.getSelectedItem().equals("Event")) {
        Vector<String> vheader = new Vector<String>();
        vheader.addElement("Date");
        vheader.addElement("Event Name");
        vheader.addElement("Total Sales");
        Vector result = new Vector();
        BookedTicketViewController bkcon = new BookedTicketViewController();
        Object[] eventObjects = this.lsSelect.getSelectedValues();
        Event[] event = new Event[eventObjects.length];
        for (int i = 0; i < eventObjects.length; i++) {
            event[i] = (Event) eventObjects[i];
        }
        result = bkcon.getEventRange(event, from, to);
        if (result.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No sales for this event selection");
        } else {
            col1 = 100;
            col2 = 400;
            col3 = 200;
            this.lbReport.setText("             EVENT CUSTOM REPORT");
            num_of_cols = 3;
            setResultTable(result, vheader, num_of_cols, col1, col2, col3, col4);
        }
    } else if (this.cbBase.getSelectedItem().equals("Customer")) {
        Vector<String> vheader = new Vector<String>();
        vheader.addElement("Date");
        vheader.addElement("First Name");
        vheader.addElement("Total Sales");
        Vector result = new Vector();
        BookedTicketViewController bkcon = new BookedTicketViewController();
        Object[] custObjects = this.lsSelect.getSelectedValues();
        Customer[] cust = new Customer[custObjects.length];
        for (int i = 0; i < custObjects.length; i++) {
            cust[i] = (Customer) custObjects[i];
        }
        result = bkcon.getCustomerRange(cust, from, to);
        if (result.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No sales for this customer selection");
        } else {
            col1 = 100;
            col2 = 400;
            col3 = 200;
            this.lbReport.setText("             CUSTOMER CUSTOM REPORT");
            num_of_cols = 3;
            setResultTable(result, vheader, num_of_cols, col1, col2, col3, col4);
        }
    } else if (this.cbBase.getSelectedItem().equals("Venue")) {
        Vector<String> vheader = new Vector<String>();
        vheader.addElement("Date");
        vheader.addElement("Venue Name");
        vheader.addElement("Total Sales");
        Vector result = new Vector();
        BookedTicketViewController bkcon = new BookedTicketViewController();
        Object[] venueObjects = this.lsSelect.getSelectedValues();
        Venue[] venue = new Venue[venueObjects.length];
        for (int i = 0; i < venueObjects.length; i++) {
            venue[i] = (Venue) venueObjects[i];
        }
        result = bkcon.getVenueRange(venue, from, to);
        if (result.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No sales for this venue selection");
        } else {
            col1 = 100;
            col2 = 400;
            col3 = 200;
            this.lbReport.setText("             VENUE CUSTOM REPORT");
            num_of_cols = 3;
            setResultTable(result, vheader, num_of_cols, col1, col2, col3, col4);
        }
    } else if (this.cbBase.getSelectedItem().equals("Location")) {
        Vector<String> vheader = new Vector<String>();
        vheader.addElement("Date");
        vheader.addElement("Location Name");
        vheader.addElement("Total Sales");
        Vector result = new Vector();
        BookedTicketViewController bkcon = new BookedTicketViewController();
        Object[] locatObjects = this.lsSelect.getSelectedValues();
        String[] locat = new String[locatObjects.length];
        for (int i = 0; i < locatObjects.length; i++) {
            locat[i] = (String) locatObjects[i];
        }
        result = bkcon.getLocationRange(locat, from, to);
        if (result.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No sales for this Location selection");
        } else {
            col1 = 100;
            col2 = 400;
            col3 = 200;
            this.lbReport.setText("             LOCATION CUSTOM REPORT");
            num_of_cols = 3;
            setResultTable(result, vheader, num_of_cols, col1, col2, col3, col4);
        }
    }
}
