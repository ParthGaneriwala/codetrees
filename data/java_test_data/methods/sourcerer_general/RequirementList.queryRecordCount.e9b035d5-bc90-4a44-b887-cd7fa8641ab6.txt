public HashMap<String, HashMap<String, Integer>> queryRecordCount(Connection db, TimeZone timeZone) throws SQLException {
    PreparedStatement pst = null;
    ResultSet rs = null;
    HashMap<String, HashMap<String, Integer>> events = new HashMap<String, HashMap<String, Integer>>();
    HashMap<String, Integer> startEvents = new HashMap<String, Integer>();
    HashMap<String, Integer> endEvents = new HashMap<String, Integer>();
    StringBuffer sqlstrDate = new StringBuffer();
    StringBuffer sqlFilter = new StringBuffer();
    StringBuffer sqlendDate = new StringBuffer();
    StringBuffer sqlstrTail = new StringBuffer();
    StringBuffer sqlendTail = new StringBuffer();
    sqlstrDate.append("SELECT " + DatabaseUtils.castDateTimeToDate(db, "r.startdate") + " AS group_date, " + "COUNT(*) AS recordcount " + "FROM project_requirements r " + "WHERE r.requirement_id > -1 " + "AND r.startdate IS NOT NULL ");
    sqlstrTail.append("GROUP BY group_date ");
    createFilter(sqlFilter);
    pst = db.prepareStatement(sqlstrDate.toString() + sqlFilter.toString() + sqlstrTail.toString());
    prepareFilter(pst);
    rs = pst.executeQuery();
    while (rs.next()) {
        String alertDate = DateUtils.getServerToUserDateString(timeZone, DateFormat.SHORT, rs.getTimestamp("group_date"));
        int alertCount = rs.getInt("recordcount");
        startEvents.put(alertDate, new Integer(alertCount));
    }
    rs.close();
    pst.close();
    sqlendDate.append("SELECT " + DatabaseUtils.castDateTimeToDate(db, "r.deadline") + " AS group_date, " + "COUNT(*) AS recordcount " + "FROM project_requirements r " + "WHERE r.requirement_id > -1 " + "AND r.deadline IS NOT NULL ");
    sqlendTail.append("GROUP BY group_date ");
    // createFilter(sqlFilter);
    pst = db.prepareStatement(sqlendDate.toString() + sqlFilter.toString() + sqlendTail.toString());
    prepareFilter(pst);
    rs = pst.executeQuery();
    while (rs.next()) {
        String alertDate = DateUtils.getServerToUserDateString(timeZone, DateFormat.SHORT, rs.getTimestamp("group_date"));
        int alertCount = rs.getInt("recordcount");
        endEvents.put(alertDate, new Integer(alertCount));
    }
    rs.close();
    pst.close();
    events.put("startdate", startEvents);
    events.put("enddate", endEvents);
    return events;
}
