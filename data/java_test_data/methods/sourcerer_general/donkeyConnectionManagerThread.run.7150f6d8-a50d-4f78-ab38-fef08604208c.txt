public void run() {
    System.out.println("ConnectionManagerThread started.");
    Thread.currentThread().setName("ConnectionManager");
    try {
        SelectionKey acceptKey = ssc.register(selector, SelectionKey.OP_ACCEPT);
        int newAccepts = 0;
        while (!dInfo.doShutdown()) {
            while ((newAccepts = selector.select(100)) > 0) {
                Set newKeys = selector.selectedKeys();
                Iterator i = newKeys.iterator();
                while (i.hasNext()) {
                    SelectionKey inKey = (SelectionKey) i.next();
                    if (inKey.isAcceptable()) {
                        i.remove();
                        ServerSocketChannel nextReady = (ServerSocketChannel) inKey.channel();
                        SocketChannel sc = nextReady.accept();
                        System.out.print("Incoming connection from ");
                        System.out.println(sc.socket().getInetAddress().toString());
                        donkeyConnectionWorkerThread freeThread = getFreeThread();
                        freeThread.addConnection(new donkeyIncomingConnection(sc, dInfo));
                    // freeThread.getSelector().wakeup();
                    }
                }
            }
            Iterator it = workers.iterator();
            while (it.hasNext()) {
                donkeyConnectionWorkerThread worker = (donkeyConnectionWorkerThread) it.next();
                if (!worker.isActive()) {
                    it.remove();
                    System.out.println("Removing closed worker...");
                }
            }
        }
        System.out.println("Shutdown requested, closing all connections, waiting 5 secs...");
        closeAll();
        try {
            Thread.currentThread().sleep(5000);
        } catch (InterruptedException e) {
        }
        System.out.println("ConnectionMAnagerThread end.");
    } catch (ClosedChannelException e) {
    } catch (IOException e) {
    }
}
