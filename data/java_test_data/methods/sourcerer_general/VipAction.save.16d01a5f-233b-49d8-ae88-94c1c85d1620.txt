public ActionForward save(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    if (log.isDebugEnabled()) {
        log.debug("Entering 'save' method");
    }
    ActionMessages errors = form.validate(mapping, request);
    if (!errors.isEmpty()) {
        saveErrors(request, errors);
        return mapping.findForward("failure");
    }
    // Extract attributes and parameters we will need
    ActionMessages messages = new ActionMessages();
    VipForm vipForm = (VipForm) form;
    ViPerson viPerson = new ViPerson();
    String id = request.getParameter("id");
    // Exceptions are caught by ActionExceptionHandler
    // all we need to persist is the parent object
    ViPersonManager mgr = (ViPersonManager) getBean("viPersonManager");
    Boolean isNew = true;
    if (id != null && !id.trim().equals("")) {
        vipForm.setId(id);
        isNew = false;
        viPerson = mgr.getViPerson(id);
    }
    BeanUtils.copyProperties(viPerson, vipForm);
    viPerson.initAudit(this.getLoginUser());
    try {
        mgr.saveViPerson(viPerson);
    } catch (Exception e) {
        log.warn(e.getMessage());
        errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("errors.vipForm.save", e.getMessage()));
        saveErrors(request, errors);
        BeanUtils.copyProperties(vipForm, convert(viPerson));
        updateFormBean(mapping, request, vipForm);
        return mapping.findForward("failure");
    }
    BeanUtils.copyProperties(vipForm, viPerson);
    updateFormBean(mapping, request, vipForm);
    // add success messages
    if (isNew) {
        messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("vipForm.added", viPerson.getUserName()));
        saveMessages(request.getSession(), messages);
    } else {
        messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("vipForm.updated", viPerson.getUserName()));
        saveMessages(request.getSession(), messages);
    }
    return mapping.findForward("success");
}
