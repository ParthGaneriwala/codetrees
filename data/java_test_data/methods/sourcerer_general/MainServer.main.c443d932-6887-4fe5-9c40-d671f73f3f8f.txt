public static void main(String[] args) {
    // TODO code application logic here
    String lockfilename = ".." + File.separator + "runtime" + File.separator + " queue.lock";
    File fqlock = new File(lockfilename);
    System.out.println(fqlock + (fqlock.exists() ? " is found " : " is missing "));
    while (true) {
        // Sleep for some time before checking queue again
        try {
            Thread.sleep(2000);
        } catch (InterruptedException ex) {
            ex.printStackTrace();
        }
        // Wait if lock file exists
        int x = 0;
        while (fqlock.exists()) {
            System.out.println(x);
            x++;
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                ex.printStackTrace();
            }
        }
        // Create Lock file
        System.out.println("creating lock file...");
        try {
            fqlock.createNewFile();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        // Read queue file
        System.out.println("reading queue file....");
        String queuefilename = ".." + File.separator + "runtime" + File.separator + "queue.txt";
        File fqueue = new File(queuefilename);
        if (!fqueue.exists()) {
            // Delete lock file
            fqlock.delete();
            continue;
        }
        Vector v = fileToVector(fqueue);
        Enumeration en = v.elements();
        while (en.hasMoreElements()) {
            // queuedCommand
            String qComm = (String) en.nextElement();
            System.out.println(qComm);
            if (qComm.startsWith("START")) {
                String[] cmdArgs = extractArgs(qComm.substring(qComm.indexOf('"')), 5);
                new Main(cmdArgs);
            }
        }
        // TODO Delete queue file
        fqueue.delete();
        // Delete lock file
        fqlock.delete();
    }
// WHILE LOOP ENDS HERE
}
