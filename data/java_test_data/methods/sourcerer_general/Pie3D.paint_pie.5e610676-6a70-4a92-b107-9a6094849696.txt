public void paint_pie(Graphics backg) {
    g2b = (Graphics2D) backg;
    g2b.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2b.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, transparency));
    startAngle = -45;
    if (show_title == 1) {
        PaintTitle(backg);
    }
    // deseneaza suprafata de dedesubt
    for (int i = 0; i < numSlices; i++) {
        g2b.setPaint(color[i]);
        angle = (int) Math.round(360 * (value[i] / total));
        g2b.fill(new Arc2D.Double(pie_x, pie_y + depth, radius, (int) (radius / aspectFudge), startAngle, (int) angle, Arc2D.PIE));
        startAngle += angle;
    }
    g2b.fill(new Arc2D.Double(pie_x, pie_y + depth, radius, (int) (radius / aspectFudge), startAngle, (315 - startAngle), Arc2D.PIE));
    // deseneaza pie-urile din interior
    for (int x = (int) depth - 1; x >= 1; x--) {
        startAngle = -45;
        for (int i = 0; i < numSlices; i++) {
            g2b.setPaint(color[i].darker());
            angle = (int) Math.round(360 * (value[i] / total));
            g2b.draw(new Arc2D.Double(pie_x, pie_y + x, radius, (int) (radius / aspectFudge), startAngle, (int) angle, Arc2D.PIE));
            g2b.draw(new Arc2D.Double(pie_x + 1, pie_y + x + 1, radius - 2, (int) ((radius - 2) / aspectFudge), startAngle, (int) angle, Arc2D.PIE));
            startAngle += angle;
        }
        g2b.fill(new Arc2D.Double(pie_x, pie_y + x, radius, (int) (radius / aspectFudge), startAngle, (315 - startAngle), Arc2D.PIE));
    }
    startAngle = -45;
    // deseneaza suprafata de deasupra
    for (int i = 0; i < numSlices; i++) {
        g2b.setPaint(color[i]);
        angle = (int) Math.round(360 * (value[i] / total));
        g2b.fill(new Arc2D.Double(pie_x, pie_y, radius, (int) (radius / aspectFudge), startAngle, (int) angle, Arc2D.PIE));
        startAngle += angle;
    }
    g2b.fill(new Arc2D.Double(pie_x, pie_y, radius, (int) (radius / aspectFudge), startAngle, (315 - startAngle), Arc2D.PIE));
    g2b.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1.f));
}
