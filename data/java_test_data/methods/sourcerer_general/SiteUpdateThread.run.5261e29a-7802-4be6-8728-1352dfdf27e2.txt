@Override
public void run() {
    Log.d(Constants.LOG_TAG, "start update, mode=" + mMode);
    // Log.d(Constants.LOG_TAG,Property.dump());
    mUpdateData.setStatusMessage("Update Started");
    mUpdateData.setUpdateStarted(true);
    mUpdateData.setUpdateInProgress(true);
    notifyUser();
    try {
        switch(mMode) {
            case MODE_START:
                sLog.info("Update started for site " + mUpdateData.getName());
                mUpdateData.setCurrentMode(MODE_START);
                downloadBlocks(mTmpDir);
            case MODE_RESUME:
                sLog.info("Update resumed for site " + mUpdateData.getName());
                mUpdateData.setCurrentMode(MODE_RESUME);
                downloadBlocks(mTmpDir);
            case MODE_REASSEMBLE:
                sLog.fine("Reassembling site package for " + mUpdateData.getName());
                mUpdateData.setCurrentMode(MODE_REASSEMBLE);
                mUpdateData.setStatusMessage("Reassembling Archive...");
                reassemble(mTmpDir);
                verify(mTmpDir, mUpdateData.getName(), mUpdateData.getFileFormat());
            case MODE_UNPACK:
                sLog.fine("Extracting site package for " + mUpdateData.getName());
                mUpdateData.setCurrentMode(MODE_UNPACK);
                mUpdateData.setStatusMessage("Extracting Archive to " + mTmpDir);
                unpack(mTmpDir, mUpdateData.getName());
                deleteBlocks(mTmpDir);
                copyDirectory(new File(mTmpDir), new File(Constants.SDCARD_ROOT + Property.getProperty(Constants.PROPERTY_APP_ROOT_DIR) + "/" + mUpdateData.getName()));
            case MODE_CLEANUP:
                mUpdateData.setStatusMessage("Finishing Up...");
                mUpdateData.setCurrentMode(MODE_CLEANUP);
                deleteTemp(mTmpDir);
            case MODE_FINISH:
                mUpdateData.setCurrentMode(MODE_FINISH);
                updateSiteProps();
            default:
        }
        mUpdateData.setUpdateComplete(true);
        mUpdateData.setStatusMessage("Update Complete!");
        sLog.info("Update complete for site " + mUpdateData.getName());
    } catch (InterruptedException e) {
        if (mCancel) {
            mUpdateData.setStatusMessage("Canceled");
            mAbort = true;
            sLog.info("Update canceled for site:" + mUpdateData.getName());
        } else {
            mUpdateData.setStatusMessage("Paused");
            sLog.info("Update paused for site:" + mUpdateData.getName());
        }
        sLog.fine(mUpdateData.getStatusMessage());
    } catch (IOException e) {
        mUpdateData.setStatusMessage("Failed");
        mUpdateData.setHasError(true);
        Log.v(Constants.LOG_TAG, e.getMessage());
        sLog.log(Level.WARNING, "IOException during site update:", e);
    } catch (Exception e) {
        Log.v(Constants.LOG_TAG, e.getMessage());
        sLog.log(Level.WARNING, "Exception during site update:", e);
    }
    if (mAbort) {
        mUpdateData.reset();
        deleteTemp(mTmpDir);
    }
    mUpdateData.setUpdateInProgress(false);
    notifyUser();
}
