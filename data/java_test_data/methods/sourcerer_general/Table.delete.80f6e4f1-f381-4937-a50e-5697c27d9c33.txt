int delete(Session session, HsqlArrayList deleteList) throws HsqlException {
    HashSet path = constraintPath == null ? new HashSet() : constraintPath;
    constraintPath = null;
    HashMappedList tUpdateList = tableUpdateList == null ? new HashMappedList() : tableUpdateList;
    tableUpdateList = null;
    if (database.isReferentialIntegrity()) {
        for (int i = 0; i < deleteList.size(); i++) {
            Row row = (Row) deleteList.get(i);
            path.clear();
            checkCascadeDelete(session, this, tUpdateList, row, false, path);
        }
    }
    // check transactions
    database.txManager.checkDelete(session, deleteList);
    for (int i = 0; i < tUpdateList.size(); i++) {
        Table table = (Table) tUpdateList.getKey(i);
        HashMappedList updateList = (HashMappedList) tUpdateList.get(i);
        database.txManager.checkDelete(session, updateList);
    }
    // perform delete
    fireAll(session, Trigger.DELETE_BEFORE);
    if (database.isReferentialIntegrity()) {
        for (int i = 0; i < deleteList.size(); i++) {
            Row row = (Row) deleteList.get(i);
            path.clear();
            checkCascadeDelete(session, this, tUpdateList, row, true, path);
        }
    }
    for (int i = 0; i < deleteList.size(); i++) {
        Row row = (Row) deleteList.get(i);
        if (!row.isCascadeDeleted()) {
            deleteNoRefCheck(session, row);
        }
    }
    for (int i = 0; i < tUpdateList.size(); i++) {
        Table table = (Table) tUpdateList.getKey(i);
        HashMappedList updateList = (HashMappedList) tUpdateList.get(i);
        table.updateRowSet(session, updateList, null, false);
        updateList.clear();
    }
    fireAll(session, Trigger.DELETE_AFTER);
    path.clear();
    constraintPath = path;
    tableUpdateList = tUpdateList;
    return deleteList.size();
}
