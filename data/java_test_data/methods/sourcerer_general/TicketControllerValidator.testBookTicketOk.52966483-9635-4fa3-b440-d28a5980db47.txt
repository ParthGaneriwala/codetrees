@Test(groups = { "Tickets" })
public void testBookTicketOk() {
    this.passenger = new Passenger();
    this.passenger.setName("Alexey");
    this.passenger.setSurname("Kravets");
    this.passenger.seteMail("kayrick@ispras.ru");
    this.passenger.setPhone("555-0000");
    this.passenger.setAddress("lalalalala");
    flightManager.addPassenger(passenger);
    flight = new Flight();
    flight.setBase("London");
    flight.setDestination("Berlin");
    flight.setArrivalDate(new Date());
    flight.setDepDate(new Date());
    flight.setBusinessClassTicketCost(2000);
    flight.setEconomyClassTicketCost(1500);
    flight.setCompany("Flying testers");
    flight.setFirstEconomy(15);
    flight.setMaxRow(60);
    flight.setMaxSeat(10);
    flightManager.addFlight(flight);
    TicketController controller = new TicketController();
    controller.setFlightManager(flightManager);
    ModelAndView result = controller.bookTicket(flight.getId(), 4, 10, this.passenger.getId());
    Assert.assertEquals(result.getViewName(), "booking");
    ModelMap map = result.getModelMap();
    Flight flight = (Flight) map.get("flight");
    Passenger passenger = (Passenger) map.get("passenger");
    Integer row = (Integer) map.get("row");
    Integer seat = (Integer) map.get("seat");
    Assert.assertEquals(passenger.getId(), this.passenger.getId());
    Assert.assertEquals(flight.getId(), this.flight.getId());
    Assert.assertEquals(row.intValue(), 4);
    Assert.assertEquals(seat.intValue(), 10);
}
