public static String encode(byte[] raw) {
    int end = raw.length;
    int slop = end % 3;
    char[] buf = new char[(slop == 0) ? (4 * (end / 3)) : (4 * (end / 3 + 1))];
    int i = 0, j = 0;
    end = end - slop;
    while (i < end) {
        int block = ((raw[i++] & 0xff) << 16) | ((raw[i++] & 0xff) << 8) | (raw[i++] & 0xff);
        buf[j++] = encodeMap[(block >>> 18) & 0x3f];
        buf[j++] = encodeMap[(block >>> 12) & 0x3f];
        buf[j++] = encodeMap[(block >>> 6) & 0x3f];
        buf[j++] = encodeMap[(block & 0x3f)];
    }
    if (slop == 2) {
        int block = ((raw[i++] & 0xff) << 16) | ((raw[i++] & 0xff) << 8);
        buf[j++] = encodeMap[(block >>> 18) & 0x3f];
        buf[j++] = encodeMap[(block >>> 12) & 0x3f];
        buf[j++] = encodeMap[(block >>> 6) & 0x3f];
        buf[j] = PAD_CHAR;
    } else if (slop == 1) {
        int block = (raw[i++] & 0xff) << 16;
        buf[j++] = encodeMap[(block >>> 18) & 0x3f];
        buf[j++] = encodeMap[(block >>> 12) & 0x3f];
        buf[j++] = PAD_CHAR;
        buf[j] = PAD_CHAR;
    }
    return new String(buf);
}
