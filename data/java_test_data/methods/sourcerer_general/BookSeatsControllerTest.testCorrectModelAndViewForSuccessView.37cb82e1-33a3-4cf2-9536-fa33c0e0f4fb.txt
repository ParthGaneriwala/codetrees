public void testCorrectModelAndViewForSuccessView() throws Exception {
    // creating the objects.
    Performance performance = new Performance();
    PriceBand priceBand = new PriceBand();
    final ReservationRequest request = new ReservationRequest();
    request.setPerformance(performance);
    request.setPriceBand(priceBand);
    request.holdFor(5);
    request.setBookingFee(new BigDecimal(3.0));
    MockHttpServletRequest httpRequest = new MockHttpServletRequest("POST", "/reserveSeats.html");
    httpRequest.addParameter("numberOfSeatsRequested", "3");
    httpRequest.getSession(true).setAttribute("formSessionAttributeName", request);
    MockHttpServletResponse httpResponse = new MockHttpServletResponse();
    // setting expectations.
    Booking booking = new Booking();
    Seat s1 = new Seat("s1");
    Seat s2 = new Seat("s2");
    Seat s3 = new Seat("s3");
    s1.setRightSide(s2);
    s2.setLeftSide(s1);
    s2.setRightSide(s3);
    s3.setLeftSide(s2);
    Seat[] seats = new Seat[] { s1, s2, s3 };
    Reservation reservation = new Reservation(seats, booking);
    boxOfficeMock.allocateSeats(request);
    boxOfficeMockControl.setReturnValue(reservation);
    boxOfficeMockControl.replay();
    // executing tested method.
    BookSeatsController bookSeatsController = new BookSeatsController() {

        protected String getFormSessionAttributeName(HttpServletRequest request) {
            return "formSessionAttributeName";
        }

        protected ReservationRequest createReservationRequest(Performance performance, PriceBand priceBand, int minutesToHold) {
            return request;
        }
    };
    initController(bookSeatsController);
    ModelAndView mav = bookSeatsController.handleRequest(httpRequest, httpResponse);
    // assertions & verifications.
    assertTrue(mav.getView() instanceof RedirectView);
    assertEquals("view name", "successView", ((RedirectView) mav.getView()).getUrl());
    assertSame("reservation in session", reservation, httpRequest.getSession().getAttribute("reservation"));
    assertSame("reservation request in session", request, httpRequest.getSession().getAttribute("reservationRequest"));
    boxOfficeMockControl.verify();
}
