public String runFlow(ChainFlow chainFlow, ChainContext chainContext) throws FlowException {
    try {
        if (log.isInfoEnabled()) {
            log.info("Start to run the web service flow [" + chainFlow.getFlowName() + "]");
        }
        chainContext.addSimuList("<font color=blue><b> Start to run the web service flow [" + chainFlow.getFlowCode() + "] </b></font>");
        if ("Y".equals(chainFlow.getSkipYn())) {
            if (log.isInfoEnabled()) {
                log.info("Write log flow [" + chainFlow.getFlowName() + "]: skipFlag=true");
            }
            chainContext.addSimuList("Write log flow [" + chainFlow.getFlowName() + "]: skipFlag=true<br>=================");
            return "0";
        }
        List<String> script = chainFlow.getScripts();
        if (script.size() < 1) {
            log.info("Write log flow [" + chainFlow.getFlowName() + "]: there is no statement");
            chainContext.addSimuList("Write log flow [" + chainFlow.getFlowName() + "]: there is no statement<br>=================");
            return "0";
        }
        String[] arglist = new String[script.size()];
        for (int i = 0; i < script.size(); i++) {
            String sqlstr = script.get(i).toString();
            Iterator<Object> iter = chainContext.getDataMapIterator();
            while (iter.hasNext()) {
                DataMapping dataMapping = (DataMapping) iter.next();
                sqlstr = StringUtils.replace(sqlstr, dataMapping.getFieldName(), dataMapping.getFieldMapping());
            }
            sqlstr = FormulaFactory.getInstance().run(sqlstr);
            arglist[i] = sqlstr;
        }
        Object retobj = null;
        try {
            retobj = WebServiceUtil.call(this.getChainFlow().getAttr1(), this.getChainFlow().getAttr2(), arglist);
        } catch (AxisFault e) {
        }
        String sResult = "";
        if (retobj != null)
            sResult = retobj.toString();
        DataMapping dataMapping = new DataMapping();
        dataMapping.setFieldName(Configuration.SEPARATOR_SYSTEM + Configuration.VAR_WebService_RESULT + Configuration.SEPARATOR_SYSTEM);
        dataMapping.setFieldValue(sResult);
        dataMapping.setFieldMapping(sResult);
        chainContext.addDataMap(dataMapping.getFieldName(), dataMapping);
        log.info("Call result: " + sResult);
        log.info("WebServiceFlowImp::runFlow OK");
        chainContext.addSimuList("Call result: " + sResult);
        chainContext.addSimuList("WebServiceFlowImp::runFlow OK<br>--------------------------------");
        return "0";
    } catch (Exception e) {
        log.error("WebService Flow :" + e.getMessage());
        try {
            onError(chainFlow, chainContext, 98);
        } catch (Exception ex) {
        // TODO
        }
        return "98";
    }
}
