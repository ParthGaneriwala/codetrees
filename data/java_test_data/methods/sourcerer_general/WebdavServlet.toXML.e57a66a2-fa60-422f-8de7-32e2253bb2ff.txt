public void toXML(XMLWriter generatedXML) {
    generatedXML.writeElement(null, "activelock", XMLWriter.OPENING);
    generatedXML.writeElement(null, "locktype", XMLWriter.OPENING);
    generatedXML.writeElement(null, type, XMLWriter.NO_CONTENT);
    generatedXML.writeElement(null, "locktype", XMLWriter.CLOSING);
    generatedXML.writeElement(null, "lockscope", XMLWriter.OPENING);
    generatedXML.writeElement(null, scope, XMLWriter.NO_CONTENT);
    generatedXML.writeElement(null, "lockscope", XMLWriter.CLOSING);
    generatedXML.writeElement(null, "depth", XMLWriter.OPENING);
    if (depth == INFINITY) {
        generatedXML.writeText("Infinity");
    } else {
        generatedXML.writeText("0");
    }
    generatedXML.writeElement(null, "depth", XMLWriter.CLOSING);
    generatedXML.writeElement(null, "owner", XMLWriter.OPENING);
    generatedXML.writeText(owner);
    generatedXML.writeElement(null, "owner", XMLWriter.CLOSING);
    generatedXML.writeElement(null, "timeout", XMLWriter.OPENING);
    long timeout = (expiresAt - System.currentTimeMillis()) / 1000;
    generatedXML.writeText("Second-" + timeout);
    generatedXML.writeElement(null, "timeout", XMLWriter.CLOSING);
    generatedXML.writeElement(null, "locktoken", XMLWriter.OPENING);
    Enumeration tokensList = tokens.elements();
    while (tokensList.hasMoreElements()) {
        generatedXML.writeElement(null, "href", XMLWriter.OPENING);
        generatedXML.writeText("opaquelocktoken:" + tokensList.nextElement());
        generatedXML.writeElement(null, "href", XMLWriter.CLOSING);
    }
    generatedXML.writeElement(null, "locktoken", XMLWriter.CLOSING);
    generatedXML.writeElement(null, "activelock", XMLWriter.CLOSING);
}
