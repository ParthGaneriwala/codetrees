public void doGet(HttpServletRequest req, HttpServletResponse resp) throws IOException {
    UserService userService = UserServiceFactory.getUserService();
    User user = userService.getCurrentUser();
    String content = req.getParameter("content");
    String amount = req.getParameter("amount");
    String reason = req.getParameter("reason");
    String rec_token = req.getParameter("rec_token");
    String email = req.getParameter("email");
    String eventid = req.getParameter("eventid");
    String evententryid = req.getParameter("evententryid");
    String website = req.getParameter("website");
    String name = req.getParameter("name");
    String event_date = req.getParameter("event_date");
    String time = req.getParameter("time");
    String location = req.getParameter("location");
    String return_link = req.getParameter("return_link");
    // eventid
    // evententryid
    Date date = new Date();
    Customer customer = new Customer(user, content, date, amount, reason, rec_token);
    customer.setEmail(email);
    customer.setEventid(eventid);
    customer.setWebsite(website);
    customer.setEvententryid(evententryid);
    customer.setName(name);
    customer.setEvent_date(event_date);
    customer.setTime(time);
    customer.setLocation(location);
    customer.setReturn_link(return_link);
    // customer.setCallerReference(NAME + customer.getId());
    PersistenceManager pm = PMF.get().getPersistenceManager();
    try {
        pm.makePersistent(customer);
    } finally {
        pm.close();
    }
    String requestURL = null;
    String error = null;
    try {
        String accessKeyId = PropertyBundle.getProperty(PropertyKeys.AWS_ACCESS_KEY);
        String secretAccessKey = PropertyBundle.getProperty(PropertyKeys.AWS_SECRET_KEY);
        String CHECKOUT_SERVER = CheckoutPropertyBundle.getProperty(CheckoutPropertyKeys.CHECKOUT_SERVER_NAME);
        // System.out.println("XXX: " + PropertyBundle.getProperty(PropertyKeys.MAX_ERROR_RETRY));
        // String CHECKOUT_SERVER = PropertyBundle.getProperty("CHECKOUT_SERVER");
        // AmazonFPSCBUIUtils obj = new AmazonFPSCBUIUtils(AwsAccessKey, AwsSecretKey);
        AmazonFPSCBUIUtils obj = new AmazonFPSCBUIUtils(accessKeyId, secretAccessKey);
        obj.setMandatoryParams("SingleUse", CHECKOUT_SERVER + "/CustomerSingleUseToken");
        customer.setCallerReference(NAME + customer.getId());
        pm = PMF.get().getPersistenceManager();
        try {
            pm.makePersistent(customer);
        } finally {
            pm.close();
        }
        obj.setCallerReference(NAME + customer.getId());
        obj.setTransactionAmount(amount);
        // obj.setTransactionAmount("100");
        obj.setPaymentReason(reason);
        // obj.add("recipientToken", "M2LD42KZJR5CCGGE33EH3DRD4HFEKBI3NGLK124TAHVLAMA9NQQ7KESGNNTHQRQT");
        obj.add("recipientToken", rec_token);
        requestURL = obj.getURL();
        System.out.println("Request URL is ::  " + requestURL);
    } catch (Exception e) {
        error = e.getMessage();
    }
    if (requestURL != null)
        resp.sendRedirect(requestURL);
    else
        resp.sendRedirect("/message.jsp?msg=" + error);
}
