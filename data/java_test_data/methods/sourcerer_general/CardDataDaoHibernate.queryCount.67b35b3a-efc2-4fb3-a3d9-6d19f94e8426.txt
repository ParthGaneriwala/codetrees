public Long queryCount(Project project, Date beginDate, Date endDate, String username, String certificateNo, String nextStatus, List<String> confirmRoles, String task) {
    String queryString = "select count(*) from CardData where project= ? and userName like ? and certificateNo like ?";
    if (beginDate != null) {
        queryString = queryString + " and createdDate >= ?";
    }
    if (endDate != null) {
        queryString = queryString + " and createdDate <= ?";
    }
    if (StringUtils.isNotEmpty(nextStatus)) {
        queryString = queryString + " and nextStatus = ?";
    }
    if (confirmRoles != null && confirmRoles.size() > 0) {
        queryString = queryString + " and confirmRole in (:confirmRoles) ";
    }
    if (StringUtils.isNotEmpty(task)) {
        queryString = queryString + " and task = ?";
    }
    Query query = this.getSession().createQuery(queryString);
    username = username == null ? "" : username.trim();
    certificateNo = certificateNo == null ? "" : certificateNo.trim();
    query.setEntity(0, project);
    query.setString(1, "%" + username + "%");
    query.setString(2, "%" + certificateNo + "%");
    int queryIndex = 3;
    if (beginDate != null && endDate != null) {
        query.setDate(queryIndex++, beginDate);
        query.setDate(queryIndex++, endDate);
    } else {
        if (beginDate != null) {
            query.setDate(queryIndex, beginDate);
        }
        if (endDate != null) {
            query.setDate(queryIndex, endDate);
        }
    }
    if (StringUtils.isNotEmpty(nextStatus)) {
        query.setString(queryIndex++, nextStatus);
    }
    if (confirmRoles != null && confirmRoles.size() > 0) {
        query.setParameterList("confirmRoles", confirmRoles);
    }
    if (StringUtils.isNotEmpty(task)) {
        query.setString(queryIndex++, task);
    }
    return ((Long) query.iterate().next());
}
