public void run() {
    String tstr = "gyj56kuykyguk";
    peer.ThreadCounter tc;
    if (!peer.Config.ThreadStrTable.containsKey(tstr)) {
        tc = new peer.ThreadCounter();
        peer.Config.ThreadStrTable.put(tstr, tc);
    }
    tc = (ThreadCounter) peer.Config.ThreadStrTable.get(tstr);
    tc.conut++;
    // System.out.println("$$$ "+assistSessionId+" "+"��������");
    getOutAddress();
    if (isGetOutAddress) {
        int outPort2 = outPort;
        try {
            startNewPingThread();
            pingReceiveTime = System.currentTimeMillis();
            try {
                Config.route.receivePing(pingSessionId, sn);
                if (outPort2 != outPort) {
                    System.out.println("�˿���ת������ " + outPort2 + "-> " + outPort);
                }
                stopPingThread();
                conn = peer.Config.route.getConnection(outIp, outPort);
                conn.setSourceNode(sn);
                connectFailTimes = 0;
                runAllQueryTask();
            // ini();
            } catch (ReceivePingException e) {
                connectFailTimes++;
                lastConnectFailTime = System.currentTimeMillis();
                stopPingThread();
            // e.printStackTrace();
            }
        } catch (ConnectException e1) {
            e1.printStackTrace();
            connectFailTimes++;
            lastConnectFailTime = System.currentTimeMillis();
        } catch (Exception e) {
            e.printStackTrace();
            connectFailTimes++;
            lastConnectFailTime = System.currentTimeMillis();
        } finally {
            stopPingThread();
        }
    } else {
        connectFailTimes++;
        lastConnectFailTime = System.currentTimeMillis();
    }
    lockConnet = false;
    // System.out.println("lockConnet=falselockConnet=false");
    tc.conut--;
}
