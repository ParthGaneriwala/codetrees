public static void main14(String[] args) throws Exception {
    Iterator<String> sgsniterator = SGSNIDLOC.keySet().iterator();
    while (sgsniterator.hasNext()) {
        String sgsnid = sgsniterator.next();
        int sgsnloc = SGSNIDLOC.get(sgsnid);
        int sgsntextloc = sgsnloc + 20;
        System.out.println("<rect x=\"" + sgsnloc + "\" y=\"25\" width=\"80\" height=\"40\" fill=\"#FFFFFF\" stroke=\"#000000\"/>");
        System.out.println("<text x=\"" + sgsntextloc + "\" y=\"50\" xml:space=\"preserve\" font-size=\"14\" fill=\"black\">" + sgsnid + "</text>");
    }
    Iterator<String> iterator = GGSNIDLOC.keySet().iterator();
    while (iterator.hasNext()) {
        String ggsnid = iterator.next();
        int ggsnloc = GGSNIDLOC.get(ggsnid);
        int ggsntextloc = ggsnloc + 20;
        System.out.println("<rect x=\"" + ggsnloc + "\" y=\"150\" width=\"80\" height=\"40\" fill=\"#FFFFFF\" stroke=\"#000000\"/>");
        System.out.println("<text x=\"" + ggsntextloc + "\" y=\"175\" xml:space=\"preserve\" font-size=\"14\" fill=\"black\">" + ggsnid + "</text>");
    }
    // <rect x="0" y="25" width="80" height="40" fill="#FFFFFF"
    // stroke="#000000"/>
    // <text x="20" y="50" xml:space="preserve" font-size="14"
    // fill="black">SGSN01</text>
    Connection con = null;
    // Connection con = testcon();
    String sql = "select SGSNID,sum(USERCOUNT) as usercount1,sum(ALLVOLUME) as allvolume1,sum(upvolume) as upvolume1,sum(downvolume) as downvolume1,ggsnid,apnni from  STAT_SGSN where ggsnid like 'GGSN%' and dayflag=1 and STATTIME=20100102 group by sgsnid,ggsnid,apnni";
    Statement stmt = con.createStatement();
    ResultSet rs = stmt.executeQuery(sql);
    List list = new ArrayList();
    while (rs.next()) {
        SgsnStatModel model = new SgsnStatModel();
        int usercount = rs.getInt("USERCOUNT1");
        double all = rs.getDouble("ALLVOLUME1");
        String sgsnid = rs.getString("SGSNID");
        String ggsnid = rs.getString("ggsnid");
        model.setTotalStream(all);
        model.setTotalUser((int) (usercount));
        model.setDate("20100102");
        model.setSgsnid(sgsnid);
        model.setUpvolume(rs.getDouble("upvolume1"));
        model.setDownvolume(rs.getDouble("downvolume1"));
        model.setGgsnid(ggsnid);
        model.setApnni(rs.getString("apnni"));
        list.add(model);
    }
    rs.close();
    stmt.close();
    con.close();
    for (int i = 0; i < list.size(); i++) {
        SgsnStatModel model = (SgsnStatModel) list.get(i);
        double allvolume = model.getTotalStream();
        String sgsnid = model.getSgsnid();
        String ggsnid = model.getGgsnid();
        int sgsnidloc = SGSNIDLOC.get(sgsnid);
        int ggsnidloc = GGSNIDLOC.get(ggsnid);
        int sgsnaver = 60 / 3;
        int ggsnaver = 60 / 3;
        int sgsncmnetloc = sgsnidloc + sgsnaver;
        int sgsncmwaploc = sgsnidloc + 2 * sgsnaver;
        int sgsnotherloc = sgsnidloc + 3 * sgsnaver;
        int ggsncmnetloc = ggsnidloc + ggsnaver;
        int ggsncmwaploc = ggsnidloc + 2 * ggsnaver;
        int ggsnotherloc = ggsnidloc + 3 * ggsnaver;
        if (model.getApnni().equals("cmnet")) {
            if (allvolume > BASICSTREAM) {
                String width = com.sxit.system.util.NumberUtil.toMoney(allvolume / STREAMDIFF);
                System.out.println("<line x1=\"" + sgsncmnetloc + "\" y1=\"65\" x2=\"" + ggsncmnetloc + "\" y2=\"150\" stroke=\"RED\" stroke-width=\"" + width + "\"/>");
            // System.out.println(model.getSgsnid()+"==>"+model.getGgsnid()+"=>"+allvolume+"==>cmnet");
            }
        } else if (model.getApnni().equals("cmwap")) {
            if (allvolume > BASICSTREAM) {
                String width = com.sxit.system.util.NumberUtil.toMoney(allvolume / STREAMDIFF);
                // System.out.println(model.getSgsnid()+"==>"+model.getGgsnid()+"=>"+allvolume+"==>cmwap");
                System.out.println("<line x1=\"" + sgsncmwaploc + "\" y1=\"65\" x2=\"" + ggsncmwaploc + "\" y2=\"150\" stroke=\"BLUE\" stroke-width=\"" + width + "\"/>");
            }
        } else if (model.getApnni().equals("other")) {
            if (allvolume > OTHERBASICSTREAM) {
                String width = com.sxit.system.util.NumberUtil.toMoney(allvolume / OTHERSTREAMDIFF);
                // System.out.println(model.getSgsnid()+"==>"+model.getGgsnid()+"=>"+allvolume+"==>other");
                System.out.println("<line x1=\"" + sgsnotherloc + "\" y1=\"65\" x2=\"" + ggsnotherloc + "\" y2=\"150\" stroke=\"YELLOW\" stroke-width=\"" + width + "\"/>");
            }
        }
    }
// piechart();
// linechart();
// Date date=new Date();
// date.setTime(1256787292L*1000);
// 
// System.out.println(date.toLocaleString());
// 
// System.out.println(System.getProperty("file.encoding"));
// //
// System.out.println("中文");
// 
// java.text.DateFormat df=new
// java.text.SimpleDateFormat("yyyyMMddHHmmss");
// System.out.println(df.parse("20091117000000").getTime()/1000);
// java.text.NumberFormat nf=new DecimalFormat("####.#");
// 
// 
// int value=13000811;
// 
// BigDecimal num = new BigDecimal(13000811);
// 
// float vvv=num.floatValue();
// System.out.println(System.currentTimeMillis()/1000);
}
