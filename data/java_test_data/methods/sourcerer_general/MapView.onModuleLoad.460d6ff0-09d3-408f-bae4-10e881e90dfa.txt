@Override
public void onModuleLoad() {
    // Setup common
    GwtCommon.setUncaughtExceptionHandler();
    GwtCommon.disableBrowserContextMenuJSNI();
    TerrainView.uglySuppressRadar = true;
    int terrainId = Integer.parseInt(Window.Location.getParameter(TerrainEditorAsync.TERRAIN_SETTING_ID));
    AbsolutePanel absolutePanel = new AbsolutePanel();
    absolutePanel.setSize("100%", "100%");
    RootPanel.get().add(absolutePanel);
    final TerritoryEditModel territoryEditModel = new TerritoryEditModel();
    TerritoryCockpit cockpit = new TerritoryCockpit(territoryEditModel);
    cockpit.addToParent(absolutePanel, TopMapPanel.Direction.RIGHT_TOP, 30);
    territoryEditModel.setTerritoryCockpit(cockpit);
    final MiniTerrain miniTerrain = new MiniTerrain(RootPanel.get().getOffsetWidth(), RootPanel.get().getOffsetHeight());
    miniTerrain.getElement().getStyle().setZIndex(1);
    absolutePanel.add(miniTerrain, 0, 0);
    final MiniTerritoryView miniTerritoryView = new MiniTerritoryView(RootPanel.get().getOffsetWidth(), RootPanel.get().getOffsetHeight());
    miniTerritoryView.getElement().getStyle().setZIndex(2);
    absolutePanel.add(miniTerritoryView, 0, 0);
    territoryEditModel.setMiniTerritoryView(miniTerritoryView);
    TerrainEditorAsync terrainEditor = GWT.create(TerrainEditor.class);
    territoryEditModel.setTerrainEditorAsync(terrainEditor);
    terrainEditor.getTerrainInfo(terrainId, new AsyncCallback<TerrainInfo>() {

        @Override
        public void onFailure(Throwable throwable) {
            GwtCommon.handleException(throwable, true);
        }

        @Override
        public void onSuccess(TerrainInfo terrainInfo) {
            TerrainView.getInstance().setupTerrain(terrainInfo.getTerrainSettings(), terrainInfo.getTerrainImagePositions(), terrainInfo.getSurfaceRects(), terrainInfo.getSurfaceImages(), terrainInfo.getTerrainImages());
            TerrainView.getInstance().getTerrainHandler().loadImagesAndDrawMap(new SimpleDeferredStartup());
            miniTerrain.onTerrainSettings(terrainInfo.getTerrainSettings());
            miniTerritoryView.onTerrainSettings(terrainInfo.getTerrainSettings());
            miniTerritoryView.drawTiles();
        }
    });
    terrainEditor.getTerritories(new AsyncCallback<Collection<Territory>>() {

        @Override
        public void onFailure(Throwable throwable) {
            GwtCommon.handleException(throwable, true);
        }

        @Override
        public void onSuccess(Collection<Territory> territories) {
            ClientTerritoryService.getInstance().setTerritories(territories);
            territoryEditModel.setTerritories(territories);
        }
    });
}
