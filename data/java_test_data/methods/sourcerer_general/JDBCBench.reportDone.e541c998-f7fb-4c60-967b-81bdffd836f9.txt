public void reportDone() {
    long end_time = System.currentTimeMillis();
    double completion_time = ((double) end_time - (double) start_time) / 1000;
    if (TabFile != null) {
        TabFile.print(tps + ";" + n_clients + ";" + n_txn_per_client + ";");
    }
    System.out.println("\n* Benchmark Report *");
    System.out.print("* Featuring ");
    if (prepared_stmt) {
        System.out.print("<prepared statements> ");
        if (TabFile != null) {
            TabFile.print("<prepared statements>;");
        }
    } else {
        System.out.print("<direct queries> ");
        if (TabFile != null) {
            TabFile.print("<direct queries>;");
        }
    }
    if (transactions) {
        System.out.print("<transactions> ");
        if (TabFile != null) {
            TabFile.print("<transactions>;");
        }
    } else {
        System.out.print("<auto-commit> ");
        if (TabFile != null) {
            TabFile.print("<auto-commit>;");
        }
    }
    System.out.println("\n--------------------");
    System.out.println("Time to execute " + transaction_count + " transactions: " + completion_time + " seconds.");
    System.out.println("Max/Min memory usage: " + MemoryWatcher.max + " / " + MemoryWatcher.min + " kb");
    System.out.println(failed_transactions + " / " + transaction_count + " failed to complete.");
    double rate = (transaction_count - failed_transactions) / completion_time;
    System.out.println("Transaction rate: " + rate + " txn/sec.");
    if (TabFile != null) {
        TabFile.print(MemoryWatcher.max + ";" + MemoryWatcher.min + ";" + failed_transactions + ";" + rate + "\n");
    }
    transaction_count = 0;
    failed_transactions = 0;
    MemoryWatcher.reset();
}
