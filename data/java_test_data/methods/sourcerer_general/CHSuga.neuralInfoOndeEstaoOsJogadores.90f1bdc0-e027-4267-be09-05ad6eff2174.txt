// ////FIM DAS NOVAS///////////
// ///NOVAS 2 ////////////
private Vector<Double> neuralInfoOndeEstaoOsJogadores() {
    Vector<Double> retVal = new Vector<Double>();
    Vec2[] oponentes = abstract_robot.getOpponents(currTime);
    Vec2[] companheiros = abstract_robot.getTeammates(currTime);
    Vec2 golAdver = abstract_robot.getOpponentsGoal(currTime);
    Vec2 golMeu = abstract_robot.getOurGoal(currTime);
    Vec2[] todosJogadores = new Vec2[oponentes.length + companheiros.length + 1];
    trocaSinalX(golAdver);
    trocaSinalX(golMeu);
    // adiciona oponenentes e companheiros a oponenECompan
    for (int i = 0; i < oponentes.length; i++) {
        todosJogadores[i] = oponentes[i];
        trocaSinalX(todosJogadores[i]);
    }
    for (int i = 0; i < companheiros.length; i++) {
        todosJogadores[i + oponentes.length] = companheiros[i];
        trocaSinalX(todosJogadores[i + oponentes.length]);
    }
    // adiciona a minha posi��o em rela��o a mim mesmo (0,0) ao fim do array
    todosJogadores[oponentes.length + companheiros.length] = new Vec2(0, 0);
    // tamanho do campo;
    double deltaX = golAdver.x - golMeu.x;
    // aproximado
    double deltaY = TAM_CAMPO_Y;
    // e somando 0.8 ao componente y
    for (int i = 0; i < todosJogadores.length; i++) {
        Vec2 temp = (Vec2) golAdver.clone();
        temp.sub(todosJogadores[i]);
        // o abs � para acochambar no caso de deltaY for menor que o necess�rio
        // 
        temp.sety(Math.abs(temp.y + deltaY / 2));
        todosJogadores[i] = temp;
    }
    // x e em y onde aponta o vetor
    for (int i = 0; i < todosJogadores.length; i++) {
        double tempY = (double) ((long) ((todosJogadores[i].y) / (deltaY / NUM_BLOCOS_Y)));
        double tempX = (double) ((long) ((todosJogadores[i].x) / (deltaX / NUM_BLOCOS_X)));
        // centraliza valores em 0;
        tempX = tempX - (double) ((long) (NUM_BLOCOS_X / 2) / 100);
        tempY = tempY - (double) ((long) (NUM_BLOCOS_Y / 2) / 100);
        // retorna valor em X seguido de valor em Y
        retVal.add(tempX);
        retVal.add(tempY);
        if (i == (todosJogadores.length - 1))
            abstract_robot.setDisplayString("x=" + String.valueOf(tempX) + ", y=" + String.valueOf(tempY));
    }
    return retVal;
}
