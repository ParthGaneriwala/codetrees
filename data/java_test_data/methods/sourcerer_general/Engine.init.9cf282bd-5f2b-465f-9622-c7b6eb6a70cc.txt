public Cell init(boolean multiplayer) {
    if (timer_thread != null) {
        timer_thread.interrupt();
        moves_threads.get(LOCAL_ID1).interrupt();
        moves_threads.get(LOCAL_ID2).interrupt();
    }
    try {
        current_map = BoardParser.parseLevel(current_level);
    } catch (Exception e) {
        throw new RuntimeException("first board load failed; can't recover");
    }
    /* these two lines are kind of a hack for non-networked play; in the
	 * eventual server that this engine will become, this till have to be
	 * done more carefully, but since we only have two players, it's not a
	 * big deal.
	 */
    Player player_one = new Player(current_map.getPlayerPositions().get(LOCAL_ID1), 0);
    Player player_two = new Player(current_map.getPlayerPositions().get(LOCAL_ID2), 1);
    chips_left = current_map.getMaxChip();
    time_left = current_map.getMaxTime();
    player_list.put(LOCAL_ID1, player_one);
    player_list.put(LOCAL_ID2, player_two);
    int id1 = player_one.getID();
    int id2 = player_two.getID();
    queues.put(id1, new LinkedList<Types.Direct>());
    queues.put(id2, new LinkedList<Types.Direct>());
    moves_threads.put(id1, new Thread(new EngineProcessor(id1)));
    moves_threads.put(id2, new Thread(new EngineProcessor(id2)));
    moves_threads.get(id1).start();
    if (multiplayer)
        moves_threads.get(id2).start();
    timer_thread = new Thread(new Timer());
    timer_thread.start();
    if (multiplayer)
        return new Cell(id1, id2);
    return new Cell(id1, id1);
}
