public void doFilter(ServletRequest pRequest, ServletResponse pResponse, FilterChain pChain) throws IOException, ServletException {
    String code = pRequest.getParameter(CODE_PARAM);
    LOGGER.info("CODE : " + code);
    HttpServletResponse response = (HttpServletResponse) pResponse;
    if (code != null && code.length() > 0) {
        StringBuilder builder = new StringBuilder(FACEBOOK_REDIRECT_URL);
        builder.append(QUESTION_MARK);
        builder.append(CLIENT_ID_PARAM);
        builder.append(EQUAL_SIGN);
        builder.append(CLIENT_ID);
        builder.append(AMPERSAND_SIGN);
        builder.append(REDIRECT_URL_PARAM);
        builder.append(EQUAL_SIGN);
        builder.append(URLEncoder.encode(REDIRECT_URL, "UTF-8"));
        builder.append(AMPERSAND_SIGN);
        builder.append(CLIENT_SECRET_PARAM);
        builder.append(EQUAL_SIGN);
        builder.append(CLIENT_SECRET);
        builder.append(AMPERSAND_SIGN);
        builder.append(CODE_PARAM);
        builder.append(EQUAL_SIGN);
        builder.append(URLEncoder.encode(code, "UTF-8"));
        String url = builder.toString();
        HTTPRequest httpRequest = new HTTPRequest(new URL(url), HTTPMethod.GET);
        HTTPResponse httpResponse = URLFetchServiceFactory.getURLFetchService().fetch(httpRequest);
        String accessMap = new String(httpResponse.getContent());
        StringTokenizer tokenizer = new StringTokenizer(accessMap, "&");
        String accessTokenMap = tokenizer.nextToken();
        // String expiresMap = tokenizer.nextToken();
        StringTokenizer accessTokenKeyMap = new StringTokenizer(accessTokenMap, "=");
        String accessTokenKey = accessTokenKeyMap.nextToken();
        String accessToken = accessTokenKeyMap.nextToken();
        LOGGER.info("ACCESS TOKEN : " + accessMap);
        if (!accessTokenKey.equals(ACCESS_TOKEN_PARAM)) {
            LOGGER.error("Invalid access token response!");
            return;
        }
        HttpServletRequest request = (HttpServletRequest) pRequest;
        // StringTokenizer expiresKeyMap = new StringTokenizer(expiresMap,"=");
        // String expiresKey = expiresKeyMap.nextToken();
        // String expires = expiresKeyMap.nextToken();
        request.getSession().setAttribute(ACCESS_TOKEN_PARAM, accessToken);
        // request.getSession().setMaxInactiveInterval(Integer.parseInt(expires));
        LOGGER.info("ACCESS TOKEN : " + accessToken);
        response.sendRedirect(SUCCESS_REDIRECT_URL);
        return;
    }
    String accessToken = pRequest.getParameter(ACCESS_TOKEN_PARAM);
    LOGGER.info("Access Token : " + accessToken);
    response.sendRedirect(SUCCESS_REDIRECT_URL);
}
