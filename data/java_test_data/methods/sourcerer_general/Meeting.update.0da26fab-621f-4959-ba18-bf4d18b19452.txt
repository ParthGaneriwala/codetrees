public int update(Connection db) throws SQLException {
    int resultCount = 0;
    boolean commit = db.getAutoCommit();
    try {
        if (commit) {
            db.setAutoCommit(false);
        }
        if (this.getId() == -1) {
            throw new SQLException("ID was not specified");
        }
        if (!isValid()) {
            return -1;
        }
        int i = 0;
        String sql = "UPDATE project_calendar_meeting " + "SET title = ?, " + "location = ?, end_date = ?, start_date = ?, is_tentative = ?, " + "modifiedby = ?, modified = CURRENT_TIMESTAMP, by_invitation_only = ?, " + "is_dimdim = ?, is_webcast = ?, dimdim_meetingid = ? ";
        if (description != null) {
            sql += ", description = ? ";
        }
        if (dimdimUrl != null) {
            sql += ", dimdim_url = ? ";
        }
        if (dimdimUsername != null) {
            sql += ", dimdim_username = ? ";
        }
        if (dimdimPassword != null) {
            sql += ", dimdim_password = ? ";
        }
        if (getDimdimMeetingKey() != null) {
            sql += ", dimdim_meeting_key = ? ";
        }
        sql += "WHERE meeting_id = ? AND modified = ?";
        PreparedStatement pst = db.prepareStatement(sql);
        pst.setString(++i, title);
        pst.setString(++i, location);
        pst.setTimestamp(++i, endDate);
        pst.setTimestamp(++i, startDate);
        pst.setBoolean(++i, isTentative);
        pst.setInt(++i, this.getModifiedBy());
        pst.setBoolean(++i, byInvitationOnly);
        pst.setBoolean(++i, isDimdim);
        pst.setBoolean(++i, isWebcast);
        pst.setString(++i, dimdimMeetingId);
        if (description != null) {
            pst.setString(++i, description);
        }
        if (dimdimUrl != null) {
            pst.setString(++i, dimdimUrl);
        }
        if (dimdimUsername != null) {
            pst.setString(++i, dimdimUsername);
        }
        if (dimdimPassword != null) {
            pst.setString(++i, DimDimUtils.encryptData(dimdimPassword));
        }
        if (dimdimMeetingKey != null) {
            pst.setString(++i, dimdimMeetingKey);
        }
        pst.setInt(++i, id);
        pst.setTimestamp(++i, modified);
        resultCount = pst.executeUpdate();
        pst.close();
        if (commit) {
            db.commit();
        }
    } catch (SQLException e) {
        if (commit) {
            db.rollback();
        }
        throw new SQLException(e.getMessage());
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
    return resultCount;
}
