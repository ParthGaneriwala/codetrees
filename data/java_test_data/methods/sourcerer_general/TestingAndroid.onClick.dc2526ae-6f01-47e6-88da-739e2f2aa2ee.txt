public void onClick(View view) {
    if (view == home) {
        // mapControl.centerMapTo(point, false);
        String reply = mConnection.rpcCall("direction 40 -105.26");
        String[] replyArr = reply.split("//");
        String[] coOrds = replyArr[0].split(",");
        Point point = new Point((int) (Double.parseDouble(coOrds[0]) * 1000000), (int) (Double.parseDouble(coOrds[1]) * 1000000));
        showMessage("Nearest stop is at " + replyArr[2] + " which is " + replyArr[1] + " miles from where you are. The Dash will arrive at this location in 12 minutes.");
        mapControl.centerMapTo(point, true);
        mapControl.zoomTo(18);
    }
    if (view == work) {
        // mapControl.centerMapTo(point, false);
        String reply = mConnection.rpcCall("direction 40.0002 -105.0");
        String[] replyArr = reply.split("//");
        String[] coOrds = replyArr[0].split(",");
        Point point = new Point((int) (Double.parseDouble(coOrds[0]) * 1000000), (int) (Double.parseDouble(coOrds[1]) * 1000000));
        showMessage("Nearest stop is at " + replyArr[2] + " which is " + replyArr[1] + " miles from where you are. The Hop will arrive at this location in 6 minutes.");
        mapControl.centerMapTo(point, true);
        mapControl.zoomTo(18);
    }
    if (view == school) {
        // mapControl.centerMapTo(point, false);
        String reply = mConnection.rpcCall("direction 40.008897 -105.266872");
        String[] replyArr = reply.split("//");
        String[] coOrds = replyArr[0].split(",");
        Point point = new Point((int) (Double.parseDouble(coOrds[0]) * 1000000), (int) (Double.parseDouble(coOrds[1]) * 1000000));
        showMessage("Nearest stop is at " + replyArr[2] + " which is " + replyArr[1] + " miles from where you are. The Dash will arrive at this location in 8 minutes.");
        mapControl.centerMapTo(point, true);
        mapControl.zoomTo(18);
    }
}
