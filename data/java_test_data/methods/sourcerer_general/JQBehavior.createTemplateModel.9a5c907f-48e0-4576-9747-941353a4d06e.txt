// Protected methods ------------------------------------------------------
protected Map<String, Object> createTemplateModel(Page page, Control source, Context context) {
    Map<String, Object> templateModel = new HashMap<String, Object>(getModel());
    String localEventType = getEventType();
    boolean bindableEvent = JQEvent.isBindableEvent(localEventType);
    if (bindableEvent) {
        addModel(templateModel, "event", localEventType, page, context);
    }
    String localCssSelector = getCssSelector();
    if (localCssSelector == null) {
        localCssSelector = ClickUtils.getCssSelector(source);
        if (localCssSelector == null) {
            throw new IllegalStateException("Control {" + source.getClass().getSimpleName() + ":" + source.getName() + "} has no css selector defined. Either set a proper CSS" + " selector or set JQBehavior.setSkipSetup(true).");
        }
    }
    addModel(templateModel, "context", context.getRequest().getContextPath(), page, context);
    addModel(templateModel, "cssSelector", localCssSelector, page, context);
    String localBusyIndicatorMessage = getBusyIndicatorMessage();
    // If set, add message to options
    if (localBusyIndicatorMessage != null) {
        getBusyIndicatorOptions().put("message", localBusyIndicatorMessage);
    }
    if (!isShowBusyIndicator()) {
        addModel(templateModel, "showBusyIndicator", false, page, context);
    }
    if (hasBusyIndicatorOptions()) {
        addModel(templateModel, "busyIndicatorOptions", getBusyIndicatorOptions(), page, context);
    }
    if (getBusyIndicatorTarget() != null) {
        addModel(templateModel, "busyIndicatorTarget", getBusyIndicatorTarget(), page, context);
    }
    String localUrl = getUrl();
    if (localUrl != null) {
        addModel(templateModel, "url", localUrl, page, context);
    }
    if (!"GET".equals(getType())) {
        addModel(templateModel, "type", getType(), page, context);
    }
    if (getDelay() > 0) {
        addModel(templateModel, "delay", getDelay(), page, context);
    }
    if (getTimeout() != 20000) {
        addModel(templateModel, "timeout", getTimeout(), page, context);
    }
    if (getTimeoutRetryLimit() != 3) {
        addModel(templateModel, "timeoutRetryLimit", getTimeoutRetryLimit(), page, context);
    }
    if (hasData()) {
        addModel(templateModel, "data", serialize(getData()), page, context);
    }
    return templateModel;
}
