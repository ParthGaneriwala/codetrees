private void checkAssociations(Node parentNode) throws Exception {
    System.out.println("BEGIN - " + this.getClass().getName() + " - " + new Exception().getStackTrace()[0].getMethodName());
    System.out.println("  node = " + getAttributeValue(Constants.PROP_NAME));
    if (parentNode != null) {
        Reference currNodeReference = parentNode.getReference();
        // Association association = new Association(Constants.createQNameString(NAMESPACE_CUSTOM_MODEL, "ep_linguistic_version_of"), AssociationDirectionEnum.source);
        String assocQName = CMSAlfHelper.getAttrQName("ep_linguistic_version_of");
        System.out.println(" " + assocQName + " - target");
        Association association = new Association(assocQName, "target");
        QueryResult nodeChildren = WebServiceFactory.getRepositoryService().queryAssociated(currNodeReference, association);
        if (nodeChildren != null)
            System.out.println("  count = " + nodeChildren.getResultSet().getTotalRowCount());
        // TEST1
        assocQName = CMSAlfHelper.getAttrQName("ep_linguistic_version_of");
        System.out.println(" " + assocQName + " - source");
        association = new Association(assocQName, "source");
        nodeChildren = WebServiceFactory.getRepositoryService().queryAssociated(currNodeReference, association);
        if (nodeChildren != null)
            System.out.println("  count = " + nodeChildren.getResultSet().getTotalRowCount());
        // TEST2
        assocQName = "ep:ep_linguistic_version_of";
        System.out.println(" " + assocQName + " - target");
        association = new Association(assocQName, "target");
        nodeChildren = WebServiceFactory.getRepositoryService().queryAssociated(currNodeReference, association);
        if (nodeChildren != null)
            System.out.println("  count = " + nodeChildren.getResultSet().getTotalRowCount());
        // TEST3
        assocQName = "ep:ep_linguistic_version_of";
        System.out.println(" " + assocQName + " - source");
        association = new Association(assocQName, "source");
        nodeChildren = WebServiceFactory.getRepositoryService().queryAssociated(currNodeReference, association);
        if (nodeChildren != null)
            System.out.println("  count = " + nodeChildren.getResultSet().getTotalRowCount());
        // ASSOC_CONTAINS
        // TEST 4
        assocQName = Constants.ASSOC_CONTAINS;
        System.out.println(" " + assocQName + " - target");
        association = new Association(assocQName, "target");
        nodeChildren = WebServiceFactory.getRepositoryService().queryAssociated(currNodeReference, association);
        if (nodeChildren != null)
            System.out.println("  count = " + nodeChildren.getResultSet().getTotalRowCount());
        // TEST 5
        assocQName = Constants.ASSOC_CONTAINS;
        System.out.println(" " + assocQName + " - source");
        association = new Association(assocQName, "source");
        nodeChildren = WebServiceFactory.getRepositoryService().queryAssociated(currNodeReference, association);
        if (nodeChildren != null)
            System.out.println("  count = " + nodeChildren.getResultSet().getTotalRowCount());
        // ASSOC_CHILDREN
        // TEST 6
        assocQName = Constants.ASSOC_CHILDREN;
        System.out.println(" " + assocQName + " - source");
        association = new Association(assocQName, "source");
        nodeChildren = WebServiceFactory.getRepositoryService().queryAssociated(currNodeReference, association);
        if (nodeChildren != null)
            System.out.println("  count = " + nodeChildren.getResultSet().getTotalRowCount());
        // TEST 7
        assocQName = Constants.ASSOC_CHILDREN;
        System.out.println(" " + assocQName + " - target");
        association = new Association(assocQName, "target");
        nodeChildren = WebServiceFactory.getRepositoryService().queryAssociated(currNodeReference, association);
        if (nodeChildren != null)
            System.out.println("  count = " + nodeChildren.getResultSet().getTotalRowCount());
        // queryChildren and queryPArents
        // TEST 8
        System.out.println(" queryChildren");
        nodeChildren = WebServiceFactory.getRepositoryService().queryChildren(currNodeReference);
        if (nodeChildren != null)
            System.out.println("  count = " + nodeChildren.getResultSet().getTotalRowCount());
        // TEST 9
        System.out.println(" queryParents");
        nodeChildren = WebServiceFactory.getRepositoryService().queryParents(currNodeReference);
        if (nodeChildren != null)
            System.out.println("  count = " + nodeChildren.getResultSet().getTotalRowCount());
    }
    System.out.println("END   - " + this.getClass().getName() + " - " + new Exception().getStackTrace()[0].getMethodName());
}
