protected void onListItemClick(ListView l, View v, int position, long id) {
    String tag = "onListItemClick";
    int selectionRowID = (int) id;
    String selectedFileString = this.mDirectoryList.get(selectionRowID).getText();
    if (selectedFileString.equals(getString(R.string.current_dir))) {
        // Refresh
        this.browseToWhere(this.mCurrentDirectory);
    } else if (selectedFileString.equals(getString(R.string.up_one_level))) {
        this.upOneLevel();
    } else {
        File file = null;
        switch(this.mDisplayMode) {
            case RELATIVE:
                file = new File(this.mCurrentDirectory.getAbsolutePath() + this.mDirectoryList.get(selectionRowID).getText());
                String filePath = file.getAbsolutePath();
                if (file.isFile()) {
                    // is a image
                    if (checkEnds(filePath, getResources().getStringArray(R.array.imageEnds))) {
                        setProgressBarIndeterminateVisibility(false);
                        // startup the picture browser
                        Intent i = new Intent(this, PictureBrowser.class);
                        i.putExtra(Constant.FILE_PATH_KEY, filePath);
                        startActivity(i);
                        setProgressBarIndeterminateVisibility(true);
                    }
                    // is a html or htm
                    if (checkEnds(filePath, getResources().getStringArray(R.array.htmlEnds))) {
                        setProgressBarIndeterminateVisibility(false);
                        Intent i = new Intent(this, HtmlBrowser.class);
                        i.putExtra(Constant.FILE_PATH_KEY, filePath);
                        startActivity(i);
                        setProgressBarIndeterminateVisibility(true);
                    }
                    // is a txt
                    if (checkEnds(filePath, getResources().getStringArray(R.array.textEnds))) {
                        setProgressBarIndeterminateVisibility(false);
                        mHelper = new CRDBHelper(this);
                        Book b = new Book();
                        b.setBookPath(filePath);
                        Log.d(tag, "book path is :" + b.getBookPath());
                        Constant.BOOK_ID_IN_DATABASE = mHelper.saveBook(b);
                        mHelper.close();
                        Intent i = new Intent();
                        i.putExtra(Constant.FILE_PATH_KEY, filePath);
                        // i.setClass(getApplicationContext(), TxtActivity.class);
                        i.setClass(getApplicationContext(), CustomViewActivity.class);
                        startActivity(i);
                        setProgressBarIndeterminateVisibility(true);
                    // this.finish();
                    }
                    // UMD[start]; is a UMD; by mingkg21
                    if (checkEnds(filePath, getResources().getStringArray(R.array.umdEnds))) {
                        setProgressBarIndeterminateVisibility(false);
                        Intent i = new Intent();
                        i.putExtra(Constant.FILE_PATH_KEY, filePath);
                        i.setClass(getApplicationContext(), UMDBrowser.class);
                        startActivity(i);
                        setProgressBarIndeterminateVisibility(true);
                    }
                // UMD[end]
                }
                break;
            case ABSOLUTE:
                file = new File(this.mDirectoryList.get(selectionRowID).getText());
                Constant.FILE_PATH = file.getAbsolutePath();
                if (file.isFile()) {
                    // is a image
                    if (checkEnds(Constant.FILE_PATH, getResources().getStringArray(R.array.imageEnds))) {
                        setProgressBarIndeterminateVisibility(false);
                        // startup the picture browser
                        Intent i = new Intent(this, PictureBrowser.class);
                        startActivity(i);
                        setProgressBarIndeterminateVisibility(true);
                    }
                    // is a html or htm
                    if (checkEnds(Constant.FILE_PATH, getResources().getStringArray(R.array.htmlEnds))) {
                        setProgressBarIndeterminateVisibility(false);
                        Intent i = new Intent(this, HtmlBrowser.class);
                        startActivity(i);
                        setProgressBarIndeterminateVisibility(true);
                    }
                    // is a txt
                    if (checkEnds(Constant.FILE_PATH, getResources().getStringArray(R.array.textEnds))) {
                        setProgressBarIndeterminateVisibility(false);
                        mHelper = new CRDBHelper(this);
                        Book b = new Book();
                        b.setBookPath(Constant.FILE_PATH);
                        Log.d(tag, "book path is :" + b.getBookPath());
                        Constant.BOOK_ID_IN_DATABASE = mHelper.saveBook(b);
                        mHelper.close();
                        Intent i = new Intent();
                        // i.setClass(getApplicationContext(), TxtActivity.class);
                        i.setClass(getApplicationContext(), CustomViewActivity.class);
                        startActivity(i);
                        setProgressBarIndeterminateVisibility(true);
                    // this.finish();
                    }
                    // UMD[start]; is a UMD; by mingkg21
                    if (checkEnds(Constant.FILE_PATH, getResources().getStringArray(R.array.umdEnds))) {
                        setProgressBarIndeterminateVisibility(false);
                        Intent i = new Intent();
                        i.setClass(getApplicationContext(), UMDBrowser.class);
                        startActivity(i);
                        setProgressBarIndeterminateVisibility(true);
                    }
                // UMD[end]
                }
                break;
        }
        if (file != null)
            this.browseToWhere(file);
    }
}
