// -----------------------------------------------------------------
public void run() {
    CMM.AddLogEntry("Mentor", "Info - Started a new Mentor thread.");
    CMM.AddLogEntry("Mentor", "Info - Begining to send Task entries from the snapshot Task database to the Cluster.");
    while (!TaskDB.isEmpty()) {
        // Get the task with the minimum TaskID from the DB
        Integer MinTaskID = TaskDB.firstKey();
        TaskEntry Entry = TaskDB.get(MinTaskID);
        // Put the Task entry into a data package to be sent to the Cluster
        TaskTrainingData Data = new TaskTrainingData();
        Data.setTraineeName(TraineeName);
        Data.setTrainedTaskID(MinTaskID);
        Data.setTrainedTaskEntry(Entry);
        // Create a message to be sent to the cluster with this task
        ClusterMessage_TrainingUpdateTask msg = new ClusterMessage_TrainingUpdateTask();
        msg.setTaskID(TrainingTaskID);
        msg.setData(Data);
        // If going to send this Training session as a "Training Update Message"
        if (MinTaskID.equals(TrainingTaskID)) {
            // remove it from the Mentor Task database and skip it
            TaskDB.remove(MinTaskID);
            continue;
        // This happens if a Training session Migrates between Machines.
        }
        if (InteractiveTrainingMode)
            WaitForEnter("Press Enter to send \"Training Update Message\" of TaskID=" + MinTaskID + " to Machine " + TraineeName);
        CMM.AddLogEntry("Mentor", "Info - Sending training message to Trainee \"" + TraineeName + "\" of TaskID " + MinTaskID);
        try {
            // Send the message to the Cluster
            CMM.SendTrainingMsg(msg);
        } catch (CMMExn_ClusterErr e) {
            // TODO remove print stack
            e.printStackTrace();
            CMM.AddLogEntry("Mentor", "Error - Failed to send the training message to the cluster.");
            return;
        }
        // remove the Task entry from the database
        TaskDB.remove(MinTaskID);
    }
    // Finished mentoring the Trainee
    CMM.AddLogEntry("Mentor", "Info - Finished tranfering the Task database to the Trainee \"" + TraineeName + "\"");
    // Create a training session terminating message
    ClusterMessage_TrainingTerminateTask msg = new ClusterMessage_TrainingTerminateTask();
    msg.setTaskID(TrainingTaskID);
    msg.setTraineeName(TraineeName);
    CMM.AddLogEntry("Mentor", "Info - Sending training session termination message to Trainee \"" + TraineeName + "\". Session TaskID is " + TrainingTaskID);
    try {
        CMM.SendTrainingMsg(msg);
    } catch (CMMExn_ClusterErr e) {
        // TODO remove print stack
        e.printStackTrace();
        CMM.AddLogEntry("Mentor", "Error - Failed to send the training message to the cluster.");
    }
}
