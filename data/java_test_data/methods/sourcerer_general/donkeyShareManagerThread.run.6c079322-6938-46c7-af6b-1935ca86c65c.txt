public void run() {
    System.out.println("Share Manager Thread started...");
    dInfo.setDSMT(this);
    Thread.currentThread().setName("ShareManager");
    while (!dInfo.doShutdown()) {
        ds.clear();
        try {
            String fileName = null;
            BufferedReader in = new BufferedReader(new FileReader("sharelist.txt"));
            while (true) {
                fileName = in.readLine();
                if (fileName == null)
                    break;
                if (ds.addShare(fileName))
                    System.out.println("Share added: \"" + fileName + "\"");
            }
        } catch (IOException io) {
            System.out.println("sSMT Error: " + io.toString());
        }
        Vector fileList = ds.getSharedFiles();
        for (int i = 0; i < fileList.size(); i++) {
            donkeySharedFile actFile = (donkeySharedFile) fileList.get(i);
            if (!actFile.isHashed())
                actFile.hash();
        }
        System.out.println("dSMT: all files hashed.");
        donkeyServerConnection dsc = dInfo.getServer();
        if (dsc != null)
            if (dsc.isConnected()) {
                System.out.println("dSMT: Sending file list to server.");
                dsc.addOutPacket(CreateDonkeyPacket.fileOffer(ds));
            }
        System.out.println("dSMT: waiting.");
        try {
            while (inActive && (!dInfo.doShutdown())) {
                Thread.currentThread().sleep(100);
                Iterator it = ds.getSharedFiles().iterator();
                while (it.hasNext()) {
                    donkeySharedFile dsf = (donkeySharedFile) it.next();
                    if (dsf.isHashed() == false) {
                        dsf.hash();
                    }
                }
            }
        } catch (InterruptedException ie) {
        }
        System.out.println("dSMT: resumeing...");
        inActive = true;
    }
}
