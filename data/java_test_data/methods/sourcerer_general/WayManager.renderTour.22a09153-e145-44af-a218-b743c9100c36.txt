public void renderTour(Canvas g) {
    TourPackage pkg = TourManager.getInstance().currentTour;
    if (pkg == null)
        return;
    // mStart the first tourlet's step
    // (The steps should all be double linked)
    Tourlet tourlet = pkg.tourlets.get(0);
    Step step = tourlet.steps.get(0);
    firstInView = null;
    lastInView = null;
    // Draw the main segments
    mWayCount = 0;
    while (step != null) {
        if (MapManager.getInstance().inView(step.getX(), step.getY())) {
            if (firstInView == null) {
                firstInView = step;
            }
            lastInView = step;
            if (step.getNext() != null) {
                renderTourSegment(g, step, step.getNext());
                mWayCount++;
            } else {
                renderTourTerminal(g, step);
            }
        }
        step = step.getNext();
    }
    // Draw the trailing edge
    if (lastInView != null && lastInView.getNext() != null) {
        renderTourSegment(g, lastInView, lastInView.getNext());
        mWayCount++;
    }
    // need to transform them to the rotated tile space.
    if (mWayCount != 0) {
        int selected = mCycle % mWayCount;
        int count = 0;
        for (int i = 0; i < mWayCount; i++) {
            Step way = mWayPointers.get(i);
            if (selected == count) {
                // white smoke(245,245,245)
                mOnStepBrush.setColor(Color.argb(255, 245, 245, 245));
                mOnStepBrush.setStyle(Style.FILL_AND_STROKE);
                mOnStepBrush.setAntiAlias(true);
                mPointerBrush.set(mOnStepBrush);
            } else {
                // violet blue(138,43,226)
                mOffStepBrush.setColor(Color.argb(255, 138, 43, 226));
                mOffStepBrush.setStyle(Style.FILL_AND_STROKE);
                mOffStepBrush.setAntiAlias(true);
                mPointerBrush.set(mOffStepBrush);
            }
            renderPointer(g, way.getX(), way.getY(), way.getBearing());
            count++;
        }
    }
// mWayPointers.clear();
}
