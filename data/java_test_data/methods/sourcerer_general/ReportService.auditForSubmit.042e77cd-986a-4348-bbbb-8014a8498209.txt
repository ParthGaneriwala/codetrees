public List auditForSubmit(String transactionid, HttpServletRequest request) {
    List list = new ArrayList();
    int i = 1;
    // Integer transactionid = Integer.valueOf(stransactionid);
    StrutsAction action = new StrutsAction();
    StnjWebService coverService = (StnjWebService) action.getBean(request, "stnjWebService");
    if (coverService.getCoverByTransactionid(transactionid) == null) {
        System.out.println("transactionid=" + transactionid);
        ItemInfo item = new ItemInfo();
        item.setItemIndex(i);
        item.setItemName("StnjCover");
        item.setItemContent("报告书封面没有填写完成，请认真按照系统提示填写！");
        list.add(item);
        i++;
    }
    BasicInfoService basicInfoService = (BasicInfoService) action.getBean(request, "basicInfoService");
    StnjBasicInfo basicInfo = basicInfoService.getBasicInfoByTransactionid(transactionid);
    if (basicInfo == null) {
        ItemInfo item = new ItemInfo();
        item.setItemIndex(i);
        item.setItemName("StnjBasicInfo");
        item.setItemContent("报告书的第一部分基本信息没有填写完成，请认真按照系统提示填写！");
        i++;
        list.add(item);
        return list;
    }
    InnerInfoService innerService = (InnerInfoService) action.getBean(request, "innerInfoService");
    if (innerService.getInnerInfoByTransactionid(transactionid) == null) {
        ItemInfo item = new ItemInfo();
        item.setItemIndex(i);
        item.setItemName("StnjInnerInfo");
        item.setItemContent("报告书的第二部分内部建设情况没有填写完成，请认真按照系统提示填写！");
        list.add(item);
        i++;
    }
    /*
		BranchInfoService branchService =(BranchInfoService) action. getBean(request,"branchInfoService");
				
		List branchList = branchService.findBranchInfoByTransactionid(transactionid);
		System.out.println("\n-----------branchList="+branchList.size());
		System.out.println("\n-----------basic="+(basicInfo.getInsBranchNu()+basicInfo.getInsDelegateNu()));
		Integer basicBranchSize = (basicInfo.getInsBranchNu()+basicInfo.getInsDelegateNu());
		Integer size = Integer.valueOf(list.size());
		
		if(basicBranchSize == size){
			ItemInfo item = new ItemInfo();
			item.setItemIndex(i);
			item.setItemName("branchInfo");
			item.setItemContent("报告书的第一部分内的分支代表机构的合与第二部分内部建设情况中的分支代表机构数量不一致，请认真按照系统提示填写！");
			list.add(item);
			i++;
			
		}
		*/
    MonitorInfoService monitorService = (MonitorInfoService) action.getBean(request, "monitorInfoService");
    if (monitorService.getMonitorInfoByTransactionid(transactionid) == null) {
        ItemInfo item = new ItemInfo();
        item.setItemIndex(i);
        item.setItemName("StnjMonitorInfo");
        item.setItemContent("报告书的第三部分接受监督管理情况没有填写完成，请认真按照系统提示填写！");
        list.add(item);
        i++;
    }
    FinanceBalanceSheetInfoService bsservice = (FinanceBalanceSheetInfoService) action.getBean(request, "financeBalanceSheetInfoService");
    ;
    if (bsservice.getFinanceBalanceSheetInfoByTransactionid(transactionid) == null) {
        ItemInfo item = new ItemInfo();
        item.setItemIndex(i);
        item.setItemName("FinanceBalanceSheetInfo");
        item.setItemContent("报告书的第四部分财务会计报告中的资产负债表没有填写完成，请认真按照系统提示填写！");
        list.add(item);
        i++;
    }
    FinanceActivitySheetInfoService asservice = (FinanceActivitySheetInfoService) action.getBean(request, "financeActivitySheetInfoService");
    if (asservice.getFinanceActivitySheetInfoByTransactionid(transactionid) == null) {
        ItemInfo item = new ItemInfo();
        item.setItemIndex(i);
        item.setItemName("FinanceActivitySheetInfo");
        item.setItemContent("报告书的第四部分财务会计报告中的业务活动表没有填写完成，请认真按照系统提示填写！");
        list.add(item);
        i++;
    }
    FinanceCashSheetInfoService csservice = (FinanceCashSheetInfoService) action.getBean(request, "financeCashSheetInfoService");
    if (csservice.getFinanceCashSheetInfoByTransactionid(transactionid) == null) {
        ItemInfo item = new ItemInfo();
        item.setItemIndex(i);
        item.setItemName("StnjMonitorInfo");
        item.setItemContent("报告书的第四部分财务会计报告中的现金流量表没有填写完成，请认真按照系统提示填写！");
        list.add(item);
        i++;
    }
    return list;
// return activityInfoDao.loadActivityInfoByTransactionid(transactionid);
}
