private void convertRuleActions(PrintWriter writer) throws IOException, JeopsException {
    // The number of opened brackets.
    int bracketCount = 1;
    token = readNextToken();
    writer.println();
    writer.println("    /**");
    writer.println("     * Executes the action part of the rule " + ruleName);
    writer.println("     */");
    writer.print("    private void " + ruleName + "() {");
    while (bracketCount > 0) {
        String lex = token.getLexeme();
        String converted = lex;
        Object map = null;
        if (token.getTokenType() == IDENT && scanner.getLastNonWhiteSpaceToken().getTokenType() != DOT) {
            int indDecl = ruleDeclarations.indexOf(lex);
            if (indDecl != -1) {
                converted = (String) convertedRuleDeclarations.elementAt(indDecl);
            } else {
                int indLocalDecl = ruleLocalDeclarations.indexOf(lex);
                if (indLocalDecl != -1) {
                    converted = (String) convertedRuleLocalDeclarations.elementAt(indLocalDecl);
                }
            }
        }
        writer.print(converted);
        token = readNextToken();
        if (token.getTokenType() == EOF) {
            String message = "EOF unexpected at line " + scanner.getCurrentLine() + ", column " + scanner.getCurrentColumn();
            throw new EOFException(message);
        } else if (token.getTokenType() == CLOSE_CURLY_BRACKET) {
            bracketCount--;
        } else if (token.getTokenType() == OPEN_CURLY_BRACKET) {
            bracketCount++;
        }
    }
    writer.println("    }");
    writer.println();
}
