public Map<String, Integer> getAllMovies(int topLimit, int bottomLimit) {
    ResultSet set = null;
    int tempMovieId;
    String tempMovieName;
    Map<String, Integer> moviesMap = null;
    PreparedStatement pstmt = null;
    Connection conn = null;
    // creating the generic statement that contains the table and field
    // names
    String genericStr = String.format(SELECT_GENERIC_ORDERED_STMT, "*", DBTablesEnum.MOVIES, DBFieldsEnum.MOVIES_MOVIE_ID);
    // creating the prepared statement template including the ROWNUM limits
    // for the SELECT
    String pstmtStr = String.format(LIMIT_RESULTS_PSTMT, genericStr, bottomLimit, topLimit);
    System.out.println("getting " + (bottomLimit - topLimit + 1) + " movies from the DB");
    System.out.println(pstmtStr);
    try {
        conn = pool.getConnection();
        if (conn == null)
            return null;
        pstmt = conn.prepareStatement(pstmtStr);
        set = pstmt.executeQuery();
        set.setFetchSize(RESULTS_FETCH_SIZE);
        moviesMap = new HashMap<String, Integer>();
        // movie name to the map for comparison
        while (set.next()) {
            // retrieving the different fields
            tempMovieId = set.getInt(DBFieldsEnum.MOVIES_MOVIE_ID.getFieldName());
            tempMovieName = set.getString(DBFieldsEnum.MOVIES_TEMP_MOVIE_NAME.getFieldName());
            moviesMap.put(tempMovieName, tempMovieId);
        }
        set.close();
        pstmt.close();
    } catch (SQLException e) {
        System.out.println(e.getMessage());
    } catch (NullPointerException e) {
        System.out.println("Null pointer in searchMovies");
    }
    System.out.println("finished getting " + (bottomLimit - topLimit + 1) + " movies from the DB");
    pool.returnConnection(conn);
    return moviesMap;
}
