public ActionForward initCoupon(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    if (!isLoggedIn(request)) {
        return mapping.findForward(ForwardConstants.INDEX);
    }
    // calculatePrice(form, request);
    // Call to ensure that the user container has been created
    SessionContainer sessionContainer = getSessionContainer(request);
    Customer customer = sessionContainer.getCustomer();
    List<Item> items = sessionContainer.getCart().getItems();
    List<Item> printPhotosItems = sessionContainer.getCart().getPrintPhotosItems();
    if (items.size() == 0 && printPhotosItems.size() == 0) {
        ActionMessages errors = new ActionMessages();
        ActionMessage msg = new ActionMessage(MessageUtil.getMessage("errors.empty.cart"), false);
        errors.add("emptycode", msg);
        saveMessages(request, errors);
        request.setAttribute("type", "1");
        // request.setAttribute("expectedMethod", "1");
        return mapping.findForward("GWC");
    }
    Set<Coupon> couponsUsedSet = new HashSet<Coupon>();
    List<Coupon> coupons = couponService.findByCustomerId(customer.getId());
    // 礼品赠送
    for (Coupon coupon : coupons) {
        if ("gift".equals(coupon.getType())) {
            couponsUsedSet.add(coupon);
        }
    }
    // 产品优惠
    boolean bool = false;
    boolean boolphoto = false;
    for (Item item : items) {
        for (Coupon coupon : coupons) {
            if (!"gift".equals(coupon.getType()) && coupon.getProduct().getId().intValue() == item.getProduct().getId().intValue()) {
                if (coupon.getProduct().getId().intValue() == 302 && coupon.getStatus() == false) {
                    if (bool == false) {
                        couponsUsedSet.add(coupon);
                        bool = true;
                    }
                } else {
                    couponsUsedSet.add(coupon);
                }
            }
        }
    }
    for (Item item : printPhotosItems) {
        for (Coupon coupon : coupons) {
            if (!"gift".equals(coupon.getType()) && coupon.getProduct().getId().intValue() == item.getProduct().getId().intValue()) {
                if (coupon.getProduct().getId().intValue() == 302 && coupon.getStatus() == false) {
                    if (boolphoto == false) {
                        couponsUsedSet.add(coupon);
                        boolphoto = true;
                    }
                } else {
                    couponsUsedSet.add(coupon);
                }
            }
        }
    }
    // ShoppingCart cart = sessionContainer.getCart();
    // String expectedMethod = request.getParameter("expectedMethod");
    // if ("1".equals(expectedMethod)) {
    // cart.setExpectedMethod("颜色由冲印师调整");
    // } else if ("2".equals(expectedMethod)) {
    // cart.setExpectedMethod("不动颜色");
    // } else if ("3".equals(expectedMethod)) {
    // cart.setExpectedMethod("由冲印师进行剪裁处理");
    // } else if ("4".equals(expectedMethod)) {
    // cart.setExpectedMethod("不剪裁，留白边处理");
    // }
    request.getSession().setAttribute("coupons", couponsUsedSet);
    return mapping.findForward("useCoupon");
}
