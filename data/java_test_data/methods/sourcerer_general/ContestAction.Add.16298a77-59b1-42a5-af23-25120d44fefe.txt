public ActionForward Add(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String username = (String) request.getSession().getAttribute("username");
    String role = (String) request.getSession().getAttribute("Role");
    if (username != null) {
        if (role.equals("Admin")) {
            ContestDTO contestDTO = new ContestDTO();
            // get data on form
            DynaValidatorForm dynaForm = (DynaValidatorForm) form;
            String toDate = dynaForm.getString("toDate");
            String fromDate = dynaForm.getString("fromDate");
            // copy date from DynaValidatorForm to ContestDTO
            BeanUtils.copyProperties(contestDTO, dynaForm);
            // Auto generate ID
            contestDTO.setContestID(Util.generateUUID());
            UserProfileDTO user = new UserProfileDTO();
            user.setUsername(username);
            contestDTO.setUser(user);
            // convert data type date from dd//MM/yyyy to yyyy-MM-dd
            contestDTO.setFromDate(Util.getYMD(fromDate));
            contestDTO.setToDate(Util.getYMD(toDate));
            // default create new is true
            contestDTO.setStatus(true);
            contestDAO = new ContestDAO();
            // execute
            if (contestDAO.create(contestDTO)) {
                request.setAttribute("from", "contest");
                request.setAttribute("message", "Add new Contest Successful!");
                return mapping.findForward(SUCCESS);
            } else {
                request.setAttribute("message", "Add new Contest Error!");
                return mapping.findForward(ERROR);
            }
        } else {
            request.setAttribute("message", "Access is denied permission!");
            return mapping.findForward(ERROR);
        }
    } else {
        request.setAttribute("message", "Please Login!");
        return mapping.findForward(LOGIN);
    }
}
