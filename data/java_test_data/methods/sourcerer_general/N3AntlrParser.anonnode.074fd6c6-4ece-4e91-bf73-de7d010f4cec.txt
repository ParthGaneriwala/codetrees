public final void anonnode(AST label) throws RecognitionException, TokenStreamException {
    returnAST = null;
    ASTPair currentAST = new ASTPair();
    AST anonnode_AST = null;
    String oldCxt = null;
    String cxt = null;
    switch(LA(1)) {
        case LBRACK:
            {
                match(LBRACK);
                if (inputState.guessing == 0) {
                    anonnode_AST = (AST) currentAST.root;
                    if (label == null)
                        label = (AST) astFactory.make((new ASTArray(1)).add(astFactory.create(ANON, genAnonId())));
                    anonnode_AST = label;
                    currentAST.root = anonnode_AST;
                    currentAST.child = anonnode_AST != null && anonnode_AST.getFirstChild() != null ? anonnode_AST.getFirstChild() : anonnode_AST;
                    currentAST.advanceChildToEnd();
                }
                propertyList(label);
                astFactory.addASTChild(currentAST, returnAST);
                match(RBRACK);
                anonnode_AST = (AST) currentAST.root;
                break;
            }
        case LCURLY:
            {
                match(LCURLY);
                if (inputState.guessing == 0) {
                    anonnode_AST = (AST) currentAST.root;
                    oldCxt = currentFormula;
                    if (label == null)
                        label = (AST) astFactory.make((new ASTArray(1)).add(astFactory.create(FORMULA, genFormulaId())));
                    cxt = label.getText();
                    currentFormula = cxt;
                    startFormula(cxt);
                    anonnode_AST = label;
                    currentAST.root = anonnode_AST;
                    currentAST.child = anonnode_AST != null && anonnode_AST.getFirstChild() != null ? anonnode_AST.getFirstChild() : anonnode_AST;
                    currentAST.advanceChildToEnd();
                }
                formulaList();
                astFactory.addASTChild(currentAST, returnAST);
                if (inputState.guessing == 0) {
                    endFormula(cxt);
                    currentFormula = oldCxt;
                }
                match(RCURLY);
                anonnode_AST = (AST) currentAST.root;
                break;
            }
        case LPAREN:
            {
                match(LPAREN);
                list(label);
                astFactory.addASTChild(currentAST, returnAST);
                match(RPAREN);
                anonnode_AST = (AST) currentAST.root;
                break;
            }
        default:
            {
                throw new NoViableAltException(LT(1), getFilename());
            }
    }
    returnAST = anonnode_AST;
}
