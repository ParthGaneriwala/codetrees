public void show(IPage page) throws ProgrammerError {
    if (page == null)
        throw ProgrammerError.nullArgument("page");
    if (currentPage != null && currentPage == page)
        return;
    if (controller == null)
        throw ProgrammerError.general("Controller must be set at first");
    if (areas.isEmpty())
        throw ProgrammerError.general("Named areas must be defined at first");
    if (widgetResolver == null)
        throw ProgrammerError.general("WidgetResolver must be defined at first");
    // Выставляем желаемый результат в виде назначенных виджетов
    for (InternalArea area : areas.values()) {
        String widgetName = page.getWidget(area.getName());
        area.setAssignedWidget(widgetName);
    }
    // Проверяем устраивает ли нас то что мы хотим получить
    checkAreasForErrors();
    // Деактивация старых виджетов и востановление структуры
    if (currentPage != null)
        for (InternalArea area : areas.values()) {
            if ((area.getPreviousWidget() != null && !area.getPreviousWidget().equals(area.getAssignedWidget()))) {
                bridge.clear(areasPresentationsMap.get(area.getAreaPath()));
                controller.deactivate(currentPage, area.getName(), area.getPreviousWidget(), widgetsMap.get(area.getPreviousWidget()));
            }
            if (area.getAssignedWidget() == null) {
                // востанавливаем структуру
                IElement areaEl = areasPresentationsMap.get(area.getAreaPath());
                bridge.clear(areaEl);
                for (InternalArea child : area.getChildren()) {
                    IElement childEl = areasPresentationsMap.get(child.getAreaPath());
                    bridge.setSize(childEl, child.getSize().width, child.getSize().height);
                    bridge.place(childEl, areaEl, child.getAlignment());
                }
            }
        }
    // Активация новых виджетов
    for (InternalArea area : areas.values()) {
        if (area.getAssignedWidget() != null && !area.getAssignedWidget().equals(area.getPreviousWidget())) {
            IElement areaEl = areasPresentationsMap.get(area.getAreaPath());
            bridge.clear(areaEl);
            bridge.setLayout(areaEl, area.getLayout());
            bridge.setSize(areaEl, area.getSize().width, area.getSize().height);
            // назначаем виджеты
            String widgetName = area.getAssignedWidget();
            IElement widgetEl = widgetsMap.get(widgetName);
            if (widgetEl == null)
                widgetEl = putWidget(widgetResolver.resolve(widgetName));
            controller.activate(page, area.getName(), widgetName, widgetEl);
            bridge.place(widgetEl, areaEl, null);
        }
    }
    currentPage = page;
}
