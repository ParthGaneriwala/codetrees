@Override
protected void parse(String recordEntry, OutputCollector<Text, ChukwaRecord> output, Reporter reporter) {
    matcher.reset(recordEntry);
    if (matcher.matches()) {
        log.info("PbsNodeProcessor Matches");
        try {
            Date d = sdf.parse(matcher.group(0).trim());
            // String logLevel = matcher.group(2);
            // String className = matcher.group(3);
            String body = matcher.group(4);
            String[] lines = body.split("\n");
            String[] outputCols = lines[0].split("[\\s]++");
            if (outputCols.length != 6 && outputCols[0].intern() != headerCols[0].intern() && outputCols[1].intern() != headerCols[1].intern() && outputCols[2].intern() != headerCols[2].intern() && outputCols[3].intern() != headerCols[3].intern() && outputCols[4].intern() != headerCols[4].intern() && outputCols[5].intern() != headerCols[5].intern()) {
                throw new DFInvalidRecord("Wrong output format (header) [" + recordEntry + "]");
            }
            String[] values = null;
            // database (long timestamp,String table,String tag,int tableType,int sqlType)
            DatabaseHelper databaseRecord = new DatabaseHelper("system");
            for (int i = 1; i < lines.length; i++) {
                values = lines[i].split("[\\s]++");
                databaseRecord.add(d.getTime(), values[0] + "." + columns[1], values[1]);
                databaseRecord.add(d.getTime(), values[0] + "." + columns[2], values[2]);
                databaseRecord.add(d.getTime(), values[0] + "." + columns[3], values[3]);
                databaseRecord.add(d.getTime(), values[0] + "." + columns[4], values[4]);
                databaseRecord.add(d.getTime(), values[0] + "." + columns[5], values[5]);
            }
            // Output DF info to database
            output.collect(key, databaseRecord.buildChukwaRecord());
            log.info("DFProcessor output 1 DF to database");
        } catch (ParseException e) {
            e.printStackTrace();
            log.warn("Wrong format in DFProcessor [" + recordEntry + "]", e);
        } catch (IOException e) {
            e.printStackTrace();
            log.warn("Unable to collect output in DFProcessor [" + recordEntry + "]", e);
        } catch (DFInvalidRecord e) {
            e.printStackTrace();
            log.warn("Wrong format in DFProcessor [" + recordEntry + "]", e);
        }
    }
}
