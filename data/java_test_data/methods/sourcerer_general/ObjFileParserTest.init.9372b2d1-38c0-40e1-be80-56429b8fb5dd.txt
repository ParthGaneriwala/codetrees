@Override
public void init(GLAutoDrawable glDrawable) {
    GL gl = glDrawable.getGL();
    // glu = new GLU();
    glut = new GLUT();
    gl.glShadeModel(GL.GL_SMOOTH);
    gl.glClearColor(0.0f, 0.0f, 0.0f, 0.0f);
    gl.glClearDepth(1.0f);
    gl.glEnable(GL.GL_DEPTH_TEST);
    gl.glDepthFunc(GL.GL_LEQUAL);
    // gl.glHint(GL.GL_PERSPECTIVE_CORRECTION_HINT, GL.GL_NICEST);
    gl.glColorMaterial(GL.GL_FRONT_AND_BACK, GL.GL_AMBIENT_AND_DIFFUSE);
    ModelFileParser parser = ModelFileParser.getParser(new File(testModelName));
    testModel = new ModelGL();
    parser.fillModel(testModel);
    Canvas3DJOGL canvas3D = new Canvas3DJOGL();
    canvas3D.setGL(gl);
    testModel.init(canvas3D);
    float[] light_position = { 1, 1, 1, 0 };
    gl.glLightfv(GL.GL_LIGHT0, GL.GL_POSITION, light_position, 0);
    gl.glEnable(GL.GL_LIGHT0);
    try {
        boxTexture = TextureIO.newTexture(new File("data/graphics/box.png"), false);
    } catch (GLException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
    boxTexture.setTexParameteri(GL.GL_TEXTURE_MAG_FILTER, GL.GL_NEAREST);
    boxTexture.setTexParameteri(GL.GL_TEXTURE_MIN_FILTER, GL.GL_NEAREST);
}
