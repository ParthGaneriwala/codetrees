public int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;
    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char[] zzBufferL = zzBuffer;
    char[] zzCMapL = ZZ_CMAP;
    int[] zzTransL = ZZ_TRANS;
    int[] zzRowMapL = ZZ_ROWMAP;
    int[] zzAttrL = ZZ_ATTRIBUTE;
    while (true) {
        zzMarkedPosL = zzMarkedPos;
        zzAction = -1;
        zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
        zzState = ZZ_LEXSTATE[zzLexicalState];
        zzForAction: {
            while (true) {
                if (zzCurrentPosL < zzEndReadL) {
                    zzInput = zzBufferL[zzCurrentPosL++];
                } else if (zzAtEOF) {
                    zzInput = YYEOF;
                    break zzForAction;
                } else {
                    // store back cached positions
                    zzCurrentPos = zzCurrentPosL;
                    zzMarkedPos = zzMarkedPosL;
                    boolean eof = zzRefill();
                    // get translated positions and possibly new buffer
                    zzCurrentPosL = zzCurrentPos;
                    zzMarkedPosL = zzMarkedPos;
                    zzBufferL = zzBuffer;
                    zzEndReadL = zzEndRead;
                    if (eof) {
                        zzInput = YYEOF;
                        break zzForAction;
                    } else {
                        zzInput = zzBufferL[zzCurrentPosL++];
                    }
                }
                int zzNext = zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];
                if (zzNext == -1) {
                    break zzForAction;
                }
                zzState = zzNext;
                int zzAttributes = zzAttrL[zzState];
                if ((zzAttributes & 1) == 1) {
                    zzAction = zzState;
                    zzMarkedPosL = zzCurrentPosL;
                    if ((zzAttributes & 8) == 8) {
                        break zzForAction;
                    }
                }
            }
        }
        // store back cached position
        zzMarkedPos = zzMarkedPosL;
        switch(zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
            case 1:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n Numero entero \t--> \t" + yytext());
                    System.out.println("\t Numero entero --> " + yytext());
                }
            case 24:
                break;
            case 19:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n\t Asignacion \t--> \t" + yytext());
                    System.out.println(" Asignacion --> " + yytext());
                }
            case 25:
                break;
            case 11:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n\t Dos ptos. \t--> \t" + yytext());
                    System.out.println(" 2 ptos. --> " + yytext());
                }
            case 26:
                break;
            case 20:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n Numero decimal \t--> \t" + yytext());
                    System.out.println("\t Numero decimal --> " + yytext());
                }
            case 27:
                break;
            case 12:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n\t Cadena \t--> \t" + yytext());
                    System.out.println("\t Cadena--> " + yytext());
                }
            case 28:
                break;
            case 23:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n\t Tipo de Dato  \t--> \t" + yytext());
                    System.out.println(" Tipo de Dato  --> " + yytext());
                }
            case 29:
                break;
            case 4:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n\t Operador \t--> \t" + yytext());
                    System.out.println(" Operador --> " + yytext());
                }
            case 30:
                break;
            case 15:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n\t Identificador \t--> \t" + yytext());
                    System.out.println("\t Identificador --> " + yytext());
                }
            case 31:
                break;
            case 6:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n\t Comentario \t--> \t" + yytext());
                    System.out.println("\t Comentario --> " + yytext());
                }
            case 32:
                break;
            case 8:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n Caracter Especial \t--> \t" + yytext());
                    System.out.println(" caracter Especial --> " + yytext());
                }
            case 33:
                break;
            case 10:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n Corchete cerrado \t--> \t" + yytext());
                    System.out.println(" Corchete cerrado --> " + yytext());
                }
            case 34:
                break;
            case 21:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n Pal. Reservada Ent/Sal \t--> \t" + yytext());
                    System.out.println(" Pal. Reservada Ent/Sal--> " + yytext());
                }
            case 35:
                break;
            case 3:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n\t Oper. logico \t--> \t" + yytext());
                    System.out.println(" Oper. logico --> " + yytext());
                }
            case 36:
                break;
            case 9:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n Corchete abierto \t--> \t" + yytext());
                    System.out.println(" Corchete abierto --> " + yytext());
                }
            case 37:
                break;
            case 14:
                {
                /*No se hace nada :)*/
                }
            case 38:
                break;
            case 13:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n Palabra no Valida \t--> \t" + yytext());
                    System.out.println("\t Palabra no Valida --> " + yytext());
                }
            case 39:
                break;
            case 5:
                {
                // vista.setArea_analisis(" Linea:" + cont++);
                // System.out.println("\t Linea:" + cont++);
                }
            case 40:
                break;
            case 22:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n Palabra reservada  \t--> \t" + yytext());
                    System.out.println(" Palabra reservada  --> " + yytext());
                }
            case 41:
                break;
            case 2:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n\t Caracter \t--> \t" + yytext());
                    System.out.println("\t Caracter --> " + yytext());
                }
            case 42:
                break;
            case 16:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n Palabra Reservada \t--> \t" + yytext());
                    System.out.println(" Palabra Reservada --> " + yytext());
                }
            case 43:
                break;
            case 18:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n Funcion matematica \t--> \t" + yytext());
                    System.out.println(" Funcion matematica --> " + yytext());
                }
            case 44:
                break;
            case 7:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n\t Relacion --> \t" + yytext());
                    System.out.println(" Relacion --> " + yytext());
                }
            case 45:
                break;
            case 17:
                {
                    vista.setArea_analisis(vista.getArea_analisis() + "\n Palabra reservada Cond. \t--> \t" + yytext());
                    System.out.println(" Palabra reservada Cond. --> " + yytext());
                }
            case 46:
                break;
            default:
                if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
                    zzAtEOF = true;
                    return YYEOF;
                } else {
                    zzScanError(ZZ_NO_MATCH);
                }
        }
    }
}
