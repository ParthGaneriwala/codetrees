@Override
public String getMessage() {
    if (!this.specialConstructor) {
        return super.getMessage();
    }
    StringBuffer expected = new StringBuffer();
    int maxSize = 0;
    for (int i = 0; i < this.expectedTokenSequences.length; i++) {
        if (maxSize < this.expectedTokenSequences[i].length) {
            maxSize = this.expectedTokenSequences[i].length;
        }
        for (int j = 0; j < this.expectedTokenSequences[i].length; j++) {
            expected.append(this.tokenImage[this.expectedTokenSequences[i][j]]).append(' ');
        }
        if (this.expectedTokenSequences[i][this.expectedTokenSequences[i].length - 1] != 0) {
            expected.append("...");
        }
        expected.append(this.eol).append("    ");
    }
    StringBuilder retval = new StringBuilder("Encountered \"");
    Token tok = this.currentToken.next;
    for (int i = 0; i < maxSize; i++) {
        if (i != 0)
            retval.append(" ");
        if (tok.kind == 0) {
            retval.append(this.tokenImage[0]);
            break;
        }
        retval.append(add_escapes(tok.image));
        tok = tok.next;
    }
    retval.append("\" at line ");
    retval.append(this.currentToken.next.beginLine);
    retval.append(", column ");
    retval.append(this.currentToken.next.beginColumn);
    retval.append(".");
    retval.append(this.eol);
    if (this.expectedTokenSequences.length == 1) {
        retval.append("Was expecting:");
        retval.append(this.eol);
        retval.append("    ");
    } else {
        retval.append("Was expecting one of:");
        retval.append(this.eol);
        retval.append("    ");
    }
    retval.append(expected.toString());
    return retval.toString();
}
