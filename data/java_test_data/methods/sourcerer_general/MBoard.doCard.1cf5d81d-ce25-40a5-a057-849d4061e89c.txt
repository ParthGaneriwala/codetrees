// Card functions
public void doCard(Card c, MPlayer p) {
    // c.cardtype = 5; c.var = 25;
    spam(c.caption);
    switch(c.cardtype) {
        case // Monitary
        1:
            pay(p, -c.var);
            break;
        case // Advance to group (2x rent, falls to 3)
        2:
            p.rx2 = true;
        case // Advance to prop
        3:
            for (int i = 1; i < 40; i++) {
                p.loc++;
                if (p.loc == 40) {
                    p.loc = 0;
                }
                if (p.loc == 1) {
                    p.cash += 200;
                    spam(p.name + " gets 200 dollars for passing Go");
                }
                if (c.cardtype == 2 && props[p.loc].group == c.var)
                    break;
                if (c.cardtype == 3 && p.loc == c.var)
                    break;
            }
            visit(p, MiscUtil.randInt(12) + 1);
            p.rx2 = false;
            break;
        case // Advance squares
        4:
            p.loc += c.var;
            if (p.loc >= 40) {
                p.loc -= 40;
            }
            if (p.loc < 0) {
                p.loc += 40;
            }
            // I don't care...
            visit(p, MiscUtil.randInt(12) + 1);
            break;
        case // House repairs
        5:
            int h = 0;
            for (int i = 1; i < 40; i++) {
                if (props[i].owner == p) {
                    if (// was buggy
                    props[i].houses < 5)
                        h += props[i].houses * c.var;
                    else
                        // hotel
                        h += 100;
                }
            }
            pay(p, h);
            break;
        // Pay All
        case 6:
        case // Collect All
        7:
            MPlayer q = null;
            Enumeration<MPlayer> e;
            for (e = players.elements(); e.hasMoreElements(); ) {
                q = e.nextElement();
                if (p != q && !isBank(q)) {
                    if (c.cardtype == 6)
                        pay(p, q, c.var);
                    else
                        pay(q, p, c.var);
                }
            }
            break;
        case // Get out of Jail Free (currently useless)
        8:
            p.freejail = true;
            break;
        case // Go to Jail
        9:
            p.loc = 10;
            p.jailbird = 3;
            spam(p.name + " goes to Jail!");
            break;
        default:
            spam("Unknown card");
    }
}
