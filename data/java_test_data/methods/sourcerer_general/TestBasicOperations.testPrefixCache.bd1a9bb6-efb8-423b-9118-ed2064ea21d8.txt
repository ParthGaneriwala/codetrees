public void testPrefixCache() throws java.lang.Exception {
    // in this test, add a number of long prefixes until the cache
    // overflows and then make sure they can be retrieved.
    IDBConnection conn = TestConnection.makeAndCleanTestConnection();
    IRDBDriver d = conn.getDriver();
    d.setDoCompressURI(true);
    model = ModelRDB.createModel(conn);
    int cacheSize = d.getCompressCacheSize();
    cacheSize = 10;
    d.setCompressCacheSize(cacheSize);
    String pfx = "a123456789";
    String longPfx = "";
    long longLen = dbDriver.getLongObjectLength();
    // make long prefix
    while (longPfx.length() < longLen) longPfx += pfx;
    int i;
    for (i = 0; i < cacheSize * 2; i++) {
        String URI = longPfx + i + ":/www.foo/#bar";
        Resource s = model.createResource(URI);
        Property p = model.createProperty("test#predicate");
        Resource o = model.createResource("test#object");
        model.add(s, p, o);
    }
    for (i = 0; i < cacheSize * 2; i++) {
        String URI = longPfx + i + ":/www.foo/#bar";
        Resource s = model.createResource(URI);
        Property p = model.createProperty("test#predicate");
        Resource o = model.createResource("test#object");
        assertTrue(model.contains(s, p, o));
    }
}
