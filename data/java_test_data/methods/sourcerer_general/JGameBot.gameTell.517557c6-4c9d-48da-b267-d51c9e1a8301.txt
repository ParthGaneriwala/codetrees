protected boolean gameTell(String handle, String msg) throws Exception {
    boolean longarg = false;
    if (msg.startsWith("#") && msg.length() > 1) {
        msg = "@kib " + msg.substring(1);
    }
    if (msg.startsWith("@") && msg.length() > 1) {
        msg = msg.substring(1);
        longarg = true;
    }
    StringTokenizer ST = new StringTokenizer(msg);
    Method[] meths = null;
    String cmd = null;
    int tokens = -1;
    if (ST.countTokens() > 0) {
        cmd = ST.nextToken();
        if (longarg)
            tokens = 1;
        else
            tokens = ST.countTokens();
        meths = MiscUtil.getAllMethods(getClass());
    }
    if (meths != null)
        for (int m = 0; m < meths.length; m++) {
            // System.out.println(meths[m].toString());
            if (// meths[m].isAccessible() &&
            meths[m].getName().equalsIgnoreCase("cmd" + cmd) && meths[m].getParameterTypes().length == tokens + 1) {
                String[] params = new String[tokens + 1];
                for (int i = 1; i <= tokens; i++) {
                    if (longarg) {
                        params[i] = MiscUtil.tokenizerToString(ST);
                    } else
                        params[i] = ST.nextToken();
                }
                params[0] = handle;
                try {
                    meths[m].invoke(this, (Object[]) params);
                } catch (Exception augh) {
                    log.println("Augh: " + augh);
                    augh.printStackTrace(log);
                    return false;
                }
                return true;
            }
        }
    JBoard b = getPlayerBoard(handle);
    if (b != null) {
        JPlayer p = b.getPlayer(handle);
        if (p != null && p.isWaiting()) {
            p.setResponse(msg);
            return true;
        }
    }
    return false;
}
