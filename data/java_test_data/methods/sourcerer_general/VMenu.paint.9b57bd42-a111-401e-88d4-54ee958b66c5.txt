public void paint(Graphics g) {
    VMenu menu = (VMenu) parent;
    boolean disabled = false;
    boolean toggle = false;
    Color textcolor;
    disabled = menunode.is_disabled();
    if (child != null)
        disabled = false;
    toggle = menunode.get_toggle();
    if (disabled) {
        textcolor = Color.lightGray;
    } else {
        textcolor = Color.black;
    }
    g.setColor(VTheme.menu_background);
    g.fillRect(0, 0, W(), H());
    if (menu.decorated) {
        g.setColor(VTheme.menu_side_color);
        g.fillRect(0, 0, VMenu.side_decoration_width, H());
    }
    if (state == CButton.MOUSE_IN && !disabled) {
        g.setColor(VTheme.toolbutton_background);
        g.fillRect(2, 2, w() - 4, h() - 4);
        g.setColor(VTheme.toolbutton_border);
        g.drawRect(2, 2, w() - 4, h() - 4);
    }
    if (state == CButton.MOUSE_PRESS && !disabled) {
        g.setColor(VTheme.toolbutton_press_background);
        g.fillRect(2, 2, w() - 4, h() - 4);
        g.setColor(VTheme.toolbutton_border);
        g.drawRect(2, 2, w() - 4, h() - 4);
    }
    if (state == CButton.MOUSE_OUT) {
        g.setColor(VTheme.menu_background);
        g.fillRect(0, 0, W(), H());
        if (menu.decorated) {
            g.setColor(VTheme.menu_side_color);
            g.fillRect(0, 0, VMenu.side_decoration_width, H());
        }
    }
    if (child != null && !disabled) {
        if (child.isVisible()) {
            g.setColor(VTheme.toolbutton_background);
            g.fillRect(2, 2, w() - 4, h() - 4);
            g.setColor(VTheme.toolbutton_border);
            g.drawRect(2, 2, w() - 4, h() - 4);
        }
    }
    if (gfx.pcf != null) {
        if (menu.decorated) {
            gfx.drawString(g, text, VMenu.side_decoration_width + 8, 17, textcolor);
        } else {
            gfx.drawString(g, text, 10, 17, textcolor);
        }
    }
    if (state == CButton.MOUSE_IN && !disabled) {
        if (icon_shadow) {
            if (embossed_icon != null) {
                g.drawImage(embossed_icon.getImage(), 6, 4, this);
            }
        } else {
            if (icon != null) {
                g.drawImage(icon.getImage(), 6, 5, this);
            }
        }
    } else {
        if (icon != null && !disabled) {
            g.drawImage(icon.getImage(), 6, 5, this);
        } else if (disabled_icon != null && disabled) {
            g.drawImage(disabled_icon.getImage(), 6, 5, this);
        }
    }
    if (child != null) {
        g.setColor(Color.black);
        this.drawFilledRightArrow(g, w() - 12, 10, 4);
    }
    if (menu.decorated) {
        /*
             * If we have a decorated vmenu (with sidebar) then we can paint a 
             * small check-mark to indicate if this menu item is toggled.  We 
             * assume that if the menu item is associated with a toggle action
             * then it doesn't need to have an icon painted.  We paint the check
             * mark in the place of the icon
             */
        if (toggle && !disabled) {
            g.setColor(Color.black);
            // TODO: draw a checkmark instead of a rectangle
            g.fillRect(12, 12, 3, 3);
        }
    }
}
