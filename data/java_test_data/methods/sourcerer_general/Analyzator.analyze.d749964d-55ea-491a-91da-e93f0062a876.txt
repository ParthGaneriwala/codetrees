public static int analyze(String inFile) throws IOException {
    if (!existDictionary) {
        dictionary = getDictionary();
        existDictionary = true;
    }
    FileReader fr = new FileReader(inFile);
    int i;
    int penalty = 0;
    int fileLength = findLength(inFile);
    StringBuilder sb = new StringBuilder();
    int counter = 0;
    while ((i = fr.read()) != -1) {
        counter++;
        char symbol = (char) i;
        if ((symbol >= 'a' && symbol <= 'z') || (symbol >= 'A' && symbol <= 'Z')) {
            sb.append(symbol);
        } else {
            if (sb.length() != 0) {
                String s = sb.toString();
                if (sb.charAt(0) >= 'A' && sb.charAt(0) <= 'Z') {
                    char smallFirst = ChangeTable.toLowerCase(sb.charAt(0));
                    sb.delete(0, 1);
                    sb.insert(0, smallFirst);
                    String smallS = sb.toString();
                    sb.delete(0, sb.length());
                    if (!(dictionary.contains(s) || dictionary.contains(smallS))) {
                        penalty++;
                    }
                } else {
                    sb.delete(0, sb.length());
                    if (!dictionary.contains(s)) {
                        penalty++;
                    }
                }
            }
        }
        if (penalty > Math.min(fileLength, LENGTH_THRESHOLD) / FILE_THRESHOLD || penalty > minPenalty) {
            fr.close();
            return -1;
        }
        if (counter > LENGTH_THRESHOLD) {
            break;
        }
    }
    fr.close();
    return penalty;
}
