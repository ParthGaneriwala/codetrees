// documentation inherited
@Override
protected void evaluate() {
    super.evaluate();
    // find the closest target
    _target.resolve(_agent, _targets);
    Vector2f trans = _agent.getTranslation();
    _currentTarget = null;
    float cdist = Float.MAX_VALUE;
    for (int ii = 0, nn = _targets.size(); ii < nn; ii++) {
        Logic target = _targets.get(ii);
        float dist = target.getTranslation().distanceSquared(trans);
        if (dist < cdist) {
            _currentTarget = target;
            cdist = dist;
        }
    }
    _targets.clear();
    // if we're within our distance bounds, stop and face the target
    if (_currentTarget == null) {
        return;
    }
    BehaviorConfig.Follow config = (BehaviorConfig.Follow) _config;
    float min2 = config.minimumDistance * config.minimumDistance;
    float max2 = config.maximumDistance * config.maximumDistance;
    if (FloatMath.isWithin(cdist, min2, max2)) {
        clearPath();
        _agent.face(_currentTarget);
        return;
    }
    // compute a path to the target
    Vector2f loc = _currentTarget.getTranslation();
    Vector2f[] path = _scenemgr.getPathfinder().getPath(_agent, MAX_FOLLOW_PATH_LENGTH, loc.x, loc.y, true, true);
    if (path == null) {
        clearPath();
        _agent.face(_currentTarget);
        return;
    }
    // start out on the path
    setPath(path);
}
