private ExpressionLogical XreadInPredicateRightPart(Expression l) {
    int degree = l.getDegree();
    Expression e = null;
    read();
    readThis(Tokens.OPENBRACKET);
    int position = getPosition();
    int brackets = readOpenBrackets();
    switch(token.tokenType) {
        case Tokens.UNNEST:
            e = XreadCollectionDerivedTable();
            e.getTable().getSubQuery().setUniqueRows();
            readThis(Tokens.CLOSEBRACKET);
            this.readCloseBrackets(brackets);
            break;
        case Tokens.TABLE:
        case Tokens.VALUES:
        case Tokens.SELECT:
            {
                rewind(position);
                SubQuery sq = XreadSubqueryBody(false, OpTypes.IN);
                e = new Expression(OpTypes.TABLE_SUBQUERY, sq);
                readThis(Tokens.CLOSEBRACKET);
                break;
            }
        default:
            {
                rewind(position);
                e = XreadInValueListConstructor(degree);
                readThis(Tokens.CLOSEBRACKET);
                break;
            }
    }
    ExpressionLogical r;
    if (isCheckOrTriggerCondition) {
        r = new ExpressionLogical(OpTypes.IN, l, e);
    } else {
        r = new ExpressionLogical(OpTypes.EQUAL, l, e);
        r.setSubType(OpTypes.ANY_QUANTIFIED);
    }
    return r;
}
