private static void parseObjFile(File objFileName, GraphicModel model, Map<String, Material> materials) {
    Scanner objFile = getScannerFromFile(objFileName);
    // used for debugging
    int lineNum = 0;
    Material currentMaterial = null;
    List<Point3D> geometricVertices = new ArrayList<Point3D>();
    List<Point3D> textureVertices = new ArrayList<Point3D>();
    List<Vector3D> vertexNormals = new ArrayList<Vector3D>();
    String line;
    while (objFile.hasNextLine()) {
        lineNum++;
        line = objFile.nextLine();
        line = line.trim();
        // Uses possessive quantifiers so it doesn't backtrack if it finds it.
        String floatExp = "[-+]?+\\d*+\\.?+\\d*+";
        String threeFloats = floatExp + "\\s++" + floatExp + "\\s++" + floatExp;
        String intExp = "[-+]?+\\d*+";
        // Vertex data
        if (line.matches("^v\\s++" + threeFloats)) {
            geometricVertices.add(new Point3D(parseLine3f(line)));
        } else if (line.matches("^vt(?:\\s++" + floatExp + "){1,3}+")) {
            Point3D pt = new Point3D(parseLine3f(line, 0, 0));
            // textures need fixing Y=1-Y .. so orig-2orig = -orig = new ... 1+new
            pt = pt.translate(0, 1 - 2 * pt.getY(), 0);
            textureVertices.add(pt);
        } else if (line.matches("^vn\\s++" + threeFloats)) {
            vertexNormals.add(new Vector3D(parseLine3f(line)));
        } else // Elements
        if (line.matches("^f(?:\\s++" + intExp + "(?:/(?:" + intExp + ")?+){0,2}+){3,}+")) {
            addFaceElement(line, model, currentMaterial, geometricVertices, textureVertices, vertexNormals);
        } else // Material
        if (line.matches("^usemtl\\s++\\S++")) {
            currentMaterial = getUseMaterial(line, materials);
        } else // Other common stuff to prevent throwing a lot of debug warnings
        if (line.startsWith("#")) {
        // Ignore comments
        } else if (line.startsWith("o ")) {
        // Ignore object groups
        } else if (line.startsWith("g ")) {
        // Ignore object sub-groups
        } else if (line.startsWith("s ")) {
        // Ignore smoothing groups
        } else if (line.startsWith("mtllib ")) {
        // Already parsed
        } else if (line.equals("")) {
        // Ignore blank lines
        } else {
            System.out.println("[Debug] Warning: line either not supported or malformed:");
            System.out.println("line " + lineNum + ": " + line);
        }
    }
    objFile.close();
}
