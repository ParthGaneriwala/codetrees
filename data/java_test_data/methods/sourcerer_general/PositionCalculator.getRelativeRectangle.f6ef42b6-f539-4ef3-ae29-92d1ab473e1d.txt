public static Rectangle getRelativeRectangle(Rectangle basis, Rectangle toLocate, RelativePosition position) {
    Rectangle result = null;
    switch(position) {
        case OutTop:
            result = getRelativeRectangle(getPoint(basis, Position.Top), toLocate, Position.Top);
            break;
        case InTop:
            result = getRelativeRectangle(getPoint(basis, Position.Top), toLocate, Position.Bottom);
            break;
        case OutBottom:
            result = getRelativeRectangle(getPoint(basis, Position.Bottom), toLocate, Position.Bottom);
            break;
        case InBottom:
            result = getRelativeRectangle(getPoint(basis, Position.Bottom), toLocate, Position.Top);
            break;
        case OutLeft:
            result = getRelativeRectangle(getPoint(basis, Position.Left), toLocate, Position.Left);
            break;
        case InLeft:
            result = getRelativeRectangle(getPoint(basis, Position.Left), toLocate, Position.Right);
            break;
        case InRight:
            result = getRelativeRectangle(getPoint(basis, Position.Right), toLocate, Position.Left);
            break;
        case OutRight:
            result = getRelativeRectangle(getPoint(basis, Position.Right), toLocate, Position.Right);
            break;
        case Center:
            result = getRelativeRectangle(getPoint(basis, Position.Center), toLocate, Position.Center);
            break;
        case OutTopOutLeft:
            result = getRelativeRectangle(getPoint(basis, Position.TopLeft), toLocate, Position.TopLeft);
            break;
        case OutTopInLeft:
            result = getRelativeRectangle(getPoint(basis, Position.TopLeft), toLocate, Position.TopRight);
            break;
        case InTopOutLeft:
            result = getRelativeRectangle(getPoint(basis, Position.TopLeft), toLocate, Position.BottomLeft);
            break;
        case InTopInLeft:
            result = getRelativeRectangle(getPoint(basis, Position.TopLeft), toLocate, Position.BottomRight);
            break;
        case OutTopInRight:
            result = getRelativeRectangle(getPoint(basis, Position.TopRight), toLocate, Position.TopLeft);
            break;
        case OutTopOutRight:
            result = getRelativeRectangle(getPoint(basis, Position.TopRight), toLocate, Position.TopRight);
            break;
        case InTopInRight:
            result = getRelativeRectangle(getPoint(basis, Position.TopRight), toLocate, Position.BottomLeft);
            break;
        case InTopOutRight:
            result = getRelativeRectangle(getPoint(basis, Position.TopRight), toLocate, Position.BottomRight);
            break;
        case InBottomOutLeft:
            result = getRelativeRectangle(getPoint(basis, Position.BottomLeft), toLocate, Position.TopLeft);
            break;
        case InBottomInLeft:
            result = getRelativeRectangle(getPoint(basis, Position.BottomLeft), toLocate, Position.TopRight);
            break;
        case OutBottomOutLeft:
            result = getRelativeRectangle(getPoint(basis, Position.BottomLeft), toLocate, Position.BottomLeft);
            break;
        case OutBottomInLeft:
            result = getRelativeRectangle(getPoint(basis, Position.BottomLeft), toLocate, Position.BottomRight);
            break;
        case InBottomInRight:
            result = getRelativeRectangle(getPoint(basis, Position.BottomRight), toLocate, Position.TopLeft);
            break;
        case InBottomOutRight:
            result = getRelativeRectangle(getPoint(basis, Position.BottomRight), toLocate, Position.TopRight);
            break;
        case OutBottomInRight:
            result = getRelativeRectangle(getPoint(basis, Position.BottomRight), toLocate, Position.BottomLeft);
            break;
        case OutBottomOutRight:
            result = getRelativeRectangle(getPoint(basis, Position.BottomRight), toLocate, Position.BottomRight);
            break;
        default:
            throw new Error();
    }
    return result;
}
