public static void main(String[] args) {
    concentration = new int[size][size];
    pollutionSummary = new int[25];
    for (int i = 0; i < size; i++) {
        Arrays.fill(concentration[i], 0);
    }
    // start with all the pollution at a source at [10][10]
    concentration[10][10] = initTotalPollution;
    int[][] nextStepConcentration = new int[size][size];
    int time = 0;
    int airbornePollution = initTotalPollution;
    // for each time step
    while (airbornePollution > 0) {
        // make a copy to store the next time step without interfering with the current one.
        for (int i = 0; i < size; i++) {
            nextStepConcentration[i] = new int[size];
            // java 5
            System.arraycopy(concentration[i], 0, nextStepConcentration, 0, size);
        // nextStepConcentration[i] = Arrays.copyOf(concentration[i], size);  //java 6
        }
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                // but not guaranteed to move to the south or east.
                for (int k = 0; k < concentration[i][j]; k++) {
                    double r = Math.random();
                    if (r < depositionProbability) {
                        // deposition is a simple decrement
                        nextStepConcentration[i][j]--;
                        airbornePollution--;
                    } else if (r < depositionProbability + motionProbability) {
                        // motion, decrement from here and increment in one of the neighbors
                        nextStepConcentration[i][j]--;
                        double s = Math.random();
                        if (s < 0.05) {
                            if (i > 0) {
                                nextStepConcentration[i - 1][j]++;
                            } else {
                                airbornePollution--;
                            }
                        } else if (s < 0.1) {
                            if (j > 0) {
                                nextStepConcentration[i][j - 1]++;
                            } else {
                                airbornePollution--;
                            }
                        } else if (s < 0.55) {
                            if (i < size - 1) {
                                nextStepConcentration[i + 1][j]++;
                            } else {
                                airbornePollution--;
                            }
                        } else {
                            if (j < size - 1) {
                                nextStepConcentration[i][j + 1]++;
                            } else {
                                airbornePollution--;
                            }
                        }
                    }
                // end if (r < depositionProbability)
                }
            // end for (int k...
            }
        // end for (int j...
        }
        // end for (int i...
        concentration = nextStepConcentration;
        if (time % 5 == 0) {
            writeData(time);
            System.out.println("total airborne pollution is " + airbornePollution);
            if (time / 5 >= pollutionSummary.length) {
                expandSummaryArraySizes();
            }
            pollutionSummary[time / 5] = airbornePollution;
        }
        time++;
    }
    // end while (airbornePollution > 0)
    writeSummary();
}
