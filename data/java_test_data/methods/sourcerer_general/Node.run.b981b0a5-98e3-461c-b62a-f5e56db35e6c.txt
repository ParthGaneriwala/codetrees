public void run() {
    try {
        out = new ObjectOutputStream(new BufferedOutputStream(socket.getOutputStream()));
        in = new ObjectInputStream(new BufferedInputStream(socket.getInputStream()));
        String input = (String) in.readObject();
        debug("getting the input and converting it to a string");
        if ((input == null)) {
            // kick out of loop
            debug("in null input");
            return;
        }
        synchronized (this) {
            String[] str = input.split(" ");
            if (str[0].equalsIgnoreCase("-lookup")) {
                debug("lookup has been crecieved");
                lookup(str[1], str[2]);
            }
            if (str[0].equalsIgnoreCase("-reply")) {
                debug("reply has been recieved");
                this.nextMessageIsObject();
            }
            if (str[0].equalsIgnoreCase("-put")) {
                debug("put has been recieved");
                this.nextTwoMessagesAreObjects();
            }
            if (str[0].equalsIgnoreCase("-addFT")) {
                debug("addFT has been recieved");
                ft.add(str[1]);
                this.sendAddFT(input);
            }
            if (str[0].equalsIgnoreCase("-getFT")) {
                debug("getFT has been recieved");
                sendFingerTable(str[1]);
            }
            if (str[0].equalsIgnoreCase("-copyFT")) {
                debug("copyFT has been recieved");
                out.writeObject(ft.getFinger());
            }
            if (str[0].equalsIgnoreCase("-printFT")) {
                debug("printing finger table");
                FingerTable.arrays(ft);
            }
        }
        // sync
        debug("closing input and output streams and socket");
        in.close();
        out.close();
        socket.close();
    } catch (Exception e) {
        System.err.println(e);
    }
}
