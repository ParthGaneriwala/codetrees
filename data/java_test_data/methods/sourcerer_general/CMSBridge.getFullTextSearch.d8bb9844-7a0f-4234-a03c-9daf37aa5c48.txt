public List<EPLogical> getFullTextSearch(String ticket, String fullText) throws Exception {
    logger.debug("BEGIN - " + new Exception().getStackTrace()[0].getMethodName());
    List<EPLogical> resultList = new ArrayList<EPLogical>();
    List<ICMSDocument> icmsDocList = null;
    ICMSDocument icmsDoc = null;
    EPConcrete concreteDoc = null;
    EPLogical logicalDoc = null;
    String strObjectType = null;
    String strObjectUDI = null;
    // may be some performance issues due to objects manipulation
    if (isValid(fullText)) {
        // TODO: manage objectType
        // dm_folder, cm:folder, ...
        // Get folders
        icmsDocList = repository.getFullTextSearch(ticket, fullText);
        if (icmsDocList != null) {
            // Add logical document only once into the result list
            Map mapLogicalDocument = new HashMap();
            for (int i = 0; i < icmsDocList.size(); i++) {
                concreteDoc = null;
                logicalDoc = null;
                icmsDoc = icmsDocList.get(i);
                strObjectUDI = icmsDoc.getAttributeValue(ATTR_DOC_UID);
                // Check if logical doc already in list
                logicalDoc = (EPLogical) mapLogicalDocument.get(strObjectUDI);
                if (logicalDoc == null) {
                    // logger.debug(" nodeObject: " + nodeObject.getNodeName() + " - " + strObjectType);
                    strObjectType = icmsDoc.getNodeType();
                    if (strObjectType.indexOf(TYPE_MODI_L) > -1) {
                        logicalDoc = new EPLogical(icmsDoc);
                    } else if (strObjectType.indexOf(TYPE_MODI_C) > -1) {
                        concreteDoc = new EPConcrete(icmsDoc);
                        if (concreteDoc != null) {
                            logicalDoc = concreteDoc.getLogicalDoc();
                        }
                    }
                    if (logicalDoc != null) {
                        mapLogicalDocument.put(strObjectUDI, logicalDoc);
                    } else {
                    // logger.debug(" logical doc not found");
                    }
                } else {
                    logger.debug(" Document already in resulset");
                }
            }
            // put the values into the list
            Iterator itLogicalDocument = mapLogicalDocument.values().iterator();
            while (itLogicalDocument.hasNext()) {
                resultList.add((EPLogical) itLogicalDocument.next());
            }
        }
    }
    logger.debug("END   - " + new Exception().getStackTrace()[0].getMethodName());
    return resultList;
}
