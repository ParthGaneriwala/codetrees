@Override
protected Result evaluate(final LogicContext context, final Integer patientId, final Map<String, Object> parameters) throws LogicException {
    Result result = new Result();
    if (log.isDebugEnabled())
        log.debug("Processing mother to child prevention rule ...");
    ObsWithRestrictionRule obsWithRestrictionRule = new ObsWithStringRestrictionRule();
    parameters.put(EvaluableConstants.OBS_CONCEPT, Arrays.asList(EvaluableNameConstants.MATERNAL_PARTUM_ANTIRETROVIRAL_HISTORY));
    parameters.put(EvaluableConstants.OBS_FETCH_ORDER, FetchOrdering.ORDER_ASCENDING.getValue());
    Result antiRetroViralHistoryResults = obsWithRestrictionRule.eval(context, patientId, parameters);
    Concept antiRetroViralConcept = CacheUtils.getConcept(EvaluableNameConstants.PARTUM_ANTIRETROVIRAL_USE);
    Concept dosingPeriodConcept = CacheUtils.getConcept(EvaluableNameConstants.PARTUM_DOSING_PERIOD);
    Concept dosingQuantificationConcept = CacheUtils.getConcept(EvaluableNameConstants.ANTIRETROVIRAL_DOSE_QUANTIFICATION);
    Concept weeksOnTreatmentConcept = CacheUtils.getConcept(EvaluableNameConstants.NUMBER_OF_WEEKS_ON_TREATMENT);
    for (Result antiRetroViralHistoryResult : antiRetroViralHistoryResults) {
        Obs antiRetroViralHistoryObsGroup = (Obs) antiRetroViralHistoryResult.getResultObject();
        if (antiRetroViralHistoryObsGroup.isObsGrouping()) {
            Set<Obs> antiRetroViralHistoryObsMembers = antiRetroViralHistoryObsGroup.getGroupMembers();
            Map<Concept, Result> obsMap = new HashMap<Concept, Result>();
            for (Obs antiRetroViralHistoryObs : antiRetroViralHistoryObsMembers) {
                Concept antiRetroViralHistoryConcept = antiRetroViralHistoryObs.getConcept();
                Result obsMapEntry = obsMap.get(antiRetroViralHistoryConcept);
                if (obsMapEntry == null) {
                    obsMapEntry = new Result();
                    obsMap.put(antiRetroViralHistoryConcept, obsMapEntry);
                }
                obsMapEntry.add(new Result(antiRetroViralHistoryObs));
            }
            Result[] results = new Result[] { new Result(), new Result(), new Result(), new Result() };
            Result antiRetroViralResult = obsMap.get(antiRetroViralConcept);
            if (CollectionUtils.isNotEmpty(antiRetroViralResult)) {
                results[0] = antiRetroViralResult;
                Result dosingResult = obsMap.get(dosingPeriodConcept);
                if (CollectionUtils.isNotEmpty(dosingResult))
                    results[1] = dosingResult;
                Result dosingQuantificationResult = obsMap.get(dosingQuantificationConcept);
                if (CollectionUtils.isNotEmpty(dosingQuantificationResult))
                    results[2] = dosingQuantificationResult;
                Result weeksOnTreatmentResult = obsMap.get(weeksOnTreatmentConcept);
                if (CollectionUtils.isNotEmpty(weeksOnTreatmentResult))
                    results[3] = weeksOnTreatmentResult;
                Result resultEntry = new Result();
                resultEntry.addAll(Arrays.asList(results));
                result.add(resultEntry);
            }
        }
    }
    return result;
}
