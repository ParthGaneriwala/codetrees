private void endColumn() throws IOException {
    String currentValue = "";
    // must be called before setting startedColumn = false
    if (startedColumn) {
        if (columnBuffer.Position == 0) {
            if (dataBuffer.ColumnStart < dataBuffer.Position) {
                int lastLetter = dataBuffer.Position - 1;
                if (userSettings.TrimWhitespace && !startedWithQualifier) {
                    while (lastLetter >= dataBuffer.ColumnStart && (dataBuffer.Buffer[lastLetter] == Letters.SPACE || dataBuffer.Buffer[lastLetter] == Letters.TAB)) {
                        lastLetter--;
                    }
                }
                currentValue = new String(dataBuffer.Buffer, dataBuffer.ColumnStart, lastLetter - dataBuffer.ColumnStart + 1);
            }
        } else {
            updateCurrentValue();
            int lastLetter = columnBuffer.Position - 1;
            if (userSettings.TrimWhitespace && !startedWithQualifier) {
                while (lastLetter >= 0 && (columnBuffer.Buffer[lastLetter] == Letters.SPACE || columnBuffer.Buffer[lastLetter] == Letters.SPACE)) {
                    lastLetter--;
                }
            }
            currentValue = new String(columnBuffer.Buffer, 0, lastLetter + 1);
        }
    }
    columnBuffer.Position = 0;
    startedColumn = false;
    if (columnsCount >= 100000 && userSettings.SafetySwitch) {
        close();
        throw new IOException("Maximum column count of 100,000 exceeded in record " + NumberFormat.getIntegerInstance().format(currentRecord) + ". Set the SafetySwitch property to false" + " if you're expecting more than 100,000 columns per record to" + " avoid this error.");
    }
    if (columnsCount == values.length) {
        // holder array needs to grow to be able to hold another column
        int newLength = values.length * 2;
        String[] holder = new String[newLength];
        System.arraycopy(values, 0, holder, 0, values.length);
        values = holder;
        boolean[] qualifiedHolder = new boolean[newLength];
        System.arraycopy(isQualified, 0, qualifiedHolder, 0, isQualified.length);
        isQualified = qualifiedHolder;
    }
    values[columnsCount] = currentValue;
    isQualified[columnsCount] = startedWithQualifier;
    currentValue = "";
    columnsCount++;
}
