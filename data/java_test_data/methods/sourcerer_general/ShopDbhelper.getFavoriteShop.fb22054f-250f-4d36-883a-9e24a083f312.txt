public Object[] getFavoriteShop(String username, int page, int count, boolean getTotal) throws Exception {
    Connection connection = null;
    Object[] result = new Object[2];
    try {
        connection = connectionPool.getConnection();
        PreparedStatement preStat = connection.prepareStatement(GETFAVORITESHOP_SQL);
        preStat.setString(1, username);
        preStat.setInt(2, (page - 1) * count);
        preStat.setInt(3, count);
        ResultSet resultSet = preStat.executeQuery();
        if (loggerServiceTracker.isDebugEnabled()) {
            loggerServiceTracker.debug("SQL:" + preStat.toString());
            loggerServiceTracker.debug("Result:" + resultSet.toString());
        }
        List<UserFavoriteShop> entities = new ArrayList<UserFavoriteShop>();
        while (resultSet.next()) {
            // String username2 = resultSet.getString("username");
            long id = resultSet.getLong("id");
            long shopId = resultSet.getLong("shopId");
            String name = resultSet.getString("title");
            String street = resultSet.getString("street");
            String tel = resultSet.getString("tel");
            UserFavoriteShop entity = new UserFavoriteShop();
            entity.setId(id);
            entity.setShopId(shopId);
            entity.setUsername(username);
            entity.setShopName(name);
            entity.setStreet(street);
            entity.setTel(tel);
            entities.add(entity);
        }
        result[1] = entities.toArray(new UserFavoriteShop[] {});
        if (getTotal) {
            PreparedStatement preStat2 = connection.prepareStatement(GETCOUNTOFFAVORITESHOP_SQL);
            preStat2.setString(1, username);
            ResultSet resultSet2 = preStat2.executeQuery();
            if (loggerServiceTracker.isDebugEnabled()) {
                loggerServiceTracker.debug("SQL:" + preStat2.toString());
                loggerServiceTracker.debug("Result:" + resultSet2.toString());
            }
            if (resultSet2.next()) {
                int resultCount = resultSet2.getInt("COUNT(*)");
                result[0] = resultCount;
            }
        }
        return result;
    } finally {
        if (connection != null) {
            connectionPool.returnConnection(connection);
        }
    }
}
