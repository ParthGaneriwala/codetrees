private void updateSnake() {
    // �ж��Ƿ�����һ��
    boolean growSnake = false;
    // ȡ���ߵ�ͷ��
    Coordinate head = mSnakeTrail.get(0);
    // �µ�ͷ
    Coordinate newHead = new Coordinate(1, 1);
    mDirection = mNextDirection;
    switch(mDirection) {
        case EAST:
            {
                // ��
                newHead = new Coordinate(head.x + 1, head.y);
                break;
            }
        case WEST:
            {
                // ��
                newHead = new Coordinate(head.x - 1, head.y);
                break;
            }
        case NORTH:
            {
                // ��
                newHead = new Coordinate(head.x, head.y - 1);
                break;
            }
        case SOUTH:
            {
                // ��
                newHead = new Coordinate(head.x, head.y + 1);
                break;
            }
    }
    // �߱�һ��������һƽ���׵�ǽ��Χ
    if ((newHead.x < 1) || (newHead.y < 1) || (newHead.x > mXTileCount - 2) || (newHead.y > mYTileCount - 2)) {
        setMode(LOSE);
        return;
    }
    // ���ǲ���ײ�����Լ�
    int snakelength = mSnakeTrail.size();
    for (int snakeindex = 0; snakeindex < snakelength; snakeindex++) {
        Coordinate c = mSnakeTrail.get(snakeindex);
        if (c.equals(newHead)) {
            setMode(LOSE);
            return;
        }
    }
    // ���ǲ��ǳԵ���ƻ��
    int applecount = mAppleList.size();
    for (int appleindex = 0; appleindex < applecount; appleindex++) {
        Coordinate c = mAppleList.get(appleindex);
        if (c.equals(newHead)) {
            mAppleList.remove(c);
            addRandomApple();
            mScore++;
            mScoreText.setText(mScore + "");
            mSpeed++;
            // mMoveDelay = (long) (mMoveDelay * Math.pow(0.9, Double.valueOf(mSpeed)));
            mMoveDelay *= 0.9;
            mSpeedText.setText(mSpeed + "");
            growSnake = true;
        }
    }
    // �µ�ͷ����ȥ��β��
    mSnakeTrail.add(0, newHead);
    // except if we want the snake to grow
    if (!growSnake) {
        // ����Ե�ƻ��,β����ȥ��
        mSnakeTrail.remove(mSnakeTrail.size() - 1);
    }
    // ���������ߵ�λ��,��ɫ
    int index = 0;
    for (Coordinate c : mSnakeTrail) {
        if (index == 0) {
            setTile(TILE_TITIE, c.x, c.y);
        } else {
            setTile(RED_STAR, c.x, c.y);
        }
        index++;
    }
}
