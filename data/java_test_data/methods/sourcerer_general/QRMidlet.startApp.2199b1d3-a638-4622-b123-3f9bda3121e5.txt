public void startApp() {
    // initialize one-time resources on startup
    if (started == false) {
        started = true;
        // get display handle
        display = Display.getDisplay(this);
        // load settings
        loadSettings();
        // initialize commands
        exitCommand = new Command("Exit", Command.EXIT, 1);
        cameraCommand = new Command("Camera", Command.SCREEN, 1);
        cancelCommand = new Command("Cancel", Command.CANCEL, 2);
        captureCommand = new Command("Capture", Command.SCREEN, 1);
        settingsCommand = new Command("Settings", Command.SCREEN, 2);
        saveSettingsCommand = new Command("Save", Command.OK, 1);
        callCommand = new Command("Call", Command.ITEM, 2);
        openCommand = new Command("Open", Command.ITEM, 2);
        smsCommand = new Command("Send SMS", Command.ITEM, 2);
        // initialize settings form
        settingsForm = new Form(midletName);
        String[] resolutions = { "Automatic", "160x120", "320x240", "640x480" };
        resolutionChoiceGroup = new ChoiceGroup("Resolution: ", Choice.EXCLUSIVE, resolutions, null);
        settingsForm.append(resolutionChoiceGroup);
        settingsForm.addCommand(saveSettingsCommand);
        settingsForm.addCommand(cancelCommand);
        settingsForm.setCommandListener(this);
        // initialize waiting form
        waitForm = new Form(midletName);
        waitGauge = new Gauge("Processing, please wait...", false, Gauge.INDEFINITE, Gauge.CONTINUOUS_RUNNING);
        waitForm.append(waitGauge);
        // initialize player, videocontrol, canvas
        try {
            // create player and realize it
            player = createPlayer();
            player.realize();
            // get videocontrol
            videoControl = (VideoControl) player.getControl("VideoControl");
            // initialize camera canvas
            canvas = new CameraCanvas(this);
            // initialize video control
            videoControl.initDisplayMode(VideoControl.USE_DIRECT_VIDEO, canvas);
            videoControl.setDisplayFullScreen(true);
            videoControl.setVisible(true);
        } catch (Exception e) {
            handleException(e);
        }
        canvas.addCommand(exitCommand);
        canvas.addCommand(captureCommand);
        canvas.addCommand(settingsCommand);
        canvas.setCommandListener(this);
        showCamera();
    } else {
        // when resuming from paused state
        if (display.getCurrent() == canvas) {
            try {
                player.start();
            } catch (Exception e) {
                handleException(e);
            }
        }
        display.setCurrent(display.getCurrent());
    }
}
