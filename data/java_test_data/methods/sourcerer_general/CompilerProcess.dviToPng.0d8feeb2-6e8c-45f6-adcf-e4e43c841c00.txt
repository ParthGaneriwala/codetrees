private CompilerOutput dviToPng(CompilerOutput co) throws IOException {
    CompilerOutput output = new CompilerOutput("png", "image/png");
    output.setLog(co.getLog());
    File file = co.getOutput().get(0);
    String outName = file.getName() + "-%d.png";
    ProcessBuilder builder = new ProcessBuilder("dvipng", "\"" + file.getName() + "\"", "-o", "\"" + outName + "\"", "--truecolor1");
    builder.directory(userRoot);
    final Process process = builder.start();
    try {
        process.waitFor();
    } catch (InterruptedException e) {
        e.printStackTrace();
        output.getErrors().add(new ClsiServiceInternalErrorException("Process exceeded the maximum allowed execution time."));
        return output;
    }
    String line;
    String lastLine = "";
    BufferedReader input = new BufferedReader(new InputStreamReader(process.getInputStream()));
    try {
        while ((line = input.readLine()) != null) {
            lastLine = line;
        }
    } finally {
        input.close();
    }
    String[] pages = lastLine.replace("[", "").replace("]", "").split(" ");
    for (int i = 0; i < pages.length; i++) {
        File pageFile = new File(userRoot + File.separator + outName.replace("%d", pages[i]));
        if (pageFile.exists()) {
            output.getOutput().add(pageFile);
            try {
                createThumbnail(pageFile.getPath(), 200, pageFile.getPath() + "_tn");
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            output.getErrors().add(new ClsiServiceInternalErrorException("PNG conversion process failed to produce output."));
        }
    }
    return output;
}
