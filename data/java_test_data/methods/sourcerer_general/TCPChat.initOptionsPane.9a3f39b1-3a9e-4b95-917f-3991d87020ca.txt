// ///////////////////////////////////////////////////////////////
private static JPanel initOptionsPane() {
    JPanel pane = null;
    ActionAdapter buttonListener = null;
    // Create an options pane
    JPanel optionsPane = new JPanel(new GridLayout(5, 1));
    // IP address input
    pane = new JPanel(new FlowLayout(FlowLayout.RIGHT));
    pane.add(new JLabel("Host IP:"));
    ipField = new JTextField(10);
    ipField.setText(hostIP);
    ipField.setEnabled(false);
    ipField.addFocusListener(new FocusAdapter() {

        public void focusLost(FocusEvent e) {
            ipField.selectAll();
            // Should be editable only when disconnected
            if (connectionStatus != DISCONNECTED) {
                changeStatusNTS(NULL, true);
            } else {
                hostIP = ipField.getText();
            }
        }
    });
    pane.add(ipField);
    optionsPane.add(pane);
    // Port input
    pane = new JPanel(new FlowLayout(FlowLayout.RIGHT));
    pane.add(new JLabel("Porta:"));
    portField = new JTextField(10);
    portField.setEditable(true);
    portField.setText((new Integer(port)).toString());
    portField.addFocusListener(new FocusAdapter() {

        public void focusLost(FocusEvent e) {
            // should be editable only when disconnected
            if (connectionStatus != DISCONNECTED) {
                changeStatusNTS(NULL, true);
            } else {
                int temp;
                try {
                    temp = Integer.parseInt(portField.getText());
                    port = temp;
                } catch (NumberFormatException nfe) {
                    portField.setText((new Integer(port)).toString());
                    mainFrame.repaint();
                }
            }
        }
    });
    pane.add(portField);
    optionsPane.add(pane);
    // Host/guest option
    buttonListener = new ActionAdapter() {

        public void actionPerformed(ActionEvent e) {
            if (connectionStatus != DISCONNECTED) {
                changeStatusNTS(NULL, true);
            } else {
                isHost = e.getActionCommand().equals("host");
                // Cannot supply host IP if host option is chosen
                if (isHost) {
                    ipField.setEnabled(false);
                    ipField.setText("localhost");
                    hostIP = "localhost";
                } else {
                    ipField.setEnabled(true);
                }
            }
        }
    };
    ButtonGroup bg = new ButtonGroup();
    hostOption = new JRadioButton("Servidor", true);
    hostOption.setMnemonic(KeyEvent.VK_H);
    hostOption.setActionCommand("host");
    hostOption.addActionListener(buttonListener);
    guestOption = new JRadioButton("Cliente", false);
    guestOption.setMnemonic(KeyEvent.VK_G);
    guestOption.setActionCommand("guest");
    guestOption.addActionListener(buttonListener);
    bg.add(hostOption);
    bg.add(guestOption);
    pane = new JPanel(new GridLayout(1, 2));
    pane.add(hostOption);
    pane.add(guestOption);
    optionsPane.add(pane);
    // Connect/disconnect buttons
    JPanel buttonPane = new JPanel(new GridLayout(1, 2));
    buttonListener = new ActionAdapter() {

        public void actionPerformed(ActionEvent e) {
            // Request a connection initiation
            if (e.getActionCommand().equals("connect")) {
                changeStatusNTS(BEGIN_CONNECT, true);
            } else // Disconnect
            {
                changeStatusNTS(DISCONNECTING, true);
            }
        }
    };
    connectButton = new JButton("Conectar");
    connectButton.setMnemonic(KeyEvent.VK_C);
    connectButton.setActionCommand("connect");
    connectButton.addActionListener(buttonListener);
    connectButton.setEnabled(true);
    disconnectButton = new JButton("Desconectar");
    disconnectButton.setMnemonic(KeyEvent.VK_D);
    disconnectButton.setActionCommand("disconnect");
    disconnectButton.addActionListener(buttonListener);
    disconnectButton.setEnabled(false);
    buttonPane.add(connectButton);
    buttonPane.add(disconnectButton);
    optionsPane.add(buttonPane);
    return optionsPane;
}
