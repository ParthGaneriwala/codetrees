public void example() throws Exception {
    String destinationName = getDestinationJNDIName();
    InitialContext ic = null;
    ConnectionFactory cf = null;
    Connection connection = null;
    try {
        ic = new InitialContext();
        cf = (ConnectionFactory) ic.lookup("/ConnectionFactory");
        Queue queue = (Queue) ic.lookup(destinationName);
        log("Queue " + destinationName + " exists");
        connection = cf.createConnection();
        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
        MessageProducer sender = session.createProducer(queue);
        TextMessage message = session.createTextMessage("Hello!");
        sender.send(message);
        log("The message was successfully sent to the " + queue.getQueueName() + " queue");
        MessageConsumer consumer = session.createConsumer(queue);
        connection.start();
        message = (TextMessage) consumer.receive(2000);
        log("Received message: " + message.getText());
        assertEquals("Hello!", message.getText());
        displayProviderInfo(connection.getMetaData());
    } finally {
        if (ic != null) {
            try {
                ic.close();
            } catch (Exception e) {
                throw e;
            }
        }
        // ALWAYS close your connection in a finally block to avoid leaks.
        // Closing connection also takes care of closing its related objects e.g. sessions.
        closeConnection(connection);
    }
}
