protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    System.out.println("starting upload");
    if (ServletFileUpload.isMultipartContent(request)) {
        HttpSession session = request.getSession();
        Database db = (Database) session.getAttribute("db");
        Info in = (Info) session.getServletContext().getAttribute("in");
        if (db == null) {
            try {
                db = new Database();
            } catch (Exception e) {
                if (db != null)
                    db.disconnect();
            }
            session.setAttribute("db", db);
        }
        ResultSet rs = null;
        try {
            rs = db.dbQuery("select * from files where file_id = 0", true);
            FileUploadListener listener = new FileUploadListener();
            session.setAttribute("FULLIST", listener);
            ServletFileUpload upload = new ServletFileUpload();
            if (in != null)
                upload.setSizeMax(Integer.parseInt(in.upload_limit) * 1000);
            upload.setProgressListener(listener);
            FileItemIterator iter = upload.getItemIterator(request);
            rs.moveToInsertRow();
            while (iter.hasNext()) {
                FileItemStream item = iter.next();
                InputStream ins = item.openStream();
                if (item.isFormField()) {
                    rs.updateString(item.getFieldName(), Streams.asString(ins));
                } else {
                    ByteArrayOutputStream baos = new ByteArrayOutputStream();
                    DeflaterOutputStream def = new DeflaterOutputStream(baos);
                    InputStream is = item.openStream();
                    IOUtils.copy(is, def);
                    def.finish();
                    is.close();
                    is = null;
                    rs.updateBytes(item.getFieldName(), baos.toByteArray());
                    def.close();
                    baos.close();
                    baos = null;
                    def = null;
                    String filename = item.getName();
                    if (filename != null) {
                        filename = FilenameUtils.getName(filename);
                        if (filename != null) {
                            filename = filename.replaceAll("#", "");
                            filename = filename.replaceAll("%", "");
                        }
                    }
                    rs.updateString("filename", filename);
                    rs.updateString("content_type", item.getContentType());
                    rs.updateLong("size", listener.getContentLength());
                    rs.updateInt("contact_id", db.contact_id);
                }
                ins.close();
            }
            if (db != null)
                rs.updateString("uploaded_by", db.contact_name);
            else
                rs.updateString("uploaded_by", "Unknown");
            rs.updateTimestamp("uploaded", DateUtils.getTimestamp());
            rs.insertRow();
        } catch (SizeLimitExceededException e) {
            PrintWriter out = response.getWriter();
            response.setContentType("text/html");
            out.println("<script>window.alert(\"File too large!\\n----------------\\nThe uploaded file size was " + e.getActualSize() / 1000 + "K\\nThe permited size is " + in.upload_limit + "K\");" + "parent.location.replace(parent.location);</script>");
            out.flush();
            out.close();
        } catch (Throwable e) {
            e.printStackTrace();
        } finally {
            try {
                if (rs != null)
                    rs.getStatement().close();
            } catch (SQLException e) {
            }
            rs = null;
            db.disconnect();
        }
    }
}
