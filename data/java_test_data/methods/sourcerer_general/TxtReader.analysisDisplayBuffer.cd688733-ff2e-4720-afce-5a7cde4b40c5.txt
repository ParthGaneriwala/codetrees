public void analysisDisplayBuffer() {
    if (null == mDisplayBuffer) {
        return;
    }
    if (0 != mMyLines.size()) {
        mCurrentOffset = mMyLines.get(mCurrentLine).offset;
    }
    mMyLines.clear();
    int length = 0;
    int offset = 0;
    int width = 0;
    // The length of before current line
    int beforeLineLength = 0;
    for (offset = 0; offset < mDisplayBuffer.length; ) {
        int b = mDisplayBuffer[offset] & 0xff;
        if (b == 13) {
            // Use the blank instead of  \r
            mDisplayBuffer[offset] = ' ';
        }
        if (b == 10) {
            // \n
            length++;
            offset++;
            beforeLineLength++;
            if (isToUp) {
                /**
                 * If scroll up, the current offset is : read file skip length + current line length
                 */
                mMyLines.add(new TxtLine(mSkipLength + offset, length, beforeLineLength));
            } else {
                /**
                 * Scroll down
                 */
                mMyLines.add(new TxtLine(mCurrentOffset + offset, length, beforeLineLength));
            }
            length = 0;
            continue;
        }
        if (b > 0x7f) {
            // Chinese
            if (width + CR.ChineseFontWidth > mViewWidth) {
                /**
                 * Add to list
                 */
                if (isToUp) {
                    mMyLines.add(new TxtLine(mSkipLength + offset, length, beforeLineLength));
                } else {
                    mMyLines.add(new TxtLine(mCurrentOffset + offset, length, beforeLineLength));
                }
                length = 0;
                width = 0;
                continue;
            } else {
                offset += 2;
                length += 2;
                beforeLineLength += 2;
                width += CR.ChineseFontWidth;
            }
        } else {
            // Ascii
            if (width + CR.upperAsciiWidth > mViewWidth) {
                if (isToUp) {
                    mMyLines.add(new TxtLine(mSkipLength + offset, length, beforeLineLength));
                } else {
                    mMyLines.add(new TxtLine(mCurrentOffset + offset, length, beforeLineLength));
                }
                length = 0;
                width = 0;
                continue;
            } else {
                offset += 1;
                length += 1;
                beforeLineLength += 1;
                width += CR.upperAsciiWidth;
            }
        }
    }
    // Add the last line
    if (isToUp) {
        mMyLines.add(new TxtLine(mSkipLength + offset, length, beforeLineLength));
    } else {
        mMyLines.add(new TxtLine(mCurrentOffset + offset, length, beforeLineLength));
    }
    mCurrentLine = 0;
    System.gc();
}
