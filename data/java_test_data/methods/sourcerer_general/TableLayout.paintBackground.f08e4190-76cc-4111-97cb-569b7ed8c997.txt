public void paintBackground(Container parent, Graphics g) {
    int x = getStartX(parent);
    int y = getStartY(parent);
    // Paint the background color for the table
    if (getBackgroundColor() != null) {
        int width = size.width;
        int height = size.height;
        width += getMargin().left + getMargin().right;
        height += getMargin().top + getMargin().bottom;
        x -= getMargin().left;
        y -= getMargin().top;
        if (getBorder() != null) {
            width += getBorder().getBorderInsets(parent).left + getBorder().getBorderInsets(parent).right;
            height += getBorder().getBorderInsets(parent).top + getBorder().getBorderInsets(parent).bottom;
            x -= getBorder().getBorderInsets(parent).left;
            y -= getBorder().getBorderInsets(parent).top;
        }
        g.setColor(getBackgroundColor());
        // System.out.println("Painting background: " + x + ", " + y + ", " + width + ", " + height);
        g.fillRect(x, y, width, height);
    }
    // Paint the background image for the table
    if (getBackgroundImage() != null) {
        int width = size.width;
        int height = size.height;
        GUI.tileImage(getBackgroundImage(), g, x, y, width, height);
    }
    x = getStartX(parent);
    y = getStartY(parent);
    // Paint the background for each row
    for (int i = 0; i < rows.size(); i++) {
        rows.get(i).paintBackground(parent, g, x, y, size.width);
        y += rows.get(i).getHeight();
    }
    // Paint the background for each column
    y = getStartY(parent);
    for (int i = 0; i < columns.size(); i++) {
        columns.get(i).paintBackground(parent, g, x, y, size.height);
        x += columns.get(i).getWidth();
    }
    // Paint the background for each cell
    Iterator<TableCell> iterator = cells.values().iterator();
    while (iterator.hasNext()) {
        iterator.next().paintBackground(parent, g);
    }
}
