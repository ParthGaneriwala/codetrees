public String print() throws Exception {
    currentProject = this.getCurrentProject();
    if (cardData == null || !Constants.TASK_TYPE_PRINTER.equals(cardData.getTask())) {
        addActionError(getText("prd.print.error.noAuthority"));
        return SUCCESS;
    }
    try {
        String templateFile = null;
        Attachment attachment = attachmentManager.getAttachmentByProjectAndType(currentProject, Constants.ATTACHMENT_TYPE_TEMPLATE);
        if (attachment != null) {
            String uploadDir = ServletActionContext.getServletContext().getRealPath("/resources") + "/template/";
            String fileName = attachment.getFilePath();
            templateFile = uploadDir + fileName;
            File tmepFile = new File(templateFile);
            if (!tmepFile.exists()) {
                templateFile = null;
            }
        }
        if (templateFile == null) {
            addActionError(getText("prd.print.error.noTemplate"));
            return SUCCESS;
        }
        String imageFile = null;
        Attachment imageAttachment = cardData.getAttachment();
        if (imageAttachment != null) {
            String fileName = imageAttachment.getFilePath();
            imageFile = fileName;
            File tmepFile = new File(imageFile);
            if (!tmepFile.exists()) {
                imageFile = null;
            }
        }
        try {
            WordUtils.print(templateFile, imageFile, cardData);
        } catch (Exception ex) {
            List<String> args = new ArrayList<String>();
            args.add(ex.getMessage());
            addActionError(getText("prd.print.error.saved", args));
            initForm();
            return SUCCESS;
        }
        Set<CardDataStatus> cardDataStatuss = cardData.getCardDataStatuses();
        Workflow createCardWorkflow = workflowManager.getWorkflowByProjectAndType(this.getCurrentProject(), Constants.WORKFLOW_CREATE_CARD);
        if (createCardWorkflow != null) {
            WorkflowTask task = createCardWorkflow.getNextTask(cardData.getTask());
            if (task != null) {
                cardData.setTask(task.getTaskType());
                cardData.setStatus(Constants.CARD_STATUS_CREATING);
                cardData.setNextStatus(Constants.CARD_STATUS_CREATING);
            } else {
                cardData.setTask(null);
                cardData.setStatus(Constants.CARD_STATUS_CREATED);
                cardData.setNextStatus(Constants.CARD_STATUS_FINISHED);
            }
        } else {
            cardData.setTask(null);
            cardData.setStatus(Constants.CARD_STATUS_CREATED);
            cardData.setNextStatus(Constants.CARD_STATUS_FINISHED);
        }
        CardDataStatus cardDataStatus = new CardDataStatus();
        cardDataStatus.setCardData(cardData);
        cardDataStatus.setCreatedDate(new Date());
        cardDataStatus.setCreatedUser(this.getUser().getLoginName());
        cardDataStatus.setStatus(Constants.CARD_STATUS_PRINTER);
        cardDataStatuss.add(cardDataStatus);
        cardData.setCardDataStatuses(cardDataStatuss);
        cardData = (CardData) this.cardDataManager.save(cardData);
    } catch (Exception ex) {
        List<String> args = new ArrayList<String>();
        args.add(ex.getMessage());
        addActionError(getText("prd.print.error.saved", args));
        initForm();
        return SUCCESS;
    }
    saveMessage(getText("prd.print.added"));
    if ("hf".equals(cardData.getTask())) {
        this.hfEdit();
        return "hf";
    }
    if ("uhf".equals(cardData.getTask())) {
        this.uhfEdit();
        return "uhf";
    }
    initForm();
    return SUCCESS;
}
