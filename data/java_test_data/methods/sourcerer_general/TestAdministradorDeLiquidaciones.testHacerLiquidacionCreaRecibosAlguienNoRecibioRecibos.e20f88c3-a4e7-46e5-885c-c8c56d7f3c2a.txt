public void testHacerLiquidacionCreaRecibosAlguienNoRecibioRecibos() {
    // En la base de datos ya hay socios cargados
    // Primer liquidacion. Recibos "no devueltos"
    AdministradorDeLiquidaciones.HacerLiquidacion();
    Liquidacion liquidacion1 = AdministradorDeLiquidaciones.getUltimaLiquidacion();
    // El socio0 debe el mes 1
    ((Recibo) liquidacion1.getRecibosFor(socios[0]).get(0)).setDevuelto(true);
    // El socio1 debe el mes 1
    ((Recibo) liquidacion1.getRecibosFor(socios[1]).get(0)).setDevuelto(true);
    // Primer liquidacion. Recibos "no devueltos"
    AdministradorDeLiquidaciones.HacerLiquidacion();
    Liquidacion liquidacion2 = AdministradorDeLiquidaciones.getUltimaLiquidacion();
    // El socio0 debe el mes 1
    ((Recibo) liquidacion2.getRecibosFor(socios[0]).get(0)).setDevuelto(true);
    // El socio0 debe el mes 2
    ((Recibo) liquidacion2.getRecibosFor(socios[0]).get(1)).setDevuelto(true);
    // El socio1 debe el mes 1
    ((Recibo) liquidacion2.getRecibosFor(socios[1]).get(0)).setDevuelto(true);
    // El socio1 debe el mes 2
    ((Recibo) liquidacion2.getRecibosFor(socios[1]).get(1)).setDevuelto(true);
    // El socio2 debe solo el mes 2
    ((Recibo) liquidacion2.getRecibosFor(socios[2]).get(0)).setDevuelto(true);
    // Tercera liquidacion.
    AdministradorDeLiquidaciones.HacerLiquidacion();
    Liquidacion liquidacion3 = AdministradorDeLiquidaciones.getUltimaLiquidacion();
    // Se supone que no hay recibos para el socio 0 y 1
    // El socio2 debe el mes 2
    ((Recibo) liquidacion3.getRecibosFor(socios[2]).get(0)).setDevuelto(true);
    // El socio2 debe el mes 3
    ((Recibo) liquidacion3.getRecibosFor(socios[2]).get(1)).setDevuelto(true);
    // Cuarta liquidacion.
    AdministradorDeLiquidaciones.HacerLiquidacion();
    Liquidacion liquidacion4 = AdministradorDeLiquidaciones.getUltimaLiquidacion();
    // No tiene que haber recibos para los socios 0, 1 y 2
    assertEquals(0, liquidacion4.getRecibosFor(socios[0]).size());
    assertEquals(0, liquidacion4.getRecibosFor(socios[1]).size());
    assertEquals(0, liquidacion4.getRecibosFor(socios[2]).size());
    // Tiene que haber un recibo para el resto de los socios comunes
    assertEquals(1, liquidacion4.getRecibosFor(socios[3]).size());
    assertEquals(1, liquidacion4.getRecibosFor(socios[4]).size());
    assertEquals(1, liquidacion4.getRecibosFor(socios[5]).size());
    // No tiene que haber recibo para los socios vitalicios
    assertTrue(liquidacion4.getRecibosFor(socios[6]).isEmpty());
    // Tiene que haber un recibo para el titular del grupo familiar
    assertEquals(1, liquidacion4.getRecibosFor(socios[7]).size());
    // No tiene que haber recibos para los integrantes del grupo familiar
    assertTrue(liquidacion4.getRecibosFor(socios[8]).isEmpty());
    assertTrue(liquidacion4.getRecibosFor(socios[9]).isEmpty());
    // En total, debe haber solo 4 recibos.. Ni mas ni menos!
    assertEquals(liquidacion4.getRecibos().size(), 4);
}
