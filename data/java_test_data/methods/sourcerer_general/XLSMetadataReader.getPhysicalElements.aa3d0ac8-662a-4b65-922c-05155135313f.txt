private List<PhysicalElement> getPhysicalElements(Sheet physicalSheet) throws InvalidMetadataFormatException {
    XLSSheets sheet = XLSSheets.findSheet(physicalSheet.getName());
    if (sheet == null) {
        handleFormatError("Sheet not found! Check sheets names. ", sheet);
        return null;
    }
    List<PhysicalElement> phElements = new ArrayList<PhysicalElement>();
    for (int i = HEADER_ROWS_NR; i < physicalSheet.getRows(); i++) {
        String elementTypeName = physicalSheet.getCell(E_TYPE_COL_NR, i).getContents().trim();
        String label = physicalSheet.getCell(E_LABEL_COL_NR, i).getContents().trim();
        String virtualElementName = physicalSheet.getCell(E_IDENTIFIER_COL_NR, i).getContents().trim();
        if (elementTypeName.equals("") && label.equals("") && virtualElementName.equals(""))
            continue;
        if (elementTypeName.equals(""))
            handleFormatError("Element type " + "cannot be null.", sheet, E_TYPE_COL_NR, i);
        PhysicalElement pe = new PhysicalElement();
        ElementType et = typeMap.get(elementTypeName);
        if (et == null)
            handleFormatError("Element type " + elementTypeName + " undefined.", sheet, E_TYPE_COL_NR, i);
        pe.setElementType(et);
        if (label.equals(""))
            handleFormatError("Element label " + "cannot be null.", sheet, E_LABEL_COL_NR, i);
        pe.setLabel(label);
        VirtualElement ve = elementMap.get(virtualElementName);
        if (ve != null) {
            pe.setVirtualElement(ve);
            ve.setPhysicalElement(pe);
            complexMap.put(ve, pe);
        }
        phElements.add(pe);
        Set<Field> fields = pe.getElementType().getFields();
        for (int j = E_ATTRIBUTES_COL_NR; j < physicalSheet.getColumns(); j++) {
            String value = physicalSheet.getCell(j, i).getContents();
            if (value.equals(""))
                break;
            String[] pair = value.split(":");
            if (pair.length != 2)
                handleFormatError("Wrong attribute: " + value, sheet, j, i);
            boolean fieldExists = false;
            for (Field field : fields) {
                if (field.getFieldName().equals(pair[0])) {
                    fieldExists = true;
                    break;
                }
            }
            if (fieldExists)
                pe.setAttribute(pair[0], pair[1]);
            else
                handleFormatError("Field: " + value + " not exists", sheet, j, i);
        }
    }
    return phElements;
}
