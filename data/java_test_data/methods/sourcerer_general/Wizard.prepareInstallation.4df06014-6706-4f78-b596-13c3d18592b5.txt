/**
 * Prepara la ejecuci贸n de la instalaci贸n.
 *
 * @return Un Vector con la secuencia de comandos para la instlaaci贸n
 */
private Vector prepareInstallation() {
    Iterator<String> filesToCopyIterator;
    Vector<Command> commands;
    File folderToCreate;
    String fileToCopy;
    File destination;
    CrearAccesoDirecto accesoDirecto;
    CopiarArchivo copiarArchivo;
    CrearCarpeta crearCarpeta;
    String shortcutName;
    boolean desktopShortcut;
    boolean programsShortcut;
    File shortcutDestination;
    File sourceFile;
    File destFile;
    copying.setStatus("Preparando secuencia de comandos para la instalaci贸n...");
    destination = new File(location.getDestinationFolder());
    commands = new Vector<Command>();
    if (!destination.exists()) {
        folderToCreate = destination;
        while (!folderToCreate.exists()) {
            crearCarpeta = new CrearCarpeta(folderToCreate);
            commands.add(0, crearCarpeta);
            folderToCreate = folderToCreate.getParentFile();
        }
    }
    filesToCopyIterator = setupData.getFilesToCopy().iterator();
    while (filesToCopyIterator.hasNext()) {
        fileToCopy = filesToCopyIterator.next();
        sourceFile = new File(fileToCopy);
        destFile = new File(destination, fileToCopy);
        copiarArchivo = new CopiarArchivo(sourceFile, destFile);
        commands.add(copiarArchivo);
    }
    if (setupData.getShortcut()) {
        shortcutDestination = new File(destination, setupData.getDesktopShortcutDestination());
        shortcutName = setupData.getApplicationName();
        desktopShortcut = shortcut.getCreateDesktopShortcut();
        programsShortcut = shortcut.getCreateProgramsShortcut();
        if (desktopShortcut || programsShortcut) {
            if (hostSystem == HostSystem.Windows) {
                accesoDirecto = new CrearAccesoDirectoWindows(setupData.getApplicationName(), shortcutDestination, desktopShortcut, programsShortcut);
                commands.add(accesoDirecto);
            } else if (hostSystem == HostSystem.Linux) {
                accesoDirecto = new CrearAccesoDirectoLinux(setupData.getApplicationName(), shortcutDestination, desktopShortcut, programsShortcut);
                commands.add(accesoDirecto);
            }
        }
    }
    return commands;
}
