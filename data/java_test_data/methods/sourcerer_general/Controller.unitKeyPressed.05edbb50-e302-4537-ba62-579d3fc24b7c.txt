private void unitKeyPressed(KeyEvent e) {
    if (driver.getCurrentPlayer().getCurrentUnit().getDestinationTile() == null) {
        switch(e.getKeyCode()) {
            case KeyEvent.VK_SPACE:
                MainScreen.writeToConsole("Controller: Current Unit does nothing this turn", Color.BLUE);
                driver.getCurrentPlayer().getCurrentUnit().setRemainingMoves(0);
                driver.getCurrentPlayer().selectNextUnit();
                driver.getMainScreen().getStatusViewport().displayUnit();
                lastSelected = EntityType.UNIT;
                break;
            case KeyEvent.VK_NUMPAD8:
                MainScreen.writeToConsole("Controller: Move unit north", Color.BLUE);
                driver.getCurrentPlayer().getCurrentUnit().setOrientation("N");
                driver.getMap().move(driver.getCurrentPlayer().getCurrentUnit(), 8);
                break;
            case KeyEvent.VK_NUMPAD9:
                MainScreen.writeToConsole("Controller: Move unit northeast", Color.BLUE);
                driver.getCurrentPlayer().getCurrentUnit().setOrientation("NE");
                driver.getMap().move(driver.getCurrentPlayer().getCurrentUnit(), 9);
                break;
            case KeyEvent.VK_NUMPAD6:
                MainScreen.writeToConsole("Controller: Move unit east", Color.BLUE);
                driver.getCurrentPlayer().getCurrentUnit().setOrientation("E");
                driver.getMap().move(driver.getCurrentPlayer().getCurrentUnit(), 6);
                break;
            case KeyEvent.VK_NUMPAD3:
                MainScreen.writeToConsole("Controller: Move unit southeast", Color.BLUE);
                driver.getCurrentPlayer().getCurrentUnit().setOrientation("SE");
                driver.getMap().move(driver.getCurrentPlayer().getCurrentUnit(), 3);
                break;
            case KeyEvent.VK_NUMPAD2:
                MainScreen.writeToConsole("Controller: Move unit south", Color.BLUE);
                driver.getCurrentPlayer().getCurrentUnit().setOrientation("S");
                driver.getMap().move(driver.getCurrentPlayer().getCurrentUnit(), 2);
                break;
            case KeyEvent.VK_NUMPAD1:
                MainScreen.writeToConsole("Controller: Move unit southwest", Color.BLUE);
                driver.getCurrentPlayer().getCurrentUnit().setOrientation("SW");
                driver.getMap().move(driver.getCurrentPlayer().getCurrentUnit(), 1);
                break;
            case KeyEvent.VK_NUMPAD4:
                MainScreen.writeToConsole("Controller: Move unit west", Color.BLUE);
                driver.getCurrentPlayer().getCurrentUnit().setOrientation("W");
                driver.getMap().move(driver.getCurrentPlayer().getCurrentUnit(), 4);
                break;
            case KeyEvent.VK_NUMPAD7:
                MainScreen.writeToConsole("Controller: Move unit northwest", Color.BLUE);
                driver.getCurrentPlayer().getCurrentUnit().setOrientation("NW");
                driver.getMap().move(driver.getCurrentPlayer().getCurrentUnit(), 7);
                break;
            case KeyEvent.VK_B:
                MainScreen.writeToConsole("Controller: Create Base", Color.BLUE);
                Unit temp = driver.getCurrentPlayer().getCurrentUnit();
                if (temp instanceof Colonist) {
                    ((Colonist) temp).createBase();
                } else
                    MainScreen.writeToConsole("Controller: Unit cannot create Base", Color.BLUE);
                break;
            case KeyEvent.VK_Q:
                MainScreen.writeToConsole("Controller: Start creating Mission", Color.BLUE);
                userCreatingMission = true;
                destTileX = driver.getCurrentPlayer().getCurrentUnit().getPosition().getX();
                destTileY = driver.getCurrentPlayer().getCurrentUnit().getPosition().getY();
                MainScreen.writeToConsole("Controller:  destX: " + destTileX + " destY: " + destTileY, Color.BLUE);
                break;
            case KeyEvent.VK_H:
                MainScreen.writeToConsole("Controller: Heal Unit", Color.BLUE);
                Unit hurtUnit = driver.getCurrentPlayer().getCurrentUnit();
                if (hurtUnit != null) {
                    Base tileBase = hurtUnit.getPosition().getBase();
                    if (tileBase != null) {
                        tileBase.healUnit(hurtUnit);
                    }
                }
                break;
        }
    }
}
