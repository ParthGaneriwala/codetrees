public void testJobQueues() throws IOException {
    JobClient jc = new JobClient(mrCluster.createJobConf());
    String expectedQueueInfo = "Maximum Tasks Per Job :: 10";
    JobQueueInfo[] queueInfos = jc.getQueues();
    assertNotNull(queueInfos);
    assertEquals(1, queueInfos.length);
    assertEquals("default", queueInfos[0].getQueueName());
    JobConf conf = mrCluster.createJobConf();
    FileSystem fileSys = dfsCluster.getFileSystem();
    // configure a waiting job
    conf = configureWaitingJob(conf);
    conf.setJobName("test-job-queue-info-test");
    // clear the signal file if any
    TestJobTrackerRestart.cleanUp(fileSys, TEST_DIR);
    RunningJob rJob = jc.submitJob(conf);
    while (rJob.getJobState() != JobStatus.RUNNING) {
        TestJobTrackerRestart.waitFor(10);
    }
    int numberOfJobs = 0;
    for (JobQueueInfo queueInfo : queueInfos) {
        JobStatus[] jobStatusList = jc.getJobsFromQueue(queueInfo.getQueueName());
        assertNotNull(queueInfo.getQueueName());
        assertNotNull(queueInfo.getSchedulingInfo());
        assertEquals(expectedQueueInfo, queueInfo.getSchedulingInfo());
        numberOfJobs += jobStatusList.length;
        for (JobStatus status : jobStatusList) {
            assertEquals(JOB_SCHEDULING_INFO, status.getSchedulingInfo());
        }
    }
    assertEquals(1, numberOfJobs);
}
