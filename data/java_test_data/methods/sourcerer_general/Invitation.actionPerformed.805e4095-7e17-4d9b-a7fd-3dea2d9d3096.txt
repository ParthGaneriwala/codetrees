public void actionPerformed(ActionEvent e) {
    if (e.getSource() == addButton) {
        String uname = guestnameTextField.getText();
        guestnameTextField.setText("");
        Register register = new Register();
        // System.out.println("uanem+" + uname + "+");
        if (!register.check_name(uname)) {
            JOptionPane.showMessageDialog(this, "User does not exists!", "Input Error", JOptionPane.ERROR_MESSAGE);
        } else if ((OrgUser.ID().compareTo(uname) == 0)) {
            JOptionPane.showMessageDialog(this, "You the the event organizer!", "Input Error", JOptionPane.ERROR_MESSAGE);
        } else {
            addedguestTextArea.append("[" + uname + "] ");
            guest[noguset] = uname;
            noguset++;
        }
    } else if (e.getSource() == cancelButton) {
        setVisible(false);
        dispose();
    } else if (e.getSource() == clearButton) {
        for (int j = 0; j < guest.length; j++) {
            guest[j] = null;
            noguset = 0;
        }
        guestnameTextField.setText("");
        addedguestTextArea.setText("");
        minguestTextField.setText("0");
        // yearTextField.setText("YYYY");
        // monthTextField.setText("MM");
        // dateTextField.setText("DD");
        yearTextField.setText("2009");
        monthTextField.setText("11");
        dateTextField.setText("16");
    } else if (e.getSource() == inviteButton) {
        today = new GregorianCalendar();
        currentY = today.get(Calendar.YEAR);
        currentD = today.get(today.DAY_OF_MONTH);
        int temp = today.get(today.MONTH) + 1;
        currentM = temp;
        if (noguset == 0) {
            JOptionPane.showMessageDialog(this, "You have not invited any user!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Register register = new Register();
        int no = Utility.getNumber(minguestTextField.getText());
        if (no >= register.no_of_users()) {
            JOptionPane.showMessageDialog(this, "Invalid! Minimum guest is larger that total number of users!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (no > noguset + 1) {
            JOptionPane.showMessageDialog(this, "Invalid! Minimum guest is larger that the number of invited guest!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int[] date = new int[3];
        date[0] = Utility.getNumber(yearTextField.getText());
        if (date[0] < 1980) {
            JOptionPane.showMessageDialog(this, "Please input proper year", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        date[1] = Utility.getNumber(monthTextField.getText());
        if (date[1] <= 0 || date[1] > 12) {
            JOptionPane.showMessageDialog(this, "Please input proper month", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        date[2] = Utility.getNumber(dateTextField.getText());
        int monthDay = CalGrid.monthDays[date[1] - 1];
        if (date[1] == 2) {
            GregorianCalendar c = new GregorianCalendar();
            if (c.isLeapYear(date[0]))
                monthDay = 29;
        }
        if (date[2] <= 0 || date[2] > monthDay) {
            JOptionPane.showMessageDialog(this, "Please input proper day", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (currentY > date[0] || currentM > date[1] || (currentM == date[1] & currentD > date[2])) {
            JOptionPane.showMessageDialog(this, "The deadline has passed already!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (date[0] > InvAppt.TimeSpan().StartTime().getYear() + 1900 || date[1] > InvAppt.TimeSpan().StartTime().getMonth() + 1 || ((date[1] == InvAppt.TimeSpan().StartTime().getMonth() + 1) & (date[2] >= InvAppt.TimeSpan().StartTime().getDate()))) {
            JOptionPane.showMessageDialog(this, "The deadline should be before the date of appointment!", "Input Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        setVisible(false);
        // summary = new Summary(new CheckInvitation());
        summary = new Summary(parent);
        summary.setAppt(InvAppt);
        summary.setUser(OrgUser);
        summary.setGuest(guest);
        summary.setInv(this);
        summary.setDeadline(yearTextField.getText(), monthTextField.getText(), dateTextField.getText());
        summary.init();
        // summary.setParent(applist);
        summary.setVisible(true);
    }
}
