public int doStartTag() throws JspException {
    try {
        if (timestamp != null) {
            String timeZone = null;
            Locale locale = null;
            // Retrieve the user's timezone from their session
            User thisUser = (User) pageContext.getSession().getAttribute(Constants.SESSION_USER);
            if (thisUser != null) {
                timeZone = thisUser.getTimeZone();
                locale = thisUser.getLocale();
            }
            if (locale == null) {
                locale = Locale.getDefault();
            }
            // Determine the output type
            if (pattern != null && "relative".equals(pattern)) {
                // Output a relative date
                String relativeDate = DateUtils.createRelativeDate(timestamp);
                if (relativeDate != null) {
                    this.pageContext.getOut().write(relativeDate);
                }
            } else {
                // Format the specified timestamp with the retrieved timezone
                SimpleDateFormat formatter = null;
                if (dateOnly) {
                    formatter = (SimpleDateFormat) SimpleDateFormat.getDateInstance(dateFormat, locale);
                    formatter.applyPattern(DateUtils.get4DigitYearDateFormat(formatter.toLocalizedPattern()));
                } else if (timeOnly) {
                    formatter = (SimpleDateFormat) SimpleDateFormat.getTimeInstance(timeFormat, locale);
                } else {
                    formatter = (SimpleDateFormat) SimpleDateFormat.getDateTimeInstance(dateFormat, timeFormat, locale);
                    formatter.applyPattern(DateUtils.get4DigitYearDateFormat(formatter.toLocalizedPattern()));
                }
                // Use a Java formatter pattern
                if (pattern != null) {
                    formatter.applyPattern(pattern);
                }
                // Adjust the date/time based on any timezone
                if (timeZone != null) {
                    java.util.TimeZone tz = java.util.TimeZone.getTimeZone(timeZone);
                    formatter.setTimeZone(tz);
                }
                this.pageContext.getOut().write(formatter.format(timestamp));
            }
        } else {
            // no date found, output default
            this.pageContext.getOut().write(defaultValue);
        }
    } catch (Exception e) {
        LOG.debug("Conversion error", e);
    }
    return SKIP_BODY;
}
