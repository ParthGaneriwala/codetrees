public void collide() {
    // Update awake contacts.
    BBContact c = m_contactList;
    while (c != null) {
        BBFixture fixtureA = c.getFixtureA();
        BBFixture fixtureB = c.getFixtureB();
        BBBody bodyA = fixtureA.getBody();
        BBBody bodyB = fixtureB.getBody();
        if (bodyA.isSleeping() & bodyB.isSleeping()) {
            c = c.GetNext();
            continue;
        }
        // Is this contact flagged for filtering?
        if ((c.m_flags & BBContact.e_filterFlag) != 0) {
            // Are both bodies static?
            if (bodyA.isStatic() & bodyB.isStatic()) {
                BBContact cNuke = c;
                c = cNuke.GetNext();
                destroy(cNuke);
                continue;
            }
            // Does a joint override collision?
            if (bodyB.isConnected(bodyA)) {
                BBContact cNuke = c;
                c = cNuke.GetNext();
                destroy(cNuke);
                continue;
            }
            // Check user filtering.
            if (!m_contactFilter.shouldCollide(fixtureA, fixtureB)) {
                BBContact cNuke = c;
                c = cNuke.GetNext();
                destroy(cNuke);
                continue;
            }
            // Clear the filtering flag.
            c.m_flags &= ~BBContact.e_filterFlag;
        }
        int proxyIdA = fixtureA.m_proxyId;
        int proxyIdB = fixtureB.m_proxyId;
        boolean overlap = m_broadPhase.testOverlap(proxyIdA, proxyIdB);
        // Here we destroy contacts that cease to overlap in the broad-phase.
        if (!overlap) {
            BBContact cNuke = c;
            c = cNuke.GetNext();
            destroy(cNuke);
            continue;
        }
        // The contact persists.
        c.Update(m_contactListener);
        c = c.GetNext();
    }
}
