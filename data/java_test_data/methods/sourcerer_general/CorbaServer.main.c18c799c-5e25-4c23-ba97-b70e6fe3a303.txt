public static void main(String[] args) {
    // Start up ICE client
    Ice.Communicator communicator = null;
    RoutingEnginePrx proxy = null;
    try {
        // 
        // Boilerplate code for starting up the Ice proxy
        // 
        Ice.Properties properties = Ice.Util.createProperties();
        properties.load("config_client");
        Ice.InitializationData id = new Ice.InitializationData();
        id.properties = properties;
        communicator = Ice.Util.initialize(id);
        String objectName = "routingengine:tcp -h localhost -p 10000";
        Ice.ObjectPrx base = communicator.stringToProxy(objectName);
        proxy = RoutingEnginePrxHelper.checkedCast(base.ice_twoway().ice_timeout(-1).ice_secure(false));
        if (proxy == null) {
            System.err.println("invalid proxy");
            System.exit(1);
        }
        try {
            // create and initialize the ORB
            ORB orb = ORB.init(args, null);
            // get reference to rootpoa & activate the POAManager
            POA rootpoa = POAHelper.narrow(orb.resolve_initial_references("RootPOA"));
            rootpoa.the_POAManager().activate();
            // create servant and register it with the ORB
            RoutingImpl routingImpl = new RoutingImpl();
            routingImpl.setRoutingProxy(proxy);
            routingImpl.setORB(orb);
            // get object reference from the servant
            org.omg.CORBA.Object ref = rootpoa.servant_to_reference(routingImpl);
            RoutingEngine href = RoutingEngineHelper.narrow(ref);
            // get the root naming context
            org.omg.CORBA.Object objRef = orb.resolve_initial_references("NameService");
            // Use NamingContextExt which is part of the Interoperable
            // Naming Service (INS) specification.
            NamingContextExt ncRef = NamingContextExtHelper.narrow(objRef);
            // bind the Object Reference in Naming
            String name = "RoutingEngine";
            NameComponent[] path = ncRef.to_name(name);
            ncRef.rebind(path, href);
            System.out.println("RoutingEngine server ready and waiting ...");
            // wait for invocations from clients
            orb.run();
        } catch (Exception e) {
            System.err.println("ERROR: " + e);
            e.printStackTrace(System.out);
        }
        System.out.println("RoutingEngine server exiting ...");
    } catch (Ice.LocalException ex) {
        ex.printStackTrace();
        System.exit(1);
    } catch (Throwable e) {
        e.printStackTrace();
    } finally {
        // 
        // Shutdown the communicator, if it exists
        // 
        System.err.println("Shutting down Ice communicator");
        if (communicator != null) {
            try {
                communicator.destroy();
            } catch (Ice.LocalException ex) {
                ex.printStackTrace();
                System.exit(1);
            }
        }
    }
}
