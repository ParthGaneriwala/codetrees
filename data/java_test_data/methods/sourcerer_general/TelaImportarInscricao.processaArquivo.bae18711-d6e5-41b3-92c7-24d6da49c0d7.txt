private void processaArquivo(File arquivo) throws Exception {
    FileReader frArquivo = new FileReader(arquivo);
    Scanner scnLeitor = new Scanner(frArquivo);
    List<IObjetoSistema> listaCandidatosBanco = new Candidato().obterTodosPorFiltro(filtroCandidatosBanco());
    boolean isConcursoCorreto = true;
    int codigoConcurso = 0;
    // Processar arquivo
    while (scnLeitor.hasNextLine()) {
        Concurso concurso = (Concurso) getObjDados();
        Candidato candidato = new Candidato();
        boolean isCadastrado = false;
        candidato.setConcurso(concurso);
        String[] strCandidato = scnLeitor.nextLine().split("�");
        // Verifica se as inscri��es s�o para esse concurso
        codigoConcurso = Integer.parseInt(strCandidato[19]);
        if (concurso.getCodigo() != codigoConcurso) {
            isConcursoCorreto = false;
            break;
        }
        for (IObjetoSistema objeto : getListaCandidatos()) {
            Candidato candidatoCadastrado = (Candidato) objeto;
            if (candidatoCadastrado.getNumeroInscricao().equals(strCandidato[0])) {
                isCadastrado = true;
                break;
            }
        }
        // Verifica se os objetos ja est�o no banco
        for (IObjetoSistema objeto : listaCandidatosBanco) {
            Candidato candidatoBanco = (Candidato) objeto;
            if (candidatoBanco.getNumeroInscricao().equals(strCandidato[0])) {
                isCadastrado = true;
                break;
            }
        }
        if (!isCadastrado) {
            candidato.setNumeroInscricao(strCandidato[0]);
            candidato.setNome(strCandidato[1]);
            candidato.setIdentidade(strCandidato[2]);
            candidato.setCpf(strCandidato[3]);
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
            candidato.setDataNascimento(formato.parse(strCandidato[4]));
            // quantidade de filhos
            if (!((String) strCandidato[5]).equals("null") && !((String) strCandidato[5]).equals("")) {
                candidato.setQuantidadeFilhos(Integer.parseInt(strCandidato[5]));
            }
            candidato.setTelefone(strCandidato[6]);
            candidato.setCelular(strCandidato[7]);
            candidato.setSexo((Sexo) new Sexo().obterObjeto(Integer.parseInt(strCandidato[8])));
            candidato.setEndereco(strCandidato[9]);
            candidato.setBairro(strCandidato[10]);
            candidato.setCidade(obterCidade(strCandidato[11]));
            candidato.setCep(strCandidato[12]);
            candidato.setCargo(obterCargo(strCandidato[13], concurso.getCodigo(), candidato.getCpf()));
            candidato.setEscolaridade((Escolaridade) new Escolaridade().getTodasEscolaridade().get(Integer.parseInt(strCandidato[14]) - 1));
            candidato.setEmail(strCandidato[15]);
            candidato.setDeficienteFisico(Boolean.parseBoolean(strCandidato[16]));
            candidato.setDescricaoDeficiencia(strCandidato[17]);
            candidato.setDataInscricao(formato.parse(strCandidato[18]));
            getListaCandidatos().add(candidato);
        }
    }
    if (!isConcursoCorreto) {
        Concurso outroConcurso = (Concurso) new Concurso().obterObjeto(codigoConcurso);
        if (outroConcurso != null) {
            listaCandidatos = new ArrayList<IObjetoSistema>();
            JOptionPane.showMessageDialog(this, "Estas inscri��es fazem parte do concurso: " + outroConcurso.getNome() + "\n" + "E n�o do concurso : " + ((Concurso) getObjDados()).getNome());
        } else {
            JOptionPane.showMessageDialog(this, "Inscri��es feitas para concurso inexistente!");
        }
    }
    scnLeitor.close();
    frArquivo.close();
}
