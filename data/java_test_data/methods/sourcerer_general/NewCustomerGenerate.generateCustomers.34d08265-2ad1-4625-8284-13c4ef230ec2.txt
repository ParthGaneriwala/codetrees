public static void generateCustomers() throws Exception {
    Connection con = null;
    try {
        con = getConn();
        con.setAutoCommit(false);
        // String sql="select username,idcard from tusr_customer_new group
        // by username,idcard having count(*)>=2";
        // String sql="select * from tusr_customer_new where idcard is null
        // order by username,idcard ";
        String sql = "select a.* from tusr_customer_new a inner join (select username,idcard from tusr_customer_new group by username,idcard having count(*)>=2) b on a.username=b.username and a.idcard=b.idcard  order by a.username,a.idcard ";
        java.sql.Statement stmt = con.createStatement();
        ResultSet rs = stmt.executeQuery(sql);
        String temp = "";
        // 删除掉后面的customerid
        List deletecustomersql = new ArrayList();
        // 更新tusr_customer_service里的customerid
        List updatecustomerservicesql = new ArrayList();
        // 存储最开始的那个customerid
        Map<String, String> maps = new HashMap<String, String>();
        // List existkey=new ArrayList();
        while (rs.next()) {
            int customerid = rs.getInt("customerid");
            String username = rs.getString("username");
            String idcard = rs.getString("idcard");
            int createsrc = rs.getInt("createsrc");
            int createsrcid = rs.getInt("createsrcid");
            String key = username + "," + idcard;
            String customerids = "";
            if (maps.containsKey(key)) {
                String firstid = maps.get(key);
                // 删掉后面的
                String delsql = "delete from tusr_customer_new where customerid=" + customerid;
                // 更新后面的customerid关联到第一个customerid
                String updsql = "update tusr_customer_service set customerid=" + firstid + " where customerid=" + customerid;
                // System.out.println(delsql);
                // System.out.println(updsql);
                deletecustomersql.add(delsql);
                updatecustomerservicesql.add(updsql);
            } else {
                maps.put(key, customerid + "");
            }
        }
        rs.close();
        stmt.close();
        // 先更新
        executeBatch(con, updatecustomerservicesql);
        // 后删除
        executeBatch(con, deletecustomersql);
        con.commit();
        con.setAutoCommit(true);
    } catch (SQLException e) {
        e.printStackTrace();
        con.rollback();
    }
    con.close();
}
