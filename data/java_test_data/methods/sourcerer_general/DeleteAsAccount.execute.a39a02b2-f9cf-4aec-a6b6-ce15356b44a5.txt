public boolean execute(ComponentContext context) {
    String url = "";
    String domainName = "";
    String code = "";
    String clientId = "";
    // Component properties
    // A reusable connection
    CRMConnection connection = null;
    String cookie;
    // Populate the variables
    if (!StringUtils.hasText(context.getParameter("suite.url"))) {
        url = context.getApplicationPrefs().get("CONCURSIVE_CRM.SERVER");
    } else {
        url = context.getParameter("suite.url");
    }
    if (!StringUtils.hasText(context.getParameter("suite.domainName"))) {
        domainName = context.getApplicationPrefs().get("CONCURSIVE_CRM.ID");
    } else {
        domainName = context.getParameter("suite.domainName");
    }
    if (!StringUtils.hasText(context.getParameter("suite.code"))) {
        code = context.getApplicationPrefs().get("CONCURSIVE_CRM.CODE");
    } else {
        code = context.getParameter("suite.code");
    }
    clientId = context.getApplicationPrefs().get("CONCURSIVE_CRM.CLIENT");
    cookie = (String) context.getGlobalParameter(parameterName);
    // Create the connection
    connection = new CRMConnection();
    connection.setUrl(url);
    connection.setId(domainName);
    connection.setCode(code);
    // Prepare an account insert transaction
    connection.setAutoCommit(true);
    // Find the account's orgId
    int orgId = -1;
    String orgName = null;
    {
        // Add Meta Info with fields required
        ArrayList<String> meta = new ArrayList<String>();
        meta.add("orgId");
        meta.add("name");
        connection.setTransactionMeta(meta);
        // Find the account id
        DataRecord record = new DataRecord();
        record.setName("accountList");
        record.setAction(DataRecord.SELECT);
        record.addField("custom1", context.getParameter("lead.custom1"));
        connection.save(record);
        orgId = Integer.parseInt(connection.getResponseValue("orgId"));
        orgName = connection.getResponseValue("name");
    }
    // An orgId to update must exist
    if (orgId == -1) {
        return false;
    }
    // Account record transaction
    ArrayList<String> meta = new ArrayList<String>();
    DataRecord account = new DataRecord();
    account.setAction(DataRecord.DELETE);
    account.setName("account");
    // Set the uniqueId
    account.addField("id", orgId);
    connection.save(account);
    // Submit everything...
    boolean success = connection.commit();
    checkCookie(context, connection, cookie);
    if (!success) {
        System.out.println("DeleteAsAccount-> Commit message: " + connection.getLastResponse());
        return false;
    }
    return true;
}
