@Override
protected void setUp() throws Exception {
    super.setUp();
    for (int port = 3333, socket = 0; socket < NUM_CONNECTIONS && port < 4000; port++) {
        TelnetTestSimpleServer server = null;
        TelnetClient client = null;
        try {
            server = new TelnetTestSimpleServer(port);
            switch(socket) {
                case 0:
                    client = new TelnetClient();
                    // redundant but makes code clearer.
                    client.setReaderThread(true);
                    break;
                case 1:
                    client = new TelnetClient();
                    TerminalTypeOptionHandler ttopt = new TerminalTypeOptionHandler("VT100", false, false, true, false);
                    EchoOptionHandler echoopt = new EchoOptionHandler(true, false, true, false);
                    SuppressGAOptionHandler gaopt = new SuppressGAOptionHandler(true, true, true, true);
                    client.addOptionHandler(ttopt);
                    client.addOptionHandler(echoopt);
                    client.addOptionHandler(gaopt);
                    break;
                case 2:
                    client = new TelnetClient("ANSI");
                    break;
                case 3:
                    client = new TelnetClient();
                    client.setReaderThread(false);
                    break;
            }
            client.connect("127.0.0.1", port);
            switch(socket) {
                case 0:
                    STANDARD = new TestConnection(server, client, port);
                    break;
                case 1:
                    OPTIONS = new TestConnection(server, client, port);
                    break;
                case 2:
                    ANSI = new TestConnection(server, client, port);
                    break;
                case 3:
                    NOREAD = new TestConnection(server, client, port);
                    break;
            }
            // only increment socket number on success
            socket++;
        } catch (IOException e) {
            closeConnection(server, client, port);
            System.err.println("failed to open client-server connection on port " + port);
        }
    }
    Thread.sleep(1000);
}
