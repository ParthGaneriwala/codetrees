public void altera(Setor setor) throws Exception {
    EntityManager em = null;
    try {
        em = getEntityManager();
        em.getTransaction().begin();
        Setor persistentSetor = em.find(Setor.class, setor.getIdSetor());
        Campus campusOld = persistentSetor.getCampus();
        Campus campusNew = setor.getCampus();
        Collection<FiscalContrato> fiscalcontratoCollectionOld = persistentSetor.getFiscalcontratoCollection();
        Collection<FiscalContrato> fiscalcontratoCollectionNew = setor.getFiscalcontratoCollection();
        if (campusNew != null) {
            campusNew = em.getReference(campusNew.getClass(), campusNew.getIdCampus());
            setor.setCampus(campusNew);
        }
        Collection<FiscalContrato> attachedFiscalcontratoCollectionNew = new ArrayList<FiscalContrato>();
        for (FiscalContrato fiscalcontratoCollectionNewFiscalcontratoToAttach : fiscalcontratoCollectionNew) {
            fiscalcontratoCollectionNewFiscalcontratoToAttach = em.getReference(fiscalcontratoCollectionNewFiscalcontratoToAttach.getClass(), fiscalcontratoCollectionNewFiscalcontratoToAttach.getIdFiscalContrato());
            attachedFiscalcontratoCollectionNew.add(fiscalcontratoCollectionNewFiscalcontratoToAttach);
        }
        fiscalcontratoCollectionNew = attachedFiscalcontratoCollectionNew;
        setor.setFiscalcontratoCollection(fiscalcontratoCollectionNew);
        setor = em.merge(setor);
        if (campusOld != null && !campusOld.equals(campusNew)) {
            campusOld.getSetorCollection().remove(setor);
            campusOld = em.merge(campusOld);
        }
        if (campusNew != null && !campusNew.equals(campusOld)) {
            campusNew.getSetorCollection().add(setor);
            campusNew = em.merge(campusNew);
        }
        for (FiscalContrato fiscalcontratoCollectionOldFiscalcontrato : fiscalcontratoCollectionOld) {
            if (!fiscalcontratoCollectionNew.contains(fiscalcontratoCollectionOldFiscalcontrato)) {
                fiscalcontratoCollectionOldFiscalcontrato.setSetor(null);
                fiscalcontratoCollectionOldFiscalcontrato = em.merge(fiscalcontratoCollectionOldFiscalcontrato);
            }
        }
        for (FiscalContrato fiscalcontratoCollectionNewFiscalcontrato : fiscalcontratoCollectionNew) {
            if (!fiscalcontratoCollectionOld.contains(fiscalcontratoCollectionNewFiscalcontrato)) {
                Setor oldSetorOfFiscalcontratoCollectionNewFiscalcontrato = fiscalcontratoCollectionNewFiscalcontrato.getSetor();
                fiscalcontratoCollectionNewFiscalcontrato.setSetor(setor);
                fiscalcontratoCollectionNewFiscalcontrato = em.merge(fiscalcontratoCollectionNewFiscalcontrato);
                if (oldSetorOfFiscalcontratoCollectionNewFiscalcontrato != null && !oldSetorOfFiscalcontratoCollectionNewFiscalcontrato.equals(setor)) {
                    oldSetorOfFiscalcontratoCollectionNewFiscalcontrato.getFiscalcontratoCollection().remove(fiscalcontratoCollectionNewFiscalcontrato);
                    oldSetorOfFiscalcontratoCollectionNewFiscalcontrato = em.merge(oldSetorOfFiscalcontratoCollectionNewFiscalcontrato);
                }
            }
        }
        em.getTransaction().commit();
    } catch (Exception ex) {
        String msg = ex.getLocalizedMessage();
        if (msg == null || msg.length() == 0) {
            Integer id = setor.getIdSetor();
            if (findSetor(id) == null) {
                throw new Exception("The setor with id " + id + " no longer exists.");
            }
        }
        throw ex;
    } finally {
        if (em != null) {
            em.close();
        }
    }
}
