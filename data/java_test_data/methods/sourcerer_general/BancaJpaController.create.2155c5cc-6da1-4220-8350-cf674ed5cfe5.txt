public void create(Banca banca) throws PreexistingEntityException, Exception {
    if (banca.getMembro() == null) {
        banca.setMembro(new HashSet<Membro>());
    }
    EntityManager em = null;
    try {
        em = getEntityManager();
        em.getTransaction().begin();
        Membro presidente = banca.getPresidente();
        if (presidente != null) {
            presidente = em.getReference(presidente.getClass(), presidente.getId());
            banca.setPresidente(presidente);
        }
        Set<Membro> attachedMembro = new HashSet<Membro>();
        for (Membro membroMembroToAttach : banca.getMembro()) {
            membroMembroToAttach = em.getReference(membroMembroToAttach.getClass(), membroMembroToAttach.getId());
            attachedMembro.add(membroMembroToAttach);
        }
        banca.setMembro(attachedMembro);
        em.persist(banca);
        if (presidente != null) {
            Banca oldBancaOfPresidente = presidente.getBanca();
            if (oldBancaOfPresidente != null) {
                oldBancaOfPresidente.setPresidente(null);
                oldBancaOfPresidente = em.merge(oldBancaOfPresidente);
            }
            presidente.setBanca(banca);
            presidente = em.merge(presidente);
        }
        for (Membro membroMembro : banca.getMembro()) {
            Banca oldBancaOfMembroMembro = membroMembro.getBanca();
            membroMembro.setBanca(banca);
            membroMembro = em.merge(membroMembro);
            if (oldBancaOfMembroMembro != null) {
                oldBancaOfMembroMembro.getMembro().remove(membroMembro);
                oldBancaOfMembroMembro = em.merge(oldBancaOfMembroMembro);
            }
        }
        em.getTransaction().commit();
    } catch (Exception ex) {
        if (findBanca(banca.getId()) != null) {
            throw new PreexistingEntityException("Banca " + banca + " already exists.", ex);
        }
        throw ex;
    } finally {
        if (em != null) {
            em.close();
        }
    }
}
