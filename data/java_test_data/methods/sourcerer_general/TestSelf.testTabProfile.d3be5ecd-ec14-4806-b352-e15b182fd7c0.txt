static void testTabProfile(Connection cConnection, boolean persistent) {
    Statement sStatement = null;
    ResultSet r;
    String s = "";
    long start;
    boolean bDropError = false;
    String name = persistent ? "Persistent" : "Memory";
    print(name + " TabProfile");
    try {
        sStatement = cConnection.createStatement();
    } catch (Exception e) {
        e.printStackTrace();
        print("TabProfile init error: " + e.getMessage());
        return;
    }
    try {
        // prepared statements
        s = "create table TabProfile(id int primary key," + "car char,won bit,licence varbinary," + "name char,sex char,chance double,birthday date,temp char)";
        sStatement.execute(s);
        s = "insert into TabProfile values ( ?, ?, ?, ?," + "'\"John\" the bird''s best friend', 'M',?,?,'')";
        PreparedStatement p = cConnection.prepareStatement(s);
        p.clearParameters();
        p.setInt(1, 10);
        p.setString(2, "Matchcartoon");
        p.setBoolean(3, true);
        p.setBytes(4, b1);
        p.setDouble(5, 50.5);
        p.setNull(6, Types.DATE);
        p.executeUpdate();
        p.clearParameters();
        p.setInt(1, -2);
        p.setString(2, "\"Birdie\"'s car ?");
        p.setBoolean(3, false);
        byte[] b2 = { 10, 127 };
        p.setBytes(4, b2);
        p.setDouble(5, -3.1415e-20);
        java.util.Calendar cal = java.util.Calendar.getInstance();
        cal.set(2000, 2, 29);
        // fredt@users - who designed the java.util.Calendar API?
        p.setDate(6, new Date(cal.getTime().getTime()));
        p.executeUpdate();
        readTabProfileTest(sStatement);
        byte[] b2n;
        byte[] b1n;
        boolean mismatch;
        s = "select \"org.hsqldb.lib.ArrayUtil.containsAt\"(licence,0, ?) " + "from TabProfile";
        p = cConnection.prepareStatement(s);
        p.setBytes(1, b2);
        r = p.executeQuery();
        r.next();
        boolean boo1 = r.getBoolean(1);
        r.next();
        boolean boo2 = r.getBoolean(1);
        // test boo1 != boo2
        /**
         * @todo fredt - nested procedure call doesn't parse
         */
        /*
            s = "select \"org.hsqldb.lib.StringConverter.hexToByte\""
                + "(\"org.hsqldb.lib.StringConverter.byteToHex\"(car)) "
                + "from TabProfile";
            r = sStatement.executeQuery(s);

            r.next();

            b1n = r.getBytes(1);

            r.next();

            b1n = r.getBytes(1);
*/
        /**
         * @todo fredt - alias does not resolve
         */
        /*
            s = "select \"org.hsqldb.lib.StringConverter.byteToHex\"(car) temp, " +
                "\"org.hsqldb.lib.StringConverter.hexToByte\"(temp) "
                + "from TabProfile";
            r = sStatement.executeQuery(s);

            r.next();

            b1n = r.getBytes(2);

            r.next();

            b1n = r.getBytes(2);
*/
        s = "update tabprofile set temp = \"org.hsqldb.lib.StringConverter.byteToHex\"(licence)";
        sStatement.executeUpdate(s);
        s = "select \"org.hsqldb.lib.StringConverter.hexToByte\"(temp) " + "from TabProfile order by id desc";
        r = sStatement.executeQuery(s);
        r.next();
        b1n = r.getBytes(1);
        for (int i = 0; i < b1n.length; i++) {
            if (b1[i] != b1n[i]) {
                mismatch = true;
            }
        }
        r.next();
        b2n = r.getBytes(1);
        for (int i = 0; i < b2n.length; i++) {
            if (b2[i] != b2n[i]) {
                mismatch = true;
            }
        }
        // s = "drop table TabProfile";
        // sStatement.execute(s);
        s = "create table obj(id int,o object)";
        sStatement.execute(s);
        s = "insert into obj values(?,?)";
        p = cConnection.prepareStatement(s);
        p.setInt(1, 1);
        int[] ia1 = { 1, 2, 3 };
        p.setObject(2, ia1);
        p.executeUpdate();
        p.clearParameters();
        p.setInt(1, 2);
        java.awt.Rectangle r1 = new java.awt.Rectangle(10, 11, 12, 13);
        p.setObject(2, r1);
        p.executeUpdate();
        r = sStatement.executeQuery("SELECT o FROM obj ORDER BY id DESC");
        r.next();
        java.awt.Rectangle r2 = (java.awt.Rectangle) r.getObject(1);
        if (r2.x != 10 || r2.y != 11 || r2.width != 12 || r2.height != 13) {
            throw new Exception("Object data error: Rectangle");
        }
        r.next();
        int[] ia2 = (int[]) (r.getObject(1));
        if (ia2[0] != 1 || ia2[1] != 2 || ia2[2] != 3 || ia2.length != 3) {
            throw new Exception("Object data error: int[]");
        }
        // s = "drop table obj";
        // sStatement.execute(s);
        sStatement.close();
    } catch (Exception e) {
        print("");
        print("TabProfile error: " + e);
        print("with SQL command: " + s);
        e.printStackTrace();
    }
}
