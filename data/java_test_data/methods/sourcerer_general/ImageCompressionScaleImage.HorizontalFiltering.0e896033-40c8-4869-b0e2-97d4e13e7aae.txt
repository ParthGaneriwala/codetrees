// end of HorizontalFilter()
private BufferedImage HorizontalFiltering(BufferedImage bufImage, int iOutW) {
    int dwInW = bufImage.getWidth();
    int dwInH = bufImage.getHeight();
    int value = 0;
    BufferedImage pbOut = new BufferedImage(iOutW, dwInH, BufferedImage.TYPE_INT_RGB);
    for (int x = 0; x < iOutW; x++) {
        int startX;
        int start;
        int X = (int) (((double) x) * ((double) dwInW) / ((double) iOutW) + 0.5);
        int y = 0;
        startX = X - nHalfDots;
        if (startX < 0) {
            startX = 0;
            start = nHalfDots - X;
        } else {
            start = 0;
        }
        int stop;
        int stopX = X + nHalfDots;
        if (stopX > (dwInW - 1)) {
            stopX = dwInW - 1;
            stop = nHalfDots + (dwInW - 1 - X);
        } else {
            stop = nHalfDots * 2;
        }
        if (start > 0 || stop < nDots - 1) {
            CalTempContrib(start, stop);
            for (y = 0; y < dwInH; y++) {
                value = HorizontalFilter(bufImage, startX, stopX, start, stop, y, tmpContrib);
                pbOut.setRGB(x, y, value);
            }
        } else {
            for (y = 0; y < dwInH; y++) {
                value = HorizontalFilter(bufImage, startX, stopX, start, stop, y, normContrib);
                pbOut.setRGB(x, y, value);
            }
        }
    }
    return pbOut;
}
