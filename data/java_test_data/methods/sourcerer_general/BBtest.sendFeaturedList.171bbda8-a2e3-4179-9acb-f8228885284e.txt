public void sendFeaturedList(String recipient) {
    String toSend = "";
    boolean atLeastOne = false;
    boolean atLeastOneClosed = false;
    String closedTourneysLine = "";
    String additionalInfo = "";
    int totalpool = 0;
    for (int i = 0; i < maxbots + maxevents; i++) {
        if (events[i].featured) {
            atLeastOne = true;
            if (events[i].marketopen) {
                if (i < maxbots) {
                    additionalInfo = "Joining";
                    if (events[i].alerted) {
                        additionalInfo = "Post   ";
                    }
                    if (events[i].inProgress) {
                        additionalInfo = "Started";
                    }
                    totalpool = ((int) (Math.floor(getPool(i)))) + events[i].tripool;
                } else {
                    additionalInfo = "----   ";
                    /* later starting time */
                    if (events[i].nodouble) {
                        events[i].detailedTourneyInfo = "[winbets-event]";
                        totalpool = ((int) (Math.floor(getPool(i))));
                    } else {
                        events[i].detailedTourneyInfo = "[allbets-event]";
                        totalpool = ((int) (Math.floor(getPool(i)))) + events[i].tripool;
                    }
                }
                toSend = toSend.concat(events[i].BotList + spaces.substring(0, 12 - events[i].BotList.length()) + events[i].detailedTourneyInfo + " " + additionalInfo + " " + spaces.substring(0, 7 - digits(totalpool)) + totalpool + "   " + events[i].countplayers + "\\n");
            } else {
                if (events[i].initializing) {
                // skip completely
                } else {
                    if (atLeastOneClosed) {
                        closedTourneysLine = closedTourneysLine.concat(", " + events[i].BotList);
                    } else {
                        atLeastOneClosed = true;
                        closedTourneysLine = closedTourneysLine.concat("Closed tourneys: " + events[i].BotList);
                    }
                }
            }
        }
    }
    if (atLeastOneClosed) {
        toSend = toSend.concat(closedTourneysLine);
    }
    sendQTell(toSend, recipient);
}
