/**
 * 得到flowid的错误统计情况
 * @param statflag 1按天0按小时
 * @param statdate 20100731的形式
 * @param stattime 1,2,3,3,5的形式
 * @param pageNo
 * @param pageSize
 * @return
 */
public PaginationSupport getFlowidErrorStat(int statflag, String statdate, String stattime, String flowid, int pageNo, int pageSize) {
    int totalCount = 0;
    int startIndex = (pageNo - 1) * pageSize;
    String cntsql = "select count(*) as cnt from hwchr_flowid_error_stat  where 1=1 ";
    String search = " where 1=1";
    cntsql += " and statflag=" + statflag;
    search += " and statflag=" + statflag;
    cntsql += " and statdate='" + statdate + "'";
    search += " and statdate='" + statdate + "'";
    if (statflag == 0) {
        cntsql += " and stattime = '" + stattime + "'";
        search += " and stattime = '" + stattime + "'";
    }
    if (flowid != null && !flowid.equals("")) {
        cntsql += " and flowid = '" + flowid + "'";
        search += " and flowid = '" + flowid + "'";
    }
    // if (flowid != null && !flowid.equals("")) {
    // cntsql += " and flowid='" + flowid + "'";
    // search += " and flowid='" + flowid + "'";
    // }
    System.out.println("查询SQL:" + cntsql);
    if (pageSize != Integer.MAX_VALUE) {
        totalCount = jdbcTemplate.queryForInt(cntsql);
    }
    String sql = "SELECT * FROM (SELECT A.*, ROWNUM RN FROM (select * from  hwchr_flowid_error_stat " + search + " ) A WHERE ROWNUM <= " + (startIndex + pageSize) + " )  WHERE RN > " + startIndex;
    System.out.println("查询SQL:" + sql);
    Object object = jdbcTemplate.query(sql, new ResultSetExtractor() {

        public Object extractData(ResultSet rs) throws SQLException, DataAccessException {
            List list = new ArrayList();
            while (rs.next()) {
                HWChrFlowidErrorStat model = new HWChrFlowidErrorStat();
                model.setErrorcount(rs.getInt("errorcount"));
                model.setFlowid(rs.getString("flowid"));
                model.setInnerreason(rs.getString("innerreason"));
                model.setOutreason(rs.getString("outreason"));
                model.setStatdate(rs.getString("statdate"));
                model.setStatflag(rs.getString("statflag"));
                model.setStattime(rs.getString("stattime"));
                list.add(model);
            }
            return list;
        }
    });
    List list = (List) object;
    if (pageSize == Integer.MAX_VALUE) {
        totalCount = list.size();
    }
    PaginationSupport ps = new PaginationSupport(list, totalCount, pageSize, startIndex);
    return ps;
}
