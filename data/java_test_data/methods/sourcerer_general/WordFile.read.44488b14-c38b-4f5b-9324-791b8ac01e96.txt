public void read(DataInput in) throws IOException {
    // read the index
    int indexSize = in.readInt();
    byte[] indexData = new byte[indexSize];
    in.readFully(indexData);
    GrowingIntArray clusters = new GrowingIntArray(10);
    GrowingLongArray pointers = new GrowingLongArray(10);
    int position = 0;
    int currentDataOffset = 0;
    while (position < indexSize) {
        GrowingIntArray tmpClusters = new GrowingIntArray(10);
        while (true) {
            int cluster = PackedInteger.readInt(indexData, position);
            int intLen = PackedInteger.getReadIntLength(indexData, position);
            position += intLen;
            if (cluster < 0) {
                cluster = -cluster;
                tmpClusters.add(cluster);
                break;
            }
            tmpClusters.add(cluster);
        }
        int dataLen = PackedInteger.readInt(indexData, position);
        int intLen = PackedInteger.getReadIntLength(indexData, position);
        position += intLen;
        for (int i = 0; i < tmpClusters.size(); ++i) {
            clusters.add(tmpClusters.array()[i]);
            pointers.add(Ptr.toLong(currentDataOffset, dataLen));
        }
        currentDataOffset += dataLen;
    }
    clusters.trim();
    pointers.trim();
    clusterPointers = new CompactReadOnlyInt2LongHashMap(clusters.array(), pointers.array(), Ptr.INVALID);
    int dataSize = in.readInt();
    data = new byte[dataSize];
    in.readFully(data);
}
