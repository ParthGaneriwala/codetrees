// TODO add some code to check if a date is a trading date or not.
// TODO Create a function to go back x trading days and convert that to calendar dates.
public static void main(String[] args) throws Exception {
    StockLoader mgr = new StockLoader();
    Logger logger = Logger.getLogger("StockLoader");
    logger.setLevel(Level.DEBUG);
    logger.debug("Inside Main" + args.length);
    System.out.println("Inside Main" + args.length);
    logger.debug("GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG");
    long timerStart, timerEnd;
    CommandArgs arguments = processArgs(args);
    // if(containsArg(args,"first")){
    if (arguments.isFirstRun()) {
        mgr.createCleanData();
    } else {
        boolean useProxy = false;
        // if(containsArg(args,"proxy")){
        if (arguments.isUseProxy()) {
            useProxy = true;
        }
        // if(containsArg(args,"load")){
        if (arguments.isLoadSymbols()) {
            System.out.println("Ready to load.");
            CommodityLoader cl = new CommodityLoader();
            cl.loadStocks("D:/Data/Stocks/OTCBB.txt");
            System.exit(0);
            cl.loadCurrencies();
            WebDataLoader wdl = new WebDataLoader();
            wdl.setUseProxy(useProxy);
            wdl.loadOptionInfo();
        }
        // if (!containsArg(args, "nohist")) {
        if (arguments.isLoadHistory()) {
            HistoryLoader hl = new HistoryLoader();
            hl.setUseProxy(useProxy);
            System.out.println("Begin Load Stock Prices");
            hl.loadCommodityPriceHistory(Constants.STOCK_COMMODITY_TYPE_ID);
            System.out.println("End Load Stock Prices \nLoading Forex Prices");
            hl.loadCommodityPriceHistory(Constants.FOREX_COMMODITY_TYPE_ID);
            System.out.println("End Load Forex Prices.");
        }
        ThreadHelper th = new ThreadHelper();
        if (arguments.isVerifySymbols()) {
            th.checkSymbols();
        }
        if (arguments.isCalcMetrics()) {
            System.out.println("Preparing to load metrics");
            th.computeMetrics();
            System.out.println("Metrics loaded");
        }
        if (arguments.isCalcTriggers()) {
            System.out.println("Triggers Start");
            timerStart = System.currentTimeMillis();
            th.computeTriggers();
            timerEnd = System.currentTimeMillis();
            System.out.println("Triggers end " + formatTime(timerStart, timerEnd));
        }
        // mgr.loadIndicators();
        System.out.println("Stock Loader D");
        // mgr.printMovingAverages();
        System.out.println("Leaving Else Statement.");
    // TODO Need to add params for proxy on/off and load options on/off.
    // Should remove option symbols before load of options.
    // TODO Add functionality to delete a stock and it's history for
    // when a company no longer exists.
    }
    HibernateUtil.getSession().close();
}
