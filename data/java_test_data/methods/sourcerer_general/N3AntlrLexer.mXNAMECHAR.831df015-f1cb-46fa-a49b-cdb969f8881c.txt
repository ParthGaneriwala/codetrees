protected final void mXNAMECHAR(boolean _createToken) throws RecognitionException, CharStreamException, TokenStreamException {
    int _ttype;
    Token _token = null;
    int _begin = text.length();
    _ttype = XNAMECHAR;
    int _saveIndex;
    {
        switch(LA(1)) {
            case 'A':
            case 'B':
            case 'C':
            case 'D':
            case 'E':
            case 'F':
            case 'G':
            case 'H':
            case 'I':
            case 'J':
            case 'K':
            case 'L':
            case 'M':
            case 'N':
            case 'O':
            case 'P':
            case 'Q':
            case 'R':
            case 'S':
            case 'T':
            case 'U':
            case 'V':
            case 'W':
            case 'X':
            case 'Y':
            case 'Z':
                {
                    {
                        matchRange('A', 'Z');
                    }
                    break;
                }
            case '_':
                {
                    match('_');
                    break;
                }
            case '-':
                {
                    match('-');
                    break;
                }
            case 'a':
            case 'b':
            case 'c':
            case 'd':
            case 'e':
            case 'f':
            case 'g':
            case 'h':
            case 'i':
            case 'j':
            case 'k':
            case 'l':
            case 'm':
            case 'n':
            case 'o':
            case 'p':
            case 'q':
            case 'r':
            case 's':
            case 't':
            case 'u':
            case 'v':
            case 'w':
            case 'x':
            case 'y':
            case 'z':
                {
                    {
                        matchRange('a', 'z');
                    }
                    break;
                }
            case '\u0370':
            case '\u0371':
            case '\u0372':
            case '\u0373':
            case '\u0374':
            case '\u0375':
            case '\u0376':
            case '\u0377':
            case '\u0378':
            case '\u0379':
            case '\u037a':
            case '\u037b':
            case '\u037c':
            case '\u037d':
                {
                    {
                        matchRange('\u0370', '\u037D');
                    }
                    break;
                }
            case '\u200c':
            case '\u200d':
                {
                    {
                        matchRange('\u200C', '\u200D');
                    }
                    break;
                }
            case '0':
            case '1':
            case '2':
            case '3':
            case '4':
            case '5':
            case '6':
            case '7':
            case '8':
            case '9':
                {
                    {
                        matchRange('0', '9');
                    }
                    break;
                }
            case '\u0300':
            case '\u0301':
            case '\u0302':
            case '\u0303':
            case '\u0304':
            case '\u0305':
            case '\u0306':
            case '\u0307':
            case '\u0308':
            case '\u0309':
            case '\u030a':
            case '\u030b':
            case '\u030c':
            case '\u030d':
            case '\u030e':
            case '\u030f':
            case '\u0310':
            case '\u0311':
            case '\u0312':
            case '\u0313':
            case '\u0314':
            case '\u0315':
            case '\u0316':
            case '\u0317':
            case '\u0318':
            case '\u0319':
            case '\u031a':
            case '\u031b':
            case '\u031c':
            case '\u031d':
            case '\u031e':
            case '\u031f':
            case '\u0320':
            case '\u0321':
            case '\u0322':
            case '\u0323':
            case '\u0324':
            case '\u0325':
            case '\u0326':
            case '\u0327':
            case '\u0328':
            case '\u0329':
            case '\u032a':
            case '\u032b':
            case '\u032c':
            case '\u032d':
            case '\u032e':
            case '\u032f':
            case '\u0330':
            case '\u0331':
            case '\u0332':
            case '\u0333':
            case '\u0334':
            case '\u0335':
            case '\u0336':
            case '\u0337':
            case '\u0338':
            case '\u0339':
            case '\u033a':
            case '\u033b':
            case '\u033c':
            case '\u033d':
            case '\u033e':
            case '\u033f':
            case '\u0340':
            case '\u0341':
            case '\u0342':
            case '\u0343':
            case '\u0344':
            case '\u0345':
            case '\u0346':
            case '\u0347':
            case '\u0348':
            case '\u0349':
            case '\u034a':
            case '\u034b':
            case '\u034c':
            case '\u034d':
            case '\u034e':
            case '\u034f':
            case '\u0350':
            case '\u0351':
            case '\u0352':
            case '\u0353':
            case '\u0354':
            case '\u0355':
            case '\u0356':
            case '\u0357':
            case '\u0358':
            case '\u0359':
            case '\u035a':
            case '\u035b':
            case '\u035c':
            case '\u035d':
            case '\u035e':
            case '\u035f':
            case '\u0360':
            case '\u0361':
            case '\u0362':
            case '\u0363':
            case '\u0364':
            case '\u0365':
            case '\u0366':
            case '\u0367':
            case '\u0368':
            case '\u0369':
            case '\u036a':
            case '\u036b':
            case '\u036c':
            case '\u036d':
            case '\u036e':
            case '\u036f':
                {
                    {
                        matchRange('\u0300', '\u036F');
                    }
                    break;
                }
            case '\u203f':
            case '\u2040':
                {
                    {
                        matchRange('\u203F', '\u2040');
                    }
                    break;
                }
            case '\u00b7':
                {
                    match('\u00B7');
                    break;
                }
            default:
                if (((LA(1) >= '\u00c0' && LA(1) <= '\u02ff'))) {
                    {
                        matchRange('\u00C0', '\u02FF');
                    }
                } else if (((LA(1) >= '\u037f' && LA(1) <= '\u1fff'))) {
                    {
                        matchRange('\u037F', '\u1FFF');
                    }
                } else if (((LA(1) >= '\u2070' && LA(1) <= '\u218f'))) {
                    {
                        matchRange('\u2070', '\u218F');
                    }
                } else if (((LA(1) >= '\u2c00' && LA(1) <= '\u2fef'))) {
                    {
                        matchRange('\u2C00', '\u2FEF');
                    }
                } else if (((LA(1) >= '\u3001' && LA(1) <= '\ud7ff'))) {
                    {
                        matchRange('\u3001', '\uD7FF');
                    }
                } else if (((LA(1) >= '\uf900' && LA(1) <= '\ufffe'))) {
                    {
                        matchRange('\uF900', '\uFFFE');
                    }
                } else {
                    throw new NoViableAltForCharException((char) LA(1), getFilename(), getLine(), getColumn());
                }
        }
    }
    if (_createToken && _token == null && _ttype != Token.SKIP) {
        _token = makeToken(_ttype);
        _token.setText(new String(text.getBuffer(), _begin, text.length() - _begin));
    }
    _returnToken = _token;
}
