public TokenType getToken() {
    TokenType currentToken = null;
    this.tokenString = "";
    boolean done = false;
    Automaton[] automata = new Automaton[9];
    automata[0] = new CommentAutomaton();
    automata[1] = new TextAutomaton();
    automata[2] = new DecAutomaton();
    automata[3] = new IdAutomaton();
    automata[4] = new NEqAutomaton();
    automata[5] = new GTEqAutomaton();
    automata[6] = new LTEqAutomaton();
    automata[7] = new EqAutomaton();
    automata[8] = new OperatorAutomaton();
    int currentAt = -1;
    char c;
    while ((c = reader.getNextChar()) != SourceReader.EOF) {
        if (currentAt != -1 && automata[currentAt].nextStep(c)) {
            if (automata[currentAt].isDone()) {
                done = true;
            }
        }
        for (int i = 0; i < automata.length && currentAt == -1; i++) {
            if (automata[i].nextStep(c)) {
                currentAt = i;
                if (automata[i].isDone()) {
                    done = true;
                    break;
                }
            }
        }
        if (done) {
            currentToken = automata[currentAt].getToken();
            this.tokenString = automata[currentAt].getTokenString();
            if (automata[currentAt].backtrack())
                reader.ungetNextChar();
            if (currentToken != null)
                break;
            else {
                currentAt = -1;
                done = false;
            }
        }
    }
    if (c == SourceReader.EOF)
        currentToken = TokenType.ENDFILE;
    if (currentToken == TokenType.ID)
        if ((currentToken = this.isReservedWord(this.tokenString)) == TokenType.ID)
            currentToken = this.isLiteral(this.tokenString);
    if (trace)
        this.trace(currentToken, this.tokenString);
    return currentToken;
}
