@Override
protected Result evaluate(final LogicContext context, final Integer patientId, final Map<String, Object> parameters) throws LogicException {
    Result result = new Result();
    ObsWithRestrictionRule obsWithRestrictionRule = new ObsWithStringRestrictionRule();
    parameters.put(EvaluableConstants.OBS_CONCEPT, Arrays.asList(EvaluableNameConstants.MEAN_CORPUSCULAR_VOLUME));
    parameters.put(EvaluableConstants.OBS_FETCH_SIZE, 1);
    Result corpuscularResults = obsWithRestrictionRule.eval(context, patientId, parameters);
    if (CollectionUtils.isNotEmpty(corpuscularResults)) {
        Result latestCorpuscularResult = corpuscularResults.latest();
        if (latestCorpuscularResult.toNumber() < 75) {
            parameters.put(EvaluableConstants.OBS_CONCEPT, Arrays.asList(EvaluableNameConstants.HEMOGLOBIN));
            Result hbResults = obsWithRestrictionRule.eval(context, patientId, parameters);
            if (CollectionUtils.isNotEmpty(hbResults)) {
                Result latestHbResult = hbResults.latest();
                if (latestHbResult.toNumber() < 10) {
                    parameters.put(EvaluableConstants.OBS_CONCEPT, Arrays.asList(EvaluableNameConstants.MEDICATION_ADDED));
                    parameters.put(EvaluableConstants.OBS_VALUE_CODED, Arrays.asList(EvaluableNameConstants.IRON_SUPPLEMENT));
                    Result medicationResults = obsWithRestrictionRule.eval(context, patientId, parameters);
                    if (CollectionUtils.isEmpty(medicationResults)) {
                        Boolean displayReminder = Boolean.TRUE;
                        // see if any of the medication is after the low corpuscular volume
                        Integer counter = 0;
                        while (counter < CollectionUtils.size(medicationResults) && displayReminder) {
                            Result medicationResult = medicationResults.get(counter++);
                            if (medicationResult.getResultDate().after(latestCorpuscularResult.getResultDate()))
                                displayReminder = Boolean.FALSE;
                        }
                        StringBuilder buffer = new StringBuilder();
                        buffer.append(" Last Hgb low and last MCV: ").append(latestCorpuscularResult.toNumber());
                        String resultDatetime = format(latestCorpuscularResult.getResultDate());
                        if (StringUtils.isNotEmpty(resultDatetime))
                            buffer.append(" on ").append(resultDatetime);
                        // no iron supplement found
                        if (displayReminder)
                            result.add(new Result(String.valueOf(parameters.get(ReminderParameters.DISPLAYED_REMINDER_TEXT)) + buffer.toString()));
                    }
                }
            }
        }
    }
    return result;
}
