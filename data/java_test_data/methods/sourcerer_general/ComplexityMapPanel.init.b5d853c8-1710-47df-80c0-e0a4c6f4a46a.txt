private void init() {
    // create a new treemap based on a tree
    ViewPoint initialViewPoint = (ViewPoint) ViewPointFactory.getInstance().getInitialViewPointVector().get(0);
    complexityMap = new ComplexityMap(tree, initialViewPoint);
    complexityMap.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
    JPanel panelMenu = new JPanel(new BorderLayout());
    viewPointSensitivityPanel = new ViewPointSensitivityPanel(this);
    // create the ComplexityMap panel, including legend and search functionality
    ButtonPanel buttonPanel = new ButtonPanel(this);
    SearchPanel searchPanel = new SearchPanel(complexityMap);
    panelMenu.add(buttonPanel, BorderLayout.NORTH);
    panelMenu.add(viewPointSensitivityPanel, BorderLayout.SOUTH);
    // MHM: The JSplitPane doesn't look as nice as in the GraphView-demo
    JSplitPane splitPane = new JSplitPane();
    splitPane.setLeftComponent(complexityMap);
    sensitivityInfoPanel = new SensitivityInfoPanel(this);
    splitPane.setRightComponent(sensitivityInfoPanel);
    splitPane.setOneTouchExpandable(false);
    splitPane.setContinuousLayout(false);
    splitPane.setDividerLocation(1200);
    add(panelMenu, BorderLayout.NORTH);
    add(splitPane, BorderLayout.CENTER);
    add(searchPanel, BorderLayout.SOUTH);
    viewPointSensitivityPanel.setSensitivityInfoPanel(sensitivityInfoPanel);
    viewPointSensitivityPanel.propagateSensitivityMultiplier();
    // UILib.setColor(this, Color.BLACK, Color.GRAY);
    UILib.setColor(this, Color.WHITE, Color.BLACK);
}
