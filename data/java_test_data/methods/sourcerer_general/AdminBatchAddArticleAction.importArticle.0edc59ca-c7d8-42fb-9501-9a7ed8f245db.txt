public ActionForward importArticle(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
    String filePath = (String) request.getSession().getAttribute("FILE_PATH");
    UcMembers member = (UcMembers) request.getSession().getAttribute("ADMIN");
    System.out.println("importArticle file path =  " + filePath);
    ArticleImportStatus status = new ArticleImportStatus();
    status.setCurrentCnt(0);
    status.setFailCnt(0);
    status.setImportCnt(0);
    status.setTotalCnt(0);
    request.getSession().setAttribute("ARTICLE_IMPORT_STATUS", status);
    if (filePath != null && filePath.length() > 0) {
        // System.out.println("importArticle ext =  " + ext);
        if (filePath.indexOf(".mdb") > 0) {
            System.out.println(filePath);
            status.setTotalCnt(this.getCount(filePath));
            request.getSession().setAttribute("ARTICLE_IMPORT_STATUS", status);
            // 
            // String driver = "sun.jdbc.odbc.JdbcOdbcDriver";
            String url = "jdbc:odbc:driver={Microsoft Access Driver (*.mdb)};DBQ=" + filePath;
            String sql = "select ����,����,ժҪ from content ";
            // String url = "jdbc:odbc:Driver={MicroSoft Access Driver
            // *.mdb)};DBQ = Northwind.mdb";
            String username = "";
            String password = "";
            Connection conn = null;
            Statement stmt = null;
            ResultSet rs = null;
            int importCnt = 0;
            int failCnt = 0;
            int currentCnt = 0;
            int repeatCnt = 0;
            try {
                Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                conn = DriverManager.getConnection(url, username, password);
                stmt = conn.createStatement();
                rs = stmt.executeQuery(sql);
                while (rs.next()) {
                    String title = rs.getString(1);
                    String content = rs.getString(2);
                    String description = rs.getString(3);
                    currentCnt++;
                    status.setCurrentCnt(currentCnt);
                    request.getSession().setAttribute("ARTICLE_IMPORT_STATUS", status);
                    if (articleListManager.verifyTitle(title.trim()) && title != null && title.length() > 0 && content != null && content.length() > 0) {
                        Article a = new Article();
                        ArticleContent ac = new ArticleContent();
                        ac.setContent(content);
                        a.setIsdelete("N");
                        a.setUserid(member.getUid());
                        a.setUsername(member.getUsername());
                        a.setUserip(request.getLocalAddr());
                        a.setArticleContent(ac);
                        a.setPubdate(new Date());
                        a.setLastpost(new Date());
                        a.setTitle(title);
                        a.setIsbuild((short) 0);
                        if (title.length() > 40) {
                            a.setShorttitle(title.substring(0, 39));
                        } else {
                            a.setShorttitle(title);
                        }
                        if (description != null && description.length() > 0) {
                            if (description.length() > 250) {
                                a.setDescription(description.substring(0, 248));
                            } else if (description.length() > 1 && description.length() < 250) {
                                a.setDescription(description);
                            }
                        }
                        a.setClick(0);
                        a.setIscommend((short) 0);
                        a.setIsverify((short) 1);
                        a.setDigg(0);
                        if (request.getParameter("type") != null) {
                            ArticleType at = articleTypeManager.getArticleType(Integer.parseInt(request.getParameter("type")));
                            a.setArticleType(at);
                        }
                        if (request.getParameter("typeid") != null && request.getParameter("typeid").trim() != "0") {
                            ArticleType at = articleTypeManager.getArticleType(Integer.parseInt(request.getParameter("typeid").trim()));
                            a.setArticleType2(at);
                        }
                        ac.setArticle(a);
                        articleListManager.addArticle(a);
                        articleListManager.addArticleContent(ac);
                        System.out.println(title.trim());
                        if (ToHtml.toTxt(content, request.getRealPath("/") + "article/txt/" + a.getId() + ".txt", "gbk")) {
                            a.setIsbuild((short) 1);
                            articleListManager.updateArticle(a);
                        }
                        importCnt++;
                        status.setImportCnt(importCnt);
                        request.getSession().setAttribute("ARTICLE_IMPORT_STATUS", status);
                    } else {
                        repeatCnt++;
                        status.setRepeatCnt(repeatCnt);
                        request.getSession().setAttribute("ARTICLE_IMPORT_STATUS", status);
                    }
                }
                rs.close();
                stmt.close();
                conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            } catch (ClassNotFoundException ex) {
                ex.printStackTrace();
            } catch (Exception e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
            File file = new File(filePath);
            file.deleteOnExit();
            return null;
        } else {
            request.setAttribute("FAIL_MESSAGE", "ֻ���ϴ�Access�ļ�!");
            return mapping.findForward("fail");
        }
    }
    return null;
}
