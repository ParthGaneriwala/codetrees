public Map<String, Buffer> readBuffers(URL url, String attribute) throws IOException {
    LOG.info("reading buffers from shapefile " + url);
    Map<String, Buffer> geoms = new HashMap<String, Buffer>();
    FeatureIterator<SimpleFeature> iterator = null;
    try {
        // Connection parameters
        Map<String, Serializable> connectParameters = new HashMap<String, Serializable>();
        connectParameters.put("url", url);
        connectParameters.put("create spatial index", true);
        DataStore dataStore = DataStoreFinder.getDataStore(connectParameters);
        // we are now connected
        String[] typeNames = dataStore.getTypeNames();
        String typeName = typeNames[0];
        FeatureSource<SimpleFeatureType, SimpleFeature> featureSource;
        FeatureCollection<SimpleFeatureType, SimpleFeature> collection;
        featureSource = dataStore.getFeatureSource(typeName);
        collection = featureSource.getFeatures();
        iterator = collection.features();
        while (iterator.hasNext()) {
            SimpleFeature simpleFeature = iterator.next();
            String bufferId = (String) simpleFeature.getAttribute(attribute);
            String[] tokens = bufferId.split("\\.");
            Boundary bufferBoundary = new Boundary(tokens[1]);
            bufferBoundary.setOuter(true);
            Geometry geom = (Geometry) simpleFeature.getDefaultGeometry();
            // LinearRing shell = new GeometryFactory().createLinearRing(geom.getGeometryN(0).getCoordinates());
            // LinearRing[] holes = new LinearRing[geom.getNumGeometries()-1];
            // for (int i = 1; i < geom.getNumGeometries(); i++){
            // Coordinate[] coords = geom.getGeometryN(i).getCoordinates();
            // holes[i] = new GeometryFactory().createLinearRing(coords);
            // }
            // Polygon polygon = new GeometryFactory().createPolygon(shell, holes);
            // Polygon polygon = (Polygon) geom.getGeometryN(0);
            bufferBoundary.putBoundary("", geom);
            Buffer buffer = new Buffer(bufferBoundary);
            String objId = tokens[0] + "." + tokens[1];
            geoms.put(objId, buffer);
        }
    } catch (NullPointerException ex) {
        throw new IOException(ex);
    } catch (GeometryException e) {
        throw new IOException(e);
    } finally {
        if (iterator != null) {
            iterator.close();
        }
    }
    return geoms;
}
