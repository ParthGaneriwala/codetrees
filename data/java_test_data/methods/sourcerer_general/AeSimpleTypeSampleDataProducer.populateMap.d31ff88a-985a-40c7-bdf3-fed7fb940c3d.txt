protected void populateMap() {
    Calendar calendar = Calendar.getInstance();
    calendar.setTime(getDate());
    int year = calendar.get(Calendar.YEAR);
    Map map = getMap();
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_ANYURI, new AeSchemaAnyURI("anyURI"));
    // $NON-NLS-1$ //$NON-NLS-2$
    map.put(new QName(IAeConstants.W3C_XML_SCHEMA, "anyType"), "anyType");
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_BASE64_BINARY, new AeSchemaBase64Binary(Base64.encodeBytes("base64-string".getBytes())));
    map.put(AeTypeMapping.XSD_BOOLEAN, Boolean.TRUE);
    map.put(AeTypeMapping.XSD_BYTE, new Byte((byte) 1));
    map.put(AeTypeMapping.XSD_DATE, new AeSchemaDate(getDate()));
    map.put(AeTypeMapping.XSD_DATETIME, new AeSchemaDateTime(getDate()));
    map.put(AeTypeMapping.XSD_DAY, new AeSchemaDay(1, 0));
    map.put(AeTypeMapping.XSD_DECIMAL, new Integer(1));
    map.put(AeTypeMapping.XSD_DOUBLE, new Double(1));
    map.put(AeTypeMapping.XSD_DURATION, new AeSchemaDuration());
    map.put(AeTypeMapping.XSD_FLOAT, new Float(1));
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_HEX_BINARY, new AeSchemaHexBinary("10203F"));
    map.put(AeTypeMapping.XSD_INT, new Integer(1));
    map.put(AeTypeMapping.XSD_INTEGER, new Integer(1));
    map.put(AeTypeMapping.XSD_LONG, new Long(1));
    map.put(AeTypeMapping.XSD_MONTH, new AeSchemaMonth(1, 0));
    map.put(AeTypeMapping.XSD_MONTHDAY, new AeSchemaMonthDay(1, 1, 0));
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_QNAME, "qname");
    map.put(AeTypeMapping.XSD_SHORT, new Short((short) 1));
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_STRING, "string");
    map.put(AeTypeMapping.XSD_TIME, new AeSchemaTime(getDate()));
    map.put(AeTypeMapping.XSD_YEAR, new AeSchemaYear(year, 0));
    map.put(AeTypeMapping.XSD_YEARMONTH, new AeSchemaYearMonth(year, 1, 0));
    map.put(AeTypeMapping.XSD_POSITIVE_INTEGER, new Integer(1));
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_NORMALIZED_STRING, "string");
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_TOKEN, "string");
    map.put(AeTypeMapping.XSD_UNSIGNED_BYTE, new Integer(1));
    map.put(AeTypeMapping.XSD_NEGATIVE_INTEGER, new Integer(-1));
    map.put(AeTypeMapping.XSD_NON_NEGATIVE_INTEGER, new Integer(1));
    map.put(AeTypeMapping.XSD_NON_POSITIVE_INTEGER, new Integer(-1));
    map.put(AeTypeMapping.XSD_UNSIGNED_INT, new Integer(1));
    map.put(AeTypeMapping.XSD_UNSIGNED_LONG, new Long(1));
    map.put(AeTypeMapping.XSD_UNSIGNED_SHORT, new Short((short) 1));
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_NAME, "name");
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_NCNAME, "ncname");
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_LANGUAGE, "en");
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_ID, "id");
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_IDREF, "idref");
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_IDREFS, "idrefs");
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_ENTITY, "entity");
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_ENTITIES, "entities");
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_NOTATION, "notation");
    // $NON-NLS-1$
    map.put(AeTypeMapping.XSD_NMTOKENS, "nmtokens");
}
