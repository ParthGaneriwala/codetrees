protected Command getGroupCommand(CreateGroupRequest request) {
    // the subprocess to be added
    Subprocess subprocess = (Subprocess) request.getNewObject();
    /*
		 * Should need to translate the requested bounds to the target editparts
		 * coordinates.
		 */
    IFigure parentFigure = getLayoutContainer();
    Rectangle bounds = request.getSubProcessBounds();
    Rectangle parentBounds = parentFigure.getClientArea();
    parentFigure.translateToAbsolute(parentBounds);
    bounds.translate(parentBounds.getTopLeft().getNegated());
    /*
		 * Really, what this needs to do is build a series of OrphanChildCmd
		 * and then AddCmds.
		 */
    // $NON-NLS-1$
    CompoundCommand result = new CompoundCommand("Create Subprocess");
    CreateSubprocessCmd createSubprocessCmd = new CreateSubprocessCmd(subprocess, (IParent) getHost().getModel(), bounds);
    result.add(createSubprocessCmd);
    /*
		 * Need to create an orphan command and a add command for each of the 
		 * process elements represented by these EditParts.
		 */
    /*
		 * Since the CreateGroupRequest is a GroupCommand that contains mulitple 
		 * EditParts I can simply pass it on to the existing 
		 * getOrphanChildrenCommand method in order to build a roper orphan
		 * command for all given model elements.
		 */
    result.add(getOrphanChildrenCommand(request));
    List editParts = request.getEditParts();
    GraphicalEditPart childPart;
    Rectangle r;
    Object constraint;
    for (int i = 0; i < editParts.size(); i++) {
        childPart = (GraphicalEditPart) editParts.get(i);
        /*
			 * Chain the add command new subprocess parent then
			 * Convert r to absolute from childpart figure -- Translates a Translatable that is relative to this figure's bounds to absolute.
			 */
        /*
			 * Note that the results of these calcuations will be off by the size
			 * of the to-be-created figures insets if they are non-zero.
			 * In the context of only subsystems, this is assumed to be OK for 
			 * now. 
			 */
        r = childPart.getFigure().getBounds().getCopy();
        childPart.getFigure().translateToAbsolute(r);
        r = r.getCopy().translate(parentBounds.getTopLeft().getNegated());
        r = r.getCopy().translate(bounds.getTopLeft().getNegated());
        constraint = getConstraintFor(r.translate(-(SubprocessFig.SQUARE_INSET_AMOUNT), -(SubprocessFig.SQUARE_INSET_AMOUNT)));
        result.add(createAddCmd(childPart, translateToModelConstraint(constraint), subprocess));
    }
    return result.unwrap();
}
