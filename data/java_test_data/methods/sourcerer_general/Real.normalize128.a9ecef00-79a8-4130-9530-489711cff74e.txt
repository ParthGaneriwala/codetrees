public long normalize128(long extra) {
    if (!(this.exponent >= 0))
        return 0;
    if (mantissa == 0) {
        if (extra == 0) {
            exponent = 0;
            return 0;
        }
        mantissa = extra;
        extra = 0;
        exponent -= 64;
        if (exponent < 0) {
            // Underflow
            makeZero(sign);
            return 0;
        }
    }
    if (mantissa < 0) {
        extra = (mantissa << 63) + (extra >>> 1);
        mantissa >>>= 1;
        exponent++;
        if (exponent < 0) {
            // Overflow
            makeInfinity(sign);
            return 0;
        }
        return extra;
    }
    int clz = 0;
    int t = (int) (mantissa >>> 32);
    if (t == 0) {
        clz = 32;
        t = (int) mantissa;
    }
    t |= t >> 1;
    t |= t >> 2;
    t |= t >> 4;
    t |= t >> 8;
    t |= t >> 16;
    clz += clz_tab[(t * clz_magic) >>> 27] - 1;
    if (clz == 0)
        return extra;
    mantissa = (mantissa << clz) + (extra >>> (64 - clz));
    extra <<= clz;
    exponent -= clz;
    if (exponent < 0) {
        // Underflow
        makeZero(sign);
        return 0;
    }
    return extra;
}
