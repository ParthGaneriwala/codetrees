@Test
public void testParsingAResponse() throws Exception {
    DnsMessage message = getMessage("/responseA.dat");
    HeaderSection header = message.getHeaderSection();
    assertEquals(0xECD1, header.getId());
    assertEquals(OpCode.QUERY, header.getOpCode());
    assertFalse(header.isTruncated());
    assertTrue(header.isRecursionDesired());
    assertTrue(header.isRecursionAvailable());
    assertEquals(ResponseCode.NO_ERROR, header.getResponseCode());
    QuestionSection question = message.getQuestionSection();
    assertEquals(1, question.size());
    Record record = question.get(0);
    assertEquals(Type.A, record.getType());
    assertEquals("www.cipango.org", record.getName().toString());
    assertEquals(DnsClass.IN, record.getDnsClass());
    assertEquals(1, message.getAnswerSection().size());
    record = message.getAnswerSection().get(0);
    assertEquals(Type.A, record.getType());
    assertEquals("www.cipango.org", record.getName().toString());
    assertEquals(DnsClass.IN, record.getDnsClass());
    assertEquals(0x013EBC, record.getTtl());
    assertEquals(InetAddress.getByName("46.105.46.188"), ((ARecord) record).getAddress());
    assertEquals(2, message.getAuthoritySection().size());
    record = message.getAuthoritySection().get(0);
    assertEquals(Type.NS, record.getType());
    assertEquals("cipango.org", record.getName().toString());
    assertEquals(DnsClass.IN, record.getDnsClass());
    assertEquals(0x010F63, record.getTtl());
    assertEquals("ns.ovh.net", ((NsRecord) record).getNsdName().toString());
    record = message.getAuthoritySection().get(1);
    assertEquals(Type.NS, record.getType());
    assertEquals("cipango.org", record.getName().toString());
    assertEquals(DnsClass.IN, record.getDnsClass());
    assertEquals(0x010F63, record.getTtl());
    assertEquals("dns.ovh.net", ((NsRecord) record).getNsdName().toString());
    assertEquals(2, message.getAdditionalSection().size());
    record = message.getAdditionalSection().get(0);
    assertEquals(Type.A, record.getType());
    assertEquals("ns.ovh.net", record.getName().toString());
    assertEquals(DnsClass.IN, record.getDnsClass());
    assertEquals(0x01152B, record.getTtl());
    assertEquals(InetAddress.getByName("213.251.128.136"), ((ARecord) record).getAddress());
    record = message.getAdditionalSection().get(1);
    assertEquals(Type.A, record.getType());
    assertEquals("dns.ovh.net", record.getName().toString());
    assertEquals(DnsClass.IN, record.getDnsClass());
    assertEquals(0x01152B, record.getTtl());
    assertEquals(InetAddress.getByName("213.186.33.102"), ((ARecord) record).getAddress());
}
