public String toCsv(Preferences prefs, ArrayList<VirtualSystemEntry> iconEntries, ArrayList<AppSystemEntry> appEntries) {
    String csv = "";
    csv += joinTsvRow("client", "cloudie");
    csv += joinTsvRow("version", "1.0");
    csv += joinTsvRow("preference", "backgroundColor", prefs.getBackgroundColor());
    csv += joinTsvRow("preference", "backgroundPosition", prefs.getBackgroundPosition());
    csv += joinTsvRow("preference", "backgroundRepeat", prefs.getBackgroundRepeat());
    csv += joinTsvRow("preference", "backgroundImage", prefs.getBackgroundImage());
    csv += joinTsvRow("preference", "iconTextColor", prefs.getIconTextColor());
    csv += joinTsvRow("preference", "iconBackgroundColor", prefs.getIconBackgroundColor());
    for (AppSystemEntry entry : appEntries) {
        csv += joinTsvRow("window", entry.getId(), entry.getLabel(), entry.getContentType(), entry.getContentValue(), String.valueOf(entry.getX()), String.valueOf(entry.getY()), String.valueOf(entry.getWidth()), String.valueOf(entry.getHeight()));
    }
    for (VirtualSystemEntry entry : iconEntries) {
        if (entry instanceof ShortcutVirtualSystemEntry) {
            ShortcutVirtualSystemEntry shortcut = (ShortcutVirtualSystemEntry) entry;
            Command action = shortcut.getAction();
            if (action != null) {
                if (action instanceof BrowserOpenCommand) {
                    BrowserOpenCommand cmd = (BrowserOpenCommand) action;
                    csv += joinTsvRow("action", "browserOpen", shortcut.getId(), cmd.getUrl(), cmd.getName());
                } else if (action instanceof ExplorerWindowOpenVirtualFolderCommand) {
                    ExplorerWindowOpenVirtualFolderCommand cmd = (ExplorerWindowOpenVirtualFolderCommand) action;
                    csv += joinTsvRow("action", "explorerWindowOpenVirtualFolder", shortcut.getId(), cmd.getFolderId());
                } else if (action instanceof ExplorerWindowOpenFolderCommand) {
                    ExplorerWindowOpenFolderCommand cmd = (ExplorerWindowOpenFolderCommand) action;
                    csv += joinTsvRow("action", "explorerWindowOpenFolder", shortcut.getId(), cmd.getFolderName());
                } else if (action instanceof FeedEntryOpenCommand) {
                    FeedEntryOpenCommand cmd = (FeedEntryOpenCommand) action;
                    csv += joinTsvRow("action", "feedEntryOpen", cmd.getType(), shortcut.getId(), cmd.getEntryId());
                } else if (action instanceof NativeAlertCommand) {
                    NativeAlertCommand cmd = (NativeAlertCommand) action;
                    csv += joinTsvRow("action", "nativeAlert", shortcut.getId(), cmd.getMessage());
                } else if (action instanceof ExistingDocumentOpenCommand) {
                    csv += joinTsvRow("action", "existingDocumentOpen", shortcut.getId());
                } else if (action instanceof WindowRestoreCommand) {
                    WindowRestoreCommand cmd = (WindowRestoreCommand) action;
                    csv += joinTsvRow("action", "windowRestore", shortcut.getId(), cmd.getWindowId(), cmd.getTitle(), cmd.getContents().getType().name(), cmd.getContents().getValue(), String.valueOf(cmd.getX()), String.valueOf(cmd.getY()), String.valueOf(cmd.getWidth()), String.valueOf(cmd.getHeight()));
                }
            }
        }
    }
    for (VirtualSystemEntry entry : iconEntries) {
        if (entry instanceof FolderVirtualSystemEntry) {
            FolderVirtualSystemEntry folderEntry = (FolderVirtualSystemEntry) entry;
            csv += joinTsvRow("folder", folderEntry.getId(), folderEntry.getLabel(), folderEntry.getImage(), folderEntry.getParent(), String.valueOf(folderEntry.getX()), String.valueOf(folderEntry.getY()), String.valueOf(folderEntry.getTray()));
        } else if (entry instanceof ShortcutVirtualSystemEntry) {
            ShortcutVirtualSystemEntry shortcutEntry = (ShortcutVirtualSystemEntry) entry;
            csv += joinTsvRow("shortcut", shortcutEntry.getId(), shortcutEntry.getLabel(), shortcutEntry.getImage(), shortcutEntry.getTooltip(), shortcutEntry.getParent(), String.valueOf(shortcutEntry.getX()), String.valueOf(shortcutEntry.getY()), String.valueOf(shortcutEntry.getTray()));
        } else if (entry instanceof TrashVirtualSystemEntry) {
            TrashVirtualSystemEntry trashEntry = (TrashVirtualSystemEntry) entry;
            csv += joinTsvRow("trash", trashEntry.getId(), trashEntry.getLabel(), String.valueOf(trashEntry.getX()), String.valueOf(trashEntry.getY()), String.valueOf(trashEntry.getTray()));
        }
    }
    return csv;
}
