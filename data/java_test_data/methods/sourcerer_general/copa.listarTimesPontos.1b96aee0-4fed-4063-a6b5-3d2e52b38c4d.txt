private void listarTimesPontos(FiltroGrupo f, ComparadorPosicao c) {
    rEnumTimes = null;
    vecTimes.removeAllElements();
    try {
        rEnumTimes = rsTimes.enumerateRecords(f, c, false);
        int posicao = 0;
        while (rEnumTimes.hasNextElement()) {
            int RecordId = rEnumTimes.nextRecordId();
            byte[] dados = rsTimes.getRecord(RecordId);
            ByteArrayInputStream BAIS = new ByteArrayInputStream(dados);
            DataInputStream DIS = new DataInputStream(BAIS);
            String grupoLido = DIS.readUTF();
            String nomeLido = DIS.readUTF();
            int posicaoSorteioLido = DIS.readInt();
            DIS.readInt();
            DIS.readInt();
            int vitorias = DIS.readInt();
            int empates = DIS.readInt();
            int derrotas = DIS.readInt();
            int jogos = DIS.readInt();
            int pontos = DIS.readInt();
            int golsFeitos = DIS.readInt();
            int golsSofridos = DIS.readInt();
            String resultados = "" + pontos + " " + jogos + " " + vitorias + " " + empates + " " + derrotas + " " + golsFeitos + "  " + golsSofridos;
            System.out.println("" + resultados);
            Times time = new Times(grupoLido, nomeLido, posicaoSorteioLido, RecordId, posicao, vitorias, empates, derrotas, jogos, pontos, golsFeitos, golsSofridos);
            vecTimes.addElement(time);
            posicao++;
        }
    } catch (Exception exc) {
        mostrarAlerta("Erro na listagem", exc.toString());
    }
}
