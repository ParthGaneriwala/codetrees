private void generateScreen() {
    rg.removeAllViews();
    q = getNextQuestion();
    if (q == null) {
        setContentView(R.layout.conc);
        TextView cTitle = (TextView) findViewById(R.id.title);
        TextView cDesc = (TextView) findViewById(R.id.desc);
        Button submitButton = (Button) findViewById(R.id.restart);
        submitButton.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                init(false);
            }
        });
        Button mailButton = (Button) findViewById(R.id.mail_submit);
        mailButton.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                sendEmail();
            }
        });
        for (Conclusion c : activePlugin.getConclusions()) {
            if (c.getExp().evaluate(givenAnswers)) {
                conclusions.add(c);
            }
        }
        Log.d("conclusions.size()", "" + conclusions.size());
        if (conclusions.size() == 1) {
            Conclusion c = conclusions.get(0);
            cTitle.setText(c.getName());
            cDesc.setText(c.getDescription());
            takeAPic = c.isPicture();
        } else {
            takeAPic = true;
            sendEmail();
        }
    } else {
        qText = (TextView) findViewById(R.id.question);
        qText.setText(q.getText());
        for (Answer a : activePlugin.getAnswersForQuestion(q.getId())) {
            if (q.isMultiple()) {
                CheckBox chk = new CheckBox(Start.this);
                chk.setLayoutParams(rlp);
                chk.setId(a.getId());
                chk.setText(a.getText());
                chk.setOnCheckedChangeListener(coccl);
                rg.addView(chk);
            } else {
                RadioButton rb = new RadioButton(Start.this);
                rb.setId(a.getId());
                rb.setText(a.getText());
                rb.setLayoutParams(rlp);
                rg.addView(rb, rlp);
            }
        }
        rg.clearCheck();
        actualQuestions.remove(q);
        allQuestions.remove(q);
    }
}
