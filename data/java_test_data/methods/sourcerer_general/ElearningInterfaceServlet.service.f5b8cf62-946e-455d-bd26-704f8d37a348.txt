public void service(HttpServletRequest request, HttpServletResponse response) throws javax.servlet.ServletException, java.io.IOException {
    // int length = request.getContentLength();
    InputStream is = request.getInputStream();
    java.io.BufferedReader br = new java.io.BufferedReader(new java.io.InputStreamReader(is));
    StringBuilder sb = new StringBuilder();
    String line = "";
    while ((line = br.readLine()) != null) {
        sb.append(line);
    }
    LOG.debug("请求消息:\r\n" + sb.toString());
    StringBuilder result = new StringBuilder("<?xml version=\"1.0\" encoding=\"utf-8\"?>");
    try {
        // org.dom4j.Document doc = new SAXReader().read(is);
        Document document = DocumentHelper.parseText(sb.toString());
        LOG.debug("document:::" + document);
        Element element = document.getRootElement();
        LOG.debug("element:::" + element.getName() + ",,,=" + element.attributeValue("name"));
        // Element method = element.element("method");
        Element method = element;
        LOG.debug("method.getName()===" + method.getName());
        String methodname = method.attributeValue("name");
        LOG.debug("methodname===" + methodname);
        ElearningRequests learningreq = null;
        if (methodname.equals("login")) {
            learningreq = new LoginRequest();
        } else if (methodname.equals("getLawyersInfo")) {
            // 得到律师信息
            learningreq = new GetLawyerRequest();
        } else if (methodname.equals("getLessonsInfo")) {
            learningreq = new GetLessonRequest();
        } else // 得到培训课程中已经有人培训了的课程信息
        if (methodname.equals("getClassRegInfo")) {
            learningreq = new GetClassRegRequest();
        } else if (methodname.equals("setSKRecs")) {
            learningreq = new SetSKRecsRequest();
        } else {
            learningreq = new ErrorRequest();
        }
        result.append(learningreq.requestService(method));
    } catch (Exception e) {
        result.append("<response>");
        result.append("<respcode>").append(-1).append("</respcode>");
        result.append("<respmsg>").append("系统异常:" + e.getMessage()).append("</respmsg>");
        result.append("</response>");
        LOG.error("异常:::" + e);
    } finally {
        LOG.debug("返回消息:\r\n" + result);
        response.setCharacterEncoding("utf-8");
        OutputStream os = response.getOutputStream();
        BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(os));
        writer.write(result.toString());
        writer.flush();
        writer.close();
    }
}
