boolean doFindBackward(String s, boolean ignoreCase, boolean wholeWord, boolean wrap) {
    int docLength = document.getLength();
    int startPosition = currentTextPane.getCaretPosition() - 1;
    if (startPosition < 0) {
        startPosition = docLength;
    }
    // where the search ends
    int endPos = 0;
    boolean found = false;
    boolean finished = false;
    // start of next partial search
    int start = startPosition;
    Element line = getLineAt(start);
    int lineStart = Math.max(line.getStartOffset(), endPos);
    try {
        while (!found && !finished) {
            String lineText = document.getText(lineStart, start - lineStart);
            if (lineText != null && lineText.length() > 0) {
                int foundPos = findSubstring(lineText, s, ignoreCase, wholeWord, true);
                if (foundPos != -1) {
                    currentTextPane.select(lineStart + foundPos, lineStart + foundPos + s.length());
                    currentTextPane.getCaret().setSelectionVisible(true);
                    found = true;
                }
            }
            if (lineStart <= endPos) {
                // reached end of search
                if (wrap) {
                    // do the wrapping around
                    endPos = startPosition;
                    line = document.getParagraphElement(docLength);
                    start = line.getEndOffset();
                    lineStart = Math.max(line.getStartOffset(), endPos);
                    // don't wrap again
                    wrap = false;
                } else {
                    finished = true;
                }
            } else {
                // go to next line
                line = document.getParagraphElement(lineStart - 1);
                start = line.getEndOffset();
                lineStart = Math.max(line.getStartOffset(), endPos);
            }
        }
    } catch (BadLocationException ex) {
        Debug.reportError("error in editor find operation");
        ex.printStackTrace();
    }
    return found;
}
