@Override
public void onSignalStrengthsChanged(SignalStrength SS) {
    signalStrength = SS;
    String netType = "";
    switch(TM.getNetworkType()) {
        case TelephonyManager.NETWORK_TYPE_1xRTT:
            {
                netType = "1xRTT";
                break;
            }
        case TelephonyManager.NETWORK_TYPE_CDMA:
            {
                netType = "CDMA IS95";
                break;
            }
        case TelephonyManager.NETWORK_TYPE_EDGE:
            {
                netType = "EDGE";
                break;
            }
        // }
        case TelephonyManager.NETWORK_TYPE_EVDO_0:
            {
                netType = "EVDO Rev 0";
                break;
            }
        case TelephonyManager.NETWORK_TYPE_EVDO_A:
            {
                netType = "EVDO Rev A";
                break;
            }
        // }
        case TelephonyManager.NETWORK_TYPE_GPRS:
            {
                netType = "GPRS";
                break;
            }
        case TelephonyManager.NETWORK_TYPE_HSDPA:
            {
                netType = "HSDPA";
                break;
            }
        case TelephonyManager.NETWORK_TYPE_HSPA:
            {
                netType = "HSPA";
                break;
            }
        case TelephonyManager.NETWORK_TYPE_HSUPA:
            {
                netType = "HSUPA";
                break;
            }
        // }
        case TelephonyManager.NETWORK_TYPE_UMTS:
            {
                netType = "UMTS";
                break;
            }
        case TelephonyManager.NETWORK_TYPE_UNKNOWN:
            {
                netType = "UNKNOWN";
                break;
            }
        default:
            {
                netType = "Unlisted " + Integer.toString(TM.getNetworkType());
            }
    }
    // end switch
    String phoneType = "";
    switch(TM.getPhoneType()) {
        case TelephonyManager.PHONE_TYPE_CDMA:
            {
                phoneType = "CDMA";
                break;
            }
        case TelephonyManager.PHONE_TYPE_GSM:
            {
                phoneType = "GSM";
                break;
            }
        case TelephonyManager.PHONE_TYPE_NONE:
            {
                phoneType = "NONE";
                break;
            }
        default:
            {
                phoneType = "ERROR";
            }
    }
    // switch
    String callState = "";
    switch(TM.getCallState()) {
        case TelephonyManager.CALL_STATE_IDLE:
            {
                callState = "No activity";
                break;
            }
        case TelephonyManager.CALL_STATE_OFFHOOK:
            {
                callState = "Off-hook";
                break;
            }
        case TelephonyManager.CALL_STATE_RINGING:
            {
                callState = "Ringing";
                break;
            }
        default:
            {
                callState = "ERROR";
            }
    }
    String dataActivity = "";
    switch(TM.getDataActivity()) {
        case TelephonyManager.DATA_ACTIVITY_DORMANT:
            {
                dataActivity = "Dormant";
                break;
            }
        case TelephonyManager.DATA_ACTIVITY_IN:
            {
                dataActivity = "In";
                break;
            }
        case TelephonyManager.DATA_ACTIVITY_INOUT:
            {
                dataActivity = "In/Out";
                break;
            }
        case TelephonyManager.DATA_ACTIVITY_NONE:
            {
                dataActivity = "None";
                break;
            }
        case TelephonyManager.DATA_ACTIVITY_OUT:
            {
                dataActivity = "Out";
                break;
            }
        default:
            {
                dataActivity = "ERROR";
            }
    }
    String isoCountryCode = TM.getNetworkCountryIso();
    String mccMnc = TM.getNetworkOperator();
    String netOperator = TM.getNetworkOperatorName();
    String srvOperator = TM.getSimOperatorName();
    String subId = TM.getSubscriberId();
    String devId = TM.getDeviceId();
    List<NeighboringCellInfo> Neighbors = TM.getNeighboringCellInfo();
    CellLocation CellLoc = TM.getCellLocation();
    CellLocation.requestLocationUpdate();
    CdmaCellLocation cdmaLoc;
    GsmCellLocation gsmLoc;
    int cdmaBid = -1;
    int bsLat = 0;
    int bsLon = 0;
    int cdmaNid = -1;
    int cdmaSid = -1;
    // CDMA RSSI value in dBm
    int cdmaDbm = 99999;
    // CDMA Ec/Io value in dB*10
    int cdmaEcio = 99999;
    // Get the EVDO RSSI value in dBm
    int evdoDbm = 99999;
    // EVDO Ec/Io value in dB*10
    int evdoEcio = 99999;
    // signal to noise ratio.
    int evdoSnr = 99999;
    // GSM bit error rate (0-7, 99) as
    int gsmBitErrorRate = -1;
    // defined in TS 27.007 8.5
    // GSM Signal Strength, valid values
    int gsmSignalStrength = -1;
    // are (0-31, 99) as defined in TS
    // 27.007 8.5
    int gsmCid = -1;
    int gsmLac = -1;
    if (TM.getPhoneType() == TelephonyManager.PHONE_TYPE_CDMA) {
        cdmaLoc = (CdmaCellLocation) CellLoc;
        CellLocation.requestLocationUpdate();
        cdmaBid = cdmaLoc.getBaseStationId();
        bsLat = cdmaLoc.getBaseStationLatitude();
        bsLon = cdmaLoc.getBaseStationLongitude();
        cdmaNid = cdmaLoc.getNetworkId();
        cdmaSid = cdmaLoc.getSystemId();
        if (signalStrength != null) {
            cdmaDbm = signalStrength.getCdmaDbm();
            cdmaEcio = signalStrength.getCdmaEcio();
            evdoDbm = signalStrength.getEvdoDbm();
            evdoEcio = signalStrength.getEvdoEcio();
            evdoSnr = signalStrength.getEvdoSnr();
        }
    } else if (TM.getPhoneType() == TelephonyManager.PHONE_TYPE_GSM) {
        gsmLoc = (GsmCellLocation) CellLoc;
        CellLocation.requestLocationUpdate();
        gsmCid = gsmLoc.getCid();
        gsmLac = gsmLoc.getLac();
        // hsmPsc=GSMloc.getPsc();
        if (signalStrength != null) {
            gsmBitErrorRate = signalStrength.getGsmBitErrorRate();
            gsmSignalStrength = signalStrength.getGsmSignalStrength();
        }
    }
    ;
    String nlist = "";
    NeighboringCellInfo nbor = null;
    int nborcount = Neighbors.size();
    for (int i = 1; i < nborcount; i++) {
        nbor = Neighbors.get(i);
        nlist = Integer.toString(nbor.getCid()) + '\n';
    }
    String roams = "";
    if (TM.isNetworkRoaming()) {
        roams = "Yes";
    } else {
        roams = "No";
    }
    ;
    String temp = "";
    if (gLoc != null) {
        temp = Double.toString(gLoc.getLongitude()) + ", " + Double.toString(gLoc.getLatitude()) + ", " + Double.toString(gLoc.getAltitude()) + ", " + Double.toString(gLoc.getBearing()) + ", " + Double.toString(gLoc.getSpeed()) + ", " + Double.toString(gLoc.getAccuracy()) + ", " + Double.toString(gLoc.getTime() / 1000) + " ";
    }
    temp += "Phone Type: " + phoneType + ", Network Type: " + netType + ", Call state: " + callState + '\n' + "Data activity: " + dataActivity + '\n' + "ISO Country Code: " + isoCountryCode + '\n' + "MCC+MNC: " + mccMnc + '\n' + "Network Operator: " + netOperator + '\n' + "Service Operator: " + srvOperator + '\n' + "Sub ID: " + subId + '\n' + "Device ID: " + devId + '\n' + "Roaming: " + roams + '\n' + "CDMA BID: " + Integer.toString(cdmaBid) + '\n' + "CDMA lat,lon: " + Integer.toString(bsLat) + "," + Integer.toString(bsLon) + '\n' + "CDMA RSSI value: " + Integer.toString(cdmaDbm) + " dBm" + '\n' + "CDMA Ec/Io: " + Integer.toString(cdmaEcio) + " dB*10" + '\n' + "EVDO RSSI value: " + Integer.toString(evdoDbm) + " dBm" + '\n' + "EVDO Ec/Io: " + Integer.toString(evdoEcio) + " dB*10" + '\n' + "EVDO SNR: " + Integer.toString(evdoSnr) + '\n' + "CDMA Network ID: " + Integer.toString(cdmaNid) + '\n' + "CDMA System ID: " + Integer.toString(cdmaSid) + '\n' + "GSM Signal Strengh: " + Integer.toString(gsmSignalStrength) + '\n' + "GSM BER: " + Integer.toString(gsmBitErrorRate) + '\n' + "GSM Cell ID: " + Integer.toString(gsmCid) + '\n' + "GSM Location Area Code: " + Integer.toString(gsmLac) + '\n' + "IP: " + getLocalIpAddress() + '\n' + "Number of Neighbors: " + Integer.toString(nborcount) + '\n' + "Nlist: " + nlist;
    tv.setText(temp);
}
