public static void validateInputs() {
    // If it is not one of the four operations, then fail
    if (!operation.equals(OP_CREATE_WRITE) && !operation.equals(OP_OPEN_READ) && !operation.equals(OP_RENAME) && !operation.equals(OP_DELETE)) {
        System.err.println("Error: Unknown operation: " + operation);
        displayUsage();
        System.exit(-1);
    }
    // Hadoop allows the number of maps to be 0
    if (numberOfMaps < 0) {
        System.err.println("Error: Number of maps must be a positive number");
        displayUsage();
        System.exit(-1);
    }
    // If number of reduces is a negative number or 0, then fail
    if (numberOfReduces <= 0) {
        System.err.println("Error: Number of reduces must be a positive number");
        displayUsage();
        System.exit(-1);
    }
    // If blocksize is a negative number or 0, then fail
    if (blockSize <= 0) {
        System.err.println("Error: Block size must be a positive number");
        displayUsage();
        System.exit(-1);
    }
    // If bytes to write is a negative number, then fail
    if (bytesToWrite < 0) {
        System.err.println("Error: Bytes to write must be a positive number");
        displayUsage();
        System.exit(-1);
    }
    // If bytes per checksum is a negative number, then fail
    if (bytesPerChecksum < 0) {
        System.err.println("Error: Bytes per checksum must be a positive number");
        displayUsage();
        System.exit(-1);
    }
    // If number of files is a negative number, then fail
    if (numberOfFiles < 0) {
        System.err.println("Error: Number of files must be a positive number");
        displayUsage();
        System.exit(-1);
    }
    // If replication factor is a negative number, then fail
    if (replicationFactorPerFile < 0) {
        System.err.println("Error: Replication factor must be a positive number");
        displayUsage();
        System.exit(-1);
    }
    // If block size is not a multiple of bytesperchecksum, fail
    if (blockSize % bytesPerChecksum != 0) {
        System.err.println("Error: Block Size in bytes must be a multiple of " + "bytes per checksum: ");
        displayUsage();
        System.exit(-1);
    }
}
