public void serialize(final javax.xml.namespace.QName parentQName, final org.apache.axiom.om.OMFactory factory, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
    java.lang.String prefix = parentQName.getPrefix();
    java.lang.String namespace = parentQName.getNamespaceURI();
    if (namespace != null) {
        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
        if (writerPrefix != null) {
            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
        } else {
            if (prefix == null) {
                prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
            }
            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
            xmlWriter.writeNamespace(prefix, namespace);
            xmlWriter.setPrefix(prefix, namespace);
        }
    } else {
        xmlWriter.writeStartElement(parentQName.getLocalPart());
    }
    namespace = "http://www.tid.es/schema/parlayx/presence/consumer/v1_1";
    if (!namespace.equals("")) {
        prefix = xmlWriter.getPrefix(namespace);
        if (prefix == null) {
            prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
            xmlWriter.writeStartElement(prefix, "watcher", namespace);
            xmlWriter.writeNamespace(prefix, namespace);
            xmlWriter.setPrefix(prefix, namespace);
        } else {
            xmlWriter.writeStartElement(namespace, "watcher");
        }
    } else {
        xmlWriter.writeStartElement("watcher");
    }
    if (localWatcher == null) {
        throw new RuntimeException("watcher cannot be null!!");
    } else {
        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localWatcher));
    }
    xmlWriter.writeEndElement();
    if (localPresentities != null) {
        namespace = "http://www.tid.es/schema/parlayx/presence/consumer/v1_1";
        boolean emptyNamespace = namespace == null || namespace.length() == 0;
        prefix = emptyNamespace ? null : xmlWriter.getPrefix(namespace);
        for (int i = 0; i < localPresentities.length; i++) {
            if (localPresentities[i] != null) {
                if (!emptyNamespace) {
                    if (prefix == null) {
                        java.lang.String prefix2 = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                        xmlWriter.writeStartElement(prefix2, "presentities", namespace);
                        xmlWriter.writeNamespace(prefix2, namespace);
                        xmlWriter.setPrefix(prefix2, namespace);
                    } else {
                        xmlWriter.writeStartElement(namespace, "presentities");
                    }
                } else {
                    xmlWriter.writeStartElement("presentities");
                }
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPresentities[i]));
                xmlWriter.writeEndElement();
            } else {
                throw new RuntimeException("presentities cannot be null!!");
            }
        }
    } else {
        throw new RuntimeException("presentities cannot be null!!");
    }
    if (localAttributesTracker) {
        if (localAttributes != null) {
            for (int i = 0; i < localAttributes.length; i++) {
                if (localAttributes[i] != null) {
                    localAttributes[i].serialize(new javax.xml.namespace.QName("http://www.tid.es/schema/parlayx/presence/consumer/v1_1", "attributes"), factory, xmlWriter);
                } else {
                // we don't have to do any thing since minOccures is zero
                }
            }
        } else {
            throw new RuntimeException("attributes cannot be null!!");
        }
    }
    namespace = "http://www.tid.es/schema/parlayx/presence/consumer/v1_1";
    if (!namespace.equals("")) {
        prefix = xmlWriter.getPrefix(namespace);
        if (prefix == null) {
            prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
            xmlWriter.writeStartElement(prefix, "application", namespace);
            xmlWriter.writeNamespace(prefix, namespace);
            xmlWriter.setPrefix(prefix, namespace);
        } else {
            xmlWriter.writeStartElement(namespace, "application");
        }
    } else {
        xmlWriter.writeStartElement("application");
    }
    if (localApplication == null) {
        throw new RuntimeException("application cannot be null!!");
    } else {
        xmlWriter.writeCharacters(localApplication);
    }
    xmlWriter.writeEndElement();
    if (localReference == null) {
        throw new RuntimeException("reference cannot be null!!");
    }
    localReference.serialize(new javax.xml.namespace.QName("http://www.tid.es/schema/parlayx/presence/consumer/v1_1", "reference"), factory, xmlWriter);
    xmlWriter.writeEndElement();
}
