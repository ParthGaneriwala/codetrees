protected static void writeLzopHeader(OutputStream out, LzoCompressor.CompressionStrategy strategy) throws IOException {
    DataOutputBuffer dob = new DataOutputBuffer();
    try {
        dob.writeShort(LZOP_VERSION);
        dob.writeShort(LzoCompressor.LZO_LIBRARY_VERSION);
        dob.writeShort(LZOP_COMPAT_VERSION);
        switch(strategy) {
            case LZO1X_1:
                dob.writeByte(1);
                dob.writeByte(5);
                break;
            case LZO1X_15:
                dob.writeByte(2);
                dob.writeByte(1);
                break;
            case LZO1X_999:
                dob.writeByte(3);
                dob.writeByte(9);
                break;
            default:
                throw new IOException("Incompatible lzop strategy: " + strategy);
        }
        // all flags 0
        dob.writeInt(0);
        // mode
        dob.writeInt(0x81A4);
        // mtime
        dob.writeInt((int) (System.currentTimeMillis() / 1000));
        // gmtdiff ignored
        dob.writeInt(0);
        // no filename
        dob.writeByte(0);
        Adler32 headerChecksum = new Adler32();
        headerChecksum.update(dob.getData(), 0, dob.getLength());
        int hc = (int) headerChecksum.getValue();
        dob.writeInt(hc);
        out.write(LZO_MAGIC);
        out.write(dob.getData(), 0, dob.getLength());
    } finally {
        dob.close();
    }
}
