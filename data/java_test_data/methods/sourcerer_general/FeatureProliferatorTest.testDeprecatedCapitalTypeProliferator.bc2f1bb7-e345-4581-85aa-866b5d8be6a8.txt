@Test
public void testDeprecatedCapitalTypeProliferator() {
    FeatureProliferator proliferator = new CapitalTypeProliferator("NewName");
    Feature feature = new Feature("OrigName", "HI");
    List<Feature> caseTypeFeatures = proliferator.proliferate(feature);
    Assert.assertEquals(1, caseTypeFeatures.size());
    Assert.assertEquals(CapitalTypeProliferator.ALL_UPPERCASE, caseTypeFeatures.get(0).getValue());
    Assert.assertEquals("NewName_OrigName", caseTypeFeatures.get(0).getName());
    feature.setValue("hi");
    caseTypeFeatures = proliferator.proliferate(feature);
    Assert.assertEquals(1, caseTypeFeatures.size());
    Assert.assertEquals(CapitalTypeProliferator.ALL_LOWERCASE, caseTypeFeatures.get(0).getValue());
    feature.setValue("Hi");
    caseTypeFeatures = proliferator.proliferate(feature);
    Assert.assertEquals(1, caseTypeFeatures.size());
    Assert.assertEquals(CapitalTypeProliferator.INITIAL_UPPERCASE, caseTypeFeatures.get(0).getValue());
    feature.setValue("HigH");
    caseTypeFeatures = proliferator.proliferate(feature);
    Assert.assertEquals(1, caseTypeFeatures.size());
    Assert.assertEquals(CapitalTypeProliferator.MIXED_CASE, caseTypeFeatures.get(0).getValue());
    feature.setValue("!234");
    caseTypeFeatures = proliferator.proliferate(feature);
    Assert.assertEquals(0, caseTypeFeatures.size());
    feature.setValue("!@#a@#\\$");
    caseTypeFeatures = proliferator.proliferate(feature);
    Assert.assertEquals(1, caseTypeFeatures.size());
    Assert.assertEquals(CapitalTypeProliferator.ALL_LOWERCASE, caseTypeFeatures.get(0).getValue());
    feature.setValue("\t\n");
    caseTypeFeatures = proliferator.proliferate(feature);
    Assert.assertEquals(0, caseTypeFeatures.size());
}
