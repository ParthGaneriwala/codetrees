// }}}
// {{{ gotoURL() method
public void gotoURL(String url, boolean addToHistory, final int scrollPosition) {
    // the TOC pane looks up user's guide URLs relative to the
    // doc directory...
    String shortURL;
    if (MiscUtilities.isURL(url)) {
        if (url.startsWith(baseURL)) {
            shortURL = url.substring(baseURL.length());
            if (shortURL.startsWith("/")) {
                shortURL = shortURL.substring(1);
            }
        } else {
            shortURL = url;
        }
    } else {
        shortURL = url;
        if (baseURL.endsWith("/")) {
            url = baseURL + url;
        } else {
            url = baseURL + '/' + url;
        }
    }
    // reset default cursor so that the hand cursor doesn't
    // stick around
    viewer.setCursor(Cursor.getDefaultCursor());
    try {
        URL _url = new URL(url);
        if (!_url.equals(viewer.getPage())) {
            title.setText(jEdit.getProperty("helpviewer.loading"));
        } else {
        /* don't show loading msg because we won't
				   receive a propertyChanged */
        }
        historyModel.setCurrentScrollPosition(viewer.getPage(), getCurrentScrollPosition());
        viewer.setPage(_url);
        if (0 != scrollPosition) {
            SwingUtilities.invokeLater(new Runnable() {

                public void run() {
                    viewerScrollPane.getVerticalScrollBar().setValue(scrollPosition);
                }
            });
        }
        if (addToHistory) {
            historyModel.addToHistory(url);
        }
    } catch (MalformedURLException mf) {
        Log.log(Log.ERROR, this, mf);
        String[] args = { url, mf.getMessage() };
        GUIUtilities.error(this, "badurl", args);
        return;
    } catch (IOException io) {
        Log.log(Log.ERROR, this, io);
        String[] args = { url, io.toString() };
        GUIUtilities.error(this, "read-error", args);
        return;
    }
    this.shortURL = shortURL;
    // select the appropriate tree node.
    if (shortURL != null) {
        toc.selectNode(shortURL);
    }
    viewer.requestFocus();
}
