public void sendToIndexer(String link, ArrayList<String> links) {
    if (links != null) {
        System.out.println("Links to Indexer: " + links.size() + ", URL: " + link);
    } else {
        System.out.println("Doc to Indexer: " + link);
    }
    URL url;
    String content = null;
    try {
        url = new URL(link);
        content = getContentOfURL(url);
    } catch (MalformedURLException e) {
        e.printStackTrace();
        System.out.print("ERROR: invalid URL " + link + "\n");
        return;
    } catch (IOException e) {
        e.printStackTrace();
        return;
    }
    try {
        // String addr = hostname;
        System.out.println("Trying to send to: " + hostname + ", " + p);
        InetAddress addr = InetAddress.getByName(hostname);
        Socket s = new Socket(addr.getHostName(), Integer.parseInt(p));
        System.out.println("Connection succeeded on port " + p + ".");
        // formulate QUERY
        String data = link.toLowerCase() + "\n";
        if (links != null) {
            for (int i = 0; i < links.size(); i++) {
                if (links.get(i).endsWith("/")) {
                    data += links.get(i).substring(0, links.get(i).length() - 1) + " ";
                } else {
                    data += links.get(i) + " ";
                }
            }
        }
        data += "\n" + content + "\n";
        // 17098
        System.out.println(link + ": " + data.getBytes().length);
        // Send header
        BufferedWriter wr = new BufferedWriter(new OutputStreamWriter(s.getOutputStream()));
        wr.write("POST / HTTP/1.0\n");
        wr.write("Content-Length: " + data.getBytes().length + "\n");
        wr.write("\n");
        wr.write(data);
        wr.flush();
        Isent++;
        System.out.println("Searched: " + Isent);
    } catch (Exception e) {
        e.printStackTrace();
    }
}
