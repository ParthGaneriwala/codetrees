public ActionForward AsignaturaAct(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    // Salidas
    final String SALIDA_0 = "asignatura";
    String salida = SALIDA_0;
    Session s = HibernateUtil.getSessionFactory().getCurrentSession();
    Transaction tr = s.beginTransaction();
    try {
        FAsignatura fFAsignatura = (FAsignatura) form;
        FormFile myFile = fFAsignatura.getPrograma1();
        String nombrefile = new String();
        if (myFile == null) {
            nombrefile = fFAsignatura.getPrograma2();
        } else {
            String contentType = myFile.getContentType();
            String fileName = myFile.getFileName();
            // int fileSize       = myFile.getFileSize();
            byte[] fileData = myFile.getFileData();
            // Get the servers upload directory real path name
            String filePath = getServlet().getServletContext().getRealPath("/") + "upload";
            /* Save file on the server */
            if (!fileName.equals("")) {
                System.out.println("Server path:" + filePath);
                // Create file
                File fileToCreate = new File(filePath, fileName);
                // If file does not exists create file
                if (!fileToCreate.exists()) {
                    FileOutputStream fileOutStream = new FileOutputStream(fileToCreate);
                    fileOutStream.write(myFile.getFileData());
                    fileOutStream.flush();
                    fileOutStream.close();
                }
            }
            nombrefile = "http://localhost:8084/colisiones/upload/" + fileName;
        }
        Asignatura asignatura = (Asignatura) s.load(Asignatura.class, new Long(fFAsignatura.getIdAsignatura()));
        asignatura.setCodigo(fFAsignatura.getCodigo());
        asignatura.setNombre(fFAsignatura.getNombre());
        asignatura.setHorast(fFAsignatura.getHorast());
        asignatura.setHorasp(fFAsignatura.getHorasp());
        asignatura.setHorasl(fFAsignatura.getHorasl());
        asignatura.setPrograma(nombrefile);
        // Feed for combo listDepartamento.
        {
            java.util.List<ve.usb.cohesion.runtime.Pair> list = (java.util.List<ve.usb.cohesion.runtime.Pair>) s.createQuery("select new ve.usb.cohesion.runtime.Pair(nombre, idDepartamento) " + "from Departamento").list();
            list.add(0, new ve.usb.cohesion.runtime.Pair("Ninguna", 0));
            fFAsignatura.setListDepartamento(list);
        }
        request.getSession().setAttribute("idDepartamento", fFAsignatura.getDepartamento());
        request.getSession().setAttribute("idAsignatura", asignatura.getIdAsignatura());
        tr.commit();
    } catch (Exception ex) {
        tr.rollback();
        throw ex;
    }
    return mapping.findForward(salida);
}
