public void testAdCRUD() throws SQLException {
    // Insert ad
    Ad ad = new Ad();
    ad.setHeading("Ad SQL Test");
    ad.setContent("Ad SQL Test Description");
    ad.setWebPage("http://www.concursive.com");
    ad.setPublishDate("05/15/2010");
    ad.setExpirationDate("05/15/2020");
    ad.setEntered("01/01/2000");
    ad.setEnabled("true");
    ad.setEnteredBy("" + USER_ID);
    ad.setModifiedBy("" + USER_ID);
    assertNotNull(ad);
    boolean result = ad.insert(db);
    assertTrue("Ad was not inserted", result);
    assertTrue("Inserted ad did not have an id", ad.getId() > -1);
    // Update ad
    // Try updating without reloading the ad
    assertNull(ad.getModified());
    assertTrue("Ad to update does not have an id", ad.getId() > -1);
    int updateCount = ad.update(db);
    assertTrue("The modified field checks for concurrent updates so the modified field must match the load value", updateCount == 0);
    // Reload the ad, then update
    assertTrue(ad.getId() > -1);
    ad = new Ad(db, ad.getId());
    ad.setHeading("Ad SQL Test Updated ad");
    updateCount = ad.update(db);
    assertTrue("The ad was not updated by the database", updateCount == 1);
    // Find the previously set ad
    int adId = ad.getId();
    ad = null;
    AdList adList = new AdList();
    adList.setEnabled(Constants.TRUE);
    adList.buildList(db);
    assertTrue(adList.size() > 0);
    for (Ad thisAd : adList) {
        if (thisAd.getId() == adId) {
            ad = thisAd;
            break;
        }
    }
    assertNotNull(ad);
    // Delete the ad
    assertNotNull(ad);
    ad.delete(db);
    adId = ad.getId();
    ad = null;
    // Try to find the previously deleted ad
    adList = new AdList();
    adList.buildList(db);
    for (Ad thisAd : adList) {
        if (thisAd.getId() == adId) {
            assertNull("Ad exists when it shouldn't", thisAd);
        }
    }
}
