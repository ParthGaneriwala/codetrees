public void update() {
    sLog.finest("User's position has changed, Map is now beig updated");
    if (mCycle == 0) {
        // Load the selected tour
        loadTour();
        // Inform tour manager we're ready
        TourManager.getInstance().start();
    }
    WayPt pos = LocationManager.getInstance().getCurPosition();
    // which should not be possible.
    if (pos != null) {
        sLog.finest("New position obtained from LocationManager: " + pos.toString());
        curPosition = pos;
    }
    // Update the view with the user at the center
    this.updateView();
    // Save the old col, row of the upper left tile since it is possible
    // for the state to be the same but the tiles need to be refreshed
    // especially if the view is the same size or larger than a tile.
    int oldRow = mLayer[UPPER_LEFT].mRow;
    int oldCol = mLayer[UPPER_LEFT].mCol;
    // Update the tile info
    this.updateTiles();
    // Get the new tile configuration
    try {
        Config newConfig = this.getConfig();
        if (newConfig != mCurConfig || oldRow != mLayer[UPPER_LEFT].mRow || oldCol != mLayer[UPPER_LEFT].mCol) {
            this.pageInTiles(newConfig);
            mCurConfig = newConfig;
        } else {
            this.pageInTiles(newConfig);
        }
    } catch (Exception e) {
        sLog.log(Level.SEVERE, "An error occurred while updating map: ", e);
    }
    // Get the tiled layer's upper left corner
    mLayerX = mLayer[UPPER_LEFT].mCol * Tile.sWidth - mViewX;
    mLayerY = mLayer[UPPER_LEFT].mRow * Tile.sHeight - mViewY;
    // Move the locator
    mLocator.update(curPosition.getX(), curPosition.getY());
    // Update the way manager
    mLayManager.update();
    mCycle++;
}
