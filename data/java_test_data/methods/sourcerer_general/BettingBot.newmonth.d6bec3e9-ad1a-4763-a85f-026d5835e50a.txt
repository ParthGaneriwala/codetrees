public void newmonth() {
    monthmonth = month;
    monthday = day;
    monthhour = hour;
    monthminute = minute;
    String monthFirst = "";
    String monthSecond = "";
    String monthThird = "";
    float monthFirstChips = 0;
    float monthSecondChips = 0;
    float monthThirdChips = 0;
    int decer = 0;
    boolean over = true;
    int IDFirst = 0;
    int IDSecond = 0;
    int IDThird = 0;
    do {
        over = true;
        for (int k = 1; k < 500; k++) {
            if (userService.bestMonthList[userService.maxID - decer - 1].getProfitForMonth() < userService.bestMonthList[userService.maxID - decer - 1 - k].getProfitForMonth()) {
                over = false;
            }
        }
        decer = decer + 1;
    } while (!over);
    if (userService.bestMonthList[userService.maxID - decer].getHandle().equalsIgnoreCase("Kiebitz")) {
        monthFirst = userService.bestMonthList[userService.maxID - decer - 1].getHandle();
        monthFirstChips = userService.bestMonthList[userService.maxID - decer - 1].getProfitForMonth();
        monthSecond = userService.bestMonthList[userService.maxID - decer - 2].getHandle();
        monthSecondChips = userService.bestMonthList[userService.maxID - decer - 2].getProfitForMonth();
        monthThird = userService.bestMonthList[userService.maxID - decer - 3].getHandle();
        monthThirdChips = userService.bestMonthList[userService.maxID - decer - 3].getProfitForMonth();
    } else {
        if (userService.bestMonthList[userService.maxID - decer - 1].getHandle().equalsIgnoreCase("Kiebitz")) {
            monthFirst = userService.bestMonthList[userService.maxID - decer].getHandle();
            monthFirstChips = userService.bestMonthList[userService.maxID - decer].getProfitForMonth();
            monthSecond = userService.bestMonthList[userService.maxID - decer - 2].getHandle();
            monthSecondChips = userService.bestMonthList[userService.maxID - decer - 2].getProfitForMonth();
            monthThird = userService.bestMonthList[userService.maxID - decer - 3].getHandle();
            monthThirdChips = userService.bestMonthList[userService.maxID - decer - 3].getProfitForMonth();
        } else {
            if (userService.bestMonthList[userService.maxID - decer - 2].getHandle().equalsIgnoreCase("Kiebitz")) {
                monthFirst = userService.bestMonthList[userService.maxID - decer].getHandle();
                monthFirstChips = userService.bestMonthList[userService.maxID - decer].getProfitForMonth();
                monthSecond = userService.bestMonthList[userService.maxID - decer - 1].getHandle();
                monthSecondChips = userService.bestMonthList[userService.maxID - decer - 1].getProfitForMonth();
                monthThird = userService.bestMonthList[userService.maxID - decer - 3].getHandle();
                monthThirdChips = userService.bestMonthList[userService.maxID - decer - 3].getProfitForMonth();
            } else {
                monthFirst = userService.bestMonthList[userService.maxID - decer].getHandle();
                monthFirstChips = userService.bestMonthList[userService.maxID - decer].getProfitForMonth();
                monthSecond = userService.bestMonthList[userService.maxID - decer - 1].getHandle();
                monthSecondChips = userService.bestMonthList[userService.maxID - decer - 1].getProfitForMonth();
                monthThird = userService.bestMonthList[userService.maxID - decer - 2].getHandle();
                monthThirdChips = userService.bestMonthList[userService.maxID - decer - 2].getProfitForMonth();
            }
        }
    }
    for (int i = 0; i < userService.maxID; i++) {
        if (monthFirst.equalsIgnoreCase(userService.users[i].handle)) {
            IDFirst = i;
        }
        if (monthSecond.equalsIgnoreCase(userService.users[i].handle)) {
            IDSecond = i;
        }
        if (monthThird.equalsIgnoreCase(userService.users[i].handle)) {
            IDThird = i;
        }
    }
    if (userService.users[IDFirst].getMasterPoints() == 0) {
        userService.masterHandleList[userService.masterCounter] = monthFirst;
        userService.masterPointsList[userService.masterCounter] = userService.users[IDFirst].getMasterPoints() + 3;
        userService.masterCounter = userService.masterCounter + 1;
    }
    userService.users[IDFirst].awardMasterPoints(3);
    if (userService.users[IDSecond].getMasterPoints() == 0) {
        userService.masterHandleList[userService.masterCounter] = monthSecond;
        userService.masterPointsList[userService.masterCounter] = userService.users[IDSecond].getMasterPoints() + 2;
        userService.masterCounter = userService.masterCounter + 1;
    }
    userService.users[IDSecond].awardMasterPoints(2);
    if (userService.users[IDThird].getMasterPoints() == 0) {
        userService.masterHandleList[userService.masterCounter] = monthThird;
        userService.masterPointsList[userService.masterCounter] = userService.users[IDThird].getMasterPoints() + 1;
        userService.masterCounter = userService.masterCounter + 1;
    }
    userService.users[IDThird].awardMasterPoints(1);
    monthlyprint(monthFirst, monthSecond, monthThird, monthFirstChips, monthSecondChips, monthThirdChips);
    Date newmonthdate = null;
    newmonthdate = new Date(System.currentTimeMillis() - timeDifference);
    int newmonthyear = newmonthdate.getYear();
    int newmonthmonth = newmonthdate.getMonth();
    String oldMonthFileName = "om" + newmonthyear + newmonthmonth + ".txt";
    String oline = "";
    int orank = 1;
    DataOutputStream doso = null;
    try {
        doso = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(oldMonthFileName)));
        for (int i = userService.maxID - decer; i > 0; i--) {
            if ((userService.bestMonthList[i].getProfitForMonth() != 0.0f) && !(userService.bestMonthList[i].getHandle().equalsIgnoreCase("Kiebitz")) && !(userService.bestMonthList[i].getHandle().equalsIgnoreCase("LendaFan"))) {
                oline = spaces.substring(0, 4 - digits(orank)) + orank + ". " + userService.bestMonthList[i].getHandle() + spaces.substring(0, 20 - userService.bestMonthList[i].getHandle().length()) + (int) (userService.bestMonthList[i].getProfitForMonth());
                doso.writeBytes(oline);
                doso.writeByte('\n');
            }
            if (!(userService.bestMonthList[i].getHandle().equalsIgnoreCase("Kiebitz")) && !(userService.bestMonthList[i].getHandle().equalsIgnoreCase("LendaFan"))) {
                orank = orank + 1;
            }
        }
    } catch (IOException e) {
        logException(e);
    } finally {
        FileHelper.closeQuietly(doso);
    }
    for (int i = 0; i < userService.maxID; i++) {
        if (active[i]) {
            userService.users[i].actualChips = userService.users[i].actualChips + userService.users[i].futures;
        }
        userService.users[i].actualChips = userService.users[i].actualChips + userService.users[i].futures;
        userService.users[i].futures = 0;
        userService.users[i].monthlyFuturesTurnover = 0;
    }
    for (int i = 2; i < orderBook[0].size(); i++) {
        orderBook[0].removeElementAt(i);
        orderBook[1].removeElementAt(i);
        orderBook[2].removeElementAt(i);
        orderBookTimeStamp.removeElementAt(i);
        i = i - 1;
    }
    DataOutputStream dosq1 = null;
    try {
        dosq1 = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(TRANSACTIONS_DB)));
        dosq1.writeInt(-1);
        dosq1.writeLong(System.currentTimeMillis());
    } catch (IOException e) {
        logException(e);
    } finally {
        FileHelper.closeQuietly(dosq1);
    }
    for (int i = 0; i < userService.maxID; i++) {
        userService.users[i].chipsLastMonth = userService.users[i].getTotalValue();
    }
    userService.saveMonthlyChips();
    monthbreak = false;
}
