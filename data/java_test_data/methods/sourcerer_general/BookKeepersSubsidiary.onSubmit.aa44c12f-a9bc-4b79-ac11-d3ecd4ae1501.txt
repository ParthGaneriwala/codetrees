public void onSubmit() {
    try {
        String date = (String) dateModel.getObject();
        String particulars = (String) particularsModel.getObject();
        String assessment = (String) assessmentModel.getObject();
        String fines = (String) finesModel.getObject();
        String interest = (String) interestModel.getObject();
        String donations = (String) donationsModel.getObject();
        String uploader = ((Sessions) getSession()).getDesc();
        Date today = new Date();
        Timestamp timestamp = new Timestamp(today.getTime());
        String ts = timestamp.toString();
        System.out.println("date: " + date + " particular: " + particulars + " assesment: " + assessment + " fines: " + fines + " interest: " + interest + "donations: " + donations);
        BKSubsidiary bs = new BKSubsidiary();
        bs.setDate(date);
        bs.setParticulars(particulars);
        float newAssessment = Float.valueOf(assessment);
        bs.setAssessment(newAssessment);
        float newFines = Float.valueOf(fines);
        bs.setFines(newFines);
        float newInterest = Float.valueOf(interest);
        bs.setInterest_deposits(newInterest);
        float newDonations = Float.valueOf(donations);
        bs.setDonations_solicitations(newDonations);
        bs.setUploader(uploader);
        bs.setDate_created(ts);
        bs.setStatus("PENDING");
        sqlMap.insert("BKSubsidiary.insert", bs);
        Logs log = new Logs();
        log.setLog_activity("Book Keepers Subsidiary Records of Cash Receipts: " + particulars);
        log.setLog_officer(uploader);
        log.setLog_time(ts);
        sqlMap.insert("Logs.insert", log);
        BookKeepersSubsidiaryList page = new BookKeepersSubsidiaryList();
        setResponsePage(page);
        error("added");
    } catch (SQLException e) {
        error("Fill up necessary fields");
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
