public void example() throws Exception {
    String destinationName = getDestinationJNDIName();
    InitialContext ic = null;
    Connection connection = null;
    try {
        ic = new InitialContext();
        ConnectionFactory cf = (ConnectionFactory) ic.lookup("/ConnectionFactory");
        Topic topic = (Topic) ic.lookup(destinationName);
        log("Topic " + destinationName + " exists");
        connection = cf.createConnection();
        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
        MessageProducer publisher = session.createProducer(topic);
        MessageConsumer subscriber = session.createConsumer(topic);
        ExampleListener messageListener = new ExampleListener();
        subscriber.setMessageListener(messageListener);
        connection.start();
        TextMessage message = session.createTextMessage("Hello! 1,2,3");
        publisher.send(message);
        log("The message was successfully published on the topic");
        messageListener.waitForMessage();
        message = (TextMessage) messageListener.getMessage();
        log("Received message: " + message.getText());
        assertEquals("Hello! 1,2,3", message.getText());
        log("This time no new message published");
        messageListener.waitForMessage();
        message = (TextMessage) messageListener.getMessage();
        log("Received message: " + message.getText());
        assertEquals("Hello! 1,2,3", message.getText());
        displayProviderInfo(connection.getMetaData());
    } finally {
        if (ic != null) {
            try {
                ic.close();
            } catch (Exception e) {
                throw e;
            }
        }
        // ALWAYS close your connection in a finally block to avoid leaks.
        // Closing connection also takes care of closing its related objects e.g. sessions.
        closeConnection(connection);
    }
}
