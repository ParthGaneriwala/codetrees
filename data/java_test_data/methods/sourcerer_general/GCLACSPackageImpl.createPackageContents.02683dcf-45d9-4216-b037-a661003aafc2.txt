public void createPackageContents() {
    if (isCreated)
        return;
    isCreated = true;
    // Create classes and their features
    document_RootEClass = createEClass(DOCUMENT_ROOT);
    createEReference(document_RootEClass, DOCUMENT_ROOT__COMPONENT_INSTANCE);
    interfaceEClass = createEClass(INTERFACE);
    createEAttribute(interfaceEClass, INTERFACE__NAME);
    createEReference(interfaceEClass, INTERFACE__SERVICE);
    componentInstanceEClass = createEClass(COMPONENT_INSTANCE);
    createEAttribute(componentInstanceEClass, COMPONENT_INSTANCE__NAME);
    createEReference(componentInstanceEClass, COMPONENT_INSTANCE__INTERFACE);
    createEReference(componentInstanceEClass, COMPONENT_INSTANCE__COMPONENT_INSTANCE);
    createEReference(componentInstanceEClass, COMPONENT_INSTANCE__PORT);
    createEReference(componentInstanceEClass, COMPONENT_INSTANCE__BINDING);
    createEAttribute(componentInstanceEClass, COMPONENT_INSTANCE__KIND);
    createEAttribute(componentInstanceEClass, COMPONENT_INSTANCE__WIDTH);
    createEAttribute(componentInstanceEClass, COMPONENT_INSTANCE__HEIGHT);
    createEAttribute(componentInstanceEClass, COMPONENT_INSTANCE__DEFINE_BY_DESCRIPTOR);
    servicesEClass = createEClass(SERVICES);
    createEAttribute(servicesEClass, SERVICES__NAME);
    createEAttribute(servicesEClass, SERVICES__KIND);
    createEReference(servicesEClass, SERVICES__ARG);
    createEReference(servicesEClass, SERVICES__BODY);
    createEAttribute(servicesEClass, SERVICES__RETURNED_TYPE);
    portEClass = createEClass(PORT);
    createEAttribute(portEClass, PORT__NAME);
    createEAttribute(portEClass, PORT__VISIBILITY);
    createEAttribute(portEClass, PORT__XP);
    createEAttribute(portEClass, PORT__YP);
    createEReference(portEClass, PORT__DEFINE_BY_INTERFACE);
    requiredPortEClass = createEClass(REQUIRED_PORT);
    bindingEClass = createEClass(BINDING);
    createEAttribute(bindingEClass, BINDING__KIND);
    createEAttribute(bindingEClass, BINDING__GLUE);
    createEReference(bindingEClass, BINDING__SOURCE);
    createEReference(bindingEClass, BINDING__TARGET);
    createEAttribute(bindingEClass, BINDING__NAME);
    createEAttribute(bindingEClass, BINDING__USED_SERVICE_NAME);
    createEAttribute(bindingEClass, BINDING__USED_SERVICE_ARGS);
    providedPortEClass = createEClass(PROVIDED_PORT);
    defineByInterfaceEClass = createEClass(DEFINE_BY_INTERFACE);
    createEReference(defineByInterfaceEClass, DEFINE_BY_INTERFACE__INTERFACE);
    createEReference(defineByInterfaceEClass, DEFINE_BY_INTERFACE__PORT);
    argEClass = createEClass(ARG);
    createEAttribute(argEClass, ARG__NAME);
    createEAttribute(argEClass, ARG__TYPE);
    bodyTypeEClass = createEClass(BODY_TYPE);
    createEAttribute(bodyTypeEClass, BODY_TYPE__VALUE);
    createEAttribute(bodyTypeEClass, BODY_TYPE__LANGUAGE);
    // Create enums
    bindingKindEEnum = createEEnum(BINDING_KIND);
    componentKindEEnum = createEEnum(COMPONENT_KIND);
    visibilityEEnum = createEEnum(VISIBILITY);
    serviceKindEEnum = createEEnum(SERVICE_KIND);
}
