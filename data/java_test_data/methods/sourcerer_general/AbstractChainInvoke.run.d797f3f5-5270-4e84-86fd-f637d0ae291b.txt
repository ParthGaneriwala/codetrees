protected String run() {
    String result = "0";
    Chain chain = chainContext.getChain();
    if (chain.getChainFlows() == null || chain.getChainFlows().size() == 0) {
        String errorMsg = "error-as-00004";
        logger.warn("Start Chain error: [" + errorMsg + "]");
        chainContext.addSimuList("<font color=red>" + errorMsg + "</font>");
        result = "98";
    } else {
        String flowCode = Configuration.FLOW_CODE_START;
        List<String> tmpList = new ArrayList<String>();
        while (true) {
            ChainFlow chainFlow = chain.getChainFlow(flowCode);
            if (chainFlow == null) {
                String errorMsg = "error-as-00005";
                logger.warn("Start Chain Flow [" + flowCode + "] error: [" + errorMsg + "]");
                chainContext.addSimuList("<font color=red>" + errorMsg + "</font>");
                result = "98";
                break;
            }
            if (Configuration.FLOW_TYPE_END.equals(chainFlow.getFlowType())) {
                break;
            }
            try {
                FlowType flow = getFlowType(chainFlow.getFlowType());
                flow.setChainFlow(chainFlow);
                String iRet = flow.runFlow(chainFlow, chainContext);
                if (!iRet.equals("0")) {
                    if (!iRet.equals("98")) {
                        result = iRet;
                    } else {
                        result = "98";
                        break;
                    }
                }
                tmpList.add(flowCode);
            } catch (Exception e) {
                String errorMsg = e.getMessage();
                logger.warn("Run Chain error: [" + errorMsg + "]");
                chainContext.addSimuList("<font color=red>" + errorMsg + "</font>");
                result = "98";
                break;
            }
            flowCode = chainFlow.getNextFlowCode();
            if (tmpList.contains(flowCode)) {
                String errorMsg = "Chain flow loop.";
                logger.warn("Run Chain error: [" + errorMsg + "]");
                chainContext.addSimuList("<font color=red>" + errorMsg + "</font>");
                result = "98";
                break;
            }
            if (StringUtils.isEmpty(flowCode)) {
                String errorMsg = "error-as-00005";
                logger.warn("Run Chain Flow [" + flowCode + "]error: [" + errorMsg + "]");
                chainContext.addSimuList("<font color=red>" + errorMsg + "</font>");
                result = "98";
                break;
            }
        }
    }
    if (this.chainContext != null && chainContext.getConnectionIterator() != null) {
        Iterator<Connection> iter = chainContext.getConnectionIterator();
        while (iter.hasNext()) {
            Connection conn = (Connection) iter.next();
            if (conn != null) {
                try {
                    if (!conn.getAutoCommit() && !conn.isClosed()) {
                        conn.commit();
                    }
                } catch (Exception e) {
                    logger.error("Commit the transaction error.", e);
                    chainContext.addSimuList("Commit the transaction error [" + e.getMessage() + "]");
                    result = "98";
                } finally {
                    DbUtil.closeQuietly(conn);
                }
            }
        }
    }
    if (this.chainContext != null && chainContext.getDatasourceIterator() != null) {
        Iterator<DataSource> iter = chainContext.getDatasourceIterator();
        while (iter.hasNext()) {
            DataSource ds = (DataSource) iter.next();
            if (ds != null) {
                DbUtil.shutdownDataSourceQuietly(ds);
            }
        }
    }
    return result;
}
