protected void addPaintCaption(Graphics2D bg, Color bgdColor) {
    // On agrandit le clip (pour dessiner sur tout le bouton)
    bg.setClip(0, 0, getWidth(), getHeight());
    // On regarde ce que l'on doit dessiner, image ou texte
    if (getCoreKey().isCaptionImage() == true) // Dessin de l'image
    {
        originalCaptionImage = getCaptionImage();
        if (originalCaptionImage == null) {
            return;
        }
        // Calcul du facteur de réduction
        float scaleFactor = 1f;
        // Dimensions de l'image originale
        int imageWidth = originalCaptionImage.getWidth(null);
        int imageHeight = originalCaptionImage.getHeight(null);
        // Calcul de la "place" qu'il reste en largeur et en hauteur
        int widthPlace = getWidth() - imageWidth;
        int heightPlace = getHeight() - imageHeight;
        if (widthPlace >= heightPlace) // On redimensionne selon la HAUTEUR
        {
            scaleFactor = (float) getHeight() / (float) imageHeight;
        } else if (widthPlace < heightPlace) // On redimensionne selon la LARGEUR
        {
            scaleFactor = (float) getWidth() / (float) imageWidth;
        }
        // Calcul des nouvelles dimensions
        int newW = Math.round(imageWidth * scaleFactor) - 2 * CAPTION_IMAGE_BORDER_SIZE;
        int newH = Math.round(imageHeight * scaleFactor) - 2 * CAPTION_IMAGE_BORDER_SIZE;
        // Calcul de la position de dessin
        int xPosition = Math.round(((float) getWidth() / 2) - ((float) newW / 2));
        int yPosition = Math.round(((float) getHeight() / 2) - ((float) newH / 2));
        // Dessin de l'image
        bg.drawImage(originalCaptionImage.getScaledInstance(newW, newH, Image.SCALE_SMOOTH), xPosition, yPosition, null);
    } else // Dessin du texte
    {
        // Récupération du CFont du profil
        CFont profilFont = CProfil.getInstance().getKeyboardFont();
        // Création du style de police
        int fontStyle = Font.PLAIN;
        if (profilFont.isBold()) {
            fontStyle += Font.BOLD;
        }
        if (profilFont.isItalic()) {
            fontStyle += Font.ITALIC;
        }
        // Création de la bonne police
        Font captionFont = new Font(profilFont.getFontName(), fontStyle, fontSize);
        // Application de la font
        bg.setFont(captionFont);
        // Calcul des positions de dessin du texte
        FontMetrics fontMetrics = bg.getFontMetrics();
        int captionWidth = fontMetrics.stringWidth(getCaptionText());
        int captionHeight = fontMetrics.getAscent();
        int xPosition = (getWidth() / 2) - (captionWidth / 2) - TEXT_CAPTION_OFFSET_X;
        int yPosition = (getHeight() / 2) + (captionHeight / 3) - TEXT_CAPTION_OFFSET_Y;
        // Ajout de l'ombre
        if (profilFont.isShadow()) {
            bg.setColor(profilFont.getFontColor().getColor().brighter().brighter().brighter());
            bg.drawString(getCaptionText(), xPosition + SHADOW_INSET_H, yPosition + SHADOW_INSET_V);
        }
        // On écrit le texte
        bg.setColor(profilFont.getFontColor().getColor());
        bg.scale(1.1, 1.1);
        bg.drawString(getCaptionText(), xPosition, yPosition);
    }
}
