private void createCRReview(Composite parent) {
    Group review = new Group(parent, SWT.NONE);
    review.setText("Review");
    GridLayout glr = new GridLayout();
    glr.numColumns = 3;
    review.setLayout(glr);
    setSpan(review, 1, 1, GridData.FILL_HORIZONTAL);
    createLabel(review, "Title : ");
    titleBox = new Text(review, SWT.SINGLE | SWT.BORDER);
    setSpan(titleBox, 2, 1, GridData.FILL_HORIZONTAL);
    createLabel(review, "Obsoletes : ");
    Combo obsCombo = new Combo(review, SWT.DROP_DOWN | SWT.READ_ONLY);
    setSpan(obsCombo, 1, 1, GridData.FILL_HORIZONTAL);
    PopulateList.populateComponent(new Obsoletes(obsCombo), new Integer(1));
    obsCombo.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            Combo actCombo = (Combo) e.getSource();
            if (actCombo.getSelectionIndex() > 0) {
                obsolete = actCombo.getText();
            } else {
                obsolete = "";
            }
        }
    });
    Button refresh = new Button(review, SWT.PUSH);
    refresh.setImage(Activator.getImageDescriptor("icons/refresh.gif").createImage());
    createLabel(review, "Target Stream : ");
    Combo stream = new Combo(review, SWT.DROP_DOWN | SWT.READ_ONLY);
    setSpan(stream, 2, 1, GridData.FILL_HORIZONTAL);
    PopulateList.populateComponent(new Repository(stream), null);
    stream.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            Combo stream = (Combo) e.getSource();
            // UtilRepository.getValueFromRepository(UtilRepository.STREAM_REPOSITORY,
            streamSelected = stream.getText().trim();
        // stream.getText().trim()).toString();
        }
    });
    createLabel(review, "Project : ");
    Combo project = new Combo(review, SWT.DROP_DOWN | SWT.READ_ONLY);
    setSpan(project, 2, 1, GridData.FILL_HORIZONTAL);
    PopulateList.populateComponent(new Projects(project), null);
    project.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            Combo stream = (Combo) e.getSource();
            projectSelected = UtilRepository.getValueFromRepository(UtilRepository.PROJECT_REPOSITORY, stream.getText().trim()).toString();
        }
    });
    createLabel(review, "EmailAddress");
    email = new Text(review, SWT.SINGLE | SWT.BORDER);
    setSpan(email, 2, 1, GridData.FILL_HORIZONTAL);
    Button reviewer = new Button(review, SWT.PUSH);
    reviewer.setText("Reviewers..");
    rEmail = new Text(review, SWT.SINGLE | SWT.BORDER);
    setSpan(rEmail, 2, 1, GridData.FILL_HORIZONTAL);
    Button ccs = new Button(review, SWT.PUSH);
    ccs.setText("CC..");
    ccMail = new Text(review, SWT.SINGLE | SWT.BORDER);
    setSpan(ccMail, 2, 1, GridData.FILL_HORIZONTAL);
    Button checkBox = new Button(review, SWT.CHECK);
    checkBox.setText("Copy ClearQuest");
    setSpan(createLabel(review, "Description :- "), 3, 1, GridData.FILL_HORIZONTAL);
    descText = new Text(review, SWT.MULTI | SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL);
    setSpan(descText, 3, 20, GridData.FILL_BOTH);
}
