private void createUserNameAndPassword() {
    Group usrPwd = new Group(form, SWT.TITLE);
    usrPwd.setText("Authorization Details");
    usrPwd.setLayout(new GridLayout());
    usrPwd.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    Composite composite = new Composite(usrPwd, SWT.NONE);
    composite.setLayout(new GridLayout(4, false));
    composite.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    GridData data = new GridData(70, 20);
    data.grabExcessHorizontalSpace = false;
    Label hstLabel = new Label(composite, SWT.LEFT);
    hstLabel.setText("Host :");
    hstLabel.setLayoutData(data);
    hostTxt = new Text(composite, SWT.SINGLE | SWT.BORDER);
    data = new GridData(GridData.FILL_HORIZONTAL);
    data.grabExcessHorizontalSpace = true;
    hostTxt.setLayoutData(data);
    hostTxt.addVerifyListener(new VerifyListenerAdapter(new CheckAdapter(composite) {

        public boolean verify(TypedEvent event) {
            VerifyEvent vEvent = (VerifyEvent) event;
            Text field = ((Text) event.getSource());
            if (field.getText().trim().length() == 0) {
                return true;
            } else {
                if (vEvent.keyCode == '\b' && field.getText().trim().length() == 1) {
                    return false;
                } else {
                    return true;
                }
            }
        }
    }));
    composite.addPaintListener(new PaintListenerAdapter(new CheckAdapter(hostTxt) {

        public boolean verify(TypedEvent event) {
            return ((Text) control).getText().trim().length() == 0 ? false : true;
        }
    }));
    Label portLabel = new Label(composite, SWT.CENTER);
    portLabel.setText("Port :");
    data = new GridData(45, 20);
    data.grabExcessHorizontalSpace = false;
    portLabel.setLayoutData(data);
    portTxt = new Text(composite, SWT.SINGLE | SWT.BORDER);
    data = new GridData(GridData.FILL_HORIZONTAL);
    data.grabExcessHorizontalSpace = false;
    portTxt.setLayoutData(data);
    portTxt.addVerifyListener(new VerifyListenerAdapter(new CheckAdapter(composite) {

        public boolean verify(TypedEvent event) {
            VerifyEvent vEvent = (VerifyEvent) event;
            Text field = ((Text) event.getSource());
            vEvent.doit = false;
            if (field.getText().trim().length() == 0) {
                if ((48 <= vEvent.keyCode && vEvent.keyCode <= 57) || vEvent.keyCode == 0) {
                    vEvent.doit = true;
                    return false;
                }
                return true;
            } else {
                if (vEvent.keyCode == '\b' && field.getText().trim().length() == 1) {
                    return false;
                } else {
                    if (vEvent.keyCode == '\b' || (48 <= vEvent.keyCode && vEvent.keyCode <= 57)) {
                        vEvent.doit = true;
                    }
                    return true;
                }
            }
        }
    }));
    composite.addPaintListener(new PaintListenerAdapter(new CheckAdapter(portTxt) {

        public boolean verify(TypedEvent event) {
            return ((Text) control).getText().trim().length() == 0 ? false : true;
        }
    }));
    composite = new Composite(usrPwd, SWT.NONE);
    composite.setLayout(new GridLayout(2, false));
    composite.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));
    data = new GridData(70, 20);
    data.grabExcessHorizontalSpace = false;
    Label label = new Label(composite, SWT.LEFT);
    label.setText("User :");
    label.setLayoutData(data);
    usrTxt = new Text(composite, SWT.SINGLE | SWT.BORDER);
    data = new GridData(GridData.FILL_HORIZONTAL);
    data.grabExcessHorizontalSpace = true;
    usrTxt.setLayoutData(data);
    usrTxt.addVerifyListener(new VerifyListenerAdapter(new CheckAdapter(composite) {

        public boolean verify(TypedEvent event) {
            VerifyEvent vEvent = (VerifyEvent) event;
            Text field = ((Text) event.getSource());
            if (field.getText().trim().length() == 0) {
                return true;
            } else {
                if (vEvent.keyCode == '\b' && field.getText().trim().length() == 1) {
                    return false;
                } else {
                    return true;
                }
            }
        }
    }));
    composite.addPaintListener(new PaintListenerAdapter(new CheckAdapter(usrTxt) {

        public boolean verify(TypedEvent event) {
            return ((Text) control).getText().trim().length() == 0 ? false : true;
        }
    }));
    label = new Label(composite, SWT.LEFT);
    label.setText("Password :");
    data = new GridData(70, 20);
    data.grabExcessHorizontalSpace = false;
    label.setLayoutData(data);
    pwdTxt = new Text(composite, SWT.SINGLE | SWT.BORDER | SWT.PASSWORD);
    data = new GridData(GridData.FILL_HORIZONTAL);
    data.grabExcessHorizontalSpace = true;
    pwdTxt.setLayoutData(data);
    pwdTxt.addVerifyListener(new VerifyListenerAdapter(new CheckAdapter(composite) {

        public boolean verify(TypedEvent event) {
            VerifyEvent vEvent = (VerifyEvent) event;
            Text field = ((Text) event.getSource());
            if (field.getText().trim().length() == 0) {
                return true;
            } else {
                if (vEvent.keyCode == '\b' && field.getText().trim().length() == 1) {
                    return false;
                } else {
                    return true;
                }
            }
        }
    }));
    composite.addPaintListener(new PaintListenerAdapter(new CheckAdapter(pwdTxt) {

        public boolean verify(TypedEvent event) {
            return ((Text) control).getText().trim().length() == 0 ? false : true;
        }
    }));
}
