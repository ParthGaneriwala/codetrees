public void insert(Connection db) throws SQLException {
    boolean commit = false;
    try {
        commit = db.getAutoCommit();
        if (commit) {
            db.setAutoCommit(false);
        }
        // Determine the day-of-the-week preference to use
        if (scheduleWeekly) {
            determineDayOfTheWeek(db);
        }
        id = DatabaseUtils.getNextSeq(db, "email_updates_queue_queue_id_seq", id);
        PreparedStatement pst = db.prepareStatement("INSERT INTO email_updates_queue " + "(" + (id > -1 ? "queue_id, " : "") + "enteredby, modifiedby, enabled, " + "schedule_often, schedule_daily, schedule_weekly, schedule_monthly, " + "schedule_monday, schedule_tuesday, schedule_wednesday, schedule_thursday, schedule_friday, schedule_saturday, schedule_sunday, " + "schedule_time, status, processed) " + "VALUES (" + (id > -1 ? "?, " : "") + "?, ?, ?, " + "?, ?, ?, ?, " + "?, ?, ?, ?, ?, ?, ?, " + "?, ?, ?) ");
        int i = 0;
        if (id > -1) {
            pst.setInt(++i, id);
        }
        pst.setInt(++i, enteredBy);
        pst.setInt(++i, modifiedBy);
        pst.setBoolean(++i, enabled);
        pst.setBoolean(++i, scheduleOften);
        pst.setBoolean(++i, scheduleDaily);
        pst.setBoolean(++i, scheduleWeekly);
        pst.setBoolean(++i, scheduleMonthly);
        pst.setBoolean(++i, scheduleMonday);
        pst.setBoolean(++i, scheduleTuesday);
        pst.setBoolean(++i, scheduleWednesday);
        pst.setBoolean(++i, scheduleThursday);
        pst.setBoolean(++i, scheduleFriday);
        pst.setBoolean(++i, scheduleSaturday);
        pst.setBoolean(++i, scheduleSunday);
        pst.setTimestamp(++i, scheduleTime);
        pst.setInt(++i, status);
        pst.setTimestamp(++i, processed);
        pst.execute();
        pst.close();
        id = DatabaseUtils.getCurrVal(db, "email_updates_queue_queue_id_seq", id);
        // Determine the next schedule date for this queue
        calculateNextRunDate(db);
        if (commit) {
            db.commit();
        }
    } catch (SQLException e) {
        if (commit) {
            db.rollback();
        }
        throw new SQLException(e.getMessage());
    } finally {
        db.setAutoCommit(true);
    }
}
