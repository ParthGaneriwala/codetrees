// static void Asignaciones() {
// Expect(1);
// if (StartOf(4)) {
// if (la.kind == 16) {
// Get();
// Expect(1);
// if (la.kind == 19 || la.kind == 31) {
// if (la.kind == 19) {
// Get();
// Argumentos();
// Expect(25);
// Expect(31);
// } else {
// Get();
// }
// }
// } else if (la.kind == 1) {
// Get();
// Expect(31);
// } else if (la.kind == 18) {
// Get();
// Expresion();
// Expect(24);
// } else {
// Get();
// if (StartOf(5)) {
// if (StartOf(1)) {
// ArgumentosDeclaracion();
// } else {
// Argumentos();
// }
// }
// Expect(25);
// if (la.kind == 17 || la.kind == 31) {
// if (la.kind == 17) {
// Get();
// Miembros();
// Expect(23);
// } else {
// Get();
// }
// }
// }
// }
// ALLMetodo();
// }
// Asignaciones = ident ["." ident ["("Argumentos")" ";"] | ident ";" | "["Expresion"]" | "("[ArgumentosDeclaracion | Argumentos]")"["{"Miembros"}" |";"]] ALLMetodo
static void Asignaciones() {
    // Inicializa_aux();
    Esperado(1);
    String nombre = simbolo.getId();
    simbolo_aux = tablasimbolos.Buscar(nombre);
    String nombre_class_asociada;
    TablaSimb tio = null;
    if (simbolo_aux == null) {
        tio = tablasimbolos.BuscarTio(nombre);
        if (tio == null) {
            SemErr("Identificador no declarado");
            return;
        } else {
            simbolo_aux = simbolo;
            simbolo_aux.setClaseRelacionada(nombre);
        }
    }
    nombre_class_asociada = simbolo_aux.getClaseRelacionada();
    if (StartOf(3)) {
        if (la.kind == 16) {
            Get();
            Esperado(1);
            if (simbolo_aux == null)
                tio = tablasimbolos.BuscarTio(nombre_class_asociada);
            if (tio == null)
                SemErr("El identificador no se corresponde con ninguna clase declarada");
            else {
                simbolo_aux = tablasimbolos.BuscarEn(tio, simbolo.getId());
                if (simbolo_aux == null)
                    SemErr("No existe ningún atributo o metodo en la clase " + nombre_class_asociada + " con ese identificador");
                else
                    tipo_asig = simbolo_aux.getTipo();
            }
            if (la.kind == 19 || la.kind == 31) {
                if (la.kind == 19) {
                    if (tipo_asig != 'm')
                        SemErr("Sólo un método puede llevar argumentos");
                    else {
                        simbolo_aux2 = simbolo_aux;
                        colaArgumento = simbolo_aux2.getColaArgumentos();
                        Get();
                        Argumentos();
                        Esperado(25);
                        if (la.kind == 31)
                            Esperado(31);
                        else if (la.kind != 15)
                            SemErr("Se esperaba ;");
                    }
                }
                if (la.kind == 31) {
                    Esperado(31);
                }
            }
        } else if (la.kind == 1) {
            tio = tablasimbolos.BuscarTio(nombre);
            if (tio == null)
                SemErr("No existe ninguna clase declarada con ese identificador");
            else {
                Simbolo simb = new Simbolo(la.val, 'x', la.line);
                simb.setCol(la.col);
                simb.setPos(la.pos);
                simb.setClaseRelacionada(nombre);
                int existe = tablasimbolos.InsertarSimbolo(simb, la.val);
                if (existe != 0)
                    SemErr("Existe otro elemento con el mismo identificador");
                Get();
                Esperado(31);
            }
        } else if (la.kind == 18) {
            Get();
            Expresion();
            Esperado(24);
        } else {
            Get();
            if (StartOf(4)) {
                if (StartOf(5)) {
                    ArgumentosDeclaracion();
                } else {
                    Argumentos();
                }
            }
            Esperado(25);
            if (la.kind == 17 || la.kind == 31) {
                if (la.kind == 17) {
                    Get();
                    Miembros();
                    Esperado(23);
                } else {
                    Get();
                }
            }
        }
    }
    ALLMetodo();
}
