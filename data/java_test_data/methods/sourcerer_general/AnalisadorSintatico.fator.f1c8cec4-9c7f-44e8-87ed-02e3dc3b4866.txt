private void fator() {
    Set<Integer> s1 = criaSet();
    Set<Integer> s2 = criaSet();
    s1.addAll(simbolosPrimeiros.getFator());
    s2.addAll(simbolosPrimeiros.getTermo1());
    s2.add(TabelaComponentesLexicos.PONTO_VIRGULA);
    s2.add(TabelaComponentesLexicos.FECHA_PARENTESE);
    s2.add(TabelaComponentesLexicos.DO);
    s2.addAll(simbolosPrimeiros.getBloco());
    testeErros(s1, s2, MensagemErro.FATOR_INVALIDO);
    if (simboloCorrente.getCodigo() == TabelaComponentesLexicos.ABRE_PARENTESE) {
        obtemSimbolo(TabelaComponentesLexicos.ABRE_PARENTESE);
        expressao();
        s1 = criaSet();
        s1.add(TabelaComponentesLexicos.FECHA_PARENTESE);
        testeErros(s1, s2, MensagemErro.FALTA_FECHA_PARENTESE);
    } else if (simboloCorrente.getCodigo() == TabelaComponentesLexicos.IDENT) {
        obtemSimbolo(TabelaComponentesLexicos.IDENT);
        semantico.acaoSemanticaIdentificadorInicializado(simboloAnterior, linhaAnterior);
        semantico.AS_identificador_expressao(simboloAnterior, linhaAnterior);
        if (simboloCorrente.getCodigo() == TabelaComponentesLexicos.ABRE_PARENTESE) {
            expressao();
            comparaSimbolos(TabelaComponentesLexicos.FECHA_PARENTESE, MensagemErro.FALTA_FECHA_PARENTESE);
        } else {
            geradorDeCodigo.identificadorComoOperador(simboloAnterior.getNome());
        }
    } else if (simboloCorrente.getCodigo() == TabelaComponentesLexicos.INTEGER) {
        obtemSimbolo(TabelaComponentesLexicos.INTEGER);
        semantico.acaoSemanticaEmpilhar(simboloAnterior);
        geradorDeCodigo.inteiroOuRealComoOperador(simboloAnterior.getNome());
    } else if (simboloCorrente.getCodigo() == TabelaComponentesLexicos.REAL) {
        obtemSimbolo(TabelaComponentesLexicos.REAL);
        semantico.acaoSemanticaEmpilhar(simboloAnterior);
        geradorDeCodigo.inteiroOuRealComoOperador(simboloAnterior.getNome());
    } else if (simboloCorrente.getCodigo() == TabelaComponentesLexicos.ASPA_SIMPLES) {
        Simbolo simboloCausador = simboloAnterior;
        obtemSimbolo(TabelaComponentesLexicos.ASPA_SIMPLES);
        semantico.acaoSemanticaEmpilhar(simboloCausador);
        geradorDeCodigo.stringComoOperador(simboloAnterior.getNome());
        s1 = criaSet();
        s1.add(TabelaComponentesLexicos.STRING);
        testeErros(s1, s2, MensagemErro.ESPERA_SE_STRING);
        comparaSimbolos(TabelaComponentesLexicos.STRING, MensagemErro.ESPERA_SE_STRING);
        comparaSimbolos(TabelaComponentesLexicos.ASPA_SIMPLES, MensagemErro.FALTA_ASPAS_SIMPLES);
    }
}
