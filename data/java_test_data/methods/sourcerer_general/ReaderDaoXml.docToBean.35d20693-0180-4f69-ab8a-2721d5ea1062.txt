private ReaderBean docToBean(Document doc) {
    ReaderBean reader = new ReaderBean();
    Element root = XmlUtil.getRoot(doc);
    // Element readersElement = XmlUtil.fisrtElement(root, "readers");
    // Element readerElement = XmlUtil.fisrtElement(root, "reader");
    reader.setName(XmlUtil.getElementText(root, "name"));
    reader.setAutoMode(XmlUtil.getElementText(root, "auto-mode"));
    reader.setInterval(Integer.parseInt(XmlUtil.getElementText(root, "interval")));
    reader.setAntenna(XmlUtil.getElementText(root, "antenna"));
    reader.setReaderid(XmlUtil.getElementText(root, "readerid"));
    reader.setChainName(XmlUtil.getElementText(root, "chain-name"));
    reader.setTimeFilter(Integer.parseInt(XmlUtil.getElementText(root, "time-filter")));
    reader.setCreatedDate(DateUtil.convertStringToDateTime(XmlUtil.getElementText(root, "createdDate")));
    Element driverElement = XmlUtil.fisrtElement(root, "driver");
    reader.setCommunicationType(XmlUtil.getElementText(driverElement, "communication-type"));
    reader.setDriverClass(XmlUtil.getElementText(driverElement, "class"));
    Element propertiesElement = XmlUtil.fisrtElement(driverElement, "properties");
    NodeList propertyNodeList = propertiesElement.getElementsByTagName("property");
    Properties p = new Properties();
    for (int i = 0; i < propertyNodeList.getLength(); i++) {
        Element propertyElement = (Element) propertyNodeList.item(i);
        String name = XmlUtil.getElementText(propertyElement, "name");
        String value = XmlUtil.getElementText(propertyElement, "value");
        p.put(name, value);
    }
    reader.setP(p);
    return reader;
}
