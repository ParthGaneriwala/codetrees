public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    // debug info
    CB.dumpPhoneInfo(this);
    Logger.log(TAG + ".onCreate()");
    try {
        setContentView(R.layout.main);
        // make sure SD card is present
        checkSDCard();
        // exit here if no SD card present ----------------------------
        if (flagSDCardMissing)
            return;
        // initialise media files and services
        Media.init();
        // initialise static User-ID
        // getLine1Number() et al. do not guarantee to return proper values.
        // we therefore try the following:  1)Phone no 2)SIM no  3)Device id
        TelephonyManager tm = (TelephonyManager) getSystemService(Context.TELEPHONY_SERVICE);
        String uid = tm.getLine1Number();
        if (uid == null || uid.trim().length() == 0)
            uid = tm.getSimSerialNumber();
        if (uid == null || uid.trim().length() == 0)
            uid = tm.getDeviceId();
        if (uid == null || uid.trim().length() == 0)
            uid = "unknown";
        CB.API_UID = uid;
        // initialise static TAG SETTINGS for this user
        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);
        CB.INCLUDE_TAGS = preferences.getString(getString(R.string.setting_tags_include_key), "");
        CB.EXCLUDE_TAGS = preferences.getString(getString(R.string.setting_tags_exclude_key), "");
        CB.DEFAULT_TAGS = preferences.getString(getString(R.string.setting_tags_default_key), "");
        // is this a real start-up?
        if (savedInstanceState == null) {
            // DB.deleteDatabase(this);
            // DB.generateLocalTestData(this);
            // clear DB cache on start-up
            DB.clearCache();
        }
        // wire up UI
        View btnAdd = this.findViewById(R.id.main_add);
        btnAdd.setOnClickListener(this);
        btnAdd.requestFocus();
        View btnBrowse = this.findViewById(R.id.main_browse);
        btnBrowse.setOnClickListener(this);
    } catch (Exception e) {
        Logger.log(e);
    }
}
