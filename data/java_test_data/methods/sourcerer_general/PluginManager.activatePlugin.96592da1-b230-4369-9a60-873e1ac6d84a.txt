private static Plugin activatePlugin(final PluginDescriptor desc) {
    Log.d("activatePlugin(PluginDescriptor)", "STARTED");
    if (desc == null) {
        Log.d("activatePlugin(PluginDescriptor)", "desc is NULL");
        throw new IllegalArgumentException("The desc is NULL");
    }
    if (isPluginActive(desc)) {
        Log.d("activatePlugin(PluginDescriptor)", "the plugin is active");
        return activePlugin;
    }
    try {
        String path = getPluginPath(desc);
        Plugin plugin = new Plugin(desc);
        Log.d("activatePlugin", "path: " + path);
        Log.d("activatePlugin", "result: " + plugin);
        ZipFile zf = new ZipFile(path + desc.getZipFile());
        Log.d("activatePlugin", "ZipFile: " + zf.getName());
        Enumeration<? extends ZipEntry> entries = zf.entries();
        Log.d("activatePlugin", "entries: " + entries);
        while (entries.hasMoreElements()) {
            ZipEntry ze = (ZipEntry) entries.nextElement();
            String entryName = ze.getName();
            Log.d("activatePlugin", "entryName: " + entryName);
            if (ze.isDirectory()) {
                Log.d("UZ", "Making a directory" + entryName);
                // act.getFileStreamPath(ze.getName()).mkdirs();
                Log.d("UZ", "DONE");
            } else {
                if (desc.getQuestionsFile().equals(entryName)) {
                    Parser.getInstance().parseQuestionXML(getXmlPullParser(zf.getInputStream(ze)));
                    plugin.setQuestions(Parser.getInstance().getAllQuestions());
                    plugin.setAnswers(Parser.getInstance().getAllAnswers());
                } else if (desc.getConclusionsFile().equals(entryName)) {
                    Parser.getInstance().parseConclusionXML(getXmlPullParser(zf.getInputStream(ze)));
                    plugin.setConclusions(Parser.getInstance().getAllConclusions());
                }
            }
        }
        Log.d("activatePlugin", "result: " + plugin.toString());
        activePlugin = plugin;
    } catch (Throwable t) {
        Log.e("installDefaultPlugin", t.getCause().toString());
        Log.e("installDefaultPlugin", t.getMessage());
    }
    return activePlugin;
}
