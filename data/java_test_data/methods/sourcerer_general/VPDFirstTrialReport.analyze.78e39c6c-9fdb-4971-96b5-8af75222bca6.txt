@Override
protected void analyze() {
    Vector<Integer> delays = new Vector<Integer>();
    // delays.add(50);
    delays.add(100);
    delays.add(200);
    delays.add(400);
    delays.add(800);
    delays.add(1600);
    delays.add(3200);
    delays.add(6400);
    double totalCount = 0, totalCorrect = 0;
    // System.out.println(fileNames[_sessionStart - 1]);
    for (Integer delay : delays) {
        double count = 0, correct = 0;
        String database = Paths.DB_OPEN_STR + _path + _dir + "/" + _fileNames[_sessionStart - 1] + Paths.DB_CLOSE_STR;
        Connection connection = null;
        try {
            connection = DriverManager.getConnection(database, "", "");
            Statement statement = connection.createStatement();
            statement.execute("SELECT TOP 1 TrialNum, CorrectPosition, Response, Item1, Item2, Item4, Item5, Item6, IncorrectCorrections as incCorr " + "FROM TrialResults WHERE ProbeDelay = " + delay + " ORDER BY TrialNum ASC");
            ResultSet rs = statement.getResultSet();
            while (rs.next()) {
                count++;
                totalCount++;
                if (rs.getInt("Item6") == rs.getInt("Response")) {
                    totalCorrect++;
                    correct++;
                }
            }
        } catch (Exception e) {
        } finally {
            new ConnectionCloser(connection).run();
        }
        double accuracy = correct / count;
        DataPrinter.printWithTabs(true, "" + delay, accuracy);
    }
    double acc2 = totalCorrect / totalCount * 100;
// DataPrinter.printWithTabs(true, acc2);
}
