public Object[][] getDataRoomOfOrderTable(int OrderId) {
    Connection conn = new connectDatabase().getConnection();
    CallableStatement fillcs;
    try {
        fillcs = conn.prepareCall("{call fillTable(?)}", ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
        fillcs.setInt(1, OrderId);
        ResultSet resultSet = fillcs.executeQuery();
        ResultSetMetaData resultSetMetaData = resultSet.getMetaData();
        int column_count = resultSetMetaData.getColumnCount();
        int c_row;
        int row_count = 0;
        resultSet.last();
        row_count = resultSet.getRow();
        RowCount1 = row_count;
        System.out.println(row_count);
        dataRoomOfOrder = new Object[row_count][column_count];
        resultSet.first();
        resultSet.previous();
        while (resultSet.next()) {
            c_row = resultSet.getRow();
            dataRoomOfOrder[c_row - 1][0] = new Boolean(false);
            for (int i = 2; i <= column_count; i++) {
                dataRoomOfOrder[c_row - 1][i - 1] = resultSet.getString(i);
            }
        }
        resultSet.close();
        fillcs.close();
    } catch (SQLException se) {
        System.out.println("loi fill table");
        System.err.println(se);
    }
    return dataRoomOfOrder;
}
