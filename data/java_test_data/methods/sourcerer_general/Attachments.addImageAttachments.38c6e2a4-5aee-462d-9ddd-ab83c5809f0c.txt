public static void addImageAttachments(String id, String t, PdfWriter writer, Document document) throws Exception {
    ResultSet rs = null;
    Database db = null;
    try {
        db = new Database();
        rs = db.dbQuery("select * from files where id = '" + id + "' and type = '" + t + "' and content_type not like '%pdf%' and print = 1 and protected = 0 order by uploaded desc");
        String content;
        if (rs.isBeforeFirst()) {
            document.resetFooter();
            document.resetHeader();
        }
        while (rs.next()) {
            content = rs.getString("content_type");
            if (content.equals("image/tiff")) {
                try {
                    PdfContentByte cb = writer.getDirectContent();
                    RandomAccessFileOrArray ra = null;
                    int comps = 0;
                    try {
                        ra = new RandomAccessFileOrArray(new InflaterInputStream(rs.getBinaryStream("file")));
                        comps = TiffImage.getNumberOfPages(ra);
                    } catch (Throwable e) {
                        System.out.println("Unable to open tiff file: " + rs.getString("description") + " " + e.toString());
                        continue;
                    }
                    float X, Y;
                    for (int c = 0; c < comps; ++c) {
                        Image img = TiffImage.getTiffImage(ra, c + 1);
                        if (img != null) {
                            // 8.5" = 612
                            // 11" = 792
                            img = TiffImage.getTiffImage(ra, c + 1);
                            // Get the image size and guess the page size
                            X = img.getScaledWidth();
                            Y = img.getScaledHeight();
                            if (X < Y)
                                document.setPageSize(PageSize.LETTER);
                            else
                                document.setPageSize(PageSize.LETTER.rotate());
                            if (X > 612)
                                img.scalePercent(612 * 100 / X);
                            if (Y > 792)
                                img.scalePercent(792 * 100 / Y);
                            document.newPage();
                            // pixels/dpi = size in inches * 72 pt/in = pts
                            img.setAbsolutePosition(0, 0);
                            cb.addImage(img);
                        }
                    }
                    ra.close();
                } catch (Throwable e) {
                    e.printStackTrace();
                }
            // some other image...
            } else {
                PdfContentByte cb = writer.getDirectContent();
                InflaterInputStream iis = new InflaterInputStream(rs.getBinaryStream("file"));
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                int b = 0;
                do {
                    b = iis.read();
                    baos.write(b);
                } while (b != -1);
                iis.close();
                Image img = Image.getInstance(baos.toByteArray());
                baos.close();
                float X, Y;
                if (img != null) {
                    X = img.getScaledWidth();
                    Y = img.getScaledHeight();
                    if (X < Y)
                        document.setPageSize(PageSize.LETTER);
                    else
                        document.setPageSize(PageSize.LETTER.rotate());
                    if (X > 612)
                        img.scalePercent(612 * 90 / X);
                    if (Y > 792)
                        img.scalePercent(792 * 90 / Y);
                    if (X < Y)
                        img.setAbsolutePosition(612 * 0.05f, 792 * 0.05f);
                    else
                        img.setAbsolutePosition(792 * 0.05f, 612 * 0.05f);
                    // document.setPageSize(new Rectangle(pageX, pageY));
                    document.newPage();
                    // pixels/dpi = size in inches * 72 pt/in = pts
                    cb.addImage(img);
                }
            }
        }
    } catch (SQLException e) {
        e.printStackTrace();
    } finally {
        try {
            if (rs != null)
                rs.getStatement().close();
            rs = null;
            db.disconnectFinal();
            db = null;
        } catch (SQLException se) {
        }
    }
}
