public String save() {
    // pantDetailList  =  (List<PantDetail>) getSession().getAttribute("pantDetailList");
    if (processDressmaker.getEmployee().getId() != -1 && intDateProcessDMaker != null) {
        Employee employee = employeeManager.get(processDressmaker.getEmployee().getId());
        processDressmaker.setInitDate(DateFormatChanger.changeStringtoDate(intDateProcessDMaker));
        processDressmaker.setEmployee(employee);
        processDressmaker.setEndDate(processDressmaker.getInitDate());
        processDressmaker.setTotalAmount(0D);
        processDressmaker.setTotalAmountFail(0D);
        processDressmaker.setTotalCurrentAmount(0D);
        processDressmaker.setDeleted(true);
        processDressmaker = processDressmakerManager.save(processDressmaker);
        periodPaymentEmployee = periodPaymentEmployeeManager.getCurrentPeriodByIdEmployeeAndRole(employee.getId(), employee.getRoleByName("ROLE_EMPLOYEE_DRESSMAKER").getIdRole());
        BalanceEmployee balanceEmployee = new BalanceEmployee();
        balanceEmployee.setBalance(periodPaymentEmployee.getCurrentAmount());
        balanceEmployee.setAmountPaid(0D);
        balanceEmployee.setAmountWon(0D);
        balanceEmployee.setProcessDressmaker(processDressmaker);
        balanceEmployee.setDateBalance(processDressmaker.getInitDate());
        balanceEmployee.setPeriodPaymentEmployee(periodPaymentEmployee);
        balanceEmployee.setPaymentsCut(null);
        balanceEmployee.setPaymentsPant(null);
        balanceEmployee = balanceEmployeeManager.save(balanceEmployee);
        processDressmaker.setBalanceEmployee(balanceEmployee);
        balanceEmployeeManager.save(balanceEmployee);
        getSession().setAttribute("pDressMId", processDressmaker.getId());
        storageCutList = storageCutManager.getAllGreaterThanCero();
        saveMessage(getText("processDressMakerAction.saveProcessDressMaker"));
        return SUCCESS;
    } else {
        errorMessage(getText("processDressMakerAction.errorProcessDressMaker"));
        return ERROR;
    }
}
