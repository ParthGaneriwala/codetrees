public void testClobB() {
    try {
        String ddl0 = "DROP TABLE CLOBTEST IF EXISTS";
        String ddl1 = "CREATE TABLE CLOBTEST(ID IDENTITY, V VARCHAR(10), I INT, CLOBFIELD CLOB(1000))";
        statement.execute(ddl0);
        statement.execute(ddl1);
    } catch (SQLException e) {
    }
    try {
        String dml0 = "insert into clobtest values(default, ?, ?, ?)";
        String dql0 = "select * from clobtest;";
        PreparedStatement ps = connection.prepareStatement(dml0);
        String data = "Testing clob insert and select ops";
        Clob clob = new JDBCClob(data);
        ps.setString(1, "test");
        ps.setInt(2, 5);
        ps.setClob(3, clob);
        ps.executeUpdate();
        data = data.replaceFirst("insert", "INSERT");
        clob = new JDBCClob(data);
        ps.setClob(3, clob);
        ps.executeUpdate();
        PreparedStatement ps2 = connection.prepareStatement(dql0);
        ResultSet rs = ps2.executeQuery();
        rs.next();
        Clob clob1 = rs.getClob(4);
        rs.next();
        Clob clob2 = rs.getClob(4);
        int data1 = clob1.getSubString(1, data.length()).indexOf("insert");
        int data2 = clob2.getSubString(1, data.length()).indexOf("INSERT");
        assertTrue(data1 == data2 && data1 > 0);
        // 
        Clob clob3 = new JDBCClob(data);
        Reader reader = clob3.getCharacterStream();
        ps.setCharacterStream(3, reader, (int) clob3.length());
        ps.executeUpdate();
        // 
        reader = clob2.getCharacterStream();
        try {
            ps.setCharacterStream(3, reader, (int) clob3.length());
            assertTrue(false);
            ps.executeUpdate();
        } catch (SQLException e) {
        }
        connection.commit();
    } catch (SQLException e) {
        e.printStackTrace();
        fail("test failure");
    }
}
