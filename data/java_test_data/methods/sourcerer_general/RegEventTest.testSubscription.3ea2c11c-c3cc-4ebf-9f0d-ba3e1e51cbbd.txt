public void testSubscription() {
    // Ensure Alice is not registered
    RegisterSession registerSession = new RegisterSession(getAlicePhone());
    registerSession.register(null, 0);
    SubscribeSession session = new SubscribeSession(getAlicePhone(), "reg");
    // 1
    Request subscribe = session.newInitialSubscribe(100, getAliceUri());
    // 2
    session.sendRequest(subscribe, Response.OK);
    ServerTransaction tx = session.waitForNotify();
    // 3
    Request notify = tx.getRequest();
    // System.out.println(notify);
    // 4
    session.sendResponse(Response.OK, tx);
    SubscriptionStateHeader subState = (SubscriptionStateHeader) notify.getHeader(SubscriptionStateHeader.NAME);
    assertEquals(SubscriptionStateHeader.ACTIVE.toLowerCase(), subState.getState().toLowerCase());
    assertBetween(95, 100, subState.getExpires());
    assertEquals("reg", ((EventHeader) notify.getHeader(EventHeader.NAME)).getEventType());
    Reginfo regInfo = getRegInfo(notify);
    int version = regInfo.getVersion().intValue();
    Registration registration = regInfo.getRegistrationArray(0);
    assertEquals(State.INIT, registration.getState());
    assertEquals(getAliceUri(), registration.getAor());
    assertEquals(0, registration.getContactArray().length);
    // 5 and 6
    registerSession.register(null, 1800);
    tx = session.waitForNotify();
    // 7
    notify = tx.getRequest();
    // System.out.println(notify);
    // 8
    session.sendResponse(Response.OK, tx);
    regInfo = getRegInfo(notify);
    registration = regInfo.getRegistrationArray(0);
    assertEquals(1, registration.getContactArray().length);
    assertEquals(version + 1, regInfo.getVersion().intValue());
    assertEquals(State.ACTIVE, registration.getState());
    Contact contact = registration.getContactArray(0);
    assertBetween(1795, 1800, contact.getExpires().intValue());
    assertEquals(Event.REGISTERED, contact.getEvent());
    // 9 and  10
    registerSession.register(null, 0);
    tx = session.waitForNotify();
    // 11
    notify = tx.getRequest();
    // System.out.println(notify);
    // 12
    session.sendResponse(Response.OK, tx);
    regInfo = getRegInfo(notify);
    registration = regInfo.getRegistrationArray(0);
    assertEquals(1, registration.getContactArray().length);
    assertEquals(version + 2, regInfo.getVersion().intValue());
    assertEquals(State.TERMINATED, registration.getState());
    contact = registration.getContactArray(0);
    assertEquals(0, contact.getExpires().intValue());
    assertEquals(Event.UNREGISTERED, contact.getEvent());
    // 13
    subscribe = session.newSubsequentSubscribe(0);
    // 14
    session.sendRequest(subscribe, Response.OK);
    tx = session.waitForNotify();
    // 15
    notify = tx.getRequest();
    // System.out.println(notify);
    // 16
    session.sendResponse(Response.OK, tx);
    subState = (SubscriptionStateHeader) notify.getHeader(SubscriptionStateHeader.NAME);
    assertEquals(SubscriptionStateHeader.TERMINATED.toLowerCase(), subState.getState());
    regInfo = getRegInfo(notify);
    registration = regInfo.getRegistrationArray(0);
    assertEquals(State.TERMINATED, registration.getState());
    assertEquals(0, registration.getContactArray().length);
    assertEquals(version + 3, regInfo.getVersion().intValue());
}
