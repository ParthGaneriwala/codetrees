@Override
protected void onCreate(Bundle icicle) {
    super.onCreate(icicle);
    addPreferencesFromResource(R.xml.alarm_prefs);
    // Get each preference so we can retrieve the value later.
    mLabel = (EditTextPreference) findPreference("label");
    mLabel.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {

        public boolean onPreferenceChange(Preference p, Object newValue) {
            // Set the summary based on the new label.
            p.setSummary((String) newValue);
            return true;
        }
    });
    mEnabledPref = (CheckBoxPreference) findPreference("enabled");
    mTimePref = findPreference("time");
    mAlarmPref = (AlarmPreference) findPreference("alarm");
    mVibratePref = (CheckBoxPreference) findPreference("vibrate");
    mRepeatPref = (RepeatPreference) findPreference("setRepeat");
    Intent i = getIntent();
    mId = i.getIntExtra(Alarms.ALARM_ID, -1);
    if (Log.LOGV) {
        Log.v("In SetAlarm, alarm id = " + mId);
    }
    /* load alarm details from database */
    Alarm alarm = Alarms.getAlarm(getContentResolver(), mId);
    mEnabledPref.setChecked(alarm.enabled);
    mLabel.setText(alarm.label);
    mLabel.setSummary(alarm.label);
    mHour = alarm.hour;
    mMinutes = alarm.minutes;
    mRepeatPref.setDaysOfWeek(alarm.daysOfWeek);
    mVibratePref.setChecked(alarm.vibrate);
    // Give the alert uri to the preference.
    mAlarmPref.setAlert(alarm.alert);
    updateTime();
    // We have to do this to get the save/cancel buttons to highlight on
    // their own.
    getListView().setItemsCanFocus(true);
    // Grab the content view so we can modify it.
    FrameLayout content = (FrameLayout) getWindow().getDecorView().findViewById(android.R.id.content);
    // Get the main ListView and remove it from the content view.
    ListView lv = getListView();
    content.removeView(lv);
    // Create the new LinearLayout that will become the content view and
    // make it vertical.
    LinearLayout ll = new LinearLayout(this);
    ll.setOrientation(LinearLayout.VERTICAL);
    // Have the ListView expand to fill the screen minus the save/cancel
    // buttons.
    LinearLayout.LayoutParams lp = new LinearLayout.LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.WRAP_CONTENT);
    lp.weight = 1;
    ll.addView(lv, lp);
    // Inflate the buttons onto the LinearLayout.
    View v = LayoutInflater.from(this).inflate(R.layout.save_cancel_alarm, ll);
    // Attach actions to each button.
    Button b = (Button) v.findViewById(R.id.alarm_save);
    b.setOnClickListener(new View.OnClickListener() {

        public void onClick(View v) {
            saveAlarm();
            finish();
        }
    });
    b = (Button) v.findViewById(R.id.alarm_cancel);
    b.setOnClickListener(new View.OnClickListener() {

        public void onClick(View v) {
            finish();
        }
    });
    b = (Button) v.findViewById(R.id.alarm_delete);
    b.setOnClickListener(new View.OnClickListener() {

        public void onClick(View v) {
            deleteAlarm();
        }
    });
    // Replace the old content view with our new one.
    setContentView(ll);
}
