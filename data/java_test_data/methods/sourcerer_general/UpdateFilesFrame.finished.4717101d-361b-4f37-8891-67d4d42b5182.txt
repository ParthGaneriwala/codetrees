public void finished() {
    stopProgress();
    if (!aborted) {
        if (result.isError()) {
            TeamUtils.handleServerResponse(result, UpdateFilesFrame.this);
            setVisible(false);
        } else {
            Set<File> filesToUpdate = new HashSet<File>();
            Set<File> conflicts = new HashSet<File>();
            Set<File> modifiedLayoutFiles = new HashSet<File>();
            List<TeamStatusInfo> info = response;
            getUpdateFileSet(info, filesToUpdate, conflicts, modifiedLayoutFiles);
            if (conflicts.size() != 0) {
                String filesList = "";
                Iterator<File> i = conflicts.iterator();
                for (int j = 0; j < 10 && i.hasNext(); j++) {
                    File conflictFile = i.next();
                    filesList += "    " + conflictFile.getName() + "\n";
                }
                // all in the dialog
                if (i.hasNext()) {
                    filesList += "    (and more - check status)";
                }
                DialogManager.showMessageWithText(UpdateFilesFrame.this, "team-unresolved-conflicts", filesList);
                UpdateFilesFrame.this.setVisible(false);
                return;
            }
            // Build the actual set of files to update. If there are new or removed
            // directories, don't include files within.
            Set<File> updateFiles = new HashSet<File>();
            for (Iterator<File> i = filesToUpdate.iterator(); i.hasNext(); ) {
                File file = i.next();
                if (!filesToUpdate.contains(file.getParentFile())) {
                    updateFiles.add(file);
                }
            }
            for (Iterator<File> i = forcedLayoutFiles.iterator(); i.hasNext(); ) {
                File file = (File) i.next();
                if (filesToUpdate.contains(file.getParentFile())) {
                    i.remove();
                }
            }
            updateAction.setStatusHandle(statusHandle);
            updateAction.setFilesToUpdate(updateFiles);
            resetForcedFiles();
            if (includeLayout && !changedLayoutFiles.isEmpty()) {
                addModifiedLayouts();
            }
            if (updateListModel.isEmpty()) {
                updateListModel.addElement(noFilesToUpdate);
            } else {
                updateAction.setEnabled(true);
            }
        }
    }
}
