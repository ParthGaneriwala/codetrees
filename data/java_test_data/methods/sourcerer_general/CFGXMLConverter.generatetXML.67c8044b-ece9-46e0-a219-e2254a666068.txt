// int id = 1;
public void generatetXML(Vector<ControlFlowGraph> cfgs) {
    Document document = DocumentHelper.createDocument();
    System.out.println(document.getXMLEncoding());
    Element root = document.addElement("cfg-set");
    for (ControlFlowGraph cfg : cfgs) {
        nodesInfo = new ArrayList<NodeInfoBean>();
        generateDataForXml(cfg);
        Element xmlCFG = root.addElement("cfg");
        for (int i = 0; i < nodesInfo.size(); i++) {
            if (nodesInfo.get(i).getNode().getName().equals(cfg.getStartNode().getName()))
                addNodesToXml(xmlCFG, nodesInfo.get(i), true, false);
            else if (nodesInfo.get(i).getNode().getName().equals(cfg.getEndNode().getName()))
                addNodesToXml(xmlCFG, nodesInfo.get(i), false, true);
            else
                addNodesToXml(xmlCFG, nodesInfo.get(i), false, false);
        }
    }
    // document.addDocType("catalog",null,"file://c:/Dtds/catalog.dtd");
    try {
        OutputFormat format = OutputFormat.createPrettyPrint();
        // format.setNewlines(true);
        format.setAttributeQuoteCharacter('\'');
        format.setNewLineAfterDeclaration(true);
        format.setTrimText(true);
        // format.setLineSeparator("");
        System.out.println(format.getEncoding());
        System.out.println(format.getIndent());
        FileWriter writer = new FileWriter(new File("xmlFromCFG.xml"));
        XMLWriter output = new XMLWriter(writer, format);
        output.write(document);
        output.close();
    } catch (IOException e) {
        System.out.println(e.getMessage());
    }
}
