private void mgrCmd(Connection conn, String cmd) {
    String handle = conn.getHandle();
    if (FileHelper.searchFile(handle, MGRFILE) < 0) {
        conn.tell("You're not a manager.");
        return;
    }
    // manager commands
    if (cmd.toUpperCase().startsWith("SPOOF") && cmd.length() > 7) {
        String m = cmd.substring(6);
        serv.send(m);
        conn.tell("Spoofed: " + m);
        return;
    }
    StringTokenizer tokens = new StringTokenizer(cmd);
    String s = tokens.nextToken();
    switch(tokens.countTokens()) {
        case 0:
            if (s.equalsIgnoreCase("OFF")) {
                System.exit(-1);
            } else if (s.equalsIgnoreCase("RESET")) {
                if (G.mode != AcroGame.MOD_PAUSE) {
                    G.mode = AcroGame.MOD_RESET;
                    G.interrupt();
                } else
                    conn.tell("First unpause me.");
            } else if (s.equalsIgnoreCase("IDLE")) {
                if (G.mode != AcroGame.MOD_PAUSE) {
                    G.mode = AcroGame.MOD_IDLE;
                    G.interrupt();
                } else
                    conn.tell("First unpause me.");
            } else if (s.equalsIgnoreCase("PAUSE")) {
                boolean wasIdling = (G.mode == AcroGame.MOD_IDLE);
                if (G.mode != AcroGame.MOD_PAUSE)
                    G.mode = AcroGame.MOD_PAUSE;
                if (!wasIdling)
                    G.interrupt();
                else
                    serv.tch(G.chan, "Paused.");
            } else if (s.equalsIgnoreCase("NEXT")) {
                if (G.mode > AcroGame.MOD_IDLE) {
                    G.interrupt();
                } else
                    conn.tell("Invalid Game State.");
            } else if (s.equalsIgnoreCase("SHOUTING")) {
                G.SHOUTING = !G.SHOUTING;
                serv.tch(G.chan, "Shouting: " + G.SHOUTING);
            } else if (s.equalsIgnoreCase("FLATTIME")) {
                G.FLATTIME = !G.FLATTIME;
                serv.tch(G.chan, "Flat time: " + G.FLATTIME);
            } else if (s.equalsIgnoreCase("REVEAL")) {
                G.REVEAL = !G.REVEAL;
                serv.tch(G.chan, "Reveal: " + G.REVEAL);
            } else if (s.equalsIgnoreCase("TOPICS")) {
                G.TOPICS = !G.TOPICS;
                serv.tch(G.chan, "Topics: " + G.TOPICS);
            } else if (s.equalsIgnoreCase("TIEBONUS")) {
                G.TIEBONUS = !G.TIEBONUS;
                serv.tch(G.chan, "TieBonus: " + G.TIEBONUS);
            } else if (s.equalsIgnoreCase("LETFILES")) {
                conn.qtell(AcroLetter.listFiles());
            } else if (s.equalsIgnoreCase("DUMP")) {
                conn.qtell(G.toString());
            } else
                conn.tell("Oops: no such command.");
            break;
        case 1:
            String a = tokens.nextToken();
            int i = Integer.parseInt(a);
            if (s.equalsIgnoreCase("LOADLET")) {
                G.newLetters(a);
            } else if (s.equalsIgnoreCase("CHANNEL")) {
                serv.tch(G.chan, "New Channel: " + i);
                G.chan = i;
            } else if (s.equalsIgnoreCase("ACROTIME")) {
                G.acrotime = i;
                serv.tch(G.chan, "Acro Time: " + i);
            } else if (s.equalsIgnoreCase("VOTETIME")) {
                G.votetime = i;
                serv.tch(G.chan, "Vote Time: " + i);
            } else if (s.equalsIgnoreCase("WAITTIME")) {
                G.waittime = i;
                serv.tch(G.chan, "Wait Time: " + i);
            } else
                conn.tell("D'oh: No such command.");
            break;
        default:
            conn.tell("Too many tokens!");
    }
}
