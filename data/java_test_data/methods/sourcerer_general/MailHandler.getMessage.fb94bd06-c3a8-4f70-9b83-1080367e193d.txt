public Message[] getMessage(String server, int port, String protocol, String user, String password) throws Exception, AuthenticationFailedException {
    String mbox = "INBOX";
    Message[] msgs = null;
    // Get a Store object
    Store store = null;
    if (server == null || protocol == null || user == null || password == null)
        throw new Exception("Mail Error in parameter");
    if (port == -1) {
        if (protocol.equalsIgnoreCase("pop3"))
            port = 110;
        else if (protocol.equalsIgnoreCase("imap"))
            port = 143;
        else
            throw new Exception("Mail Error in protocol support");
    }
    try {
        store = session.getStore(protocol);
        // Connect
        store.connect(server, port, user, password);
        // Open the Folder
        Folder folder = store.getDefaultFolder();
        folder = folder.getFolder(mbox);
        // try to open read/write and if that fails try read-only
        try {
            folder.open(Folder.READ_WRITE);
        } catch (MessagingException ex) {
            folder.open(Folder.READ_ONLY);
        }
        int totalMessages = folder.getMessageCount();
        if (totalMessages == 0) {
            folder.close(false);
            store.close();
            return null;
        }
        msgs = folder.getMessages();
        // Use a suitable FetchProfile
        FetchProfile fp = new FetchProfile();
        fp.add(FetchProfile.Item.ENVELOPE);
        fp.add(FetchProfile.Item.FLAGS);
        fp.add("X-Mailer");
        folder.fetch(msgs, fp);
        folder.close(false);
        store.close();
    } catch (AuthenticationFailedException e) {
        throw e;
    } catch (MessagingException ex) {
        System.out.println("Mail module got exception: " + ex.getMessage());
    } catch (Exception e) {
        System.out.println("Mail module got exception: " + e.getMessage());
    }
    return msgs;
}
