@Override
protected String go() throws Exception {
    LessonsService service = (LessonsService) this.getBean("lessonsService");
    lesson.setLessondate(LessonsUtil.str2timestamp(datestart + " " + hmstart));
    if (onlyonline != 0) {
        lesson.setLessonend(lesson.getLessondate());
        if (lesson.getOnlinefile() == null || lesson.getOnlinefile().equals("")) {
            this.message = "在线文件不能为空,请返回";
            return "message";
        }
        // if (onlyonline == 2) {
        if (lesson.getTeacherid() != 0) {
            Teacher teacher = (Teacher) basicService.get(Teacher.class, lesson.getTeacherid());
            lesson.setTeachers(teacher.getUsername());
            lesson.setTeachertype(teacher.getTeacherType());
        }
    } else
        lesson.setLessonend(LessonsUtil.str2timestamp(dateend + " " + hmend));
    // 如果登录的对应的grouptype=4或5或者为空的话，则用下面的，否则，谁登陆算谁的
    SysGroup mygroup = this.getLoginUser().getSysGroup();
    // if (mygroup == null || mygroup.getGrouptype() > 3) {
    // 
    // if (datavisible.getProvinceid() != 0) {
    // lesson.setProvinceid(datavisible.getProvinceid());
    // lesson.setGroupid(lesson.getProvinceid());
    // }
    // if (datavisible.getCityid() != 0) {
    // lesson.setCityid(datavisible.getCityid());
    // lesson.setCityid(lesson.getCityid());
    // }
    // if(datavisible.getProvinceid()== 0&&datavisible.getCityid() == 0){
    // lesson.setGroupid(mygroup == null ? 0 : mygroup.getGroupid());
    // }
    // } else {
    // lesson.setGroupid(mygroup.getGroupid());
    // lesson.setProvinceid(this.getLoginUser().getProvinceid());
    // lesson.setCityid(this.getLoginUser().getCityid());
    // // 要把自己给加进去啊
    // // if(sharedgroupids==null)
    // // sharedgroupids=new ArrayList();
    // //
    // }
    String attach = lesson.getAttach();
    String extendPath = "/lesson/";
    String toPath = com.changpeng.common.Constants.PHOTO_SAVE_PATH + extendPath;
    // 创建目录
    FileUtils.forceMkdir(new File(toPath));
    if (attach == null)
        attach = "";
    int index = 0;
    if (fileName != null) {
        for (String str : fileName) {
            if (str != null && !"".equals(str)) {
                String name = new java.text.SimpleDateFormat("yyyyMMddHHmmss").format(new java.util.Date()) + index;
                String ext = getExtention(str);
                String filename = name + ext;
                try {
                    File dest = new File(toPath + filename);
                    // 移动文件
                    FileUtils.copyFile(file[index], dest);
                } catch (IOException e) {
                    message = "上传培训资料错误：" + e.getMessage();
                    return "message";
                }
                attach += "," + filename;
            }
            index++;
        }
    }
    if (picpreview != null) {
        String name = new java.text.SimpleDateFormat("yyyyMMddHHmmss").format(new java.util.Date()) + "pic";
        String ext = getExtention(picpreviewFileName);
        String filename = name + ext;
        try {
            File dest = new File(toPath + filename);
            // 移动文件
            FileUtils.copyFile(picpreview, dest);
            lesson.setPic(name + ext);
        } catch (IOException e) {
            message = "上传培训资料错误：" + e.getMessage();
            return "message";
        }
    }
    System.out.println("=====" + picpreviewFileName + ",," + lesson.getPic());
    int i = 0;
    String[] file = attach.split(",");
    for (String str : file) {
        if (str != null && !"".equals(str.trim()))
            i++;
    }
    if (i > 5) {
        message = "对不起，您最多可上传5份附件";
        return "message";
    }
    // if (sharedgroupids == null || sharedgroupids.size() == 0) {
    // sharedgroupids = new ArrayList();
    // }
    // if (mygroup != null)
    // sharedgroupids.add(mygroup.getGroupid());
    lesson.setAttach(attach);
    System.out.println("lesson.getDeleteflagint()::::" + deleteflagint);
    lesson.setDeleteflag(deleteflagint == 1 ? true : false);
    // service.update(lesson);
    // service.updateLesson(lesson, sharedgroupids, this.getLoginUser());
    service.updateLesson(lesson, null, this.getLoginUser());
    // this.nextPage = "lessonsList.pl";
    if (onlyonline == 1)
        this.nextPage = "lessonsOnlineList.pl?lessonstyle=2&pageNo=" + pageNo;
    else if (onlyonline == 1) {
        this.nextPage = "lessonsLocalList.pl?lessonstyle=1&pageNo=" + pageNo;
    } else {
        this.nextPage = "teacherLessonsList.pl?pageNo=" + pageNo;
    }
    this.message = "课程信息修改成功";
    this.opResult += "修改课程,名称:" + lesson.getTitle();
    return SUCCESS;
}
