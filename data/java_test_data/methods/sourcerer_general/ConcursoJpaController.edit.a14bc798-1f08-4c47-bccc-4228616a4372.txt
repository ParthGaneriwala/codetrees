public void edit(Concurso concurso) throws NonexistentEntityException, Exception {
    EntityManager em = null;
    try {
        em = getEntityManager();
        em.getTransaction().begin();
        Concurso persistentConcurso = em.find(Concurso.class, concurso.getId());
        Set<Recurso> recursosOld = persistentConcurso.getRecursos();
        Set<Recurso> recursosNew = concurso.getRecursos();
        Set<Inscricao> inscricoesOld = persistentConcurso.getInscricoes();
        Set<Inscricao> inscricoesNew = concurso.getInscricoes();
        Set<FatoRelevante> fatosRelevantesOld = persistentConcurso.getFatosRelevantes();
        Set<FatoRelevante> fatosRelevantesNew = concurso.getFatosRelevantes();
        Set<Arquivo> arquivosOld = persistentConcurso.getArquivos();
        Set<Arquivo> arquivosNew = concurso.getArquivos();
        Set<Prova> provasOld = persistentConcurso.getProvas();
        Set<Prova> provasNew = concurso.getProvas();
        Set<Recurso> attachedRecursosNew = new HashSet<Recurso>();
        for (Recurso recursosNewRecursoToAttach : recursosNew) {
            recursosNewRecursoToAttach = em.getReference(recursosNewRecursoToAttach.getClass(), recursosNewRecursoToAttach.getId());
            attachedRecursosNew.add(recursosNewRecursoToAttach);
        }
        recursosNew = attachedRecursosNew;
        concurso.setRecursos(recursosNew);
        Set<Inscricao> attachedInscricoesNew = new HashSet<Inscricao>();
        for (Inscricao inscricoesNewInscricaoToAttach : inscricoesNew) {
            inscricoesNewInscricaoToAttach = em.getReference(inscricoesNewInscricaoToAttach.getClass(), inscricoesNewInscricaoToAttach.getId());
            attachedInscricoesNew.add(inscricoesNewInscricaoToAttach);
        }
        inscricoesNew = attachedInscricoesNew;
        concurso.setInscricoes(inscricoesNew);
        Set<FatoRelevante> attachedFatosRelevantesNew = new HashSet<FatoRelevante>();
        for (FatoRelevante fatosRelevantesNewFatoRelevanteToAttach : fatosRelevantesNew) {
            fatosRelevantesNewFatoRelevanteToAttach = em.getReference(fatosRelevantesNewFatoRelevanteToAttach.getClass(), fatosRelevantesNewFatoRelevanteToAttach.getId());
            attachedFatosRelevantesNew.add(fatosRelevantesNewFatoRelevanteToAttach);
        }
        fatosRelevantesNew = attachedFatosRelevantesNew;
        concurso.setFatosRelevantes(fatosRelevantesNew);
        Set<Arquivo> attachedArquivosNew = new HashSet<Arquivo>();
        for (Arquivo arquivosNewArquivoToAttach : arquivosNew) {
            arquivosNewArquivoToAttach = em.getReference(arquivosNewArquivoToAttach.getClass(), arquivosNewArquivoToAttach.getId());
            attachedArquivosNew.add(arquivosNewArquivoToAttach);
        }
        arquivosNew = attachedArquivosNew;
        concurso.setArquivos(arquivosNew);
        Set<Prova> attachedProvasNew = new HashSet<Prova>();
        for (Prova provasNewProvaToAttach : provasNew) {
            provasNewProvaToAttach = em.getReference(provasNewProvaToAttach.getClass(), provasNewProvaToAttach.getId());
            attachedProvasNew.add(provasNewProvaToAttach);
        }
        provasNew = attachedProvasNew;
        concurso.setProvas(provasNew);
        concurso = em.merge(concurso);
        for (Recurso recursosOldRecurso : recursosOld) {
            if (!recursosNew.contains(recursosOldRecurso)) {
                recursosOldRecurso.setConcurso(null);
                recursosOldRecurso = em.merge(recursosOldRecurso);
            }
        }
        for (Recurso recursosNewRecurso : recursosNew) {
            if (!recursosOld.contains(recursosNewRecurso)) {
                Concurso oldConcursoOfRecursosNewRecurso = recursosNewRecurso.getConcurso();
                recursosNewRecurso.setConcurso(concurso);
                recursosNewRecurso = em.merge(recursosNewRecurso);
                if (oldConcursoOfRecursosNewRecurso != null && !oldConcursoOfRecursosNewRecurso.equals(concurso)) {
                    oldConcursoOfRecursosNewRecurso.getRecursos().remove(recursosNewRecurso);
                    oldConcursoOfRecursosNewRecurso = em.merge(oldConcursoOfRecursosNewRecurso);
                }
            }
        }
        for (Inscricao inscricoesOldInscricao : inscricoesOld) {
            if (!inscricoesNew.contains(inscricoesOldInscricao)) {
                inscricoesOldInscricao.setConcurso(null);
                inscricoesOldInscricao = em.merge(inscricoesOldInscricao);
            }
        }
        for (Inscricao inscricoesNewInscricao : inscricoesNew) {
            if (!inscricoesOld.contains(inscricoesNewInscricao)) {
                Concurso oldConcursoOfInscricoesNewInscricao = inscricoesNewInscricao.getConcurso();
                inscricoesNewInscricao.setConcurso(concurso);
                inscricoesNewInscricao = em.merge(inscricoesNewInscricao);
                if (oldConcursoOfInscricoesNewInscricao != null && !oldConcursoOfInscricoesNewInscricao.equals(concurso)) {
                    oldConcursoOfInscricoesNewInscricao.getInscricoes().remove(inscricoesNewInscricao);
                    oldConcursoOfInscricoesNewInscricao = em.merge(oldConcursoOfInscricoesNewInscricao);
                }
            }
        }
        for (FatoRelevante fatosRelevantesOldFatoRelevante : fatosRelevantesOld) {
            if (!fatosRelevantesNew.contains(fatosRelevantesOldFatoRelevante)) {
                fatosRelevantesOldFatoRelevante.setConcurso(null);
                fatosRelevantesOldFatoRelevante = em.merge(fatosRelevantesOldFatoRelevante);
            }
        }
        for (FatoRelevante fatosRelevantesNewFatoRelevante : fatosRelevantesNew) {
            if (!fatosRelevantesOld.contains(fatosRelevantesNewFatoRelevante)) {
                Concurso oldConcursoOfFatosRelevantesNewFatoRelevante = fatosRelevantesNewFatoRelevante.getConcurso();
                fatosRelevantesNewFatoRelevante.setConcurso(concurso);
                fatosRelevantesNewFatoRelevante = em.merge(fatosRelevantesNewFatoRelevante);
                if (oldConcursoOfFatosRelevantesNewFatoRelevante != null && !oldConcursoOfFatosRelevantesNewFatoRelevante.equals(concurso)) {
                    oldConcursoOfFatosRelevantesNewFatoRelevante.getFatosRelevantes().remove(fatosRelevantesNewFatoRelevante);
                    oldConcursoOfFatosRelevantesNewFatoRelevante = em.merge(oldConcursoOfFatosRelevantesNewFatoRelevante);
                }
            }
        }
        for (Arquivo arquivosOldArquivo : arquivosOld) {
            if (!arquivosNew.contains(arquivosOldArquivo)) {
                arquivosOldArquivo.setConcurso(null);
                arquivosOldArquivo = em.merge(arquivosOldArquivo);
            }
        }
        for (Arquivo arquivosNewArquivo : arquivosNew) {
            if (!arquivosOld.contains(arquivosNewArquivo)) {
                Concurso oldConcursoOfArquivosNewArquivo = arquivosNewArquivo.getConcurso();
                arquivosNewArquivo.setConcurso(concurso);
                arquivosNewArquivo = em.merge(arquivosNewArquivo);
                if (oldConcursoOfArquivosNewArquivo != null && !oldConcursoOfArquivosNewArquivo.equals(concurso)) {
                    oldConcursoOfArquivosNewArquivo.getArquivos().remove(arquivosNewArquivo);
                    oldConcursoOfArquivosNewArquivo = em.merge(oldConcursoOfArquivosNewArquivo);
                }
            }
        }
        for (Prova provasOldProva : provasOld) {
            if (!provasNew.contains(provasOldProva)) {
                provasOldProva.setConcurso(null);
                provasOldProva = em.merge(provasOldProva);
            }
        }
        for (Prova provasNewProva : provasNew) {
            if (!provasOld.contains(provasNewProva)) {
                Concurso oldConcursoOfProvasNewProva = provasNewProva.getConcurso();
                provasNewProva.setConcurso(concurso);
                provasNewProva = em.merge(provasNewProva);
                if (oldConcursoOfProvasNewProva != null && !oldConcursoOfProvasNewProva.equals(concurso)) {
                    oldConcursoOfProvasNewProva.getProvas().remove(provasNewProva);
                    oldConcursoOfProvasNewProva = em.merge(oldConcursoOfProvasNewProva);
                }
            }
        }
        em.getTransaction().commit();
    } catch (Exception ex) {
        String msg = ex.getLocalizedMessage();
        if (msg == null || msg.length() == 0) {
            long id = concurso.getId();
            if (findConcurso(id) == null) {
                throw new NonexistentEntityException("The concurso with id " + id + " no longer exists.");
            }
        }
        throw ex;
    } finally {
        if (em != null) {
            em.close();
        }
    }
}
