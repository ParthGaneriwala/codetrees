public void testPersistedChangedPrefixes() throws java.lang.Exception {
    String testPrefix1 = "testPrefix1";
    String testURI1 = "http://someTestURI/1#";
    String testURI1b = "http://someTestURI/1b#";
    String testPrefix2 = "testPrefix2";
    String testURI2 = "http://someTestURI/2#";
    String testPrefix3 = "testPrefix3";
    String testURI3 = "http://someTestURI/3#";
    IDBConnection conn = TestConnection.makeAndCleanTestConnection();
    ModelRDB m = ModelRDB.createModel(conn);
    // brand new model should have no prefixes
    assertEquals(0, m.getNsPrefixMap().size());
    m.setNsPrefix(testPrefix1, testURI1);
    m.setNsPrefix(testPrefix2, testURI2);
    assertEquals(2, m.getNsPrefixMap().size());
    assertEquals(testURI1, m.getNsPrefixURI(testPrefix1));
    assertEquals(testURI2, m.getNsPrefixURI(testPrefix2));
    m.close();
    m = null;
    // Now reopen the first Model and check the prefixes were persisted
    ModelRDB m2 = ModelRDB.open(conn);
    assertEquals(2, m2.getNsPrefixMap().size());
    assertEquals(testURI1, m2.getNsPrefixURI(testPrefix1));
    assertEquals(testURI2, m2.getNsPrefixURI(testPrefix2));
    // Now change one prefix and add a third
    m2.setNsPrefix(testPrefix1, testURI1b);
    m2.setNsPrefix(testPrefix3, testURI3);
    assertEquals(3, m2.getNsPrefixMap().size());
    assertEquals(testURI1b, m2.getNsPrefixURI(testPrefix1));
    assertEquals(testURI2, m2.getNsPrefixURI(testPrefix2));
    assertEquals(testURI3, m2.getNsPrefixURI(testPrefix3));
    m2.close();
    m2 = null;
    // Now reopen again and check it's all still as expected.
    ModelRDB m3 = ModelRDB.open(conn);
    assertEquals(3, m3.getNsPrefixMap().size());
    assertEquals(testURI1b, m3.getNsPrefixURI(testPrefix1));
    assertEquals(testURI2, m3.getNsPrefixURI(testPrefix2));
    assertEquals(testURI3, m3.getNsPrefixURI(testPrefix3));
    m3.close();
    conn.close();
}
