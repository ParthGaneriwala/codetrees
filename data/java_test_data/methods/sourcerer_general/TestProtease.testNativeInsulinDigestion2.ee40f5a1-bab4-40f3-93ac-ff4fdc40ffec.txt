// --------------------------------------------------------------------------
@Test
public void testNativeInsulinDigestion2() {
    Protein insulin = getInsulin();
    DigestSettings settings = new DigestSettings();
    settings.setMaxMissedCleavages(2);
    List<DigestFragment> fragments = Protease.TRYPSIN.digest(insulin, settings);
    for (DigestFragment frag : fragments) {
        System.out.println(frag);
    }
    Assert.assertEquals(6, fragments.size());
    Assert.assertEquals("B Chain", fragments.get(0).getID());
    Assert.assertEquals(insulin.getChain("B Chain").getSequence().substring(22, 29), fragments.get(0).getSequence());
    Assert.assertEquals(23, fragments.get(0).getBegin());
    Assert.assertEquals(29, fragments.get(0).getEnd());
    Assert.assertEquals("B Chain", fragments.get(1).getID());
    Assert.assertEquals(insulin.getChain("B Chain").getSequence().substring(22, 30), fragments.get(1).getSequence());
    Assert.assertEquals(23, fragments.get(1).getBegin());
    Assert.assertEquals(30, fragments.get(1).getEnd());
    Assert.assertEquals("B Chain", fragments.get(1).getID());
    Assert.assertEquals(insulin.getChain("B Chain").getSequence().substring(29, 30), fragments.get(2).getSequence());
    Assert.assertEquals(30, fragments.get(2).getBegin());
    Assert.assertEquals(30, fragments.get(2).getEnd());
    Assert.assertEquals(2, fragments.get(3).getChains().size());
    Assert.assertEquals(3, fragments.get(3).getXLinks().size());
    Assert.assertEquals(1, ((DigestFragment) fragments.get(3).getChain("A Chain")).getBegin());
    Assert.assertEquals(21, ((DigestFragment) fragments.get(3).getChain("A Chain")).getEnd());
    Assert.assertEquals(1, ((DigestFragment) fragments.get(3).getChain("B Chain")).getBegin());
    Assert.assertEquals(22, ((DigestFragment) fragments.get(3).getChain("B Chain")).getEnd());
    Assert.assertEquals(4862.1729437298, fragments.get(3).getMonoisotopicMass(), 0.0001);
    Assert.assertEquals(2, fragments.get(4).getChains().size());
    Assert.assertEquals(3, fragments.get(4).getXLinks().size());
    Assert.assertEquals(1, ((DigestFragment) fragments.get(4).getChain("A Chain")).getBegin());
    Assert.assertEquals(21, ((DigestFragment) fragments.get(4).getChain("A Chain")).getEnd());
    Assert.assertEquals(1, ((DigestFragment) fragments.get(4).getChain("B Chain")).getBegin());
    Assert.assertEquals(29, ((DigestFragment) fragments.get(4).getChain("B Chain")).getEnd());
    Assert.assertEquals(5702.5899691623, fragments.get(4).getMonoisotopicMass(), 0.0001);
    Assert.assertEquals(2, fragments.get(5).getChains().size());
    Assert.assertEquals(3, fragments.get(5).getXLinks().size());
    Assert.assertEquals(1, ((DigestFragment) fragments.get(5).getChain("A Chain")).getBegin());
    Assert.assertEquals(21, ((DigestFragment) fragments.get(5).getChain("A Chain")).getEnd());
    Assert.assertEquals(1, ((DigestFragment) fragments.get(5).getChain("B Chain")).getBegin());
    Assert.assertEquals(30, ((DigestFragment) fragments.get(5).getChain("B Chain")).getEnd());
    Assert.assertEquals(5803.6376476357, fragments.get(5).getMonoisotopicMass(), 0.0001);
}
