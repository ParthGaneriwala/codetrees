/**
 * StreamBufferEngine
 * =================================================================================================
 */
private void buildStreamBufferGraph() {
    cleanup();
    Object[] options = { " DV/MPEG ", "BDA", "File" };
    int sourceType = JOptionPane.showOptionDialog(this, "         select source type ", " Stream Buffer Engine", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
    /**
     * standard - use MPEG2 or DV devices only *
     */
    boolean standard = false;
    DSFilterInfo[][] matchingCaptureDevices = DSStreamBufferGraph.getStreamBufferSourceDevices(sourceType, standard);
    StreamBufferCaptureSource capSrc = null;
    StreamBufferBDASource bdaSrc = null;
    StreamBufferFileSource fileSrc = null;
    switch(sourceType) {
        case StreamBufferSource.SB_SRC_CAPTURE:
            if (matchingCaptureDevices[0] == null) {
                System.out.println("no matching capture source found");
                return;
            }
            if (standard && matchingCaptureDevices[0].length > 0) {
                capSrc = (StreamBufferCaptureSource) DSStreamBufferGraph.createSource(StreamBufferSource.SB_SRC_CAPTURE, matchingCaptureDevices[0][0], 0);
                dsfg = new DSStreamBufferGraph(DSFiltergraph.RENDER_NATIVE, capSrc, this);
            } else if (!standard && matchingCaptureDevices[0].length > 0 && matchingCaptureDevices[1].length > 0) {
                capSrc = (StreamBufferCaptureSource) DSStreamBufferGraph.createNonStandardSource(StreamBufferSource.SB_SRC_CAPTURE, matchingCaptureDevices[0][1], null, 0);
                dsfg = new DSStreamBufferGraph(DSFiltergraph.RENDER_NATIVE, capSrc, this);
            }
            break;
        case StreamBufferSource.SB_SRC_BDA:
            bdaSrc = (StreamBufferBDASource) DSStreamBufferGraph.createSource(StreamBufferSource.SB_SRC_BDA, matchingCaptureDevices[0][0], DSBDAGraph.DVBT);
            dsfg = new DSStreamBufferGraph(DSFiltergraph.RENDER_NATIVE, bdaSrc, this);
            break;
        case StreamBufferSource.SB_SRC_FILE:
            FileDialog fd = new FileDialog(this, "Open MPEG2 or DV file", FileDialog.LOAD);
            fd.setVisible(true);
            fileSrc = (StreamBufferFileSource) DSStreamBufferGraph.createSource(StreamBufferSource.SB_SRC_FILE, DSFilterInfo.createFileInfo(fd.getDirectory() + File.separator + fd.getFile()), 0);
            dsfg = new DSStreamBufferGraph(DSFiltergraph.RENDER_NATIVE, fileSrc, this);
            break;
    }
    ((DSStreamBufferGraph) dsfg).setCaptureFile("C://myRecording.dvr-ms");
    initDisplay();
    if (capSrc != null && capSrc.getControls() != null) {
        JFrame jf = new JFrame("Device control");
        jf.setLayout(new GridLayout(0, 1));
        for (int i = 0; i < 16; i++) try {
            jf.add(((CaptureDeviceControls) capSrc.getControls()).getController(i, 0, true));
        } catch (Exception ex) {
        }
        jf.pack();
        jf.setVisible(true);
    } else if (bdaSrc != null) {
        showChannelList(null, bdaSrc, DSBDAGraph.DVBT);
        bdaSrc.loadLastChannel();
    }
}
