// public void ShowDialogBox(){
// JFrame frame;
// frame = new JFrame("Show Message Dialog");
// JButton button = new JButton("Click Me");
// button.addActionListener(new MyAction());
// frame.add(button);
// frame.setSize(400, 400);
// frame.setVisible(true);
// frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
// }
private boolean saveButtonResponse() {
    int[] date = getValidDate();
    if (date == null) {
        // JOptionPane.ERROR_MESSAGE);
        return false;
    }
    Appt appt = parent.controller.CreateApp();
    if (s.compareTo("Invitation") == 0) {
        appt.setGuest(NewAppt.getGuest());
        appt.setOrg(NewAppt.getOrg());
    }
    int[] time = new int[2];
    time = getValidTimeInterval();
    if (time == null) {
        return false;
    }
    appt.setTimeSpan(new TimeSpan(CreateTimeStamp(date, time[0]), CreateTimeStamp(date, time[1])));
    String temps = titleField.getText().trim();
    if (temps.equals("") || temps.equals("Untitled")) {
        JOptionPane.showMessageDialog(this, "Please Input A Proper Title", "Input Error", JOptionPane.ERROR_MESSAGE);
        return false;
    } else if (!temps.matches("[.\\S]{1,30}+")) {
        JOptionPane.showMessageDialog(this, "The Title cannot be longer than 30 characters!", "Input Error", JOptionPane.ERROR_MESSAGE);
        return false;
    } else {
        appt.setTitle(temps);
    }
    int tday, tmonth, tyear;
    tday = parent.getDay();
    tmonth = parent.getMonth();
    tyear = parent.getYear();
    parent.setDay(date[0], date[1], date[2]);
    Appt tem;
    Vector list = parent.GetTodayAppt();
    if (list != null) {
        for (int i = 0; i < list.size(); i++) {
            tem = (Appt) list.elementAt(i);
            TimeSpan d = tem.TimeSpan();
            if (appt.TimeSpan().Overlap(d)) {
                parent.setDay(tyear, tmonth, tday);
                if (s.compareTo("Modify") == 0) {
                    parent.AddAppt(NewAppt);
                    parent.controller.ManageAppt(NewAppt, ApptStorageControllerImpl.NEW);
                    parent.getAppList().clear();
                    parent.getAppList().setTodayAppt(parent.GetTodayAppt());
                }
                JOptionPane.showMessageDialog(this, "Time conflict!", "Input Error", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        }
    }
    parent.setDay(tyear, tmonth, tday);
    User[] users = new User[1];
    users[0] = this.parent.mCurrUser;
    NewAppt = appt;
    NewAppt.setInfo(detailArea.getText());
    if (s.compareTo("Invitation") == 0) {
        NewAppt.setType(1);
    // NewAppt.setGuest(appt.getGuest());
    }
    parent.AddAppt(NewAppt);
    // if (parent.IsTodayAppt(NewAppt)) {
    parent.getAppList().clear();
    parent.getAppList().setTodayAppt(parent.GetTodayAppt());
    // }
    return true;
}
