@Override
public void handleEvent(Event e) {
    final User selectedUser = CoolKey.getUsers().get(users.getSelectionIndex());
    if (selectedUser.validatePassword(null)) {
        MessageBox messageBox = new MessageBox(GUI.shell, SWT.ICON_INFORMATION);
        messageBox.setText("Hasło");
        messageBox.setMessage("Ten profil nie jest zabezpieczony hasłem.");
        messageBox.open();
    } else {
        final Shell changePassword = new Shell(GUI.shell, SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL);
        changePassword.setText("Zmiana hasła");
        changePassword.setLayout(new GridLayout());
        Composite comp = new Composite(changePassword, SWT.NONE);
        comp.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));
        comp.setLayout(new GridLayout(3, false));
        new Label(comp, SWT.NONE).setText("Aktualne hasło: ");
        final Text oldPassword = new Text(comp, SWT.BORDER);
        oldPassword.setEchoChar('*');
        oldPassword.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false, 2, 1));
        oldPassword.setFocus();
        new Label(comp, SWT.NONE).setText("Nowe hasło: ");
        final Text newPassword = new Text(comp, SWT.BORDER);
        newPassword.setEchoChar('*');
        newPassword.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, false, 2, 1));
        new Label(comp, SWT.NONE).setText(" ");
        Button change = new Button(comp, SWT.PUSH);
        change.setText("Zmień hasło");
        change.setLayoutData(new GridData(SWT.RIGHT, SWT.FILL, true, false));
        Button cancel = new Button(comp, SWT.PUSH);
        cancel.setText("Anuluj");
        cancel.setLayoutData(new GridData(SWT.RIGHT, SWT.FILL, true, false));
        Listener changePasswordListener = new Listener() {

            @Override
            public void handleEvent(Event e) {
                if (selectedUser.changePassword(oldPassword.getText(), newPassword.getText())) {
                    MessageBox messageBox = new MessageBox(GUI.shell, SWT.ICON_INFORMATION);
                    messageBox.setText("Hasło");
                    messageBox.setMessage("Hasło zostało zmienione.");
                    messageBox.open();
                    changePassword.close();
                } else {
                    MessageBox messageBox = new MessageBox(GUI.shell, SWT.ICON_WARNING);
                    messageBox.setText("Hasło");
                    messageBox.setMessage("Podane aktualne hasło jest nieprawidłowe.");
                    messageBox.open();
                }
            }
        };
        change.addListener(SWT.Selection, changePasswordListener);
        newPassword.addListener(SWT.DefaultSelection, changePasswordListener);
        cancel.addListener(SWT.Selection, new Listener() {

            @Override
            public void handleEvent(Event e) {
                changePassword.close();
            }
        });
        changePassword.pack();
        changePassword.open();
    }
}
