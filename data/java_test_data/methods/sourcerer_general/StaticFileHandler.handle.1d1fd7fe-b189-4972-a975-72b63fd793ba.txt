public void handle(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    String url = request.getRequestURI();
    String path = request.getServletPath();
    url = url.substring(path.length());
    if (url.toUpperCase().startsWith("/WEB-INF/")) {
        response.sendError(HttpServletResponse.SC_NOT_FOUND);
        return;
    }
    int n = url.indexOf('?');
    if (n != (-1))
        url = url.substring(0, n);
    n = url.indexOf('#');
    if (n != (-1))
        url = url.substring(0, n);
    File f = new File(servletContext.getRealPath(url));
    if (!f.isFile()) {
        response.sendError(HttpServletResponse.SC_NOT_FOUND);
        return;
    }
    long ifModifiedSince = request.getDateHeader("If-Modified-Since");
    long lastModified = f.lastModified();
    if (ifModifiedSince != (-1) && ifModifiedSince >= lastModified) {
        response.setStatus(HttpServletResponse.SC_NOT_MODIFIED);
        return;
    }
    response.setDateHeader("Last-Modified", lastModified);
    response.setContentLength((int) f.length());
    // set cache:
    if (expires < 0) {
        response.setHeader("Cache-Control", "no-cache");
    } else if (expires > 0) {
        response.setHeader("Cache-Control", maxAge);
        response.setDateHeader("Expires", System.currentTimeMillis() + expires);
    }
    // should download?
    // String name = request.getParameter("_download");
    // if (name!=null) {
    // resp.setContentType(MIME_OCTET_STREAM);
    // resp.setHeader("Content-disposition", "attachment; filename=" + name);
    // }
    response.setContentType(getMimeType(f));
    sendFile(f, response.getOutputStream());
}
