private void updateBrowseTree(DefaultMutableTreeNode selectedNode, String strPath) {
    emptyTable(logicalTable);
    emptyTable(concreteTable);
    if (strPath == null) {
        rootNode.removeAllChildren();
        rootNode.setUserObject("");
        treeModel.reload();
    } else if ((selectedNode != null) && (blnIsConnected)) {
        selectedNode.removeAllChildren();
        DefaultTreeModel currTreeModel = new DefaultTreeModel(selectedNode);
        currTreeModel.reload();
        try {
            List<String> folders = new ArrayList<String>();
            List<EPLogical> files = new ArrayList<EPLogical>();
            boolean blnResult = bridge.getObjects(ticket, strPath, folders, files);
            if (blnResult) {
                for (int i = 0; i < folders.size(); i++) {
                    String strTmp = folders.get(i);
                    System.out.println(" add folder " + strTmp);
                    DefaultMutableTreeNode treeNode = new DefaultMutableTreeNode(strTmp);
                    selectedNode.add(treeNode);
                    displayLog(" adding " + strTmp + " to " + selectedNode.toString());
                }
                updateLogicalList(logicalTable, files);
            } else {
                System.out.println("bridge.getObjects failed");
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            TreePath treePath = new TreePath(selectedNode);
            browseTree.expandPath(treePath);
            // System.out.println(" expand " + treePath);
            currTreeModel.reload();
        }
    } else {
    // System.out.println(" selectedNode is null");
    }
    browseTree.repaint();
    mainPanel.repaint();
}
