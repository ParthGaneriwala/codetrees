private static void crearHUD() {
    // 
    Node hudNode = new Node("hudRoot");
    // 
    // Create the texture state to handle the texture
    TextureState ts = GlobalState.renderer.createTextureState();
    Texture texture = // 
    TextureManager.loadTexture(// 
    "".getClass().getResource("/org/codingjoy/resources/levels/common/textures/hud.png"), // 
    Texture.MinificationFilter.Trilinear, // 
    Texture.MagnificationFilter.Bilinear, 1.0f, true);
    ts.setTexture(texture);
    ts.setEnabled(true);
    // 
    // Texture coordinates
    FloatBuffer texCoords = BufferUtils.createVector2Buffer(4);
    texCoords.put(0).put(1);
    texCoords.put(0).put(0);
    texCoords.put(1).put(0);
    texCoords.put(1).put(1);
    // 
    // Transparency
    BlendState alpha = GlobalState.renderer.createBlendState();
    alpha.setBlendEnabled(true);
    alpha.setSourceFunction(BlendState.SourceFunction.SourceAlpha);
    alpha.setDestinationFunction(BlendState.DestinationFunction.One);
    alpha.setTestEnabled(true);
    alpha.setTestFunction(BlendState.TestFunction.GreaterThan);
    alpha.setEnabled(true);
    // 
    // Quad
    Quad hudQuad = new Quad("hud", GlobalState.displaySystem.getWidth(), HUD_HEIGHT);
    hudQuad.setRenderQueueMode(Renderer.QUEUE_ORTHO);
    hudQuad.setLocalTranslation(new Vector3f(hudQuad.getWidth() / 2, hudQuad.getHeight() / 2, 0));
    hudQuad.setLightCombineMode(Spatial.LightCombineMode.Off);
    hudQuad.setTextureCoords(new TexCoords(texCoords));
    hudQuad.setRenderState(ts);
    hudQuad.setRenderState(alpha);
    hudQuad.updateRenderState();
    // 
    hudNode.attachChild(hudQuad);
    // 
    // 
    // 
    // Crea lineas para mostrar textos en la pantalla
    Text[] texts = new Text[10];
    for (int i = 0; i < texts.length; i++) {
        Text text = new Text("text" + i, "");
        text.setCullHint(Spatial.CullHint.Never);
        text.setRenderState(Text.getDefaultFontTextureState());
        text.setRenderState(Text.getFontBlend());
        text.setLightCombineMode(Spatial.LightCombineMode.Off);
        text.setLocalScale(TEXT_SIZE);
        text.setTextColor(ColorRGBA.white);
        if (i < texts.length / 2) {
            text.setLocalTranslation(TEXT_MARGIN_X, HUD_HEIGHT - TEXT_MARGIN_Y - text.getHeight() - TEXT_HEIGHT * i, 0);
        } else {
            text.setLocalTranslation(TEXT_MARGIN_X + GlobalState.displaySystem.getWidth() / 2, HUD_HEIGHT - TEXT_MARGIN_Y - text.getHeight() - TEXT_HEIGHT * (i - texts.length / 2), 0);
        }
        // 
        texts[i] = text;
        // 
        hudNode.attachChild(text);
    }
    // 
    GlobalState.hud = hudNode;
    GlobalState.texts = texts;
    // 
    GlobalState.scene.attachChild(hudNode);
    // 
    loadBlenderModel();
}
