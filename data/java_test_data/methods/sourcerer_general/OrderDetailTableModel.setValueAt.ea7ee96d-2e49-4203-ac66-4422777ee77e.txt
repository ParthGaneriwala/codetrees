@Override
public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
    try {
        OrderDetail od = ods.get(rowIndex);
        int Piece = -1;
        switch(columnIndex) {
            case 1:
                Inventory inv = (Inventory) aValue;
                od.setInventory(inv);
                // �������
                Piece = od.getPiece();
                if (inv != null) {
                    // ��ȡ��������
                    byte iGroupType = inv.getCompGroup().getiGroupType();
                    if (iGroupType != 0) {
                        BigDecimal pieceBig = new BigDecimal(Piece);
                        // ��ȡ����ļ�������
                        String cComCode = inv.getCompGroup().getcGroupCode();
                        // ����Ĭ�ϼ�����λ����
                        String cSAComUnitCode = inv.getSAComUnitCode();
                        BigDecimal iChangeRate = getIChangeRate(cComCode, cSAComUnitCode);
                        if (iChangeRate != null) {
                            od.setCount(iChangeRate.multiply(pieceBig));
                        }
                    }
                }
                break;
            case 2:
                od.getInventory().setName(aValue.toString());
                break;
            case 3:
                od.getInventory().setStandard(aValue.toString());
                break;
            case 4:
                UserDefine packing = (UserDefine) aValue;
                od.setPacking(packing);
                break;
            // case 4:
            case 5:
                Inventory inventory = od.getInventory();
                // �������
                Piece = Integer.parseInt(aValue.toString());
                if (inventory != null) {
                    // ��ȡ��������
                    byte iGroupType = inventory.getCompGroup().getiGroupType();
                    if (iGroupType != 0) {
                        BigDecimal pieceBig = new BigDecimal(Piece);
                        // ��ȡ����ļ�������
                        String cComCode = inventory.getCompGroup().getcGroupCode();
                        // ����Ĭ�ϼ�����λ����
                        String cSAComUnitCode = inventory.getSAComUnitCode();
                        BigDecimal iChangeRate = getIChangeRate(cComCode, cSAComUnitCode);
                        if (iChangeRate != null) {
                            od.setCount(iChangeRate.multiply(pieceBig));
                        }
                    }
                }
                od.setPiece(Piece);
                break;
            // case 5:
            case 6:
                try {
                    od.setCount(new BigDecimal(aValue.toString()));
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                }
                break;
            // case 6:
            case 7:
                try {
                    BigDecimal p = new BigDecimal(aValue.toString());
                    if (p.compareTo(BigDecimal.ZERO) > 0) {
                        od.setPrice(p);
                    }
                } catch (NumberFormatException nfe) {
                    System.out.println("��˰���۸�ʽ����,�Ѳ����쳣��");
                }
                break;
            // case 8:
            case 9:
                String dateStr = aValue.toString();
                Date d;
                if (dateStr.equals("")) {
                    d = Calendar.getInstance().getTime();
                } else {
                    d = DateFormat.getDateInstance().parse(dateStr);
                }
                od.setSendDate(d);
                break;
        }
        fireTableRowsUpdated(rowIndex, rowIndex);
    } catch (ParseException ex) {
        Logger.getLogger(OrderDetailTableModel.class.getName()).log(Level.SEVERE, null, ex);
    }
}
