public void run() {
    try {
        socket.setSoTimeout(2000);
        socket.setTcpNoDelay(true);
        Thread.sleep(2000);
        InputStream inputStream = socket.getInputStream();
        String ipAddress = socket.getInetAddress().getHostAddress();
        if (logger.isDebugEnabled()) {
            logger.debug("Connection with [ " + ipAddress + " ]");
        }
        int numberReceived = 0;
        final int BUFFER_SIZE = 5000;
        byte[] dataBuffer = new byte[BUFFER_SIZE];
        byte[] readBuffer = new byte[5000];
        try {
            if (inputStream.available() > 0) {
                int numBytes = inputStream.read(readBuffer);
                if (numberReceived + numBytes <= BUFFER_SIZE) {
                    System.arraycopy(readBuffer, 0, dataBuffer, numberReceived, numBytes);
                    numberReceived += numBytes;
                } else {
                    System.arraycopy(readBuffer, 0, dataBuffer, numberReceived, BUFFER_SIZE - numberReceived);
                    numberReceived = BUFFER_SIZE;
                }
            }
        } catch (IOException ex) {
            throw new DriverException(ex.getMessage() + " in HuaShenDriver.readData()");
        }
        if (numberReceived != 0) {
            String inputStr = new String(dataBuffer, 0, numberReceived);
            if (logger.isDebugEnabled()) {
                logger.debug("Receipt [ " + inputStr + " ] from [ " + ipAddress + " ]");
            }
            if (StringUtils.isNotEmpty(inputStr)) {
                Visitor v = null;
                String[] vs = StringUtils.split(inputStr, "||");
                if (vs.length == 4) {
                    v = new Visitor();
                    v.setUserName(vs[2]);
                    v.setCompany(vs[1]);
                    v.setAttr1(vs[0]);
                    v.setTagId(vs[3]);
                }
                if (vs.length == 5) {
                    v = new Visitor();
                    v.setUserName(vs[1]);
                    v.setCompany(vs[2]);
                    v.setAttr1(vs[0]);
                    v.setEmail(vs[3]);
                    v.setMobile(vs[4]);
                }
                if ((!"127.0.1".equals(ipAddress)) && (!ipAddress.startsWith("192.168"))) {
                    VisitorManager mgr = (VisitorManager) SpringUtil.getBean("visitorManager");
                    Visitor v1 = mgr.getVisitorByBarcode(v.getAttr1());
                    Visitor v2 = mgr.getVisitorByTagId(v.getTagId());
                    if (v1 == null && v2 == null) {
                        mgr.saveVisitor(v);
                    }
                }
                MemoryData.setVisitor(v);
            }
        }
        inputStream.close();
        socket.close();
    } catch (Exception e) {
        logger.error("Socket server error.", e);
        try {
            if (socket != null) {
                socket.close();
            }
        } catch (Exception ex) {
        }
    }
}
