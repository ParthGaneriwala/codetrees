public void CloseMarket(int botnr) {
    events[botnr].marketopen = false;
    events[botnr].gamecounter = 0;
    finalpool = getPool(botnr);
    totalpool = totalpool + finalpool + events[botnr].tripool - events[botnr].rollover;
    if (finalpool > highestpool) {
        highestpool = finalpool;
    }
    if (events[botnr].tripool > highestrollover) {
        highestrollover = events[botnr].tripool;
    }
    if (norecordsfile) {
    // nothing
    } else {
        if (finalpool > historichighestpool) {
            printNewRecord();
            tellChannel("The pool of " + finalpool + " in " + events[botnr].BotList + " constitutes a NEW BETTINGBOT RECORD, beating the pool of " + historichighestpool + " on " + historichighestpooldate + "!! Cheers!");
            historichighestpool = finalpool;
            setnewpooldate = true;
        }
        if (events[botnr].tripool > historichighestrollover) {
            printNewRecord();
            tellChannel("The tricast pool of " + events[botnr].tripool + " in " + events[botnr].BotList + " constitutes a NEW BETTINGBOT RECORD, beating the tricast pool of " + historichighestrollover + " on " + historichighestrolloverdate + "!! Cheers!");
            historichighestrollover = events[botnr].tripool;
            setnewrolloverdate = true;
        }
    }
    if (finalpool < smallestpool) {
        smallestpool = finalpool;
    }
    backup(botnr);
    SaveNewRollovers();
    if (((events[0].marketopen) && (events[0].countplayers > 0)) || ((events[1].marketopen) && (events[1].countplayers > 0)) || ((events[2].marketopen) && (events[2].countplayers > 0)) || ((events[3].marketopen) && (events[3].countplayers > 0)) || ((events[4].marketopen) && (events[4].countplayers > 0)) || ((events[5].marketopen) && (events[5].countplayers > 0)) || ((events[6].marketopen) && (events[6].countplayers > 0)) || ((events[7].marketopen) && (events[7].countplayers > 0)) || ((events[8].marketopen) && (events[8].countplayers > 0))) {
    // then do not write back
    // tellProgrammers("did not write back, as condition was not fulfilled");
    } else {
        WriteBackChips();
    // tellProgrammers("wrote back chips!!");
    }
    tellChannel("The betting market for " + events[botnr].BotList + " has been closed (pool: " + ((int) (Math.floor(finalpool))) + ", tripool: " + events[botnr].tripool + " chips).");
    sendLine("qimpart 282 1 3 1 " + events[botnr].BotList);
    finalpool = 0;
    events[botnr].statictotecore = false;
    finalizeiterations = 30;
    events[botnr].statictote = totecore(botnr);
    finalizeiterations = 0;
    // grabbinginfo=botnr;
    // myPointerToBBMainObject.myAssi.infocheck(events[botnr].BotList);
    events[botnr].tourneyStatus = 2;
    writeToAutoRecoverFile();
    saveEvents();
}
