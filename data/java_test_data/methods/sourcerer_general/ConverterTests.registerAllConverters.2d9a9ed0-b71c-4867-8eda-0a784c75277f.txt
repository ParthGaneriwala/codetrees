@BeforeClass
public static void registerAllConverters() {
    // Create the BeanUtilsBean
    beanUtilsBean = new BeanUtilsBeanExtended(convertUtilsBean, propertyUtilsBean);
    BuildDefinitionConverter buildDefinitionConverter = new BuildDefinitionConverter(beanUtilsBean);
    convertUtilsBean.register(buildDefinitionConverter, BuildDefinitionViewHelper.class);
    convertUtilsBean.register(buildDefinitionConverter, BuildDefinitionViewHelper.class);
    BuildDefinitionTemplateConverter buildDefinitionTemplateConverter = new BuildDefinitionTemplateConverter(beanUtilsBean);
    convertUtilsBean.register(buildDefinitionTemplateConverter, BuildDefinitionTemplateViewHelper.class);
    convertUtilsBean.register(buildDefinitionTemplateConverter, BuildDefinitionTemplate.class);
    BuildResultConverter buildResultConverter = new BuildResultConverter(beanUtilsBean);
    convertUtilsBean.register(buildResultConverter, BuildResultViewHelper.class);
    convertUtilsBean.register(buildResultConverter, BuildResult.class);
    ProjectConverter projectConverter = new ProjectConverter(beanUtilsBean);
    convertUtilsBean.register(projectConverter, ProjectViewHelper.class);
    convertUtilsBean.register(projectConverter, Project.class);
    ProjectDependencyConverter projectDependencyConverter = new ProjectDependencyConverter(beanUtilsBean);
    convertUtilsBean.register(projectDependencyConverter, ProjectDependencyViewHelper.class);
    convertUtilsBean.register(projectDependencyConverter, ProjectDependency.class);
    ProjectDeveloperConverter projectDeveloperConverter = new ProjectDeveloperConverter(beanUtilsBean);
    convertUtilsBean.register(projectDeveloperConverter, ProjectDeveloperViewHelper.class);
    convertUtilsBean.register(projectDeveloperConverter, ProjectDeveloper.class);
    ProjectGroupConverter projectGroupConverter = new ProjectGroupConverter(beanUtilsBean);
    convertUtilsBean.register(projectGroupConverter, ProjectGroupViewHelper.class);
    convertUtilsBean.register(projectGroupConverter, ProjectGroup.class);
    ProjectNotifierConverter projectNotifierConverter = new ProjectNotifierConverter(beanUtilsBean);
    convertUtilsBean.register(projectNotifierConverter, ProjectNotifierViewHelper.class);
    convertUtilsBean.register(projectNotifierConverter, ProjectNotifier.class);
    ScheduleConverter scheduleConverter = new ScheduleConverter(beanUtilsBean);
    convertUtilsBean.register(scheduleConverter, ScheduleViewHelper.class);
    convertUtilsBean.register(scheduleConverter, Schedule.class);
    ChangeFileConverter changeFileConverter = new ChangeFileConverter(beanUtilsBean);
    convertUtilsBean.register(changeFileConverter, ChangeFileViewHelper.class);
    convertUtilsBean.register(changeFileConverter, ChangeFile.class);
    ChangeSetConverter changeSetConverter = new ChangeSetConverter(beanUtilsBean);
    convertUtilsBean.register(changeSetConverter, ChangeSetViewHelper.class);
    convertUtilsBean.register(changeSetConverter, ChangeSet.class);
    ScmResultConverter ScmResultConverter = new ScmResultConverter(beanUtilsBean);
    convertUtilsBean.register(ScmResultConverter, ScmResultViewHelper.class);
    convertUtilsBean.register(ScmResultConverter, ScmResult.class);
    SuiteResultConverter SuiteResultConverter = new SuiteResultConverter(beanUtilsBean);
    convertUtilsBean.register(SuiteResultConverter, SuiteResultViewHelper.class);
    convertUtilsBean.register(SuiteResultConverter, SuiteResult.class);
    TestCaseFailureConverter TestCaseFailureConverter = new TestCaseFailureConverter(beanUtilsBean);
    convertUtilsBean.register(TestCaseFailureConverter, TestCaseFailureViewHelper.class);
    convertUtilsBean.register(TestCaseFailureConverter, TestCaseFailure.class);
    TestResultConverter TestResultConverter = new TestResultConverter(beanUtilsBean);
    convertUtilsBean.register(TestResultConverter, TestResultViewHelper.class);
    convertUtilsBean.register(TestResultConverter, TestResult.class);
    convertUtilsBean.deregister(Date.class);
    DateConverter dateConverter = new DateConverter(new Date());
    convertUtilsBean.register(dateConverter, Date.class);
}
