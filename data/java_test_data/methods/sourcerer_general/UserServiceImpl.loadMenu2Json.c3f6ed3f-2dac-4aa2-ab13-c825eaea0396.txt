@Override
public String loadMenu2Json(Integer authId, User user) throws Exception {
    String json = "";
    // 获取登录用户的所有menu
    Set<Authority> auSet = new HashSet<Authority>();
    if (user.getUserType() == USER_TYPE_ADMIN) {
        Authority au = new Authority();
        if (authId != null && authId == 0) {
            au.setParentId(0);
        } else if (authId == null) {
            au.setParentId(-1);
        } else {
            au.setParentId(authId);
        }
        List<Authority> rList = iAuthorityDao.selectByCondition(au, 0, Integer.MAX_VALUE);
        for (Authority authority : rList) {
            auSet.add(authority);
        }
    } else {
        UserRole ur = new UserRole();
        ur.setUserId(user.getUserId());
        List<UserRole> rList = iUserRoleDao.selectByCondition(ur, 0, Integer.MAX_VALUE);
        for (UserRole userRole : rList) {
            Role role = iRoleService.selectByPrimaryKey(userRole.getRoleId());
            if (role != null) {
                RoleAuthority ra = new RoleAuthority();
                ra.setRoleId(role.getRoleId());
                List<RoleAuthority> raList = iRoleAuthorityDao.selectByCondition(ra, 0, Integer.MAX_VALUE);
                for (RoleAuthority roleAuthority : raList) {
                    Authority auth = iAuthorityDao.selectByPrimaryKey(roleAuthority.getAuthId());
                    if (authId != null && authId == 0) {
                        if (auth.getParentId().intValue() == 0) {
                            auSet.add(auth);
                        }
                    } else if (authId != null && authId > 0) {
                        if (auth.getParentId().intValue() == authId.intValue()) {
                            auSet.add(auth);
                        }
                    }
                }
            }
        }
    }
    // 生成json
    List<Map<String, String>> list = new ArrayList<Map<String, String>>();
    for (Authority auth : auSet) {
        Map<String, String> map = new HashMap<String, String>();
        map.put("text", auth.getAuthName());
        map.put("id", auth.getAuthId().toString());
        if (authId == null || authId.intValue() == 0) {
            map.put("cls", "folder");
        } else {
            map.put("cls", "file");
            map.put("leaf", "true");
            map.put("canHref", "true");
        }
        map.put("href_url", auth.getAuthUrl());
        list.add(map);
    }
    ObjectMapper mapper = new ObjectMapper();
    json = mapper.writeValueAsString(list);
    System.out.println(json);
    return json;
}
