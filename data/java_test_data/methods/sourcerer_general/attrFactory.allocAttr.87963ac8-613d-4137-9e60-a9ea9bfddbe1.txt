// skip_data
public static attrInfo allocAttr(DataInputStream dStream, constPool constPoolSec) {
    int name_index;
    int length;
    constBase obj;
    constUtf8 name;
    attrInfo retObj = null;
    name_index = dataIn.readU2(dStream);
    length = dataIn.readU4(dStream);
    obj = constPoolSec.constPoolElem(name_index);
    if (obj != null && obj instanceof constUtf8) {
        String nameStr;
        name = (constUtf8) obj;
        nameStr = name.getString();
        if (nameStr.compareTo("SourceFile") == 0) {
            retObj = new srcFileAttr(nameStr, length, dStream, constPoolSec);
        } else if (nameStr.compareTo("ConstantValue") == 0) {
            retObj = new constValueAttr(nameStr, length, dStream, constPoolSec);
        } else if (nameStr.compareTo("Code") == 0) {
            retObj = new codeAttr(nameStr, length, dStream, constPoolSec);
        } else if (nameStr.compareTo("Exceptions") == 0) {
            retObj = new exceptAttr(nameStr, length, dStream, constPoolSec);
        } else if (nameStr.compareTo("InnerClasses") == 0) {
        } else if (nameStr.compareTo("LineNumberTable") == 0) {
            retObj = new lineNumTabAttr(nameStr, length, dStream);
        } else if (nameStr.compareTo("LocalVariableTable") == 0) {
            retObj = new localVarTabAttr(nameStr, length, dStream, constPoolSec);
        } else if (nameStr.compareTo("Synthetic") == 0) {
            retObj = new synthAttr(nameStr, length);
        } else if (nameStr.compareTo("Deprecated") == 0) {
            retObj = new deprecAttr(nameStr, length);
        } else {
            // unrecognized attributes are skipped.
            skip_data(length, dStream);
        }
    } else {
        errorMessage.errorPrint("allocAttr: bad name index");
    }
    return retObj;
}
