private void initKernels() {
    kernels = new KernelJAI[kernelLabels.length * 2];
    float[] normal_h_data = { 1.0F };
    float[] normal_v_data = { 0.0F };
    float[] sobel_h_data = { 1.0F, 0.0F, -1.0F, 2.0F, 0.0F, -2.0F, 1.0F, 0.0F, -1.0F };
    float[] sobel_v_data = { -1.0F, -2.0F, -1.0F, 0.0F, 0.0F, 0.0F, 1.0F, 2.0F, 1.0F };
    float[] roberts_h_data = { 0.0F, 0.0F, -1.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F };
    float[] roberts_v_data = { -1.0F, 0.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F, 0.0F, 0.0F };
    float[] prewitt_h_data = { 1.0F, 0.0F, -1.0F, 1.0F, 0.0F, -1.0F, 1.0F, 0.0F, -1.0F };
    float[] prewitt_v_data = { -1.0F, -1.0F, -1.0F, 0.0F, 0.0F, 0.0F, 1.0F, 1.0F, 1.0F };
    float[] freichen_h_data = { 1.0F, 0.0F, -1.0F, 1.414F, 0.0F, -1.414F, 1.0F, 0.0F, -1.0F };
    float[] freichen_v_data = { -1.0F, -1.414F, -1.0F, 0.0F, 0.0F, 0.0F, 1.0F, 1.414F, 1.0F };
    kernels[0] = new KernelJAI(1, 1, normal_h_data);
    kernels[1] = new KernelJAI(1, 1, normal_v_data);
    kernels[2] = new KernelJAI(3, 3, sobel_h_data);
    kernels[3] = new KernelJAI(3, 3, sobel_v_data);
    kernels[4] = new KernelJAI(3, 3, roberts_h_data);
    kernels[5] = new KernelJAI(3, 3, roberts_v_data);
    kernels[6] = new KernelJAI(3, 3, prewitt_h_data);
    kernels[7] = new KernelJAI(3, 3, prewitt_v_data);
    kernels[8] = new KernelJAI(3, 3, freichen_h_data);
    kernels[9] = new KernelJAI(3, 3, freichen_v_data);
    kern_h = kernels[0];
    kern_v = kernels[1];
}
