public String executeCommandOverview(ActionContext context) {
    setMaximized(context);
    if (getUser(context).getId() < 0) {
        return "PermissionError";
    }
    int MINIMIZED_ITEMS_PER_PAGE = 5;
    // For using the overview in a project tab
    String projectId = context.getRequest().getParameter("pid");
    String projectLink = "";
    if (projectId != null) {
        projectLink = "&pid=" + projectId;
    }
    String link = ctx(context) + "/ProjectManagement.do?command=Overview" + projectLink;
    Connection db = null;
    String sectionId = null;
    if (context.getRequest().getParameter("pagedListSectionId") != null) {
        sectionId = context.getRequest().getParameter("pagedListSectionId");
    }
    // Prepare the drop-down
    PagedListInfo overviewListInfo = this.getPagedListInfo(context, "overviewListInfo");
    overviewListInfo.setLink(context, link);
    if (overviewListInfo.getListView() == null) {
        overviewListInfo.setListView("48hours");
    }
    Calendar cal = Calendar.getInstance();
    if (overviewListInfo.getListView().equals("today")) {
        cal.set(Calendar.HOUR_OF_DAY, 0);
        cal.set(Calendar.MINUTE, 0);
        cal.set(Calendar.SECOND, 0);
    } else if (overviewListInfo.getListView().equals("24hours")) {
        cal.add(Calendar.DAY_OF_MONTH, -1);
    } else if (overviewListInfo.getListView().equals("48hours")) {
        cal.add(Calendar.DAY_OF_MONTH, -2);
    } else if (overviewListInfo.getListView().equals("14days")) {
        // 14 Days
        cal.add(Calendar.DAY_OF_MONTH, -14);
    } else if (overviewListInfo.getListView().equals("30days")) {
        // 30 Days
        cal.add(Calendar.DAY_OF_MONTH, -30);
    } else {
        // 7 Days -- default
        cal.add(Calendar.DAY_OF_MONTH, -7);
    }
    Timestamp alertRangeStart = new Timestamp(cal.getTimeInMillis());
    // Prepare lists
    BlogPostList newsList = new BlogPostList();
    TopicList topicList = new TopicList();
    FileItemList fileItemList = new FileItemList();
    WikiList wikiList = new WikiList();
    // reset the paged lists
    if (context.getRequest().getParameter("resetList") != null && context.getRequest().getParameter("resetList").equals("true")) {
        context.getSession().removeAttribute("overviewNewsListInfo");
        context.getSession().removeAttribute("overviewIssueListInfo");
        context.getSession().removeAttribute("overviewFileItemListListInfo");
        context.getSession().removeAttribute("overviewWikiListInfo");
    }
    // PagedLists needed
    newsList.setPagedListInfo(processPagedListInfo(context, sectionId, "overviewNewsListInfo", "n.start_date", "desc", link, MINIMIZED_ITEMS_PER_PAGE));
    topicList.setPagedListInfo(processPagedListInfo(context, sectionId, "overviewIssueListInfo", "i.last_reply_date", "desc", link, MINIMIZED_ITEMS_PER_PAGE));
    fileItemList.setPagedListInfo(processPagedListInfo(context, sectionId, "overviewFileItemListListInfo", "f.modified", "desc", link, MINIMIZED_ITEMS_PER_PAGE));
    wikiList.setPagedListInfo(processPagedListInfo(context, sectionId, "overviewWikiListInfo", "w.modified", "desc", link, MINIMIZED_ITEMS_PER_PAGE));
    // Query the records
    newsList.setForUser(getUserId(context));
    newsList.setAlertRangeStart(alertRangeStart);
    newsList.setCurrentNews(Constants.TRUE);
    topicList.setForUser(getUserId(context));
    topicList.setAlertRangeStart(alertRangeStart);
    fileItemList.setLinkModuleId(Constants.PROJECTS_FILES);
    fileItemList.setForProjectUser(getUserId(context));
    fileItemList.setAlertRangeStart(alertRangeStart);
    wikiList.setForUser(getUserId(context));
    wikiList.setAlertRangeStart(alertRangeStart);
    try {
        db = getConnection(context);
        // Try to load the project and place in request
        if (projectId != null) {
            Project thisProject = retrieveAuthorizedProject(Integer.parseInt(projectId), context);
            hasProjectAccess(context, thisProject.getId(), "project-details-view");
            context.getRequest().setAttribute("project", thisProject);
        }
        // Build the needed info
        if (!topicList.getPagedListInfo().getExpandedSelection() && !wikiList.getPagedListInfo().getExpandedSelection() && !fileItemList.getPagedListInfo().getExpandedSelection()) {
            newsList.buildList(db);
        }
        if (!newsList.getPagedListInfo().getExpandedSelection() && !wikiList.getPagedListInfo().getExpandedSelection() && !fileItemList.getPagedListInfo().getExpandedSelection()) {
            topicList.buildList(db);
        }
        if (!topicList.getPagedListInfo().getExpandedSelection() && !wikiList.getPagedListInfo().getExpandedSelection() && !newsList.getPagedListInfo().getExpandedSelection()) {
            fileItemList.buildList(db);
        }
        if (!newsList.getPagedListInfo().getExpandedSelection() && !topicList.getPagedListInfo().getExpandedSelection() && !fileItemList.getPagedListInfo().getExpandedSelection()) {
            wikiList.buildList(db);
        }
    } catch (Exception errorMessage) {
        context.getRequest().setAttribute("Error", errorMessage);
        return ("SystemError");
    } finally {
        this.freeConnection(context, db);
    }
    context.getRequest().setAttribute("newsList", newsList);
    context.getRequest().setAttribute("issueList", topicList);
    context.getRequest().setAttribute("fileItemList", fileItemList);
    context.getRequest().setAttribute("wikiList", wikiList);
    ClientType clientType = (ClientType) context.getSession().getAttribute("clientType");
    if (clientType != null && clientType.getMobile()) {
        return "MobileOverviewOK";
    }
    return ("OverviewOK");
}
