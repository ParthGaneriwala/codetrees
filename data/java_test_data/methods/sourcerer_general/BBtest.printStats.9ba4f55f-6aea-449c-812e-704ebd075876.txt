public void printStats(String recipient) {
    String toSend = "Number of tourneys done: " + tourneycounter + "\\n";
    for (int j = 0; j < maxbots; j++) {
        for (int k = 0; k < maxplayerintourney; k++) {
            for (int i = 0; i < events[j].countplayers; i++) {
                notyetpaidout = notyetpaidout + events[j].Backings2[k][i];
            }
        }
    }
    toSend = toSend.concat("Total turnover in this session: " + ((int) (totalpool - notyetpaidout)) + "\\n");
    if ((totalpool - notyetpaidout) > 0) {
        percentage = 100 * paidouttotal / (totalpool - notyetpaidout);
    } else {
        percentage = 100;
    }
    notyetpaidout = 0;
    toSend = toSend.concat("Total paid out: " + ((int) (paidouttotal)) + " (" + percentage + " % of turnover)\\n");
    if (recordhigh > 0) {
        toSend = toSend.concat("Highest win payoff: " + recordhigh + " chips to " + recordholder + " for betting " + recordplayer + "\\n");
    }
    if (secondrecordhigh > 0) {
        toSend = toSend.concat("Highest second payoff: " + secondrecordhigh + " chips to " + secondrecordholder + " for betting " + secondrecordplayer + "\\n");
    }
    if (placerecordhigh > 0) {
        toSend = toSend.concat("Highest place payoff: " + placerecordhigh + " chips to " + placerecordholder + " for betting " + placerecordplayer + "\\n");
    }
    if (antirecordhigh > 0) {
        toSend = toSend.concat("Highest antibet payoff: " + ((int) (antirecordhigh)) + " chips to " + antirecordholder + " for opposing " + antirecordplayer + "\\n");
    }
    if (antisecondrecordhigh > 0) {
        toSend = toSend.concat("Highest antisecondbet payoff: " + ((int) (antisecondrecordhigh)) + " chips to " + antisecondrecordholder + " for opposing " + antisecondrecordplayer + "\\n");
    }
    if (antiplacerecordhigh > 0) {
        toSend = toSend.concat("Highest antiplace payoff: " + ((int) (antiplacerecordhigh)) + " chips to " + antiplacerecordholder + " for opposing " + antiplacerecordplayer + "\\n");
    }
    if (doublerecordhigh > 0) {
        toSend = toSend.concat("Highest double payoff: " + doublerecordhigh + " chips to " + doublerecordholder + " for predicting " + doublerecordplayer1 + " - " + doublerecordplayer2 + "\\n");
    }
    if (tricastrecordhigh > 0) {
        toSend = toSend.concat("Highest tricast payoff: " + tricastrecordhigh + " chips to " + tricastrecordholder + " for predicting " + tricastrecordplayer1 + " - " + tricastrecordplayer2 + " - " + tricastrecordplayer3 + "\\n");
    }
    if (highestodds > 0) {
        toSend = toSend.concat("Highest winning odds: " + ((int) (highestodds)) + " for 10 (" + highestoddsplayer + " in " + highestoddsbot + ")\\n");
    }
    if (highestsecondodds > 0) {
        toSend = toSend.concat("Highest second odds: " + ((int) (highestsecondodds)) + " for 10 (" + highestsecondoddsplayer + " in " + highestsecondoddsbot + ")\\n");
    }
    if (highestplaceodds > 0) {
        toSend = toSend.concat("Highest place odds: " + ((int) (highestplaceodds)) + " for 10 (" + highestplaceoddsplayer + " in " + highestplaceoddsbot + ")\\n");
    }
    if (highestdoubleodds > 0) {
        toSend = toSend.concat("Highest double odds: " + ((int) (highestdoubleodds)) + " for 10 (" + highestdoubleoddsplayer1 + " - " + highestdoubleoddsplayer2 + ")\\n");
    }
    if (highesttricastodds > 0) {
        toSend = toSend.concat("Highest tricast odds: " + highesttricastodds + " for 10 (" + highesttricastoddsplayer1 + " - " + highesttricastoddsplayer2 + " - " + highesttricastoddsplayer3 + ")\\n");
    }
    if (lowestodds < 65002) {
        if (lowestodds < 11) {
            toSend = toSend.concat("Lowest winning odds: " + lowestodds + " for 10 (" + lowestoddsplayer + " in " + lowestoddsbot + ")\\n");
        } else {
            toSend = toSend.concat("Lowest winning odds: " + ((int) (lowestodds)) + " for 10 (" + lowestoddsplayer + " in " + lowestoddsbot + ")\\n");
        }
    }
    if (highestpool > 0) {
        toSend = toSend.concat("Highest turnover in tourney: " + ((int) (highestpool)) + " chips.\\n");
    }
    if (highestrollover > 0) {
        toSend = toSend.concat("Highest tricast pool: " + highestrollover + " chips.\\n");
    }
    if (smallestpool < 999999) {
        toSend = toSend.concat("Lowest turnover in tourney: " + ((int) (smallestpool)) + " chips.\\n");
    }
    if (slotWinners.equalsIgnoreCase("")) {
    // leave out
    } else {
        toSend = toSend.concat("Slotjackpot winners this session: " + slotWinners + "\\n");
    }
    if (strikeWinners.equalsIgnoreCase("")) {
    // leave out
    } else {
        toSend = toSend.concat("Strikes this session: " + strikeWinners + "\\n");
    }
    toSend = toSend.concat("Number of active people: " + activecount + "\\n");
    toSend = toSend.concat("Number of new registrations this session: " + newregcount + "\\n");
    sendQTell(toSend, recipient);
}
