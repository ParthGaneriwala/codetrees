DataFileDefrag defrag() {
    writeLock.lock();
    try {
        cache.saveAll();
        DataFileDefrag dfd = new DataFileDefrag(database, this, dataFileName);
        dfd.process();
        close(true);
        cache.clear();
        if (!database.logger.propIncrementBackup) {
            backupFile();
        }
        database.schemaManager.setTempIndexRoots(dfd.getIndexRoots());
        database.logger.log.writeScript(false);
        database.getProperties().setDBModified(HsqlDatabaseProperties.FILES_NEW);
        database.logger.log.closeLog();
        database.logger.log.deleteLog();
        database.logger.log.renameNewScript();
        renameDataFile();
        renameBackupFile();
        database.getProperties().setDBModified(HsqlDatabaseProperties.FILES_NOT_MODIFIED);
        open(false);
        dfd.updateTransactionRowIDs();
        database.schemaManager.setIndexRoots(dfd.getIndexRoots());
        if (database.logger.log.dbLogWriter != null) {
            database.logger.log.openLog();
        }
        database.getProperties().setDBModified(HsqlDatabaseProperties.FILES_MODIFIED);
        return dfd;
    } finally {
        writeLock.unlock();
    }
}
