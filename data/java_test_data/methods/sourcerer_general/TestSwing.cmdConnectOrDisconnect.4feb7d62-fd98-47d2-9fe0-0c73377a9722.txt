private void cmdConnectOrDisconnect() {
    if (blnIsConnected) {
        if (bridge != null)
            try {
                displayLog("Disconnecting ...");
                System.out.println("Disconnecting");
                this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
                bridge.disconnect(ticket);
                buttonConnect.setText("Connect");
                buttonSearch.setEnabled(false);
                buttonTest.setEnabled(false);
                displayLog("Disconnected!");
                updateBrowseTree(rootNode, null);
                blnIsConnected = false;
            } catch (Exception e) {
                e.printStackTrace();
                displayLog("Exception: " + e.getMessage());
            } finally {
                this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                mainPanel.repaint();
            }
    } else {
        try {
            displayLog("Connecting ...");
            System.out.println("Connecting");
            this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
            // bridge = CMSRepositoryFactory.getRepositoryObject();
            CMSRepositoryFactory repFactory = new CMSRepositoryFactory();
            // Choose the target repository
            repFactory.setRepositoryObject(CMSRepositoryFactory.DOCUMENTUM);
            bridge = repFactory.getRepositoryObject();
            // char[] input = txtPassword.getPassword();
            ticket = bridge.connectToRepository(txtLogin.getText(), txtPassword.getText(), txtRepository.getText());
            // String strCreatedId = bridge.createNode(ticket, "documentType", "objectName", "linkPath", "contentSourcePath", "FR");
            displayLog("ticket = " + ticket);
            buttonConnect.setText("Disconnect");
            buttonSearch.setEnabled(true);
            buttonTest.setEnabled(true);
            displayLog("Connected to " + txtRepository.getText());
            updateBrowseTree(rootNode, "/");
            blnIsConnected = true;
        } catch (Exception e) {
            e.printStackTrace();
            displayLog("Exception: " + e.getMessage());
        } finally {
            this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            mainPanel.repaint();
        }
    }
    emptyTable(logicalTable);
    emptyTable(concreteTable);
}
