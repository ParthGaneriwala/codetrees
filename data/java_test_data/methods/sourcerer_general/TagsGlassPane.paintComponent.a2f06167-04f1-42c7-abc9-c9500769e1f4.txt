@Override
protected void paintComponent(Graphics g) {
    super.paintComponent(g);
    Graphics2D g2d = (Graphics2D) g;
    g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    Dimension frameSize = frame.getSize();
    Dimension size = getSize();
    Font font = g.getFont();
    int arc = 0;
    int h = size.height;
    int w = size.width;
    font = font.deriveFont(Font.PLAIN, 25);
    int posX = 200;
    int posY = 200;
    // mach text
    g.setFont(font);
    FontMetrics metrics = g.getFontMetrics();
    Rectangle2D stringBounds = metrics.getStringBounds(typedText.toString(), g);
    int preferredWidth = (int) stringBounds.getWidth() + metrics.getHeight();
    int preferredHeight = (int) stringBounds.getHeight() + metrics.getHeight();
    int stringPosX = displayPosX - (int) stringBounds.getWidth() / 2;
    int stringPosY = displayPosY + ((metrics.getAscent() - metrics.getDescent()) / 2);
    // glossy hintergrund
    // Color bgColor = new Color(230,230,255,100);
    // g.setColor(bgColor);
    // g.fillRect(0, 0, this.getWidth(), this.getHeight());
    // dunkles hitnergrundrechteck zeichnen
    Color vColor = new Color(0, 0, 0, 150);
    g.setColor(vColor);
    g.fillRoundRect(stringPosX - 10, stringPosY - 30, preferredWidth - 15, preferredHeight - 15, 20, 20);
    // tagtext zeichnen
    g.setColor(new Color(200, 200, 200, 100));
    g.drawString(typedText.toString(), stringPosX + 2, stringPosY + 2);
    g.setColor(Color.WHITE);
    g.drawString(typedText.toString(), stringPosX, stringPosY);
}
