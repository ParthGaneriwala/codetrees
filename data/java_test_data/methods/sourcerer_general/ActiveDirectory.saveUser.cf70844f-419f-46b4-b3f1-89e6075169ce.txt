@SuppressWarnings("unchecked")
protected void saveUser(String id) throws NamingException {
    Attributes attrs = getUserById(id);
    // Let's replace the attributes that exist
    ArrayList<Object> al = new ArrayList<Object>();
    String value, name;
    Object obj;
    ModificationItem mi = null;
    ArrayList hm;
    byte[] photo;
    BasicAttribute ba;
    for (Iterator i = modItems.keySet().iterator(); i.hasNext(); ) {
        name = (String) i.next();
        obj = modItems.get(name);
        if (obj instanceof String) {
            value = (String) obj;
            // If the value is null and the attribute exists remove it...
            if ((value == null || value.equals("")) && (attrs.get(name) != null))
                mi = new ModificationItem(LdapContext.REMOVE_ATTRIBUTE, new BasicAttribute(name));
            else
                // Otherwise replace or create it.
                mi = new ModificationItem(LdapContext.REPLACE_ATTRIBUTE, new BasicAttribute(name, value));
        } else if (obj instanceof ArrayList) {
            hm = (ArrayList) obj;
            ba = new BasicAttribute(name);
            for (Iterator j = hm.iterator(); j.hasNext(); ) {
                value = (String) j.next();
                ba.add(value);
            }
            if (ba.size() > 0)
                mi = new ModificationItem(LdapContext.REPLACE_ATTRIBUTE, ba);
            else
                mi = new ModificationItem(LdapContext.REMOVE_ATTRIBUTE, ba);
        } else if (obj instanceof byte[]) {
            photo = (byte[]) obj;
            if ((photo == null || photo.length == 0) && (attrs.get(name) != null))
                mi = new ModificationItem(LdapContext.REMOVE_ATTRIBUTE, new BasicAttribute(name));
            else
                // Otherwise replace or create it.
                mi = new ModificationItem(LdapContext.REPLACE_ATTRIBUTE, new BasicAttribute(name, photo));
        } else if (obj == null && attrs.get(name) != null) {
            mi = new ModificationItem(LdapContext.REMOVE_ATTRIBUTE, new BasicAttribute(name));
        }
        if (mi != null)
            al.add((Object) mi);
        mi = null;
    }
    ModificationItem[] mods = new ModificationItem[al.size()];
    mods = (ModificationItem[]) al.toArray(new ModificationItem[0]);
    modItems.clear();
    al.clear();
    ctx.modifyAttributes((String) attrs.get("distinguishedName").get(), mods);
}
