void printRequiredArgument(String outputFile) {
    PrintStream fout = IOUtil.createPrintFileStream(outputFile);
    System.out.println(n_count);
    int nVerb, nVerbTotal, nPrep, nPrepTotal, nVerbArg;
    String key;
    String[] tmp;
    double pmi, pv, p, v;
    double thresh = 0;
    HashMap<String, ArrayList<JObjectDoubleTuple<String>>> map = new HashMap<String, ArrayList<JObjectDoubleTuple<String>>>();
    for (ObjectCursor<String> cur : m_verbs.keys()) {
        if (cur.value.equals(TOTAL))
            continue;
        map.put(cur.value, new ArrayList<JObjectDoubleTuple<String>>());
    }
    ArrayList<JObjectDoubleTuple<String>> list;
    for (ObjectCursor<String> cur : m_verbArgNs.keys()) {
        key = cur.value;
        tmp = key.split("_");
        list = map.get(tmp[0]);
        nVerbArg = m_verbArgNs.get(key);
        nVerb = m_verbs.get(tmp[0]);
        pmi = (double) nVerbArg * 100 / nVerb;
        if (pmi > thresh)
            list.add(new JObjectDoubleTuple<String>(tmp[1], pmi));
    }
    nVerbTotal = m_verbs.get(TOTAL);
    nPrepTotal = m_preps.get(TOTAL);
    for (ObjectCursor<String> cur : m_verbArgMs.keys()) {
        key = cur.value;
        tmp = key.split("_");
        list = map.get(tmp[0]);
        nVerbArg = m_verbArgMs.get(key);
        nVerb = m_verbs.get(tmp[0]);
        nPrep = m_preps.get(tmp[1]);
        pv = (double) nVerbArg / nVerb;
        p = (double) nPrep / nPrepTotal;
        v = (double) nVerb / nVerbTotal;
        pmi = getPMI(pv, p);
        pmi /= -(Math.log(pv) + Math.log(v));
        if (pmi > 0)
            list.add(new JObjectDoubleTuple<String>(tmp[1], pmi));
    }
    for (String verb : map.keySet()) {
        list = map.get(verb);
        Collections.sort(list);
        StringBuilder build = new StringBuilder();
        build.append(verb);
        build.append("\t");
        build.append(m_verbs.get(verb));
        for (JObjectDoubleTuple<String> tup : list) {
            build.append("\t");
            build.append(tup.toString());
        }
        fout.println(build.toString());
    }
    fout.flush();
    fout.close();
}
