public void onClick(View v) {
    Log.d(TAG, ".ConfigureActivity$onClick View: " + v.getId());
    switch(v.getId()) {
        case R.id.configure_save:
            {
                Log.d(TAG, ".ConfigureActivity$onClick case: R.id.configure_save");
                // Picked save, so write values to the database
                ContentValues values = new ContentValues();
                values.put(BaseColumns._ID, mAppWidgetId);
                String selectedCartoon = ((String) m_spnCartoon.getSelectedItem());
                Resources res = this.getResources();
                String[] cartoonUrls = res.getStringArray(R.array.cartoon_urls);
                if (selectedCartoon.equalsIgnoreCase("Dilbert")) {
                    // Dilbert
                    values.put(CartoonsColumns.URL, cartoonUrls[0]);
                } else {
                    // Calvin and Hobbes
                    values.put(CartoonsColumns.URL, cartoonUrls[1]);
                }
                Log.d(TAG, ".ConfigureActivity$onClick AppWidgetsColumns put (url=" + values.getAsString(CartoonsColumns.URL) + ")");
                // TODO: perform METAR lookup as needed, either here or during first update
                // TODO: update instead of insert if editing an existing widget
                ContentResolver resolver = getContentResolver();
                Uri newRowUri = null;
                newRowUri = resolver.insert(Cartoons.CONTENT_URI, values);
                if (newRowUri != null) {
                    Log.d(TAG, ".ConfigureActivity$onClick ContentResolver inserted values into row: " + newRowUri.toString());
                } else {
                    Log.d(TAG, ".ConfigureActivity$onClick ContentResolver failed inserting values into a new row");
                }
                // Trigger pushing a widget update to surface
                UpdateService.requestUpdate(new int[] { mAppWidgetId });
                Log.d(TAG, ".ConfigureActivity$onClick Called UpdateService.requestUpdate with mAppWidgetId: " + mAppWidgetId);
                startService(new Intent(this, UpdateService.class));
                Log.d(TAG, ".ConfigureActivity$onClick Called startService");
                setConfigureResult(Activity.RESULT_OK);
                Log.d(TAG, ".ConfigureActivity$onClick Called setConfigureResult");
                finish();
                Log.d(TAG, ".ConfigureActivity$onClick Called finish()");
                break;
            }
        default:
            {
                Log.d(TAG, ".ConfigureActivity$onClick case unhandled");
            }
    }
}
