public void run() {
    try {
        while (true) {
            Thread.sleep(Config.liveScanTime);
            Config.messageProcessor.pause();
            Iterator<Integer> it2 = Config.nodeTable.keySet().iterator();
            HashMap<Integer, Node> oldNodeTable = new HashMap<Integer, Node>();
            long nowTime;
            while (it2.hasNext()) {
                int sessionId = (it2.next());
                Node node = (Node) Config.nodeMange.getNode(sessionId);
                nowTime = System.currentTimeMillis();
                // Config.println("����� "+sessionId);
                if (nowTime - node.activeTime >= (Config.serverLiveTimeOut)) {
                    oldNodeTable.put(sessionId, node);
                } else {
                    if (node.nodeType == Config.nodeType_PublicNet) {
                        if (nowTime - node.longInTime > Config.upgradeTime) {
                            if (!node.isSNode) {
                                System.out.println("FFF " + (nowTime - node.longInTime) + " " + Config.upgradeTime);
                                node.upgradeToSNode();
                            }
                        }
                    }
                }
            }
            Iterator<Integer> it5 = oldNodeTable.keySet().iterator();
            while (it5.hasNext()) {
                int sessionId = (it5.next());
                // Config.println("ɾ�����ڽ�� "+sessionId);
                Node node = oldNodeTable.get(sessionId);
                node.exit(true);
            }
            Iterator<Integer> it6 = Config.sNodeTable.keySet().iterator();
            Config.sNodeList = new ArrayList<Integer>();
            while (it6.hasNext()) {
                int sessionId = (it6.next());
                Config.sNodeList.add(sessionId);
            }
            // Config.println("Group���� ");
            Iterator<Mdb> it = Config.groupTable.keySet().iterator();
            if (Config.sNodeTable.size() != 0) {
                while (it.hasNext()) {
                    Mdb mdb = it.next();
                    Group group = Config.groupMange.getGroup(mdb);
                    int castMemberSum = Config.caluCastMemberSum(group);
                    int newAdd = castMemberSum - group.castMemberTable.size();
                    if (newAdd == 0) {
                    } else if (newAdd > 0) {
                        if (Config.sNodeTable.size() != 0) {
                            Random random = new Random();
                            int index = random.nextInt(Config.sNodeList.size());
                            for (int i = 0; i < Config.sNodeList.size() & i < newAdd; i++) {
                                if (index >= Config.sNodeList.size()) {
                                    index = 0;
                                }
                                int sessionId = Config.sNodeList.get(index);
                                Node node = Config.sNodeTable.get(sessionId);
                                if (node != null & !node.isJoinCastGroup(mdb)) {
                                    Config.println("@@@ " + group.castMemberTable.size());
                                    node.joinCastGroup(mdb, group);
                                    // server.Config.println(" NEWADDDDDDDDDD444444444  "+group.castMemberTable.size());
                                    Config.println("### " + group.castMemberTable.size());
                                }
                                if (castMemberSum - group.castMemberTable.size() == 0) {
                                    break;
                                }
                                index++;
                            /*
									if(!it3.hasNext()){
										it3=Config.sNodeTable.keySet().iterator();
									}
									int sessionId=(Integer)it3.next();
									if(!group.containCastMember(sessionId)){
										Node node=(Node)Config.sNodeTable.get(sessionId);
										node.joinCastGroup(mdb, group);
									}
									if(castMemberNum-group.castMemberTable.size()==0){
										Config.println("ffffffffffffdddddddddddddd   "+castMemberNum);
										break;
									}
									*/
                            }
                        // Config.println("AAAAAAAAAAAAAAAAAAAAAAAAA      "+Config.sNodeList.size()+" QQQQQ "+castMemberNum+" EEEEE "+group.castMemberTable.size());
                        }
                    } else if (newAdd < 0) {
                        while (group.castMemberTable.size() - castMemberSum != 0) {
                            Iterator<Integer> it4 = group.castMemberTable.keySet().iterator();
                            int sessionId = it4.next();
                            Node node = group.castMemberTable.get(sessionId);
                            node.quitCastGroup(mdb, group);
                        }
                    }
                }
            }
            Config.messageProcessor.play();
        }
    } catch (InterruptedException e) {
        e.printStackTrace();
    }
}
