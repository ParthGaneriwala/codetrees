public void encodeTGA(AdaptiveRasterImage ji, LEDataOutputStream out) throws JimiException {
    // and color map is defaultRGB.
    try {
        int w = ji.getWidth();
        int h = ji.getHeight();
        // id length
        out.write(0);
        // no color map
        out.write(0);
        // Uncompressed true color
        out.write(2);
        // five byte null color specification
        out.write(0);
        out.write(0);
        out.write(0);
        out.write(0);
        out.write(0);
        // x origin
        out.writeShort(0);
        // y origin
        out.writeShort(0);
        // width
        out.writeShort(w);
        // height
        out.writeShort(h);
        // 24 bit bitmap
        out.write(24);
        // boring image descriptor
        out.write(0);
        int i;
        int j;
        int[] buf = new int[w];
        byte[] outBuf = new byte[w * 3];
        // only writing out 24 bit data
        ji.setRGBDefault(true);
        for (i = 0; i < h; ++i) {
            // convert to normal TGA order
            int y = h - i - 1;
            ji.getChannel(y, buf, 0);
            int idx = 3 * w;
            for (j = w; --j >= 0; ) {
                outBuf[--idx] = (byte) ((buf[j] & 0x00FF0000) >> 16);
                outBuf[--idx] = (byte) ((buf[j] & 0x0000FF00) >> 8);
                outBuf[--idx] = (byte) ((buf[j] & 0x000000FF) >> 0);
            }
            out.write(outBuf);
        }
    } catch (IOException e) {
        throw new JimiException("TGA24Encoder encodeTGA() IOException encountered");
    }
}
