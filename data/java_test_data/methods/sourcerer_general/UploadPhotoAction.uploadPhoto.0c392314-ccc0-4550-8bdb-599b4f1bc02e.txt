public ActionForward uploadPhoto(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse resqonse) {
    if (!isLoggedIn(request)) {
        return mapping.findForward(ForwardConstants.INDEX);
    }
    SessionContainer session = getSessionContainer(request);
    Customer customer = session.getCustomer();
    String albumId = request.getParameter("albumId");
    String albumName;
    System.out.println(albumId);
    Album album = null;
    if (albumId == null || "default".equals(albumId)) {
        albumName = "default";
    } else {
        album = albumService.findAlbumById(Integer.parseInt(albumId));
        albumName = album.getName();
    }
    String path = this.getServlet().getServletContext().getRealPath("/").concat("userphoto").concat(File.separator).concat(customer.getEmail()).concat(File.separator).concat(albumName).concat(File.separator);
    FileUtil.makeDirectory(path);
    System.out.println("上传的相片路径：" + path);
    Hashtable files = form.getMultipartRequestHandler().getFileElements();
    List<AlbumPhoto> albumPhotos = new ArrayList<AlbumPhoto>();
    for (Map.Entry<String, FormFile> entry : (Set<Map.Entry<String, FormFile>>) (files.entrySet())) {
        FormFile file = entry.getValue();
        if (file.getFileName() != null && !"".equals(file.getFileName())) {
            String fileName = file.getFileName();
            String suffix = fileName.substring(fileName.lastIndexOf("."));
            // 照片的命名是当前时间加上文件的扩展名
            long date = new Date().getTime();
            String name = date + suffix;
            Photo photo = new Photo();
            String relativePathFileName = Context.getUploadPath().concat(customer.getEmail()).concat("/").concat(albumName).concat("/").concat(name);
            photo.setName(name);
            photo.setBigImgPath(relativePathFileName);
            AlbumPhoto albumPhoto = new AlbumPhoto();
            albumPhoto.setPhoto(photo);
            albumPhoto.setAlbum(album);
            albumPhotos.add(albumPhoto);
            photo.setAlbumPhotos(albumPhotos);
            System.out.println(relativePathFileName);
            uploadFile(file, path.concat(name));
            // 缩小图片
            PicCompression pn = new PicCompression();
            String smallImg = pn.proce1(path + name, 300, 1);
            String relativePathFileName2 = Context.getUploadPath().concat(customer.getEmail()).concat("/").concat(albumName).concat("/").concat(smallImg);
            photo.setPath(relativePathFileName2);
            System.out.println(relativePathFileName2);
            photoService.savePhoto(photo);
        }
    }
    try {
        resqonse.sendRedirect(request.getContextPath() + "/pages/photo/poto_cg.jsp?albumId=" + albumId);
    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    return null;
}
