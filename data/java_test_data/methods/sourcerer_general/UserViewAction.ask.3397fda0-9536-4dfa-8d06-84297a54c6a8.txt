public ActionForward ask(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
    // System.out.println(" user ask SearchAction...");
    String uid = request.getParameter("uid");
    String typeid = null;
    String status = "0_1";
    String keyword = null;
    String orderby = null;
    String pageNo = request.getParameter("pno");
    // String parameter = "keyword=" + ( (keyword==null)?" ":keyword );
    Map map = new TreeMap();
    map.put("uid", uid);
    map.put("keyword", keyword);
    map.put("typeid", typeid);
    map.put("status", status);
    map.put("orderby", orderby);
    try {
        UcMembers user = userInfoManager.getUcMember(Integer.parseInt(uid));
        Short accountType = DictionaryManager.getInstance().getVal("ACCOUNT_TYPE", "2").getDvalue();
        request.setAttribute("BANLANCE", scoreManager.getBalance(user.getUid().toString(), accountType.toString()));
        int iPageNo = 1;
        try {
            if (pageNo != null) {
                iPageNo = Integer.parseInt(pageNo);
            }
        } catch (Exception e) {
        }
        List list = null;
        Pager pager = new Pager();
        pager.setCntOfPage(10);
        pager.setCurPage(iPageNo);
        list = askSearchManager.getAskByPage(pager, iPageNo, user.getUid().toString(), typeid, status, keyword, orderby);
        request.setAttribute("PARA", map);
        request.setAttribute("PAGER", pager);
        request.setAttribute("ASK_LIST", list);
        request.setAttribute("USER", user);
        return mapping.findForward("ask");
    } catch (Exception e) {
        e.printStackTrace();
        request.setAttribute("FAIL_MESSAGE", "ϵͳ�������Ժ����ԡ�");
        return mapping.findForward("fail");
    }
}
