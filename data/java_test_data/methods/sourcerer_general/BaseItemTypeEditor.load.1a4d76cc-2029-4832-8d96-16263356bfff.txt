private void load() {
    if (dbBaseItemType.getDbTurnableType() != null) {
        turnable = true;
        imageCount = dbBaseItemType.getDbTurnableType().getImageCount();
    } else {
        turnable = false;
    }
    if (dbBaseItemType.getDbMovableType() != null) {
        movable = true;
        speed = dbBaseItemType.getDbMovableType().getSpeed();
    } else {
        movable = false;
    }
    if (dbBaseItemType.getDbWeaponType() != null) {
        weapon = true;
        damage = dbBaseItemType.getDbWeaponType().getDamage();
        weaponRange = dbBaseItemType.getDbWeaponType().getRange();
        weaponReloadTime = dbBaseItemType.getDbWeaponType().getReloadTime();
        weaponMuzzlePointX_0 = dbBaseItemType.getDbWeaponType().getMuzzlePointX_0();
        weaponMuzzlePointY_0 = dbBaseItemType.getDbWeaponType().getMuzzlePointY_0();
        weaponMuzzlePointX_90 = dbBaseItemType.getDbWeaponType().getMuzzlePointX_90();
        weaponMuzzlePointY_90 = dbBaseItemType.getDbWeaponType().getMuzzlePointY_90();
        weaponMuzzleStretch = dbBaseItemType.getDbWeaponType().isStretchMuzzleFlashToTarget();
    } else {
        weapon = false;
    }
    if (dbBaseItemType.getDbLauncherType() != null) {
        launcher = true;
        launcherProgress = dbBaseItemType.getDbLauncherType().getProgress();
        if (dbBaseItemType.getDbLauncherType().getDbProjectileItemType() != null) {
            launcherDbProjectileItemType = dbBaseItemType.getDbLauncherType().getDbProjectileItemType().getId();
        }
    } else {
        launcher = false;
    }
    if (dbBaseItemType.getDbFactoryType() != null) {
        factory = true;
        factoryProgress = dbBaseItemType.getDbFactoryType().getProgress();
        factoryAbleToBuild = ItemsUtil.itemTypesToString(dbBaseItemType.getDbFactoryType().getAbleToBuild());
    } else {
        factory = false;
    }
    if (dbBaseItemType.getDbHarvesterType() != null) {
        harvester = true;
        harvesterProgress = dbBaseItemType.getDbHarvesterType().getProgress();
        harvesterRange = dbBaseItemType.getDbHarvesterType().getRange();
    } else {
        harvester = false;
    }
    if (dbBaseItemType.getDbBuilderType() != null) {
        builder = true;
        builderProgress = dbBaseItemType.getDbBuilderType().getProgress();
        builderRange = dbBaseItemType.getDbBuilderType().getRange();
        builderAbleToBuild = ItemsUtil.itemTypesToString(dbBaseItemType.getDbBuilderType().getAbleToBuild());
    } else {
        builder = false;
    }
    if (dbBaseItemType.getDbConsumerType() != null) {
        consumer = true;
        consumerWattage = dbBaseItemType.getDbConsumerType().getWattage();
    } else {
        consumer = false;
    }
    if (dbBaseItemType.getDbGeneratorType() != null) {
        generator = true;
        generatorWattage = dbBaseItemType.getDbGeneratorType().getWattage();
    } else {
        generator = false;
    }
    if (dbBaseItemType.getDbItemContainerType() != null) {
        itemContainer = true;
        itemContainerAbleToContain = ItemsUtil.itemTypesToString(dbBaseItemType.getDbItemContainerType().getAbleToContain());
        itemContainerMaxCount = dbBaseItemType.getDbItemContainerType().getMaxCount();
        itemContainerRange = dbBaseItemType.getDbItemContainerType().getRange();
    } else {
        itemContainer = false;
    }
    if (dbBaseItemType.getDbHouseType() != null) {
        house = true;
        space = dbBaseItemType.getDbHouseType().getSpace();
    } else {
        house = false;
    }
    if (dbBaseItemType.getDbSpecialType() != null) {
        special = true;
        specialString = dbBaseItemType.getDbSpecialType().getString();
    } else {
        special = false;
    }
}
