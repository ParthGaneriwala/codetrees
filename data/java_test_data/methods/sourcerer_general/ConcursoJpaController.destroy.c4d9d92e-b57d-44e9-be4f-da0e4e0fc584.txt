public void destroy(long id) throws NonexistentEntityException {
    EntityManager em = null;
    try {
        em = getEntityManager();
        em.getTransaction().begin();
        Concurso concurso;
        try {
            concurso = em.getReference(Concurso.class, id);
            concurso.getId();
        } catch (EntityNotFoundException enfe) {
            throw new NonexistentEntityException("The concurso with id " + id + " no longer exists.", enfe);
        }
        Set<Recurso> recursos = concurso.getRecursos();
        for (Recurso recursosRecurso : recursos) {
            recursosRecurso.setConcurso(null);
            recursosRecurso = em.merge(recursosRecurso);
        }
        Set<Inscricao> inscricoes = concurso.getInscricoes();
        for (Inscricao inscricoesInscricao : inscricoes) {
            inscricoesInscricao.setConcurso(null);
            inscricoesInscricao = em.merge(inscricoesInscricao);
        }
        Set<FatoRelevante> fatosRelevantes = concurso.getFatosRelevantes();
        for (FatoRelevante fatosRelevantesFatoRelevante : fatosRelevantes) {
            fatosRelevantesFatoRelevante.setConcurso(null);
            fatosRelevantesFatoRelevante = em.merge(fatosRelevantesFatoRelevante);
        }
        Set<Arquivo> arquivos = concurso.getArquivos();
        for (Arquivo arquivosArquivo : arquivos) {
            arquivosArquivo.setConcurso(null);
            arquivosArquivo = em.merge(arquivosArquivo);
        }
        Set<Prova> provas = concurso.getProvas();
        for (Prova provasProva : provas) {
            provasProva.setConcurso(null);
            provasProva = em.merge(provasProva);
        }
        em.remove(concurso);
        em.getTransaction().commit();
    } finally {
        if (em != null) {
            em.close();
        }
    }
}
