public static Integer[] getRange(String range) {
    char c;
    StringBuilder builder = new StringBuilder();
    List<Integer> list = new ArrayList<Integer>();
    boolean rangeAtNextSplit = false;
    for (int i = 0; i < range.length(); i++) {
        c = range.charAt(i);
        if (Character.isDigit(c)) {
            builder.append(c);
        } else if (c == '-') {
            if (builder.length() > 0) {
                list.add(Integer.parseInt(builder.toString()));
                builder.delete(0, builder.length());
            }
            rangeAtNextSplit = true;
        } else if ((Character.isWhitespace(c)) || (c == ',') || (c == ';')) {
            if (builder.length() > 0) {
                list.add(Integer.parseInt(builder.toString()));
                builder.delete(0, builder.length());
                if (rangeAtNextSplit) {
                    int first = list.get(list.size() - 2);
                    int last = list.get(list.size() - 1);
                    for (int r = first + 1; r < last; r++) {
                        list.add(list.size() - 1, r);
                    }
                    rangeAtNextSplit = false;
                }
            }
        }
    }
    if (builder.length() > 0) {
        list.add(Integer.parseInt(builder.toString()));
        builder.delete(0, builder.length());
        if (rangeAtNextSplit) {
            int first = list.get(list.size() - 2);
            int last = list.get(list.size() - 1);
            for (int r = first + 1; r < last; r++) {
                list.add(list.size() - 1, r);
            }
            rangeAtNextSplit = false;
        }
    }
    return list.toArray(new Integer[list.size()]);
}
