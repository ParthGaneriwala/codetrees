public void testWithNs() {
    final Def printfDef = ClojureFactory.eINSTANCE.createDef();
    printfDef.setName("printf");
    ns.getExprs().add(printfDef);
    final Fn fn = ClojureFactory.eINSTANCE.createFn();
    final Body body = ClojureFactory.eINSTANCE.createBody();
    fn.setBody(body);
    printfDef.setInit(fn);
    fn.setName("local");
    final Lambda lambda = ClojureFactory.eINSTANCE.createLambda();
    body.getLambdas().add(lambda);
    final SimpleBinding simpleBinding = ClojureFactory.eINSTANCE.createSimpleBinding();
    lambda.getBindings().add(simpleBinding);
    final NameBinding nameBinding = ClojureFactory.eINSTANCE.createNameBinding();
    simpleBinding.getBindings().add(nameBinding);
    nameBinding.setName("local");
    thenHasQName("test.printf", printfDef);
    thenHasNoQName(ns);
    thenHasNoQName(fn);
    thenHasNoQName(body);
    thenHasNoQName(lambda);
    thenHasNoQName(simpleBinding);
    thenHasNoQName(nameBinding);
}
