public void endElement(String uri, String localName, String qName) throws SAXException {
    if (currentLevel == LEVEL.DYNAMIC_MAP_TAB) {
        switch(DOCUMENT_TAGS.fromText(qName)) {
            case MIN_LON:
                minLongitude = Double.parseDouble(parsedValue.toString());
                break;
            case MAX_LON:
                maxLongitude = Double.parseDouble(parsedValue.toString());
                break;
            case MIN_LAT:
                minLatitude = Double.parseDouble(parsedValue.toString());
                break;
            case MAX_LAT:
                maxLatitude = Double.parseDouble(parsedValue.toString());
                break;
            case LATITUDE:
                tempLatitude = Double.parseDouble(parsedValue.toString());
                break;
            case LONGITUDE:
                tempLongitude = Double.parseDouble(parsedValue.toString());
                break;
            case RESOLUTION:
                tempResolution = Double.parseDouble(parsedValue.toString());
                break;
            case INIT_LOCATION:
                initialLocation = new GeoPoint(tempLongitude, tempLatitude);
                initialResolution = tempResolution;
                break;
            case LAYER_NAME:
                tempLayerName = parsedValue.toString();
                break;
            case LAYER_DISPLAY:
                tempLayerDisplayName = parsedValue.toString();
                break;
            case DATASOURCE:
                tempLayerSource = parsedValue.toString();
                break;
            case BASELAYER:
                baseLayers.add(new Layer(tempLayerDisplayName, tempLayerName, new DataSource(tempLayerSource, null, null)));
                break;
            case OVERLAY:
                overlayLayers.add(new Layer(tempLayerDisplayName, tempLayerName, new DataSource(tempLayerSource, null, null)));
                break;
            case LANDMARK:
                tempLandmark = new Landmark();
                tempLandmark.imageFile = tempMediaFile;
                tempLandmark.point = new GeoPoint(tempLongitude, tempLatitude);
                tempLandmark.resolution = tempResolution;
                landmarks.add(tempLandmark);
                break;
            case DISPLAYNAME:
                tempMediaFile.mMediaDisplayName = parsedValue.toString();
                break;
            case BLURB:
                tempMediaFile.mMediaBlurbText = parsedValue.toString();
                break;
            case GEOCACHELOC:
                tempGeoPoint = new GPSPoint(new GeoPoint(tempLongitude, tempLatitude));
                tempGeoPoint.setIsHidden(true);
                tempGeoPoint.setType(PointType.GEOCACHE);
                tempGeoPoint.setMediaFile(tempMediaFile);
                gpsHandler.addGeocacheLocation(tempGeoPoint);
                break;
        }
    }
    super.endElement(uri, localName, qName);
}
