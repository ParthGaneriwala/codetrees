public boolean initBoard() {
    Move[] setups = new Move[MAXCOLOR];
    switch(players.size()) {
        case // 2 players
        2:
            COLS = 10;
            ROWS = 10;
            board = new SPiece[COLS][ROWS];
            setups[RED] = new Move(0, 0, 10, 4);
            setups[BLUE] = new Move(0, 6, 10, 10);
            initLake(2, 4, 3, 5);
            initLake(6, 4, 7, 5);
            break;
        case // 4 player version - NOTE: not yet supported by GUI
        4:
            COLS = 18;
            ROWS = 18;
            board = new SPiece[COLS][ROWS];
            setups[RED] = new Move(4, 0, 14, 4);
            setups[BLUE] = new Move(4, 14, 14, 18);
            setups[GREEN] = new Move(0, 4, 4, 14);
            setups[GRAY] = new Move(14, 4, 18, 14);
            initLake(0, 0, 3, 3);
            initLake(0, 14, 3, 17);
            initLake(14, 0, 17, 3);
            initLake(14, 14, 17, 17);
            initLake(6, 6, 7, 7);
            initLake(10, 6, 11, 7);
            initLake(6, 10, 7, 11);
            initLake(10, 10, 11, 11);
            break;
        default:
            // for now
            G.Serv.say(creator, "2/4 players only.");
            return false;
    }
    for (int y = 0; y < ROWS; y++) for (int x = 0; x < COLS; x++) if (board[x][y] == null)
        board[x][y] = SPiece.emptySqr(new Location(x, y));
    STARTED = true;
    for (int p = 0; p < players.size(); p++) {
        SPlayer sp = players.elementAt(p);
        // if (((StratBot)G).GUI.contains(sp.name)) setupGUI(sp,setups[sp.color]); else
        setup(sp, setups[sp.color]);
    }
    return true;
}
