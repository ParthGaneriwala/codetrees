public void run() {
    int count = 0;
    try {
        File file = new File(path);
        Scanner scanner = new Scanner(file);
        int rowCount = model.getRowCount();
        while (scanner.hasNextLine()) {
            String line = scanner.nextLine();
            count++;
            if (count == 1 && hasHeader)
                continue;
            StringTokenizer tok = new StringTokenizer(line, ",");
            String lons = getNextField(tok);
            String lats = getNextField(tok);
            String xs = getNextField(tok);
            String ys = getNextField(tok);
            RefPoint refpt = new RefPoint(rowCount + "", lons, lats);
            int x = Integer.parseInt(xs);
            int y = Integer.parseInt(ys);
            refpt.setX(x);
            refpt.setY(y);
            double lon = Double.parseDouble(lons);
            double lat = Double.parseDouble(lats);
            refpt.setRealLon(lon);
            refpt.setRealLat(lat);
            model.addWay(refpt);
            rowCount++;
        }
        MapineerFrame.getFrame().getMapLabel().update();
        MapineerFrame.getFrame().setDirty(true);
        JOptionPane.showMessageDialog(MapineerFrame.getFrame(), "Loaded " + count + " lines successfully");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(MapineerFrame.getFrame(), "Error reading " + path + " at line " + count + ".", MapineerFrame.TITLE, JOptionPane.ERROR_MESSAGE);
    }
    return;
}
