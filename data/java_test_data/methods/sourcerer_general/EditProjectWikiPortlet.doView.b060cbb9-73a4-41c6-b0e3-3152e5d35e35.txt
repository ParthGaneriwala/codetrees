public void doView(RenderRequest request, RenderResponse response) throws PortletException, IOException {
    try {
        String defaultView = VIEW_PAGE;
        String viewType = request.getParameter("viewType");
        if (viewType == null) {
            viewType = (String) request.getPortletSession().getAttribute("viewType");
        }
        ApplicationPrefs prefs = PortalUtils.getApplicationPrefs(request);
        // Set global preferences
        request.setAttribute(TITLE, request.getPreferences().getValue(PREF_TITLE, null));
        Project project = PortalUtils.getProject(request);
        request.setAttribute(PROJECT, project);
        Connection db = null;
        db = PortalUtils.useConnection(request);
        if (!ProjectUtils.hasAccess(PortalUtils.getProject(request).getId(), PortalUtils.getUser(request), "project-profile-admin")) {
            request.setAttribute(HAS_PROJECT_ACCESS, "false");
        } else if (CLOSE.equals(viewType)) {
            request.getPortletSession().removeAttribute(VIEW_TYPE);
            defaultView = CLOSE_PAGE;
        } else if (SAVE_FAILURE.equals(viewType)) {
            Wiki wiki = (Wiki) request.getPortletSession().getAttribute(ORIGINAL_WIKI);
            request.setAttribute(WIKI, wiki);
            request.getPortletSession().removeAttribute(VIEW_TYPE);
            request.getPortletSession().removeAttribute(ORIGINAL_WIKI);
        } else {
            // Build display preferences for editing
            String categoryName = getProjectCategoryName(db, project);
            if (StringUtils.hasText(categoryName)) {
                HashMap<String, String> preferenceMap = getDisplayPreferences(request, categoryName);
                request.setAttribute(PREFERENCE_MAP, preferenceMap);
            }
            // Load the wiki page
            Wiki wiki = WikiList.queryBySubject(db, "", project.getId());
            request.setAttribute(WIKI, wiki);
            // Load wiki image library dimensions (cache in future)
            HashMap<String, ImageInfo> imageList = WikiUtils.buildImageInfo(db, project.getId());
            request.setAttribute(IMAGE_LIST, imageList);
            // @note the context must be used instead of the full URL
            WikiToHTMLContext wikiContext = new WikiToHTMLContext(wiki, imageList, PortalUtils.getUser(request).getId(), true, request.getContextPath());
            wikiContext.setEditFormId(1);
            // Convert wiki to HTML
            String wikiHtml = WikiToHTMLUtils.getHTML(wikiContext, db);
            request.setAttribute(WIKI_HTML, wikiHtml);
        }
        PortletContext context = getPortletContext();
        PortletRequestDispatcher requestDispatcher = context.getRequestDispatcher(defaultView);
        requestDispatcher.include(request, response);
    } catch (Exception e) {
        e.printStackTrace();
        throw new PortletException(e);
    }
}
