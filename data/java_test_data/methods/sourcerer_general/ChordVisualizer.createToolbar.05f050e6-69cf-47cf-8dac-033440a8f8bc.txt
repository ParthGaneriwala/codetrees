private JToolBar createToolbar() {
    JToolBar toolBar = new JToolBar("Manage overlay", JToolBar.HORIZONTAL);
    toolBar.setFloatable(false);
    toolBar.setMargin(new Insets(5, 5, 5, 5));
    ImageIcon iconAddChordNode = ChordVisualizer.createImageIcon("world_add.png", "Join Node");
    ImageIcon iconDeleteChordNode = ChordVisualizer.createImageIcon("world_delete.png", "Leave Node");
    ImageIcon iconAddKey = ChordVisualizer.createImageIcon("key_add.png", "Add key");
    ImageIcon iconDeleteKey = ChordVisualizer.createImageIcon("key_delete.png", "Delete key");
    ImageIcon iconRefresh = ChordVisualizer.createImageIcon("arrow_refresh.png", "Refresh");
    ImageIcon iconShowEntries = ChordVisualizer.createImageIcon("table.png", "ShowEntries");
    final JButton btnAddChordNode = new JButton("Add Node", iconAddChordNode);
    btnAddChordNode.setAlignmentX(JFrame.CENTER_ALIGNMENT);
    btnAddChordNode.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 10));
    btnAddChordNode.setMargin(new Insets(0, 0, 0, 0));
    btnAddChordNode.setToolTipText("Add Node");
    btnAddChordNode.setMnemonic(KeyEvent.VK_J);
    btnAddChordNode.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            btnAddChordNode.setEnabled(false);
            if (ChordVisualizer.this.addChordNodeDialog == null) {
                ChordVisualizer.this.addChordNodeDialog = new AddChordNodeDialog(ChordVisualizer.this, btnAddChordNode);
                ((AddChordNodeDialog) ChordVisualizer.this.addChordNodeDialog).createAndShowDialog();
            } else {
                ChordVisualizer.this.addChordNodeDialog.setVisible(true);
            }
        }
    });
    final JButton btnRemoveChordNode = new JButton("Remove Node", iconDeleteChordNode);
    btnRemoveChordNode.setAlignmentX(JFrame.CENTER_ALIGNMENT);
    btnRemoveChordNode.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
    btnRemoveChordNode.setMargin(new Insets(0, 0, 0, 0));
    btnRemoveChordNode.setToolTipText("Remove Node");
    btnRemoveChordNode.setMnemonic(KeyEvent.VK_L);
    btnRemoveChordNode.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            btnRemoveChordNode.setEnabled(false);
            if (ChordVisualizer.this.removeChordNodeDialog == null) {
                ChordVisualizer.this.removeChordNodeDialog = new RemoveChordNodeDialog(ChordVisualizer.this, btnRemoveChordNode);
                ((RemoveChordNodeDialog) ChordVisualizer.this.removeChordNodeDialog).createAndShowDialog();
            } else {
                ChordVisualizer.this.removeChordNodeDialog.setVisible(true);
            }
        }
    });
    final JButton btnAddEntry = new JButton("Add Entry", iconAddKey);
    btnAddEntry.setAlignmentX(JFrame.CENTER_ALIGNMENT);
    btnAddEntry.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 10));
    btnAddEntry.setMargin(new Insets(0, 0, 0, 0));
    btnAddEntry.setToolTipText("Add Entry");
    btnAddEntry.setMnemonic(KeyEvent.VK_P);
    btnAddEntry.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            btnAddEntry.setEnabled(false);
            if (ChordVisualizer.this.addEntryDialog == null) {
                ChordVisualizer.this.addEntryDialog = new AddEntryDialog(ChordVisualizer.this, btnAddEntry);
                ((AddEntryDialog) ChordVisualizer.this.addEntryDialog).createAndShowDialog();
            } else {
                ChordVisualizer.this.addEntryDialog.setVisible(true);
            }
        }
    });
    final JButton btnRemoveEntry = new JButton("Remove Entry", iconDeleteKey);
    btnRemoveEntry.setAlignmentX(JFrame.CENTER_ALIGNMENT);
    btnRemoveEntry.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
    btnRemoveEntry.setToolTipText("Remove Entry");
    btnRemoveEntry.setMnemonic(KeyEvent.VK_D);
    btnRemoveEntry.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            btnRemoveEntry.setEnabled(false);
            if (ChordVisualizer.this.removeEntryDialog == null) {
                ChordVisualizer.this.removeEntryDialog = new RemoveEntryDialog(ChordVisualizer.this, btnRemoveEntry);
                ((RemoveEntryDialog) ChordVisualizer.this.removeEntryDialog).createAndShowDialog();
            } else {
                ChordVisualizer.this.removeEntryDialog.setVisible(true);
            }
        }
    });
    final JButton btnShowEntries = new JButton("Show Entries", iconShowEntries);
    btnShowEntries.setAlignmentX(JFrame.CENTER_ALIGNMENT);
    btnShowEntries.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 10));
    btnShowEntries.setToolTipText("Show Entries");
    btnShowEntries.setMnemonic(KeyEvent.VK_E);
    btnShowEntries.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            btnShowEntries.setEnabled(false);
            if (ChordVisualizer.this.showEntriesDialog == null) {
                ChordVisualizer.this.showEntriesDialog = new ShowEntriesDialog(ChordVisualizer.this, btnShowEntries, ChordVisualizer.this.tracker);
                ((ShowEntriesDialog) ChordVisualizer.this.showEntriesDialog).createAndShowDialog();
            } else {
                ChordVisualizer.this.showEntriesDialog.setVisible(true);
            }
        }
    });
    final JButton btnRefresh = new JButton("Refresh", iconRefresh);
    btnRefresh.setAlignmentX(JFrame.CENTER_ALIGNMENT);
    btnRefresh.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
    btnRefresh.setToolTipText("Refresh");
    btnRefresh.setMnemonic(KeyEvent.VK_R);
    btnRefresh.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            btnRefresh.setEnabled(false);
            ChordVisualizer.this.updateGraph();
            Timer timer = new Timer("refresher");
            timer.schedule(new TimerTask() {

                @Override
                public void run() {
                    btnRefresh.setEnabled(true);
                    this.cancel();
                }
            }, ChordDisplayer.REFRESH_TIME, 1);
        }
    });
    toolBar.add(btnAddChordNode);
    toolBar.add(btnRemoveChordNode);
    toolBar.addSeparator(new Dimension(20, 0));
    toolBar.add(btnAddEntry);
    toolBar.add(btnRemoveEntry);
    toolBar.addSeparator(new Dimension(20, 0));
    toolBar.add(btnShowEntries);
    toolBar.add(btnRefresh);
    return toolBar;
}
