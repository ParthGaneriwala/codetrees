private AllStatsForNamespaces aggregateByRuleSet(final Tree sourceDataTree, final AllStatsForNamespaces allStatsForNamespaces) {
    Config config = Config.getInstance();
    // Map<String, Map<String, SummaryStats>> ruleSetMap = new HashMap<String, Map<String, SummaryStats>>();
    AllStatsForNamespaces aggregatedStatsForNamespaces = new AllStatsForNamespaces();
    // loop over all metrics
    Collection<String> metricKeySet = allStatsForNamespaces.allVariables();
    for (Iterator<String> iter = metricKeySet.iterator(); iter.hasNext(); ) {
        String metricClazz = iter.next();
        StatsForNamespaces statisticsForNamespaces = allStatsForNamespaces.getStatsForNamespacesFor(metricClazz);
        Set<String> allNamespaces = statisticsForNamespaces.allNamespaces();
        Iterator<String> contextMapKeySetIterator = allNamespaces.iterator();
        while (contextMapKeySetIterator.hasNext()) {
            String namespace = (String) contextMapKeySetIterator.next();
            Iterator<Node> nodeIter = sourceDataTree.nodes();
            while (nodeIter.hasNext()) {
                Node node = nodeIter.next();
                if (node.getString(SourceData.FULL_NAME).equals(namespace)) {
                    // SummaryStatistics statistics = (SummaryStatistics) metricMap.get(contextName);
                    // int metricValue = (int) statistics.getMean();
                    // node.setInt(viewPoint.getColumnName(), metricValue);
                    ContainedSummaryStats containeredSummaryStatistics = (ContainedSummaryStats) statisticsForNamespaces.getSummaryStatsFor(namespace);
                    int totalTorque = (int) containeredSummaryStatistics.getTotalTorque();
                    // check whether we already have a ruleSetMap for this metric
                    StatsForNamespaces forNamespaces = aggregatedStatsForNamespaces.getStatsForNamespacesFor(RULESET_PREFIX + containeredSummaryStatistics.getRuleSet());
                    if (forNamespaces == null) {
                        forNamespaces = new StatsForNamespaces(RULESET_PREFIX + containeredSummaryStatistics.getRuleSet(), true, false);
                        aggregatedStatsForNamespaces.add(forNamespaces);
                    }
                    SummaryStats ruleSetSummaryStats = (SummaryStats) aggregatedStatsForNamespaces.getStatsForNamespacesFor(namespace);
                    if (ruleSetSummaryStats == null) {
                        ruleSetSummaryStats = new AggregatedSummaryStats(containeredSummaryStatistics.getRuleSet(), containeredSummaryStatistics.getRuleSet());
                        forNamespaces.add(namespace, ruleSetSummaryStats);
                    }
                    int weight = config.getWeightForMetric(containeredSummaryStatistics.getName());
                    ruleSetSummaryStats.addValue(totalTorque * weight);
                }
            }
        }
    // addViewPoint(metricClazz, contextMap, sourceDataTree);
    }
    return aggregatedStatsForNamespaces;
}
