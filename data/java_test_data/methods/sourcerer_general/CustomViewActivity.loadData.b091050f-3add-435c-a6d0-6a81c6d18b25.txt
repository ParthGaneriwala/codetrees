private void loadData() {
    /**
     * the screen heigth and width
     */
    mScreenHeigth = this.getWindowManager().getDefaultDisplay().getHeight();
    mScreenWidth = this.getWindowManager().getDefaultDisplay().getWidth();
    /**
     * text size color and background
     */
    // myCustomView.setTextColor(Color.BLACK);
    myCustomView.setTextSize(Constant.FONT18);
    mHelper = new CRDBHelper(this);
    // ���ñ���
    mReaderBytes = new ReadFileRandom(_mFilePath);
    byte[] encodings = new byte[400];
    mReaderBytes.readBytes(encodings);
    mReaderBytes.close();
    /**
     * �����Ǽ���ļ��ı���
     */
    BytesEncodingDetect be = new BytesEncodingDetect();
    this.encoding = BytesEncodingDetect.nicename[be.detectEncoding(encodings)];
    /**
     * ����ļ��ı������
     */
    /**
     * load the attribute for font
     */
    Paint tp = myCustomView.getPaint();
    CR.fontHeight = myCustomView.getLineHeight();
    /**
     * Ascii char width
     */
    CR.upperAsciiWidth = (int) tp.measureText(Constant.UPPERASCII);
    CR.lowerAsciiWidth = (int) tp.measureText(Constant.LOWERASCII);
    /**
     * Chinese char width
     */
    CR.ChineseFontWidth = (int) tp.measureText(Constant.CHINESE.toCharArray(), 0, 1);
    Log.d("onCreateDialog CR.FontHeight:", "" + CR.fontHeight);
    Log.d("onCreateDialog CR.AsciiWidth:", "" + CR.upperAsciiWidth);
    Log.d("onCreateDialog CR.FontWidth:", "" + CR.ChineseFontWidth);
    customCopyOfTextReader = new CustomCopyOfTextReader(myCustomView, this, _mFilePath, mScreenWidth, mScreenHeigth, encoding);
    this.setTitle(_mFilePath + "-" + getString(R.string.app_name));
    // myCustomView.setOnKeyListener(mUpOrDown);
    // myCustomView.setOnTouchListener(mTouchListener);
    showToast();
}
