public void printStudentData(String studentKey) {
    try {
        Student studentData = getStudent(studentKey);
        Document PdfDocument = new Document(PageSize.LETTER.rotate());
        PdfPTable StudentDataTable = new PdfPTable(COLUMS_NUMBER_STUDENT_DATA);
        ArrayList<Exam> examDataList = examService.getStudentLastExams(studentKey);
        PdfWriter.getInstance(PdfDocument, new FileOutputStream(FILE_NAME_STUDENT + studentData.getStudentKey() + ".pdf"));
        PdfDocument.open();
        PdfDocument.add(new Paragraph("Matricula:" + studentData.getStudentKey()));
        PdfDocument.add(new Paragraph("Nombre:" + studentData.getName() + studentData.getFirstLastName()));
        PdfDocument.add(new Paragraph(" "));
        Phrase phrase = new Phrase("Materia");
        defaultColumnsStudent(StudentDataTable);
        PdfPCell infoCell = new PdfPCell(phrase);
        for (int index = 0; index < examDataList.size(); index++) {
            StudentDataTable.addCell("" + examDataList.get(index).getSubjectKey());
            StudentDataTable.addCell("" + examDataList.get(index).getID_Professor());
            StudentDataTable.addCell("" + examDataList.get(index).getExamGrade());
        }
        StudentDataTable.addCell(infoCell);
        PdfDocument.add(StudentDataTable);
        PdfDocument.close();
    } catch (ServiceExp ex) {
        Logger.getLogger(StudentService.class.getName()).log(Level.SEVERE, null, ex);
    } catch (DocumentException ex) {
        Logger.getLogger(StudentService.class.getName()).log(Level.SEVERE, null, ex);
    } catch (FileNotFoundException ex) {
        Logger.getLogger(StudentService.class.getName()).log(Level.SEVERE, null, ex);
    }
}
