public String go() throws HibernateException {
    if (check == null || check.length == 0) {
        this.message = "请选择催收人员.";
        return ERROR;
    }
    int size = check.length;
    String queryName = "from ToprCreditcard as creditcard where state=0";
    if (bankid != 0)
        queryName += " and bankid=" + bankid;
    if (consigntype != null && !"".equals(consigntype))
        queryName += " and consigntype=" + consigntype;
    if (consignflag != null && !"".equals(consignflag))
        queryName += " and consignflag=" + consignflag;
    queryName += " order by to_number(curcnfee) desc";
    List<ToprCreditcard> list = getSession().createQuery(queryName).list();
    Connection con = null;
    Statement stmt = null;
    try {
        con = Globals.getInstance().getCon();
        stmt = con.createStatement();
        int index = 0;
        for (ToprCreditcard card : list) {
            if (index >= size)
                index = 0;
            long userid = check[index];
            long creditcardid = card.getCreditcardid();
            // 插入用户任务表
            stmt.addBatch("insert into topr_credittask (credittaskid,creditcardid,userid,createtime,taskstat) values (ToprCredittaskid.nextval," + creditcardid + "," + userid + ",sysdate,0)");
            // 更新记录状态
            stmt.addBatch("update topr_creditcard set state=1 where creditcardid=" + creditcardid + "");
            // 将对应的客户信息记录同步到该用户通讯录
            stmt.addBatch("update tusr_address set userid=" + userid + " where oprid=" + creditcardid + " and oprflag=1");
            index++;
        }
        stmt.executeBatch();
    } catch (SQLException e) {
        this.message = "批量分配异常【" + e.getMessage() + "】";
        return ERROR;
    } finally {
        try {
            if (stmt != null)
                stmt.close();
            if (con != null)
                con.close();
        } catch (SQLException e) {
        }
    }
    message = "批量分配成功";
    this.nextpage = "credittaskList.action";
    return SUCCESS;
}
