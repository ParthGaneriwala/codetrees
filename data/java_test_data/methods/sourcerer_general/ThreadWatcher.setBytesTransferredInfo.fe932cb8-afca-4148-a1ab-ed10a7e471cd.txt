protected void setBytesTransferredInfo(long bytesTransferred, long bytesTotal) {
    long now = System.currentTimeMillis();
    this.bytesTotal = bytesTotal;
    this.bytesTransferred = bytesTransferred;
    // Store historic information for transfer rate calculations.
    historicTimeQueue.add(new Long(now));
    historicBytesTransferredQueue.add(new Long(bytesTransferred));
    // Calculate the current transfer rate, and the time remaining for the data transfer,
    // once the minimum number of bytes transferred udpates have occurred.
    this.bytesUpdateCount++;
    if (this.bytesUpdateCount > MIN_TRANSFER_UPDATES_FOR_RATE) {
        // Get the number of bytes transfered as of MIN_UPDATES_FOR_CURRENT_RATE updates ago.
        Long historicByteTransferCount = (Long) historicBytesTransferredQueue.firstElement();
        historicBytesTransferredQueue.remove(0);
        // Get the time as of MIN_UPDATES_FOR_CURRENT_RATE updates ago.
        Long historicTime = (Long) historicTimeQueue.firstElement();
        historicTimeQueue.remove(0);
        long intervalsElapsedTimeMS = now - historicTime.longValue();
        long intervalsBytesTransferred = bytesTransferred - historicByteTransferCount.longValue();
        long bytesRemaining = bytesTotal - bytesTransferred;
        // Calculate the current bytes/s transfer rate.
        if (intervalsElapsedTimeMS > 0) {
            this.bytesPerSecond = 1000 * intervalsBytesTransferred / intervalsElapsedTimeMS;
        }
        // Calculate the averate bytes/s transfer rate.
        long overallElapsedTimeMS = System.currentTimeMillis() - watcherStartTimeMS;
        long overallBytesPerSecond = -1;
        if (overallElapsedTimeMS > 0) {
            overallBytesPerSecond = 1000 * bytesTransferred / overallElapsedTimeMS;
        }
        // Calculate the time until the transfer is complete, using the *overall* bytes/second rate.
        if (bytesRemaining > 0 && overallBytesPerSecond > 0) {
            double remainingSecsDouble = (double) bytesRemaining / overallBytesPerSecond;
            this.timeRemainingSeconds = Math.round(remainingSecsDouble);
        } else {
            this.timeRemainingSeconds = 0;
        }
    }
}
