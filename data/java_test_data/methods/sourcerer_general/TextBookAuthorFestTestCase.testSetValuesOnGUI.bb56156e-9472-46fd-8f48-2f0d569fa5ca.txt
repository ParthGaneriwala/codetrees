@Test
public void testSetValuesOnGUI() {
    ConfigBookAuthorTextPanel panel = new ConfigBookAuthorTextPanel();
    CobeanTestUtil.setComponentNamesFromPropertyNames(panel);
    ShowcaseTestFrame frame = new ShowcaseTestFrame(panel);
    FrameFixture frameFix = new FrameFixture(frame);
    try {
        frameFix.show();
        ConfigBookAuthorTextShowcase sc = new ConfigBookAuthorTextShowcase();
        sc.setService(ExamplesUtil.createTestService());
        JTextComponentFixture failureTextBox = frameFix.textBox("failureTextField");
        JTextComponentFixture authorNameTextBox = frameFix.textBox("authorNameTextField");
        JTextComponentFixture authorBirthdayTextBox = frameFix.textBox("authorBirthdayTextField");
        sc.init(panel);
        pause(200);
        authorNameTextBox.deleteText();
        authorNameTextBox.setText("HALLO");
        authorBirthdayTextBox.focus();
        pause(100);
        Assert.assertEquals("HALLO", sc.getBook().getAuthor().getName());
        authorBirthdayTextBox.deleteText();
        authorBirthdayTextBox.setText("oaoao");
        authorNameTextBox.focus();
        pause(100);
        Assert.assertEquals(CobeanTestUtil.createDate("yyyyMMdd", "19320817"), sc.getBook().getAuthor().getBirthday());
        failureTextBox.requireText("'oaoao' is not a valid date. Use 'yyyy-MM-dd'");
        authorBirthdayTextBox.deleteText();
        authorBirthdayTextBox.setText("2001-01-01");
        authorNameTextBox.focus();
        pause(100);
        Assert.assertEquals(CobeanTestUtil.createDate("yyyyMMdd", "20010101"), sc.getBook().getAuthor().getBirthday());
    } finally {
        frameFix.cleanUp();
    }
}
