private void setupForumStructure() throws UserAlreadyExistsException, PasswordNotMatchException {
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    // Setup CMS content
    CrudRootServiceHelper<DbPage> pageCrud = cmsService.getPageCrudRootServiceHelper();
    DbPage dbPage1 = pageCrud.createDbChild();
    dbPage1.setPredefinedType(CmsUtil.CmsPredefinedPage.HOME);
    dbPage1.setName("Forum");
    DbContentList dbContentList = new DbContentList();
    dbContentList.init(userService);
    dbPage1.setContentAndAccessWrites(dbContentList);
    dbContentList.setWriteRestricted(DbContent.Access.USER);
    dbContentList.setCreateRestricted(DbContent.Access.USER);
    dbContentList.setDeleteRestricted(DbContent.Access.USER);
    dbContentList.setSpringBeanName("forumService");
    dbContentList.setContentProviderGetter("subForumCrud");
    DbContentContainer subForums = (DbContentContainer) dbContentList.getColumnsCrud().createDbChild(DbContentContainer.class);
    DbExpressionProperty name = (DbExpressionProperty) subForums.getContentCrud().createDbChild(DbExpressionProperty.class);
    name.setExpression("name");
    DbExpressionProperty content = (DbExpressionProperty) subForums.getContentCrud().createDbChild(DbExpressionProperty.class);
    content.setExpression("content");
    DbContentList categories = (DbContentList) subForums.getContentCrud().createDbChild(DbContentList.class);
    categories.setName("Categories");
    categories.setContentProviderGetter("categoryCrud");
    DbExpressionProperty nameCat = (DbExpressionProperty) categories.getColumnsCrud().createDbChild(DbExpressionProperty.class);
    nameCat.setExpression("name");
    // DbExpressionProperty lastPostCat = (DbExpressionProperty) categories.getColumnsCrud().createDbChild(DbExpressionProperty.class);
    // lastPostCat.setExpression("lastPost");
    DbContentDetailLink categoryLink = (DbContentDetailLink) categories.getColumnsCrud().createDbChild(DbContentDetailLink.class);
    categoryLink.setName("details");
    DbContentBook categoryContentBook = categories.getContentBookCrud().createDbChild();
    categoryContentBook.setClassName("com.btxtech.game.services.forum.DbCategory");
    DbContentRow categoryNameRow = categoryContentBook.getRowCrud().createDbChild();
    DbExpressionProperty categoryName = new DbExpressionProperty();
    categoryName.setParent(categoryNameRow);
    categoryName.setExpression("name");
    categoryNameRow.setDbContent(categoryName);
    DbContentRow categoryDetailRow = categoryContentBook.getRowCrud().createDbChild();
    DbContentList threadList = new DbContentList();
    threadList.setParent(categoryDetailRow);
    threadList.init(userService);
    threadList.setContentProviderGetter("forumThreadCrud");
    categoryDetailRow.setDbContent(threadList);
    DbExpressionProperty threadColumnName = (DbExpressionProperty) threadList.getColumnsCrud().createDbChild(DbExpressionProperty.class);
    threadColumnName.setExpression("name");
    DbContentDetailLink threadLink = (DbContentDetailLink) threadList.getColumnsCrud().createDbChild(DbContentDetailLink.class);
    threadLink.setName("details");
    DbContentBook threadContentBook = threadList.getContentBookCrud().createDbChild();
    threadContentBook.setClassName("com.btxtech.game.services.forum.DbForumThread");
    DbContentRow threadNameRow = threadContentBook.getRowCrud().createDbChild();
    DbExpressionProperty postColumnName = new DbExpressionProperty();
    postColumnName.setParent(threadNameRow);
    postColumnName.setExpression("name");
    threadNameRow.setDbContent(postColumnName);
    DbContentCreateEdit threadCreateEdit = new DbContentCreateEdit();
    threadCreateEdit.init(userService);
    threadCreateEdit.setParent(threadList);
    threadCreateEdit.setName("New Thread");
    threadCreateEdit.setCreateRestricted(DbContent.Access.REGISTERED_USER);
    threadList.setDbContentCreateEdit(threadCreateEdit);
    DbExpressionProperty createName = threadCreateEdit.getValueCrud().createDbChild(DbExpressionProperty.class);
    createName.setExpression("name");
    createName.setWriteRestricted(DbContent.Access.REGISTERED_USER);
    DbExpressionProperty createContent = threadCreateEdit.getValueCrud().createDbChild(DbExpressionProperty.class);
    createContent.setExpression("content");
    createContent.setEscapeMarkup(false);
    createContent.setWriteRestricted(DbContent.Access.REGISTERED_USER);
    DbContentRow postsNameRow = threadContentBook.getRowCrud().createDbChild();
    DbContentList postList = new DbContentList();
    postList.setParent(postsNameRow);
    postList.init(userService);
    postList.setContentProviderGetter("postCrud");
    postsNameRow.setDbContent(postList);
    DbExpressionProperty postContent = (DbExpressionProperty) postList.getColumnsCrud().createDbChild(DbExpressionProperty.class);
    postContent.setExpression("content");
    postContent.setEscapeMarkup(false);
    pageCrud.updateDbChild(dbPage1);
    endHttpRequestAndOpenSessionInViewFilter();
    // Activate
    beginHttpRequestAndOpenSessionInViewFilter();
    cmsService.activateCms();
    endHttpRequestAndOpenSessionInViewFilter();
    // Create User with forum rights
    beginHttpRequestAndOpenSessionInViewFilter();
    userService.createUser("forum", "forum", "forum", "");
    userService.login("forum", "forum");
    User user = userService.getUser();
    DbContentAccessControl control = user.getContentCrud().createDbChild();
    control.setDbContent(dbContentList);
    control.setCreateAllowed(true);
    control.setDeleteAllowed(true);
    control.setWriteAllowed(true);
    userService.save(user);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
