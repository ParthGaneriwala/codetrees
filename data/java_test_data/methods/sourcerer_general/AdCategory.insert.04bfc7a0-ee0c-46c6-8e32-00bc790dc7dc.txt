public boolean insert(Connection db) throws SQLException {
    if (!isValid()) {
        return false;
    }
    boolean commit = db.getAutoCommit();
    if (commit) {
        db.setAutoCommit(false);
    }
    StringBuffer sql = new StringBuffer();
    sql.append("INSERT INTO ad_category " + "( project_category_id " + (id > -1 ? ", code " : "") + ", item_name" + ", logo_id" + ", level" + ", enabled");
    if (entered != null) {
        sql.append(", entered ");
    }
    sql.append(" ) ");
    // project_category_id
    sql.append("VALUES (? ");
    if (id > -1) {
        // code
        sql.append(", ?");
    }
    sql.append(// item_name
    ", ?" + // logo_id
    ", ?" + // level
    ", ?" + // enabled
    ", ?");
    if (entered != null) {
        // entered
        sql.append(", ?");
    }
    sql.append(" ) ");
    int i = 0;
    try {
        // Insert
        PreparedStatement pst = db.prepareStatement(sql.toString());
        DatabaseUtils.setInt(pst, ++i, projectCategoryId);
        if (id > -1) {
            pst.setInt(++i, id);
        }
        pst.setString(++i, itemName);
        DatabaseUtils.setInt(pst, ++i, logoId);
        pst.setInt(++i, level);
        pst.setBoolean(++i, enabled);
        if (entered != null) {
            pst.setTimestamp(++i, entered);
        }
        pst.execute();
        pst.close();
        id = DatabaseUtils.getCurrVal(db, "ad_category_code_seq", id);
        if (commit) {
            db.commit();
        }
    } catch (SQLException e) {
        if (commit) {
            db.rollback();
        }
        throw e;
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
    return true;
}
