public void service(HttpServletRequest request, HttpServletResponse response) throws IOException {
    try {
        request.setCharacterEncoding("UTF-8");
    } catch (Exception e) {
        LOG.warn("Unsupported encoding");
    }
    try {
        // Save the requestURI to be used downstream (it gets rewritten on forwards)
        String contextPath = request.getContextPath();
        String uri = request.getRequestURI();
        String queryString = request.getQueryString();
        String requestedURL = uri.substring(contextPath.length()) + (queryString == null ? "" : "?" + queryString);
        if ("/index.shtml".equals(requestedURL)) {
            requestedURL = "";
        }
        request.setAttribute("requestedURL", requestedURL);
        // Configure the user's client
        ClientType clientType = (ClientType) request.getSession().getAttribute("clientType");
        if (clientType == null) {
            clientType = new ClientType();
            clientType.setParameters(request);
            request.getSession().setAttribute("clientType", clientType);
        }
        // Detect mobile
        if ("false".equals(request.getParameter("useMobile"))) {
            clientType.setMobile(false);
        }
        // Context startup initializes the prefs
        ApplicationPrefs applicationPrefs = (ApplicationPrefs) request.getSession().getServletContext().getAttribute("applicationPrefs");
        if (!applicationPrefs.isConfigured()) {
            RequestDispatcher initialSetup = request.getRequestDispatcher("/Setup.do?command=Default");
            initialSetup.forward(request, response);
        } else if (ApplicationVersion.isOutOfDate(applicationPrefs)) {
            // If the site is setup, then check to see if this is an upgraded version of the app
            RequestDispatcher upgrade = getServletConfig().getServletContext().getRequestDispatcher("/Upgrade.do?command=Default&style=true");
            upgrade.forward(request, response);
        } else if ("true".equals(applicationPrefs.get("PORTAL"))) {
            // If the site supports a portal, go to the portal
            // @todo implement mobile pages then turn this back on
            // if (clientType.getMobile()) {
            // If a mobile device is detected, offer a low-bandwidth option
            // RequestDispatcher portal = request.getRequestDispatcher("/Login.do?command=DetectMobile");
            // portal.forward(request, response);
            // } else {
            String pathToUse = request.getRequestURI().substring(request.getContextPath().length());
            RequestDispatcher portal = request.getRequestDispatcher(pathToUse + applicationPrefs.get("PORTAL.INDEX"));
            portal.forward(request, response);
        // }
        } else {
            // Go to the user's home page if logged in
            User thisUser = (User) request.getSession().getAttribute(Constants.SESSION_USER);
            if (thisUser != null && thisUser.getId() > 0) {
                RequestDispatcher portal = request.getRequestDispatcher("/ProjectManagement.do?command=Default");
                portal.forward(request, response);
            } else {
                RequestDispatcher portal = request.getRequestDispatcher("/Login.do?command=Default");
                portal.forward(request, response);
            }
        }
    } catch (Exception ex) {
        String msg = "Welcome failed";
        response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, msg);
    }
}
