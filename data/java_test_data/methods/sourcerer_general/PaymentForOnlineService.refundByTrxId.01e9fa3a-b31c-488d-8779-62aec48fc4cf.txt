public static RefundResult refundByTrxId(String pb_TrxId, String p3_Amt, String p4_Cur, String p5_Desc) {
    RefundResult rr = null;
    String hmac = DigestUtil.getHmac(new String[] { refund_Cmd, p1_MerId, pb_TrxId, p3_Amt, p4_Cur, p5_Desc }, keyValue);
    Map reParams = new HashMap();
    reParams.put("p0_Cmd", refund_Cmd);
    reParams.put("p1_MerId", p1_MerId);
    reParams.put("pb_TrxId", pb_TrxId);
    reParams.put("p3_Amt", p3_Amt);
    reParams.put("p4_Cur", p4_Cur);
    reParams.put("p5_Desc", p5_Desc);
    reParams.put("hmac", hmac);
    List responseStr = null;
    try {
        log.debug("Begin http communications.data[" + reParams + "]");
        responseStr = HttpUtils.URLGet(queryRefundReqURL, reParams);
        log.debug("End http communications.responseStr.data[" + responseStr + "]");
    } catch (Exception e) {
        throw new RuntimeException(e.getMessage());
    }
    if (responseStr.size() == 0) {
        throw new RuntimeException("No response.");
    }
    rr = new RefundResult();
    for (int t = 0; t < responseStr.size(); t++) {
        String currentResult = (String) responseStr.get(t);
        if (currentResult == null || currentResult.equals("")) {
            continue;
        }
        try {
            URLDecoder.decode(currentResult, decodeCharset);
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(e.getMessage());
        }
        int i = currentResult.indexOf("=");
        int j = currentResult.length();
        if (i >= 0) {
            String sKey = currentResult.substring(0, i);
            String sValue = currentResult.substring(i + 1);
            if (sKey.equals("r0_Cmd")) {
                rr.setR0_Cmd(sValue);
            } else if (sKey.equals("r1_Code")) {
                rr.setR1_Code(sValue);
            } else if (sKey.equals("r2_TrxId")) {
                rr.setR2_TrxId(sValue);
            } else if (sKey.equals("r3_Amt")) {
                rr.setR3_Amt(sValue);
            } else if (sKey.equals("r4_Cur")) {
                rr.setR4_Cur(sValue);
            } else if (sKey.equals("hmac")) {
                rr.setHmac(sValue);
            }
        }
    }
    if (!rr.getR1_Code().equals("1")) {
        throw new RuntimeException("Query fail.Error code:" + rr.getR1_Code());
    }
    String newHmac = "";
    newHmac = DigestUtil.getHmac(new String[] { rr.getR0_Cmd(), rr.getR1_Code(), rr.getR2_TrxId(), rr.getR3_Amt(), rr.getR4_Cur() }, keyValue);
    if (!newHmac.equals(rr.getHmac())) {
        throw new RuntimeException("Hmac error.");
    }
    return (rr);
}
