private void initComponents(ArrayList<InstructorVO> person) {
    btnGoBack = new javax.swing.JButton();
    Lmsg = new javax.swing.JLabel();
    btnGoBack.setText("GoBack");
    btnGoBack.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent evt) {
            goback(evt);
        }
    });
    ListInstructorTableModel model = new ListInstructorTableModel();
    JTable table = new JTable(model);
    table.setModel(model);
    JScrollPane scrollPane = new javax.swing.JScrollPane();
    scrollPane.setViewportView(table);
    scrollPane.setPreferredSize(new Dimension(750, 400));
    this.add(scrollPane);
    GridBagConstraints constraints = new GridBagConstraints();
    JPanel panel = new JPanel(new GridBagLayout());
    constraints.weighty = .05;
    constraints.gridx = 0;
    constraints.gridy = 1;
    constraints.fill = GridBagConstraints.NONE;
    constraints.anchor = GridBagConstraints.WEST;
    panel.add(scrollPane, constraints);
    constraints.weighty = .05;
    constraints.gridx = 0;
    constraints.gridy = 2;
    constraints.fill = GridBagConstraints.NONE;
    constraints.anchor = GridBagConstraints.WEST;
    panel.add(btnGoBack, constraints);
    this.add(panel);
    panel.setBackground(new java.awt.Color(0, 102, 102));
    try {
        for (Iterator iter = person.iterator(); iter.hasNext(); ) {
            InstructorVO element = (InstructorVO) iter.next();
            model.addRow(element);
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
