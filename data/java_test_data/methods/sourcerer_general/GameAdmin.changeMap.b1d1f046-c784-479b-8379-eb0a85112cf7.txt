public void changeMap(int xPosition, int yPosition) {
    switch(currentScene) {
        case Map.FISHBOWL:
            transitableMap.checkFishBowlBounds(xPosition, yPosition);
            if (currentScene != Map.FISHBOWL) {
                this.load();
            }
            break;
        case Map.OUTER_FISHBOWL:
            transitableMap.checkOuterFishBowlBounds(xPosition, yPosition);
            if (currentScene != Map.OUTER_FISHBOWL) {
                this.load();
            }
            break;
        case Map.DISTILLERY:
            transitableMap.checkDistilleryBounds(xPosition, yPosition);
            if (currentScene != Map.DISTILLERY) {
                this.load();
            }
            break;
        case Map.CCI_RECEIVER:
            transitableMap.checkCCIReceiverBounds(xPosition, yPosition);
            if (currentScene != Map.CCI_RECEIVER) {
                this.load();
            }
            break;
        case Map.CCI_COMPUTERS:
            transitableMap.checkCCIComputersBounds(xPosition, yPosition);
            if (currentScene != Map.CCI_COMPUTERS) {
                this.load();
            }
            break;
        case Map.WOLVES_LOWER_LEFT:
            transitableMap.checkWolves3Bounds(xPosition, yPosition);
            if (currentScene != Map.WOLVES_LOWER_LEFT) {
                this.load();
            }
            break;
        case Map.WOLVES_LOWER_RIGHT:
            transitableMap.checkWolves4Bounds(xPosition, yPosition);
            if (currentScene != Map.WOLVES_LOWER_RIGHT) {
                this.load();
            }
            break;
        case Map.WOLVES_UPPER_LEFT:
            transitableMap.checkWolves1Bounds(xPosition, yPosition);
            if (currentScene != Map.WOLVES_UPPER_LEFT) {
                this.load();
            }
            break;
        case Map.WOLVES_UPPER_RIGHT:
            transitableMap.checkWolves2Bounds(xPosition, yPosition);
            if (currentScene != Map.WOLVES_UPPER_RIGHT) {
                this.load();
            }
            break;
        case Map.OUTER_DISTILLERY:
            transitableMap.checkOuterDistilleryBounds(xPosition, yPosition);
            if (currentScene != Map.OUTER_DISTILLERY) {
                this.load();
            }
            break;
        case Map.OUTSIDES:
            transitableMap.checkOutsidesBounds(xPosition, yPosition);
            if (currentScene != Map.OUTSIDES) {
                this.load();
            }
            break;
        default:
            System.out.println("UNKNOWN SCENE");
    }
}
