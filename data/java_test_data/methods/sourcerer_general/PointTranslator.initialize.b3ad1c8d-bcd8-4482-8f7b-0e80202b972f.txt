private boolean initialize() {
    String line = "";
    String[] div;
    try {
        BufferedReader b = new BufferedReader(new InputStreamReader(new DataInputStream(new FileInputStream(oldBundle_))));
        line = b.readLine();
        line = b.readLine();
        div = line.split(" ");
        int numCamsOld = Integer.valueOf(div[0]);
        b.close();
        b = new BufferedReader(new InputStreamReader(new DataInputStream(new FileInputStream(newBundle_))));
        line = b.readLine();
        line = b.readLine();
        div = line.split(" ");
        int numCamsNew = Integer.valueOf(div[0]);
        if (numCamsNew == numCamsOld) {
            System.out.println("Camera was not added.");
            return false;
        }
        for (int i = 1; i < numCamsNew; i++) {
            for (int j = 0; j < 5; j++) {
                b.readLine();
            }
        }
        line = b.readLine();
        div = line.split(" ");
        focalLength_ = Double.valueOf(div[0]);
        distortionOne_ = Double.valueOf(div[1]);
        distortionTwo_ = Double.valueOf(div[2]);
        System.out.println("Acquiring Camera data");
        System.out.println(focalLength_ + " " + distortionOne_ + " " + distortionTwo_);
        double[][] r = new double[3][3];
        for (int i = 0; i < 3; i++) {
            line = b.readLine();
            div = line.split(" ");
            for (int j = 0; j < 3; j++) {
                r[i][j] = Double.valueOf(div[j]);
                System.out.print(r[i][j] + " ");
            }
            System.out.println();
        }
        cameraRotation_ = new Matrix(r);
        line = b.readLine();
        div = line.split(" ");
        double[] t = new double[3];
        for (int i = 0; i < 3; i++) {
            t[i] = Double.valueOf(div[i]);
            System.out.print(t[i] + " ");
        }
        System.out.println();
        cameraTranslation_ = new Matrix(t, 3);
        b.close();
        return true;
    } catch (FileNotFoundException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
    return false;
}
