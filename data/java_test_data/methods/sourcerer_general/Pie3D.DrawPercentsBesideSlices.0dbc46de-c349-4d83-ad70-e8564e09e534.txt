public void DrawPercentsBesideSlices(Graphics backg) {
    g2b.setFont(font1);
    for (int i = 0; i < numSlices; i++) {
        g2b.setPaint(Color.black);
        angle = (int) Math.round(360 * (value[i] / total));
        Arc2D arc = new Arc2D.Double(pie_x, pie_y, radius, (int) (radius / aspectFudge), startAngle, (int) (angle / 2), Arc2D.PIE);
        Point2D p = arc.getEndPoint();
        Point2D c = new Point2D.Double();
        c.setLocation(arc.getCenterX(), arc.getCenterY());
        double percent;
        percent = value[i] / total * 100;
        DecimalFormat fmt = new DecimalFormat("0.##");
        String str = "" + fmt.format(percent) + "%";
        double dist1 = 20;
        double dist2 = 5;
        double x1, y1;
        double px, py, cx, cy;
        double x_str, y_str;
        px = p.getX();
        py = p.getY();
        cx = c.getX();
        cy = c.getY();
        if (px > cx) {
            x1 = px + dist1;
            x_str = x1;
        } else {
            x1 = px - dist1;
            x_str = x1 - 40;
        }
        if (py > cy) {
            y1 = py + dist1 + depth / 2;
            y_str = y1 + 10;
        } else {
            y1 = py - dist2;
            y_str = y1;
        }
        if (indicator_lines == 1) {
            if (py > cy)
                g2b.drawLine((int) x1, (int) y1, (int) px, (int) (py + depth / 2));
            else
                g2b.drawLine((int) x1, (int) y1, (int) px, (int) py);
        }
        g2b.drawString(str, (int) x_str, (int) y_str);
        startAngle += angle;
    }
}
