public void validing(HttpServletRequest request, ValidatedResult vr, String[] params) {
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM");
    List<Pay> newPays = new ArrayList<Pay>();
    try {
        Timestamp s_year_Month = new Timestamp(sdf.parse(request.getParameter("startYear") + "-" + request.getParameter("startMonth")).getTime());
        Timestamp d_year_Month = new Timestamp(sdf.parse(request.getParameter("endYear") + "-" + request.getParameter("endMonth")).getTime());
        List<Pay> pays = this.payManager.findPaysByYearAndMonth(s_year_Month);
        for (Pay pay : pays) {
            Pay newPay = new Pay();
            newPay.setPayee(pay.getPayee());
            newPay.setBasePay(pay.getBasePay());
            newPay.setBaseBakshish(pay.getBaseBakshish());
            newPay.setFoodBakshish(pay.getFoodBakshish());
            newPay.setAbsenceFromDuty(pay.getAbsenceFromDuty());
            newPay.setParkFee(pay.getParkFee());
            newPay.setFiveItemInsurances(pay.getFiveItemInsurances());
            newPay.setPersonTax(pay.getPersonTax());
            newPay.setStartTime(d_year_Month);
            newPay.setEndTime(new Timestamp(d_year_Month.getTime()));
            newPay.getEndTime().setMonth(newPay.getEndTime().getMonth() + 1);
            newPay.getEndTime().setDate(newPay.getEndTime().getDate() - 1);
            newPay.setCreateOrg(this.getCurrUser(request).getFirstOrg());
            newPay.setCreator(this.getCurrUser(request));
            newPay.setCreateTime(new Timestamp(System.currentTimeMillis()));
            newPay.setLastUpdateOrg(null);
            newPay.setLastUpdator(null);
            newPay.setLastUpdateTime(null);
            newPays.add(newPay);
        }
    } catch (ParseException e) {
        throw new UnknownFormatConversionException(e.toString());
    }
    request.setAttribute(Pay.class.getName(), newPays);
}
