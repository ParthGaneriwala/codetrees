public List<Pedido> listar(int id, Date dataInicial, Date dataFinal, int unidadeId, boolean emergencia, int status) throws DAOFactoryException {
    if (conn == null) {
        throw new IllegalStateException("n�o h� conex�o com o banco de dados");
    }
    Pedido pedido = null;
    Statement stmt = null;
    ResultSet rslt = null;
    StringBuffer condicao = new StringBuffer();
    List<Pedido> lstPedido = new ArrayList<Pedido>();
    boolean existeCond = false;
    if (id > 0) {
        condicao.append(" idPedido = " + id);
        existeCond = true;
    }
    if (dataInicial != null && dataFinal != null) {
        condicao.append(existeCond ? " AND " : " ");
        condicao.append(" dtaPedido >= '" + UtilDate.parseDateTimeToDB(dataInicial) + "' AND dtaPedido <= '" + UtilDate.parseDateTimeToDB(dataFinal) + "'");
        existeCond = true;
    }
    if (unidadeId > 0) {
        condicao.append(existeCond ? " AND " : " ");
        condicao.append("idUnidade = " + unidadeId);
        existeCond = true;
    }
    if (emergencia) {
        condicao.append(existeCond ? " AND " : " ");
        condicao.append("emergencia = 1 ");
        existeCond = true;
    }
    if (status > 0) {
        condicao.append(existeCond ? " AND " : " ");
        condicao.append("statusPedido = " + status);
    }
    if (condicao.length() > 0) {
        condicao.insert(0, " WHERE ");
    }
    String sql = "select idPedido, dtaPedido, statusPedido, " + "idUnidade, idFunc, emergencia, motivoCancelamento" + " FROM pedido " + condicao.toString();
    try {
        stmt = conn.createStatement();
        rslt = stmt.executeQuery(sql);
        while (rslt.next()) {
            pedido = toPedido(rslt);
            lstPedido.add(pedido);
        }
    } catch (SQLException e) {
        throw new DAOFactoryException(e);
    } finally {
        if (stmt != null) {
            try {
                stmt.close();
            } catch (Exception e) {
                System.err.println(e);
            }
        }
    }
    return lstPedido;
}
