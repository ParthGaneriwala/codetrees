private void diameters() {
    int centerX = Math.round(width / 2) + offsetX;
    int centerY = Math.round(height / 2) + offsetY;
    // calculo del radio maximo
    int diameterVertical = 0;
    int diameterHorizontal = 0;
    boolean edge = false;
    // radio vertical de centro hacia borde superior
    for (int j = centerY; j >= 0 && !edge; j--) {
        if (image.getSample(centerX, j, 0) != 0) {
            edge = true;
        } else {
            diameterVertical++;
        }
    }
    edge = false;
    /*
         * diámetro vertical
         * (radio vertical de centro hacia borde superior +
         *  radio vertical de centro hacia borde inferior)
         */
    for (int j = centerY + 1; j < image.getHeight() && !edge; j++) {
        if (image.getSample(centerX, j, 0) != 0) {
            edge = true;
        } else {
            diameterVertical++;
        }
    }
    edge = false;
    // radio horizontal de centro hacia borde izquierdo
    for (int i = centerX; i > 0 && !edge; i--) {
        if (image.getSample(i, centerY, 0) != 0) {
            edge = true;
        } else {
            diameterHorizontal++;
        }
    }
    edge = false;
    /*
         * diámetro horizontal
         * (radio horizontal de centro hacia borde izquiero +
         *  radio horizontal de centro hacia borde derecho)
         */
    for (int i = centerX + 1; i < image.getWidth() && !edge; i++) {
        if (image.getSample(i, centerY, 0) != 0) {
            edge = true;
        } else {
            diameterHorizontal++;
        }
    }
    if (diameterHorizontal > diameterVertical) {
        minDiameter = diameterVertical;
        maxDiameter = diameterHorizontal;
    } else {
        minDiameter = diameterHorizontal;
        maxDiameter = diameterVertical;
    }
}
