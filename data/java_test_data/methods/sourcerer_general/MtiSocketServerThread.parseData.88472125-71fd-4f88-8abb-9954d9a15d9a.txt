public void parseData(String str) {
    Collection cl = new ArrayList();
    // 0530432316932202D012CC0000F00110A030000C210530432316932202D012CC 00000F00110A030000C210530432316932202D012CC00
    while (StringUtils.isNotEmpty(str) && str.length() > 10 && str.indexOf(DATA_HEAD) != -1 && str.indexOf(MTI_STOP_BYTE) != -1) {
        int startIndex = str.indexOf(DATA_HEAD);
        String tmpStr = str.substring(startIndex);
        int endIndex = tmpStr.indexOf(MTI_STOP_BYTE);
        str = tmpStr.substring(endIndex + 2);
        tmpStr = tmpStr.substring(0, endIndex + 2);
        // F00110A030000C210530432316932202D012CC
        // remove header and stop byet
        String temp = tmpStr.substring(2, tmpStr.length() - 2);
        // 0110A030000C210530432316932202D012
        // Antenna
        String antenna = temp.substring(temp.length() - 2);
        // remove antenna
        temp = temp.substring(0, temp.length() - 2);
        // remove status
        temp = temp.substring(0, temp.length() - 2);
        // Reader Id
        String readerId = temp.substring(0, 2);
        // remove reader id
        temp = temp.substring(2);
        // Length
        String lengthStr = temp.substring(0, 2);
        int length = Integer.parseInt(lengthStr, 16);
        // remove length
        temp = temp.substring(2);
        // command
        String command = temp.substring(0, 2);
        // remove command
        temp = temp.substring(2);
        TagStructure ts = new TagStructure();
        ts.setAntenna(antenna);
        ts.setUID(temp);
        ts.setDiscoverTime(StaticFactory.getFormatTime(StaticFactory.TIME_FULL));
        cl.add(ts);
    /**
     * System.out.println(temp);
     * MermoryBean bean = new MermoryBean();
     * bean.setDate(new Date());
     *
     * bean.setReaderId(readerId);
     * bean.setTagId(temp);
     * MemoryData.addData(bean);
     */
    }
    if (cl != null && cl.size() > 0) {
        MtiDriver.tags = Collections.enumeration(cl);
    }
}
