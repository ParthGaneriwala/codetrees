public boolean write() {
    if ("true".equals(System.getProperty("clovercash.nosave"))) {
        // System.out.println("Skipping save.");
        return true;
    }
    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
    DocumentBuilder db;
    try {
        db = dbf.newDocumentBuilder();
    } catch (ParserConfigurationException e) {
        e.printStackTrace();
        return false;
    }
    doc = db.newDocument();
    Element root = doc.createElement("cloverbook");
    Element accounts = doc.createElement("accounts");
    fillAccountsList(accounts, rootAccount);
    root.appendChild(accounts);
    root.appendChild(buildTransactions());
    if (!reconciliations.isEmpty())
        root.appendChild(buildReconciliations());
    OutputFormat of = new OutputFormat("XML", "ISO-8859-1", true);
    of.setIndent(1);
    of.setIndenting(true);
    XMLSerializer serializer;
    try {
        serializer = new XMLSerializer(new FileOutputStream(filename), of);
    } catch (FileNotFoundException e1) {
        e1.printStackTrace();
        return false;
    }
    try {
        serializer.asDOMSerializer();
    } catch (IOException e) {
        e.printStackTrace();
        return false;
    }
    doc.appendChild(root);
    try {
        serializer.serialize(doc.getDocumentElement());
    } catch (IOException e) {
        e.printStackTrace();
        return false;
    }
    return true;
}
