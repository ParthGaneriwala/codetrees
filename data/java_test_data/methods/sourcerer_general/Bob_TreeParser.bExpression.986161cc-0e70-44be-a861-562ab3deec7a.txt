public final boolean bExpression(AST _t, String query) throws RecognitionException, ANTLRException {
    boolean result;
    it.unibz.lib.bob.check.MyAST bExpression_AST_in = (_t == ASTNULL) ? null : (it.unibz.lib.bob.check.MyAST) _t;
    it.unibz.lib.bob.check.MyAST s = null;
    result = false;
    boolean a = false;
    boolean b = false;
    Perl5Util regex = new Perl5Util();
    try {
        // for error handling
        if (_t == null) {
            _t = ASTNULL;
        }
        switch(_t.getType()) {
            case OR:
                {
                    AST __t34 = _t;
                    it.unibz.lib.bob.check.MyAST tmp1_AST_in = (it.unibz.lib.bob.check.MyAST) _t;
                    match(_t, OR);
                    _t = _t.getFirstChild();
                    a = bExpression(_t, query);
                    _t = _retTree;
                    b = bExpression(_t, query);
                    _t = _retTree;
                    _t = __t34;
                    _t = _t.getNextSibling();
                    result = a || b;
                    break;
                }
            case AND:
                {
                    AST __t35 = _t;
                    it.unibz.lib.bob.check.MyAST tmp2_AST_in = (it.unibz.lib.bob.check.MyAST) _t;
                    match(_t, AND);
                    _t = _t.getFirstChild();
                    a = bExpression(_t, query);
                    _t = _retTree;
                    b = bExpression(_t, query);
                    _t = _retTree;
                    _t = __t35;
                    _t = _t.getNextSibling();
                    result = a && b;
                    break;
                }
            case NOT:
                {
                    AST __t36 = _t;
                    it.unibz.lib.bob.check.MyAST tmp3_AST_in = (it.unibz.lib.bob.check.MyAST) _t;
                    match(_t, NOT);
                    _t = _t.getFirstChild();
                    a = bExpression(_t, query);
                    _t = _retTree;
                    _t = __t36;
                    _t = _t.getNextSibling();
                    result = !a;
                    break;
                }
            case STRING_LITERAL:
                {
                    s = (it.unibz.lib.bob.check.MyAST) _t;
                    match(_t, STRING_LITERAL);
                    _t = _t.getNextSibling();
                    // try {
                    result = regex.match(s + "i", query);
                    break;
                }
            default:
                {
                    throw new NoViableAltException(_t);
                }
        }
    } catch (ANTLRException ex) {
        // needed so that giedre's code can detect the error
        throw ex;
    }
    _retTree = _t;
    return result;
}
