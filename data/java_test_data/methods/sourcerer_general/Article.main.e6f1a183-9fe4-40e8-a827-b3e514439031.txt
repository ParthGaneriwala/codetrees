public static void main(String[] args) throws Exception {
    Wikipedia wikipedia = Wikipedia.getInstanceFromArguments(args);
    BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    DecimalFormat df = new DecimalFormat("0");
    while (true) {
        System.out.println("Enter article title (or enter to quit): ");
        String title = in.readLine();
        if (title == null || title.equals(""))
            break;
        Article article = wikipedia.getArticleByTitle(title);
        if (article == null) {
            System.out.println("Could not find exact match. Searching through anchors instead");
            article = wikipedia.getMostLikelyArticle(title, null);
        }
        if (article == null) {
            System.out.println("Could not find exact article. Try again");
        } else {
            System.out.println("\n" + article + "\n");
            if (wikipedia.getDatabase().isContentImported()) {
                System.out.println(" - first sentence:");
                System.out.println("    - " + article.getFirstSentence(null, null));
                System.out.println(" - first paragraph:");
                System.out.println("    - " + article.getFirstParagraph());
            }
            Category eqCategory = article.getEquivalentCategory();
            if (eqCategory != null) {
                System.out.println("\n - equivalent category");
                System.out.println("    - " + eqCategory);
            }
            System.out.println("\n - redirects (synonyms or very small related topics that didn't deserve a seperate article):");
            for (Redirect r : article.getRedirects()) System.out.println("    - " + r);
            System.out.println("\n - anchors (synonyms and hypernyms):");
            for (AnchorText at : article.getAnchorTexts()) System.out.println("    - \"" + at.getText() + "\" (used " + at.getCount() + " times)");
            System.out.println("\n - parent categories (hypernyms):");
            for (Category c : article.getParentCategories()) System.out.println("    - " + c);
            System.out.println("\n - language links (translations):");
            HashMap<String, String> translations = article.getTranslations();
            for (String lang : translations.keySet()) System.out.println("    - \"" + translations.get(lang) + "\" (" + lang + ")");
            System.out.println("\n - pages that this links to (related concepts):");
            for (Article a : article.getLinksOut()) {
                System.out.println("    - " + a + " (" + df.format(article.getRelatednessTo(a) * 100) + "% related)");
            }
        }
        System.out.println("");
    }
}
