public XMLElement createElementNS(String s, String s1, String s2) {
    Object obj = null;
    String s3 = s2;
    mParentTag = s;
    mParentTagNamespace = s2;
    try {
        if (!s.equalsIgnoreCase("attributeSet")) {
            oracle.adf.mds.dt.mds.generic.ObjectDef objectdef = mMdm.getObjectDef(s2, s);
            if (objectdef == null) {
                String s4 = getNamespacePrefixOrURI(s3, true);
                String s5 = MDSMetadataManager.getComponentNamespace(s);
                if (s5 != null) {
                    String s6 = getNamespacePrefixOrURI(s5, false);
                    throw new MDSException(null, "PARSE_FAILED_WRONG_NAMESPACE", s4 + s, s, s6);
                } else {
                    throw new MDSException(null, "PARSE_FAILED_INVALID_COMPONENT", s4 + s, null, null);
                }
            }
        }
        if (MDSMetadataManager.isRegionTag(s, s3)) {
            if (s1 != null)
                obj = ReflectionUtils.createComponentInstance(mMdm, s, s1, s3, mDoc);
            else
                obj = ReflectionUtils.createComponentInstance(mMdm, s, mDoc);
        } else if (MDSMetadataManager.isItemTag(s, s3)) {
            if (s1 != null)
                obj = ReflectionUtils.createComponentInstance(mMdm, s, s1, s3, mDoc);
            else
                obj = ReflectionUtils.createComponentInstance(mMdm, s, mDoc);
        } else if (s.equalsIgnoreCase("package")) {
            if (s1 != null)
                obj = new MDSPackage(s, s1, s3, mDoc);
            else
                obj = new MDSPackage(s, mDoc);
        } else if (s.equalsIgnoreCase("attributeSet")) {
            if (s1 != null)
                obj = new MDSAttributeSet(s, s1, s3, mDoc);
            else
                obj = new MDSAttributeSet(s, mDoc);
        } else if (s.equalsIgnoreCase("page")) {
            if (s1 != null)
                obj = ReflectionUtils.createComponentInstance(mMdm, s, s1, s3, mDoc);
            else
                obj = ReflectionUtils.createComponentInstance(mMdm, s, mDoc);
        } else if (MDSMetadataManager.isIndexedChildHeadingTag(s, s3)) {
            if (s1 != null)
                obj = new MDSIndexedChildrenHeading(s, s1, s3, mDoc);
            else
                obj = new MDSIndexedChildrenHeading(s, mDoc);
        } else if (MDSMetadataManager.isNamedChildHeadingTag(s, s3)) {
            if (s1 != null)
                obj = new MDSNamedChildrenHeading(s, s1, s3, mDoc);
            else
                obj = new MDSNamedChildrenHeading(s, mDoc);
        } else if (s1 != null)
            obj = new MDSUIComponent(s, s1, s3, mDoc);
        else
            obj = new MDSUIComponent(s, mDoc);
    } catch (MDSException mdsexception) {
        if (mdsexception.getErrorMessage().indexOf("jrad:customization") == -1)
            Debug.println(mdsexception.getErrorMessage());
        if (mMdm.getLoadLenient())
            mMdm.setParseException(new MDSException(mMdm.getParseException(), "DOCUMENT_LOAD_WARNING", mdsexception.getErrorMessage(), null, null));
        else
            mMdm.setParseException(new MDSException(mMdm.getParseException(), "DOCUMENT_LOAD_ERROR", mdsexception.getErrorMessage(), null, null));
    }
    return ((XMLElement) (obj));
}
