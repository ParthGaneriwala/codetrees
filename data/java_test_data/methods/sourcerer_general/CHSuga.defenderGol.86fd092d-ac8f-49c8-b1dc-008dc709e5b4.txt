public void defenderGol() {
    goleiroGiratorio = false;
    Vec2 ball = abstract_robot.getBall(currTime);
    Vec2 myPosition = abstract_robot.getPosition(currTime);
    Vec2 myGoal = abstract_robot.getOurGoal(currTime);
    // posicao real do meu gol
    myGoal.add(myPosition);
    // posicao real da bola
    ball.add(myPosition);
    // distancia da bola ao gol
    Vec2 ballDist = new Vec2(ball);
    ballDist.sub(myGoal);
    if (ballDist.r > GOALIE_LONG_DISTANCE) {
        goleiroGiratorio = true;
        // posicao um pouco ï¿½ frente do gol
        Vec2 direction = new Vec2(myGoal.x - 1.2 * abstract_robot.RADIUS * -fieldSide, myGoal.y);
        irParaPosicao(direction.x, direction.y);
        if (abstract_robot.canKick(currTime) && abstract_robot.getBall(currTime).y > 0)
            abstract_robot.kick(currTime);
    } else {
        // posicao relativa da bola
        ball = abstract_robot.getBall(currTime);
        // posicao absoluta da bola
        ball.add(myPosition);
        Vec2 newPos = new Vec2(myGoal);
        newPos.sub(ball);
        if (souMaisPertoDaBolaDeTodos()) {
            if (Math.abs(ball.x - abstract_robot.getPosition(currTime).x) > abstract_robot.RADIUS)
                irParaPosicao(ball.x + 0.5 * abstract_robot.RADIUS * -fieldSide, ball.y);
            else
                irParaPosicao(ball.x + 0.5 * abstract_robot.RADIUS * -fieldSide, abstract_robot.getPosition(currTime).y);
            if (// && abstract_robot.getBall(currTime).y > 0)
            abstract_robot.canKick(currTime))
                abstract_robot.kick(currTime);
        } else // Naum sou o mais proximo da bola
        {
            Vec2 direction;
            if (// limito ateh a parte de cima do gol
            ball.y > 0)
                direction = new Vec2(myGoal.x - 1.01 * abstract_robot.RADIUS * -fieldSide, Math.min(myGoal.y + (ball.y) * 0.9, 0.248));
            else
                // limito ateh a parte debaixo do gol
                direction = new Vec2(myGoal.x - 1.01 * abstract_robot.RADIUS * -fieldSide, Math.max(myGoal.y + (ball.y) * 0.9, -0.248));
            irParaPosicao(direction.x, direction.y);
            if (// && abstract_robot.getBall(currTime).y > 0)
            abstract_robot.canKick(currTime))
                abstract_robot.kick(currTime);
        }
    }
}
