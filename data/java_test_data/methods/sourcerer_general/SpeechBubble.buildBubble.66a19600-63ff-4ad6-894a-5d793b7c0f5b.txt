private void buildBubble(int left, int top, int right, int bottom, int beakOffset, Direction direction) {
    int bodyLeft = left;
    int bodyTop = top;
    int bodyRight = right;
    int bodyBottom = bottom;
    switch(direction) {
        case BOTTOM:
            bodyBottom -= BEAK_LENGTH;
            break;
        case LEFT:
            bodyLeft += BEAK_LENGTH;
            break;
        case RIGHT:
            bodyRight -= BEAK_LENGTH;
            break;
        case TOP:
            bodyTop += BEAK_LENGTH;
            break;
    }
    extendedCanvas = new ExtendedCanvas(right + LINE_SIZE, bottom + LINE_SIZE);
    extendedCanvas.getElement().getStyle().setZIndex(1);
    add(extendedCanvas, 0, 0);
    extendedCanvas.setLineWidth(LINE_SIZE);
    extendedCanvas.beginPath();
    extendedCanvas.moveTo(CURVE_SIZE + bodyLeft, bodyTop);
    extendedCanvas.quadraticCurveTo(bodyLeft, bodyTop, bodyLeft, CURVE_SIZE + bodyTop);
    leftBeakOrLine(direction == Direction.LEFT, left, beakOffset, bodyTop, bodyBottom, bodyLeft);
    extendedCanvas.quadraticCurveTo(bodyLeft, bodyBottom, CURVE_SIZE + bodyLeft, bodyBottom);
    bottomBeakOrLine(direction == Direction.BOTTOM, beakOffset, bottom, bodyLeft, bodyRight, bodyBottom);
    extendedCanvas.quadraticCurveTo(bodyRight, bodyBottom, bodyRight, bodyBottom - CURVE_SIZE);
    rightBeakOrLine(direction == Direction.RIGHT, right, beakOffset, bodyTop, bodyBottom, bodyRight);
    extendedCanvas.quadraticCurveTo(bodyRight, bodyTop, bodyRight - CURVE_SIZE, bodyTop);
    topBeakOrLine(direction == Direction.TOP, beakOffset, top, bodyLeft, bodyRight, bodyTop);
    extendedCanvas.stroke();
    extendedCanvas.setFillStyle(Color.WHITE);
    extendedCanvas.fill();
}
