@Override
public Object visit(For_Statement for_statement, Object o) {
    String valor1 = (String) for_statement.getValueNumber1().accept(this, o);
    String valor2 = (String) for_statement.getValueNumber2().accept(this, o);
    String valor3 = "ldc.i4.1";
    Value_Number number3 = for_statement.getValueNumber3();
    if (number3 != null) {
        valor3 = (String) for_statement.getValueNumber3().accept(this, o);
    }
    Statement_Sequence sequence = for_statement.getStatementSequence();
    // o = sequence.accept(this, o);
    String blocoFor = (String) sequence.accept(this, o);
    // String identificadorDoFor = for_statement.getIdentifier().getText();
    String expressaoParaAAtribuicaoDoFor = valor1;
    String expressaoLimiteDoFor = valor2;
    TypeInformation variavelDoFor = this.tabelaDeSimbolos.GetIdentifierType(for_statement.getIdentifier());
    String gravarExpressao = "\t" + this.getExpressaoStoreParaOFor(variavelDoFor, for_statement.getIdentifier());
    String carregarExpressao = "\t" + this.getExpressaoLoadParaOFor(variavelDoFor, for_statement.getIdentifier());
    String labelCodicaoParar = "LB_" + this.contadorDeLabel++;
    String labelComando = "LB_" + this.contadorDeLabel++;
    String retorno = "//FOR \n";
    retorno += expressaoParaAAtribuicaoDoFor;
    retorno += gravarExpressao;
    retorno += "\tbr.s " + labelCodicaoParar + "\n\t";
    retorno += labelComando + ": \n";
    retorno += blocoFor + "\n";
    retorno += carregarExpressao;
    // retorno += "\tldc.i4.1\n";
    retorno += "\t" + valor3 + "\n";
    retorno += "\tadd\n";
    retorno += gravarExpressao + "\n\t";
    retorno += labelCodicaoParar + ": ";
    retorno += expressaoLimiteDoFor;
    retorno += "\n" + carregarExpressao;
    retorno += "\tclt" + "\n";
    retorno += "\tbrfalse.s " + labelComando + "\n";
    retorno += "//Fim do For\n";
    return retorno;
}
