public static final Calendar convertToCalendar(String date, String format) {
    GregorianCalendar calendar = new GregorianCalendar();
    char c;
    int datePosition = 0;
    int start = -1;
    String type = null;
    String temp;
    for (int i = 0; i < format.length(); i++) {
        c = format.charAt(i);
        if (c == '%') {
            if (start == -1) {
                start = i;
            } else {
                type = format.substring(start, i + 1);
                if ("%d%,%dd%,%M%,%MM%,%yyyy%,%yy%,%HH%,%hh%,%mm%,%ss%,%ms%,%amPM%".indexOf(type) != -1) {
                    temp = nextIntAsString(date, datePosition);
                    datePosition += temp.length();
                    if ((type.equals("%d%")) || (type.equals("%dd%"))) {
                        calendar.set(Calendar.DAY_OF_MONTH, Integer.parseInt(temp));
                    } else if ((type.equals("%M%")) || (type.equals("%MM%"))) {
                        calendar.set(Calendar.MONTH, Integer.parseInt(temp) - 1);
                    } else if (type.equals("%yyyy%")) {
                        calendar.set(Calendar.YEAR, Integer.parseInt(temp));
                    } else if (type.equals("%yy%")) {
                        int year = Integer.parseInt(temp);
                        if (year > 60) {
                            year += 1900;
                        } else {
                            year += 2000;
                        }
                        calendar.set(Calendar.YEAR, year);
                    } else if (type.equals("%HH%")) {
                        calendar.set(Calendar.HOUR_OF_DAY, Integer.parseInt(temp));
                    } else if (type.equals("%hh%")) {
                        calendar.set(Calendar.HOUR, Integer.parseInt(temp));
                    } else if (type.equals("%mm%")) {
                        calendar.set(Calendar.MINUTE, Integer.parseInt(temp));
                    } else if (type.equals("%ss%")) {
                        calendar.set(Calendar.SECOND, Integer.parseInt(temp));
                    } else if (type.equals("%ms%")) {
                        calendar.set(Calendar.MILLISECOND, Integer.parseInt(temp));
                    } else if (type.equals("%amPM%")) {
                        if (temp.equalsIgnoreCase("am")) {
                            calendar.set(Calendar.AM_PM, Calendar.AM);
                        } else if (temp.equalsIgnoreCase("pm")) {
                            calendar.set(Calendar.AM_PM, Calendar.PM);
                        }
                    }
                } else if ("%EEE%,%MMM%,%MMMM%,%Z%".indexOf(type) != -1) {
                    System.err.println("Not implemented: " + type);
                } else {
                    start = i;
                    continue;
                }
                start = -1;
            }
        } else if (start == -1) {
            datePosition++;
        }
    }
    return calendar;
}
