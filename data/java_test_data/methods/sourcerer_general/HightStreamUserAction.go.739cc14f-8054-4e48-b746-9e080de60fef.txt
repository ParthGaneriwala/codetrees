@Override
protected String go() throws Exception {
    this.start = df.format(new java.util.Date());
    Date enddate = this.getPrevCountDate(7);
    this.end = df.format(enddate);
    UseractionService service = (UseractionService) this.getBean("useractionService");
    Date thedate = null;
    if (date == null || date.equals("")) {
        // thedate = com.sxit.stat.util.StatUtil.getPrevDate();
        thedate = new Date();
        date = df.format(thedate);
    } else {
        // try {
        // thedate = df.parse(date);
        // } catch (Exception e) {
        // thedate = com.sxit.stat.util.StatUtil.getPrevDate();
        // date = df.format(thedate);
        // }
        thedate = com.sxit.stat.util.StatUtil.getDate(date);
    }
    if (orderfield == null || orderfield.equals("")) {
        orderfield = "allvolume";
        ascdesc = "desc";
    }
    if (hour == null || hour.equals("")) {
        Calendar c = Calendar.getInstance();
        int now = c.get(Calendar.HOUR_OF_DAY);
        if (now == 0 || now == 1)
            hour = "01";
        else {
            Date d = new Date();
            long _now = d.getTime();
            d.setTime(_now - 60 * 60 * 1000);
            hour = dfhour.format(d);
        }
    }
    String result = SUCCESS;
    List resultList = null;
    if (firstpage.equals("yes")) {
        if (flag.equals("1"))
            resultList = service.getHightStreamDayUser(apnni, thedate, standard, condition, getOrderby());
        else
            resultList = service.getHightStreamHourUser(apnni, thedate, hour, standard, condition, getOrderby());
        set("hightuser", resultList);
    } else {
        resultList = (List) get("hightuser");
    }
    if (resultType.equals("list")) {
        int totalCount = resultList.size();
        int startIndex = (pageNo - 1) * pageSize;
        List list = new ArrayList();
        for (int i = startIndex; i < totalCount && i < startIndex + pageSize; i++) {
            list.add(resultList.get(i));
        }
        this.page = new PaginationSupport(list, totalCount, pageSize, startIndex);
        top1000users = list;
        result = SUCCESS;
    } else {
        top1000users = resultList;
        result = "excel";
    }
    return result;
}
