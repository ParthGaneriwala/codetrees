private void handleGet(OnlineUser onlineUser, UserResourceImpl userResource, RouteMessage routeMessage, Iq iq, Privacy privacy) {
    String node = onlineUser.getNode();
    Collection<PrivacyList> privacyLists = privacy.getPrivacyLists();
    // get all privacy list
    if (privacyLists.isEmpty()) {
        UserPrivacyListDbHelper dbHelper = userPrivacyListDbHelperTracker.getUserPrivacyListDbHelper();
        try {
            UserPrivacyList[] lists = dbHelper.getUserPrivacyLists(node);
            Iq resultIq = PacketUtils.createResultIq(iq);
            Privacy privacyResult = new Privacy();
            PrivacyList activelist = userResource.getActivePrivacyList();
            if (activelist != null) {
                privacyResult.setActiveName(activelist.getListName());
            }
            for (UserPrivacyList list : lists) {
                if (list.isDefaultList()) {
                    privacyResult.setDefaultName(list.getPrivacyName());
                }
                PrivacyList privacyList = new PrivacyList(list.getPrivacyName());
                privacyResult.addPrivacyList(privacyList);
            }
            resultIq.addExtension(privacyResult);
            userResource.sendToSelfClient(resultIq);
        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    } else // get specified group
    if (privacyLists.size() == 1) {
        PrivacyList requestList = privacyLists.iterator().next();
        String privacyListName = requestList.getListName();
        UserPrivacyListDbHelper dbHelper = userPrivacyListDbHelperTracker.getUserPrivacyListDbHelper();
        Iq resultIq = PacketUtils.createResultIq(iq);
        Privacy privacyResult = new Privacy();
        try {
            UserPrivacyList userPrivacyList = dbHelper.getUserPrivacyList(node, privacyListName);
            PrivacyList privacyList = userPrivacyListToPrivacyList(userPrivacyList);
            privacyResult.addPrivacyList(privacyList);
            resultIq.addExtension(privacyResult);
            userResource.sendToSelfClient(resultIq);
        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    } else // Client attempts to retrieve more than one list
    {
        Iq iqError = PacketUtils.createErrorIq(iq);
        XmppError error = new XmppError(XmppError.Condition.bad_request);
        iqError.setError(error);
        userResource.sendToSelfClient(iqError);
    }
}
