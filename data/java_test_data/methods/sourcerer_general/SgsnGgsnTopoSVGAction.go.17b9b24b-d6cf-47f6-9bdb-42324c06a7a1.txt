@Override
protected String go() throws Exception {
    if (startDate == null) {
        startDate = getPrevDate();
        this.start = df.format(startDate);
    }
    StringBuffer sb = new StringBuffer();
    Iterator<String> sgsniterator = SGSNIDLOC.keySet().iterator();
    sb.append("<?xml version=\"1.0\" standalone=\"no\"?>");
    sb.append("<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.0//EN\" \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">");
    sb.append("<svg width=\"950\" height=\"350\" xmlns=\"http://www.w3.org/2000/svg\">");
    while (sgsniterator.hasNext()) {
        String sgsnid = sgsniterator.next();
        int sgsnloc = SGSNIDLOC.get(sgsnid);
        int sgsntextloc = sgsnloc + 10;
        sb.append("<rect x=\"" + sgsnloc + "\" y=\"25\" width=\"80\" height=\"40\" fill=\"#FFFFFF\" stroke=\"#000000\"/>\r\n");
        sb.append("<text x=\"" + sgsntextloc + "\" y=\"50\" xml:space=\"preserve\" font-size=\"14\" fill=\"black\">" + sgsnid + "</text>\r\n");
    }
    Iterator<String> iterator = GGSNIDLOC.keySet().iterator();
    while (iterator.hasNext()) {
        String ggsnid = iterator.next();
        int ggsnloc = GGSNIDLOC.get(ggsnid);
        int ggsntextloc = ggsnloc + 20;
        sb.append("<rect x=\"" + ggsnloc + "\" y=\"150\" width=\"80\" height=\"40\" fill=\"#FFFFFF\" stroke=\"#000000\"/>\r\n");
        sb.append("<text x=\"" + ggsntextloc + "\" y=\"175\" xml:space=\"preserve\" font-size=\"14\" fill=\"black\">" + ggsnid + "</text>\r\n");
    }
    List ggsnlist = statservice.getDaySgsnStreamGgsnApn(startDate);
    for (int i = 0; i < ggsnlist.size(); i++) {
        SgsnStatModel model = (SgsnStatModel) ggsnlist.get(i);
        double allvolume = model.getTotalStream();
        String sgsnid = model.getSgsnid();
        String ggsnid = model.getGgsnid();
        int sgsnidloc = SGSNIDLOC.get(sgsnid);
        int ggsnidloc = GGSNIDLOC.get(ggsnid);
        int sgsnaver = 60 / 3;
        int ggsnaver = 60 / 3;
        int sgsncmnetloc = sgsnidloc + sgsnaver;
        int sgsncmwaploc = sgsnidloc + 2 * sgsnaver;
        int sgsnotherloc = sgsnidloc + 3 * sgsnaver;
        int ggsncmnetloc = ggsnidloc + ggsnaver;
        int ggsncmwaploc = ggsnidloc + 2 * ggsnaver;
        int ggsnotherloc = ggsnidloc + 3 * ggsnaver;
        if (model.getApnni().equals("cmnet")) {
            if (allvolume > BASICSTREAM) {
                String width = com.sxit.system.util.NumberUtil.toMoney(allvolume / STREAMDIFF);
                sb.append("<line x1=\"" + sgsncmnetloc + "\" y1=\"65\" x2=\"" + ggsncmnetloc + "\" y2=\"150\" stroke=\"RED\" stroke-width=\"" + width + "\"/>\r\n");
            }
        } else if (model.getApnni().equals("cmwap")) {
            if (allvolume > BASICSTREAM) {
                String width = com.sxit.system.util.NumberUtil.toMoney(allvolume / STREAMDIFF);
                sb.append("<line x1=\"" + sgsncmwaploc + "\" y1=\"65\" x2=\"" + ggsncmwaploc + "\" y2=\"150\" stroke=\"BLUE\" stroke-width=\"" + width + "\"/>\r\n");
            }
        } else if (model.getApnni().equals("other")) {
            if (allvolume > OTHERBASICSTREAM) {
                String width = com.sxit.system.util.NumberUtil.toMoney(allvolume / OTHERSTREAMDIFF);
                sb.append("<line x1=\"" + sgsnotherloc + "\" y1=\"65\" x2=\"" + ggsnotherloc + "\" y2=\"150\" stroke=\"GREEN\" stroke-width=\"" + width + "\"/>\r\n");
            }
        }
    }
    sb.append("<line x1=\"25\" y1=\"230\" x2=\"156\" y2=\"230\" stroke=\"red\" />");
    sb.append("<line x1=\"25\" y1=\"250\" x2=\"156\" y2=\"250\" stroke=\"blue\" />");
    sb.append("<line x1=\"25\" y1=\"270\" x2=\"156\" y2=\"270\" stroke=\"Green\" />");
    sb.append("<text x=\"170\" y=\"230\" xml:space=\"preserve\" font-family=\"宋体\" font-size=\"15\" fill=\"red\">CMNET</text>");
    sb.append("<text x=\"170\" y=\"250\" xml:space=\"preserve\" font-family=\"宋体\" font-size=\"15\" fill=\"blue\">CMWAP</text>");
    sb.append("<text x=\"170\" y=\"270\" xml:space=\"preserve\" font-family=\"宋体\" font-size=\"15\" fill=\"Green\">其他</text>");
    sb.append("<text x=\"300\" y=\"300\" xml:space=\"preserve\" font-family=\"黑体\" font-size=\"20\" fill=\"black\" stroke-width=\"2\">" + start + "之SGSN/GGSN流量拓扑示意图</text>");
    sb.append("</svg>");
    this.svgstr = sb.toString();
    System.out.println("svgstr.length()::::" + svgstr.length());
    return SUCCESS;
}
