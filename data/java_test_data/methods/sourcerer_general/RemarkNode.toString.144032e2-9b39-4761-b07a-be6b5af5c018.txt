public String toString() {
    int startpos;
    int endpos;
    Cursor start;
    Cursor end;
    char c;
    StringBuffer ret;
    startpos = getStartPosition();
    endpos = getEndPosition();
    ret = new StringBuffer(endpos - startpos + 20);
    if (null == mText) {
        start = new Cursor(getPage(), startpos);
        end = new Cursor(getPage(), endpos);
        ret.append("Rem (");
        ret.append(start);
        ret.append(",");
        ret.append(end);
        ret.append("): ");
        // <!--
        start.setPosition(startpos + 4);
        // -->
        endpos -= 3;
        while (start.getPosition() < endpos) {
            try {
                c = mPage.getCharacter(start);
                switch(c) {
                    case '\t':
                        ret.append("\\t");
                        break;
                    case '\n':
                        ret.append("\\n");
                        break;
                    case '\r':
                        ret.append("\\r");
                        break;
                    default:
                        ret.append(c);
                }
            } catch (ParserException pe) {
            // not really expected, but we're only doing toString, so ignore
            }
            if (77 <= ret.length()) {
                ret.append("...");
                break;
            }
        }
    } else {
        ret.append("Rem (");
        ret.append(startpos);
        ret.append(",");
        ret.append(endpos);
        ret.append("): ");
        for (int i = 0; i < mText.length(); i++) {
            c = mText.charAt(i);
            switch(c) {
                case '\t':
                    ret.append("\\t");
                    break;
                case '\n':
                    ret.append("\\n");
                    break;
                case '\r':
                    ret.append("\\r");
                    break;
                default:
                    ret.append(c);
            }
            if (77 <= ret.length()) {
                ret.append("...");
                break;
            }
        }
    }
    return (ret.toString());
}
