private static void createMenuItems(JComponent menu, MethodView[] methods, InvokeListener il, ViewFilter filter, int sizeLimit, Map<String, GenTypeParameter> genericParams, Hashtable<JMenuItem, MethodView> actions, Hashtable<String, String> methodsUsed) {
    JMenuItem item;
    boolean menuEmpty = true;
    Arrays.sort(methods);
    for (int i = 0; i < methods.length; i++) {
        try {
            MethodView m = methods[i];
            if (!filter.accept(m))
                continue;
            menuEmpty = false;
            // uses types for params
            String methodSignature = m.getCallSignature();
            // uses names for params
            String methodDescription = m.getLongDesc(genericParams);
            // check if method signature has already been added to a menu
            if (methodsUsed.containsKey(methodSignature)) {
                methodDescription = methodDescription + "   [ " + redefinedIn + " " + JavaNames.stripPrefix(methodsUsed.get(methodSignature)) + " ]";
            } else {
                methodsUsed.put(methodSignature, m.getClassName());
            }
            Action a = new InvokeAction(m, il, methodDescription);
            item = new JMenuItem(a);
            item.setFont(PrefMgr.getPopupMenuFont());
            actions.put(item, m);
            // check whether it's time for a submenu
            int itemCount;
            if (menu instanceof JMenu)
                itemCount = ((JMenu) menu).getMenuComponentCount();
            else
                itemCount = menu.getComponentCount();
            if (itemCount >= sizeLimit) {
                JMenu subMenu = new JMenu(Config.getString("debugger.objectwrapper.moreMethods"));
                subMenu.setFont(PrefMgr.getStandoutMenuFont());
                subMenu.setForeground(envOpColour);
                menu.add(subMenu);
                menu = subMenu;
                sizeLimit = itemsOnScreen / 2;
            }
            menu.add(item);
        } catch (Exception e) {
            Debug.reportError(methodException + e);
            e.printStackTrace();
        }
    }
    // If there are no accessible methods, insert a message which says so.
    if (menuEmpty) {
        JMenuItem mi = new JMenuItem(Config.getString("debugger.objectwrapper.noMethods"));
        mi.setFont(PrefMgr.getStandoutMenuFont());
        mi.setForeground(envOpColour);
        mi.setEnabled(false);
        menu.add(mi);
    }
}
