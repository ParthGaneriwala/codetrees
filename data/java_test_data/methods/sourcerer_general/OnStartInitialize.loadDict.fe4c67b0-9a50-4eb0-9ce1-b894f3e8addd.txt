public static void loadDict(String file_bible_xml) throws FileNotFoundException, IOException, DocumentException, SQLException, IllegalAccessException, ClassNotFoundException, InstantiationException {
    String dictXml = IOUtils.toString(new FileInputStream(CSWConstants.bibleDirectory + file_bible_xml), "UTF8");
    Document dictDoc = null;
    try {
        dictDoc = DocumentHelper.parseText(dictXml);
    } catch (Exception e) {
        // If BOM
        dictDoc = DocumentHelper.parseText(dictXml.substring(1));
    }
    String tableName = CSWConstants.xmlDictToTableName(file_bible_xml);
    createDictTable(DBUtils.getConnection(), tableName);
    // 
    String sql = "INSERT INTO " + tableName + " (ID,TITLE,PARA,DESCR) VALUES (?,?,?,?)";
    PreparedStatement stmt = DBUtils.getConnection().prepareStatement(sql);
    // 
    Element xmldict = dictDoc.getRootElement();
    String tmp = "";
    StringBuffer sb = new StringBuffer();
    List items = xmldict.selectNodes("item");
    for (int i = 0; i < items.size(); i++) {
        StringBuffer zdescs = new StringBuffer();
        Element item = (Element) items.get(i);
        String m_id = item.attributeValue("id");
        String m_title = "";
        if (item.selectSingleNode("title") != null)
            m_title = item.selectSingleNode("title").getText();
        sb.setLength(0);
        Element para = (Element) item.selectSingleNode("paragraph");
        String m_para = "";
        if (para != null) {
            List dt = para.content();
            for (int m = 0; m < dt.size(); m++) {
                if (dt.get(m) instanceof DefaultText)
                    sb.append(((DefaultText) dt.get(m)).getText().trim() + " ");
                else if (dt.get(m) instanceof DefaultElement) {
                    sb.append(mTraverseXml((DefaultElement) dt.get(m)));
                }
            }
            m_para = sb.toString();
        }
        List descs = item.selectNodes("description");
        StringBuffer descstr = new StringBuffer();
        for (int j = 0; j < descs.size(); j++) {
            Element desc = (Element) descs.get(j);
            descstr.append("<BR/><BR/>");
            descstr.append(mTraverseDictXml((DefaultElement) desc));
        }
        String m_desc = descstr.toString().substring("<BR/><BR/>".length());
        // 
        insertDictItem(stmt, tableName, m_id, m_title, m_para, m_desc);
    // 
    }
    bibleLoadingStatus = "Importing " + tableName + ". This may take a few minutes...";
    try {
        stmt.executeBatch();
        stmt.close();
        // 
        updateDictNamesTable(file_bible_xml, tableName);
    } catch (Exception e) {
    // Not a show stopper.
    }
}
