protected void sendSync(String content) throws IOException {
    if (hasSent()) {
        log(Level.WARNING, "This AjaxHttpRequest Object has sent", null);
        return;
    }
    try {
        URLConnection c;
        synchronized (this) {
            c = this.connection;
        }
        if (c == null) {
            log(Level.WARNING, "Please open AjaxHttpRequest first.", null);
            return;
        }
        setSent(true);
        initConnectionRequestHeader(c);
        int istatus;
        String istatusText;
        InputStream err;
        if (c instanceof HttpURLConnection) {
            HttpURLConnection hc = (HttpURLConnection) c;
            String method = this.requestMethod == null ? DEFAULT_REQUEST_METHOD : this.requestMethod;
            method = method.toUpperCase();
            hc.setRequestMethod(method);
            if ("POST".equals(method) && content != null) {
                hc.setDoOutput(true);
                byte[] contentBytes = content.getBytes(this.getPostCharset());
                hc.setFixedLengthStreamingMode(contentBytes.length);
                OutputStream out = hc.getOutputStream();
                try {
                    out.write(contentBytes);
                } finally {
                    out.flush();
                }
            }
            istatus = hc.getResponseCode();
            istatusText = hc.getResponseMessage();
            err = hc.getErrorStream();
        } else {
            istatus = 0;
            istatusText = "";
            err = null;
        }
        synchronized (this) {
            this.responseHeaders = getConnectionResponseHeaders(c);
            this.responseHeadersMap = c.getHeaderFields();
        }
        this.changeState(AjaxHttpRequest.STATE_LOADED, istatus, istatusText, null);
        InputStream in = err == null ? c.getInputStream() : err;
        int contentLength = c.getContentLength();
        this.changeState(AjaxHttpRequest.STATE_INTERACTIVE, istatus, istatusText, null);
        byte[] bytes = loadStream(in, contentLength == -1 ? 4096 : contentLength);
        this.changeState(AjaxHttpRequest.STATE_COMPLETE, istatus, istatusText, bytes);
    } finally {
        synchronized (this) {
            this.connection = null;
            setSent(false);
        }
    }
}
