public void actionPerformed(ActionEvent e) {
    String actionCommand = e.getActionCommand();
    System.out.println("Action command: " + actionCommand);
    if (QUIT.equals(actionCommand)) {
        dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }
    if (ABOUT.equals(actionCommand)) {
        new AboutDialog(this);
    }
    if (SETTINGS.equals(actionCommand)) {
        new PreferencesDialog(this);
    }
    if (EDIT.equals(actionCommand)) {
        ableComponents(false);
        try {
            cip.writeLocalTemporaryFile();
            ClipboardImagePublisher.launchUrl(cip.getLocalTemporaryAbsolutePath());
        } catch (Exception e1) {
            JOptionPane.showMessageDialog(this, "Cannot edit. Error text: " + e1.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        ableComponents(true);
    }
    if (PUBLISH_LOCAL.equals(actionCommand)) {
        ableComponents(false);
        try {
            cip.writeLocalTemporaryFile();
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(new StringSelection(cip.getLocalTemporaryAbsolutePath()), this);
            JOptionPane.showMessageDialog(this, "File name copied to clipboard.", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception e1) {
            JOptionPane.showMessageDialog(this, "Cannot edit. Error text: " + e1.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        ableComponents(true);
    }
    if (PUBLISH_WEB.equals(actionCommand)) {
        ableComponents(false);
        String returnMessage = null;
        try {
            returnMessage = cip.publish();
            if (DONE.equals(returnMessage)) {
                String hostName = preferences.get(PreferencesDialog.HOST_NAME, "patrickarchibald.com");
                String picturePath = preferences.get(PreferencesDialog.PICTURE_PATH, "/pictures/");
                ClipboardImagePublisher.launchUrl("http://" + hostName + picturePath + cip.getPublishedFileName());
            } else {
                JOptionPane.showMessageDialog(this, "Image not published. The server return this message: " + returnMessage, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e1) {
            JOptionPane.showMessageDialog(this, "Image not published. Error text: " + e1.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        cip = new ClipboardImagePublisher();
        ableComponents(true);
    }
}
