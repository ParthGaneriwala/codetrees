private void convertHits(IndexerQueryResultList response, Hits hits) {
    PagedListInfo pagedListInfo = response.getPagedListInfo();
    // No need to process any further if no hits found
    if (hits.length() > 0) {
        // The query needs to update the pagedListInfo with the max records
        pagedListInfo.setMaxRecords(hits.length());
        // Use the pagedListInfo properties for sorting below
        int currentOffset = pagedListInfo.getCurrentOffset();
        int itemsPerPage = pagedListInfo.getItemsPerPage();
        int maxRecords = pagedListInfo.getMaxRecords();
        String sortOrder = pagedListInfo.getSortOrder();
        // Determine the requested sort order
        boolean asc = true;
        if ("desc".equalsIgnoreCase(sortOrder)) {
            asc = false;
        }
        // Convert the Lucene hits to a subset
        if (asc) {
            // Determine the startIndex
            int startIndex = currentOffset;
            if (startIndex < 0) {
                startIndex = 0;
            }
            // Determine the upper limit
            int limit = currentOffset + itemsPerPage;
            if (limit == -1 || limit > maxRecords) {
                limit = maxRecords;
            }
            // Retrieve the range of hits
            for (int i = startIndex; i < limit; i++) {
                try {
                    Document doc = hits.doc(i);
                    IndexerQueryResult responseItem = new IndexerQueryResult(response);
                    responseItem.setIndexId(hits.id(i));
                    populateIndexerQueryResult(responseItem, doc);
                    response.add(responseItem);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        } else {
            // Determine the start index
            int startIndex = maxRecords - 1 - currentOffset;
            // Determine the lower limit
            int limit = maxRecords - 1 - currentOffset - itemsPerPage;
            if (limit < -1) {
                limit = -1;
            }
            // Retrieve the range of hits
            for (int i = startIndex; i > limit; i--) {
                try {
                    Document doc = hits.doc(i);
                    IndexerQueryResult responseItem = new IndexerQueryResult(response);
                    responseItem.setIndexId(hits.id(i));
                    populateIndexerQueryResult(responseItem, doc);
                    // Get the following fields...
                    response.add(responseItem);
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}
