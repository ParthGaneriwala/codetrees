@Test
@DirtiesContext
public void testSaveImagePositionMulti() {
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    DbTerrainSetting dbTerrainSetting = setupMinimalTerrain();
    Assert.assertEquals(0, getTerrainTileCount(dbTerrainSetting));
    Assert.assertEquals(1, getSurfaceRectCount(dbTerrainSetting));
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    DbTerrainImage dbTerrainImage = createDbTerrainImage(1, 1);
    // Fill with 1600 tiles. Override the original first tile
    Collection<TerrainImagePosition> terrainImagePositions = new ArrayList<TerrainImagePosition>();
    for (int x = 0; x < 40; x++) {
        for (int y = 0; y < 40; y++) {
            terrainImagePositions.add(new TerrainImagePosition(new Index(x, y), dbTerrainImage.getId()));
        }
    }
    Collection<SurfaceRect> surfaceRects = new ArrayList<SurfaceRect>();
    terrainService.saveTerrain(terrainImagePositions, surfaceRects, dbTerrainSetting.getId());
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    Assert.assertEquals(1600, getTerrainTileCount(dbTerrainSetting));
    Assert.assertEquals(0, getSurfaceRectCount(dbTerrainSetting));
    verifyImagePositions(0, 40, 0, 40);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    // Override all 1600 first tile
    terrainImagePositions = new ArrayList<TerrainImagePosition>();
    for (int x = 0; x < 40; x++) {
        for (int y = 0; y < 40; y++) {
            terrainImagePositions.add(new TerrainImagePosition(new Index(x, y), dbTerrainImage.getId()));
        }
    }
    terrainService.saveTerrain(terrainImagePositions, surfaceRects, dbTerrainSetting.getId());
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    Assert.assertEquals(1600, getTerrainTileCount(dbTerrainSetting));
    Assert.assertEquals(0, getSurfaceRectCount(dbTerrainSetting));
    verifyImagePositions(0, 40, 0, 40);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    // Override 1600
    terrainImagePositions = new ArrayList<TerrainImagePosition>();
    for (int x = 20; x < 60; x++) {
        for (int y = 20; y < 60; y++) {
            terrainImagePositions.add(new TerrainImagePosition(new Index(x, y), dbTerrainImage.getId()));
        }
    }
    terrainService.saveTerrain(terrainImagePositions, surfaceRects, dbTerrainSetting.getId());
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    Assert.assertEquals(1600, getTerrainTileCount(dbTerrainSetting));
    Assert.assertEquals(0, getSurfaceRectCount(dbTerrainSetting));
    verifyImagePositions(20, 60, 20, 60);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
