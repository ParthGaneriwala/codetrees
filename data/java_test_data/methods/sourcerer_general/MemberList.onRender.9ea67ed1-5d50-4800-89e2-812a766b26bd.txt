protected void onRender(Element parent, int index) {
    super.onRender(parent, index);
    // Condition cond = new Condition();
    // cond.setField(IComment.PARENT);
    // cond.setOperator(Condition.EQUALS);
    // cond.setValue(null);
    // criteria.addCondition(cond);
    BasePagingLoader loader = new PagingListService().getLoader(ModelNames.USER, criteria);
    loader.load(0, 10);
    final ListStore<BeanObject> store = new ListStore<BeanObject>(loader);
    toolBar = new PagingToolBar(10);
    toolBar.bind(loader);
    List<ColumnConfig> columns = new ArrayList<ColumnConfig>();
    final CheckBoxSelectionModel<BeanObject> smRowSelection = new CheckBoxSelectionModel<BeanObject>();
    columns.add(smRowSelection.getColumn());
    columns.add(new ColumnConfig(IUser.ID, "编号", 70));
    columns.add(new ColumnConfig(IUser.NAME, "会员名称", 90));
    columns.add(new ColumnConfig(IUser.EMAIL, "邮件地址", 180));
    columns.add(new ColumnConfig(IUser.REGISTERTIME, "注册时间", 150));
    ColumnConfig actcol = new ColumnConfig("Action", Resources.constants.GoodsList_action(), 120);
    columns.add(actcol);
    ColumnModel cm = new ColumnModel(columns);
    Grid<BeanObject> grid = new EditorGrid<BeanObject>(store, cm);
    grid.setLoadMask(true);
    grid.setBorders(true);
    grid.setSelectionModel(smRowSelection);
    // grid.setAutoExpandColumn("forum");
    ActionCellRenderer render = new ActionCellRenderer(grid);
    ActionCellRenderer.ActionInfo act = new ActionCellRenderer.ActionInfo();
    act.setImage("icon_edit.gif");
    act.setAction("checkMemberAction($id)");
    act.setTooltip("编辑");
    render.addAction(act);
    act = new ActionCellRenderer.ActionInfo();
    act.setImage("book_open.gif");
    act.setAction("memberAddressAction($id)");
    act.setTooltip("收货地址");
    render.addAction(act);
    act = new ActionCellRenderer.ActionInfo();
    act.setImage("icon_view.gif");
    act.setAction("memberOrderAction($id)");
    act.setTooltip("查看订单");
    render.addAction(act);
    act = new ActionCellRenderer.ActionInfo();
    act.setImage("icon_account.gif");
    act.setAction("memberAccountAction($id)");
    act.setTooltip("查看账目明细");
    render.addAction(act);
    act = new ActionCellRenderer.ActionInfo();
    act.setImage("icon_trash.gif");
    act.setAction("deleteMemberAction($id)");
    act.setTooltip("删除");
    render.addAction(act);
    actcol.setRenderer(render);
    HorizontalPanel header = new HorizontalPanel();
    header.add(Resources.images.icon_search().createImage());
    header.add(new Label("会员等级"));
    header.add(rankList);
    header.add(btnFind);
    add(header);
    btnFind.addSelectionListener(new SelectionListener<ButtonEvent>() {

        public void componentSelected(ButtonEvent ce) {
            search();
        }
    });
    ContentPanel panel = new ContentPanel();
    panel.setFrame(true);
    panel.setCollapsible(true);
    panel.setAnimCollapse(false);
    panel.setButtonAlign(HorizontalAlignment.CENTER);
    panel.setIconStyle("icon-table");
    // panel.setHeading("Paging Grid");
    panel.setLayout(new FitLayout());
    panel.add(grid);
    panel.setSize(800, 350);
    panel.setBottomComponent(toolBar);
    panel.setButtonAlign(HorizontalAlignment.CENTER);
    add(panel);
    // 添加下面一行的操作BUTTON 及 listener  包括  删除评论 允许显示 禁止显示
    lstAction.addItem("请选择...", "---");
    lstAction.addItem("删除会员", "delete");
    btnAct.addSelectionListener(new SelectionListener<ButtonEvent>() {

        public void componentSelected(ButtonEvent ce) {
            int index = lstAction.getSelectedIndex();
            if (index == 0) {
                // it is prompt
                return;
            }
            String sel = lstAction.getValue(index);
            final List<BeanObject> items = smRowSelection.getSelectedItems();
            executeAction(items, sel);
        }
    });
    HorizontalPanel footer = new HorizontalPanel();
    footer.add(lstAction);
    footer.add(btnAct);
    add(footer);
}
