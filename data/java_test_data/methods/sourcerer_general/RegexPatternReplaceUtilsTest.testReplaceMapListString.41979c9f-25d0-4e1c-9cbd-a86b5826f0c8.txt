@Test
public void testReplaceMapListString() {
    String targetString = "qwer ' or 1=1-- qwer";
    String resultingString = RegexPatternReplaceUtils.replace(searchAndReplacePatternMap, excludesPatternList, targetString);
    String expectedString = "qwer ' or 1=1-- qwer";
    logger.debug("resultingString: {}", resultingString);
    assertEquals(expectedString, resultingString);
    targetString = "qwer \" or 1=1-- qwer";
    resultingString = RegexPatternReplaceUtils.replace(searchAndReplacePatternMap, excludesPatternList, targetString);
    expectedString = "qwer \"  qwer";
    logger.debug("resultingString: {}", resultingString);
    assertEquals(expectedString, resultingString);
    targetString = "qwer or 1=1-- qwer";
    resultingString = RegexPatternReplaceUtils.replace(searchAndReplacePatternMap, excludesPatternList, targetString);
    expectedString = "qwer  qwer";
    logger.debug("resultingString: {}", resultingString);
    assertEquals(expectedString, resultingString);
    targetString = "qwer ' or 'a'='a qwer";
    resultingString = RegexPatternReplaceUtils.replace(searchAndReplacePatternMap, excludesPatternList, targetString);
    expectedString = "qwer ' qwer";
    logger.debug("resultingString: {}", resultingString);
    assertEquals(expectedString, resultingString);
    targetString = "qwer \" or \"a\"=\"a qwer";
    resultingString = RegexPatternReplaceUtils.replace(searchAndReplacePatternMap, excludesPatternList, targetString);
    expectedString = "qwer \" qwer";
    logger.debug("resultingString: {}", resultingString);
    assertEquals(expectedString, resultingString);
    targetString = "qwer ') or ('a'='a qwer";
    resultingString = RegexPatternReplaceUtils.replace(searchAndReplacePatternMap, excludesPatternList, targetString);
    expectedString = "qwer ' qwer";
    logger.debug("resultingString: {}", resultingString);
    assertEquals(expectedString, resultingString);
    targetString = "qwer ' or password like '% qwer";
    resultingString = RegexPatternReplaceUtils.replace(searchAndReplacePatternMap, excludesPatternList, targetString);
    expectedString = "qwer ' qwer";
    logger.debug("resultingString: {}", resultingString);
    assertEquals(expectedString, resultingString);
}
