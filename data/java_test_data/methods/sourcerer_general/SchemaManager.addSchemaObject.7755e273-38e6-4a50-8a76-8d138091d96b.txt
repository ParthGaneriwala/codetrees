public void addSchemaObject(SchemaObject object) {
    HsqlName name = object.getName();
    Schema schema = (Schema) schemaMap.get(name.schema.name);
    SchemaObjectSet set = getSchemaObjectSet(schema, name.type);
    switch(name.type) {
        case SchemaObject.PROCEDURE:
        case SchemaObject.FUNCTION:
            {
                RoutineSchema routine = (RoutineSchema) set.getObject(name.name);
                if (routine == null) {
                    routine = new RoutineSchema(name.type, name);
                    routine.addSpecificRoutine(database, (Routine) object);
                    set.checkAdd(name);
                    SchemaObjectSet specificSet = getSchemaObjectSet(schema, SchemaObject.SPECIFIC_ROUTINE);
                    specificSet.checkAdd(((Routine) object).getSpecificName());
                    set.add(routine);
                    specificSet.add(object);
                } else {
                    SchemaObjectSet specificSet = getSchemaObjectSet(schema, SchemaObject.SPECIFIC_ROUTINE);
                    HsqlName specificName = ((Routine) object).getSpecificName();
                    if (specificName != null) {
                        specificSet.checkAdd(specificName);
                    }
                    routine.addSpecificRoutine(database, (Routine) object);
                    specificSet.add(object);
                }
                addReferences(object);
                return;
            }
        case SchemaObject.TABLE:
            {
                OrderedHashSet refs = object.getReferences();
                for (int i = 0; i < refs.size(); i++) {
                    HsqlName ref = (HsqlName) refs.get(i);
                    if (ref.type == SchemaObject.COLUMN) {
                        int index = ((Table) object).findColumn(ref.name);
                        ColumnSchema column = ((Table) object).getColumn(index);
                        addSchemaObject(column);
                    }
                }
                break;
            }
        case SchemaObject.COLUMN:
            {
                if (object.getReferences().isEmpty()) {
                    return;
                }
                break;
            }
    }
    if (set != null) {
        set.add(object);
    }
    addReferences(object);
}
