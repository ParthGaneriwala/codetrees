public static void splitData(ReadableTrainingData data, Question question, WritableTrainingData trueData, WritableTrainingData falseData, final Long2IntMap counts, final Long2IntMap trueCounts, final Long2IntMap falseCounts) throws IOException {
    data.start();
    trueData.setContextSize(data.getContextSize());
    falseData.setContextSize(data.getContextSize());
    trueData.start();
    falseData.start();
    TrainingDataBlock trueBlock = new TrainingDataBlock();
    TrainingDataBlock falseBlock = new TrainingDataBlock();
    for (; data.hasNext(); ) {
        TrainingDataBlock block = data.next();
        if (block.hasData()) {
            if (counts != null) {
                block.addCounts(counts);
            }
            for (ContextFuturesPair pair : block) {
                if (question.test(pair.getContext())) {
                    if (!trueBlock.add(pair)) {
                        trueData.add(trueBlock);
                        if (trueCounts != null) {
                            trueBlock.addCounts(trueCounts);
                        }
                        trueBlock = new TrainingDataBlock();
                        trueBlock.add(pair);
                    }
                } else {
                    if (!falseBlock.add(pair)) {
                        falseData.add(falseBlock);
                        if (falseCounts != null) {
                            falseBlock.addCounts(falseCounts);
                        }
                        falseBlock = new TrainingDataBlock();
                        falseBlock.add(pair);
                    }
                }
            }
        }
    }
    if (trueBlock.hasData()) {
        trueData.add(trueBlock);
        if (trueCounts != null) {
            trueBlock.addCounts(trueCounts);
        }
    }
    if (falseBlock.hasData()) {
        falseData.add(falseBlock);
        if (falseCounts != null) {
            falseBlock.addCounts(falseCounts);
        }
    }
    trueData.finish();
    falseData.finish();
}
