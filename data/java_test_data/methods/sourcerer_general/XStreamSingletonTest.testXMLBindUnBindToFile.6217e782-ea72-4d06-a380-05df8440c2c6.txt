public void testXMLBindUnBindToFile() {
    FileWriter fw1 = null;
    FileWriter fw2 = null;
    FileWriter fw3 = null;
    FileWriter fw4 = null;
    FileReader fr2 = null;
    try {
        Parametrage p = CreerParametrage();
        XStreamSingleton xStream = XStreamSingleton.getInstance();
        fw1 = new FileWriter(temp + "parametrage.xml", false);
        xStream.toXML(p, fw1);
        fr2 = new FileReader(temp + "parametrage.xml");
        Parametrage rResult = (Parametrage) xStream.fromXML(fr2);
        fw2 = new FileWriter(temp + "parametrage2.xml", false);
        xStream.toXML(rResult, fw2);
        assertEquals(xStream.toXML(p), xStream.toXML(rResult));
        // dans le module GenProjDV
        for (Theme th : p.getEnqueteTravauxSolutions().getListeTheme()) {
            if (th.getId().longValue() == 1 || th.getId().longValue() == 2) {
                th.setSelectionneIHM(true);
                for (Budget b : th.getListeBudget()) {
                    if (b.getId() == 1 || b.getId() == 5)
                        b.setSelectionneIHM(true);
                }
            }
            for (FamilleSolution fam : th.getListeFamilleSolution()) {
                for (Solution sol : fam.getListeSolution()) {
                    long idSol = sol.getId().longValue();
                    if (idSol == 1 || idSol == 2 || idSol == 3 || idSol == 5 || idSol == 7 || idSol == 9 || idSol == 11 || idSol == 12 || idSol == 15 || idSol == 16 || idSol == 18) {
                        sol.setAfficheIHM(true);
                    }
                }
            }
        }
        fw3 = new FileWriter(temp + "filtre_out_genprojdv_in.xml", false);
        xStream.toXML(p.getEnqueteTravauxSolutions(), fw3);
        // puis on crï¿½e un fichier de sortie du module GenProjDv
        for (OffreDolceVita offre : p.getEnqueteTravauxSolutions().getListeOffreDolceVita()) {
            if (offre.getId().longValue() == 1)
                offre.setAfficheIHM(true);
        }
        fw4 = new FileWriter(temp + "genprojdv_out_solution.xml", false);
        xStream.toXML(p.getEnqueteTravauxSolutions(), fw4);
    } catch (Exception e) {
        e.printStackTrace();
    } finally {
        if (fw1 != null) {
            try {
                fw1.flush();
                fw1.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (fw2 != null) {
            try {
                fw2.flush();
                fw2.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (fw3 != null) {
            try {
                fw3.flush();
                fw3.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (fw4 != null) {
            try {
                fw4.flush();
                fw4.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (fr2 != null) {
            try {
                fr2.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
}
