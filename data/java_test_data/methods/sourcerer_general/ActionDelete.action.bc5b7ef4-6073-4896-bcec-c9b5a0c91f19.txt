@Override
public void action(Message request, Message response) {
    String userId = (String) request.get(MSG.REQUEST.USER_ID);
    String tableName = (String) request.get(MSG.REQUEST.TABLE_NAME);
    Object condition = request.get(MSG.REQUEST.CONDITION);
    // DELETE 메시지를 생성한다.
    Message msg = new Message();
    msg.set(MSG.REQUEST.USER_ID, userId);
    msg.set(MSG.REQUEST.TABLE_NAME, tableName);
    msg.set(MSG.ACTION, MSG.REQUEST.DELETE);
    msg.set(MSG.REQUEST.CONDITION, condition);
    // 연결 요청용 MapReduce 를 생성해서, 요청을 뿌려준다.
    MapReduce mapReduce = new MapReduce(manager.getConnections());
    Message[] responses = null;
    try {
        responses = mapReduce.map(msg);
    } catch (InterruptedException e) {
        e.printStackTrace();
        response.setFailed(e.getMessage());
        return;
    }
    // 성공적으로 지운 갯수
    int totalDeletedCount = 0;
    // 결과를 종합한다.
    for (Message res : responses) {
        int deletedCount = (Integer) res.get(MSG.RESPONSE.COUNT);
        totalDeletedCount += deletedCount;
        // 지운 개수만큼을 반영 시켜 준다.
        String rid = (String) res.get(MSG.RESPONSE.RID);
        TabletEntry entry = manager.getRepositoryEntry(rid).getTabletEntries().get(userId, tableName);
        entry.decreaseCount(deletedCount);
    }
    // 결과 메시지를 만들어준다. 지운 개수를 담아준다.
    response.setSuccessed();
    response.set(MSG.RESPONSE.COUNT, totalDeletedCount);
}
