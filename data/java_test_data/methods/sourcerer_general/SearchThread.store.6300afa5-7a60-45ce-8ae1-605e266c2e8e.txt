@SuppressWarnings("unchecked")
private void store(List<String> urls) {
    // get date parameters
    int currentHour = Calendar.getInstance().get(Calendar.HOUR_OF_DAY);
    Date currentDate = Calendar.getInstance().getTime();
    // start session
    EntityManager em = databaseService.getEntityManager();
    em.getTransaction().begin();
    try {
        // get stored results
        String hqlSearchResults = "SELECT result FROM SearchResult result " + "WHERE result.adWord =:adWord";
        Query querySearchResults = em.createQuery(hqlSearchResults);
        querySearchResults.setParameter("adWord", this.adWord);
        List<SearchResult> storedResults = querySearchResults.getResultList();
        // stored result url not in the new url list
        for (SearchResult searchResult : storedResults) {
            if (!urls.contains(searchResult.getUrl())) {
                if (searchResult.getInfoByDate(currentDate) == null) {
                    HourInfo tmpInfo = new HourInfo();
                    tmpInfo.setHour(currentHour);
                    tmpInfo.setNumber(0);
                    tmpInfo.setState(HourInfo.State.N);
                    tmpInfo.setSearchResult(searchResult);
                    searchResult.getInfos().add(tmpInfo);
                } else {
                    HourInfo info = searchResult.getInfoByDate(currentDate);
                    info.setNumber(0);
                    info.setState(HourInfo.State.N);
                }
                System.out.println("Stored url not found in this hour: " + searchResult.getUrl());
            }
        }
        // process new urls
        for (int i = 0; i < urls.size(); i++) {
            String url = urls.get(i);
            // check if url is already stored
            String hql = "SELECT result FROM SearchResult result " + "WHERE result.adWord =:adWord " + "AND result.url =:url";
            Query query = em.createQuery(hql);
            query.setParameter("adWord", this.adWord);
            query.setParameter("url", url);
            SearchResult storedResult = null;
            try {
                storedResult = (SearchResult) query.getSingleResult();
            } catch (Exception e) {
            }
            if (storedResult == null) {
                // create result
                SearchResult result = new SearchResult();
                result.setAdWord(adWord);
                result.setUrl(url);
                result.setDate(Calendar.getInstance().getTime());
                HourInfo info = new HourInfo();
                info.setHour(currentHour);
                info.setNumber(i + 1);
                info.setState(HourInfo.State.Y);
                info.setSearchResult(result);
                result.getInfos().add(info);
                // save result
                em.persist(result);
                System.out.println("New url found: " + result.getUrl());
            } else {
                if (storedResult.getInfoByDate(currentDate) == null) {
                    HourInfo tmpInfo = new HourInfo();
                    tmpInfo.setHour(currentHour);
                    tmpInfo.setNumber(i);
                    tmpInfo.setState(HourInfo.State.Y);
                    tmpInfo.setSearchResult(storedResult);
                    storedResult.getInfos().add(tmpInfo);
                } else {
                    HourInfo info = storedResult.getInfoByDate(currentDate);
                    info.setNumber(i);
                    info.setState(HourInfo.State.Y);
                }
                System.out.println("Url updated: " + storedResult.getUrl());
            }
        }
        em.getTransaction().commit();
    } catch (Exception e) {
        e.printStackTrace();
        em.getTransaction().rollback();
    } finally {
        em.close();
    }
}
