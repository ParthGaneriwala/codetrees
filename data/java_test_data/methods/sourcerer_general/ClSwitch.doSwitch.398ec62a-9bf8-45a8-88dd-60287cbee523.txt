protected T doSwitch(int classifierID, EObject theEObject) {
    switch(classifierID) {
        case ClPackage.ARG:
            {
                Arg arg = (Arg) theEObject;
                T result = caseArg(arg);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case ClPackage.BINDING:
            {
                Binding binding = (Binding) theEObject;
                T result = caseBinding(binding);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case ClPackage.BODY_TYPE:
            {
                BodyType bodyType = (BodyType) theEObject;
                T result = caseBodyType(bodyType);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case ClPackage.COMPONENT_INSTANCE:
            {
                ComponentInstance componentInstance = (ComponentInstance) theEObject;
                T result = caseComponentInstance(componentInstance);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case ClPackage.DOCUMENT_ROOT:
            {
                DocumentRoot documentRoot = (DocumentRoot) theEObject;
                T result = caseDocumentRoot(documentRoot);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case ClPackage.INTERFACE:
            {
                Interface interface_ = (Interface) theEObject;
                T result = caseInterface(interface_);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case ClPackage.PORT:
            {
                Port port = (Port) theEObject;
                T result = casePort(port);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case ClPackage.SERVICE:
            {
                Service service = (Service) theEObject;
                T result = caseService(service);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case ClPackage.USED_SERVICE:
            {
                UsedService usedService = (UsedService) theEObject;
                T result = caseUsedService(usedService);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case ClPackage.ASSEMBLY_BINDING:
            {
                AssemblyBinding assemblyBinding = (AssemblyBinding) theEObject;
                T result = caseAssemblyBinding(assemblyBinding);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case ClPackage.DELEGATION_BINDING:
            {
                DelegationBinding delegationBinding = (DelegationBinding) theEObject;
                T result = caseDelegationBinding(delegationBinding);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        default:
            return defaultCase(theEObject);
    }
}
