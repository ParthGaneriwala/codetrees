public boolean initData() throws IOException, FileNotFoundException, AppException {
    boolean isOpen = false;
    businessTypeJLbl.setText(null);
    sellOrderTypeJLbl.setText(null);
    this.cusNameJLbl.setText(null);
    this.deptNameJLbl.setText(null);
    this.makerJLbl.setText(null);
    remarkJTxtArea.setText(null);
    this.sellDateChooser.setSelectedDate(null);
    this.odm.removeAllData();
    int option = chooserOpen.showOpenDialog(this);
    if (option == JFileChooser.APPROVE_OPTION) {
        // ÿ�γ�ʼ�����ݶ����¶�ȡһ�������������
        compGroups = ExcelUtil.getCompGroupFromInventoryXls();
        odm.setCompGroups(compGroups);
        inventories = ExcelUtil.readFromInventoryXls();
        File file = chooserOpen.getSelectedFile();
        order = ExcelUtil.readFromOrderXls(file);
        // ��ʼ��������ϸ�е�Inventory��compGroup��cComunitCode;
        ArrayList<OrderDetail> ods = order.getOds();
        for (OrderDetail od : ods) {
            Inventory inv = od.getInventory();
            for (Inventory inventory : inventories) {
                if (inv.getId().equals(inventory.getId())) {
                    inv.setCompGroup(inventory.getCompGroup());
                    inv.setCompUnitCode(inventory.getCompUnitCode());
                    inv.setSAComUnitCode(inventory.getSAComUnitCode());
                    inv.setPacking(inventory.getPacking());
                    break;
                }
            }
        }
        businessTypeJLbl.setText(order.getBusinessType());
        sellOrderTypeJLbl.setText(order.getSaleType().getName());
        this.cusNameJLbl.setText(order.getC().getName());
        this.deptNameJLbl.setText(order.getP().getDept().getName());
        this.makerJLbl.setText(ConstantValues.MAKER_Name);
        remarkJTxtArea.setText(order.getRemark());
        sendCalendar.setTime(order.getOrderDate());
        this.sellDateChooser.setSelectedDate(sendCalendar);
        this.odm.setOrderDetails(order.getOds());
        isOpen = true;
    } else {
        JOptionPane.showMessageDialog(this, "δѡ���κζ����ļ���", "��ʾ��", JOptionPane.INFORMATION_MESSAGE);
        ViewUtil.closeJInternalFrameWithoutPrompt(this);
    }
    return isOpen;
}
