public static FileMeta writeFileItemAverage(FileItem item, String rootFilePath, String rootWebPath) {
    if (null == item || item.getSize() == 0) {
        return new FileMeta();
    }
    FileMeta meta = null;
    try {
        Object obj = filePropertiesMap.get(rootFilePath);
        Properties props;
        if (obj == null) {
            props = new Properties();
            props.load(new FileInputStream(rootFilePath + System.getProperty("file.separator") + "file.properties"));
            filePropertiesMap.put(rootFilePath, props);
        } else {
            props = (Properties) obj;
        }
        int maxFileAmount = Integer.parseInt(props.getProperty("maxFileAmount"));
        int nextFileIndex = Integer.parseInt(props.getProperty("nextFileIndex"));
        int currentDirName = Integer.parseInt(props.getProperty("currentDirName"));
        if (nextFileIndex > maxFileAmount) {
            // new dir
            File dir = new File(rootFilePath + System.getProperty("file.separator") + (currentDirName + 1));
            dir.mkdir();
            nextFileIndex = 1;
            currentDirName = currentDirName + 1;
            props.put("currentDirName", currentDirName + "");
        }
        String[] sa = item.getName().split("[.]");
        String fileType = sa[sa.length - 1].toLowerCase();
        String uuid = IDGenerator.generateUUID();
        String fileName = uuid + "." + fileType;
        String filePath = rootFilePath + System.getProperty("file.separator") + currentDirName + System.getProperty("file.separator") + fileName;
        String oN = "";
        String[] n = item.getName().split("\\" + System.getProperty("file.separator"));
        oN = n[n.length - 1];
        oN = oN.substring(0, oN.lastIndexOf("."));
        String webPath = rootWebPath + "/" + currentDirName + "/" + fileName;
        meta = new FileMeta(oN, fileType, filePath, webPath, item.getSize());
        java.io.File file = new java.io.File(filePath);
        item.write(file);
        item.delete();
        props.put("nextFileIndex", nextFileIndex + 1 + "");
        props.store(new FileOutputStream((rootFilePath + System.getProperty("file.separator") + "file.properties")), "");
        filePropertiesMap.put(rootFilePath, props);
    } catch (Exception e) {
        logger.error("gen File error:" + e, e);
        throw new RuntimeException(e);
    } finally {
        item.delete();
    }
    return meta;
}
