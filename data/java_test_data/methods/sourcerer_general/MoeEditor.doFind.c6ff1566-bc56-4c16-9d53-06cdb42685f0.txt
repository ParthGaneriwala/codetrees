// --------------------------------------------------------------------
boolean doFind(String s, boolean ignoreCase, boolean wholeWord, boolean wrap) {
    int docLength = document.getLength();
    int startPosition = currentTextPane.getCaretPosition();
    int endPos = docLength;
    boolean found = false;
    boolean finished = false;
    // first line searched starts from current caret position
    int start = startPosition;
    Element line = getLineAt(start);
    int lineEnd = Math.min(line.getEndOffset(), endPos);
    // following lines search from start of line
    try {
        while (!found && !finished) {
            String lineText = document.getText(start, lineEnd - start);
            if (lineText != null && lineText.length() > 0) {
                int foundPos = findSubstring(lineText, s, ignoreCase, wholeWord, false);
                if (foundPos != -1) {
                    currentTextPane.select(start + foundPos, start + foundPos + s.length());
                    currentTextPane.getCaret().setSelectionVisible(true);
                    found = true;
                }
            }
            if (lineEnd >= endPos) {
                if (wrap) {
                    // do the wrapping
                    endPos = startPosition;
                    line = document.getParagraphElement(0);
                    start = line.getStartOffset();
                    lineEnd = Math.min(line.getEndOffset(), endPos);
                    wrap = false;
                // don't wrap again
                } else {
                    finished = true;
                }
            } else {
                // go to next line
                line = document.getParagraphElement(lineEnd + 1);
                start = line.getStartOffset();
                lineEnd = Math.min(line.getEndOffset(), endPos);
            }
        }
    } catch (BadLocationException ex) {
        Debug.message("error in editor find operation");
    }
    return found;
}
