public void layoutContainer(Container parent) {
    initialize(parent);
    // Specify absolute sizes
    initSizes(parent);
    // Lay out components
    int currentColumn = 0;
    int currentRow = 0;
    int x = getStartX(parent);
    int y = getStartY(parent);
    TableCell cell;
    int[] used = new int[columnCount];
    for (int i = 0; i < parent.getComponentCount(); i++) {
        if (currentColumn >= columnCount) {
            y += getRow(currentRow).getHeight();
            currentColumn = 0;
            x = getStartX(parent);
            currentRow++;
        }
        if (used[currentColumn] > 0) {
            used[currentColumn]--;
            x += getColumn(currentColumn).getWidth();
            currentColumn++;
            i--;
            // System.out.println("Current: " + currentColumn + ", " + currentRow + " - " + used[currentColumn]);
            continue;
        }
        cell = getCell(parent.getComponent(i));
        int width = 0;
        for (int j = 0; j < cell.getColumnSpan(); j++) {
            width += getColumn(currentColumn + j).getWidth();
        }
        int height = 0;
        for (int j = 0; j < cell.getRowSpan(); j++) {
            height += getRow(currentRow + j).getHeight();
        }
        // TODO fix problem where rowspan pushes item to new row and row height is not initialized
        used[currentColumn] = cell.getRowSpan() - 1;
        cell.layout(x, y, width, height);
        x += getColumn(currentColumn).getWidth();
        currentColumn += cell.getColumnSpan();
    }
}
