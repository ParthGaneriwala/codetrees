public void nextClicked() {
    // set all the feasibility back to normal
    iFeasableToProceed = true;
    iNotFeasableReason = null;
    if (iParent.getRoverSources().size() == 1) {
        // Set the database type
        if (uniprotRadioButton.isSelected()) {
            iParent.setDatabaseType(ProteinDatabaseType.UNIPROT);
        }
        if (IPIRadioButton.isSelected()) {
            iParent.setDatabaseType(ProteinDatabaseType.IPI);
        }
        if (NCBIRadioButton.isSelected()) {
            iParent.setDatabaseType(ProteinDatabaseType.NCBI);
        }
        if (TAIRRadioButton.isSelected()) {
            iParent.setDatabaseType(ProteinDatabaseType.TAIR);
        }
        if (localRadioButton.isSelected()) {
            File lFasta = new File(txtFasta.getText());
            if (!lFasta.exists()) {
                // fasta file was not found
                iFeasableToProceed = false;
                iNotFeasableReason = "Fasta protein database not found.";
                return;
            } else {
                iParent.setFastaDatabase(txtFasta.getText());
                iParent.setDatabaseType(ProteinDatabaseType.LOCAL);
            }
        }
        if (nonOfTheAboveRadioButton.isSelected()) {
            iParent.setDatabaseType(ProteinDatabaseType.UNKNOWN);
        }
        // get the reference set size
        int lReferenceSetSize = (Integer) spinReference.getValue();
        boolean lUseAllProteins = allProteinsRadioButton.isSelected();
        iParent.setUseAllProteinsForReferenceSet(lUseAllProteins);
        iParent.setReferenceSetSize(lReferenceSetSize);
        // set RatioValidInReferenceSet
        iParent.setRatioValidInReferenceSet(chbValidInReferenceSet.isSelected());
        // set the peptizer status
        iParent.setPeptizerStatus(chbExcludePeptizer.isSelected());
        // set the msf peptide confidence level
        if (highRadioButton.isSelected()) {
            iParent.setMsfPeptideConfidence(3);
        } else if (mediumRadioButton.isSelected()) {
            iParent.setMsfPeptideConfidence(2);
        } else if (lowRadioButton.isSelected()) {
            iParent.setMsfPeptideConfidence(1);
        }
        if (onlyHighestScoringRadioButton.isSelected()) {
            iParent.setMsfOnlyHighesScoring(true);
        } else {
            iParent.setMsfOnlyHighesScoring(false);
        }
        // Set the calibrated SD
        double lCalibratedSD = 0.0;
        try {
            // check if the calibrated SD is a double
            lCalibratedSD = Double.valueOf(txtCalibratedSD.getText());
            iParent.setCalibratedStdev(lCalibratedSD);
        } catch (Exception e) {
            iFeasableToProceed = false;
            iNotFeasableReason = "\"" + txtCalibratedSD.getText() + "\" is not a correct standard deviation.";
            return;
        }
    }
    if (!iParent.getUseMs_lims()) {
        iParent.addThreshold((Double) spinConfidence.getValue());
    } else {
        iParent.addThreshold(0.05);
    }
}
