public final void mAT_WORD(boolean _createToken) throws RecognitionException, CharStreamException, TokenStreamException {
    int _ttype;
    Token _token = null;
    int _begin = text.length();
    _ttype = AT_WORD;
    int _saveIndex;
    Token a = null;
    boolean synPredMatched85 = false;
    if (((LA(1) == '@') && (LA(2) == 'p') && (LA(3) == 'r'))) {
        int _m85 = mark();
        synPredMatched85 = true;
        inputState.guessing++;
        try {
            {
                mAT(false);
                match("prefix");
            }
        } catch (RecognitionException pe) {
            synPredMatched85 = false;
        }
        rewind(_m85);
        inputState.guessing--;
    }
    if (synPredMatched85) {
        mAT(false);
        match("prefix");
        if (inputState.guessing == 0) {
            _ttype = AT_PREFIX;
        }
    } else {
        boolean synPredMatched88 = false;
        if (((LA(1) == '@') && (_tokenSet_1.member(LA(2))) && (true))) {
            int _m88 = mark();
            synPredMatched88 = true;
            inputState.guessing++;
            try {
                {
                    mAT(false);
                    {
                        mALPHA(false);
                    }
                }
            } catch (RecognitionException pe) {
                synPredMatched88 = false;
            }
            rewind(_m88);
            inputState.guessing--;
        }
        if (synPredMatched88) {
            mAT(false);
            {
                int _cnt_a = 0;
                a: do {
                    if ((_tokenSet_1.member(LA(1)))) {
                        mALPHA(false);
                    } else {
                        if (_cnt_a >= 1) {
                            break a;
                        } else {
                            throw new NoViableAltForCharException((char) LA(1), getFilename(), getLine(), getColumn());
                        }
                    }
                    _cnt_a++;
                } while (true);
            }
            {
                if ((LA(1) == '-')) {
                    match("-");
                    {
                        _loop93: do {
                            if ((_tokenSet_1.member(LA(1)))) {
                                mALPHA(false);
                            } else {
                                break _loop93;
                            }
                        } while (true);
                    }
                } else {
                }
            }
            if (inputState.guessing == 0) {
                _ttype = AT_LANG;
            }
        } else {
            throw new NoViableAltForCharException((char) LA(1), getFilename(), getLine(), getColumn());
        }
    }
    if (_createToken && _token == null && _ttype != Token.SKIP) {
        _token = makeToken(_ttype);
        _token.setText(new String(text.getBuffer(), _begin, text.length() - _begin));
    }
    _returnToken = _token;
}
