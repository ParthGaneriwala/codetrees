private void sendRequest(URL url, String method, HttpResponse rtnVal) {
    if (debug)
        System.out.println("[Checkweb: sendRequest] started with " + method + " to " + url);
    if (method == null || !(method.equalsIgnoreCase("get") || method.equalsIgnoreCase("head"))) {
        System.out.println("[Checkweb: sendRequest] supported only GET or HEAD");
        return;
    }
    if (debug)
        System.out.println("[Checkweb: sendRequest] getPort: " + url.getPort());
    int port = url.getPort();
    if (port < 0) {
        port = 80;
    }
    if (debug)
        System.out.println("[Checkweb: sendRequest] port: " + port);
    if (debug)
        System.out.print("-----< REQUEST >---------------------------------");
    if (debug)
        System.out.println("-----------------------------------------------");
    System.out.println(" <" + method + "> : " + url.toString());
    try {
        this.socket = new Socket();
        this.socket.connect(new InetSocketAddress(url.getHost(), port));
        if (!this.socket.isConnected()) {
            System.out.println(" =====>   Failed - connection can not be established: host=" + url.getHost() + ", port=" + port);
            return;
        }
        if (debug)
            System.out.println("[Checkweb: sendRequest] connection established to " + url.getHost());
        this.input = new BufferedReader(new InputStreamReader(this.socket.getInputStream()));
        this.output = new PrintStream(this.socket.getOutputStream());
        if (debug)
            System.out.println("[Checkweb: sendRequest] sending request: " + method + " for " + url.toString());
        output.println(method + " " + url.toString() + " HTTP/1.1");
        output.println("Host: " + url.getHost());
        output.println("Connection: close");
        output.println();
        if (debug)
            System.out.println("[Checkweb: sendRequest] waiting for header");
        StringBuffer headerBuffer = new StringBuffer();
        String line;
        if (debug)
            System.out.print("-----< RESPONSE >--------------------------------");
        if (debug)
            System.out.println("-----------------------------------------------");
        while ((line = input.readLine()) != null && !line.equals("")) {
            if (debug)
                System.out.println(line);
            headerBuffer.append(line + System.getProperty("line.separator"));
        }
        this.parseHeader(headerBuffer.toString(), rtnVal);
        if (method.equalsIgnoreCase("get") && rtnVal.getContentType().equalsIgnoreCase("text/html") && rtnVal.getRtnCode() == 200) {
            if (debug)
                System.out.println("[Checkweb: sendRequest] waiting for contents");
            if (debug)
                System.out.print("-----< CONTENTS >--------------------------------");
            if (debug)
                System.out.println("-----------------------------------------------");
            StringBuffer contentBuffer = new StringBuffer();
            while ((line = input.readLine()) != null) {
                contentBuffer.append(line);
            // if (debug) System.out.println(line);
            }
            this.parseContents(url, contentBuffer.toString(), rtnVal);
            if (debug)
                System.out.print("-------------------------------------------------");
            if (debug)
                System.out.println("-----------------------------------------------");
        }
    } catch (IOException e) {
        System.out.println(" =====>   Failed - connection can not be established: host=" + url.getHost() + ", port=" + port);
        if (debug)
            e.printStackTrace();
        return;
    } catch (Exception e) {
        System.out.println(" =====>   Failed - unexpected error occurred");
        if (debug)
            e.printStackTrace();
        return;
    } finally {
        if (debug)
            System.out.println("[Checkweb: sendRequest] completed receiving response");
        this.shutdown();
    }
    if (debug)
        System.out.println("[Checkweb: sendRequest] closed socket");
    if (debug)
        System.out.println("[Checkweb: sendRequest] ended");
}
