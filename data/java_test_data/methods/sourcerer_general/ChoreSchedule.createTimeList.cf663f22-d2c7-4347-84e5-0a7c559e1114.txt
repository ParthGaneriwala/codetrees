// FINISH THIS
public void createTimeList() {
    String[] retStrings = new String[0];
    if (ScheduleTypes.TimeTypes.annual == scheduleData.getTimeType()) {
        // OTHERWISE, JUST ADD THE TIME TO THE START OF THE DAY (0)
        try {
            java.util.List<String> returnList = new java.util.Vector<String>();
            // Create calendars
            Calendar checkCal = Calendar.getInstance();
            Calendar addCal = Calendar.getInstance();
            // Set addCal's time to the beginning of the day
            addCal.setTime(new SimpleDateFormat("HH:mm").parse("00:00"));
            String[] annualHours = scheduleData.getScheduledTime();
            final int ahCount = annualHours.length;
            // CURRENTLY, OUR GUI ONLY ALLOWS THE USER TO ENTER 1 ANNUAL VALUE
            for (int i = 0; i < ahCount; i++) {
                Date addHours = new SimpleDateFormat("HH:mm").parse(annualHours[i]);
                // Add the dates (and get the actual time) until we roll over into a new day
                do {
                    checkCal.setTime(addHours);
                    addCal.add(Calendar.HOUR_OF_DAY, checkCal.get(Calendar.HOUR_OF_DAY));
                    addCal.add(Calendar.MINUTE, checkCal.get(Calendar.MINUTE));
                    // format the date w/ the added hours
                    SimpleDateFormat formatter = new SimpleDateFormat("HH:mm");
                    // put the date into the string vector
                    returnList.add(formatter.format(addCal.getTime()));
                } while (checkCal.get(Calendar.DAY_OF_MONTH) == addCal.get(Calendar.DAY_OF_MONTH));
                // Instead of doing a check each time, we'll just remove the last item
                // which will always be past the time
                returnList.remove(returnList.size() - 1);
            }
            // turn the vector into a string array
            retStrings = returnList.toArray(new String[0]);
        } catch (Exception e) {
            System.err.println("Error in ChoreSchedule.getTimeList()");
            System.err.println(e);
        }
    } else if (ScheduleTypes.TimeTypes.specific == scheduleData.getTimeType()) {
        retStrings = scheduleData.getScheduledTime();
    }
    timeList = retStrings;
    retStrings = null;
}
