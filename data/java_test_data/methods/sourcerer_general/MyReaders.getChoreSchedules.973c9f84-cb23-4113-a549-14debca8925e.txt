public ChoreSchedule[] getChoreSchedules(int matchMonth, int matchYear) throws IOException, ZipException {
    ChoreSchedule[] choreSchedules = new ChoreSchedule[0];
    // Open our zip file
    ZipFile zip = new ZipFile(databaseFile);
    // Get the entries for the xml files
    ZipEntry choreEntry = zip.getEntry("chores.xml");
    ZipEntry schedEntry = zip.getEntry("schedules.xml");
    // Create streams from the zip entries
    InputStream choreStream = zip.getInputStream(choreEntry);
    InputStream schedStream = zip.getInputStream(schedEntry);
    try {
        // Create XML parser
        XMLReader parser = XMLReaderFactory.createXMLReader();
        // Create instance of ScheduleReader and get any scheduled items that match the year/month
        ScheduleReader schedReader = new ScheduleReader(matchMonth, matchYear);
        parser.setContentHandler(schedReader);
        parser.parse(new InputSource(schedStream));
        // Get the ChoreSchedule vector, and convert it to an array
        choreSchedules = schedReader.getChoreSchedules().toArray(new ChoreSchedule[0]);
        // If we found any scheduled items, we'll create an instance of ChoreReader.  We'll then
        // pass in the ChoreDataWrapper array to it, and it'll match the Chore to the Schedule,
        // and put the chore details in the ChoreData object
        ChoreReader choreReader = null;
        if (choreSchedules.length > 0) {
            choreReader = new ChoreReader(choreSchedules);
            parser.setContentHandler(choreReader);
            parser.parse(new InputSource(choreStream));
        }
        // Cleanup
        choreStream.close();
        schedStream.close();
        zip = null;
        choreEntry = null;
        schedEntry = null;
        parser = null;
        schedReader = null;
        choreReader = null;
    }// ignore them all together
     catch (SAXException se) {
    // System.err.println("Error in MyReaders.getChoreSchedules()");
    // System.err.println(se);
    } finally {
        return choreSchedules;
    }
}
