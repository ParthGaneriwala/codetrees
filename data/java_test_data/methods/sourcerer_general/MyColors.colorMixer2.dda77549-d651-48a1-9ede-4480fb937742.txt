public static Color colorMixer2(Color c1, Color c2) {
    double d13;
    double d1 = 1.0D - (c1.getRed() / 255.0D);
    double d2 = 1.0D - (c2.getRed() / 255.0D);
    double d3 = 1.0D - (c1.getGreen() / 255.0D);
    double d4 = 1.0D - (c2.getGreen() / 255.0D);
    double d5 = 1.0D - (c1.getBlue() / 255.0D);
    double d6 = 1.0D - (c2.getBlue() / 255.0D);
    double d7 = percentWhite(d1, d3, d5);
    double d8 = percentWhite(d2, d4, d6);
    double d9 = (d7 + d8) / 2.0D;
    double d10 = d1 + d2;
    double d11 = d3 + d4;
    double d12 = d5 + d6;
    if (d9 > 0.0D) {
        d13 = Math.max(Math.max(d10, d11), d12);
        d13 = (1.0D - d9) / d13;
        d10 *= d13;
        d11 *= d13;
        d12 *= d13;
    }
    if ((d10 > 1.0D) || (d12 > 1.0D) || (d11 > 1.0D)) {
        d13 = Math.max(Math.max(d10, d11), d12);
        d10 /= d13;
        d11 /= d13;
        d12 /= d13;
    }
    int i1 = (int) (255.0D - (d10 * 255.0D));
    int i2 = (int) (255.0D - (d11 * 255.0D));
    int i3 = (int) (255.0D - (d12 * 255.0D));
    return new Color(i1, i2, i3);
}
