public synchronized void paintOver() {
    Dimension tmpdim = getSize();
    if (tmpdim.width != windowSize_.width || tmpdim.height != windowSize_.height) {
        // Maintain the center point.
        if (// not first time
        windowSize_.width > 0) {
            setOffsets_(offset_.x + (tmpdim.width - windowSize_.width) / 2, offset_.y + (tmpdim.height - windowSize_.height) / 2);
        } else // initialize to centered
        {
            setOffsets_(.5 * (tmpdim.width - (minx_ + maxx_) * scale_), .5 * (tmpdim.height - (miny_ + maxy_) * scale_));
        }
        windowSize_.width = tmpdim.width;
        windowSize_.height = tmpdim.height;
        // post an event indicating a size change
        getParent().postEvent(new Event((Object) this, RESIZE, (Object) this));
        // Force recreation of back buffer.
        backImage_ = null;
    }
    if (backImage_ == null)
        backImage_ = createImage(windowSize_.width, windowSize_.height);
    Graphics back_graphics = getBackGraphics_();
    back_graphics.setColor(Color.white);
    back_graphics.setPaintMode();
    back_graphics.clearRect(0, 0, windowSize_.width, windowSize_.height);
    back_graphics.setColor(Color.black);
    drawAxes_(back_graphics);
    drawObjects_(false, back_graphics, 1);
    back_graphics.dispose();
    Graphics graphics = getGraphics();
    graphics.setPaintMode();
    graphics.setColor(Color.black);
    graphics.drawImage(backImage_, 0, 0, null);
    // Draw selected objects directly to screen.
    graphics.setFont(font_);
    drawObjects_(true, graphics, 0);
    graphics.dispose();
}
