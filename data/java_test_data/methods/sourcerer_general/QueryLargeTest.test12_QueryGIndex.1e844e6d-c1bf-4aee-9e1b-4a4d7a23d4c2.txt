public void test12_QueryGIndex() throws Exception {
    Query.indexTables(Utils.MAX_MEM);
    Date c1 = new Date(88, 1, 1);
    Comparable[] result;
    Comparable[] inputQueryG;
    // OrderKey does not exists
    inputQueryG = new Comparable[] { -1, 4189, 12121212, 45454, 88, (float) 100.44, (float) 0.8, (float) 9.9, "R", "S", c1, c1, c1, "shipinstruct", "shipmode", "comment" };
    result = Query.QueryGIndex(inputQueryG, Utils.MAX_MEM);
    Assert.assertEquals(new Boolean(false), result[0]);
    Assert.assertEquals(new Integer(1), result[3]);
    // Partkey does not exists
    inputQueryG = new Comparable[] { 807, -1, 12121212, 45454, 88, (float) 100.44, (float) 0.8, (float) 9.9, "R", "S", c1, c1, c1, "shipinstruct", "shipmode", "comment" };
    result = Query.QueryGIndex(inputQueryG, Utils.MAX_MEM);
    Assert.assertEquals(new Boolean(true), result[0]);
    Assert.assertEquals(new Boolean(false), result[1]);
    Assert.assertEquals(new Integer(1), result[3]);
    // PK in Lineitem already exists.
    inputQueryG = new Comparable[] { 800, 4189, 12121212, 1, 88, (float) 100.44, (float) 0.8, (float) 9.9, "R", "S", c1, c1, c1, "shipinstruct", "shipmode", "comment" };
    result = Query.QueryGIndex(inputQueryG, Utils.MAX_MEM);
    Assert.assertEquals(new Boolean(true), result[0]);
    Assert.assertEquals(new Boolean(true), result[1]);
    Assert.assertEquals(new Boolean(true), result[2]);
    Assert.assertEquals(new Integer(1), result[3]);
    // it works.
    inputQueryG = new Comparable[] { 807, 4189, 12121212, // make sure this is unique!
    new Lineitem().getNbRecords() + 1, 88, (float) 100.44, (float) 0.8, (float) 9.9, "R", "S", c1, c1, c1, "shipinstruct", "shipmode", "comment" };
    result = Query.QueryG(inputQueryG, Utils.MAX_MEM);
    Assert.assertEquals(new Boolean(true), result[0]);
    Assert.assertEquals(new Boolean(true), result[1]);
    Assert.assertEquals(new Boolean(false), result[2]);
    Assert.assertEquals(new Integer(2), result[3]);
}
