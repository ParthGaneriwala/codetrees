protected void addSelections() {
    TreeItem[] items = tree.getSelection();
    String uri = null;
    Location loc = null;
    boolean addLocationClickedOn = false, newLocation = false;
    if (items.length > 0 && items[0].getData() instanceof edu.lehigh.mab305.swproj.Topics.HierarchyStringTreeNode) {
        // s = ((edu.lehigh.mab305.swproj.Topics.HierarchyStringTreeNode) items[0].getData()).getData();
        if (locationController.getModel() != null && items[0].getData() != null) {
            // Find out what the location type the user clicked on
            String typeURI = OWLUtil.getLocationType(locationController.getModel(), items[0].getData().toString());
            if (typeURI != null && (typeURI.equals(Conference.COUNTRY) || typeURI.equals(Conference.PROVINCE) || typeURI.equals(Conference.STATE))) {
                NewLocationController newLocController = new NewLocationController(getController().getController());
                NewLocationDialog dialog = new NewLocationDialog(newLocController, "Create a new city within this location?");
                dialog.open();
                if (items[0].getData() != null && dialog.getLocationName() != null) {
                    Model m;
                    Resource locRes;
                    loc = new Location(items[0].getData().toString(), typeURI, dialog.getLocationURI());
                    loc.setDisplayName(dialog.getLocationName());
                    setNewLocation(loc);
                    // Add the axiom to the location controller's model
                    m = locationController.getModel();
                    locRes = m.createResource(loc.getLocationURI());
                    m.add(m.createStatement(locRes, RDF.type, m.getResource(Conference.CITY)));
                    // Add the label name
                    m.add(m.createStatement(locRes, RDFS.label, m.createResource(dialog.getLocationName())));
                    // Add the isIn property
                    m.add(m.createStatement(locRes, m.getProperty(Conference.IS_IN_URI), m.createResource(items[0].getData().toString())));
                    /*lstSelectedLocation.removeAll();
							 lstSelectedLocation.add(dialog.getLocationName(), "");*/
                    treeSelectedLocation.removeAll();
                    uri = loc.getLocationURI();
                    newLocation = true;
                } else {
                    uri = ((HierarchyStringTreeNode) items[0].getData()).getData();
                    /*lstSelectedLocation.removeAll();
							 lstSelectedLocation.add(items[0].getText(), uri);*/
                    treeSelectedLocation.removeAll();
                }
            } else {
                addLocationClickedOn = true;
            }
        }
        if (addLocationClickedOn) {
            uri = ((HierarchyStringTreeNode) items[0].getData()).getData();
            /*lstSelectedLocation.removeAll();
					 lstSelectedLocation.add(items[0].getText(), uri);*/
            treeSelectedLocation.removeAll();
        }
        if (uri != null && uri.length() > 0) {
            if (newLocation) {
                setConferenceLocationInternal(uri, loc);
            } else {
                setConferenceLocationInternal(uri);
            }
        }
    }
    expandAll(treeSelectedLocation);
}
