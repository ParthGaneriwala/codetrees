private void readMethodDef(ArrayList<Byte> file, int off, ArrayList<Integer> all_rows, ArrayList<Integer> heapRows) {
    int rva = 0, name = 0, signature = 0, paramlist = 0;
    short implflags = 0, flags = 0;
    StreamTableRow str;
    int i;
    size = 0;
    for (i = 0; i < numrows; i++) {
        rva = Tools.MakeInt(file, off + size);
        implflags = Tools.MakeShort(file, off + size + 4);
        flags = Tools.MakeShort(file, off + size + 6);
        size += 8;
        if (heapRows.get(CLELConstants.STRINGS_INDEX) < 0xffff) {
            name = (int) Tools.MakeShort(file, off + size);
            size += 2;
        } else {
            name = Tools.MakeInt(file, off + size);
            size += 4;
        }
        if (heapRows.get(CLELConstants.BLOB_INDEX) < 0xffff) {
            signature = (int) Tools.MakeShort(file, off + size);
            size += 2;
        } else {
            signature = Tools.MakeInt(file, off + size);
            size += 4;
        }
        if (all_rows.get(CLELConstants.PARAM_TABLE) < 0xffff) {
            paramlist = (int) Tools.MakeShort(file, off + size);
            size += 2;
        } else {
            paramlist = Tools.MakeInt(file, off + size);
            size += 4;
        }
        str = new StreamTableRow(CLELConstants.METHODDEF_TABLE, rva, implflags, flags, name, signature, paramlist);
        rows.add(str);
    }
}
