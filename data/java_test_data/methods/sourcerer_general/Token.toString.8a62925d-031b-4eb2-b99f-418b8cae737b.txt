public String toString() {
    StringBuffer sb = new StringBuffer();
    switch(tokenType) {
        case COMMENT:
            sb.append("COMMENT: ");
            break;
        case OPEN_CURLY_BRACKET:
            sb.append("OPEN_CURLY_BRACKET: ");
            break;
        case CLOSE_CURLY_BRACKET:
            sb.append("CLOSE_CURLY_BRACKET: ");
            break;
        case IDENT:
            sb.append("IDENT: ");
            break;
        case WHITE_SPACE:
            sb.append("WHITE_SPACE: ");
            break;
        case EOF:
            sb.append("EOF: ");
            break;
        case ERROR:
            sb.append("ERROR: ");
            break;
        case STRING:
            sb.append("STRING: ");
            break;
        case RULE_BASE:
            sb.append("RULE_BASE: ");
            break;
        case RULE:
            sb.append("RULE: ");
            break;
        case EXTENDS:
            sb.append("EXTENDS: ");
            break;
        case DECLARATIONS:
            sb.append("DECLARATIONS: ");
            break;
        case SEMICOLON:
            sb.append("SEMICOLON: ");
            break;
        case COMMA:
            sb.append("COMMA: ");
            break;
        case CONDITIONS:
            sb.append("CONDITIONS: ");
            break;
        case ACTIONS:
            sb.append("ACTIONS: ");
            break;
        case IMPORT:
            sb.append("IMPORT: ");
            break;
        case DOT:
            sb.append("DOT: ");
            break;
        case ASTERISK:
            sb.append("ASTERISK: ");
            break;
        case LOCALDECL:
            sb.append("LOCALDECL: ");
            break;
        case EQUALS:
            sb.append("EQUALS: ");
            break;
        case PUBLIC:
            sb.append("PUBLIC: ");
            break;
        case PACKAGE:
            sb.append("PACKAGE: ");
            break;
        case IMPLEMENTS:
            sb.append("IMPLEMENTS: ");
            break;
        default:
            sb.append("NONE_ABOVE: ");
            break;
    }
    sb.append(lexeme);
    return sb.toString();
}
