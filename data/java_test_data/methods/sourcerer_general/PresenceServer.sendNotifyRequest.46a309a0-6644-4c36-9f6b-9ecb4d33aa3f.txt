protected void sendNotifyRequest(Subscriber subscriber) {
    if (logger.isDebugEnabled()) {
        logger.debug("PresenceServer:sendNotifyRequest to " + subscriber.getSubscriberURL());
    }
    try {
        HeaderFactory hf = proxy.getHeaderFactory();
        MessageFactory mf = proxy.getMessageFactory();
        Dialog dialog = subscriber.getDialog();
        if (dialog == null) {
            logger.debug("PresenceServer:sendNotifyRequest: dialog doesn't exist, nothing sent");
            return;
        }
        // First perform some checks
        String subscriptionState = subscriber.getSubscriptionState();
        String notifyBody = subscriber.removeNotifyBody();
        if (notifyBody == null || notifyBody.equals("")) {
            if (!subscriptionState.equalsIgnoreCase("terminated")) {
                logger.debug("PresenceServer:sendNotifyRequest: " + "   NotifyBody is null \n" + "   subscriptionState = " + subscriptionState + "   Nothing sent");
                return;
            }
        }
        // Create the Notify request and add som headers
        Request notify = dialog.createRequest(Request.NOTIFY);
        // Add Event Header
        notify.addHeader(hf.createEventHeader("presence"));
        // Create SubscriptionState Header (add later)
        SubscriptionStateHeader ssH = hf.createSubscriptionStateHeader(subscriptionState);
        if ((subscriptionState.equalsIgnoreCase(SubscriptionStateHeader.ACTIVE)) || (subscriptionState.equalsIgnoreCase(SubscriptionStateHeader.PENDING))) {
            // Add expires parameter to Subscription state header
            ssH.setExpires(subscriber.getExpiresTime());
            // Add Presence-info and Content-Type Header.
            // The media type should be derived from the Registration request
            ContentTypeHeader ctH = hf.createContentTypeHeader("application", "pidf+xml");
            notify.setContent(notifyBody, ctH);
        // Add Authorization Header?
        } else {
            logger.debug("subscription state is " + subscriptionState);
        }
        // Add SubscriptionStateHeader
        notify.addHeader(ssH);
        ClientTransaction clientTransaction = proxy.getSipProvider().getNewClientTransaction(notify);
        // Send Notify
        dialog.sendRequest(clientTransaction);
        if (logger.isDebugEnabled()) {
            logger.debug("PresenceServer:sendNotifyRequest. Request sent: \n" + notify.toString());
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
