@SuppressWarnings("static-access")
public void SendMail2(String title, String attachment) {
    // ������ԣ�������Session����
    Properties props = new Properties();
    Session sendsession;
    Transport transport;
    MimeMessage message = null;
    BodyPart messageBodyPart = new MimeBodyPart();
    Multipart multipart = new MimeMultipart();
    String from = "fengl@139.com";
    String[] to = { "fengl@163.com" };
    String[] cc = { "281@qq.com" };
    String[] bcc = { "281@qq.com" };
    String content = "<font style=\"BACKGROUND-COLOR: #666699\" color=\"#ff0000\" size=\"5\">���Ը�ʽ�����ݲ���<a href=\"\">��ʽ������</a>���Ը�<em>ʽ��</em>����</font>";
    try {
        sendsession = Session.getInstance(props, null);
        // ��������д��SMTP�������ĵ�ַ
        props.put("mail.smtp.host", "smtp.139.com");
        // ����SMTP��������ҪȨ����֤
        props.put("mail.smtp.auth", "true");
        // �������������Ϣ
        // sendsession.setDebug(true);
        // ����Session����Message����
        message = new MimeMessage(sendsession);
        // ���÷����˵�ַ
        message.setFrom(new InternetAddress(from));
        // ���������˵�ַ
        String toList = getMailList(to);
        InternetAddress[] iaToList = new InternetAddress().parse(toList);
        message.setRecipients(Message.RecipientType.TO, iaToList);
        if (cc != null) {
            String ccList = this.getMailList(cc);
            InternetAddress[] iaCCList = new InternetAddress().parse(ccList);
            message.setRecipients(Message.RecipientType.CC, iaCCList);
        }
        if (bcc != null) {
            String bccList = this.getMailList(bcc);
            InternetAddress[] iaBCCList = new InternetAddress().parse(bccList);
            message.setRecipients(Message.RecipientType.BCC, iaBCCList);
        }
        // ����e-mail����
        message.setSubject(title);
        // ����e-mail����ʱ��
        message.setSentDate(new Date());
        // ����e-mail����
        message.setText(content);
        // ������һ���֣��ı�����
        // ��BodyPart�����������ݺ͸�ʽ/���뷽ʽ
        messageBodyPart.setContent(content, "text/html;charset=gbk");
        multipart.addBodyPart(messageBodyPart);
        if (!attachment.equals("")) {
            // �����ڶ����֣�����
            messageBodyPart = new MimeBodyPart();
            // ��ø���
            DataSource source = new FileDataSource(attachment);
            // ���ø��������ݴ�����
            messageBodyPart.setDataHandler(new DataHandler(source));
            // ���ø����ļ���
            messageBodyPart.setFileName(attachment);
            // ����ڶ�����
            multipart.addBodyPart(messageBodyPart);
        }
        // ���ಿ�����ݷŵ�e-mail��
        message.setContent(multipart);
        // �������e-mail���޸�
        message.saveChanges();
        // ����Session����Transport����
        transport = sendsession.getTransport("smtp");
        // ���ӵ�SMTP������
        transport.connect("smtp.139.com", "fengl", "fe103");
        // ����e-mail
        transport.sendMessage(message, message.getAllRecipients());
        // �ر�Transport����
        transport.close();
    } catch (MessagingException m) {
        System.out.println(m.toString());
    } catch (Exception e) {
        e.printStackTrace();
    }
}
