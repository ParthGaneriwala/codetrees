private void RemplirCamion(long CVolumeOcc, Conteneur c_courant) {
    /* annulation du calcul */
    if (programme.fenetre.fp.Arret == true)
        return;
    Tranche t_courante;
    ArrayList<Cote> tabCotesTranche;
    long tmpVolOcc;
    tabCotesTranche = new ArrayList<Cote>();
    tabCotesTranche = Divers.Cote_la_plus_courante(EnsColis, new Volume(c_courant.dim_l, c_courant.dim_h, c_courant.dim_p_restant), 1);
    for (int i = 0; i < this.e; i++) {
        if (tabCotesTranche.size() > i && c_courant.dim_p_restant > 0) {
            /* Creation d'une nouvelle tranche */
            t_courante = new Tranche(c_courant.dim_l, tabCotesTranche.get(i).val, c_courant.dim_h);
            /* Remplissage */
            this.b_tabMeilleure.clear();
            BMeilleurVolumeOcc = 0;
            RemplirTranche(0, t_courante);
            /* on ajoute au container */
            Divers.CopierBandes(this.b_tabMeilleure, t_courante.tabBande);
            c_courant.ajouterTranche(t_courante);
            for (int k = 0; k < t_courante.tabBande.size(); k++) for (int m = 0; m < t_courante.tabBande.get(k).tabColis.size(); m++) EnsColis.get(t_courante.tabBande.get(k).tabColis.get(m).id).libre = false;
            tmpVolOcc = t_courante.get_volumeocc();
            /* on rappel la fonction */
            RemplirCamion(CVolumeOcc + tmpVolOcc, c_courant);
            /* liberation des colis de la derniere tranche */
            for (int k = 0; k < c_courant.tabTranche.get(c_courant.tabTranche.size() - 1).tabBande.size(); k++) for (int m = 0; m < c_courant.tabTranche.get(c_courant.tabTranche.size() - 1).tabBande.get(k).tabColis.size(); m++) EnsColis.get(c_courant.tabTranche.get(c_courant.tabTranche.size() - 1).tabBande.get(k).tabColis.get(m).id).libre = true;
            /* suppression de la tranche */
            c_courant.dim_p_restant += c_courant.tabTranche.get(c_courant.tabTranche.size() - 1).dim_p;
            c_courant.tabTranche.remove(c_courant.tabTranche.size() - 1);
        } else {
            if (c_courant.tabTranche.size() > 0)
                c_courant.tabTranche.get(c_courant.tabTranche.size() - 1).dim_p += c_courant.dim_p_restant;
            else
                c_courant.ajouterTranche(c_courant.dim_p_restant);
            c_courant.dim_p_restant = 0;
            tmpVolOcc = 0;
            break;
        }
    }
    /* Sauvegarde */
    if (CVolumeOcc > TMeilleurVolumeOcc) {
        double pc;
        Divers.CopierTranches(c_courant.tabTranche, this.t_tabMeilleure);
        TMeilleurVolumeOcc = CVolumeOcc;
        pc = (double) ((double) TMeilleurVolumeOcc / (double) (this.cont.get_volume())) * (double) 100;
        if (pc < 0)
            pc = 0;
        programme.fenetre.fp.lblprogression.setText("Rempli a ~" + Math.round(pc) + " %");
    }
}
