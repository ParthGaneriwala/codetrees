public boolean insert(Connection db) throws SQLException {
    if (!isValid()) {
        return false;
    }
    StringBuffer sql = new StringBuffer();
    sql.append("INSERT INTO project_issues " + "(project_id, category_id, subject, message, importance, enabled, solution_reply_id, ");
    if (entered != null) {
        sql.append("entered, ");
    }
    if (modified != null) {
        sql.append("modified, ");
    }
    if (replyDate != null) {
        sql.append("last_reply_date, ");
    }
    sql.append("enteredBy, modifiedBy, " + "reply_count, last_reply_by, question) ");
    sql.append("VALUES (?, ?, ?, ?, ?, ?, ?, ");
    if (entered != null) {
        sql.append("?, ");
    }
    if (modified != null) {
        sql.append("?, ");
    }
    if (replyDate != null) {
        sql.append("?, ");
    }
    sql.append("?, ?, ?, ?, ?) ");
    int i = 0;
    boolean commit = db.getAutoCommit();
    try {
        if (commit) {
            db.setAutoCommit(false);
        }
        // Insert the topic
        PreparedStatement pst = db.prepareStatement(sql.toString());
        pst.setInt(++i, projectId);
        pst.setInt(++i, categoryId);
        pst.setString(++i, subject);
        pst.setString(++i, body);
        DatabaseUtils.setInt(pst, ++i, importance);
        pst.setBoolean(++i, enabled);
        DatabaseUtils.setInt(pst, ++i, solutionReplyId);
        if (entered != null) {
            pst.setTimestamp(++i, entered);
        }
        if (modified != null) {
            pst.setTimestamp(++i, modified);
        }
        if (replyDate != null) {
            DatabaseUtils.setTimestamp(pst, ++i, replyDate);
        }
        pst.setInt(++i, enteredBy);
        pst.setInt(++i, modifiedBy);
        pst.setInt(++i, replyCount);
        DatabaseUtils.setInt(pst, ++i, replyBy);
        pst.setBoolean(++i, question);
        pst.execute();
        pst.close();
        id = DatabaseUtils.getCurrVal(db, "project_issues_issue_id_seq", -1);
        // Update the category count
        i = 0;
        pst = db.prepareStatement("UPDATE project_issues_categories " + "SET topics_count = topics_count + 1, " + "posts_count = posts_count + 1, " + (entered != null ? "last_post_date = ?, " : "last_post_date = " + DatabaseUtils.getCurrentTimestamp(db) + ", ") + "last_post_by = ? " + "WHERE project_id = ? " + "AND category_id = ? ");
        if (entered != null) {
            pst.setTimestamp(++i, entered);
        }
        pst.setInt(++i, modifiedBy);
        pst.setInt(++i, projectId);
        pst.setInt(++i, categoryId);
        pst.executeUpdate();
        pst.close();
        if (attachmentList != null) {
            FileItemList.convertTempFiles(db, Constants.DISCUSSION_FILES_TOPIC, this.getModifiedBy(), id, attachmentList);
        }
        if (commit) {
            db.commit();
        }
    } catch (SQLException e) {
        if (commit) {
            db.rollback();
        }
        throw e;
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
    return true;
}
