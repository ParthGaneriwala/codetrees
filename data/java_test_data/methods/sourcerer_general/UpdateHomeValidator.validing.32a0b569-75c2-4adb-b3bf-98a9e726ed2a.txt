@Override
public void validing(HttpServletRequest request, ValidatedResult vr, String[] params) {
    logger.debug("开始校验");
    HomeManager homeManager = (HomeManager) this.getBean("homeManager");
    Home home = (Home) this.validBaseObjectById(request, vr, homeManager, "id", "记录已经被删除");
    if (home == null) {
        throw new AosftViewFrameException("id为" + request.getParameter("id") + "主页记录已经不存在");
    }
    String name = this.validString(request, vr, "name", 1, 50);
    logger.debug("name : " + name);
    String url = this.validString(request, vr, "url", 0, 200);
    logger.debug("url : " + url);
    String[] tIds = request.getParameterValues("tIds");
    String[] tTypes = request.getParameterValues("tTypes");
    Set orgs = new LinkedHashSet();
    Set roles = new LinkedHashSet();
    Set posts = new LinkedHashSet();
    if (tIds != null && tTypes != null) {
        OrgManager orgManager = (OrgManager) this.getBean("orgManager");
        RoleManager roleManager = (RoleManager) this.getBean("roleManager");
        PostManager postManager = (PostManager) this.getBean("postManager");
        logger.debug("取得orgs - roles - posts");
        for (int i = 0; i < tIds.length; i++) {
            int type = Integer.parseInt(tTypes[i]);
            switch(type) {
                case SysFrameParams.ORG:
                    {
                        orgs.add(orgManager.get(tIds[i]));
                        break;
                    }
                case SysFrameParams.ROLE:
                    {
                        roles.add(roleManager.get(tIds[i]));
                        break;
                    }
                case SysFrameParams.POST:
                    {
                        posts.add(postManager.get(tIds[i]));
                        break;
                    }
                default:
                    {
                        throw new AosftViewFrameException("未知目标类型:" + type);
                    }
            }
        }
    }
    String remark = this.validString(request, vr, "remark", 0, 500);
    logger.debug("remark.length() : " + remark.length());
    if (vr.isAllValidated()) {
        home.setOrgs(orgs);
        home.setRoles(roles);
        home.setPosts(posts);
        home.setName(name);
        home.setUrl(url);
        home.setRemark(remark);
        request.setAttribute(Home.class.getName(), home);
    }
}
