public static Query2 parse(String isFileName, String isQuery) throws FileNotFoundException {
    int type = 0;
    File file = null;
    Comparable[] data = null;
    String[] get;
    if (isFileName.toLowerCase().indexOf("a.sql") >= 0) {
        type = QUERYA;
        file = new File("./Output/QueryA.txt");
        int i1 = isQuery.indexOf("between");
        int i2 = isQuery.indexOf("and");
        data = new Comparable[] { Integer.parseInt(isQuery.substring(i1 + "between".length(), i2).trim()), Integer.parseInt(isQuery.substring(i2 + "and".length()).trim()) };
    } else if (isFileName.toLowerCase().indexOf("b.sql") >= 0) {
        type = QUERYB;
        file = new File("./Output/QueryB.txt");
        int i1 = isQuery.indexOf("like");
        data = new Comparable[] { isQuery.substring(i1).split("\"")[1].trim() };
    } else if (isFileName.toLowerCase().indexOf("c.sql") >= 0 || isFileName.toLowerCase().indexOf("cindex.sql") >= 0) {
        if (isFileName.toLowerCase().indexOf("cindex.sql") >= 0) {
            type = QUERYCIndex;
        } else {
            type = QUERYC;
        }
        file = new File("./Output/QueryC.txt");
        int i2 = isQuery.indexOf("and p_brand =");
        int i3 = isQuery.indexOf("and p_container =");
        data = new Comparable[] { isQuery.substring(i2).split("\"")[1].trim(), isQuery.substring(i3).split("\"")[1].trim() };
    } else if (isFileName.toLowerCase().indexOf("d.sql") >= 0 || isFileName.toLowerCase().indexOf("dindex.sql") >= 0) {
        if (isFileName.toLowerCase().indexOf("dindex.sql") >= 0) {
            type = QUERYDIndex;
        } else {
            type = QUERYD;
        }
        file = new File("./Output/QueryD.txt");
        int i2 = isQuery.indexOf("and r_name =");
        data = new Comparable[] { isQuery.substring(i2).split("\"")[1].trim() };
    } else if (isFileName.toLowerCase().indexOf("e.sql") >= 0 || isFileName.toLowerCase().indexOf("eindex.sql") >= 0) {
        if (isFileName.toLowerCase().indexOf("eindex.sql") >= 0) {
            type = QUERYEIndex;
        } else {
            type = QUERYE;
        }
        file = new File("./Output/QueryE.txt");
        int i2 = isQuery.indexOf("o_comment not like");
        data = new Comparable[] { isQuery.substring(i2).split("\"")[1].trim() };
    } else if (isFileName.toLowerCase().indexOf("f.sql") >= 0 || isFileName.toLowerCase().indexOf("findex.sql") >= 0) {
        if (isFileName.toLowerCase().indexOf("findex.sql") >= 0) {
            type = QUERYFIndex;
        } else {
            type = QUERYF;
        }
        file = new File("./Output/QueryF.txt");
        int i2 = isQuery.indexOf("and l1.l_returnflag=");
        data = new Comparable[] { isQuery.substring(i2).split("\"")[1].trim() };
    } else if (isFileName.toLowerCase().indexOf("g.sql") >= 0 || isFileName.toLowerCase().indexOf("gindex.sql") >= 0) {
        if (isFileName.toLowerCase().indexOf("gindex.sql") >= 0) {
            type = QUERYGIndex;
        } else {
            type = QUERYG;
        }
        file = new File("./Output/QueryG.txt");
        int i2 = isQuery.indexOf("(");
        int i3 = isQuery.indexOf(")");
        try {
            data = new Lineitem().parseString(isQuery.substring(i2 + 1, i3 - 1).trim().split(","));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    return new Query2(type, data, file);
}
