public void mouseDragged(MouseEvent e) {
    CCaptionBar header;
    CTab tab;
    CTabPanel src_panel = null;
    Dock dock;
    JComponent comp = null;
    JComponent drag_dst;
    CTabPanel dst_panel = null;
    boolean in_middle = false;
    boolean in_accept_zone = false;
    boolean panel_move = false;
    boolean detached_drag = true;
    int px = 0, py = 0;
    int ex, ey;
    if (target instanceof CCaptionBar) {
        header = (CCaptionBar) target;
        src_panel = (CTabPanel) header.panel;
        comp = src_panel;
        px = src_panel.getX() + header.getX() + e.getX();
        py = src_panel.getY() + header.getY() + e.getY();
        panel_move = true;
        if (src_panel.page_move_on_header_drag() && src_panel.components.size() > 1) {
            comp = src_panel.current;
            panel_move = false;
        }
    }
    if (target instanceof CTab) {
        tab = (CTab) target;
        src_panel = (CTabPanel) tab.panel;
        comp = tab.component;
        px = src_panel.getX() + src_panel.tab_bar.getX() + tab.getX() + e.getX();
        py = src_panel.getY() + src_panel.tab_bar.getY() + tab.getY() + e.getY();
        panel_move = false;
        detached_drag = false;
    }
    if (src_panel == null)
        return;
    dock = src_panel.dock;
    if (dock == null)
        return;
    if (dock.isMinimized(src_panel))
        return;
    if (dock.isDetached(src_panel)) {
        return;
    }
    drag_dst = dock.findComponentAtPoint(px, py);
    /*
         * If there is no dock component at the drag point (for example, if we 
         * dragged over a splitter or out of the dock) then bail.
         */
    if (drag_dst == null) {
        cleanup(dock);
        return;
    }
    /*
         * If the component we dragged over is a CTabPanel, then we prepare for
         * and MDI move
         */
    if (drag_dst instanceof CTabPanel) {
        dst_panel = (CTabPanel) drag_dst;
        if (src_panel == dst_panel) {
            cleanup(dock);
            return;
        }
        in_accept_zone = dst_panel.inAcceptZone(px, py);
        if (!in_accept_zone) {
            in_middle = dock.drag(src_panel, px, py);
            if (!dst_panel.middle_is_accept_zone() && in_middle) {
                cleanup(dock);
                return;
            }
        }
        if (in_middle || in_accept_zone) {
            if (dst_panel.accepts(src_panel, comp)) {
                dst_panel.accept_preview.paint = true;
            }
        } else {
            dst_panel.accept_preview.paint = false;
        }
    } else {
    // TODO: regular drag
    }
    dock.repaint();
}
