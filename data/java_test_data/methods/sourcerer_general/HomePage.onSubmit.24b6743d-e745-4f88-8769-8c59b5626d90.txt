protected void onSubmit() {
    try {
        String studentid = (String) userModel.getObject();
        String password = (String) passwdModel.getObject();
        String newPassword = md5.md5(password);
        // System.out.println("student Id" + studentid);
        // System.out.println("new Password:" + md5.md5("jenn"));
        // see if account exists
        Account account = (Account) sqlMap.queryForObject("Account.getAccount", studentid);
        // if accounts exists
        if (account != null && newPassword.equals(account.getPassword())) {
            // check account type
            if ((Integer.toString(account.getUserid())).equals("1")) {
                // set session to current user
                ((Sessions) getSession()).setUserid(account.getUserid());
                ((Sessions) getSession()).setStudentid(studentid);
                // search for user description
                User user = (User) sqlMap.queryForObject("User.getUserdesc", account.getUserid());
                // set current user description
                ((Sessions) getSession()).setDesc(user.getUserdesc(account.getUserid()));
                PresidentHome page = new PresidentHome();
                setResponsePage(page);
            } else if ((Integer.toString(account.getUserid())).equals("2")) {
                // set session to current user
                ((Sessions) getSession()).setUserid(account.getUserid());
                ((Sessions) getSession()).setStudentid(studentid);
                // search for user description
                User user = (User) sqlMap.queryForObject("User.getUserdesc", account.getUserid());
                // set current user description
                ((Sessions) getSession()).setDesc(user.getUserdesc(account.getUserid()));
                SecretaryHome page = new SecretaryHome();
                setResponsePage(page);
            } else if ((Integer.toString(account.getUserid())).equals("3")) {
                // set session to current user
                ((Sessions) getSession()).setUserid(account.getUserid());
                ((Sessions) getSession()).setStudentid(studentid);
                // search for user description
                User user = (User) sqlMap.queryForObject("User.getUserdesc", account.getUserid());
                // set current user description
                ((Sessions) getSession()).setDesc(user.getUserdesc(account.getUserid()));
                TreasurerHome page = new TreasurerHome();
                setResponsePage(page);
            } else if ((Integer.toString(account.getUserid())).equals("0")) {
                // set session to current user
                ((Sessions) getSession()).setUserid(account.getUserid());
                ((Sessions) getSession()).setStudentid(studentid);
                // search for user description
                User user = (User) sqlMap.queryForObject("User.getUserdesc", account.getUserid());
                // set current user description
                ((Sessions) getSession()).setDesc(user.getUserdesc(account.getUserid()));
                AdministratorHome page = new AdministratorHome();
                setResponsePage(page);
            } else if ((Integer.toString(account.getUserid())).equals("4")) {
                // set session to current user
                ((Sessions) getSession()).setUserid(account.getUserid());
                ((Sessions) getSession()).setStudentid(studentid);
                // search for user description
                User user = (User) sqlMap.queryForObject("User.getUserdesc", account.getUserid());
                // set current user description
                ((Sessions) getSession()).setDesc(user.getUserdesc(account.getUserid()));
                MemberHome page = new MemberHome();
                setResponsePage(page);
            }
        } else {
            error("Invalid Username and Password");
        }
    } catch (SQLException e) {
        error("Invalid Username and Password. Try again.");
        e.printStackTrace();
    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
}
