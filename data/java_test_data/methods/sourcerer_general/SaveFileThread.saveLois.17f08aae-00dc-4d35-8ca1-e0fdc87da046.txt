private void saveLois(String name, String descr, LoisTableModel model) throws Exception {
    String summary = MapKeys.NET + name + " " + MapKeys.NET_LOIS;
    if (descr.length() == 0) {
        descr += "N/A";
    }
    String description = MapKeys.DESCR + name + " " + descr;
    for (int row = 0; row < model.getRowCount(); row++) {
        Way way = model.getWay(row);
        summary += " " + way.getLabel();
        String key = MapKeys.LOIS;
        String prop = key + name + "." + way.getLabel() + " ";
        prop += way.getX() + " ";
        prop += way.getY() + " ";
        // prop  += way.getRealLon() + " ";
        prop += "0 ";
        // prop  += way.getRealLat() + " ";
        prop += "0 ";
        prop += ((LOI) way).getDescr().replace(" ", "%20");
        if (way instanceof Watch) {
            double radius = ((Watch) way).getRadius();
            prop += " " + radius;
            if (way.getExtent() != null) {
                // Landmark landmark = (Landmark) way.getExtent();
                // String k = MapKeys.WATCH + realName + "." + way.getLabel() + ".extent";
                // String v = landmark.getLabel() + " " + landmark.getNetName();
                String k = MapKeys.LOIS + name + "." + way.getLabel() + ".extent";
                Way extent = way.getExtent();
                String netType = getNetType(extent);
                String v = MapKeys.NET + netType + "." + getRealName(extent.getNetName()) + "." + extent.getLabel();
                out.println(k + " " + v);
            }
        }
        if (way instanceof Landmark) {
            saveMobidodes(name, (Landmark) way);
            saveCategories(name, (Landmark) way);
            saveAudio(name, (Landmark) way);
        }
        out.println(prop);
    }
    out.println(description);
    out.println(summary);
}
