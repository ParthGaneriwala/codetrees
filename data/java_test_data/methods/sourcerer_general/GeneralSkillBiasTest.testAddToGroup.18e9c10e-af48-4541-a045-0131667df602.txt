public void testAddToGroup() {
    GeneralSkillBias bias = new GeneralSkillBias(TEST_GENERAL_SKILL);
    int count = bias.getChildSkills().size();
    SkillBiasListener listener = createMock(SkillBiasListener.class);
    List<String> groupMembers = new ArrayList<String>();
    groupMembers.add(FIRST_AID);
    groupMembers.add(FIELD_MEDIC);
    groupMembers.add(SURGERY);
    groupMembers.add(CYBERNETICS);
    ChildSkillGroup expectedGroup = createExclusiveGroup(GROUP_NAME, groupMembers);
    listener.groupFormed(eqChildSkillGroup(expectedGroup));
    bias.addListener(listener);
    replay(listener);
    bias.createExclusiveGroup(GROUP_NAME, groupMembers);
    verify(listener);
    reset(listener);
    int groupSize = bias.getChildSkillGroup(GROUP_NAME).getChildSkills().size();
    assertTrue(bias.getChildSkillGroup(GROUP_NAME).hasSkill(FIRST_AID));
    assertTrue(bias.getChildSkillGroup(GROUP_NAME).hasSkill(FIELD_MEDIC));
    assertTrue(bias.getChildSkillGroup(GROUP_NAME).hasSkill(SURGERY));
    assertTrue(bias.getChildSkillGroup(GROUP_NAME).hasSkill(CYBERNETICS));
    assertTrue(bias.getChildSkillGroup(GROUP_NAME).hasSkill(FIRST_AID));
    WeightedChildSkill wcs = new WeightedChildSkill(TEST_CHILD);
    listener.addedToGroup(isA(ChildSkillGroup.class), isA(WeightedChildSkill.class));
    replay(listener);
    bias.addToGroup(bias.getChildSkillGroup(GROUP_NAME), TEST_CHILD);
    verify(listener);
    assertEquals(groupSize + 1, bias.getChildSkillGroup(GROUP_NAME).getChildSkills().size());
    assertTrue(bias.getChildSkillGroup(GROUP_NAME).hasSkill(TEST_CHILD));
    // Test exceptions
    reset(listener);
    bias.removeListener(listener);
    try {
        bias.addToGroup(bias.getChildSkillGroup(GROUP_NAME), TEST_CHILD);
        fail("IllegalArgumentException not thrown.");
    } catch (IllegalArgumentException e) {
    // expected
    }
}
