public int setBytes(long writeAt, byte[] bytes, int offset, int length) throws SQLException {
    java.sql.PreparedStatement pStmt = null;
    if ((offset + length) > bytes.length) {
        length = bytes.length - offset;
    }
    byte[] bytesToWrite = new byte[length];
    System.arraycopy(bytes, offset, bytesToWrite, 0, length);
    // FIXME: Needs to use identifiers for column/table names
    StringBuffer query = new StringBuffer("UPDATE ");
    query.append(this.tableName);
    query.append(" SET ");
    query.append(this.blobColumnName);
    query.append(" = INSERT(");
    query.append(this.blobColumnName);
    query.append(", ");
    query.append(writeAt);
    query.append(", ");
    query.append(length);
    query.append(", ?) WHERE ");
    query.append((String) this.primaryKeyColumns.get(0));
    query.append(" = ?");
    for (int i = 1; i < this.numPrimaryKeys; i++) {
        query.append(" AND ");
        query.append((String) this.primaryKeyColumns.get(i));
        query.append(" = ?");
    }
    try {
        // FIXME: Have this passed in instead
        pStmt = this.creatorResultSet.connection.prepareStatement(query.toString());
        pStmt.setBytes(1, bytesToWrite);
        for (int i = 0; i < this.numPrimaryKeys; i++) {
            pStmt.setString(i + 2, (String) this.primaryKeyValues.get(i));
        }
        int rowsUpdated = pStmt.executeUpdate();
        if (rowsUpdated != 1) {
            throw SQLError.createSQLException("BLOB data not found! Did primary keys change?", SQLError.SQL_STATE_GENERAL_ERROR, this.exceptionInterceptor);
        }
    } finally {
        if (pStmt != null) {
            try {
                pStmt.close();
            } catch (SQLException sqlEx) {
                // do nothing
                ;
            }
            pStmt = null;
        }
    }
    return (int) length();
}
