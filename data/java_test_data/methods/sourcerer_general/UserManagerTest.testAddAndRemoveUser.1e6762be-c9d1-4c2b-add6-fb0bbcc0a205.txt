public void testAddAndRemoveUser() throws Exception {
    User user = new User();
    // call populate method in super class to populate test data
    // from a properties file matching this class name
    user = (User) populate(user);
    // set expected behavior on role dao
    roleDao.expects(once()).method("getRoleByName").with(eq("user")).will(returnValue(new Role("user")));
    Role role = roleManager.getRole(Constants.USER_ROLE);
    roleDao.verify();
    user.addRole(role);
    // set expected behavior on user dao
    userDao.expects(once()).method("saveUser").with(same(user));
    userManager.saveUser(user);
    assertTrue(user.getUsername().equals("john"));
    assertTrue(user.getRoles().size() == 1);
    userDao.verify();
    // reset expectations
    userDao.reset();
    userDao.expects(once()).method("removeUser").with(eq(new Long(5)));
    userManager.removeUser("5");
    userDao.verify();
    // reset expectations
    userDao.reset();
    userDao.expects(once()).method("getUser").will(returnValue(null));
    user = userManager.getUser("5");
    assertNull(user);
    userDao.verify();
}
