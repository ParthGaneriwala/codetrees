public void testPermissions() {
    controller.clearUsers();
    controller.sessionLogout();
    String testerName = "tester";
    controller.addUser(testerName);
    User tester = controller.getUser(testerName);
    tester.setRole(Roles.TESTER);
    String otherTesterName = "bunk";
    controller.addUser(otherTesterName);
    User otherTester = controller.getUser(otherTesterName);
    otherTester.setRole(Roles.TESTER);
    TestPlan testPlan = null;
    TestGroup testGroup = null;
    MyTestCase testCase = null;
    try {
        testPlan = new TestPlan("testPlan");
        Model.getInstance().addTestPlan(testPlan);
        testGroup = new TestGroup("testGroup");
        testPlan.addTestGroup(testGroup);
        testGroup.setTester(tester);
        testCase = new MyTestCase("testCase");
        testGroup.addTestCase(testCase);
    } catch (ConstraintViolationException e) {
        fail();
    }
    DefaultMutableTreeNode node = new DefaultMutableTreeNode(testGroup);
    assertFalse(controller.userMayEditTestCase(node));
    controller.sessionLogin(tester.getName(), tester.getPassword());
    assertTrue(controller.userMayEditTestCase(node));
    controller.sessionLogout();
    assertFalse(controller.userMayEditTestCase(node));
    controller.sessionLogin(otherTester.getName(), otherTester.getPassword());
    assertFalse(controller.userMayEditTestCase(node));
    otherTester.setRole(Roles.TEST_MANAGER);
    controller.sessionLogout();
    assertFalse(controller.userMayEditTestCase(node));
    controller.sessionLogin(otherTester.getName(), otherTester.getPassword());
    assertTrue(controller.userMayEditTestCase(node));
    controller.sessionLogout();
    assertFalse(controller.userMayEditTestCase(node));
    try {
        controller.userHasTestCaseAttachmentPermissions(null);
        fail();
    } catch (AssertionError e) {
    }
    assertFalse(controller.userHasTestCaseAttachmentPermissions(testCase));
    controller.sessionLogin(tester.getName(), tester.getPassword());
    assertFalse(controller.userHasTestCaseAttachmentPermissions(testCase));
    controller.sessionLogout();
    assertFalse(controller.userHasTestCaseAttachmentPermissions(testCase));
    controller.sessionLogin(otherTester.getName(), otherTester.getPassword());
    assertTrue(controller.userHasTestCaseAttachmentPermissions(testCase));
    controller.sessionLogout();
    assertFalse(controller.userHasTestCaseAttachmentPermissions(testCase));
}
