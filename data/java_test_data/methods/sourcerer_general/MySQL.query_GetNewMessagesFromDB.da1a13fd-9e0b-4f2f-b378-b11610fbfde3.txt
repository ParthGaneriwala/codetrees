public synchronized Document query_GetNewMessagesFromDB(String userID, String messageID) {
    // this is hard-coded now, could have set this via argument if >1 chats
    // per userID were needed
    final String chatID = "21";
    if (datasource == null) {
        connect();
    }
    // get XML style date format:
    // 2006-11-15T14:44:09
    String command = "SELECT message_id, user_name, message, date_format(post_time, '%Y-%m-%dT%H:%i:%s') as post_time" + " FROM message WHERE user_id = ? AND chat_id = ? AND message_id > ?     ORDER BY 'message_id' ;";
    PreparedStatement ps = null;
    ResultSet result = null;
    Document doc = null;
    DocumentBuilder builder = null;
    try {
        Connection conn = datasource.getConnection();
        ps = conn.prepareStatement(command);
        ps.setString(1, userID);
        ps.setString(2, chatID);
        ps.setString(3, messageID);
        result = ps.executeQuery();
        /**
         * ****************************************************************
         * build new Document from this result
         */
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        try {
            builder = factory.newDocumentBuilder();
        } catch (ParserConfigurationException ex) {
            ex.printStackTrace();
        }
        doc = builder.newDocument();
        Element root = doc.createElement("root");
        doc.appendChild(root);
        while (result.next()) {
            Element message = doc.createElement("message");
            Attr id = doc.createAttribute("id");
            id.setValue(result.getObject(1).toString());
            message.setAttributeNode(id);
            Element user = doc.createElement("user");
            // Don't need to mask tags when using explicit
            // TextNodes.
            user.appendChild(doc.createTextNode((String) result.getObject(2)));
            message.appendChild(user);
            Element text = doc.createElement("text");
            // Don't need to mask tags when using explicit
            // TextNodes.
            text.appendChild(doc.createTextNode((String) result.getObject(3)));
            message.appendChild(text);
            Element time = doc.createElement("time");
            time.appendChild(doc.createTextNode((String) result.getObject(4)));
            message.appendChild(time);
            root.appendChild(message);
        }
        // System.out.println(getDocumentAsXml(doc));
        result.close();
        ps.close();
        conn.close();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    return doc;
// return null;
}
