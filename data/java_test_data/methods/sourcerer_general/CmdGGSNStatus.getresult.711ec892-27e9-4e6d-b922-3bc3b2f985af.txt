public String getresult(String orgstr) {
    String result = "";
    String nowstr = DateUtil.getSimpleDateTime(new Date());
    int gc = 0;
    int gu = 0;
    String gcdesc = "";
    String gudesc = "";
    String[] blocks = orgstr.split("\n\n");
    for (String b : blocks) {
        b = b.toLowerCase();
        String cur = "gc";
        if (b.indexOf("function") > -1 && b.indexOf("interface") > -1 && b.indexOf("dram") > -1) {
            String[] is = b.split("\n");
            String curdesc = "";
            for (String i : is) {
                if (i.trim().startsWith("interface")) {
                    String n = i.substring(i.indexOf(":") + 1).trim();
                    if (n.startsWith("gc")) {
                        gc++;
                        cur = "gc";
                    } else if (n.startsWith("gu")) {
                        gu++;
                        cur = "gu";
                    }
                    curdesc = n + ":";
                }
                if (i.trim().startsWith("function")) {
                    curdesc = curdesc + i.substring(i.indexOf(":") + 1);
                }
                if (i.trim().startsWith("cpu")) {
                    curdesc = curdesc + "CPU利用率为" + i.substring(i.indexOf(":") + 1).replace("percent", "").trim() + "%";
                }
                if (i.trim().startsWith("dram")) {
                    String[] ds = i.split(",");
                    long d1 = 1;
                    long u1 = 0;
                    if (ds.length > 1) {
                        d1 = Long.parseLong(ds[0].substring(ds[0].indexOf(":") + 1).trim());
                        u1 = Long.parseLong(ds[1].substring(ds[1].indexOf(":") + 1).trim());
                    }
                    float up = ((u1 * 1000) / d1) / 10.0f;
                    curdesc = curdesc + "内存利用率为" + up + "%";
                }
            }
            if (cur.equals("gc")) {
                gcdesc = gcdesc + curdesc + "\n";
            } else {
                gudesc = gudesc + curdesc + "\n";
            }
        }
    }
    result = "gc:" + gc + "\n" + gcdesc + "\n--------------------------------\n" + "gu:" + gu + "\n" + gudesc;
    return result;
}
