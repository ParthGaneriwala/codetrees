protected void makeFrame() {
    setTitle(resultTitle);
    setBorder(BlueJTheme.dialogBorder);
    // Create the header
    JComponent header = new JPanel();
    header.setLayout(new BoxLayout(header, BoxLayout.Y_AXIS));
    Comment comment = expressionInformation.getComment();
    LabelPrintWriter commentLabelPrintWriter = new LabelPrintWriter();
    comment.print(commentLabelPrintWriter);
    MultiLineLabel commentLabel = commentLabelPrintWriter.getLabel();
    commentLabel.setForeground(Color.GRAY);
    header.add(commentLabel);
    JLabel sig = new JLabel(expressionInformation.getSignature());
    sig.setForeground(Color.GRAY);
    header.add(sig);
    header.add(Box.createVerticalStrut(BlueJTheme.generalSpacingWidth));
    header.add(new JSeparator());
    // Create the main part that shows the expression and the result
    JPanel mainPanel = new JPanel(new BorderLayout(10, 10));
    mainPanel.setOpaque(false);
    Box result = Box.createVerticalBox();
    JLabel expression = new JLabel(expressionInformation.getExpression(), JLabel.LEFT);
    expression.setAlignmentX(JComponent.LEFT_ALIGNMENT);
    result.add(expression);
    result.add(Box.createVerticalStrut(5));
    JLabel returnedLabel = new JLabel("  " + returnedString, JLabel.LEADING);
    returnedLabel.setAlignmentX(JComponent.LEFT_ALIGNMENT);
    result.add(returnedLabel);
    result.add(Box.createVerticalStrut(5));
    JScrollPane scrollPane = createFieldListScrollPane();
    scrollPane.setAlignmentX(JComponent.LEFT_ALIGNMENT);
    scrollPane.setBorder(BorderFactory.createEmptyBorder());
    result.add(scrollPane);
    result.add(Box.createVerticalStrut(5));
    mainPanel.add(result, BorderLayout.CENTER);
    JPanel inspectAndGetButtons = createInspectAndGetButtons();
    mainPanel.add(inspectAndGetButtons, BorderLayout.EAST);
    Insets insets = BlueJTheme.generalBorderWithStatusBar.getBorderInsets(mainPanel);
    mainPanel.setBorder(new EmptyBorder(insets));
    // create bottom button pane with "Close" button
    JPanel bottomPanel = new JPanel();
    bottomPanel.setOpaque(false);
    bottomPanel.setLayout(new BoxLayout(bottomPanel, BoxLayout.Y_AXIS));
    bottomPanel.setBorder(BorderFactory.createEmptyBorder(10, 5, 5, 5));
    if (inspectorManager != null && inspectorManager.inTestMode()) {
        assertPanel = new AssertPanel();
        {
            assertPanel.setAlignmentX(LEFT_ALIGNMENT);
            bottomPanel.add(assertPanel);
        }
    }
    JPanel buttonPanel;
    buttonPanel = new JPanel(new BorderLayout());
    buttonPanel.setOpaque(false);
    JButton button = createCloseButton();
    buttonPanel.add(button, BorderLayout.EAST);
    bottomPanel.add(buttonPanel);
    // add the components
    Container contentPane = getContentPane();
    contentPane.setLayout(new BorderLayout());
    contentPane.add(header, BorderLayout.NORTH);
    contentPane.add(mainPanel, BorderLayout.CENTER);
    contentPane.add(bottomPanel, BorderLayout.SOUTH);
    getRootPane().setDefaultButton(button);
}
