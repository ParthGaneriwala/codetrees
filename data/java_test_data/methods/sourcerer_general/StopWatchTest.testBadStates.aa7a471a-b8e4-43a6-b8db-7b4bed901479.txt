@Test
public void testBadStates() {
    StopWatch watch = new StopWatch();
    try {
        watch.stop();
        fail("Calling stop on an unstarted StopWatch should throw an exception. ");
    } catch (IllegalStateException ise) {
    // expected
    }
    try {
        watch.stop();
        fail("Calling stop on an unstarted StopWatch should throw an exception. ");
    } catch (IllegalStateException ise) {
    // expected
    }
    try {
        watch.suspend();
        fail("Calling suspend on an unstarted StopWatch should throw an exception. ");
    } catch (IllegalStateException ise) {
    // expected
    }
    try {
        watch.split("1st");
        fail("Calling split on a non-running StopWatch should throw an exception. ");
    } catch (IllegalStateException ise) {
    // expected
    }
    try {
        watch.unsplit("1st");
        fail("Calling unsplit on an unsplit StopWatch should throw an exception. ");
    } catch (IllegalStateException ise) {
    // expected
    }
    try {
        watch.resume();
        fail("Calling resume on an unsuspended StopWatch should throw an exception. ");
    } catch (IllegalStateException ise) {
    // expected
    }
    watch.start();
    try {
        watch.start();
        fail("Calling start on a started StopWatch should throw an exception. ");
    } catch (IllegalStateException ise) {
    // expected
    }
    try {
        watch.unsplit("1st");
        fail("Calling unsplit on an unsplit StopWatch should throw an exception. ");
    } catch (IllegalStateException ise) {
    // expected
    }
    try {
        watch.getSplitDuration("1st");
        fail("Calling getSplitTime on an unsplit StopWatch should throw an exception. ");
    } catch (IllegalStateException ise) {
    // expected
    }
    try {
        watch.resume();
        fail("Calling resume on an unsuspended StopWatch should throw an exception. ");
    } catch (IllegalStateException ise) {
    // expected
    }
    watch.stop();
    try {
        watch.start();
        fail("Calling start on a stopped StopWatch should throw an exception as it needs to be reset. ");
    } catch (IllegalStateException ise) {
    // expected
    }
}
