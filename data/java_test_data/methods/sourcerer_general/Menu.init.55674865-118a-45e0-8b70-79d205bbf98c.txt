public void init(GameContainer container, final StateBasedGame game) throws SlickException {
    this.gamee = game;
    messages = new Messages(0);
    Menu1 = new Image[2];
    Menu2 = new Image[2];
    Menu3 = new Image[2];
    Splash = new Image("res/splash.jpg");
    Instructions = new Image("res/explications.png");
    Menu1[0] = new Image("res/menu_1.png");
    Menu1[1] = new Image("res/menu_1h.png");
    Menu2[0] = new Image("res/menu_2.png");
    Menu2[1] = new Image("res/menu_2h.png");
    Menu3[0] = new Image("res/menu_3.png");
    Menu3[1] = new Image("res/menu_3h.png");
    id1 = id2 = id3 = 0;
    // On compte le nbre de maps
    FilenameFilter filter = new FilenameFilter() {

        public boolean accept(File dir, String name) {
            return name.contains(".tmx");
        }
    };
    File Dossier = new File(MAP_DIR);
    nb_maps = Dossier.listFiles(filter).length;
    // Création de la petite fenetre charger map
    display = new Display(container);
    SteelBlueTheme theme = new SteelBlueTheme();
    Sui.setTheme(theme);
    Sui.updateComponentTreeTheme(display);
    win = new Window();
    win.setAlwaysOnTop(true);
    win.setSize(155, 100);
    win.setOpaque(true);
    win.setLocation(640, 250);
    win.setBackground(new Color(0, 0, 0, 180));
    win.addMouseListener(DraggableContainer.createDragListener(win));
    win.setVisible(false);
    RowLayout layout = new RowLayout(false, RowLayout.CENTER, RowLayout.CENTER);
    win.setLayout(layout);
    // Label
    Label expl = new Label("Code secret ?");
    expl.setForeground(Color.white);
    expl.pack();
    win.add(expl);
    // Input
    txt = new TextField(4);
    txt.setHeight(20);
    txt.setToolTipText("Code secret de la map");
    txt.setBackground(Color.darkGray);
    txt.setMaxChars(4);
    win.add(txt);
    // Bouton
    Button btn = new Button("Go !");
    btn.pack();
    win.add(btn);
    btn.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            if (txt.getText().length() == 4) {
                txtDécodé = Crypto.decrypt(txt.getText(), 3);
                FilenameFilter filter = new FilenameFilter() {

                    public boolean accept(File dir, String name) {
                        return name.contains(txtDécodé);
                    }
                };
                File Dossier = new File(MAP_DIR);
                File[] Liste = Dossier.listFiles(filter);
                if (Liste.length == 1) {
                    try {
                        messages.ajouter("Chargement de la map en cours", 300, 2);
                    } catch (SlickException ex) {
                        Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    Menu.mapValide = true;
                    Menu.map = Liste[0].getName().substring(0, 7);
                    gamee.enterState(ID_jeu, new FadeOutTransition(), new FadeInTransition());
                } else {
                    try {
                        messages.ajouter("Code incorrect !", 300, 2);
                    } catch (SlickException ex) {
                        Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else {
                try {
                    messages.ajouter("Un code secret comporte 4 lettres !", 300, 2);
                } catch (SlickException ex) {
                    Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    });
    display.add(win);
}
