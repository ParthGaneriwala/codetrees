protected void copyProperties(Map<String, String> props, ModelObject obj) {
    System.out.println("props:" + props);
    HashMap<String, Object> _props = new HashMap<String, Object>();
    Field[] fields = obj.getClass().getDeclaredFields();
    for (int i = 0; i < fields.length; i++) {
        Field field = fields[i];
        String fn = field.getName();
        Class type = field.getType();
        System.out.println("fn:" + fn + " field.getType():" + field.getType());
        if (!props.containsKey(fn)) {
            continue;
        }
        String value = props.get(fn);
        if (value == null) {
            continue;
        }
        if (type.equals(String.class)) {
            _props.put(fn, value);
        } else if (value.trim().length() > 0) {
            if (type.equals(boolean.class) || type.equals(Boolean.class)) {
                _props.put(fn, new Boolean(value));
            } else if (type.equals(double.class) || type.equals(Double.class)) {
                _props.put(fn, new Double(value));
            } else if (type.equals(int.class) || type.equals(Integer.class)) {
                _props.put(fn, new Integer(value));
            } else if (type.equals(Timestamp.class)) {
                _props.put(fn, new Timestamp(new Long(value).longValue()));
            } else if (type.equals(Time.class)) {
                _props.put(fn, new Time(new Long(value).longValue()));
            } else if (type.equals(Date.class)) {
                _props.put(fn, new Date(new Long(value).longValue()));
            } else if (type.equals(java.util.Date.class)) {
                _props.put(fn, new java.util.Date(new Long(value).longValue()));
            } else if (ModelObject.class.isAssignableFrom(type)) {
                // the value is ID
                String bean = type.getSimpleName();
                ModelObject mo = getModelObject(bean, value);
                _props.put(fn, mo);
            } else if (Collection.class.isAssignableFrom(type)) {
                Set set = new HashSet();
                if (value != null) {
                    // the value is ID1,ID2,...,IDn
                    String[] ids = value.split(",");
                    for (int j = 0; j < ids.length; j++) {
                        String bean = config.getItemType(obj.getClass().getSimpleName(), fn);
                        ModelObject mo = getModelObject(bean, ids[j]);
                        set.add(mo);
                    }
                }
                _props.put(fn, set);
            }
        }
    }
    System.out.println("_props:" + _props);
    try {
        BeanUtils.populate(obj, _props);
    } catch (IllegalAccessException e) {
        e.printStackTrace();
    } catch (InvocationTargetException e) {
        e.printStackTrace();
    }
}
