public Node RDBStringToNode(String RDBString) throws RDFRDBException {
    Node res = null;
    int len = RDBString.length();
    if (len < 3)
        throw new RDFRDBException("Bad RDBString Header: " + RDBString);
    String nodeType = RDBString.substring(0, 1);
    String valType = RDBString.substring(1, 2);
    if ((!(valType.equals(RDBCodeRef) || valType.equals(RDBCodeValue))) || (RDBString.charAt(2) != RDBCodeDelimChar))
        throw new RDFRDBException("Bad RDBString Header: " + RDBString);
    int pos = 3;
    int npos;
    if (nodeType.equals(RDBCodeURI)) {
        ParseInt pi = new ParseInt(pos);
        String prefix = "";
        RDBStringParseInt(RDBString, pi, false);
        if (pi.val != null) {
            if (URI_COMPRESS == false)
                throw new RDFRDBException("Bad URI: Prefix Compression Disabled: " + RDBString);
            prefix = IDtoPrefix(pi.val.intValue());
            if (prefix == null)
                throw new RDFRDBException("Bad URI Prefix: " + RDBString);
        }
        pos = pi.pos + 1;
        String qname;
        if (valType.equals(RDBCodeRef)) {
            qname = IDtoURI(RDBString.substring(pos));
            if (qname == null)
                throw new RDFRDBException("Bad URI: " + RDBString);
        } else
            qname = RDBString.substring(pos, len - EOS_LEN);
        res = Node.createURI(prefix + qname);
    } else if (nodeType.equals(RDBCodeLiteral)) {
        res = RDBLiteralStringToLiteralNode(RDBString, len, valType, pos);
    } else if (nodeType.equals(RDBCodeBlank)) {
        String bstr = null;
        if (valType.equals(RDBCodeValue)) {
            bstr = RDBString.substring(4, len - EOS_LEN);
        } else {
            bstr = IDtoBlank(RDBString.substring(4));
            if (bstr == null)
                throw new RDFRDBException("Bad URI: " + RDBString);
        }
        res = Node.createAnon(new AnonId(bstr));
    } else if (nodeType.equals(RDBCodeVariable)) {
        String vname = RDBString.substring(3, len - EOS_LEN);
        res = Node.createVariable(vname);
    } else if (nodeType.equals(RDBCodeANY)) {
        res = Node.ANY;
    } else
        throw new RDFRDBException("Invalid RDBString Prefix, " + RDBString);
    return res;
}
