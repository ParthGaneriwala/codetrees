protected void btnPaperDateCalendarClickedInline(org.eclipse.swt.events.SelectionEvent e) {
    if (!dsControlPaperDate.isOpen()) {
        Rectangle r = txtConfPaperDate.getBounds();
        boolean dateParsed = false;
        dateSelector = new DateSelectionWidget(getCompositePane(), SWT.NULL);
        dateSelector.setController(dsControlPaperDate);
        dateSelector.setBounds(r.x, r.y + 20, 200, 150);
        dateSelector.setVisible(true);
        dateSelector.addMouseListener(new ConfInfoPaneEventHandler());
        dateSelector.addFocusListener(new ConfInfoPaneEventHandler());
        dateSelector.addKeyListener(new ConfInfoPaneEventHandler());
        dateSelectorOpen = TestPane.DateSelectors.PAPER_DATE;
        String dateText = txtConfPaperDate.getText();
        if (dateText != null && dateText.length() > 0) {
            if (dateText != null && dateText.length() > 0) {
                try {
                    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);
                    Calendar c = Calendar.getInstance();
                    c.setTime(df.parse(TimeUtil.makeParseable(dateText)));
                    dateSelector.setCalendar(c);
                    dateParsed = true;
                } catch (ParseException p) {
                    System.err.println(p.getMessage());
                    System.err.println(dateText);
                }
            }
        }
        // Set the default calendar date
        if (abstractDateCalendar != null && !dateParsed) {
            dateSelector.setCalendar(abstractDateCalendar);
        }
        txtDescription.moveBelow(dateSelector);
        btnStartDateSelect.setEnabled(false);
        btnEndDateSelect.setEnabled(false);
        btnAbstractDateSelect.setEnabled(false);
        getCompositePane().redraw();
    } else {
        selectDate();
        getCompositePane().redraw();
    }
}
