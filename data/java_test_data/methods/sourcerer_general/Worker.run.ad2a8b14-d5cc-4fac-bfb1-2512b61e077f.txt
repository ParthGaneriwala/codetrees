public void run() {
    log.info("Starting the task");
    // // Perform SVN Update
    String branchPath = props.getProperty("branches." + branchName + ".path");
    log.info("Performing svn update on " + branchPath + " by running:\n" + SVN_UPDATE_COMMAND);
    String op = ProcessRunner.executeProcess(SVN_UPDATE_COMMAND, new File(branchPath), System.out);
    log.info("SVN update completed successfully");
    // Build the EAR
    String earPath = branchPath + "/EAR";
    log.info("Building EAR by executing:\n " + BUILD_EAR_COMMAND);
    ProcessRunner.executeProcess(BUILD_EAR_COMMAND, new File(earPath), System.out);
    log.info("EAR built successfully");
    // Load the app server properties
    String cell = props.getProperty("appserver." + serverName + ".cell");
    String node = props.getProperty("appserver." + serverName + ".node");
    String server = props.getProperty("appserver." + serverName + ".server");
    String profilePath = props.getProperty("appserver." + serverName + ".path");
    String earFilePath = branchPath + "/build/DAVE.ear";
    String username = props.getProperty("appserver." + serverName + ".username");
    String password = props.getProperty("appserver." + serverName + ".password");
    String installEarScript = props.getProperty("appserver.installear.path");
    String command = INSTALL_EAR_COMMAND + " -username " + username + " -password " + password + "  -lang jython " + " -f " + installEarScript + " " + earFilePath + " " + cell + " " + node + " " + server;
    log.info("Installing EAR by executing:\n " + command);
    ProcessRunner.executeProcess(command, new File(profilePath + "/bin"), System.out);
    log.info("EAR installed successfully");
// Deploy the EAR
}
