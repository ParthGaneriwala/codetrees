public static void main(String[] args) throws SQLException, IOException {
    LinksToDB db = new LinksToDB();
    db.dbinit();
    String file = "/Users/qil14/Desktop/ClueWeb09B/idlinks/";
    File ff = new File(file);
    String[] ffs = ff.list();
    for (int j = 0; j < ffs.length; j++) {
        String filen = file + ffs[j];
        File f = new File(filen);
        if (!f.isDirectory())
            continue;
        String[] fs = f.list();
        for (int i = 0; i < fs.length; i++) {
            String trec = "";
            String fl = filen + "/" + fs[i];
            System.out.println(fl);
            // if (fl.contains("enwp01/")) continue;
            if (!fl.contains("en0007/"))
                continue;
            // if (fl.contains("enwp03/")) continue;
            FileReader sw = new FileReader(fl);
            // 
            // if (fl.contains("enwp00/00.idlinks")) continue;
            // if (fl.contains("enwp00/01.idlinks")) continue;
            // if (fl.contains("enwp00/02.idlinks")) continue;
            // if (fl.contains("enwp00/03.idlinks")) continue;
            // if (fl.contains("enwp00/04.idlinks")) continue;
            // if (fl.contains("enwp00/05.idlinks")) continue;
            // if (fl.contains("enwp00/06.idlinks")) continue;
            // if (fl.contains("enwp00/07.idlinks")) continue;
            // if (fl.contains("enwp00/08.idlinks")) continue;
            // if (fl.contains("enwp00/09.idlinks")) continue;
            // if (fl.contains("enwp00/10.idlinks")) continue;
            // if (fl.contains("enwp00/12.idlinks")) continue;
            // if (fl.contains("enwp00/13.idlinks")) continue;
            // if (fl.contains("enwp00/11.idlinks")) continue;
            // if (fl.contains("enwp00/14.idlinks")) continue;
            // if (fl.contains("enwp00/15.idlinks")) continue;
            // if (fl.contains("enwp00/16.idlinks")) continue;
            // if (fl.contains("enwp00/17.idlinks")) continue;
            // if (fl.contains("enwp00/18.idlinks")) continue;
            // //					if (fl.contains("en0000/19.idlinks")) continue;
            // //					if (fl.contains("en0000/20.idlinks")) continue;
            // //					if (fl.contains("en0000/21.idlinks")) continue;
            // //					if (fl.contains("en0000/22.idlinks")) continue;
            // //					if (fl.contains("en0000/23.idlinks")) continue;
            // //					if (fl.contains("en0000/24.idlinks")) continue;
            // //					if (fl.contains("en0000/25.idlinks")) continue;
            // //					if (fl.contains("en0000/26.idlinks")) continue;
            // //					if (fl.contains("en0000/27.idlinks")) continue;
            // //					if (fl.contains("en0000/28.idlinks")) continue;
            // //					if (fl.contains("en0000/29.idlinks")) continue;
            // //					if (fl.contains("en0000/30.idlinks")||fl.contains("en0000/31.idlinks")||fl.contains("en0000/32.idlinks")||fl.contains("en0000/33.idlinks")||
            // //							fl.contains("en0000/34.idlinks")||fl.contains("en0000/35.idlinks")||fl.contains("en0000/36.idlinks")||fl.contains("en0000/37.idlinks")
            // //							||fl.contains("en0000/38.idlinks")||fl.contains("en0000/39.idlinks")) continue;
            // //					if (fl.contains("en0000/40.idlinks")||fl.contains("en0000/41.idlinks")||fl.contains("en0000/42.idlinks")||fl.contains("en0000/43.idlinks")||
            // //							fl.contains("en0000/44.idlinks")||fl.contains("en0000/45.idlinks")||fl.contains("en0000/46.idlinks")||fl.contains("en0000/47.idlinks")
            // //							||fl.contains("en0000/48.idlinks")||fl.contains("en0000/49.idlinks")) continue;
            // //					if (fl.contains("en0000/50.idlinks")||fl.contains("en0000/51.idlinks")||fl.contains("en0000/52.idlinks")||fl.contains("en0000/53.idlinks")||
            // //							fl.contains("en0000/54.idlinks")||fl.contains("en0000/55.idlinks")||fl.contains("en0000/56.idlinks")||fl.contains("en0000/57.idlinks")
            // //							||fl.contains("en0000/58.idlinks")||fl.contains("en0000/59.idlinks")) continue;
            BufferedReader swRead = new BufferedReader(sw);
            String st;
            String inserts = "";
            int count = 0;
            int c = 0;
            while ((st = swRead.readLine()) != null) {
                c += 1;
                // if (c) continue;
                count = count + 1;
                String[] ts = st.split("\t");
                // System.out.println(ts[0]);
                if (ts.length != 2)
                    continue;
                String link = URLEncoder.encode(ts[1]);
                inserts = inserts + "('" + ts[0] + "', '" + link + "'),";
                if (!ts[0].startsWith("clueweb09-en0007"))
                    continue;
                if (count == 1000) {
                    inserts = inserts.substring(0, inserts.length() - 1);
                    String sql = "insert into CLUEWEB09.links (docno, link) values " + inserts;
                    System.out.println(sql);
                    try {
                        Class.forName("com.mysql.jdbc.Driver");
                        String url = "jdbc:mysql://localhost:3306/mysql";
                        int r = DriverManager.getConnection(url, Config.DATABASEROOT, Config.DATABASEPW).createStatement().executeUpdate(sql);
                        System.out.println(r);
                    } catch (Exception ee) {
                        ee.printStackTrace();
                    }
                    inserts = "";
                    count = 0;
                }
            }
            String sql = "insert into CLUEWEB09.links (docno, link) values " + inserts;
            System.out.println(sql);
            try {
                Class.forName("com.mysql.jdbc.Driver");
                String url = "jdbc:mysql://localhost:3306/mysql";
                DriverManager.getConnection(url, Config.DATABASEROOT, Config.DATABASEPW).createStatement().executeUpdate(sql);
            } catch (Exception ee) {
            }
            swRead.close();
            sw.close();
        // System.out.println(trec);
        // Utils.writeFile("/Users/qil14/test.txt", trec);
        }
        // 
        // String link = "http://00perdomain.com/world/chinese_simplified/%e8%89%ba%e6%9c%af/%e4%bd%9c%e5%ae%b6%e8%b5%84%e6%ba%90/";
        // link = URLEncoder.encode(link);
        // String docno = db.getDocno(link);
        // System.out.println("doc: "+docno);
        db.dbclose();
    }
}
