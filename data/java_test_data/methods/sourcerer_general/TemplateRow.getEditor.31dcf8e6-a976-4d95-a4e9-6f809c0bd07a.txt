public JComponent getEditor() {
    if (editor == null) {
        EditorType type = model.getComponentType(property);
        Set<AWTKeyStroke> newForwardKeys = new HashSet<AWTKeyStroke>();
        Set<AWTKeyStroke> newBackwardKeys = new HashSet<AWTKeyStroke>();
        newForwardKeys.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB, InputEvent.CTRL_DOWN_MASK));
        newBackwardKeys.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB, InputEvent.CTRL_DOWN_MASK + KeyEvent.SHIFT_DOWN_MASK));
        newBackwardKeys.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB, KeyEvent.SHIFT_DOWN_MASK));
        switch(type) {
            case text:
                editor = new JTextField();
                editor.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED));
                // change the tab key to shift focus instead of inserting a tab character (to help fast input)
                newForwardKeys.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_TAB, 0));
                editor.registerKeyboardAction(acceptAction, KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, InputEvent.CTRL_DOWN_MASK), 0);
                editor.registerKeyboardAction(acceptAction, KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), 0);
                break;
            case multiline:
                JTextArea textArea = new JTextArea();
                textArea.setBorder(BorderFactory.createEtchedBorder(EtchedBorder.LOWERED));
                textArea.setColumns(40);
                textArea.setWrapStyleWord(true);
                textArea.setLineWrap(true);
                textArea.setTabSize(4);
                editor = textArea;
                editor.registerKeyboardAction(acceptAction, KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, InputEvent.CTRL_DOWN_MASK), 0);
                break;
        }
        // bind our new focus traversal keys
        editor.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, newForwardKeys);
        editor.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERSAL_KEYS, newBackwardKeys);
        editor.addFocusListener(focusListener);
    }
    return editor;
}
