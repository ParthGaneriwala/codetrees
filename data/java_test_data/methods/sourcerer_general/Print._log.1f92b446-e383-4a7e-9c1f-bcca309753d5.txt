protected static void _log(int level, int frame, String msg, Object... args) {
    /* pertinent level? */
    if (level > Print.getLogLevel()) {
        return;
    }
    /* message accumulator */
    StringBuffer logMsg = new StringBuffer();
    /* log message */
    if (level <= Print.getLogHeaderLevel()) {
        // Print this 'header' info for logged messages with a level < 'headerLevel'
        // ie. print header for errors/warnings, but not for info/debug
        logMsg.append("[");
        logMsg.append(Print.getLogLevelString(level));
        if (Print._includeDate()) {
            logMsg.append("|");
            // "yyyy/MM/dd HH:mm:ss"
            logMsg.append(Print.formatDate("MM/dd HH:mm:ss"));
        }
        if (Print._includeStackFrame()) {
            logMsg.append("|");
            logMsg.append(_getStackFrame(frame + 1));
        }
        logMsg.append("] ");
    }
    /* message */
    if (msg != null) {
        if ((args != null) && (args.length > 0)) {
            try {
                logMsg.append(String.format(msg, args));
            } catch (Throwable th) {
                // MissingFormatArgumentException, UnknownFormatConversionException
                // [OUTPUT]
                System.out.println("ERROR: [" + msg + "] " + th);
                logMsg.append(msg);
            }
        } else {
            logMsg.append(msg);
        }
        if (!msg.endsWith("\n")) {
            logMsg.append("\n");
        }
    } else {
        logMsg.append("\n");
    }
    /* print message */
    try {
        PrintStream out = RTConfig.isInitialized() ? Print.openLogFile() : Print.getSystemErr();
        if (out != null) {
            // logfile output
            byte[] d = StringTools.getBytes(logMsg.toString());
            // [OUTPUT] must be "write(...)"
            out.write(d);
            out.flush();
        } else {
            Print._print(null, frame + 1, false, logMsg.toString());
        }
    } catch (IOException ioe) {
        Print.setLogFile(null);
        Print.logError("Unable to open/write log file: " + ioe);
        Print._print(null, frame + 1, false, logMsg.toString());
    } finally {
        Print.closeLogFile();
    }
}
