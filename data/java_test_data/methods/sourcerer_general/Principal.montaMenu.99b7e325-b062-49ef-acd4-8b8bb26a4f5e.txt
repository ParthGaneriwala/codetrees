private void montaMenu(Container c) {
    // Itens do menu arquivo
    JMenuItem abrir = new JMenuItem("Abrir Imagem");
    abrir.setToolTipText("Abrir um arquivo de imagem");
    JMenuItem fechar = new JMenuItem("Fechar");
    fechar.setToolTipText("Fechar o programa");
    // Itens do menu sobre
    JMenuItem ajuda = new JMenuItem("Ajuda");
    ajuda.setToolTipText("D�vidas? Aqui � o lugar!");
    JMenuItem equipe = new JMenuItem("Equipe");
    equipe.setToolTipText("Amigos!");
    // Itens do menu sobre
    JMenuItem enviar2ViewPort = new JMenuItem("Eviar para �rea de Armazenamento");
    enviar2ViewPort.setToolTipText("Envia a �rea recortada para a �rea de Armazenamento");
    JMenuItem buscarViewport = new JMenuItem("Buscar Thumbnail");
    buscarViewport.setToolTipText("Busca um Thumbnail e o transfere para a �rea de Trabalho");
    JMenuItem limparViewport = new JMenuItem("Limpar Thumbnail");
    limparViewport.setToolTipText("Apaga o conte�do de um Thumbnail");
    // Eventos
    abrir.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            JFileChooser fc = new JFileChooser();
            fc.setCurrentDirectory(new File("exemplos//"));
            // restringe a amostra a diretorios apenas
            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
            int res = fc.showOpenDialog(null);
            if (res == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try {
                    carga = null;
                    carga = new CarregarImagem();
                    imagemDoArquivo = ImageIO.read(file);
                    // ImageIcon aux = new
                    // ImageIcon(carga.mandarImagemParaPanel(file, null,
                    // INDICADOR_PAINEL_ESQUERDO));
                    ImageIcon aux = new ImageIcon(carga.redimensionaOriginal(file));
                    label = new LabelDesenha(aux, 0, -1);
                    label.addMouseListener(new java.awt.event.MouseAdapter() {

                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            if (label.var) {
                                p1 = new Ponto3d(label.x0, label.y0, 0);
                                p2 = new Ponto3d(label.xf, label.yf, 0);
                                recortaOriginal(p1, p2);
                            }
                            if (label.op == 1) {
                                // Pegam o X e Y
                                int x0 = label.x0;
                                // inicial do
                                // mouse
                                int y0 = label.y0;
                                setOrigemRotacao(new Ponto3d(x0, y0, 0));
                            }
                        }
                    });
                    label.updateUI();
                    if (esquerda.getComponentCount() > 0) {
                        esquerda.remove(esquerda.getComponent(0));
                        esquerda.repaint();
                    }
                    esquerda.add(label);
                    esquerda.revalidate();
                    status.setText("Imagem carregada com sucesso");
                } catch (NullPointerException nullPointer) {
                    status.setText("Erro ao carregar a imagem");
                    JOptionPane.showMessageDialog(null, "Arquivo Inv�lido", "Erro", JOptionPane.ERROR_MESSAGE);
                } catch (IOException ioException) {
                    status.setText("Erro ao carregar a imagem");
                    JOptionPane.showMessageDialog(null, "Arquivo Inv�lido", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } else
                JOptionPane.showMessageDialog(null, "Voce nao selecionou nenhum diretorio.");
        }
    });
    fechar.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            System.exit(0);
        }
    });
    enviar2ViewPort.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            if (guiCentral.imgIconCentral != null) {
                boolean todosViewsUsados = true;
                for (int x = 0; x < QTD_VIEWS; x++) {
                    if (imagemViewPort[x] == null) {
                        imagemViewPort[x] = new ViewPort(guiCentral.imgIconCentral);
                    }
                    if (!imagemViewPort[x].isViewUsed()) {
                        imagemViewPort[x].setImagemTransformada(new Imagem(guiCentral.imagemRecortadaAux.imagem3d), p1, p2);
                        imagemRecortada = new Imagem(guiCentral.imagemRecortadaAux.imagem3d, guiCentral.imagemRecortadaAux.max, guiCentral.imagemRecortadaAux.min);
                        labelView = new LabelDesenha(imagemViewPort[x].getImgicon(), 2, x);
                        labelsViewPort[x] = labelView;
                        labelView.addMouseListener(new java.awt.event.MouseAdapter() {

                            public void mouseClicked(java.awt.event.MouseEvent evt) {
                                if (labelView.op == 2) {
                                    // Janela com opcoes p/
                                    // viewports
                                    Object[] options = { "Carregar", "Excluir", "Cancelar" };
                                    int n = JOptionPane.showOptionDialog(null, "Oqu� deseja fazer com o Thumbnail " + indiceViewPort + " ?", "Op��es Thumbnail", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[2]);
                                    switch(n) {
                                        case 0:
                                            buscarView(indiceViewPort);
                                            label.DesenhaRecorte((int) imagemViewPort[indiceViewPort].p1.getX(), (int) imagemViewPort[indiceViewPort].p1.getY(), (int) imagemViewPort[indiceViewPort].p2.getX(), (int) imagemViewPort[indiceViewPort].p2.getY());
                                            break;
                                        case 1:
                                            limparView(indiceViewPort);
                                            break;
                                        case 2:
                                            // System.exit(0);
                                            break;
                                    }
                                }
                            }
                        });
                        viewPorts[x].add(labelsViewPort[x]);
                        todosViewsUsados = false;
                        direita.updateUI();
                        break;
                    // contadorViewPort++;
                    }
                }
                if (todosViewsUsados) {
                    JOptionPane.showMessageDialog(null, "N�mero m�ximo de Thumbnails Utilizados", "Alerta", JOptionPane.INFORMATION_MESSAGE);
                    setStatus("Imposs�vel enviar para o viewPort. N�mero m�ximo de ViewUtilizados.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "N�o h� imagem para ser enviada", "Aten��o", JOptionPane.INFORMATION_MESSAGE);
                setStatus("N�o h� imagem para ser enviada");
            }
        }
    });
    buscarViewport.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            buscarView();
        }
    });
    limparViewport.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            limparView();
        }
    });
    equipe.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            final JFrame f = new JFrame("");
            f.setSize(400, 1000);
            f.setTitle(">> Equipe");
            f.setIconImage(new ImageIcon("image//ita_logo.jpg").getImage());
            f.setLayout(new BorderLayout());
            f.setResizable(false);
            JLabel michele = new JLabel(new ImageIcon("image//michelle.jpg"));
            JLabel ricardo = new JLabel(new ImageIcon("image//ricardo.jpg"));
            JLabel thiago = new JLabel(new ImageIcon("image//thiago.jpg"));
            JLabel pell = new JLabel(new ImageIcon("image//pell.gif"));
            michele.setToolTipText("Michelle Parreira");
            ricardo.setToolTipText("Ricardo Rodrigues");
            thiago.setToolTipText("Thiago Trigo");
            pell.setToolTipText("S�rgio Pellegrino");
            f.getContentPane().add(michele, BorderLayout.WEST);
            f.getContentPane().add(ricardo, BorderLayout.CENTER);
            f.getContentPane().add(thiago, BorderLayout.EAST);
            f.getContentPane().add(pell, BorderLayout.SOUTH);
            f.pack();
            SwingUtilities.invokeLater(new Runnable() {

                public void run() {
                    f.setLocationRelativeTo(null);
                    f.setVisible(true);
                }
            });
        }
    });
    arquivo.add(abrir).setIcon(new ImageIcon("image//abrir_icon.jpg"));
    arquivo.add(fechar).setIcon(new ImageIcon("image//raio_icon.jpg"));
    menuBar.add(arquivo);
    ferramentas.add(enviar2ViewPort).setIcon(new ImageIcon("image//carro_compras.jpg"));
    ferramentas.add(buscarViewport).setIcon(new ImageIcon("image//tesoura.jpg"));
    ferramentas.add(limparViewport).setIcon(new ImageIcon("image//lixo_icon.jpg"));
    menuBar.add(ferramentas);
    sobre.add(ajuda).setIcon(new ImageIcon("image//magica_icon.jpg"));
    sobre.add(equipe).setIcon(new ImageIcon("image//equipe_icon.jpg"));
    menuBar.add(sobre);
    menuBar.setBackground(Color.LIGHT_GRAY);
    c.add(menuBar, BorderLayout.NORTH);
}
