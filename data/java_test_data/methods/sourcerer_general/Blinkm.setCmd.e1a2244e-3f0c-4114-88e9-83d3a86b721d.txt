public void setCmd(byte[] cmd) {
    byte defChar = cmd[0];
    Definition definition = Definition.getByChar(defChar);
    byte[] p = ByteUtils.slice(cmd, 1, definition.getNumArgs());
    switch(definition) {
        case goToRGB:
            this.color = ByteUtils.getColor(p[0], p[1], p[2]);
            break;
        case fadeToRGB:
            this.fadeToColor = ByteUtils.getColor(p[0], p[1], p[2]);
            break;
        case fadeToHSB:
            this.fadeToColor = ByteUtils.getHSBColor(p[0], p[1], p[2]);
            break;
        case fadeToRandomRGB:
            this.fadeToColor = getRandomRGBColor(this.color, p[0] & 0xff, p[1] & 0xff, p[2] & 0xff);
            break;
        case fadeToRandomHSB:
            this.fadeToColor = getRandomHSBColor(this.color, p[0] & 0xff, p[1] & 0xff, p[2] & 0xff);
            break;
        case setFadeSpeed:
            this.fadeSpeed = p[0];
            if (this.fadeSpeed == 0) {
                throw new RuntimeException("fadeSpeed must be >= 0");
            }
            break;
        case setTimeAdjust:
            this.timeAdjiust = p[0];
            break;
        case writeScriptLine:
            // skipped as only editable script is 0
            byte id = p[0];
            byte line = p[1];
            byte ticks = p[2];
            this.scripts[line] = new byte[] { ticks, p[3], /*cmd*/
            p[4], p[5], p[6] };
            this.currentScriptTick = 0;
            this.fadeToColor = null;
            break;
        case playScript:
            this.scriptIsRunning = true;
            this.currentScriptTick = 0;
            this.fadeToColor = null;
            this.currentScriptId = p[0];
            this.currentScriptRepeat = p[1];
            this.currentScriptStartLine = p[2];
            break;
        case stopScript:
            this.scriptIsRunning = false;
            this.fadeToColor = null;
            break;
        case setScriptLengthAndRepeats:
            this.customScriptLength = p[1];
            this.customScriptRepeats = p[2];
            break;
    }
}
