@Test
public void testGetPermissionsForPrincipalWhenKrbTicketPrincipalWithGroups() {
    Map<String, Permissions> permissions = new HashMap<String, Permissions>();
    String userName = getRandomPermissions(permissions);
    String group1 = getRandomPermissions(permissions);
    String group2 = getRandomPermissions(permissions);
    getRandomPermissions(permissions);
    getRandomPermissions(permissions);
    Permissions expected = new Permissions();
    Enumeration<Permission> en = permissions.get(userName).elements();
    while (en.hasMoreElements()) {
        expected.add(en.nextElement());
    }
    en = permissions.get(group1).elements();
    while (en.hasMoreElements()) {
        expected.add(en.nextElement());
    }
    en = permissions.get(group2).elements();
    while (en.hasMoreElements()) {
        expected.add(en.nextElement());
    }
    Set<String> groups = new HashSet<String>();
    groups.add(group1);
    groups.add(group2);
    KrbTicketPrincipal principal = createMock(KrbTicketPrincipal.class);
    expect(principal.getName()).andReturn(userName);
    expect(principal.getGroups()).andReturn(groups);
    replay(principal);
    XmlPermissionsChecker checker = new XmlPermissionsChecker(null, true);
    Permissions result = checker.getPermissionsForPrincipal(principal, permissions);
    verify(principal);
    assertTrue(permissionsEqual(result, expected));
}
