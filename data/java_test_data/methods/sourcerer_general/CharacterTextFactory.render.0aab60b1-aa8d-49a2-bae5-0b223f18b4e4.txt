public void render(Renderer renderer, int x, int y) {
    if (_units == null) {
        if (_bounds == null) {
            // whitespace
            return;
        }
        // render the glyph to the scratch image
        _graphics.clearRect(0, 0, _scratch.getWidth(), _scratch.getHeight());
        Shape outline = _vector.getOutline(-_bounds.x, _bounds.y + _bounds.height);
        if (_effect == OUTLINE) {
            _graphics.setStroke(new BasicStroke(_size, BasicStroke.CAP_SQUARE, BasicStroke.JOIN_ROUND));
            _graphics.draw(outline);
        } else {
            _graphics.fill(outline);
        }
        float[] tcoords = new float[4];
        _units = addGlyphToTexture(renderer, _bounds.width, _bounds.height, tcoords);
        _s1 = tcoords[0];
        _t1 = tcoords[1];
        _s2 = tcoords[2];
        _t2 = tcoords[3];
        _vector = null;
    }
    int lx = x + _bounds.x;
    int ly = y + _bounds.y;
    int ux = lx + _bounds.width;
    int uy = ly + _bounds.height;
    renderer.setTextureState(_units);
    renderer.setMatrixMode(GL11.GL_MODELVIEW);
    GL11.glBegin(GL11.GL_QUADS);
    GL11.glTexCoord2f(_s1, _t1);
    GL11.glVertex2f(lx, ly);
    GL11.glTexCoord2f(_s2, _t1);
    GL11.glVertex2f(ux, ly);
    GL11.glTexCoord2f(_s2, _t2);
    GL11.glVertex2f(ux, uy);
    GL11.glTexCoord2f(_s1, _t2);
    GL11.glVertex2f(lx, uy);
    GL11.glEnd();
}
