public int reopen(Connection db) throws SQLException {
    int resultCount = 0;
    boolean autoCommit = db.getAutoCommit();
    try {
        if (autoCommit) {
            db.setAutoCommit(false);
        }
        PreparedStatement pst = null;
        String sql = "UPDATE ticket " + "SET closed = ?, modified = " + DatabaseUtils.getCurrentTimestamp(db) + ", modifiedby = ? " + "WHERE ticketid = ? ";
        int i = 0;
        pst = db.prepareStatement(sql);
        pst.setNull(++i, java.sql.Types.TIMESTAMP);
        pst.setInt(++i, this.getModifiedBy());
        pst.setInt(++i, this.getId());
        resultCount = pst.executeUpdate();
        pst.close();
        // Update the ticket log
        TicketLog thisEntry = new TicketLog();
        thisEntry.setEnteredBy(this.getModifiedBy());
        thisEntry.setDepartmentCode(this.getDepartmentCode());
        thisEntry.setAssignedTo(this.getAssignedTo());
        thisEntry.setPriorityCode(this.getPriorityCode());
        thisEntry.setSeverityCode(this.getSeverityCode());
        thisEntry.setEntryText(this.getComment());
        thisEntry.setTicketId(this.getId());
        thisEntry.process(db, this.getId(), this.getEnteredBy(), this.getModifiedBy());
        if (autoCommit) {
            db.commit();
        }
    } catch (SQLException e) {
        if (autoCommit) {
            db.rollback();
        }
        throw new SQLException(e.getMessage());
    } finally {
        if (autoCommit) {
            db.setAutoCommit(true);
        }
    }
    return resultCount;
}
