public void initializePackageContents() {
    if (isInitialized)
        return;
    isInitialized = true;
    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);
    // Obtain other dependent packages
    CorePackage theCorePackage = (CorePackage) EPackage.Registry.INSTANCE.getEPackage(CorePackage.eNS_URI);
    DomainPackage theDomainPackage = (DomainPackage) EPackage.Registry.INSTANCE.getEPackage(DomainPackage.eNS_URI);
    // Create type parameters
    // Set bounds for type parameters
    // Add supertypes to classes
    communicationLinkEClass.getESuperTypes().add(theCorePackage.getPowerSystemResource());
    remoteControlEClass.getESuperTypes().add(this.getRemotePoint());
    remotePointEClass.getESuperTypes().add(theCorePackage.getIdentifiedObject());
    remoteSourceEClass.getESuperTypes().add(this.getRemotePoint());
    remoteUnitEClass.getESuperTypes().add(theCorePackage.getPowerSystemResource());
    // Initialize classes and features; add operations and parameters
    initEClass(communicationLinkEClass, CommunicationLink.class, "CommunicationLink", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEClass(remoteControlEClass, RemoteControl.class, "RemoteControl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRemoteControl_ActuatorMaximum(), theDomainPackage.getFloat(), null, "actuatorMaximum", null, 0, 1, RemoteControl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, !IS_ORDERED);
    initEReference(getRemoteControl_ActuatorMinimum(), theDomainPackage.getFloat(), null, "actuatorMinimum", null, 0, 1, RemoteControl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, !IS_ORDERED);
    initEReference(getRemoteControl_RemoteControlled(), theDomainPackage.getBoolean(), null, "remoteControlled", null, 0, 1, RemoteControl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, !IS_ORDERED);
    initEClass(remotePointEClass, RemotePoint.class, "RemotePoint", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEClass(remoteSourceEClass, RemoteSource.class, "RemoteSource", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getRemoteSource_Deadband(), theDomainPackage.getFloat(), null, "deadband", null, 0, 1, RemoteSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, !IS_ORDERED);
    initEReference(getRemoteSource_ScanInterval(), theDomainPackage.getSeconds(), null, "scanInterval", null, 0, 1, RemoteSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, !IS_ORDERED);
    initEReference(getRemoteSource_SensorMaximum(), theDomainPackage.getFloat(), null, "sensorMaximum", null, 0, 1, RemoteSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, !IS_ORDERED);
    initEReference(getRemoteSource_SensorMinimum(), theDomainPackage.getFloat(), null, "sensorMinimum", null, 0, 1, RemoteSource.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, !IS_ORDERED);
    initEClass(remoteUnitEClass, RemoteUnit.class, "RemoteUnit", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRemoteUnit_RemoteUnitType(), this.getRemoteUnitType(), "remoteUnitType", null, 0, 1, RemoteUnit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, !IS_ORDERED);
    // Initialize enums and add enum literals
    initEEnum(remoteUnitTypeEEnum, RemoteUnitType.class, "RemoteUnitType");
    addEEnumLiteral(remoteUnitTypeEEnum, RemoteUnitType.RTU);
    addEEnumLiteral(remoteUnitTypeEEnum, RemoteUnitType.SUBSTATION_CONTROL_SYSTEM);
    addEEnumLiteral(remoteUnitTypeEEnum, RemoteUnitType.CONTROL_CENTER);
    addEEnumLiteral(remoteUnitTypeEEnum, RemoteUnitType.IED);
    initEEnum(sourceEEnum, Source.class, "Source");
    addEEnumLiteral(sourceEEnum, Source.PROCESS);
    addEEnumLiteral(sourceEEnum, Source.DEFAULTED);
    addEEnumLiteral(sourceEEnum, Source.SUBSTITUTED);
}
