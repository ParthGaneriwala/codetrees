public String doView(RenderRequest request, RenderResponse response) throws Exception {
    // The JSP to show upon success
    String defaultView = VIEW_PAGE;
    // Determine the project container to use
    Project project = findProject(request);
    // Check the user's permissions
    User user = getUser(request);
    if (!ProjectUtils.hasAccess(project.getId(), user, "project-news-view")) {
        throw new PortletException("Unauthorized to view in this project");
    }
    // Determine the database connection to use
    Connection db = useConnection(request);
    // Determine the paging url
    PortletURL renderURL = response.createRenderURL();
    renderURL.setParameter("portlet-action", "show");
    renderURL.setParameter("portlet-object", "blog");
    String url = renderURL.toString();
    // Paging will be used for remembering several list view settings
    PagedListInfo pagedListInfo = getPagedListInfo(request, PAGED_LIST_INFO);
    pagedListInfo.setLink(url);
    pagedListInfo.setColumnToSortBy("n.priority_id asc, n.start_date desc");
    // Load the records
    BlogPostList newsList = new BlogPostList();
    newsList.setProjectId(project.getId());
    newsList.setPagedListInfo(pagedListInfo);
    // Limit the records displayed based on access
    if ("archived".equals(pagedListInfo.getListView()) && ProjectUtils.hasAccess(project.getId(), user, "project-news-view-archived")) {
        newsList.setArchivedNews(Constants.TRUE);
    } else if ("unreleased".equals(pagedListInfo.getListView()) && ProjectUtils.hasAccess(project.getId(), user, "project-news-view-unreleased")) {
        newsList.setUnreleasedNews(Constants.TRUE);
    } else if ("drafts".equals(pagedListInfo.getListView()) && ProjectUtils.hasAccess(project.getId(), user, "project-news-view-unreleased")) {
        newsList.setIncompleteNews(Constants.TRUE);
    } else {
        if (ProjectUtils.hasAccess(project.getId(), user, "project-news-view-unreleased")) {
            // all news (project access)
            newsList.setOverviewAll(true);
        } else {
            // current news (default)
            newsList.setCurrentNews(Constants.TRUE);
        }
    }
    // Determine the current view
    String filter = getPageView(request);
    String filterParam = getPageParameter(request);
    // By Category
    if ("category".equals(filter)) {
        if ("-1".equals(filterParam)) {
            newsList.setCheckNullCategoryId(true);
        } else {
            newsList.setCategoryId(filterParam);
        }
    }
    // By Author
    if ("author".equals(filter)) {
        newsList.setEnteredBy(filterParam);
    }
    // By Date
    if ("date".equals(filter)) {
        newsList.setPublishedYearMonth(filterParam);
    }
    if (StringUtils.isNumber(filter)) {
        pagedListInfo.setPage(Integer.parseInt(filter));
    }
    // If the filter is a # then use paging...
    newsList.setBuildCommentCount(true);
    newsList.buildList(db);
    request.setAttribute(BLOG_LIST, newsList);
    // Record view
    PortalUtils.processSelectHook(request, newsList);
    // JSP view
    return defaultView;
}
