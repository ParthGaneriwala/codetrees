public void start() {
    if (Renderables.menu.getState() == State.Highscore) {
        Renderables.menu.setState(State.Setup);
        return;
    }
    if (Settings.isPaused)
        return;
    try {
        saveIni(new File("conf.ini"));
    } catch (Exception e) {
        e.printStackTrace();
    }
    Renderables.menu.setState(State.Game);
    GlobalSettings.numLinesDropped = 0;
    Settings.numPiecesDropped = 0;
    GlobalSettings.level = 1;
    Settings.nextLevel = -1;
    GlobalSettings.score.clear();
    GlobalSettings.combo.clear();
    resetCombo(true);
    GlobalSettings.formatter = new DecimalFormat("###,###");
    // TODO Change this back once I know it all works :)
    GlobalSettings.levelModes = EnumSet.noneOf(LevelMode.class);
    // GlobalSettings.levelModes=EnumSet.of(LevelMode.BombTetris);
    Renderables.tetris = new TextExplode(Images.tetris, this.getWidth(), this.getHeight());
    Renderables.cTetris = new TextExplode(Images.cTetris, this.getWidth(), this.getHeight());
    clearBoard();
    Renderables.scores.clear();
    Renderables.linesToRemove.clear();
    Updatables.linesNoRender = new boolean[Settings.boardHeight];
    Arrays.fill(Updatables.linesNoRender, false);
    Renderables.tetris.start();
    Settings.currPiece = new TetrisPiece();
    Settings.currPiece.setRandomShape();
    Settings.nextPiece = new TetrisPiece();
    Settings.nextPiece.setRandomShape();
    Settings.holdPiece = new TetrisPiece();
    newPiece();
    Updatables.timeoutTime = timeoutTime() / GlobalSettings.updateTickTime;
    Updatables.doTick = true;
    Updatables.pieceDropHeight = 0;
    Updatables.isWaitingAfterLine = false;
    Updatables.isWaitingAfterPiece = false;
    Updatables.isBomb = false;
    Updatables.isNewPiece = false;
    updateBackground();
}
