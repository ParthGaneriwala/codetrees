public String getTextFileContents(SVNRepositoryHandle handle, String filePath, long revision) throws ReadSVNException {
    SVNRepository repository = repositories.get(handle.getRepositoryLocation());
    if (repository == null) {
        ReadSVNException svnException = new ReadSVNException("Requested repository is not available, a call to connect" + " is required before reading a repository. ID of handle provided: [" + handle.getRepositoryLocation() + "].");
        logger.error(svnException);
        throw (svnException);
    }
    SVNNodeKind nodeKind;
    try {
        nodeKind = repository.checkPath(filePath, revision);
    } catch (SVNException e) {
        ReadSVNException svnException = new ReadSVNException("An error occured while accessing a repository file at [" + filePath + "," + revision + "].", e);
        logger.error(svnException);
        throw svnException;
    }
    if (nodeKind == SVNNodeKind.NONE) {
        ReadSVNException svnException = new ReadSVNException("The requested repository file doesn't exist at [" + filePath + "," + revision + "].");
        logger.error(svnException);
        throw svnException;
    } else if (nodeKind == SVNNodeKind.DIR) {
        ReadSVNException svnException = new ReadSVNException("The requested file entry is a directory instead at [" + filePath + "," + revision + "].");
        logger.error(svnException);
        throw svnException;
    }
    Map fileProperties = new HashMap();
    ByteArrayOutputStream baos = new ByteArrayOutputStream();
    String ret = "";
    try {
        repository.getFile(filePath, revision, fileProperties, baos);
    } catch (SVNException e) {
        ReadSVNException svnException = new ReadSVNException("An error occurred while reading file contents at [" + filePath + "," + revision + "].", e);
        logger.error(svnException);
        throw svnException;
    }
    String mimeType = (String) fileProperties.get(SVNProperty.MIME_TYPE);
    if (SVNProperty.isTextMimeType(mimeType)) {
        ret = baos.toString();
    } else {
        ReadSVNException svnException = new ReadSVNException("The requested file's mime type is not a text mime type. File contents cannot be returned.");
        logger.error(svnException);
        throw svnException;
    }
    ret = ret.replaceAll("\\r\\n", "\n");
    return ret;
}
