// overridable methods
public void actionPerformed(ActionEvent e) {
    if (e.getActionCommand().equals(CMD_START))
        startHodge();
    else if (e.getActionCommand().equals(CMD_STOP))
        stopHodge();
    else if (e.getSource() == MI_Load) {
        if (IS_APPLET)
            // augh
            return;
        setPause(true);
        setUpdate(false);
        // FD.setFilter
        FileDialog FD = new FileDialog(getMainFrame(), "Load GIF/JPG...");
        FD.setVisible(true);
        String file = FD.getFile();
        if (file != null) {
            updateStatusTxt("Loading " + file + " ...");
            loadHodge(FD.getDirectory() + FS + file);
        }
        setPause(false);
    } else if (e.getSource() == MI_Save) {
        if (!HodgeMachine.isRunning() || IS_APPLET)
            // augh
            return;
        setPause(true);
        FileDialog FD = new FileDialog(getMainFrame(), "Save Hodge", FileDialog.SAVE);
        FD.setVisible(true);
        String file = FD.getFile();
        if (file != null) {
            updateStatusTxt("Saving " + file + ".gif ...");
            saveHodge(FD.getDirectory() + FS + FD.getFile() + ".gif");
        }
    } else if (e.getSource() == MI_Scram) {
        if (HodgeMachine.isRunning())
            HodgeMachine.scramble(LSB_Vars[LSB_DECAY].getValue());
    } else if (e.getSource() == MI_Help) {
        List<String> maxims = FileHelper.readFile("maxims.txt");
        int m = (int) ((Math.random() * maxims.size()));
        HelpLab.setText(maxims.get(m));
        if (HelpDialog != null && !HelpDialog.isVisible())
            HelpDialog.setVisible(true);
    } else if (e.getSource() == MI_About) {
        if (AboutDialog != null && !AboutDialog.isVisible())
            AboutDialog.setVisible(true);
    } else if (e.getSource() == UpButt) {
        setUpdate(!HodgeMachine.isUpdating());
    } else if (e.getActionCommand().startsWith(THEME_CMD_PREFIX)) {
        updateHodgeTheme(e.getActionCommand().substring(THEME_CMD_PREFIX.length()));
    } else if (e.getActionCommand().startsWith(INIT_CMD_PREFIX)) {
        String initStr = e.getActionCommand().substring(INIT_CMD_PREFIX.length());
        int i = Integer.parseInt(initStr);
        HodgeMachine.setInitStyle(i);
        InitTxt.setText("Start Mode: " + HodgeEngine.initStrings[i]);
    }
}
