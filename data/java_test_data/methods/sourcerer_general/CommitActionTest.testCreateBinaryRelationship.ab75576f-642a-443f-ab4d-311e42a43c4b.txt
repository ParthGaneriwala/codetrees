@Test
public void testCreateBinaryRelationship() {
    try {
        // Create a Model
        Model m = new Model();
        m.voteName("XXXXXXX Domain", true, 1L);
        m = DaoUtil.getModelDao().save(m);
        // Insert 2 features
        Feature f1 = new Feature();
        Feature f2 = new Feature();
        f1.vote(true, 11111L);
        f2.vote(true, 2222L);
        f1.voteName("ThisIsFirstOnehaha", true, 11111L, m.getId());
        f2.voteName("opopopopopop", true, 2222L, m.getId());
        f1.setModel(m);
        f2.setModel(m);
        f1 = DaoUtil.getFeatureDao().save(f1);
        f2 = DaoUtil.getFeatureDao().save(f2);
        // Make and handle request
        BinaryRelationshipOperation op = new BinaryRelationshipOperation();
        op.setLeftFeatureId(f1.getId());
        op.setRightFeatureId(f2.getId());
        op.setName(Resources.OP_CREATE_RELATIONSHIP);
        op.setType(Resources.BIN_REL_REFINES);
        op.setVote(true);
        op.setUserid(1212L);
        op.setModelId(m.getId());
        CommitRequest req = new CommitRequest();
        req.setId(444L);
        req.setName(Resources.REQ_COMMIT);
        req.setRequesterId(op.getUserid());
        req.setModelId(m.getId());
        req.setOperation(op);
        ResponseGroup rg = new ResponseGroup();
        action.execute(req, rg);
        logger.info("------------- CREATE NEW BINARY RELATIONSHIP -------------");
        showResponse(rg.getBack());
        showResponse(rg.getBroadcast());
        // Query and show
        BinaryRelationship rel = new BinaryRelationship();
        rel.setType(op.getType());
        rel.setFeatures(f1, f2);
        assertTrue(DaoUtil.getRelationshipDao().getByExample(m.getId(), rel).size() == 1);
        logger.info(((Relationship) DaoUtil.getRelationshipDao().getByExample(m.getId(), rel).get(0)).getFeatures());
    } catch (Exception e) {
        logger.error("Couldn't execute.", e);
        assertTrue(false);
    }
}
