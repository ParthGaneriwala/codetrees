public void testVerifyAvailability() {
    // let's check whether unknown collation identifiers are rejected
    try {
        statement.execute(getSetCollationStmt("ThisIsDefinitlyNoValidCollationIdentifier"));
        fail("database did not reject invalid collation name");
    } catch (java.sql.SQLException e) {
    }
    // let's check whether the DB accepts all known collations
    int count = 0;
    while (collIterator.hasNext()) {
        String collationName = (String) collIterator.next();
        try {
            statement.execute(getSetCollationStmt(collationName));
        } catch (java.sql.SQLException e) {
            fail("could not set collation '" + collationName + "'\n  exception message: " + e.getMessage());
        }
        ++count;
    }
    System.out.println("checked " + count + " collations for availability.");
    // even if the above worked, we cannot be sure that all locales are really supported.
    // The fact that SET DATABASE COLLATION succeeeded only means that a Collator could
    // be instantiated with a Locale matching the given collation name. But what if
    // Locale.Instance(...) lied, and returned a fallback Locale instance?
    // 
    // Hmm, looking at the documentation of Locale.getAvailableLocales, I'm not sure
    // whether it is really feasible. The doc states "returns a list of all installed Locales".
    // The "installed" puzzles me - maybe this is really different per installation, and not only
    // per JDK version?
    java.util.Locale[] availableLocales = java.util.Locale.getAvailableLocales();
    org.hsqldb.lib.Set existenceCheck = new org.hsqldb.lib.HashSet();
    for (int i = 0; i < availableLocales.length; ++i) {
        String availaleName = availableLocales[i].getLanguage();
        if (availableLocales[i].getCountry().length() > 0) {
            availaleName += "-" + availableLocales[i].getCountry();
        }
        existenceCheck.add(availaleName);
    }
    String notInstalled = "";
    int expected = 0, failed = 0;
    while (localeIterator.hasNext()) {
        String localeName = (String) localeIterator.next();
        ++expected;
        if (!existenceCheck.contains(localeName)) {
            if (notInstalled.length() > 0) {
                notInstalled += "; ";
            }
            notInstalled += localeName;
            ++failed;
        }
    }
    if (notInstalled.length() > 0) {
        fail("the following locales are not installed:\n  " + notInstalled + "\n  (" + failed + " out of " + expected + ")");
    }
}
