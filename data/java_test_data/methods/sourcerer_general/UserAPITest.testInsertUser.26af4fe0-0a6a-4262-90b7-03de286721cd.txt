public void testInsertUser() throws Exception {
    // The minimum number of fields for a successful user insert
    DataRecord record = new DataRecord();
    record.setName("user");
    record.setAction(DataRecord.INSERT);
    record.addField("firstName", "John");
    record.addField("lastName", "Smith");
    record.addField("username", "jsmith@concursive.com");
    record.addField("password", PasswordHash.encrypt("password"));
    record.addField("groupId", GROUP_ID);
    record.addField("departmentId", "1");
    record.addField("enabled", true);
    api.save(record);
    // Add Meta Info with fields required
    ArrayList<String> meta = new ArrayList<String>();
    meta.add("id");
    api.setTransactionMeta(meta);
    // Process the complete transaction
    processTheTransactions(api, packetContext);
    assertFalse("API reported a transaction error: " + api.getLastResponse(), api.hasError());
    // When supplying meta, the API will return the record inserted
    int newUserId = Integer.parseInt(api.getResponseValue("id"));
    assertTrue(newUserId > 0);
    // delete the inserted user
    User thisUser = new User(db, newUserId);
    thisUser.getProfileProject().delete(db, null);
    assertTrue(thisUser.delete(db) == 1);
}
