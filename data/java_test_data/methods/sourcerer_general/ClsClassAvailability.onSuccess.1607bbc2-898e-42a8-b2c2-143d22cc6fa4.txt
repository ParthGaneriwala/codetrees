public void onSuccess(Object result) {
    clearStatusText();
    cbCampuses.setEnabled(true);
    cbSemesters.setEnabled(true);
    cbSubjects.setEnabled(true);
    List courses = (List) result;
    if (courses.size() == 0) {
        setStatusText("An error has encountered.");
    } else {
        // Label Columns of the course table
        table.getRowFormatter().setStyleName(0, column_label_style);
        table.setText(0, 0, "Focus");
        table.setText(0, 1, "CRN");
        table.setText(0, 2, "Course");
        table.setText(0, 3, "Section");
        table.setText(0, 4, "Title");
        table.setText(0, 5, "Credits");
        table.setText(0, 6, "Instructor");
        table.setText(0, 7, "Seats Available");
        table.setText(0, 8, "Days");
        table.setText(0, 9, "Times");
        table.setText(0, 10, "Room");
        table.setText(0, 11, "Dates");
        table.setBorderWidth(0);
        for (int i = 1; i <= courses.size(); i++) {
            AvailableSeatsBySection record = (AvailableSeatsBySection) courses.get(--i);
            ++i;
            table.setText(i, 0, record.getATTRIBUTE());
            table.setText(i, 1, record.getCRN());
            table.setText(i, 2, record.getCOURSENAME() + record.getCOURSENUMBER());
            table.setText(i, 3, record.getSECTION());
            table.setText(i, 4, record.getCOURSEDESCRIPTION());
            table.setText(i, 5, record.getCOURSECREDITS());
            table.setText(i, 6, record.getINSTRUCTOR());
            table.setText(i, 7, record.getTOTALSEATAVAILABLE());
            table.setText(i, 8, record.getDAYS());
            table.setText(i, 9, record.getTIME());
            table.setText(i, 10, record.getLOCATION());
            table.setText(i, 11, Integer.toString(i));
            if ((i > 0) && ((i % 2) == 0)) {
                // even row, reset backgroud color
                table.getRowFormatter().setStyleName(i, "courseEvenRow");
            }
        }
    }
}
