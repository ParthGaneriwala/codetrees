public void mouseDragged(MouseEvent me) {
    if (!SwingUtilities.isLeftMouseButton(me)) {
        return;
    }
    if (startPos != null) {
        Point framePos = parentComponent.getLocation();
        int dx = me.getX() - startPos.x;
        int dy = me.getY() - startPos.y;
        Rectangle newBounds = new Rectangle();
        switch(cursor) {
            case Cursor.N_RESIZE_CURSOR:
                newBounds = new Rectangle((int) framePos.getX(), (int) framePos.getY() + dy, parentComponent.getWidth(), parentComponent.getHeight() - dy);
                tryResize(newBounds);
                didResized();
                break;
            case Cursor.S_RESIZE_CURSOR:
                newBounds = new Rectangle((int) framePos.getX(), (int) framePos.getY(), parentComponent.getWidth(), parentComponent.getHeight() + dy);
                tryResize(newBounds);
                startPos = me.getPoint();
                didResized();
                break;
            case Cursor.W_RESIZE_CURSOR:
                newBounds = new Rectangle((int) framePos.getX() + dx, (int) framePos.getY(), parentComponent.getWidth() - dx, parentComponent.getHeight());
                tryResize(newBounds);
                didResized();
                break;
            case Cursor.E_RESIZE_CURSOR:
                newBounds = new Rectangle((int) framePos.getX(), (int) framePos.getY(), parentComponent.getWidth() + dx, parentComponent.getHeight());
                tryResize(newBounds);
                startPos = me.getPoint();
                didResized();
                break;
            case Cursor.NW_RESIZE_CURSOR:
                newBounds = new Rectangle((int) framePos.getX() + dx, (int) framePos.getY() + dy, parentComponent.getWidth() - dx, parentComponent.getHeight() - dy);
                tryResize(newBounds);
                didResized();
                break;
            case Cursor.NE_RESIZE_CURSOR:
                newBounds = new Rectangle((int) framePos.getX(), (int) framePos.getY() + dy, parentComponent.getWidth() + dx, parentComponent.getHeight() - dy);
                tryResize(newBounds);
                startPos = new Point(me.getX(), startPos.y);
                didResized();
                break;
            case Cursor.SW_RESIZE_CURSOR:
                newBounds = new Rectangle((int) framePos.getX() + dx, (int) framePos.getY(), parentComponent.getWidth() - dx, parentComponent.getHeight() + dy);
                tryResize(newBounds);
                startPos = new Point(startPos.x, me.getY());
                didResized();
                break;
            case Cursor.SE_RESIZE_CURSOR:
                newBounds = new Rectangle((int) framePos.getX(), (int) framePos.getY(), parentComponent.getWidth() + dx, parentComponent.getHeight() + dy);
                tryResize(newBounds);
                startPos = me.getPoint();
                didResized();
                break;
            case Cursor.MOVE_CURSOR:
                Point loc = parentComponent.getLocationOnScreen();
                loc.translate(dx, dy);
                parentComponent.setLocation(loc.x, loc.y);
                didResized();
        }
        // cursor shouldn't change while dragging
        setCursor(Cursor.getPredefinedCursor(cursor));
    }
    if (otherAdapter != null)
        otherAdapter.mouseDragged(me);
}
