// ------------------------ I/O convenience methods ----------------------------
Document load(Object source, String encoding) throws IOException, UnsupportedEncodingException {
    BufferedReader reader = null;
    boolean close = false;
    if (source instanceof InputStream) {
        InputStream is = (InputStream) source;
        InputStreamReader isr = isEncoding(encoding) ? new InputStreamReader(is, encoding) : new InputStreamReader(is);
        reader = new BufferedReader(isr);
    } else if (source instanceof File) {
        InputStream is = new FileInputStream((File) source);
        InputStreamReader isr = isEncoding(encoding) ? new InputStreamReader(is, encoding) : new InputStreamReader(is);
        close = true;
        reader = new BufferedReader(isr);
    } else if (source instanceof String) {
        InputStream is = new FileInputStream((String) source);
        InputStreamReader isr = isEncoding(encoding) ? new InputStreamReader(is, encoding) : new InputStreamReader(is);
        close = true;
        reader = new BufferedReader(isr);
    } else if (source instanceof BufferedReader) {
        reader = (BufferedReader) source;
    } else if (source instanceof Reader) {
        reader = new BufferedReader((Reader) source);
    } else {
        // NOI18N
        throw new IOException("unhandled load source: " + source);
    }
    clear();
    String line;
    Vector lines = this.lines;
    try {
        while (null != (line = reader.readLine())) {
            lines.addElement(line);
        }
    } finally {
        if (close) {
            try {
                reader.close();
            } catch (IOException ex) {
            }
        }
    }
    return this;
}
