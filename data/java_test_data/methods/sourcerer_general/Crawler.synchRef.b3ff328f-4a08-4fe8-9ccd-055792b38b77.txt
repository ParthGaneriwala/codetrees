private EntityKey synchRef(CrawlerToken crawlerToken) {
    // synch 0,x=T11.uk
    logger.info("processing synch node token " + crawlerToken + "...");
    EntityKey entityKey = crawlerToken.getEntityKey();
    Entity<EntityKey> sourceEntity = sourceGraph.loadEntity(entityKey);
    Entity<EntityKey> targetEntity = targetGraph.loadEntity(entityKey);
    EntityKey targetEntityKey;
    logger.info("trying to synch node " + sourceEntity + " to " + targetEntity);
    if (targetEntity == null) {
        targetEntity = sourceEntity;
        targetEntityKey = targetEntity.getKey();
        targetGraph.insertEntity(targetEntity);
        logger.info("inserted node " + targetEntity);
        logger.info("scheduling token to process relations...");
        List<Class<? extends Relation>> relationClassesWithSourceEntityKeyClass = sourceGraph.getRelationClassesWithSourceEntityKeyClass(sourceEntity.getKey().getClass());
        if (relationClassesWithSourceEntityKeyClass != null) {
            for (Class<? extends Relation> relationClass : relationClassesWithSourceEntityKeyClass) {
                CrawlerToken synchEdgesToken = CrawlerToken.createSynchEdgesToken(relationClass, sourceEntity.getKey(), null, null, crawlerToken.getStamp());
                crawlerTokensQueue.offer(synchEdgesToken);
                logger.info("created token to synch relations type " + relationClass + " on node " + targetEntity + " synchToken=" + synchEdgesToken);
            }
        }
        List<Class<? extends Relation>> relationClassesWithTargetEntityKeyClass = sourceGraph.getRelationClassesWithTargetEntityKeyClass(sourceEntity.getKey().getClass());
        if (relationClassesWithTargetEntityKeyClass != null) {
            for (Class<? extends Relation> relationClass : relationClassesWithTargetEntityKeyClass) {
                CrawlerToken synchEdgesToken = CrawlerToken.createSynchEdgesToken(relationClass, null, sourceEntity.getKey(), null, crawlerToken.getStamp());
                crawlerTokensQueue.offer(synchEdgesToken);
                logger.info("created token to synch relations type " + relationClass + " on node " + targetEntity + " synchToken=" + synchEdgesToken);
            }
        }
        logger.info("relations token scheduled.");
    } else {
        targetEntityKey = targetEntity.getKey();
    }
    logger.info("synch node token " + crawlerToken + " processed. created targetNodeRef " + targetEntityKey);
    return targetEntityKey;
}
