@SuppressWarnings("unchecked")
public boolean startService() {
    if (rj != null && rj.isRunning()) {
        return true;
    }
    ReaderManager rm = new ReaderManager();
    String[] para;
    String communicationType = readerBean.getCommunicationType();
    Properties p = readerBean.getP();
    if (Configuration.COMMUNICATION_TYPE_SERIAL.equals(communicationType)) {
        para = new String[5];
        para[0] = p.getProperty("ip");
        para[1] = p.getProperty("port");
        para[2] = p.getProperty("username");
        para[3] = p.getProperty("password");
        para[4] = p.getProperty("antenna");
    } else if (Configuration.COMMUNICATION_TYPE_NETWORK.equals(communicationType)) {
        para = new String[7];
        para[0] = p.getProperty("serial");
        para[1] = p.getProperty("baudrate");
        para[2] = p.getProperty("databits");
        para[3] = p.getProperty("stopbits");
        para[4] = p.getProperty("parity");
        para[5] = p.getProperty("timeout");
    } else if (Configuration.COMMUNICATION_TYPE_VIRTUAL.equals(communicationType)) {
        para = new String[5];
        para[0] = p.getProperty("ip");
        para[1] = p.getProperty("hex");
        para[2] = p.getProperty("antennaid");
        para[3] = p.getProperty("tagid");
        para[4] = p.getProperty("sample-data");
    } else {
        return false;
    }
    ServiceInfo si = new ServiceInfo();
    try {
        Class riClass = Class.forName(readerBean.getDriverClass());
        ri = (ReaderInterface) riClass.newInstance();
        ri.Open(para);
        si.setTimeFilter(String.valueOf(readerBean.getTimeFilter()));
        si.setChainName(readerBean.getChainName());
        si.setServiceName(readerBean.getName());
        si.setReaderID(readerBean.getReaderid());
        rj.setServiceInfo(si);
        rj.setInterval(readerBean.getInterval());
        rj.bindReaderInterface(ri);
        rj.startJob();
        Thread thr = new Thread(rj);
        thr.start();
        log.debug("device [" + readerBean.getName() + "] started");
        rm.addSysmsg("device [" + readerBean.getName() + "] started");
    } catch (Exception ex) {
        // ex.printStackTrace();
        log.error("device [" + readerBean.getName() + "] start error:" + ex.getMessage());
        rm.addSysmsg("device [" + readerBean.getName() + "] start error:" + ex.getMessage());
        try {
            if (ri != null)
                ri.Close();
        } catch (Exception e) {
        }
        return false;
    }
    return true;
}
