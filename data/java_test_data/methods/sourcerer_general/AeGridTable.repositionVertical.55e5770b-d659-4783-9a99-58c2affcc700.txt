public Dimension repositionVertical() {
    final int maxRows = getMaxRows();
    final int maxCols = getMaxCols();
    int[] rowHeight = new int[maxRows];
    int[] rowDelta = new int[maxRows];
    int[] colWidth = new int[maxCols];
    int[] colDelta = new int[maxCols];
    // Calculate the heights and deltas for each row
    for (int i = 0; i < maxRows; i++) {
        rowHeight[i] = getMaxRowHeight(i);
        if (i == 0) {
            rowDelta[i] = mLayoutPrefs.getMarginTop();
        } else {
            rowDelta[i] = rowHeight[i - 1] + rowDelta[i - 1] + mLayoutPrefs.getInterLevelSpacing();
        }
    }
    // Calculate the widths and deltas of each column
    for (int i = 0; i < maxCols; i++) {
        colWidth[i] = getMaxColWidth(i);
        if (i == 0) {
            colDelta[i] = mLayoutPrefs.getMarginLeft();
        } else {
            colDelta[i] = colWidth[i - 1] + colDelta[i - 1] + mLayoutPrefs.getInterNodeSpacing();
        }
    }
    // if all simple standard icon w/text east or west activities they will not be centered
    boolean simpleGrid = isSimpleGrid();
    // Process all container elements within grid to assign proper coordinates
    for (Iterator iter = mGridData.iterator(); iter.hasNext(); ) {
        AeGridElement gridElement = (AeGridElement) iter.next();
        AeGraphFigure nodeFig = gridElement.getNode().getFigure();
        int col = gridElement.getColumn();
        int colCenter = 0;
        if (!simpleGrid) {
            colCenter = Math.max(0, (colWidth[col] - nodeFig.getPreferredSize().width)) + getAnchorWidthDelta(gridElement);
        }
        int row = gridElement.getRow();
        int rowCenter = Math.max(0, rowHeight[row] - nodeFig.getPreferredSize().height);
        int figX = colDelta[col] + (colCenter / 2);
        int figY = rowDelta[row] + (rowCenter / 2);
        nodeFig.setLocation(figX, figY);
    }
    // Calculate and return the new size which is based on delta of the last
    // row or column plus the height and width of the elements at that location
    Dimension sz = new Dimension(colDelta[maxCols - 1] + colWidth[maxCols - 1], rowDelta[maxRows - 1] + rowHeight[maxRows - 1]);
    return sz;
}
