// -------------------------------------------------------------------------
private void parse() throws Exception {
    annotation = new Annotation(species, annotationType, curator);
    HashSet orphans = new HashSet();
    alias = new HashMap();
    for (int i = 0; i < lines.length; i++) {
        String line = lines[i];
        if (line.length() < 2)
            continue;
        String[] tokens = line.split("\t");
        // Get the GO annotation which is the third thing on the line
        int id = stringToInt(tokens[2].trim());
        // Get the evidence code which is the fourth thing on the line
        String evidenceCode = tokens[3].trim().toUpperCase();
        if (!deleteCodes.contains(evidenceCode)) {
            String primaryID = tokens[1].trim().toUpperCase();
            if (alias.containsKey(primaryID)) {
                alias.get(primaryID).add(primaryID);
            } else {
                HashSet tmp = new HashSet();
                tmp.add(primaryID);
                alias.put(primaryID, tmp);
            }
            for (int k = 4; k < tokens.length; k++) {
                if (!tokens[k].trim().equals("")) {
                    if (alias.containsKey(tokens[k].trim().toUpperCase())) {
                        alias.get(tokens[k].trim().toUpperCase()).add(primaryID);
                    } else {
                        HashSet tmp = new HashSet();
                        tmp.add(primaryID);
                        alias.put(tokens[k].trim().toUpperCase(), tmp);
                    }
                }
            }
            Integer id2 = new Integer(id);
            Integer mainId = (Integer) synonymHash.get(id2);
            if (mainId != null) {
                if ((primaryID != null) && (primaryID.length() != 0) && (id != -1)) {
                    annotation.add(primaryID, mainId.intValue());
                }
                consistency = true;
            } else {
                orphans.add(id2);
                System.out.println("orphan GO category: " + id2);
                orphansFound = true;
            }
        }
    }
}
