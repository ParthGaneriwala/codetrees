public void actionPerformed(ActionEvent ae) {
    if (ae.getSource() == okButton) {
        List<Layer> sources = new ArrayList<Layer>(selectedSources.getModel().getSize());
        for (int ndx = 0; ndx < selectedSources.getModel().getSize(); ndx++) sources.add(((Layer) selectedSources.getModel().getElementAt(ndx)));
        if (baseLayer)
            mLayerHandler.setBaseLayers(sources);
        else
            mLayerHandler.setOverlays(sources);
        setVisible(false);
    } else if (ae.getSource() == cancelButton) {
        setVisible(false);
    } else if (ae.getSource() == addSource) {
        if (!dataSources.isSelectionEmpty()) {
            List<Object> selection = Arrays.asList(dataSources.getSelectedValues());
            List<Object> selected = new ArrayList<Object>(selectedSources.getModel().getSize());
            for (int ndx = 0; ndx < selectedSources.getModel().getSize(); ndx++) selected.add(selectedSources.getModel().getElementAt(ndx));
            selected.addAll(selection);
            selectedSources.setListData(selected.toArray());
            List<Object> data = new ArrayList<Object>(dataSources.getModel().getSize());
            for (int ndx = 0; ndx < dataSources.getModel().getSize(); ndx++) if (!selection.contains(dataSources.getModel().getElementAt(ndx)))
                data.add(dataSources.getModel().getElementAt(ndx));
            dataSources.setListData(data.toArray());
            dataSources.clearSelection();
        }
    } else if (ae.getSource() == removeSource) {
        if (!selectedSources.isSelectionEmpty()) {
            List<Object> selection = Arrays.asList(selectedSources.getSelectedValues());
            List<Object> data = new ArrayList<Object>(dataSources.getModel().getSize());
            for (int ndx = 0; ndx < dataSources.getModel().getSize(); ndx++) data.add(dataSources.getModel().getElementAt(ndx));
            data.addAll(selection);
            dataSources.setListData(data.toArray());
            List<Object> selected = new ArrayList<Object>(selectedSources.getModel().getSize());
            for (int ndx = 0; ndx < selectedSources.getModel().getSize(); ndx++) if (!selection.contains(selectedSources.getModel().getElementAt(ndx)))
                selected.add(selectedSources.getModel().getElementAt(ndx));
            selectedSources.setListData(selected.toArray());
            selectedSources.clearSelection();
        }
    } else if (ae.getSource() == upButton) {
        if (selectedSources.getSelectedIndex() > 0) {
            Object[] data = new Object[selectedSources.getModel().getSize()];
            int selectedNdx = selectedSources.getSelectedIndex();
            for (int ndx = 0; ndx < data.length; ndx++) {
                data[ndx] = selectedSources.getModel().getElementAt(ndx);
            }
            Object tmp = data[selectedNdx];
            data[selectedNdx] = data[selectedNdx - 1];
            data[selectedNdx - 1] = tmp;
            selectedSources.setListData(data);
            selectedSources.setSelectedIndex(selectedNdx - 1);
        }
    } else if (ae.getSource() == downButton) {
        if (selectedSources.getSelectedIndex() != -1) {
            Object[] data = new Object[selectedSources.getModel().getSize()];
            int selectedNdx = selectedSources.getSelectedIndex();
            if (selectedNdx == selectedSources.getModel().getSize() - 1)
                return;
            for (int ndx = 0; ndx < data.length; ndx++) {
                data[ndx] = selectedSources.getModel().getElementAt(ndx);
            }
            Object tmp = data[selectedNdx];
            data[selectedNdx] = data[selectedNdx + 1];
            data[selectedNdx + 1] = tmp;
            selectedSources.setListData(data);
            selectedSources.setSelectedIndex(selectedNdx + 1);
        }
    }
}
