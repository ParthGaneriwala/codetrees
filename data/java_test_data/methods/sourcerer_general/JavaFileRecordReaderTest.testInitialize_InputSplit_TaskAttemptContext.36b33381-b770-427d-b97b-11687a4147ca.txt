@Test
public final void testInitialize_InputSplit_TaskAttemptContext() throws IOException, InterruptedException {
    JavaFileRecordReader jrrToTest = new JavaFileRecordReader();
    jrrToTest.initialize(fileSplitGood, tac);
    Text expectedKey = null;
    Text expectedValue = null;
    long expectedStart = 0;
    long expectedPos = 0;
    long expectedEnd = 149;
    FileSplit expectedSplit = fileSplitGood;
    Configuration auxJob = mapMockContext.getConfiguration();
    Path auxPath = new Path("TestMats/somefile");
    FileSystem auxFS = auxPath.getFileSystem(auxJob);
    LineReader expectedReader = new LineReader(auxFS.open(auxPath), auxJob);
    Text actualKey = jrrToTest.getKey();
    Text actualValue = jrrToTest.getValue();
    long actualStart = jrrToTest.getStart();
    long actualPos = jrrToTest.getPos();
    long actualEnd = jrrToTest.getEnd();
    FileSplit actualSplit = jrrToTest.getSplit();
    LineReader actualReader = jrrToTest.getIn();
    Assert.assertEquals(expectedKey, actualKey);
    Assert.assertEquals(expectedValue, actualValue);
    Assert.assertEquals(expectedStart, actualStart);
    Assert.assertEquals(expectedPos, actualPos);
    Assert.assertEquals(expectedEnd, actualEnd);
    Assert.assertEquals(expectedSplit, actualSplit);
    // Compare the reader.
    Text expectedReadText = new Text();
    expectedReader.readLine(expectedReadText);
    Text actualReadText = new Text();
    actualReader.readLine(actualReadText);
    Assert.assertEquals(expectedReadText, actualReadText);
}
