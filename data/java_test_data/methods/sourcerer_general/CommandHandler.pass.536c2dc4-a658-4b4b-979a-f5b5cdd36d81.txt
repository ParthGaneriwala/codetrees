public void pass(String message, boolean isDG) {
    // handling code datagrams
    if (isDG) {
        // make a new datagram object
        Datagram d = new Datagram(message);
        // determine whether to output to console
        // we don't want to output things like game_started, game_result,
        // etc,
        // because it would fill up our screen
        decideWhetherToPrintDG(d);
        // pass datagram off to appropriate SimulHandler method
        if (d.getNumber() == DatagramSetup.DG_PERSONAL_TELL) {
            SimulHandler.passTell(d);
        } else if (d.getNumber() == DatagramSetup.DG_GAME_STARTED) {
            SimulHandler.passStart(d);
        } else if (d.getNumber() == DatagramSetup.DG_GAME_RESULT) {
            SimulHandler.passFinish(d);
        } else if (d.getNumber() == DatagramSetup.DG_NOTIFY_ARRIVED) {
            SimulHandler.passConnected(d);
        } else if (d.getNumber() == DatagramSetup.DG_NOTIFY_LEFT) {
            SimulHandler.passDisconnected(d);
        } else if (d.getNumber() == DatagramSetup.DG_WHO_AM_I) {
            AdminListener.passWhoAmI(d);
        } else if (d.getNumber() == DatagramSetup.DG_DUMMY_RESPONSE) {
        }
    } else {
        // handling code for non-datagrams
        decideWhetherToPrintNonDG(message);
        // give message to the getpx listener
        boolean sawGetpx = GetpxListener.passLine(message);
        // if it saw a getpx, pass it to appropriate area
        if (sawGetpx) {
            // int codes for the dequeue
            // 1 = pass to join
            // 2 = pass to forcejoin
            // 3 = pass to open
            // 4 = pass to set
            int next = queue.dequeue();
            if (next == 1) {
                Join.handleGetpx();
            } else if (next == 2) {
                Forcejoin.handleGetpx();
            } else if (next == 3) {
                Open.handleGetpx();
            } else if (next == 4) {
                Set.handleGetpxForGiver();
            } else if (next == 5) {
                Set.handleGetpxForManager();
            } else if (next == 6) {
                Latejoin.handleGetpx();
            }
            GetpxListener.reset();
        }
        // admin authentication listener
        AdminListener.passLine(message);
        // multiple logon listener
        boolean sawMultipleLogon = MultipleLogonListener.passLine(message);
        if (sawMultipleLogon) {
            SimulHandler.getRecorder().record("Seeing a multiple logon and exiting.");
            System.exit(0);
        }
        // I was nuked
        boolean sawNuke = NukeListener.passLine(message);
        if (sawNuke) {
            SimulHandler.getRecorder().record("Seeing I was kicked out by Administrators.  Exiting.");
            System.exit(0);
        }
        // eco listener
        boolean sawECO = ECOListener.passLine(message);
        if (sawECO) {
            Games2.handleEco(ECOListener.getECO());
        }
        // games listener
        boolean sawGame = GamesListener.passLine(message);
        if (sawGame) {
            Games2.handleGames(GamesListener.getToMove(), GamesListener.getMoveNumber());
        }
    }
}
