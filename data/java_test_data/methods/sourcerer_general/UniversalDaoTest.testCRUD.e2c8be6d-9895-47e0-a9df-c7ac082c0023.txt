public void testCRUD() {
    User user = new User();
    // set required fields
    user.setUsername("foo");
    user.setPassword("bar");
    user.setFirstName("first");
    user.setLastName("last");
    user.getAddress().setCity("Denver");
    user.getAddress().setCountyId("051");
    user.getAddress().setStateId("OR");
    user.getAddress().setPostalCode("80465");
    user.setEmail("foo@bar.com");
    // create
    user = (User) universalDao.save(user);
    flush();
    assertNotNull(user.getId());
    // retrieve
    user = (User) universalDao.get(User.class, user.getId());
    assertNotNull(user);
    assertEquals("last", user.getLastName());
    // update
    user.getAddress().setCountry("USA");
    universalDao.save(user);
    flush();
    user = (User) universalDao.get(User.class, user.getId());
    assertEquals("USA", user.getAddress().getCountry());
    // delete
    universalDao.remove(User.class, user.getId());
    flush();
    try {
        universalDao.get(User.class, user.getId());
        fail("User 'foo' found in database");
    } catch (ObjectRetrievalFailureException e) {
        assertNotNull(e.getMessage());
    } catch (InvalidDataAccessApiUsageException e) {
        // Spring 2.0 throws this one
        assertNotNull(e.getMessage());
    }
}
