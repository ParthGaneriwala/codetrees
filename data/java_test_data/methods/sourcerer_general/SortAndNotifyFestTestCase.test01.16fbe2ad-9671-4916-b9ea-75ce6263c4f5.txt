@Test
public void test01() {
    SortAndNotifyJFrame frame = new SortAndNotifyJFrame();
    FrameFixture frameFix = new FrameFixture(frame);
    try {
        frameFix.show(new Dimension(300, 300));
        final List<SortAndNotifyBean> beans = createTestBeans();
        DefaultSingleSelectionTableInitializer<SortAndNotifyBean> ini = new DefaultSingleSelectionTableInitializer<SortAndNotifyBean>();
        ini.setCoFilterInput(frame.getFilterTextField());
        ini.setCoTable(frame.getTable());
        ini.setColumnDescs(ColumnDesc.createFilterableSortableColumnDescs("strVal", "intVal"));
        final ISingleSelectionListCobean<SortAndNotifyBean> cobean = ini.initialize();
        // Initialize the listeners and add them to the cobean
        final SortAndNotifyPropertyChangeListener valuePcl = new SortAndNotifyPropertyChangeListener("value");
        final SortAndNotifyPropertyChangeListener selectedValuePcl = new SortAndNotifyPropertyChangeListener("selectedValue");
        ((IPropertyChangeListenerAware) cobean).setPropertyChangeListener(valuePcl);
        ((IPropertyChangeListenerAware) cobean).setPropertyChangeListener(selectedValuePcl);
        {
            final SortAndNotifyBean selVal = cobean.getSelectedValue();
            Assert.assertNull(selVal);
            Assert.assertEquals("", valuePcl.getInfo());
            Assert.assertEquals("", selectedValuePcl.getInfo());
        }
        cobean.setValue(beans);
        cobean.setSelectedValue(beans.get(3));
        pause(1000);
        {
            final SortAndNotifyBean selVal = cobean.getSelectedValue();
            Assert.assertNotNull(selVal);
            Assert.assertEquals("D", selVal.getStrVal());
            Assert.assertEquals("[propertyChange propName='value' oldVal='null' newVal='[SN(1,A), SN(2,B), SN(3,C), SN(4,D), SN(5,E)]']", valuePcl.getInfo());
            Assert.assertEquals("[propertyChange propName='selectedValue' oldVal='null' newVal='SN(4,D)']", selectedValuePcl.getInfo());
        }
        final JTextComponentFixture textBox = frameFix.textBox("filterTextField");
        textBox.enterText("A");
        pause(1000);
        {
            final SortAndNotifyBean selVal = cobean.getSelectedValue();
            Assert.assertNotNull(selVal);
            Assert.assertEquals("D", selVal.getStrVal());
            Assert.assertEquals("[propertyChange propName='value' oldVal='null' newVal='[SN(1,A), SN(2,B), SN(3,C), SN(4,D), SN(5,E)]']", valuePcl.getInfo());
            Assert.assertEquals("[propertyChange propName='selectedValue' oldVal='null' newVal='SN(4,D)']", selectedValuePcl.getInfo());
        }
        textBox.deleteText();
        pause(1000);
    // 
    // {
    // final SortAndNotifyBean selVal = cobean.getSelectedValue();
    // Assert.assertNotNull(selVal);
    // Assert.assertEquals("D", selVal.getStrVal());
    // Assert
    // .assertEquals(
    // "[propertyChange propName='value' oldVal='null' newVal='[SN(1,A), SN(2,B), SN(3,C), SN(4,D), SN(5,E)]']",
    // valuePcl.getInfo());
    // Assert
    // .assertEquals(
    // "[propertyChange propName='selectedValue' oldVal='null' newVal='SN(4,D)']",
    // selectedValuePcl.getInfo());
    // }
    } finally {
        frameFix.cleanUp();
    }
}
