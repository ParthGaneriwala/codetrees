protected void onRender(Element parent, int index) {
    super.onRender(parent, index);
    BasePagingLoader loader = new PagingListService().getLoader(ModelNames.ORDER, criteria);
    loader.load(0, 10);
    final ListStore<BeanObject> store = new ListStore<BeanObject>(loader);
    toolBar = new PagingToolBar(10);
    toolBar.bind(loader);
    List<ColumnConfig> columns = new ArrayList<ColumnConfig>();
    final CheckBoxSelectionModel<BeanObject> smRowSelection = new CheckBoxSelectionModel<BeanObject>();
    columns.add(smRowSelection.getColumn());
    columns.add(new ColumnConfig(IOrder.SN, Resources.constants.OrderList_orderSN(), 75));
    columns.add(new ColumnConfig(IOrder.ADDTIME, Resources.constants.OrderList_addTime(), 104));
    columns.add(new ColumnConfig(IOrder.USER, "下单用户", 60));
    columns.add(new ColumnConfig(IOrder.CONSIGNEE, Resources.constants.OrderList_consignee(), 50));
    columns.add(new ColumnConfig(IOrder.ADDRESS, "收货地址", 120));
    columns.add(new ColumnConfig(IOrder.GOODSAMOUNT, Resources.constants.OrderList_totalAmount(), 50));
    columns.add(new ColumnConfig(IOrder.ORDERAMOUNT, Resources.constants.OrderList_shouldPay(), 60));
    columns.add(new ColumnConfig(IOrder.STATUS, Resources.constants.OrderList_state(), 60));
    columns.add(new ColumnConfig(IOrder.SHIPPINGSTATUS, "配送状态", 60));
    columns.add(new ColumnConfig(IOrder.PAYSTATUS, "付款状态", 60));
    ColumnConfig actcol = new ColumnConfig("Action", Resources.constants.GoodsList_action(), 65);
    columns.add(actcol);
    ColumnModel cm = new ColumnModel(columns);
    Grid<BeanObject> grid = new EditorGrid<BeanObject>(store, cm);
    grid.setLoadMask(true);
    grid.setBorders(true);
    grid.setSelectionModel(smRowSelection);
    // grid.setAutoExpandColumn("forum");
    ActionCellRenderer render = new ActionCellRenderer(grid);
    ActionCellRenderer.ActionInfo act = new ActionCellRenderer.ActionInfo();
    act.setImage("icon_edit.gif");
    act.setAction("checkOrder($id)");
    act.setTooltip("查看");
    render.addAction(act);
    act = new ActionCellRenderer.ActionInfo();
    act.setImage("icon_trash.gif");
    act.setAction("deleteOrder($id)");
    act.setTooltip("删除");
    render.addAction(act);
    actcol.setRenderer(render);
    orderState.addItem("请选择...", "choice");
    orderState.addItem("待确认", "unconfirmed");
    orderState.addItem("待付款", "unpayed");
    orderState.addItem("待发货", "unshipped");
    orderState.addItem("已完成", "finished");
    orderState.addItem("取消", "canceled");
    orderState.addItem("无效", "invalid");
    orderState.addItem("退货", "returned");
    orderState.setSelectedIndex(0);
    HorizontalPanel header = new HorizontalPanel();
    header.add(Resources.images.icon_search().createImage());
    header.add(new Label("订单号"));
    header.add(orderNumber);
    header.add(new Label("收货人"));
    header.add(consignee);
    header.add(new Label("订单状态"));
    header.add(orderState);
    header.add(btnFind);
    add(header);
    btnFind.addSelectionListener(new SelectionListener<ButtonEvent>() {

        public void componentSelected(ButtonEvent ce) {
            search();
        }
    });
    ContentPanel panel = new ContentPanel();
    panel.setFrame(true);
    panel.setCollapsible(true);
    panel.setAnimCollapse(false);
    panel.setButtonAlign(HorizontalAlignment.CENTER);
    panel.setIconStyle("icon-table");
    // panel.setHeading("Paging Grid");
    panel.setLayout(new FitLayout());
    panel.add(grid);
    panel.setSize(800, 350);
    panel.setBottomComponent(toolBar);
    panel.setButtonAlign(HorizontalAlignment.CENTER);
    // 添加下面一行的操作BUTTON 及 listener  包括  确认  取消  移除  打印订单
    add(panel);
}
