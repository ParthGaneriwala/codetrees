public void create(Recurso recurso) throws PreexistingEntityException, Exception {
    if (recurso.getParecer() == null) {
        recurso.setParecer(new ArrayList<Parecer>());
    }
    EntityManager em = null;
    try {
        em = getEntityManager();
        em.getTransaction().begin();
        Concurso concurso = recurso.getConcurso();
        if (concurso != null) {
            concurso = em.getReference(concurso.getClass(), concurso.getId());
            recurso.setConcurso(concurso);
        }
        List<Parecer> attachedParecer = new ArrayList<Parecer>();
        for (Parecer parecerParecerToAttach : recurso.getParecer()) {
            parecerParecerToAttach = em.getReference(parecerParecerToAttach.getClass(), parecerParecerToAttach.getId());
            attachedParecer.add(parecerParecerToAttach);
        }
        recurso.setParecer(attachedParecer);
        em.persist(recurso);
        if (concurso != null) {
            concurso.getRecursos().add(recurso);
            concurso = em.merge(concurso);
        }
        for (Parecer parecerParecer : recurso.getParecer()) {
            Recurso oldRecursoOfParecerParecer = parecerParecer.getRecurso();
            parecerParecer.setRecurso(recurso);
            parecerParecer = em.merge(parecerParecer);
            if (oldRecursoOfParecerParecer != null) {
                oldRecursoOfParecerParecer.getParecer().remove(parecerParecer);
                oldRecursoOfParecerParecer = em.merge(oldRecursoOfParecerParecer);
            }
        }
        em.getTransaction().commit();
    } catch (Exception ex) {
        if (findRecurso(recurso.getId()) != null) {
            throw new PreexistingEntityException("Recurso " + recurso + " already exists.", ex);
        }
        throw ex;
    } finally {
        if (em != null) {
            em.close();
        }
    }
}
