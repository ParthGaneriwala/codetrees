@Test
@DirtiesContext
public void testGumPath4() throws Exception {
    configureComplexGame();
    List<Rectangle> borders = new ArrayList<Rectangle>();
    borders.add(new Rectangle(6, 40, 0, 5));
    borders.add(new Rectangle(10, 38, 0, 6));
    borders.add(new Rectangle(15, 42, 6, 0));
    borders.add(new Rectangle(18, 46, 6, 0));
    borders.add(new Rectangle(25, 49, 0, 5));
    borders.add(new Rectangle(31, 46, 0, 6));
    borders.add(new Rectangle(33, 44, 6, 0));
    borders.add(new Rectangle(34, 41, 6, 0));
    borders.add(new Rectangle(41, 35, 0, 5));
    borders.add(new Rectangle(47, 33, 0, 4));
    GumPath gumPath = new GumPath(new Index(200, 4200), new Index(5100, 3400), borders, terrainService);
    gumPath.calculateShortestPath();
    Assert.assertEquals(7, gumPath.getPath().size());
    Assert.assertEquals(new Index(200, 4200), gumPath.getPath().get(0));
    Assert.assertEquals(new Index(2099, 4200), gumPath.getPath().get(1));
    Assert.assertEquals(new Index(2500, 4900), gumPath.getPath().get(2));
    Assert.assertEquals(new Index(3100, 4600), gumPath.getPath().get(3));
    Assert.assertEquals(new Index(3300, 4400), gumPath.getPath().get(4));
    Assert.assertEquals(new Index(3400, 4100), gumPath.getPath().get(5));
    Assert.assertEquals(new Index(5100, 3400), gumPath.getPath().get(6));
    assertPathInAllBorders(borders, gumPath);
}
