public static List save(File excel, TsysUser sysuser, long fileid, org.hibernate.Session session) throws IOException {
    List result = new ArrayList();
    List<TlawLawcase> lawcaseList = parseXls(excel);
    for (TlawLawcase lawcase : lawcaseList) {
        try {
            if (lawcase.getSusongworkid() <= 0) {
                result.add("承办人:" + lawcase.getSusongworkname() + "在系统中不存在,忽略掉,请台帐管理员自己导入<br/>");
                continue;
            }
            TlawJiekuanren jiekuanren = lawcase.getJiekuanren();
            lawcase.setCreateuserid(sysuser.getUserid());
            lawcase.setCreateusername(sysuser.getUsername());
            lawcase.setCreatetype(lawcase.getCreatetype() + "," + fileid);
            lawcase.setStatusid(-1);
            session.save(lawcase);
            long caseid = lawcase.getCaseid();
            jiekuanren.setCreateuserid(sysuser.getUserid());
            jiekuanren.setCreateusername(sysuser.getUsername());
            jiekuanren.setCaseid(caseid);
            jiekuanren.setLawcase(lawcase);
            session.save(jiekuanren);
            TlawStageDate stagedate = new TlawStageDate();
            stagedate.setCreatedate(df.format(lawcase.getCreatetime()));
            stagedate.setThedate(lawcase.getThedate());
            stagedate.setCaseid(caseid);
            stagedate.setLawcase(lawcase);
            session.save(stagedate);
            String content = sysuser.getUsername() + "批量上传案件";
            int opertype = 21001;
            LawcaseService.saveOperlog(session, caseid, content, opertype, sysuser);
        } catch (Exception e) {
            System.out.println(e);
            result.add(lawcase.getBank() + "," + lawcase.getBankbranch() + "," + lawcase.getJiekuanren().getJiekuanren() + "导入失败:" + e);
        }
        System.out.println(result);
    }
    session.flush();
    return result;
}
