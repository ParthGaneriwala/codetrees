private void checkInstruction(CLInstruction inst) {
    byte optcode = inst.getOptcode();
    long target;
    int len = inst.getLength();
    int small = 0;
    CLInstruction temp = null;
    if (optcode == CLOptcode.LEAVE) {
        Leave leave = (Leave) inst;
        target = leave.getTarget();
        temp = new Leaves((byte) 0);
    } else if (optcode == CLOptcode.BR) {
        Br br = (Br) inst;
        target = br.getTarget();
        temp = new Brs((byte) 0);
    } else if (optcode == CLOptcode.BRFALSE) {
        Brfalse brfalse = (Brfalse) inst;
        target = brfalse.getTarget();
        temp = new Brfalses((byte) 0);
    } else if (optcode == CLOptcode.BRTRUE) {
        Brtrue brtrue = (Brtrue) inst;
        target = brtrue.getTarget();
        temp = new Brtrues((byte) 0);
    } else if (optcode == CLOptcode.BEQ) {
        Beq beq = (Beq) inst;
        target = beq.getTarget();
        temp = new Beqs((byte) 0);
    } else if (optcode == CLOptcode.BGE) {
        Bge bge = (Bge) inst;
        target = bge.getTarget();
        temp = new Bges((byte) 0);
    } else if (optcode == CLOptcode.BGT) {
        Bgt bgt = (Bgt) inst;
        target = bgt.getTarget();
        temp = new Bgts((byte) 0);
    } else if (optcode == CLOptcode.BLE) {
        Ble ble = (Ble) inst;
        target = ble.getTarget();
        temp = new Bles((byte) 0);
    } else if (optcode == CLOptcode.BLT) {
        Blt blt = (Blt) inst;
        target = blt.getTarget();
        temp = new Blts((byte) 0);
    } else if (optcode == CLOptcode.BNEUN) {
        Bneun bneun = (Bneun) inst;
        target = bneun.getTarget();
        temp = new Bneuns((short) 0);
    } else if (optcode == CLOptcode.BGEUN) {
        Bgeun bgeun = (Bgeun) inst;
        target = bgeun.getTarget();
        temp = new Bgeuns((short) 0);
    } else if (optcode == CLOptcode.BGTUN) {
        Bgtun bgtun = (Bgtun) inst;
        target = bgtun.getTarget();
        temp = new Bgtuns((short) 0);
    } else if (optcode == CLOptcode.BLEUN) {
        Bleun bleun = (Bleun) inst;
        target = bleun.getTarget();
        temp = new Bleuns((short) 0);
    } else if (optcode == CLOptcode.BLTUN) {
        Bltun bltun = (Bltun) inst;
        target = bltun.getTarget();
        temp = new Bltuns((short) 0);
    } else if (optcode == CLOptcode.BRINST) {
        Brinst brinst = (Brinst) inst;
        target = brinst.getTarget();
        temp = new Brinsts((byte) 0);
    } else if (optcode == CLOptcode.BRNULL) {
        Brnull brnull = (Brnull) inst;
        target = brnull.getTarget();
        temp = new Brnulls((byte) 0);
    } else if (optcode == CLOptcode.BRZERO) {
        Brzero brzero = (Brzero) inst;
        target = brzero.getTarget();
        temp = new Brzeros((byte) 0);
    } else if (optcode == CLOptcode.BRS) {
        Brs brs = (Brs) inst;
        target = brs.getTarget();
    } else if (optcode == CLOptcode.BRFALSES) {
        Brfalses brfalses = (Brfalses) inst;
        target = brfalses.getTarget();
    } else if (optcode == CLOptcode.BRTRUES) {
        Brtrues brtrues = (Brtrues) inst;
        target = brtrues.getTarget();
    } else if (optcode == CLOptcode.BEQS) {
        Beqs beqs = (Beqs) inst;
        target = beqs.getTarget();
    } else if (optcode == CLOptcode.BGES) {
        Bges bges = (Bges) inst;
        target = bges.getTarget();
    } else if (optcode == CLOptcode.BGTS) {
        Bgts bgts = (Bgts) inst;
        target = bgts.getTarget();
    } else if (optcode == CLOptcode.BLES) {
        Bles bles = (Bles) inst;
        target = bles.getTarget();
    } else if (optcode == CLOptcode.BLTS) {
        Blts blts = (Blts) inst;
        target = blts.getTarget();
    } else if (optcode == CLOptcode.BNEUNS) {
        Bneuns bneuns = (Bneuns) inst;
        target = bneuns.getTarget();
    } else if (optcode == CLOptcode.BGEUNS) {
        Bgeuns bgeuns = (Bgeuns) inst;
        target = bgeuns.getTarget();
    } else if (optcode == CLOptcode.BGTUNS) {
        Bgtuns bgtuns = (Bgtuns) inst;
        target = bgtuns.getTarget();
    } else if (optcode == CLOptcode.BLEUNS) {
        Bleuns bleuns = (Bleuns) inst;
        target = bleuns.getTarget();
    } else if (optcode == CLOptcode.BLTUNS) {
        Bltuns bltuns = (Bltuns) inst;
        target = bltuns.getTarget();
    } else if (optcode == CLOptcode.LEAVES) {
        Leaves leaves = (Leaves) inst;
        target = leaves.getTarget();
    } else if (optcode == CLOptcode.BRINSTS) {
        Brinsts brinsts = (Brinsts) inst;
        target = brinsts.getTarget();
    } else if (optcode == CLOptcode.BRNULLS) {
        Brnulls brnulls = (Brnulls) inst;
        target = brnulls.getTarget();
    } else if (optcode == CLOptcode.BRZEROS) {
        Brzeros brzeros = (Brzeros) inst;
        target = brzeros.getTarget();
    } else // if not branch
    {
        return;
    }
    if (temp != null)
        small = len - temp.getLength();
    addBranch(optcode, len, small, target);
}
