void writeFromCache() throws IOException, InterruptedException {
    while (run) {
        if (peer.Config.cacheFileMange.containsPiece(mdb, pieceOffset)) {
            // 
            boolean isLaspPiece = false;
            long lo = hpg.fileLength - offset;
            if (lo > 0 & (lo - 1) < 8 * 1024) {
                isLaspPiece = true;
            }
            waitPiece = false;
            byte[] data = peer.Config.cacheFileMange.getPiece(mdb, pieceOffset);
            int length = data.length - pieceGap;
            if (isLaspPiece) {
                length = (int) lo;
            }
            // System.out.println("HttPshuchuOOOOOOOOOOOOOOOOOOo   "+"processorId "+processorId+" "+pieceOffset+" "+pieceGap+"   "+length+data);
            dos.write(data, pieceGap, length);
            // System.out.println("�����ƬcacheFile  "+pieceOffset+" "+offset+" "+length);
            offset += length;
            updateOffset();
            // System.out.println("WaitOutputWaitOutputWaitOutputWaitO  "+pieceOffset+"  "+hpg.fileLength);
            if (isLaspPiece) {
                System.out.println("�����ļ�β��");
                break;
            }
        } else if (!verifyData & peer.Config.pieceTempGroupMange.containsPiece(mdb, pieceOffset)) {
            // !verifyData
            // peer.Config.pieceTempGroupMange.containsPiece(mdb, pieceOffset)
            // System.out.println("2222222222222222");
            waitPiece = false;
            byte[] data = peer.Config.pieceTempGroupMange.getPiece(mdb, pieceOffset);
            int length = data.length - pieceGap;
            // System.out.println("HttPshuchuOOOOOOOOOOOOOOOOOOo   "+"processorId "+processorId+" "+pieceOffset+" "+pieceGap+"   "+length+data);
            dos.write(data, pieceGap, length);
            offset += length;
            // System.out.println("			�����ƬpieceTemp  "+pieceOffset+" "+processorId);
            updateOffset();
            // System.out.println("WaitOutputWaitOutputWaitOutputWaitO  "+pieceOffset+"  "+hpg.fileLength);
            if (offset == hpg.fileLength) {
                System.out.println("�����ļ�β��");
                break;
            }
        } else {
            // System.out.println("�ȴ���Ƭ "+pieceOffset+" "+offset+" "+processorId);
            waitPiece = true;
            synchronized (writeOb) {
                writeOb.wait();
            }
        }
    }
}
