public static void main(String[] args) {
    try {
        BufferedReader br = new BufferedReader(new InputStreamReader("".getClass().getResourceAsStream("/B-small-practice.in")));
        int testCaseNumber = Integer.valueOf(br.readLine());
        for (int i = 0; i < testCaseNumber; i++) {
            customerFlavors = new ArrayList<List<Milkshake>>();
            flavorNumber = Integer.valueOf(br.readLine());
            List<Integer> flavorTypes = new ArrayList<Integer>();
            for (int j = 0; j < flavorNumber; j++) {
                flavorTypes.add(-1);
            }
            int customers = Integer.valueOf(br.readLine());
            List<Integer> conflictFlavor = new ArrayList<Integer>();
            for (int j = 0; j < customers; j++) {
                String[] flavors = br.readLine().split(" ");
                List<Milkshake> temp = new ArrayList<Milkshake>();
                boolean isConflict = false;
                for (int k = 0; k < Integer.valueOf(flavors[0]); k++) {
                    int flavorType = new Integer(flavors[2 * k + 1]) - 1;
                    if (flavorTypes.get(flavorType) < 0) {
                        flavorTypes.set(flavorType, new Integer(flavors[2 * k + 2]));
                    } else if (!flavorTypes.get(flavorType).equals(new Integer(flavors[2 * k + 2]))) {
                        conflictFlavor.add(flavorType);
                        isConflict = true;
                    }
                    temp.add(new Milkshake(new Integer(flavors[2 * k + 1]), new Integer(flavors[2 * k + 2])));
                }
                if (isConflict) {
                    customerFlavors.add(temp);
                }
            }
            if (conflictFlavor.size() == 0) {
                System.out.println(flavorTypes);
            } else {
            }
            System.out.println(results);
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
}
