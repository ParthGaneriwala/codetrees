public boolean insert(Connection db) throws SQLException {
    java.sql.Timestamp lowestDueDate = null;
    java.sql.Timestamp lowestStartDate = null;
    for (Assignment thisAssignment : this) {
        java.sql.Timestamp thisDueDate = thisAssignment.getDueDate();
        if ((lowestDueDate == null) || (lowestDueDate != null && thisDueDate != null && thisDueDate.before(lowestDueDate))) {
            lowestDueDate = thisDueDate;
        }
        java.sql.Timestamp thisStartDate = thisAssignment.getEstStartDate();
        if ((lowestStartDate == null) || (lowestStartDate != null && thisStartDate != null && thisStartDate.before(lowestStartDate))) {
            lowestStartDate = thisStartDate;
        }
    }
    int age = 0;
    if (lowestStartDate != null) {
        float ageCheck = ((offsetDate.getTime() - lowestStartDate.getTime()) / 86400000);
        age = java.lang.Math.round(ageCheck);
    }
    if (age == 0 && lowestDueDate != null) {
        float ageCheck = ((offsetDate.getTime() - lowestDueDate.getTime()) / 86400000);
        age = java.lang.Math.round(ageCheck);
    }
    for (Assignment thisAssignment : this) {
        thisAssignment.setProjectId(projectId);
        thisAssignment.setEnteredBy(enteredBy);
        thisAssignment.setModifiedBy(modifiedBy);
        if (thisAssignment.getEstStartDate() != null) {
            Calendar dateTest = Calendar.getInstance();
            dateTest.setTime(thisAssignment.getEstStartDate());
            dateTest.set(Calendar.HOUR_OF_DAY, 0);
            dateTest.set(Calendar.MINUTE, 0);
            dateTest.add(Calendar.DATE, age);
            // thisAssignment.setEstStartDate(new java.sql.Timestamp(dateTest.getTimeInMillis()));
            java.util.Date newDate = dateTest.getTime();
            thisAssignment.setEstStartDate(new java.sql.Timestamp(newDate.getTime()));
        }
        if (thisAssignment.getDueDate() != null) {
            Calendar dateTest = Calendar.getInstance();
            dateTest.setTime(thisAssignment.getDueDate());
            dateTest.set(Calendar.HOUR_OF_DAY, 0);
            dateTest.set(Calendar.MINUTE, 0);
            dateTest.add(Calendar.DATE, age);
            // thisAssignment.setDueDate(new java.sql.Timestamp(dateTest.getTimeInMillis()));
            java.util.Date newDate = dateTest.getTime();
            thisAssignment.setDueDate(new java.sql.Timestamp(newDate.getTime()));
        }
        thisAssignment.setStartDate((String) null);
        thisAssignment.setStatusId(Assignment.NOTSTARTED);
        // thisAssignment.setStatusTypeId(Assignment.NOTSTARTED);
        // thisAssignment.setStatus("");
        // thisAssignment.setStatusDate(null);
        // thisAssignment.setStatusType(-1);
        thisAssignment.setCompleteDate((String) null);
        thisAssignment.insert(db);
    }
    return true;
}
