private Statement compileTextTableSource(Table t) {
    boolean isSourceHeader = false;
    boolean isDesc = false;
    String source;
    Object[] args = new Object[5];
    args[0] = t.getName();
    if (!t.isText()) {
        Exception e = Error.error(ErrorCode.X_S0522);
    }
    // SET TABLE <table> SOURCE ON
    if (token.tokenType == Tokens.ON) {
        read();
        String sql = getLastPart();
        args[1] = Boolean.TRUE;
        return new StatementCommand(StatementTypes.SET_TABLE_SOURCE, args, null, t.getName());
    } else if (token.tokenType == Tokens.OFF) {
        read();
        String sql = getLastPart();
        args[1] = Boolean.FALSE;
        return new StatementCommand(StatementTypes.SET_TABLE_SOURCE, args, null, t.getName());
    } else if (token.tokenType == Tokens.HEADER) {
        read();
        isSourceHeader = true;
    }
    if (token.tokenType == Tokens.X_DELIMITED_IDENTIFIER) {
        source = token.tokenString;
        read();
    } else {
        source = readQuotedString();
    }
    if (!isSourceHeader && token.tokenType == Tokens.DESC) {
        isDesc = true;
        read();
    }
    String sql = getLastPart();
    args[2] = source;
    args[3] = Boolean.valueOf(isDesc);
    args[4] = Boolean.valueOf(isSourceHeader);
    int type = isSourceHeader ? StatementTypes.SET_TABLE_SOURCE_HEADER : StatementTypes.SET_TABLE_SOURCE;
    return new StatementCommand(type, args, null, t.getName());
}
