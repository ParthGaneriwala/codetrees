public String executeCommandUpload(ActionContext context) {
    if (!getUser(context).getAccessAdmin()) {
        return "PermissionError";
    }
    Connection db = null;
    boolean recordInserted = false;
    try {
        String filePath = getPath(context, "reports");
        // Process the form data
        HttpMultiPartParser multiPart = new HttpMultiPartParser();
        multiPart.setUsePathParam(false);
        multiPart.setUseUniqueName(false);
        multiPart.setUseDateForFolder(false);
        HashMap parts = multiPart.parseData(context.getRequest(), filePath);
        String title = (String) parts.get("title");
        String type = (String) parts.get("type");
        // String userReport = (String) parts.get("userReport");
        // String adminReport = (String) parts.get("adminReport");
        // String enabled = (String) parts.get("enabled");
        db = getConnection(context);
        // Update the database with the resulting file
        if ((Object) parts.get("file") instanceof FileInfo) {
            FileInfo newFileInfo = (FileInfo) parts.get("file");
            Report report = new Report();
            report.setTitle(title);
            report.setEnteredBy(getUserId(context));
            report.setModifiedBy(getUserId(context));
            report.setEnabled(false);
            if ("user".equals(type)) {
                report.setUserReport(true);
            } else {
                report.setAdminReport(true);
            }
            report.setCustom(true);
            report.setFilename(newFileInfo.getRealFilename());
            report.setDescription(newFileInfo.getClientFileName());
            report.insert(db);
            context.getRequest().setAttribute("reportId", String.valueOf(report.getId()));
            return ("UploadOK");
        }
        context.getRequest().setAttribute("actionError", "Error in uploading report");
        return ("UploadERROR");
    } catch (Exception e) {
        context.getRequest().setAttribute("Error", e);
        return ("SystemError");
    } finally {
        freeConnection(context, db);
    }
}
