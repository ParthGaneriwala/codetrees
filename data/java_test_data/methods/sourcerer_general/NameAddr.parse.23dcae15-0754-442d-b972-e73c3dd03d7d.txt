private void parse(String address, boolean parseParam) throws ServletParseException {
    String sURI = null;
    String sParams = null;
    address = address.trim();
    if ("*".equals(address)) {
        _wildcard = true;
        return;
    }
    if (address.startsWith("\"")) {
        int rQuote = indexRQuote(address, 1);
        if (rQuote == -1)
            throw new ServletParseException("Missing terminating \" in [" + address + "]");
        String s = address.substring(0, rQuote + 1);
        _displayName = SipGrammar.unquote(s);
        int laqIndex = address.indexOf('<', rQuote + 1);
        if (laqIndex == -1)
            throw new ServletParseException("Missing < in address [" + address + "]");
        int raqIndex = address.indexOf('>');
        if (raqIndex == -1)
            throw new ServletParseException("Missing > in address [" + address + "]");
        sURI = address.substring(laqIndex + 1, raqIndex);
        int indexParams = address.indexOf(';', raqIndex + 1);
        if (indexParams > -1)
            sParams = address.substring(indexParams + 1);
    } else {
        int indexLAQuote = address.indexOf('<');
        if (indexLAQuote > -1) {
            if (indexLAQuote > 0) {
                String s = address.substring(0, indexLAQuote).trim();
                if (s.length() > 0) {
                    if (!SipGrammar.isTokens(s))
                        throw new ServletParseException("Not token or LWS char in [" + s + "] in address [" + address + "]");
                    _displayName = s;
                }
            }
            int indexRAQuote = address.indexOf('>', indexLAQuote);
            if (indexRAQuote == -1)
                throw new ServletParseException("Missing > in address [" + address + "]");
            sURI = address.substring(indexLAQuote + 1, indexRAQuote);
            int indexParams = address.indexOf(';', indexRAQuote + 1);
            if (indexParams > -1)
                sParams = address.substring(indexParams + 1);
        } else {
            int indexParams = address.indexOf(';');
            if (indexParams > -1) {
                sURI = address.substring(0, indexParams);
                sParams = address.substring(indexParams + 1);
            } else
                sURI = address;
        }
    }
    _uri = URIFactory.parseURI(sURI);
    if (sParams != null && parseParam)
        parseParams(sParams);
}
