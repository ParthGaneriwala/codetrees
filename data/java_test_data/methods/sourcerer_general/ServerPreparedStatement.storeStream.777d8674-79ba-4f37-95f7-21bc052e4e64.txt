private void storeStream(MysqlIO mysql, int parameterIndex, Buffer packet, InputStream inStream) throws SQLException {
    byte[] buf = new byte[BLOB_STREAM_READ_BUF_SIZE];
    int numRead = 0;
    try {
        int bytesInPacket = 0;
        int totalBytesRead = 0;
        int bytesReadAtLastSend = 0;
        int packetIsFullAt = this.connection.getBlobSendChunkSize();
        packet.clear();
        packet.writeByte((byte) MysqlDefs.COM_LONG_DATA);
        packet.writeLong(this.serverStatementId);
        packet.writeInt((parameterIndex));
        boolean readAny = false;
        while ((numRead = inStream.read(buf)) != -1) {
            readAny = true;
            packet.writeBytesNoNull(buf, 0, numRead);
            bytesInPacket += numRead;
            totalBytesRead += numRead;
            if (bytesInPacket >= packetIsFullAt) {
                bytesReadAtLastSend = totalBytesRead;
                mysql.sendCommand(MysqlDefs.COM_LONG_DATA, null, packet, true, null, 0);
                bytesInPacket = 0;
                packet.clear();
                packet.writeByte((byte) MysqlDefs.COM_LONG_DATA);
                packet.writeLong(this.serverStatementId);
                packet.writeInt((parameterIndex));
            }
        }
        if (totalBytesRead != bytesReadAtLastSend) {
            mysql.sendCommand(MysqlDefs.COM_LONG_DATA, null, packet, true, null, 0);
        }
        if (!readAny) {
            mysql.sendCommand(MysqlDefs.COM_LONG_DATA, null, packet, true, null, 0);
        }
    } catch (IOException ioEx) {
        SQLException sqlEx = SQLError.createSQLException(Messages.getString(// $NON-NLS-1$
        "ServerPreparedStatement.25") + ioEx.toString(), SQLError.SQL_STATE_GENERAL_ERROR, getExceptionInterceptor());
        sqlEx.initCause(ioEx);
        throw sqlEx;
    } finally {
        if (this.connection.getAutoClosePStmtStreams()) {
            if (inStream != null) {
                try {
                    inStream.close();
                } catch (IOException ioEx) {
                    // ignore
                    ;
                }
            }
        }
    }
}
