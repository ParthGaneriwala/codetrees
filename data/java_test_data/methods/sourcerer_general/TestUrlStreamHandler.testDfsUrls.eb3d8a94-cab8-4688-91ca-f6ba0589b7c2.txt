public void testDfsUrls() throws IOException {
    Configuration conf = new Configuration();
    MiniDFSCluster cluster = new MiniDFSCluster(conf, 2, true, null);
    FileSystem fs = cluster.getFileSystem();
    // Setup our own factory
    // setURLSteramHandlerFactor is can be set at most once in the JVM
    // the new URLStreamHandler is valid for all tests cases
    // in TestStreamHandler
    FsUrlStreamHandlerFactory factory = new org.apache.org.fit.hiai.hadoop.fs.FsUrlStreamHandlerFactory();
    java.net.URL.setURLStreamHandlerFactory(factory);
    Path filePath = new Path("/thefile");
    try {
        byte[] fileContent = new byte[1024];
        for (int i = 0; i < fileContent.length; ++i) fileContent[i] = (byte) i;
        // First create the file through the FileSystem API
        OutputStream os = fs.create(filePath);
        os.write(fileContent);
        os.close();
        // Second, open and read the file content through the URL API
        URI uri = fs.getUri();
        URL fileURL = new URL(uri.getScheme(), uri.getHost(), uri.getPort(), filePath.toString());
        InputStream is = fileURL.openStream();
        assertNotNull(is);
        byte[] bytes = new byte[4096];
        assertEquals(1024, is.read(bytes));
        is.close();
        for (int i = 0; i < fileContent.length; ++i) assertEquals(fileContent[i], bytes[i]);
        // Cleanup: delete the file
        fs.delete(filePath, false);
    } finally {
        fs.close();
        cluster.shutdown();
    }
}
