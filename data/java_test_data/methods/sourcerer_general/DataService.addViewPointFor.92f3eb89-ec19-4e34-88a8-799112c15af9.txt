public void addViewPointFor(final String variable, final StatsForNamespaces statsForNamespaces, final Tree sourceDataTree) {
    Config config = Config.getInstance();
    Map<String, Metric> metricMap = config.getMetricMap();
    if (statsForNamespaces.isAggregated() && statsForNamespaces.isImpactLevel()) {
        // impact level viewpoints
        String panelLabel = LabelUtils.derivePanelLabelFrom(variable);
        // String label = statsForNamespaces.getLabel();
        int impactLevel = LabelUtils.getImpactLevel(variable);
        String aggregatedLabel = LabelUtils.getAggregatedLabelByImpactLevel(impactLevel);
        String viewPointLabelPrefix = LabelUtils.getViewPointLabelPrefix(variable);
        String viewPointLabel = viewPointLabelPrefix + aggregatedLabel;
        ViewPoint ruleSetViewPoint = new ViewPoint(viewPointLabel, panelLabel, variable, false);
        complexityPanel.addViewPoint(statsForNamespaces, sourceDataTree, ruleSetViewPoint);
    } else if (statsForNamespaces.isAggregated() && !statsForNamespaces.isImpactLevel()) {
        // pmd rule group viewpoints
        String panelLabel = LabelUtils.derivePanelLabelFrom(variable);
        String viewPointLabelPrefix = LabelUtils.getViewPointLabelPrefix(variable);
        String viewPointLabel = viewPointLabelPrefix + variable;
        ViewPoint ruleSetViewPoint = new ViewPoint(viewPointLabel, panelLabel, variable, false);
        complexityPanel.addViewPoint(statsForNamespaces, sourceDataTree, ruleSetViewPoint);
    } else {
        // individual rulres
        Metric metric = metricMap.get(variable);
        if (metric != null) {
            // String viewPointLabel = metric.getLabel();
            String ruleSet = metric.getRuleSet();
            StringBuffer labelBuffer = new StringBuffer();
            labelBuffer.append(ruleSet.substring(0, 1).toUpperCase());
            labelBuffer.append(ruleSet.substring(1));
            // labelBuffer.append(re);
            String viewPointLabelPrefix = LabelUtils.fillWithSpaces(labelBuffer.toString(), 25);
            String viewPointLabel = viewPointLabelPrefix + metric.getName();
            // if(statsForNamespaces.isAggregated())
            // {
            // viewPointLabel = statsForNamespaces.getLabel();
            // }
            ViewPoint metricViewPoint = new ViewPoint(viewPointLabel, metric.getName(), metric.getDataField(), false);
            complexityPanel.addViewPoint(statsForNamespaces, sourceDataTree, metricViewPoint);
        }
    }
// complexityPanel.get
}
