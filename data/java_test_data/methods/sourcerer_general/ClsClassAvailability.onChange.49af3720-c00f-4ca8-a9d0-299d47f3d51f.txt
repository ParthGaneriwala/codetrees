public void onChange(Widget sender) {
    if (sender.equals(cbCampuses)) {
        clearStatusText();
        cbSemesters.clear();
        this.cbSubjects.clear();
        GetDataServiceAsync respService = (GetDataServiceAsync) GWT.create(edu.hawaii.client.GetDataService.class);
        ServiceDefTarget endpoint = (ServiceDefTarget) respService;
        String moduleRelativeURL = GWT.getModuleBaseURL() + "getDataService";
        endpoint.setServiceEntryPoint(moduleRelativeURL);
        // preventing user input durring query
        this.cbSemesters.setStyleName("loadingStatus");
        this.cbSemesters.addItem("Loading...");
        int selectedCampus = this.cbCampuses.getSelectedIndex();
        // disable dd-list till proceedure call done
        cbCampuses.setEnabled(false);
        respService.getSemester(this.cbCampuses.getValue(selectedCampus), new AsyncCallback() {

            public void onFailure(Throwable caught) {
                // doesn't work now
                setStatusText("Server request raised an error");
            }

            public void onSuccess(Object result) {
                List semesters = (List) result;
                // semesters.size() == 0 when there is a problems with the database
                if (semesters.size() == 0) {
                    setStatusText("An error has encountered.");
                    cbCampuses.setEnabled(true);
                    cbSemesters.removeStyleName("loadingStatus");
                    cbSemesters.clear();
                    cbCampuses.setSelectedIndex(0);
                } else {
                    // call done re-abling ddlist
                    cbCampuses.setEnabled(true);
                    cbSemesters.removeStyleName("loadingStatus");
                    cbSemesters.removeItem(0);
                    cbSemesters.addItem("Select a semester", "invalid");
                    for (int i = (semesters.size() - 1); i >= 0; i--) {
                        Semester record = (Semester) semesters.get(i);
                        cbSemesters.addItem(record.getSemesterText(), new Integer(record.getSemesterKey()).toString());
                    }
                }
            }
        });
    }
    if (sender.equals(cbSemesters)) {
        clearStatusText();
        cbSubjects.clear();
        GetDataServiceAsync respService = (GetDataServiceAsync) GWT.create(edu.hawaii.client.GetDataService.class);
        ServiceDefTarget endpoint = (ServiceDefTarget) respService;
        String moduleRelativeURL = GWT.getModuleBaseURL() + "getDataService";
        endpoint.setServiceEntryPoint(moduleRelativeURL);
        // preventing user input durring query
        this.cbSubjects.setStyleName("loadingStatus");
        this.cbSubjects.addItem("Loading...");
        int campusSelectedIndex = this.cbCampuses.getSelectedIndex();
        int semesterSelectedIndex = this.cbSemesters.getSelectedIndex();
        // disable dd-list till proceedure call done
        cbSemesters.setEnabled(false);
        cbCampuses.setEnabled(false);
        respService.getCourseNameByCampus(this.cbCampuses.getValue(campusSelectedIndex), this.cbSemesters.getValue(semesterSelectedIndex), new AsyncCallback() {

            public void onFailure(Throwable caught) {
                displayFormattedMessage("Server request raised an error; Java exception : " + caught == null ? "An unknown exception" : caught.getMessage(), "red");
            }

            public void onSuccess(Object result) {
                List courseName = (List) result;
                if (courseName.size() == 0) {
                    setStatusText("An error has encountered.");
                    // done enable dd-list
                    cbSemesters.setEnabled(true);
                    cbCampuses.setEnabled(true);
                    cbSubjects.removeStyleName("loadingStatus");
                    cbSubjects.clear();
                    cbSemesters.setSelectedIndex(0);
                } else {
                    // proceedure call done enable dd-list
                    cbSemesters.setEnabled(true);
                    cbCampuses.setEnabled(true);
                    cbSubjects.removeStyleName("loadingStatus");
                    cbSubjects.removeItem(0);
                    for (int i = 0; i <= courseName.size() - 1; i++) {
                        CourseNameByCampus record = (CourseNameByCampus) courseName.get(i);
                        cbSubjects.addItem(record.getCourseName());
                    }
                }
            }
        });
    }
}
