public String saveButton() {
    System.out.println("LaundryRequestItemAction -> saveButton()");
    if (cancel != null) {
        return CANCEL;
    }
    if (delete != null) {
    // return delete();
    }
    boolean isNew = false;
    isNew = (laundryRequestItem.getId() == null);
    String result = verifyInputDatas();
    if (result != null) {
        return result;
    }
    tradeMark = tradeMarkManager.get((Long) getSession().getAttribute("tradeMarkId"));
    laundryRequest = (LaundryRequest) getSession().getAttribute("laundryRequest");
    modelSizes = ((Set<ModelSize>) getSession().getAttribute("modelSizes"));
    quantities = ((String[]) getSession().getAttribute("quantities"));
    quantitiesIndex = ((List<Integer>) getSession().getAttribute("quantitiesIndex"));
    Integer totalQuantity = 0;
    seamStoragesAvailable = ((List<SeamStorage>) getSession().getAttribute("seamStoragesAvailable"));
    for (int i = 0; i < quantitiesUser.length; i++) {
        String string = quantitiesUser[i];
        Integer index = quantitiesIndex.get(i);
        quantities[index] = string;
    }
    int iAux = 0;
    for (Iterator it = modelSizes.iterator(); it.hasNext(); iAux++) {
        ModelSize msAux = (ModelSize) it.next();
        int index = 0;
        for (SeamStorage seamSt : seamStoragesAvailable) {
            if (seamSt.getPantDesign().getModelSize().equals(msAux)) {
                break;
            }
            index++;
        }
        if (index < seamStoragesAvailable.size()) {
            Integer quantity = Integer.parseInt(quantities[iAux]);
            if (quantity > seamStoragesAvailable.get(index).getStock()) {
                saveMessage("Quantity exceded the stock available");
                return "reload";
            } else if (quantity < 0) {
                saveMessage("Quantity incorrect: the quantity is less than zero");
                return "reload";
            }
            totalQuantity += quantity;
        }
    }
    laundryRequestItem.setQuantity(totalQuantity);
    laundryRequestItem.setTotalPrice(0D);
    laundryRequestItem.setFailQuantity(0);
    laundryRequestItem.setFailUnitPrice(0D);
    laundryRequestItem.setFailTotalPrice(0D);
    laundryRequestItem.setTradeMark(tradeMark);
    laundryRequestItem.setLaundryRequest(laundryRequest);
    laundryRequestItem = laundryRequestItemManager.save(laundryRequestItem);
    laundryItems = new ArrayList<LaundryItem>();
    iAux = 0;
    for (Iterator it = modelSizes.iterator(); it.hasNext(); iAux++) {
        ModelSize msAux = (ModelSize) it.next();
        int index = 0;
        for (SeamStorage seamSt : seamStoragesAvailable) {
            if (seamSt.getPantDesign().getModelSize().equals(msAux)) {
                break;
            }
            index++;
        }
        if (index < seamStoragesAvailable.size()) {
            SeamStorage seamStorage = seamStoragesAvailable.get(index);
            Integer quantity = Integer.parseInt(quantities[iAux]);
            if (quantity > 0) {
                LaundryItem laundryItem = new LaundryItem();
                laundryItem.setPantDesign(seamStorage.getPantDesign());
                laundryItem.setQuantity(quantity);
                laundryItem.setFailQuantity(0);
                laundryItem.setFailTotalPrice(0D);
                laundryItem.setFailUnitPrice(0D);
                laundryItem.setTotalPrice(0D);
                laundryItem.setUnitPrice(0D);
                laundryItem.setLaundryRequestItem(laundryRequestItem);
                laundryItem = laundryItemManager.save(laundryItem);
                seamStorage.decrementStock(quantity);
                seamStorage = seamStorageManager.save(seamStorage);
            }
        }
    }
    laundryRequest = laundryRequestManager.get(laundryRequest.getId());
    laundryRequest.setTotalPrice(laundryRequest.getTotalPrice() + laundryRequestItem.getTotalPrice());
    laundryRequest.setQuantity(laundryRequest.getQuantity() + laundryRequestItem.getQuantity());
    laundryRequest = laundryRequestManager.save(laundryRequest);
    getSession().setAttribute("laundryRequest", laundryRequest);
    getSession().setAttribute("pantDesign", null);
    getSession().setAttribute("laundryRequestItem", null);
    getSession().setAttribute("seamStoragesAvailable", null);
    if (isNew) {
        saveMessage(getText("laundryRequestItem.added"));
        return SUCCESS;
    } else {
        saveMessage(getText("laundryRequestItem.updated"));
        return INPUT;
    }
}
