public void criarXML(String[][] pArrayComentarios) throws Exception {
    ArrayList<Tags> arrayTags = new ArrayList<Tags>();
    String[][] arrayTagsComentarios = pArrayComentarios;
    int i = 0;
    Tags xml = new Tags();
    while (arrayTagsComentarios[i][0] != null) {
        String key = arrayTagsComentarios[i][0];
        String conteudo = "";
        // comentario
        if (key.equals("@*/")) {
            arrayTags.add(xml);
            xml = new Tags();
        }
        int j = 1;
        while (arrayTagsComentarios[i][j] != null) {
            conteudo += arrayTagsComentarios[i][j];
            j++;
            // Limite do Vetor
            if (j == 10) {
                break;
            }
        }
        if (key.contains(Tags.FUNCTION)) {
            xml.setFunction(conteudo);
        }
        if (key.contains(Tags.NM_AUTOR)) {
            xml.setAutor(conteudo);
        }
        if (key.contains(Tags.NM_CODE)) {
            xml.setCode(conteudo);
        }
        if (key.contains(Tags.NM_ROOT)) {
            xml.setRoot(conteudo);
        }
        if (key.contains(Tags.NM_LINK)) {
            xml.setLink(conteudo);
        }
        if (key.contains(Tags.NM_PARAM)) {
            xml.setParam(conteudo);
        }
        if (key.contains(Tags.NM_RETURN)) {
            xml.setReturnValue(conteudo);
        }
        if (key.contains(Tags.NM_VERSION)) {
            xml.setVersion(conteudo);
        }
        if (key.contains(Tags.NM_SEE)) {
            xml.setSee(conteudo);
        }
        if (key.contains(Tags.NM_SINCE)) {
            xml.setSince(conteudo);
        }
        // Verifica se existe alguma das tags CML
        if (key.contains(Tags.NM_EXCLUDE)) {
            xml.setExclude(conteudo);
        }
        if (key.contains(Tags.NM_SENDS)) {
            xml.setSends(conteudo);
        }
        if (key.contains(Tags.NM_USE_MEMORY)) {
            xml.setUsedMemory(conteudo);
        }
        if (key.contains(Tags.NM_CODE_SIZE)) {
            xml.setCodeSize(conteudo);
        }
        if (key.contains(Tags.NM_CACHE_HIT)) {
            xml.setCacheHit(conteudo);
        }
        if (key.contains(Tags.NM_CACHE_MISS)) {
            xml.setCacheMiss(conteudo);
        }
        if (key.contains(Tags.NM_PAGE_FAULT)) {
            xml.setPageFault(conteudo);
        }
        if (key.contains(Tags.NM_POWER)) {
            xml.setPower(conteudo);
        }
        if (key.contains(Tags.NM_PES_ACCESS)) {
            xml.setPesAccess(conteudo);
        }
        if (key.contains(Tags.NM_OPT_ACCESS)) {
            xml.setOptAccess(conteudo);
        }
        if (key.contains(Tags.NM_TASK)) {
            xml.setTask(conteudo);
        }
        if (key.contains(Tags.NM_PROCESSOR)) {
            xml.setProcessor(conteudo);
        }
        if (key.contains(Tags.NM_SCHEDULING)) {
            xml.setScheduling(conteudo);
        }
        if (key.contains(Tags.NM_PHASE)) {
            xml.setPhase(conteudo);
        }
        if (key.contains(Tags.NM_RELEASE)) {
            xml.setRelease(conteudo);
        }
        if (key.contains(Tags.NM_WCET)) {
            xml.setWcet(conteudo);
        }
        if (key.contains(Tags.NM_DEADLINE)) {
            xml.setDeadline(conteudo);
        }
        if (key.contains(Tags.NM_PERIOD)) {
            xml.setPeriod(conteudo);
        }
        if (key.contains(Tags.NM_PRECEDES)) {
            xml.setPrecedes(conteudo);
        }
        i++;
    }
    Iterator<Tags> iteratorTags = arrayTags.iterator();
    while (iteratorTags.hasNext()) {
        Tags sementeXML = iteratorTags.next();
        String nomeArquivo = sementeXML.getFunction();
        XStream stream_xml_exemplo = new XStream();
        FileWriter saida_para_arquivo = new FileWriter(Constantes.DIR_XML + nomeArquivo + ".xml");
        ObjectOutputStream escritor_de_saida = stream_xml_exemplo.createObjectOutputStream(saida_para_arquivo);
        List<Tags> listaTags = new ArrayList<Tags>();
        listaTags.add(sementeXML);
        escritor_de_saida.writeObject(listaTags);
        escritor_de_saida.close();
    }
    System.out.print(".");
}
