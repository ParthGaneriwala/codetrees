@SuppressWarnings("unchecked")
private void addNode(SynNode node, final TreeItem parent) {
    while (node != null) {
        final TreeItem item = new TreeItem(parent, SWT.NONE);
        if (node instanceof DeclNode) {
            final DeclNode temp = (DeclNode) node;
            if (temp instanceof VarDeclNode) {
                item.setText("declaraci\u00f3n-variable: " + temp.getName());
            } else if (temp instanceof FuncDeclNode) {
                item.setText("declaraci\u00f3n-funcion: " + temp.getName());
            } else if (node instanceof ParamNode) {
                item.setText("par\u00e1metro: " + temp.getName());
            }
        } else if (node instanceof StmtNode) {
            if (node instanceof IfNode) {
                item.setText("si");
            } else if (node instanceof ForNode) {
                item.setText("para");
            } else if (node instanceof WhileNode) {
                item.setText("mientras");
            } else if (node instanceof ReturnNode) {
                item.setText("regresa");
            }
        } else if (node instanceof ExpNode) {
            if (node instanceof OpNode) {
                final OpNode temp = (OpNode) node;
                item.setText("operador: " + temp.getName());
            // } else if (node instanceof IdNode) {
            // final IdNode temp = (IdNode) node;
            // item.setText("identificador: " + temp.getName());
            } else if (node instanceof TypeNode) {
                final TypeNode temp = (TypeNode) node;
                item.setText("tipo: " + temp.getName());
            } else if (node instanceof NumNode) {
                final NumNode<? extends Number> temp = (NumNode) node;
                final Number value = temp.getValue();
                if (value instanceof Integer) {
                    final Integer v = (Integer) value;
                    item.setText("entero: " + v);
                } else if (value instanceof Double) {
                    final Double v = (Double) value;
                    item.setText("decimal: " + v);
                }
            } else if (node instanceof BoolNode) {
                final BoolNode temp = (BoolNode) node;
                item.setText("booleano: " + temp.getValue());
            } else if (node instanceof TextNode) {
                final TextNode temp = (TextNode) node;
                item.setText("texto: " + temp.getValue());
            } else if (node instanceof VarNode) {
                final VarNode temp = (VarNode) node;
                item.setText("variable: " + temp.getName());
            } else if (node instanceof CallNode) {
                final CallNode temp = (CallNode) node;
                item.setText("llamada: " + temp.getName());
            }
        }
        item.setText(1, Integer.toString(node.getLineNo() + 1));
        for (int i = 0; i < node.getChildCount(); i++) {
            addNode(node.getChild(i), item);
        }
        node = node.getSibling();
    }
    parent.setExpanded(true);
}
