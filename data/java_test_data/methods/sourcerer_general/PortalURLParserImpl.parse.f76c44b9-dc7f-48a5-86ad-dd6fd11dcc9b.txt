// Public Methods ----------------------------------------------------------
public PortalURL parse(HttpServletRequest request) {
    LOG.debug("Parsing URL: " + request.getRequestURI());
    if (LOG.isDebugEnabled()) {
        Enumeration params = request.getParameterNames();
        while (params.hasMoreElements()) {
            String param = (String) params.nextElement();
            LOG.debug("  parameter: " + param + "=" + request.getParameter(param));
        }
    }
    StringBuffer url = new StringBuffer();
    if (request.getParameterMap() != null) {
        // To construct the base URL for the portal, append the allowed portal URL
        // parameters that are specified by the portal manager
        ArrayList allowedPortalParams = (ArrayList) request.getAttribute(ALLOWED_PORTAL_PARAMETERS);
        if (allowedPortalParams != null) {
            Iterator i = allowedPortalParams.iterator();
            while (i.hasNext()) {
                String paramName = (String) i.next();
                String paramValue = request.getParameter(paramName);
                if (paramValue != null) {
                    // @note TEST TEST TEST
                    // appendParameter(url, paramName + "=" + paramValue);
                    appendParameter(url, paramName + "=" + StringUtils.encodeUrl(paramValue));
                }
            }
        }
    }
    String servletName = request.getServletPath() + url.toString();
    // Construct portal URL using info retrieved from servlet request
    String contextPath = request.getContextPath();
    LOG.debug("contextPath: " + contextPath);
    PortalURL portalURL = new RelativePortalURLImpl(contextPath, servletName, getParser());
    // Action window definition: portalURL.setActionWindow()
    String portletAction = request.getParameter("portletAction");
    if (portletAction != null && portletAction.startsWith(PREFIX + ACTION)) {
        LOG.debug("found action");
        portalURL.setActionWindow(decodeControlParameter(portletAction)[0]);
        portalURL.setRenderPath(contextPath + ".");
    }
    // Window state definition: portalURL.setWindowState()
    String portletWindowState = null;
    int windowStateCount = 0;
    while ((portletWindowState = request.getParameter("portletWindowState" + (++windowStateCount))) != null) {
        String[] decoded = decodeControlParameter(portletWindowState);
        portalURL.setWindowState(decoded[0], new WindowState(decoded[1]));
    }
    // Portlet mode definition: portalURL.setPortletMode()
    String portletMode = request.getParameter("portletMode");
    if (portletMode != null) {
        String[] decoded = decodeControlParameter(portletMode);
        portalURL.setPortletMode(decoded[0], new PortletMode(decoded[1]));
    }
    // Portal URL parameter: portalURL.addParameter()
    Enumeration params = request.getParameterNames();
    while (params.hasMoreElements()) {
        String parameter = (String) params.nextElement();
        if (parameter.startsWith(PREFIX + RENDER_PARAM)) {
            String value = request.getParameter(parameter);
            LOG.debug("parameter: " + parameter);
            // @note TEST TEST TEST
            // portalURL.addParameter(decodeParameter(parameter, value));
            portalURL.addParameter(decodeParameter(parameter, StringUtils.encodeUrl(value)));
        }
    }
    // Return the portal URL.
    return portalURL;
}
