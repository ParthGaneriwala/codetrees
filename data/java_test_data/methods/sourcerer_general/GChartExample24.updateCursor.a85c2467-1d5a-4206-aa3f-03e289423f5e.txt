void updateCursor() {
    double dx = p2.x - p1.x;
    double dy = p2.y - p1.y;
    if (!moving && Math.abs(dx) >= MIN_SELECTION_FRACTION_X * (getXAxis().getAxisMax() - getXAxis().getAxisMin()) && Math.abs(dy) >= MIN_SELECTION_FRACTION_Y * (getYAxis().getAxisMax() - getYAxis().getAxisMin())) {
        getCurve(SELECTION_CURVE).setVisible(true);
        getCurve(SELECTION_CURVE).getSymbol().setSymbolType(SymbolType.BOX_CENTER);
        getCurve(SELECTION_CURVE).getSymbol().setBorderColor("gray");
        getCurve(SELECTION_CURVE).getSymbol().setBorderWidth(2);
        getCurve(SELECTION_CURVE).getSymbol().setModelWidth(Math.abs(dx));
        getCurve(SELECTION_CURVE).getSymbol().setModelHeight(Math.abs(dy));
        getCurve(SELECTION_CURVE).getPoint(0).setX((p1.x + p2.x) / 2);
        getCurve(SELECTION_CURVE).getPoint(0).setY((p1.y + p2.y) / 2);
    } else if (moving) {
        if (getCurve(SELECTION_CURVE).isVisible())
            getCurve(SELECTION_CURVE).setVisible(false);
        double xMin = getXAxis().getAxisMin() - dx;
        double xMax = getXAxis().getAxisMax() - dx;
        double yMin = getYAxis().getAxisMin() - dy;
        double yMax = getYAxis().getAxisMax() - dy;
        getXAxis().setAxisMin(xMin);
        getXAxis().setAxisMax(xMax);
        getYAxis().setAxisMin(yMin);
        getYAxis().setAxisMax(yMax);
    }
    update();
}
