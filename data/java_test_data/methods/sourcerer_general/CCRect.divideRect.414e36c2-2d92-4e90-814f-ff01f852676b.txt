public static void divideRect(final CCRect aRect, CCRect[] slice, CCRect[] remainder, float amount, CCRect.Edge edge) {
    if (slice == null)
        slice[0] = sRect;
    if (remainder == null)
        remainder[0] = rRect;
    if (isEmptyRect(aRect)) {
        slice[0] = CCRect.make(0, 0, 0, 0);
        remainder[0] = CCRect.make(0, 0, 0, 0);
        return;
    }
    switch(edge) {
        case MinXEdge:
            if (amount > aRect.size.width) {
                slice[0] = aRect;
                remainder[0] = CCRect.make(maxX(aRect), aRect.origin.y, 0, aRect.size.height);
            } else {
                slice[0] = CCRect.make(aRect.origin.x, aRect.origin.y, amount, aRect.size.height);
                remainder[0] = CCRect.make(maxX(slice[0]), aRect.origin.y, maxX(aRect) - maxX(slice[0]), aRect.size.height);
            }
            break;
        case MinYEdge:
            if (amount > aRect.size.height) {
                slice[0] = aRect;
                remainder[0] = CCRect.make(aRect.origin.x, maxY(aRect), aRect.size.width, 0);
            } else {
                slice[0] = CCRect.make(aRect.origin.x, aRect.origin.y, aRect.size.width, amount);
                remainder[0] = CCRect.make(aRect.origin.x, maxY(slice[0]), aRect.size.width, maxY(aRect) - maxY(slice[0]));
            }
            break;
        case MaxXEdge:
            if (amount > aRect.size.width) {
                slice[0] = aRect;
                remainder[0] = CCRect.make(aRect.origin.x, aRect.origin.y, 0, aRect.size.height);
            } else {
                slice[0] = CCRect.make(maxX(aRect) - amount, aRect.origin.y, amount, aRect.size.height);
                remainder[0] = CCRect.make(aRect.origin.x, aRect.origin.y, minX(slice[0]) - aRect.origin.x, aRect.size.height);
            }
            break;
        case MaxYEdge:
            if (amount > aRect.size.height) {
                slice[0] = aRect;
                remainder[0] = CCRect.make(aRect.origin.x, aRect.origin.y, aRect.size.width, 0);
            } else {
                slice[0] = CCRect.make(aRect.origin.x, maxY(aRect) - amount, aRect.size.width, amount);
                remainder[0] = CCRect.make(aRect.origin.x, aRect.origin.y, aRect.size.width, minY(slice[0]) - aRect.origin.y);
            }
            break;
        default:
            break;
    }
}
