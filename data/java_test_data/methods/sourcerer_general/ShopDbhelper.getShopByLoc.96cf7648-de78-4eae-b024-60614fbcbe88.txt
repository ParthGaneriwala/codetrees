public Object[] getShopByLoc(String shopType, int easting, int northing, int distance, int page, int count, boolean getTotal) throws Exception {
    Connection connection = null;
    Object[] returnValue = new Object[2];
    try {
        connection = connectionPool.getConnection();
        PreparedStatement preStat = null;
        if ("all".equals(shopType)) {
            preStat = connection.prepareStatement(GETSHOPBYLOCWITHOUTTYPE_SQL);
            preStat.setInt(1, easting);
            preStat.setInt(2, northing);
            preStat.setInt(3, distance);
            preStat.setInt(4, (page - 1) * count);
            preStat.setInt(5, count);
        } else {
            preStat = connection.prepareStatement(GETSHOPBYLOC_SQL);
            preStat.setInt(1, easting);
            preStat.setInt(2, northing);
            preStat.setString(3, shopType);
            preStat.setInt(4, distance);
            preStat.setInt(5, (page - 1) * count);
            preStat.setInt(6, count);
        }
        ResultSet shopResSet = preStat.executeQuery();
        if (loggerServiceTracker.isDebugEnabled()) {
            loggerServiceTracker.debug("SQL:" + preStat.toString());
            loggerServiceTracker.debug("Result:" + shopResSet.toString());
        }
        List<Shop> shops = new ArrayList<Shop>();
        while (shopResSet.next()) {
            long id = shopResSet.getLong("shopId");
            String eusername = shopResSet.getString("enterpriseUser");
            String type = shopResSet.getString("type");
            String title = shopResSet.getString("title");
            String content = shopResSet.getString("content");
            String shopImg = shopResSet.getString("shopImg");
            String district = shopResSet.getString("district");
            String street = shopResSet.getString("street");
            String tel = shopResSet.getString("tel");
            double longitude = shopResSet.getDouble("longitude");
            double latitude = shopResSet.getDouble("latitude");
            double distanceFromUser = shopResSet.getDouble("distance");
            Shop shop = new Shop();
            shop.setShopId(id);
            shop.setEusername(eusername);
            shop.setType(type);
            shop.setTitle(title);
            shop.setContent(content);
            shop.setShopImg(shopImg);
            shop.setDistrict(district);
            shop.setStreet(street);
            shop.setTel(tel);
            shop.setLatitude(latitude);
            shop.setLongitude(longitude);
            shop.setDistanceFromUser(distanceFromUser);
            shops.add(shop);
        }
        returnValue[1] = shops.toArray(new Shop[] {});
        if (getTotal) {
            connection = connectionPool.getConnection();
            PreparedStatement preStat2 = null;
            if ("all".equals(shopType)) {
                preStat2 = connection.prepareStatement(GETSHOPBYLOCCOUNTWITHOUTTYPE_SQL);
                preStat2.setInt(1, easting);
                preStat2.setInt(2, northing);
                preStat2.setInt(3, distance);
            } else {
                preStat2 = connection.prepareStatement(GETSHOPBYLOCCOUNT_SQL);
                preStat2.setInt(1, easting);
                preStat2.setInt(2, northing);
                preStat2.setString(3, shopType);
                preStat2.setInt(4, distance);
            }
            ResultSet shopResSet2 = preStat2.executeQuery();
            if (loggerServiceTracker.isDebugEnabled()) {
                loggerServiceTracker.debug("SQL:" + preStat2.toString());
                loggerServiceTracker.debug("Result:" + shopResSet2.toString());
            }
            if (shopResSet2.next()) {
                int countResult = shopResSet2.getInt("COUNT(*)");
                returnValue[0] = countResult;
            }
        }
        return returnValue;
    } finally {
        if (connection != null) {
            connectionPool.returnConnection(connection);
        }
    }
}
