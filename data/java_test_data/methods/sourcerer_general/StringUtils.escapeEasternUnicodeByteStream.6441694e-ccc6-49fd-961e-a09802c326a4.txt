public static byte[] escapeEasternUnicodeByteStream(byte[] origBytes, String origString, int offset, int length) {
    if ((origBytes == null) || (origBytes.length == 0)) {
        return origBytes;
    }
    int bytesLen = origBytes.length;
    int bufIndex = 0;
    int strIndex = 0;
    ByteArrayOutputStream bytesOut = new ByteArrayOutputStream(bytesLen);
    while (true) {
        if (origString.charAt(strIndex) == '\\') {
            // write it out as-is
            bytesOut.write(origBytes[bufIndex++]);
        // bytesOut.write(origBytes[bufIndex++]);
        } else {
            // Grab the first byte
            int loByte = origBytes[bufIndex];
            if (loByte < 0) {
                // adjust for signedness/wrap-around
                loByte += 256;
            }
            // We always write the first byte
            bytesOut.write(loByte);
            // 
            if (loByte >= 0x80) {
                if (bufIndex < (bytesLen - 1)) {
                    int hiByte = origBytes[bufIndex + 1];
                    if (hiByte < 0) {
                        // adjust for signedness/wrap-around
                        hiByte += 256;
                    }
                    // write the high byte here, and increment the index
                    // for the high byte
                    bytesOut.write(hiByte);
                    bufIndex++;
                    // escape 0x5c if necessary
                    if (hiByte == 0x5C) {
                        bytesOut.write(hiByte);
                    }
                }
            } else if (loByte == 0x5c) {
                if (bufIndex < (bytesLen - 1)) {
                    int hiByte = origBytes[bufIndex + 1];
                    if (hiByte < 0) {
                        // adjust for signedness/wrap-around
                        hiByte += 256;
                    }
                    if (hiByte == 0x62) {
                        // we need to escape the 0x5c
                        bytesOut.write(0x5c);
                        bytesOut.write(0x62);
                        bufIndex++;
                    }
                }
            }
            bufIndex++;
        }
        if (bufIndex >= bytesLen) {
            // we're done
            break;
        }
        strIndex++;
    }
    return bytesOut.toByteArray();
}
