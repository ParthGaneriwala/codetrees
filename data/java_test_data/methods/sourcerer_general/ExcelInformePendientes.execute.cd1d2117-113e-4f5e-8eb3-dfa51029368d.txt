public String execute() {
    ByteArrayOutputStream bos = new ByteArrayOutputStream();
    Collection<SolicitudRequerimiento> retorno = new ArrayList<SolicitudRequerimiento>();
    int i = 1;
    try {
        Date fechaIni = Util.convierteStringADate(this.fechaInicio, new SimpleDateFormat("yyyy/MM/dd"));
        Date fechaFin = Util.convierteStringADate(this.fechaHasta, new SimpleDateFormat("yyyy/MM/dd"));
        WritableWorkbook workbook = Workbook.createWorkbook(bos);
        WritableSheet sheet = workbook.createSheet("Estadistica Solicitud", 0);
        sheet.addCell(new Label(0, 0, "Id Solicitud"));
        sheet.addCell(new Label(1, 0, "Anexo"));
        sheet.addCell(new Label(2, 0, "Nombre Usuario"));
        sheet.addCell(new Label(3, 0, "Tipo Problema"));
        sheet.addCell(new Label(4, 0, "Descripcion Problema"));
        sheet.addCell(new Label(5, 0, "T�cnico"));
        sheet.addCell(new Label(6, 0, "Fecha Inicio"));
        sheet.addCell(new Label(7, 0, "Fecha Ingreso"));
        sheet.addCell(new Label(8, 0, "Fecha Termino"));
        sheet.addCell(new Label(9, 0, "Estado"));
        sheet.addCell(new Label(10, 0, "Soluci�n T�cnico"));
        sheet.addCell(new Label(11, 0, "Observaciones"));
        sheet.addCell(new Label(12, 0, "Nivel Complejidad"));
        DateFormat customDateFormat = new DateFormat("dd/mm/yyyy h:mm");
        WritableCellFormat dateFormat = new WritableCellFormat(customDateFormat);
        if (this.tipoInforme.equalsIgnoreCase("pendiente")) {
            if (this.tipoUsuario == 1)
                retorno = InformesFacade.obtieneInformePendiente(fechaIni, fechaFin);
            else if (this.tipoUsuario == 2) {
                retorno = InformesFacade.obtieneInformePendienteTecnico(fechaIni, fechaFin, Integer.parseInt(this.rutTecnico));
            }
        } else if (this.tipoInforme.equalsIgnoreCase("finaliza")) {
            if (this.tipoUsuario == 1)
                retorno = InformesFacade.obtieneInformeFinalizadas(fechaIni, fechaFin);
            else if (this.tipoUsuario == 2) {
                retorno = InformesFacade.obtieneInformeFinalizadasTecnico(fechaIni, fechaFin, Integer.parseInt(this.rutTecnico));
            }
        }
        for (SolicitudRequerimiento sr : retorno) {
            sheet.addCell(new Number(0, i, sr.getObjectId()));
            sheet.addCell(new Label(1, i, sr.getAnexo().getAnexo()));
            sheet.addCell(new Label(2, i, sr.getNombreUsuario()));
            sheet.addCell(new Label(3, i, sr.getTipoProblema().getName()));
            sheet.addCell(new Label(4, i, sr.getDescripcionProblema()));
            sheet.addCell(new Label(5, i, sr.getTecnico().getName()));
            sheet.addCell(new DateTime(6, i, sr.getFechaInicio(), dateFormat));
            if (sr.getFechaIngreso() == null)
                sheet.addCell(new Label(7, i, ""));
            else
                sheet.addCell(new DateTime(7, i, sr.getFechaIngreso(), dateFormat));
            if (sr.getFechaTermino() == null)
                sheet.addCell(new Label(8, i, ""));
            else
                sheet.addCell(new DateTime(8, i, sr.getFechaTermino(), dateFormat));
            sheet.addCell(new Label(9, i, sr.getEstado().getName()));
            if (sr.getSolucionTecnico() == null)
                sheet.addCell(new Label(10, i, ""));
            else
                sheet.addCell(new Label(10, i, sr.getSolucionTecnico()));
            if (sr.getObservacion() == null)
                sheet.addCell(new Label(11, i, ""));
            else
                sheet.addCell(new Label(11, i, sr.getObservacion()));
            if (sr.getNivelComplejidad() == null)
                sheet.addCell(new Label(12, i, ""));
            else
                sheet.addCell(new Label(12, i, sr.getNivelComplejidad().getName()));
            i++;
        }
        workbook.write();
        workbook.close();
        this.excelInputStream = new ByteArrayInputStream(bos.toByteArray());
    } catch (Exception e) {
        return ERROR;
    }
    return SUCCESS;
}
