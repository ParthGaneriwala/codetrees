public static final Vector getFilesWith(String ext) {
    // the value to return;
    String[] StrVol;
    // holds the info of the file to analise, file or folder
    FileConnection currentFile;
    // holds the info of the childerns if a folder is found
    Enumeration currentFolder;
    // counter of the search
    int j = 0;
    // holds the dir is analised
    StringBuffer bodyDir;
    String reverseExt;
    // hold the info to reverse the path file and found the ext
    StringBuffer extention = new StringBuffer();
    // Main Queue, hold the all info of the system folder phone
    queue.removeAllElements();
    // Queue to process files founded
    fileProc.removeAllElements();
    /*Get the root volumes*/
    Enumeration volumes = FileSystemRegistry.listRoots();
    /*add to the queue to init the search*/
    while (volumes.hasMoreElements()) queue.addElement(base + (String) volumes.nextElement());
    /*have any info to start?*/
    if (queue.size() == 0)
        return null;
    try {
        /*stop the search until we have analise all queue*/
        j = 0;
        while (queue.size() != j) {
            try {
                /*open the current folder of the queue*/
                currentFile = (FileConnection) Connector.open((String) queue.elementAt(j));
                /*is a dir?*/
                if (currentFile.isDirectory()) {
                    /*YES, let's begin with the items of the folder*/
                    currentFolder = currentFile.list();
                    while (currentFolder.hasMoreElements()) queue.addElement((String) queue.elementAt(j) + currentFolder.nextElement());
                } else {
                    /*NO, ok, it's a file, let's see if the extention concurr*/
                    String NExt = getExt((String) queue.elementAt(j));
                    // Â¿is the ext we search?
                    if (NExt != null)
                        if (NExt.equals(ext))
                            // YES, add to the queue of files found
                            fileProc.addElement((String) queue.elementAt(j));
                }
                currentFile.close();
            } catch (SecurityException e) {
                e.printStackTrace();
            }
            j++;
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
    return fileProc;
}
