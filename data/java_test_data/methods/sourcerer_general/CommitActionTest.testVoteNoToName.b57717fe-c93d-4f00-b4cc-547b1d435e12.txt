@Test
public void testVoteNoToName() {
    try {
        // Create a Model
        Model m = new Model();
        m.voteName("Bad Domain", true, 1L);
        m = DaoUtil.getModelDao().save(m);
        // Create a feature
        Feature f = new Feature();
        f.vote(true, 222L);
        f.voteName("testVoteNoToName", true, 222L, m.getId());
        f.setModel(m);
        f = DaoUtil.getFeatureDao().save(f);
        // Make and handle a request
        FeatureOperation op = new FeatureOperation();
        op.setName(Resources.OP_ADD_NAME);
        op.setUserid(100L);
        op.setVote(false);
        op.setValue("testVoteNoToName");
        op.setFeatureId(f.getId());
        op.setModelId(m.getId());
        CommitRequest req = new CommitRequest();
        req.setId(3L);
        req.setName(Resources.REQ_COMMIT);
        req.setRequesterId(op.getUserid());
        req.setModelId(op.getModelId());
        req.setOperation(op);
        ResponseGroup rg = new ResponseGroup();
        action.execute(req, rg);
        logger.info("------------- VOTE NO TO NAME -------------");
        showResponse(rg.getBack());
        showResponse(rg.getBroadcast());
        // Query and compare
        Feature f1 = DaoUtil.getFeatureDao().getByName(m.getId(), "testVoteNoToName");
        logger.info(f1.toString());
    } catch (Exception e) {
        logger.error("Couldn't execute.", e);
        assertTrue(false);
    }
}
