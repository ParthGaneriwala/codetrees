public boolean delete(Connection db) throws SQLException {
    if (this.getId() == -1 || this.requirementId == -1) {
        throw new SQLException("Assignment Folder ID was not specified");
    }
    int recordCount = 0;
    boolean commit = db.getAutoCommit();
    try {
        if (commit) {
            db.setAutoCommit(false);
        }
        // Remove the mapped item
        RequirementMapItem mapItem = new RequirementMapItem();
        mapItem.setProjectId(projectId);
        mapItem.setRequirementId(requirementId);
        mapItem.setFolderId(id);
        mapItem.remove(db);
        // Move assignments to the left
        PreparedStatement pst = db.prepareStatement("UPDATE project_assignments " + "SET folder_id = ? " + "WHERE folder_id = ? ");
        DatabaseUtils.setInt(pst, 1, parentId);
        pst.setInt(2, id);
        pst.executeUpdate();
        pst.close();
        // Move other folders to the left
        pst = db.prepareStatement("UPDATE project_assignments_folder " + "SET parent_id = ? " + "WHERE parent_id = ? ");
        DatabaseUtils.setInt(pst, 1, parentId);
        pst.setInt(2, id);
        pst.executeUpdate();
        pst.close();
        // Delete this folder (which should have nothing in it now)
        pst = db.prepareStatement("DELETE FROM project_assignments_folder " + "WHERE folder_id = ? ");
        pst.setInt(1, id);
        recordCount = pst.executeUpdate();
        pst.close();
        if (commit) {
            db.commit();
        }
    } catch (Exception e) {
        if (commit) {
            db.rollback();
        }
        System.out.println(e.getMessage());
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
    if (recordCount == 0) {
        errors.put("actionError", "Folder could not be deleted because it no longer exists.");
        return false;
    } else {
        return true;
    }
}
