private void tutorial2() throws Exception {
    // 1600 until 3100 (client time )
    beginHttpRequestAndOpenSessionInViewFilter();
    userTrackingService.pageAccess("Page 1");
    userTrackingService.onJavaScriptDetected();
    endHttpRequestAndOpenSessionInViewFilter();
    beginHttpRequestAndOpenSessionInViewFilter();
    List<StartupTaskInfo> infos = new ArrayList<StartupTaskInfo>();
    infos.add(new StartupTaskInfo(ColdRealGameStartupTaskEnum.LOAD_JAVA_SCRIPT, 1600, 100));
    infos.add(new StartupTaskInfo(ColdRealGameStartupTaskEnum.INIT_GAME, 1700, 150));
    infos.add(new StartupTaskInfo(ColdRealGameStartupTaskEnum.INIT_GUI, 1850, 50));
    infos.add(new StartupTaskInfo(ColdRealGameStartupTaskEnum.LOAD_MAP, 1900, 200));
    movableService.sendStartupInfo(infos, 500);
    userTrackingService.onJavaScriptDetected();
    endHttpRequestAndOpenSessionInViewFilter();
    beginHttpRequestAndOpenSessionInViewFilter();
    userTrackingService.onTutorialProgressChanged(TutorialConfig.TYPE.STEP, "step2", "task2", 1, 2500);
    endHttpRequestAndOpenSessionInViewFilter();
    beginHttpRequestAndOpenSessionInViewFilter();
    userTrackingService.onTutorialProgressChanged(TutorialConfig.TYPE.TASK, "task2", "Tutorial2", 1, 3000);
    endHttpRequestAndOpenSessionInViewFilter();
    beginHttpRequestAndOpenSessionInViewFilter();
    // Tracking start
    userTrackingService.onEventTrackingStart(new EventTrackingStart(201, 202, 203, 204, 205, 206, 1900));
    // Mouse
    Collection<EventTrackingItem> eventTrackingItems = new ArrayList<EventTrackingItem>();
    eventTrackingItems.add(new EventTrackingItem(1, 1, 1, 1910));
    eventTrackingItems.add(new EventTrackingItem(2, 10, 1, 1920));
    eventTrackingItems.add(new EventTrackingItem(3, 10, 1, 1930));
    eventTrackingItems.add(new EventTrackingItem(4, 10, 1, 1940));
    eventTrackingItems.add(new EventTrackingItem(5, 10, 1, 1950));
    // Commands                                                                     1
    Collection<BaseCommand> baseCommands = new ArrayList<BaseCommand>();
    AttackCommand attackCommand = new AttackCommand();
    setPrivateField(BaseCommand.class, attackCommand, "timeStamp", 2000);
    baseCommands.add(attackCommand);
    // Selection
    Collection<SelectionTrackingItem> selectionTrackingItems = new ArrayList<SelectionTrackingItem>();
    SelectionTrackingItem selectionTrackingItem1 = new SelectionTrackingItem();
    setPrivateField(SelectionTrackingItem.class, selectionTrackingItem1, "timeStamp", 2050);
    selectionTrackingItems.add(selectionTrackingItem1);
    SelectionTrackingItem selectionTrackingItem2 = new SelectionTrackingItem();
    setPrivateField(SelectionTrackingItem.class, selectionTrackingItem2, "timeStamp", 2100);
    selectionTrackingItems.add(selectionTrackingItem2);
    // Terrain scrolling
    Collection<TerrainScrollTracking> terrainScrollTrackings = new ArrayList<TerrainScrollTracking>();
    terrainScrollTrackings.add(new TerrainScrollTracking(1, 1, 2, 3, 2100));
    terrainScrollTrackings.add(new TerrainScrollTracking(1, 2, 2, 3, 2200));
    // Browser window
    Collection<BrowserWindowTracking> browserWindowTrackings = new ArrayList<BrowserWindowTracking>();
    browserWindowTrackings.add(new BrowserWindowTracking(1, 1, 3, 4, 5, 6, 2100));
    browserWindowTrackings.add(new BrowserWindowTracking(1, 2, 3, 4, 5, 6, 2120));
    browserWindowTrackings.add(new BrowserWindowTracking(1, 3, 3, 4, 5, 6, 2130));
    browserWindowTrackings.add(new BrowserWindowTracking(1, 4, 3, 4, 5, 6, 2140));
    browserWindowTrackings.add(new BrowserWindowTracking(1, 5, 3, 4, 5, 6, 2150));
    movableService.sendEventTrackerItems(eventTrackingItems, baseCommands, selectionTrackingItems, terrainScrollTrackings, browserWindowTrackings);
    userTrackingService.onTutorialProgressChanged(TutorialConfig.TYPE.TUTORIAL, "tutorial2", null, 1, 3100);
    endHttpRequestAndOpenSessionInViewFilter();
}
