public synchronized String nextToken() {
    StringBuffer tokenBuf = new StringBuffer();
    if (this.emittingEscapeCode) {
        // $NON-NLS-1$
        tokenBuf.append("{");
        this.emittingEscapeCode = false;
    }
    for (; this.pos < this.sourceLength; this.pos++) {
        char c = this.source.charAt(this.pos);
        if (!this.inQuotes && c == '@') {
            this.sawVariableUse = true;
        }
        if ((c == '\'' || c == '"') && !inComment) {
            if (this.inQuotes && c == quoteChar) {
                if (this.pos + 1 < this.sourceLength) {
                    if (this.source.charAt(this.pos + 1) == quoteChar) {
                        // Doubled-up quote escape, if the first quote isn't already escaped
                        if (this.lastChar != '\\') {
                            tokenBuf.append(quoteChar);
                            tokenBuf.append(quoteChar);
                            this.pos++;
                            continue;
                        }
                    }
                }
            }
            if (this.lastChar != '\\') {
                if (this.inQuotes) {
                    if (this.quoteChar == c) {
                        this.inQuotes = false;
                    }
                } else {
                    this.inQuotes = true;
                    this.quoteChar = c;
                }
            } else if (this.lastLastChar == '\\') {
                if (this.inQuotes) {
                    if (this.quoteChar == c) {
                        this.inQuotes = false;
                    }
                } else {
                    this.inQuotes = true;
                    this.quoteChar = c;
                }
            }
            tokenBuf.append(c);
        } else if (c == '-') {
            if ((this.lastChar == '-') && ((this.lastLastChar != '\\') && !this.inQuotes)) {
                this.inComment = true;
            }
            tokenBuf.append(c);
        } else if ((c == '\n') || (c == '\r')) {
            this.inComment = false;
            tokenBuf.append(c);
        } else if (c == '{') {
            if (this.inQuotes || this.inComment) {
                tokenBuf.append(c);
            } else {
                this.bracesLevel++;
                if (this.bracesLevel == 1) {
                    this.pos++;
                    this.emittingEscapeCode = true;
                    return tokenBuf.toString();
                }
                tokenBuf.append(c);
            }
        } else if (c == '}') {
            tokenBuf.append(c);
            if (!this.inQuotes && !this.inComment) {
                this.lastChar = c;
                this.bracesLevel--;
                if (this.bracesLevel == 0) {
                    this.pos++;
                    return tokenBuf.toString();
                }
            }
        } else {
            tokenBuf.append(c);
        }
        this.lastLastChar = this.lastChar;
        this.lastChar = c;
    }
    return tokenBuf.toString();
}
