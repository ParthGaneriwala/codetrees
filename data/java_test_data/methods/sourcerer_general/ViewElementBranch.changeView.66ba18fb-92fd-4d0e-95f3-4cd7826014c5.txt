public void changeView(int to) {
    System.out.println("Changing to mode " + to);
    if (to == FIRST_PERSON_VIEW) {
        // set the new mode
        viewMode = FIRST_PERSON_VIEW;
        if (// if is attached
        avatar.getBranchScene().isLive())
            // remove the avatar
            detach();
        // a new Transform
        Transform3D t = new Transform3D();
        // fill the transform with our current settings
        coord.getTransform(t);
        // set to our avatar's translation
        t.setTranslation(new Vector3f(avatar.getTranslation()));
        // set as our new state
        coord.setTransform(t);
    } else if (to == OFFSET_VIEW) {
        // set the new mode
        viewMode = OFFSET_VIEW;
        if (// if is NOT attached
        !avatar.getBranchScene().isLive())
            // add the avatar
            attachAvatar();
        // a new Transform
        Transform3D t = new Transform3D();
        // fill the transform with our current settings
        coord.getTransform(t);
        // get the avatar's current translation
        float[] p = avatar.getTranslation();
        // get the avatar's current rotation
        float[] f = avatar.getRotation();
        p = VectorUtils.add(p, Quaternions.rotatePoint(offset, f));
        // set the new translation
        t.setTranslation(new Vector3f(p));
        // set as our new state
        coord.setTransform(t);
    } else if (to == INDEPENDENT_VIEW) {
        viewMode = INDEPENDENT_VIEW;
        if (// if is NOT attached
        !avatar.getBranchScene().isLive()) {
            // add the avatar
            attachAvatar();
            // a new Transform
            Transform3D t = new Transform3D();
            // fill the transform with our current settings
            coord.getTransform(t);
            Vector3f trans = new Vector3f();
            t.get(trans);
            // offset the old translation some (so camera isn't inside the element)
            trans.add(new Vector3f(offset));
            // reset the translation
            t.setTranslation(trans);
            // set as our new state
            coord.setTransform(t);
        }
    // otherwise do nothing?
    } else if (to == FOLLOWING_VIEW) {
        viewMode = INDEPENDENT_VIEW;
        if (// if is NOT attached
        !avatar.getBranchScene().isLive()) {
            // add the avatar
            attachAvatar();
            // a new Transform
            Transform3D t = new Transform3D();
            // fill the transform with our current settings
            coord.getTransform(t);
            Vector3f trans = new Vector3f();
            t.get(trans);
            // offset the old translation some (so camera isn't inside the element)
            trans.add(new Vector3f(offset));
            // reset the translation
            t.setTranslation(trans);
            // set as our new state
            coord.setTransform(t);
        } else {
            // move to offset
            // a new Transform
            Transform3D t = new Transform3D();
            // fill the transform with our current settings
            coord.getTransform(t);
            // get the avatar's current translation
            float[] p = avatar.getTranslation();
            // get the avatar's current rotation
            float[] f = avatar.getRotation();
            p = VectorUtils.add(p, Quaternions.rotatePoint(offset, f));
            // set the new translation
            t.setTranslation(new Vector3f(p));
            // set as our new state
            coord.setTransform(t);
        }
    }
// add support for other views
}
