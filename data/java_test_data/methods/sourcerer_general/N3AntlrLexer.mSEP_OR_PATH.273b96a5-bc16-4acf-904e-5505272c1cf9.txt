public final void mSEP_OR_PATH(boolean _createToken) throws RecognitionException, CharStreamException, TokenStreamException {
    int _ttype;
    Token _token = null;
    int _begin = text.length();
    _ttype = SEP_OR_PATH;
    int _saveIndex;
    boolean synPredMatched134 = false;
    if (((LA(1) == '.') && (true) && (true))) {
        int _m134 = mark();
        synPredMatched134 = true;
        inputState.guessing++;
        try {
            {
                mDOT(false);
                {
                    switch(LA(1)) {
                        case 'A':
                        case 'B':
                        case 'C':
                        case 'D':
                        case 'E':
                        case 'F':
                        case 'G':
                        case 'H':
                        case 'I':
                        case 'J':
                        case 'K':
                        case 'L':
                        case 'M':
                        case 'N':
                        case 'O':
                        case 'P':
                        case 'Q':
                        case 'R':
                        case 'S':
                        case 'T':
                        case 'U':
                        case 'V':
                        case 'W':
                        case 'X':
                        case 'Y':
                        case 'Z':
                        case 'a':
                        case 'b':
                        case 'c':
                        case 'd':
                        case 'e':
                        case 'f':
                        case 'g':
                        case 'h':
                        case 'i':
                        case 'j':
                        case 'k':
                        case 'l':
                        case 'm':
                        case 'n':
                        case 'o':
                        case 'p':
                        case 'q':
                        case 'r':
                        case 's':
                        case 't':
                        case 'u':
                        case 'v':
                        case 'w':
                        case 'x':
                        case 'y':
                        case 'z':
                            {
                                mALPHA(false);
                                break;
                            }
                        case '_':
                            {
                                match('_');
                                break;
                            }
                        case ':':
                            {
                                mCOLON(false);
                                break;
                            }
                        case '<':
                            {
                                mLANGLE(false);
                                break;
                            }
                        default:
                            {
                                throw new NoViableAltForCharException((char) LA(1), getFilename(), getLine(), getColumn());
                            }
                    }
                }
            }
        } catch (RecognitionException pe) {
            synPredMatched134 = false;
        }
        rewind(_m134);
        inputState.guessing--;
    }
    if (synPredMatched134) {
        mDOT(false);
        if (inputState.guessing == 0) {
            _ttype = PATH;
        }
    } else if ((LA(1) == '.') && (true) && (true)) {
        mDOT(false);
        if (inputState.guessing == 0) {
            _ttype = SEP;
        }
    } else {
        throw new NoViableAltForCharException((char) LA(1), getFilename(), getLine(), getColumn());
    }
    if (_createToken && _token == null && _ttype != Token.SKIP) {
        _token = makeToken(_ttype);
        _token.setText(new String(text.getBuffer(), _begin, text.length() - _begin));
    }
    _returnToken = _token;
}
