private sintetizados expresionSimple(boolean porValorH, String idPredefH) throws ErrorLexico, ErrorArchivo, ErrorSintactico, ErrorSemantico, Exception {
    sintetizados sintTer, sintESF, sintES = new sintetizados();
    String e1, e2;
    if (numeroTokenActual == Token.SUMA) {
        match(Token.SUMA);
        if (!porValorH) {
            throw new ErrorSemantico(ErrorSemantico.PARAM_REF, getNumeroLinea(), getNumeroColumna());
        }
        sintTer = termino(porValorH, idPredefH);
        sintESF = expresionSimpleFac(sintTer.getTipoS(), porValorH, idPredefH);
        if (compatibles(sintTer.getTipoS(), sintESF.getTipoS())) {
            // si el segundo es NULL tambi�n deber�an ser compatibles, ojo al piojo
            sintES.setTipoS(sintTer.getTipoS());
        } else {
            e1 = ErrorSemantico.construirMsj(sintTer.getTipoS().toString());
            e2 = ErrorSemantico.construirMsj(sintESF.getTipoS().toString());
            throw new ErrorSemantico(ErrorSemantico.TIPO_INCOMP, getNumeroLinea(), getNumeroColumna(), e1, e2);
        }
    } else if (numeroTokenActual == Token.RESTA) {
        match(Token.RESTA);
        if (!porValorH) {
            throw new ErrorSemantico(ErrorSemantico.PARAM_REF, getNumeroLinea(), getNumeroColumna());
        }
        sintTer = termino(porValorH, idPredefH);
        generador.genInstSinArg("", generador.UMEN);
        sintESF = expresionSimpleFac(sintTer.getTipoS(), porValorH, idPredefH);
        if (compatibles(sintTer.getTipoS(), sintESF.getTipoS())) {
            // si el segundo es NULL tambi�n deber�an ser compatibles, ojo al piojo
            sintES.setTipoS(sintTer.getTipoS());
        } else {
            e1 = ErrorSemantico.construirMsj(sintTer.getTipoS().toString());
            e2 = ErrorSemantico.construirMsj(sintESF.getTipoS().toString());
            throw new ErrorSemantico(ErrorSemantico.TIPO_INCOMP, getNumeroLinea(), getNumeroColumna(), e1, e2);
        }
    } else {
        sintTer = termino(porValorH, idPredefH);
        sintESF = expresionSimpleFac(sintTer.getTipoS(), porValorH, idPredefH);
        if (compatibles(sintTer.getTipoS(), sintESF.getTipoS())) {
            // si el segundo es NULL tambi�n deber�an ser compatibles, ojo al piojo
            sintES.setTipoS(sintTer.getTipoS());
        } else {
            e1 = ErrorSemantico.construirMsj(sintTer.getTipoS().toString());
            e2 = ErrorSemantico.construirMsj(sintESF.getTipoS().toString());
            throw new ErrorSemantico(ErrorSemantico.TIPO_INCOMP, getNumeroLinea(), getNumeroColumna(), e1, e2);
        }
    }
    return sintES;
}
