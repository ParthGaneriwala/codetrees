public void receiveHttpResponse(byte[] responseBuf) {
    System.out.println("Passou4");
    String clienteLabel;
    ByteArrayInputStream responseStream = new ByteArrayInputStream(responseBuf);
    InputStreamReader responseReader = new InputStreamReader(responseStream);
    KXmlParser parser = new KXmlParser();
    detalhes = new Command("Detalhes", Command.OK, 2);
    try {
        parser.setInput(responseReader);
        parser.nextTag();
        if (parser.getName().equals("cliente")) {
            parser.nextTag();
            if (!(parser.getName().equals("cliente"))) {
                // System.out.println("Passei"+parser.getName());
                int counterClientes = 1;
                while ((parser.getName().equals("cliente-fisico"))) /* &&  (parser.nextTag () != XmlPullParser.END_TAG)*/
                {
                    parser.require(XmlPullParser.START_TAG, null, "cliente-fisico");
                    parserCliente(parser);
                    parser.require(XmlPullParser.END_TAG, null, "cliente-fisico");
                    parser.nextTag();
                    counterClientes++;
                }
                counterClientes = 1;
                while (parser.getName().equals("cliente-juridico")) {
                    parser.require(XmlPullParser.START_TAG, null, "cliente-juridico");
                    parserCliente(parser);
                    parser.require(XmlPullParser.END_TAG, null, "cliente-juridico");
                    counterClientes++;
                    parser.nextTag();
                }
                parser.require(XmlPullParser.END_TAG, null, "cliente");
                parser.next();
                parser.require(XmlPullParser.END_DOCUMENT, null, null);
                if (chamador == 1) {
                    resposta.addCommand(detalhes);
                    resposta.addCommand(editarCliente);
                    resposta.addCommand(deletarCliente);
                } else if (chamador == 2) {
                    resposta.addCommand(detalhes);
                    selecionarCliente = new Command("Selecionar Cliente", Command.OK, 1);
                    resposta.addCommand(selecionarCliente);
                }
            } else {
                clientesCg.setLabel("Sem resultados");
            }
            resposta.addCommand(voltar);
            resposta.addCommand(detalhes);
            resposta.append(clientesCg);
            resposta.setCommandListener(this);
            midlet.showScreen(resposta);
        } else if (parser.getName().equals("mensagem")) {
            parser.nextTag();
            if (parser.getName().equals("mensagem-ok")) {
                resposta = new Form("Ibyte Consultores");
                StringItem label = new StringItem(parser.nextText(), "");
                ok = new Command("Ok", Command.OK, 1);
                resposta.append(label);
                resposta.addCommand(ok);
                resposta.setCommandListener(this);
                midlet.showScreen(resposta);
            // retorna para o menu principal
            } else if (parser.getName().equals("mensagem-erro")) {
                String texto = parser.nextText();
                resposta = new Form("Erro no Cadastro");
                StringItem label = new StringItem(texto, "");
                ok = new Command("Ok", Command.OK, 1);
                resposta.append(label);
                resposta.addCommand(ok);
                resposta.setCommandListener(this);
                midlet.showScreen(resposta);
            }
        }
    } catch (XmlPullParserException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }// return message.toString();
     catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
}
