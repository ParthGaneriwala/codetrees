public void testLookupDateFormatSymbols() {
    DateFormatSymbols dfs1 = null;
    DateFormatSymbols dfs2 = null;
    DateFormatSymbols dfs3 = null;
    DateFormatSymbols dfs4 = null;
    try {
        dfs1 = FTPClientConfig.lookupDateFormatSymbols("fr");
    } catch (IllegalArgumentException e) {
        fail("french");
    }
    try {
        dfs2 = FTPClientConfig.lookupDateFormatSymbols("sq");
    } catch (IllegalArgumentException e) {
        fail("albanian");
    }
    try {
        dfs3 = FTPClientConfig.lookupDateFormatSymbols("ru");
    } catch (IllegalArgumentException e) {
        fail("unusupported.default.to.en");
    }
    try {
        dfs4 = FTPClientConfig.lookupDateFormatSymbols(fakeLang);
    } catch (IllegalArgumentException e) {
        fail("not.language.code.but.defaults");
    }
    assertEquals(dfs3, dfs4);
    SimpleDateFormat sdf1 = new SimpleDateFormat("d MMM yyyy", dfs1);
    SimpleDateFormat sdf2 = new SimpleDateFormat("MMM dd, yyyy", dfs2);
    SimpleDateFormat sdf3 = new SimpleDateFormat("MMM dd, yyyy", dfs3);
    Date d1 = null;
    Date d2 = null;
    Date d3 = null;
    try {
        d1 = sdf1.parse("31 d\u00e9c 2004");
    } catch (ParseException px) {
        fail("failed.to.parse.french");
    }
    try {
        d2 = sdf2.parse("dhj 31, 2004");
    } catch (ParseException px) {
        fail("failed.to.parse.albanian");
    }
    try {
        d3 = sdf3.parse("DEC 31, 2004");
    } catch (ParseException px) {
        fail("failed.to.parse.'russian'");
    }
    assertEquals("different.parser.same.date", d1, d2);
    assertEquals("different.parser.same.date", d1, d3);
}
