/**
 * This method is called from within the constructor to
 * initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is
 * always regenerated by the Form Editor.
 */
private void initComponents() {
    panBackground = new javax.swing.JPanel();
    m_jText = new javax.swing.JButton();
    m_jMode = new javax.swing.JLabel();
    setLayout(new java.awt.BorderLayout());
    panBackground.setBackground(javax.swing.UIManager.getDefaults().getColor("TextField.background"));
    panBackground.setLayout(new java.awt.BorderLayout());
    m_jText.setBackground(javax.swing.UIManager.getDefaults().getColor("TextField.background"));
    m_jText.setContentAreaFilled(false);
    m_jText.setFocusPainted(false);
    m_jText.setFocusable(false);
    m_jText.setMinimumSize(new java.awt.Dimension(100, 25));
    m_jText.setPreferredSize(new java.awt.Dimension(100, 25));
    m_jText.setRequestFocusEnabled(false);
    m_jText.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    m_jText.addActionListener(new java.awt.event.ActionListener() {

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            m_jTextActionPerformed(evt);
        }
    });
    panBackground.add(m_jText, java.awt.BorderLayout.CENTER);
    add(panBackground, java.awt.BorderLayout.CENTER);
    // NOI18N
    m_jMode.setFont(new java.awt.Font("Dialog", 0, 9));
    m_jMode.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    m_jMode.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    m_jMode.setPreferredSize(new java.awt.Dimension(32, 0));
    add(m_jMode, java.awt.BorderLayout.LINE_END);
}
