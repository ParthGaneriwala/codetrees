private void createFilter(StringBuffer sqlFilter) {
    if (sqlFilter == null) {
        sqlFilter = new StringBuffer();
    }
    if (uniqueId != null) {
        sqlFilter.append("AND projecttextid = ? ");
    }
    if (hasTwitterId) {
        sqlFilter.append("AND (twitter_id IS NOT NULL AND twitter_id <> '') ");
    }
    if (groupId > -1) {
        sqlFilter.append("AND group_id = ? ");
    }
    if (instanceId > -1) {
        sqlFilter.append("AND instance_id = ? ");
    }
    if (projectId > -1) {
        sqlFilter.append("AND project_id = ? ");
    }
    if (projectsWithAssignmentsOnly) {
        sqlFilter.append("AND p.project_id IN (SELECT DISTINCT project_id FROM project_assignments) ");
    }
    if (openProjectsOnly && withProjectDaysComplete > -1) {
        sqlFilter.append("AND (closedate IS NULL OR closedate > ?) ");
    } else {
        if (openProjectsOnly) {
            sqlFilter.append("AND closedate IS NULL ");
        }
        if (withProjectDaysComplete > -1) {
            sqlFilter.append("AND closeDate > ? ");
        }
    }
    if (closedProjectsOnly) {
        sqlFilter.append("AND closedate IS NOT NULL ");
    }
    if (projectsForUser > -1) {
        sqlFilter.append("AND (p.project_id IN (SELECT DISTINCT project_id FROM project_team WHERE user_id = ? " + (invitationAcceptedOnly ? "AND status IS NULL " : "") + (invitationPendingOnly ? "AND status = ? " : "") + (daysLastAccessed > -1 ? "AND last_accessed > ? " : "") + ") " + (includeGuestProjects ? "OR (allow_guests = ? AND approvaldate IS NOT NULL) " : "") + ") ");
    }
    if (requiresMembership != Constants.UNDEFINED) {
        sqlFilter.append("AND p.membership_required = ? ");
    }
    if (daysLastApproved > -1) {
        sqlFilter.append("AND approvaldate IS NOT NULL AND approvaldate > ? ");
    }
    if (userRange != null) {
        sqlFilter.append("AND (p.project_id in (SELECT DISTINCT project_id FROM project_team WHERE user_id IN (" + userRange + ")) " + "OR p.enteredBy IN (" + userRange + ")) ");
    }
    if (enteredByUser > -1) {
        sqlFilter.append("AND p.enteredby = ? ");
    }
    if (enteredByUserRange != null) {
        sqlFilter.append("AND p.enteredby IN (" + enteredByUserRange + ") ");
    }
    if (portalState != Constants.UNDEFINED) {
        sqlFilter.append("AND portal = ? ");
    }
    if (portalDefaultOnly) {
        sqlFilter.append("AND portal_default = ? ");
    }
    if (portalKey != null) {
        sqlFilter.append("AND portal_key = ? ");
    }
    if (publicOnly) {
        sqlFilter.append("AND allow_guests = ? ");
    }
    if (forParticipant == Constants.TRUE) {
        sqlFilter.append("AND (allows_user_observers = ? OR allow_guests = ?) AND approvaldate IS NOT NULL ");
    }
    if (approvedOnly) {
        sqlFilter.append("AND approvaldate IS NOT NULL ");
    }
    if (categoryId > -1) {
        sqlFilter.append("AND p.category_id = ? ");
    }
    if (subCategory1Id > -1) {
        sqlFilter.append("AND p.subcategory1_id = ? ");
    }
    if (subCategory2Id > -1) {
        sqlFilter.append("AND p.subcategory2_id = ? ");
    }
    if (subCategory2Id > -1) {
        sqlFilter.append("AND p.subcategory3_id = ? ");
    }
    if (includeTemplates != Constants.UNDEFINED) {
        sqlFilter.append("AND template = ? ");
    }
    if (languageId > -1) {
        sqlFilter.append("AND p.language_id = ? ");
    }
    if (userRating > -1 && projectsForUser > -1) {
        sqlFilter.append("AND p.project_id IN " + "(SELECT project_id FROM projects_rating WHERE rating = ? AND enteredby = ?) ");
    }
    if (title != null) {
        sqlFilter.append("AND lower(title) = ? ");
    }
    if (twitterId != null) {
        sqlFilter.append("AND lower(twitter_id) = ? ");
    }
    if (facebookPage != null) {
        sqlFilter.append("AND lower(facebook_page) = ? ");
    }
    if (youtubeChannelId != null) {
        sqlFilter.append("AND lower(youtube_channel_id) = ? ");
    }
    if (ustreamId != null) {
        sqlFilter.append("AND lower(ustream_id) = ? ");
    }
    if (livestreamId != null) {
        sqlFilter.append("AND lower(livestream_id) = ? ");
    }
    if (justintvId != null) {
        sqlFilter.append("AND lower(justintv_id) = ? ");
    }
    if (qikId != null) {
        sqlFilter.append("AND lower(qik_id) = ? ");
    }
    if (keywords != null) {
        sqlFilter.append("AND lower(keywords) = ? ");
    }
    if (latitude != -1) {
        sqlFilter.append("AND latitude = ? ");
    }
    if (longitude != -1) {
        sqlFilter.append("AND longitude = ? ");
    }
    if (owner > -1) {
        sqlFilter.append("AND owner = ? ");
    }
    if (profile != Constants.UNDEFINED) {
        sqlFilter.append("AND profile = ? ");
    }
    if (profileEnabled != Constants.UNDEFINED) {
        sqlFilter.append("AND profile_enabled = ? ");
    }
    if (projectIdString != null && projectIdString.length > 0) {
        sqlFilter.append("AND project_id IN (");
        int count = 0;
        boolean isNumber = false;
        while (count < projectIdString.length) {
            if (StringUtils.isNumber(projectIdString[count])) {
                sqlFilter.append("?");
                isNumber = true;
            }
            count++;
            if (count < projectIdString.length && isNumber) {
                sqlFilter.append(",");
            }
            isNumber = false;
        }
        sqlFilter.append(") ");
    }
    if (excludeProjectIdString != null && excludeProjectIdString.length > 0) {
        sqlFilter.append("AND project_id NOT IN (");
        int count = 0;
        boolean isNumber = false;
        while (count < excludeProjectIdString.length) {
            if (StringUtils.isNumber(excludeProjectIdString[count])) {
                sqlFilter.append("?");
                isNumber = true;
            }
            count++;
            if (count < excludeProjectIdString.length && isNumber) {
                sqlFilter.append(",");
            }
            isNumber = false;
        }
        sqlFilter.append(") ");
    }
    if (categoryIdString != null && categoryIdString.length > 0) {
        sqlFilter.append("AND p.category_id IN (");
        int count = 0;
        for (String thisCategoryId : categoryIdString) {
            ++count;
            sqlFilter.append(thisCategoryId);
            if (count < categoryIdString.length) {
                sqlFilter.append(", ");
            }
        }
        sqlFilter.append(") ");
    }
    if (badgeIdString != null && badgeIdString.length > 0) {
        sqlFilter.append("AND p.project_id IN (SELECT project_id FROM badgelink_project WHERE badge_id IN (");
        int count = 0;
        for (String thisBadgeId : badgeIdString) {
            ++count;
            sqlFilter.append(thisBadgeId);
            if (count < badgeIdString.length) {
                sqlFilter.append(", ");
            }
        }
        sqlFilter.append(")) ");
    }
    if (minimumAverageRating != -1) {
        sqlFilter.append("AND rating_avg > ? ");
    }
    if (alertRangeStart != null) {
        sqlFilter.append("AND p.entered >= ? ");
    }
    if (alertRangeEnd != null) {
        sqlFilter.append("AND p.entered < ? ");
    }
    if (approvalRangeStart != null) {
        sqlFilter.append("AND p.approvaldate >= ? ");
    }
    if (approvalRangeEnd != null) {
        sqlFilter.append("AND p.approvaldate < ? ");
    }
}
