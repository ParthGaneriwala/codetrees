public ActionForward list(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
    String typeid = request.getParameter("typeid");
    String keyword = request.getParameter("keyword");
    String orderby = request.getParameter("orderby");
    String pageNo = request.getParameter("pno");
    String parameter = "keyword=" + ((keyword == null) ? " " : keyword);
    Map map = new TreeMap();
    map.put("keyword", keyword);
    map.put("typeid", typeid);
    map.put("orderby", orderby);
    try {
        ArticleType parantType = null;
        ArticleType type = null;
        List topType = null;
        if (typeid != null && typeid.length() > 0) {
            type = articleTypeManager.getArticleType(Integer.parseInt(typeid));
            if (type.getPid() != 0)
                parantType = articleTypeManager.getArticleType(type.getPid());
            if (type.getArticleTypes().size() == 0)
                topType = articleTypeManager.getTopArticleType();
        } else {
            topType = articleTypeManager.getTopArticleType();
        }
        int iPageNo = 1;
        try {
            if (pageNo != null) {
                iPageNo = Integer.parseInt(pageNo);
            }
        } catch (Exception e) {
        }
        List list = null;
        Pager pager = new Pager();
        pager.setCntOfPage(10);
        pager.setCurPage(iPageNo);
        list = articleListManager.getArticleByPage(pager, iPageNo, "N", null, typeid, "1", keyword, orderby);
        request.setAttribute("PARA", map);
        request.setAttribute("PAGER", pager);
        request.setAttribute("ARTICLE_LIST", list);
        request.setAttribute("ARTICLE_TYPE", type);
        request.setAttribute("PARENT_ARTICLE_TYPE", parantType);
        request.setAttribute("ARTICLE_TYPE_LIST", topType);
        return mapping.findForward("list");
    } catch (Exception e) {
        e.printStackTrace();
        request.setAttribute("FAIL_MESSAGE", "ϵͳ�������Ժ����ԡ�");
        return mapping.findForward("fail");
    }
}
