public void onSubmit() {
    try {
        String date = (String) datePurchaseModel.getObject();
        String item = (String) itemModel.getObject();
        String cost = (String) costModel.getObject();
        String sourceOfFunding = (String) sourceOfFundingModel.getObject();
        String propertyNo = (String) propertyNoModel.getObject();
        String condition = (String) conditionModel.getObject();
        String uploader = ((Sessions) getSession()).getDesc();
        Date today = new Date();
        Timestamp timestamp = new Timestamp(today.getTime());
        String ts = timestamp.toString();
        System.out.println("date: " + date + " items: " + item + " cost: " + cost + " source: " + sourceOfFunding + " property: " + propertyNo + "condition: " + condition + "uploader" + uploader + "date upload" + ts);
        PE pe = new PE();
        pe.setDateOfPurchase(date);
        pe.setItem(item);
        float newCost = Float.valueOf(cost);
        pe.setCost(newCost);
        pe.setSourceOfFunding(sourceOfFunding);
        pe.setPropertyNo(propertyNo);
        pe.setCondition(condition);
        pe.setUploader(uploader);
        pe.setDate_created(ts);
        pe.setStatus("PENDING");
        sqlMap.insert("PE.insert", pe);
        Logs log = new Logs();
        log.setLog_activity("Properties and Equipments: " + item);
        log.setLog_officer(uploader);
        log.setLog_time(ts);
        sqlMap.insert("Logs.insert", log);
        PropertiesAndEquipmentList page = new PropertiesAndEquipmentList();
        setResponsePage(page);
        error("added");
    } catch (SQLException e) {
        error("Fill up necessary fields");
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
