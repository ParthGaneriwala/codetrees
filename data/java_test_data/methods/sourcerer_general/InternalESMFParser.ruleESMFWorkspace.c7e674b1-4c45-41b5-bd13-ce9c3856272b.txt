// $ANTLR end entryRuleESMFWorkspace
// $ANTLR start ruleESMFWorkspace
public final EObject ruleESMFWorkspace() throws RecognitionException {
    EObject current = null;
    EObject lv_component_0 = null;
    EObject lv_composition_1 = null;
    EObject temp = null;
    setCurrentLookahead();
    resetLookahead();
    try {
        // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:86:6: ( ( (lv_component_0= ruleESMFComponent ) | (lv_composition_1= ruleESMFComposition ) )* )
        // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:87:1: ( (lv_component_0= ruleESMFComponent ) | (lv_composition_1= ruleESMFComposition ) )*
        {
            // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:87:1: ( (lv_component_0= ruleESMFComponent ) | (lv_composition_1= ruleESMFComposition ) )*
            loop1: do {
                int alt1 = 3;
                int LA1_0 = input.LA(1);
                if ((LA1_0 == 12)) {
                    int LA1_2 = input.LA(2);
                    if ((LA1_2 == 32)) {
                        alt1 = 2;
                    } else if (((LA1_2 >= 13 && LA1_2 <= 14))) {
                        alt1 = 1;
                    }
                }
                switch(alt1) {
                    case 1:
                        // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:87:2: (lv_component_0= ruleESMFComponent )
                        {
                            // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:87:2: (lv_component_0= ruleESMFComponent )
                            // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:90:6: lv_component_0= ruleESMFComponent
                            {
                                currentNode = createCompositeNode(grammarAccess.getESMFWorkspaceAccess().getComponentESMFComponentParserRuleCall_0_0(), currentNode);
                                pushFollow(FOLLOW_ruleESMFComponent_in_ruleESMFWorkspace142);
                                lv_component_0 = ruleESMFComponent();
                                _fsp--;
                                if (current == null) {
                                    current = factory.create(grammarAccess.getESMFWorkspaceRule().getType().getClassifier());
                                    associateNodeWithAstElement(currentNode.getParent(), current);
                                }
                                try {
                                    add(current, "component", lv_component_0, "ESMFComponent", currentNode);
                                } catch (ValueConverterException vce) {
                                    handleValueConverterException(vce);
                                }
                                currentNode = currentNode.getParent();
                            }
                        }
                        break;
                    case 2:
                        // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:109:6: (lv_composition_1= ruleESMFComposition )
                        {
                            // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:109:6: (lv_composition_1= ruleESMFComposition )
                            // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:112:6: lv_composition_1= ruleESMFComposition
                            {
                                currentNode = createCompositeNode(grammarAccess.getESMFWorkspaceAccess().getCompositionESMFCompositionParserRuleCall_1_0(), currentNode);
                                pushFollow(FOLLOW_ruleESMFComposition_in_ruleESMFWorkspace186);
                                lv_composition_1 = ruleESMFComposition();
                                _fsp--;
                                if (current == null) {
                                    current = factory.create(grammarAccess.getESMFWorkspaceRule().getType().getClassifier());
                                    associateNodeWithAstElement(currentNode.getParent(), current);
                                }
                                try {
                                    add(current, "composition", lv_composition_1, "ESMFComposition", currentNode);
                                } catch (ValueConverterException vce) {
                                    handleValueConverterException(vce);
                                }
                                currentNode = currentNode.getParent();
                            }
                        }
                        break;
                    default:
                        break loop1;
                }
            } while (true);
        }
        resetLookahead();
        lastConsumedNode = currentNode;
    } catch (RecognitionException re) {
        recover(input, re);
        appendSkippedTokens();
    } finally {
    }
    return current;
}
