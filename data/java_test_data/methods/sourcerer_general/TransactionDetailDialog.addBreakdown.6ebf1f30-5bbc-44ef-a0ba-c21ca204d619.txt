private ComboText addBreakdown(Breakdown breakdown) {
    final ComboText ct = new ComboText();
    ct.breakdown = breakdown;
    ct.itemName = new Text(parent, SWT.BORDER);
    // ct.category = new Combo( parent, SWT.BORDER );
    ct.price = new Text(parent, SWT.BORDER | SWT.RIGHT);
    AutoSelection autoselection = new AutoSelection();
    ct.price.addFocusListener(autoselection);
    ct.multiply = new Label(parent, SWT.NONE);
    ct.multiply.setText("Ã—");
    ct.qty = new Text(parent, SWT.BORDER | SWT.CENTER);
    ct.qty.addFocusListener(autoselection);
    ct.equal = new Label(parent, SWT.NONE);
    ct.equal.setText("pcs. =");
    ct.amount = new Text(parent, SWT.BORDER | SWT.RIGHT);
    ct.amount.addFocusListener(new FocusListener() {

        public void focusLost(FocusEvent arg0) {
        // do nothing
        }

        public void focusGained(FocusEvent arg0) {
            if (ct.price.getText() != "" && ct.qty.getText() != "") {
                ((Text) arg0.widget).setText(Integer.valueOf(ct.price.getText()) * Integer.valueOf(ct.qty.getText()) + "");
            }
        }
    });
    ct.amount.addFocusListener(autoselection);
    ct.btnDelete = new Button(parent, SWT.PUSH);
    ct.btnDelete.setText("-");
    ct.btnDelete.addSelectionListener(new SelectionAdapter() {

        @Override
        public void widgetSelected(SelectionEvent e) {
            ComboText c = (ComboText) e.widget.getData();
            c.itemName.dispose();
            // c.category.dispose();
            c.amount.dispose();
            c.price.dispose();
            c.qty.dispose();
            c.btnDelete.dispose();
            c.breakdown.setDeleted(true);
            reLayout();
        }
    });
    ct.btnDelete.setData(ct);
    // bind amount
    IObservableValue observeWidget = SWTObservables.observeText(ct.amount, SWT.Modify);
    IObservableValue observeValue = BeansObservables.observeValue(ct.breakdown, "amount");
    cnxt.bindValue(observeWidget, observeValue, new UpdateValueStrategy(UpdateValueStrategy.POLICY_UPDATE), null);
    // name
    observeWidget = SWTObservables.observeText(ct.itemName, SWT.Modify);
    observeValue = BeansObservables.observeValue(ct.breakdown, "itemName");
    cnxt.bindValue(observeWidget, observeValue, new UpdateValueStrategy(UpdateValueStrategy.POLICY_UPDATE), null);
    // price
    observeWidget = SWTObservables.observeText(ct.price, SWT.Modify);
    observeValue = BeansObservables.observeValue(ct.breakdown, "price");
    cnxt.bindValue(observeWidget, observeValue, new UpdateValueStrategy(UpdateValueStrategy.POLICY_UPDATE), null);
    // quantity
    observeWidget = SWTObservables.observeText(ct.qty, SWT.Modify);
    observeValue = BeansObservables.observeValue(ct.breakdown, "quantity");
    cnxt.bindValue(observeWidget, observeValue, new UpdateValueStrategy(UpdateValueStrategy.POLICY_UPDATE), null);
    breakdowns.add(ct);
    return ct;
}
