public boolean egal(Probleme pb) {
    int tmp;
    Volume v;
    Position p;
    if (pb.getListeBoite().getID().egal(ID)) {
        switch(getVolume().egale(pb.getContainer().getVolume())) {
            case // (x, y, z)
            0:
                return true;
            case // (x, z, y)
            1:
                for (int i = 0; i < sauveGarde.getListeBoite().size(); i++) {
                    v = sauveGarde.getVolume(i);
                    tmp = v.getHauteur();
                    v.setHauteur(v.getLongueur());
                    v.setLongueur(tmp);
                    p = sauveGarde.getPosition(i);
                    tmp = p.getY();
                    p.setY(p.getZ());
                    p.setZ(tmp);
                }
                tmp = getVolume().getHauteur();
                getVolume().setHauteur(getVolume().getLongueur());
                getVolume().setLongueur(tmp);
                return true;
            case // (y, x, z)
            2:
                for (int i = 0; i < sauveGarde.getListeBoite().size(); i++) {
                    v = sauveGarde.getVolume(i);
                    tmp = v.getLargeur();
                    v.setLargeur(v.getHauteur());
                    v.setHauteur(tmp);
                    p = sauveGarde.getPosition(i);
                    tmp = p.getX();
                    p.setX(p.getY());
                    p.setY(tmp);
                }
                tmp = getVolume().getLargeur();
                getVolume().setLargeur(getVolume().getHauteur());
                getVolume().setHauteur(tmp);
                return true;
            case // (z, x, y)
            3:
                for (int i = 0; i < sauveGarde.getListeBoite().size(); i++) {
                    v = sauveGarde.getVolume(i);
                    tmp = v.getLargeur();
                    v.setLargeur(v.getLongueur());
                    v.setLongueur(v.getHauteur());
                    v.setHauteur(tmp);
                    p = sauveGarde.getPosition(i);
                    tmp = p.getX();
                    p.setX(p.getZ());
                    p.setZ(p.getY());
                    p.setY(tmp);
                }
                tmp = getVolume().getLargeur();
                getVolume().setLargeur(getVolume().getLongueur());
                getVolume().setLongueur(getVolume().getHauteur());
                getVolume().setHauteur(tmp);
                return true;
            case // (z, y, x)
            4:
                for (int i = 0; i < sauveGarde.getListeBoite().size(); i++) {
                    v = sauveGarde.getVolume(i);
                    tmp = v.getLargeur();
                    v.setLargeur(v.getLongueur());
                    v.setLongueur(tmp);
                    p = sauveGarde.getPosition(i);
                    tmp = p.getX();
                    p.setX(p.getZ());
                    p.setZ(tmp);
                }
                tmp = getVolume().getLargeur();
                getVolume().setLargeur(getVolume().getLongueur());
                getVolume().setLongueur(tmp);
                return true;
            case // (y, z, x)
            5:
                for (int i = 0; i < sauveGarde.getListeBoite().size(); i++) {
                    v = sauveGarde.getVolume(i);
                    tmp = v.getLargeur();
                    v.setLargeur(v.getHauteur());
                    v.setHauteur(v.getLongueur());
                    v.setLongueur(tmp);
                    p = sauveGarde.getPosition(i);
                    tmp = p.getX();
                    p.setX(p.getY());
                    p.setY(p.getZ());
                    p.setZ(tmp);
                }
                tmp = getVolume().getLargeur();
                getVolume().setLargeur(getVolume().getHauteur());
                getVolume().setHauteur(getVolume().getLongueur());
                getVolume().setLongueur(tmp);
                return true;
            case -1:
                return false;
        }
    }
    return false;
}
