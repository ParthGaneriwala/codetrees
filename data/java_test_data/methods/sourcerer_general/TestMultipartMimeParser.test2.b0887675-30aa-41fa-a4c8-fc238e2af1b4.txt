public void test2() throws Exception {
    InputStream stream = this.getClass().getResourceAsStream("./resources/multipart-mime test");
    if (null == stream) {
        throw new RuntimeException("Problem locating the multipart-mime test file!");
    }
    File cacheDir = null;
    File cacheFile = null;
    try {
        cacheDir = new File("/tmp", "test_" + System.currentTimeMillis());
        cacheDir.mkdir();
        MultipartMimeParser parser = new MultipartMimeParser();
        parser.setFileCacheDir(cacheDir);
        List<MimeEntity> entities = parser.parse(stream, "---------------------------120897898619670334351567680127");
        assertEquals(2, entities.size());
        assertEquals("form-data", entities.get(0).getContentDisposition().getType());
        assertEquals("upload_file", entities.get(0).getContentDisposition().getName());
        assertEquals("rss.png", entities.get(0).getContentDisposition().getFilename());
        cacheFile = new File(cacheDir, entities.get(0).getContentDisposition().getFilename());
        assertEquals(1551, cacheFile.length());
        assertEquals("form-data", entities.get(1).getContentDisposition().getType());
        assertEquals("action", entities.get(1).getContentDisposition().getName());
        assertNull(entities.get(1).getContentDisposition().getFilename());
        assertEquals("upload_file", entities.get(1).getContent());
    } finally {
        if (cacheFile != null)
            cacheFile.delete();
        if (cacheDir != null)
            cacheDir.delete();
    }
}
