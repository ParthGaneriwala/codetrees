public static void insertarBd(Vector<String> vectorGps, Vector<String> vectorVehiculo, Vector<String> vectorRfid) throws SQLException {
    String sqlActividad = new String();
    String sqlDetalle = new String();
    boolean flag = false;
    Connection conexion = DriverManager.getConnection("jdbc:mysql://localhost/controlvehiculos", "controlvehiculos", "123456");
    // System.out.println(formulaDistanciaDosPuntos(10.4644888888888, -66.9743933333333, 10.464775, -66.974695));
    /**
     * ******************************************************
     */
    /**
     * ***********BUSCO SI HAZ UNA RUTA ACTIVA***************
     */
    /**
     * ******************************************************
     */
    String sqlRuta = " SELECT R.ruta_id" + " from T_RUTA R" + " where R.vehiculo_id =(SELECT V.vehiculo_id" + " from T_VEHICULO V" + " where V.valor_transponder='" + vectorGps.get(0) + "'" + " and V.borrado = 0)" + " and DATE(R.fecha) = '" + vectorGps.get(4) + "'" + " and R.activo = 1";
    Statement st = conexion.createStatement();
    ResultSet rs = st.executeQuery(sqlRuta);
    // Integer ruta = -1;
    while (rs.next()) {
        flag = true;
    // ruta =rs.getInt("ruta_id");
    }
    rs.close();
    /**
     * ***********SE BUSCA LA QUE ESTE MAS CERCA Y SE ACTIVA***************
     */
    if (flag == false) {
        String sqlAlmacen = " SELECT A.LATITUD, A.LONGITUD, A.ALMACEN_ID, AUX.B" + " FROM T_ALMACEN A,  (SELECT R.ALMACEN_SALIDA_ID A, R.RUTA_ID B" + " FROM T_RUTA R " + " WHERE R.vehiculo_id =(SELECT V.vehiculo_id" + " from T_VEHICULO V" + " where V.valor_transponder='" + vectorGps.get(0) + "'" + " and V.borrado = 0)" + " and DATE(R.fecha) = '" + vectorGps.get(4) + "'" + " and R.activo = 0)AUX" + " WHERE A.ALMACEN_ID = AUX.A";
        Statement st1 = conexion.createStatement();
        ResultSet rs1 = st1.executeQuery(sqlAlmacen);
        Double latitud = new Double(0);
        Double longitud = new Double(0);
        Integer id = -1;
        Double distancia = Double.MAX_VALUE;
        while (rs1.next()) {
            latitud = rs1.getDouble("LATITUD");
            longitud = rs1.getDouble("LONGITUD");
            Integer idAux = rs1.getInt("B");
            Double aux = formulaDistanciaDosPuntos(latitud, longitud, new Double(vectorGps.get(1)), new Double(vectorGps.get(2)));
            if (aux < distancia) {
                distancia = aux;
                id = idAux;
            }
        }
        if (id != -1) {
            String sqlReactivar = " UPDATE T_RUTA " + " SET ACTIVO = 1 " + " WHERE RUTA_ID = " + id + "";
            try {
                Statement s = conexion.createStatement();
                s.executeUpdate(sqlReactivar);
            } catch (Exception e) {
                System.out.println("ERROR ACTIVANDO LA RUTA");
                System.out.println(e);
            }
        }
        rs1.close();
    }
    /**
     * ******************************************************
     */
    if (vectorVehiculo == null && vectorRfid == null) {
        // Solo inserto GPS
        sqlActividad = "insert into T_ACTIVIDAD (RUTA_ID, FECHA, LATITUD, LONGITUD,ALTITUD, ABSOLUTE_THROTTLE_POSITION, ENGINE_RPM, VEHICLE_SPEED, CALCULATED_LOAD_VALUE, TIMING_ADVANCE, INTAKE_MANIFOLD_PRESSURE, FUEL_SYSTEM_1_STATUS, FUEL_SYSTEM_2_STATUS, SHORT_TERM_FUEL_TRIM_1, LONG_TERM_FUEL_TRIM_1, SHORT_TERM_FUEL_TRIM_2, LONG_TERM_FUEL_TRIM_2, INTAKE_AIR_TEMPERATURE, COOLANT_TEMPERATURE, O2_SENSOR_1_BANK_1, O2_SENSOR_1_BANK_2, COMMANDED_EGR, EGR_ERROR, COMMANDED_EVAPORATIVE_PURGE, FUEL_LEVEL_INPUT, WARM_UPS_SINCE_ECU_RESET, DISTANCE_SINCE_ECU_RESET, BAROMETRIC_PRESSURE, ECU_VOLTAGE, ABSOLUTE_ENGINE_LOAD, COMMANDED_EQUIVALENCE_RATIO, AMBIENT_AIR_TEMPERATURE, RELATIVE_THROTTLE_POSITION, ABSOLUTE_THROTTLE_POSITION_B, ABSOLUTE_THROTTLE_POSITION_D, ABSOLUTE_THROTTLE_POSITION_E, COMM_THROTTLE_ACTUATOR_CNTRL) " + "values ((SELECT R.ruta_id" + " from T_RUTA R" + " where R.vehiculo_id =(SELECT V.vehiculo_id" + " from T_VEHICULO V" + " where V.valor_transponder='" + vectorGps.get(0) + "'" + " and V.borrado = 0)" + " and DATE(R.fecha) = '" + vectorGps.get(4) + "'" + " and R.activo = 1) , '" + vectorGps.get(4) + " " + vectorGps.get(3) + " ', " + vectorGps.get(1) + ", " + vectorGps.get(2) + " , " + vectorGps.get(5) + " , 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO')";
        System.out.println(sqlActividad);
        try {
            Statement s = conexion.createStatement();
            s.executeUpdate(sqlActividad);
        } catch (Exception e) {
            System.out.println("ERROR AL INSERTAR EN BASE DATOS GPS. 1");
            System.out.println(e);
        }
    /**
     * ******************************************************
     */
    /**
     * **********INSERTA PRIMERA Y SEGUNDA TRAMA*************
     */
    /**
     * ******************************************************
     */
    } else if (vectorVehiculo != null && vectorRfid == null) {
        // Solo inserto GPS y Vehiculo
        sqlActividad = "insert into T_ACTIVIDAD (RUTA_ID, FECHA, LATITUD, LONGITUD,ALTITUD, ABSOLUTE_THROTTLE_POSITION, ENGINE_RPM, VEHICLE_SPEED, CALCULATED_LOAD_VALUE, TIMING_ADVANCE, INTAKE_MANIFOLD_PRESSURE, FUEL_SYSTEM_1_STATUS, FUEL_SYSTEM_2_STATUS, SHORT_TERM_FUEL_TRIM_1, LONG_TERM_FUEL_TRIM_1, SHORT_TERM_FUEL_TRIM_2, LONG_TERM_FUEL_TRIM_2, INTAKE_AIR_TEMPERATURE, COOLANT_TEMPERATURE, O2_SENSOR_1_BANK_1, O2_SENSOR_1_BANK_2, COMMANDED_EGR, EGR_ERROR, COMMANDED_EVAPORATIVE_PURGE, FUEL_LEVEL_INPUT, WARM_UPS_SINCE_ECU_RESET, DISTANCE_SINCE_ECU_RESET, BAROMETRIC_PRESSURE, ECU_VOLTAGE, ABSOLUTE_ENGINE_LOAD, COMMANDED_EQUIVALENCE_RATIO, AMBIENT_AIR_TEMPERATURE, RELATIVE_THROTTLE_POSITION, ABSOLUTE_THROTTLE_POSITION_B, ABSOLUTE_THROTTLE_POSITION_D, ABSOLUTE_THROTTLE_POSITION_E, COMM_THROTTLE_ACTUATOR_CNTRL) " + "values ((SELECT R.ruta_id" + " from T_RUTA R" + " where R.vehiculo_id =(SELECT V.vehiculo_id" + " from T_VEHICULO V" + " where V.valor_transponder='" + vectorGps.get(0) + "'" + " and V.borrado = 0)" + " and DATE(R.fecha) = '" + vectorGps.get(4) + "'" + " and R.activo = 1) , '" + vectorGps.get(4) + " " + vectorGps.get(3) + " ', " + vectorGps.get(1) + ", " + vectorGps.get(2) + " , " + vectorGps.get(5) + " , '" + vectorVehiculo.get(0) + "', '" + vectorVehiculo.get(1) + "', '" + vectorVehiculo.get(2) + "', '" + 0 + "', '" + vectorVehiculo.get(3) + "', '" + vectorVehiculo.get(4) + "', '" + 0 + "', '" + 0 + "', '" + vectorVehiculo.get(5) + "', '" + vectorVehiculo.get(6) + "', '" + vectorVehiculo.get(7) + "', '" + vectorVehiculo.get(8) + "', '" + vectorVehiculo.get(9) + "', '" + vectorVehiculo.get(10) + "', '" + vectorVehiculo.get(11) + "', '" + vectorVehiculo.get(12) + "', '" + vectorVehiculo.get(13) + "', '" + vectorVehiculo.get(14) + "', '" + vectorVehiculo.get(15) + "', '" + vectorVehiculo.get(16) + "', '" + vectorVehiculo.get(17) + "', '" + vectorVehiculo.get(18) + "', '" + vectorVehiculo.get(19) + "', '" + vectorVehiculo.get(20) + "', '" + vectorVehiculo.get(21) + "', '" + vectorVehiculo.get(22) + "', '" + vectorVehiculo.get(23) + "', '" + vectorVehiculo.get(24) + "', '" + vectorVehiculo.get(25) + "', '" + vectorVehiculo.get(26) + "', '" + vectorVehiculo.get(27) + "', '" + vectorVehiculo.get(28) + "')";
        System.out.println(sqlActividad);
        try {
            Statement s = conexion.createStatement();
            s.executeUpdate(sqlActividad);
        } catch (Exception e) {
            System.out.println("ERROR AL INSERTAR EN BASE DATOS GPS Y VEHICULO. 12");
            System.out.println(e);
        }
    /**
     * ******************************************************
     */
    /**
     * **********INSERTA PRIMERA Y TERCERA TRAMA*************
     */
    /**
     * ******************************************************
     */
    } else if (vectorVehiculo == null && vectorRfid != null) {
        // Solo inserto GPS y Rfid
        boolean status = true;
        sqlActividad = "insert into T_ACTIVIDAD (RUTA_ID, FECHA, LATITUD, LONGITUD,ALTITUD, ABSOLUTE_THROTTLE_POSITION, ENGINE_RPM, VEHICLE_SPEED, CALCULATED_LOAD_VALUE, TIMING_ADVANCE, INTAKE_MANIFOLD_PRESSURE, FUEL_SYSTEM_1_STATUS, FUEL_SYSTEM_2_STATUS, SHORT_TERM_FUEL_TRIM_1, LONG_TERM_FUEL_TRIM_1, SHORT_TERM_FUEL_TRIM_2, LONG_TERM_FUEL_TRIM_2, INTAKE_AIR_TEMPERATURE, COOLANT_TEMPERATURE, O2_SENSOR_1_BANK_1, O2_SENSOR_1_BANK_2, COMMANDED_EGR, EGR_ERROR, COMMANDED_EVAPORATIVE_PURGE, FUEL_LEVEL_INPUT, WARM_UPS_SINCE_ECU_RESET, DISTANCE_SINCE_ECU_RESET, BAROMETRIC_PRESSURE, ECU_VOLTAGE, ABSOLUTE_ENGINE_LOAD, COMMANDED_EQUIVALENCE_RATIO, AMBIENT_AIR_TEMPERATURE, RELATIVE_THROTTLE_POSITION, ABSOLUTE_THROTTLE_POSITION_B, ABSOLUTE_THROTTLE_POSITION_D, ABSOLUTE_THROTTLE_POSITION_E, COMM_THROTTLE_ACTUATOR_CNTRL) " + "values ((SELECT R.ruta_id" + " from T_RUTA R" + " where R.vehiculo_id =(SELECT V.vehiculo_id" + " from T_VEHICULO V" + " where V.valor_transponder='" + vectorGps.get(0) + "'" + " and V.borrado = 0)" + " and DATE(R.fecha) = '" + vectorGps.get(4) + "'" + " and R.activo = 1) , '" + vectorGps.get(4) + " " + vectorGps.get(3) + " ', " + vectorGps.get(1) + ", " + vectorGps.get(2) + " , " + vectorGps.get(5) + " , 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO', 'NOLLEGO')";
        System.out.println(sqlActividad);
        try {
            Statement s = conexion.createStatement();
            s.executeUpdate(sqlActividad);
        } catch (Exception e) {
            status = false;
            System.out.println("ERROR AL INSERTAR BASE DATOS GPS. 13");
            System.out.println(e);
        }
        if (status == true) {
            for (int i = 0; i < vectorRfid.size(); i++) {
                sqlDetalle = "insert into T_ACTIVIDAD_DETALLE(ACTIVIDAD_ID,ETIQUETA_ID) values((select MAX(actividad_id) from T_ACTIVIDAD), (Select etiqueta_id from T_ETIQUETA where codigo_rfid = '" + vectorRfid.elementAt(i) + "'))";
                System.out.println(sqlDetalle);
                try {
                    Statement a = conexion.createStatement();
                    a.executeUpdate(sqlDetalle);
                } catch (Exception e) {
                    System.out.println("ERROR AL INSERTAR BASE DATOS RFID. 13");
                    System.out.println(e);
                }
            }
        }
    /**
     * ******************************************************
     */
    /**
     * **************INSERTA LAS TRES TRAMAS*****************
     */
    /**
     * ******************************************************
     */
    } else if (vectorVehiculo != null && vectorRfid != null) {
        boolean status = true;
        // Inserto GPS, vehiculo y Rfid
        sqlActividad = "insert into T_ACTIVIDAD (RUTA_ID, FECHA, LATITUD, LONGITUD,ALTITUD, ABSOLUTE_THROTTLE_POSITION, ENGINE_RPM, VEHICLE_SPEED, CALCULATED_LOAD_VALUE, TIMING_ADVANCE, INTAKE_MANIFOLD_PRESSURE, FUEL_SYSTEM_1_STATUS, FUEL_SYSTEM_2_STATUS, SHORT_TERM_FUEL_TRIM_1, LONG_TERM_FUEL_TRIM_1, SHORT_TERM_FUEL_TRIM_2, LONG_TERM_FUEL_TRIM_2, INTAKE_AIR_TEMPERATURE, COOLANT_TEMPERATURE, O2_SENSOR_1_BANK_1, O2_SENSOR_1_BANK_2, COMMANDED_EGR, EGR_ERROR, COMMANDED_EVAPORATIVE_PURGE, FUEL_LEVEL_INPUT, WARM_UPS_SINCE_ECU_RESET, DISTANCE_SINCE_ECU_RESET, BAROMETRIC_PRESSURE, ECU_VOLTAGE, ABSOLUTE_ENGINE_LOAD, COMMANDED_EQUIVALENCE_RATIO, AMBIENT_AIR_TEMPERATURE, RELATIVE_THROTTLE_POSITION, ABSOLUTE_THROTTLE_POSITION_B, ABSOLUTE_THROTTLE_POSITION_D, ABSOLUTE_THROTTLE_POSITION_E, COMM_THROTTLE_ACTUATOR_CNTRL) " + "values ((SELECT R.ruta_id" + " from T_RUTA R" + " where R.vehiculo_id =(SELECT V.vehiculo_id" + " from T_VEHICULO V" + " where V.valor_transponder='" + vectorGps.get(0) + "'" + " and V.borrado = 0)" + " and DATE(R.fecha) = '" + vectorGps.get(4) + "'" + " and R.activo = 1) , '" + vectorGps.get(4) + " " + vectorGps.get(3) + " ', " + vectorGps.get(1) + ", " + vectorGps.get(2) + " , " + vectorGps.get(5) + " , '" + vectorVehiculo.get(0) + "', '" + vectorVehiculo.get(1) + "', '" + vectorVehiculo.get(2) + "', '" + 0 + "', '" + vectorVehiculo.get(3) + "', '" + vectorVehiculo.get(4) + "', '" + 0 + "', '" + 0 + "', '" + vectorVehiculo.get(5) + "', '" + vectorVehiculo.get(6) + "', '" + vectorVehiculo.get(7) + "', '" + vectorVehiculo.get(8) + "', '" + vectorVehiculo.get(9) + "', '" + vectorVehiculo.get(10) + "', '" + vectorVehiculo.get(11) + "', '" + vectorVehiculo.get(12) + "', '" + vectorVehiculo.get(13) + "', '" + vectorVehiculo.get(14) + "', '" + vectorVehiculo.get(15) + "', '" + vectorVehiculo.get(16) + "', '" + vectorVehiculo.get(17) + "', '" + vectorVehiculo.get(18) + "', '" + vectorVehiculo.get(19) + "', '" + vectorVehiculo.get(20) + "', '" + vectorVehiculo.get(21) + "', '" + vectorVehiculo.get(22) + "', '" + vectorVehiculo.get(23) + "', '" + vectorVehiculo.get(24) + "', '" + vectorVehiculo.get(25) + "', '" + vectorVehiculo.get(26) + "', '" + vectorVehiculo.get(27) + "', '" + vectorVehiculo.get(28) + "')";
        System.out.println(sqlActividad);
        try {
            Statement s = conexion.createStatement();
            s.executeUpdate(sqlActividad);
        } catch (Exception e) {
            status = false;
            System.out.println("ERROR INSERTAR BASE DATOS GPS Y VEHICULO. 123");
            System.out.println(e);
        }
        if (status == true) {
            for (int i = 0; i < vectorRfid.size(); i++) {
                sqlDetalle = "insert into T_ACTIVIDAD_DETALLE(ACTIVIDAD_ID,ETIQUETA_ID) values( (select MAX(actividad_id) from T_ACTIVIDAD), (Select etiqueta_id from T_ETIQUETA where codigo_rfid = '" + vectorRfid.elementAt(i) + "'))";
                System.out.println(sqlDetalle);
                try {
                    Statement b = conexion.createStatement();
                    b.executeUpdate(sqlDetalle);
                } catch (Exception e) {
                    System.out.println("ERROR INSERTAR BASE DATOS RFID. 123");
                    System.out.println(e);
                }
            }
        }
    }
    /**
     * **************************************************************
     */
    /**
     * **VEO SI ESTA CERCA A MENOS DE 20M DEL ALMACEN DE LLEGADA*****
     */
    /**
     * ********************SE INACTIVA ESA RUTA**********************
     */
    /**
     * **************************************************************
     */
    String sqlDesactivar = " SELECT A.LATITUD, A.LONGITUD, A.ALMACEN_ID, AUX.B" + " FROM T_ALMACEN A,  (SELECT R.ALMACEN_LLEGADA_ID A, R.RUTA_ID B" + " FROM T_RUTA R " + " WHERE R.vehiculo_id =(SELECT V.vehiculo_id" + " from T_VEHICULO V" + " where V.valor_transponder='" + vectorGps.get(0) + "'" + " and V.borrado = 0)" + " and DATE(R.fecha) = '" + vectorGps.get(4) + "'" + " and R.activo = 1)AUX" + " WHERE A.ALMACEN_ID = AUX.A";
    Statement st1 = conexion.createStatement();
    ResultSet rs1 = st1.executeQuery(sqlDesactivar);
    Double latitud = new Double(0);
    Double longitud = new Double(0);
    Integer id = -1;
    while (rs1.next()) {
        latitud = rs1.getDouble("LATITUD");
        longitud = rs1.getDouble("LONGITUD");
        id = rs1.getInt("B");
        Double aux = formulaDistanciaDosPuntos(latitud, longitud, new Double(vectorGps.get(1)), new Double(vectorGps.get(2)));
        if (aux < 20) {
            String sqlReactivar = " UPDATE T_RUTA " + " SET ACTIVO = 0 " + " WHERE RUTA_ID = " + id + "";
            try {
                Statement s = conexion.createStatement();
                s.executeUpdate(sqlReactivar);
            } catch (Exception e) {
                System.out.println("ERROR DESACTIVANDO LA RUTA");
                System.out.println(e);
            }
        }
    }
/**
 * **************************************************************
 */
/**
 * ************************HASTA AQUI****************************
 */
/**
 * **************************************************************
 */
}
