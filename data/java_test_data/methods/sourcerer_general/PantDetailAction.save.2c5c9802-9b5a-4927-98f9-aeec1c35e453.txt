public String save() {
    System.out.println("PantDetailAction -> save() ... begin");
    if (storageCut.getId() != -1 && !optTradeMark.equals("-1")) {
        storageCut = storageCutManager.get(storageCut.getId());
        pantDetail.setPriceXclothes(0.0D);
        if (pantDetail.getQuantity() <= storageCut.getStock()) {
            if (pantDetail.getId() == null) {
                List<SeamStorage> seamStorageList = seamStorageManager.findByPantDesignAndTradeMark(storageCut.getPantDesign().getId(), new Long(optTradeMark));
                TradeMark tradeMark = tradeMarkManager.get(new Long(optTradeMark));
                SeamStorage seamStorage;
                ProcessDressmaker processDressmaker = processDressmakerManager.get((Long) getSession().getAttribute("pDressMId"));
                pantDetail.setStorageCut(storageCut);
                pantDetail.setProcessDressmaker(processDressmaker);
                pantDetail.setPriceXclothes(0.0D);
                pantDetail.setTotalAmountClothes(0.0D);
                pantDetail.setQuantityFail(0);
                pantDetail.setPriceXclotheFail(0.0D);
                pantDetail.setTotalAmountFailClothes(0.0D);
                pantDetail.setQuantityRealClothesCurrent(pantDetail.getQuantity() - pantDetail.getQuantityFail());
                pantDetail.setQuantityRealClothes(pantDetail.getQuantity() - pantDetail.getQuantityFail());
                pantDetail.setTotalAmount(pantDetail.getPriceXclothes() * pantDetail.getQuantity());
                pantDetail.setCurrentAmount(pantDetail.getPriceXclothes() * pantDetail.getQuantity());
                pantDetail.setDeleted(true);
                storageCut.setStock(storageCut.getStock() - pantDetail.getQuantity());
                pantDetail = pantDetailManager.save(pantDetail);
                PantDetailTradeMark pantDetailTradeMark = new PantDetailTradeMark();
                pantDetailTradeMark.setQuantity(pantDetail.getQuantity());
                pantDetailTradeMark.setPantDetail(pantDetail);
                pantDetailTradeMark.setTradeMark(tradeMark);
                pantDetailTradeMark = pantDetailTradeMarkManager.save(pantDetailTradeMark);
                pantDetail.setDistribution("[" + pantDetailTradeMark.getTradeMark().getName() + "->" + pantDetailTradeMark.getQuantity() + "]");
                pantDetail = pantDetailManager.save(pantDetail);
                cutDetailList = cutDetailManager.findByPantDesignAndLastDateAndNoCero(storageCut.getPantDesign().getId());
                Integer quantity = pantDetail.getQuantity();
                for (Iterator<CutDetail> it = cutDetailList.iterator(); it.hasNext(); ) {
                    CutDetail cd = it.next();
                    PantDetailCutDetail pantDetailCutDetail = new PantDetailCutDetail();
                    if (quantity >= cd.getQuantityRealClothesCurrent()) {
                        pantDetailCutDetail.setQuantity(cd.getQuantityRealClothesCurrent());
                        pantDetailCutDetail.setCutDetail(cd);
                        pantDetailCutDetail.setPantDetail(pantDetail);
                        quantity = quantity - cd.getQuantityRealClothesCurrent();
                        cd.setQuantityRealClothesCurrent(0);
                        pantDetailCutDetailManager.save(pantDetailCutDetail);
                        cutDetailManager.save(cd);
                    } else {
                        pantDetailCutDetail.setQuantity(cd.getQuantityRealClothesCurrent());
                        pantDetailCutDetail.setCutDetail(cd);
                        pantDetailCutDetail.setPantDetail(pantDetail);
                        cd.setQuantityRealClothesCurrent(cd.getQuantityRealClothesCurrent() - quantity);
                        quantity = 0;
                        pantDetailCutDetailManager.save(pantDetailCutDetail);
                        cutDetailManager.save(cd);
                        break;
                    }
                }
                List<SeamStorage> sStList = seamStorageManager.findByPantDesignAndTradeMark(pantDetail.getStorageCut().getPantDesign().getId(), tradeMark.getId());
                SeamStorage seamStAux;
                Integer stock = 0;
                if (!sStList.isEmpty()) {
                    seamStAux = sStList.get(0);
                    stock = seamStAux.getStock();
                    seamStAux.setStock(stock + pantDetail.getQuantity());
                } else {
                    seamStAux = new SeamStorage();
                    seamStAux.setPantDesign(pantDetail.getStorageCut().getPantDesign());
                    seamStAux.setStock(pantDetail.getQuantity());
                    seamStAux.setTradeMark(tradeMark);
                }
                seamStorageManager.save(seamStAux);
                saveMessage(getText("pantDetail.savePantDetail"));
                System.out.println("PantDetailAction -> save() ... end");
                return SUCCESS;
            }
        } else {
            tradeMarkList = tradeMarkManager.getAll();
            errorMessage(getText("pantDetail.errorDatasPantDetail"));
            System.out.println("PantDetailAction -> save() ... end");
            return ERROR;
        }
    }
    System.out.println("PantDetailAction -> save() ... end");
    saveMessage(getText("pantDetail.error-1"));
    return ERROR;
}
