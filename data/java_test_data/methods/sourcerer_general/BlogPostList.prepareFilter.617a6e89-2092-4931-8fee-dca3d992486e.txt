protected int prepareFilter(PreparedStatement pst) throws SQLException {
    int i = 0;
    if (projectId > 0) {
        pst.setInt(++i, projectId);
    }
    if (instanceId > 0) {
        pst.setInt(++i, instanceId);
    }
    if (currentNews == Constants.TRUE) {
        pst.setInt(++i, BlogPost.PUBLISHED);
    }
    if (archivedNews == Constants.TRUE) {
        pst.setInt(++i, BlogPost.PUBLISHED);
    }
    if (unreleasedNews == Constants.TRUE) {
        pst.setInt(++i, BlogPost.PUBLISHED);
    }
    if (incompleteNews == Constants.TRUE) {
        pst.setInt(++i, BlogPost.UNAPPROVED);
    }
    if (publicProjectPosts == Constants.TRUE) {
        pst.setBoolean(++i, true);
    }
    if (forParticipant == Constants.TRUE) {
        pst.setBoolean(++i, true);
        pst.setBoolean(++i, true);
    }
    if (alertRangeStart != null) {
        pst.setTimestamp(++i, alertRangeStart);
    }
    if (alertRangeEnd != null) {
        pst.setTimestamp(++i, alertRangeEnd);
    }
    if (forUser > -1) {
        pst.setInt(++i, forUser);
        pst.setBoolean(++i, true);
    }
    if (classificationId > -1) {
        pst.setInt(++i, classificationId);
    }
    if (overviewAll) {
        pst.setInt(++i, BlogPost.PUBLISHED);
        pst.setInt(++i, BlogPost.PUBLISHED);
        pst.setInt(++i, BlogPost.UNAPPROVED);
    }
    if (categoryId > -1) {
        pst.setInt(++i, categoryId);
    }
    if (status > -1) {
        pst.setInt(++i, status);
    }
    if (publishedYearMonth != null) {
        pst.setTimestamp(++i, startOfCurrentMonth);
        pst.setTimestamp(++i, startOfNextMonth);
    }
    if (enteredBy > 0) {
        pst.setInt(++i, enteredBy);
    }
    if (projectCategoryId != -1) {
        pst.setInt(++i, projectCategoryId);
    }
    if (minimumRatingCount != -1) {
        pst.setInt(++i, minimumRatingCount);
    }
    if (minimumRatingAvg != -1) {
        pst.setDouble(++i, minimumRatingAvg);
    }
    if (filterInappropriate != Constants.UNDEFINED) {
        pst.setInt(++i, 0);
    }
    return i;
}
