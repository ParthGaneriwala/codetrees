public void Open(String[] para) throws DriverException {
    if (para.length == 6) {
        int p2, p3, p4, p5;
        if (para[2].compareToIgnoreCase("5") == 0)
            p2 = ReaderFactory.DATABITS_5;
        else if (para[2].compareToIgnoreCase("6") == 0)
            p2 = ReaderFactory.DATABITS_6;
        else if (para[2].compareToIgnoreCase("7") == 0)
            p2 = ReaderFactory.DATABITS_7;
        else
            p2 = ReaderFactory.DATABITS_8;
        if (para[3].compareToIgnoreCase("1.5") == 0)
            p3 = ReaderFactory.STOPBITS_1_5;
        else if (para[3].compareToIgnoreCase("2") == 0)
            p3 = ReaderFactory.STOPBITS_2;
        else
            p3 = ReaderFactory.STOPBITS_1;
        if (para[4].compareToIgnoreCase("odd") == 0)
            p4 = ReaderFactory.PARITY_ODD;
        else if (para[4].compareToIgnoreCase("even") == 0)
            p4 = ReaderFactory.PARITY_EVEN;
        else
            p4 = ReaderFactory.PARITY_NONE;
        if (StaticFactory.isDigital(para[5]))
            p5 = Integer.parseInt(para[5]);
        else
            p5 = 100;
        initPort(para[0], Integer.parseInt(para[1]), p2, p3, p4, p5);
    } else {
        initPort(para[0], ReaderFactory.BAUDRATE_9600, ReaderFactory.DATABITS_8, ReaderFactory.STOPBITS_1, ReaderFactory.PARITY_NONE, 100);
    }
    try {
        // serialPort.addEventListener(this);
        // serialPort.notifyOnDataAvailable(true);
        open = false;
        for (int i = 0; i < 10; i++) {
            if (shakehands()) {
                open = true;
                break;
            } else {
                Wait(200);
            }
        }
        if (!open) {
            Close();
            throw new DriverException("No response from correct device");
        }
    }// catch (TooManyListenersException ex) {
     catch (Exception ex) {
        try {
            outputStream.close();
            inputStream.close();
            serialPort.close();
        } catch (IOException e) {
        }
        throw new DriverException(ex);
    }
}
