public ClsiServiceCompileResponse execute() {
    ClsiServiceCompileResponse resp = new ClsiServiceCompileResponse();
    resp.setId(request.getId());
    resp.setInstance(request.getInstance());
    try {
        System.out.println("Creating resources...");
        File primaryResource = createResources();
        System.out.println("Primary resource is: " + primaryResource.getName());
        String format = request.getOptions().getOutputFormat();
        System.out.println("Starting compiler process (" + format + ")...");
        CompilerOutput output = null;
        if (format.equalsIgnoreCase("png")) {
            output = latexToPng(primaryResource);
            for (File png : output.getOutput()) {
                File thumb = new File(png.getPath() + "_tn");
                if (thumb.exists()) {
                    outputHandler.onFileOutput(thumb, "image/jpeg");
                }
            }
        } else if (format.equalsIgnoreCase("pdf")) {
            output = latexToPdf(primaryResource);
        } else if (format.equalsIgnoreCase("ps")) {
            output = latexToPs(primaryResource);
        } else if (format.equalsIgnoreCase("dvi")) {
            output = latexToDvi(primaryResource);
        }
        if (output != null) {
            for (File file : output.getOutput()) {
                resp.getFiles().add(new ClsiCompileOutputFile(output.getFileType(), output.getMimeType(), outputHandler.onFileOutput(file, output.getMimeType())));
            }
            for (Exception error : output.getErrors()) {
                resp.getErrors().add(new ClsiCompileOutputError("InternalError", error.getMessage()));
            }
            resp.getLogs().add(new ClsiCompileOutputLog("log", "text/html", outputHandler.onFileOutput(output.getLog(), "text/html")));
        }
    } catch (ClsiServiceInternalErrorException e) {
        resp.getErrors().add(new ClsiCompileOutputError("InternalError", e.getMessage()));
        e.printStackTrace();
    } catch (Exception e) {
        resp.getErrors().add(new ClsiCompileOutputError("InternalError", e.getMessage()));
        e.printStackTrace();
    }
    resp.setStatus("Success");
    outputHandler.onFileOutput("clsi_oncompile(" + resp.toJsonString() + ");", "response.js", "application/javascript");
    return resp;
}
