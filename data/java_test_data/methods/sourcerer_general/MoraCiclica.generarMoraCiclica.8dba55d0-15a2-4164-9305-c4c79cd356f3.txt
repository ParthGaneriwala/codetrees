private List<Map<Integer, ReporteMoraCiclica>> generarMoraCiclica(List<Ciclo__c> ciclos) throws Exception {
    List<Map<Integer, ReporteMoraCiclica>> morasCiclicas = new ArrayList<Map<Integer, ReporteMoraCiclica>>();
    Collections.sort(ciclos, new CicloComparator());
    for (Iterator<Ciclo__c> iterCiclos = ciclos.iterator(); iterCiclos.hasNext(); ) {
        Ciclo__c ciclo = iterCiclos.next();
        logger.info("       CICLO: " + ciclo.getName());
        List<Cobro__c> cobros = this.obtenerCobrosCiclo(ciclo.getId());
        Map<Integer, ReporteMoraCiclica> morasMap = new TreeMap<Integer, ReporteMoraCiclica>();
        for (Iterator<Cobro__c> iterCobros = cobros.iterator(); iterCobros.hasNext(); ) {
            Cobro__c cobro = iterCobros.next();
            int name = (int) cobro.getTC_Nivel_Mora_Consolidado__c();
            ReporteMoraCiclica mora = new ReporteMoraCiclica();
            if (morasMap.containsKey(name)) {
                mora = morasMap.get(name);
            }
            mora.setCicloName(ciclo.getName());
            mora.setCiclo(Integer.valueOf(ciclo.getTC_Ciclo__c().substring(ciclo.getTC_Ciclo__c().length() - 2)));
            mora.setMora(String.valueOf((int) cobro.getTC_Nivel_Mora_Consolidado__c()));
            mora.setCuentasAsignadas(mora.getCuentasAsignadas() + 1);
            if (cobro.getTC_Nivel_Mora_USD__c() > 0) {
                mora.setMontoInicioUSD(mora.getMontoInicioUSD() + cobro.getTC_Pago_Contado_USD__c());
                mora.setMontoContagioUSD(mora.getMontoContagioUSD() + cobro.getTC_Pago_Minimo_USD__c());
            }
            if (cobro.getTC_Nivel_Mora_Local__c() > 0) {
                mora.setMontoInicioHNL(mora.getMontoInicioHNL() + cobro.getTC_Pago_Contado_Local__c());
                mora.setMontoContagioHNL(mora.getMontoContagioHNL() + cobro.getTC_Pago_Minimo_Local__c());
            }
            if (cobro.getEstado_Cobro__c().equalsIgnoreCase(Constantes.COBRO_REHABILITADO)) {
                mora.setCuentasRehabilitadas(mora.getCuentasRehabilitadas() + 1);
                if (cobro.getTC_Nivel_Mora_USD__c() > 0) {
                    mora.setMontoRehabilitadoUSD(mora.getMontoRehabilitadoUSD() + cobro.getTC_Pago_Contado_USD__c());
                    mora.setMontoContagioRehabilitadoUSD(mora.getMontoContagioRehabilitadoUSD() + cobro.getTC_Pago_Minimo_USD__c());
                }
                if (cobro.getTC_Nivel_Mora_Local__c() > 0) {
                    mora.setMontoRehabilitadoHNL(mora.getMontoRehabilitadoHNL() + cobro.getTC_Pago_Minimo_Local__c());
                    mora.setMontoContagioRehabilitadoHNL(mora.getMontoContagioRehabilitadoHNL() + cobro.getTC_Pago_Minimo_Local__c());
                }
            } else {
                mora.setCuentasMora(mora.getCuentasMora() + 1);
                if (cobro.getTC_Nivel_Mora_USD__c() > 0) {
                    mora.setMontoMoraUSD(mora.getMontoMoraUSD() + cobro.getTC_Pago_Contado_USD__c());
                    mora.setMontoContagioMoraUSD(mora.getMontoContagioMoraUSD() + cobro.getTC_Pago_Minimo_USD__c());
                }
                if (cobro.getTC_Nivel_Mora_Local__c() > 0) {
                    mora.setMontoMoraHNL(mora.getMontoMoraHNL() + cobro.getTC_Pago_Minimo_Local__c());
                    mora.setMontoContagioMoraHNL(mora.getMontoContagioMoraHNL() + cobro.getTC_Pago_Minimo_Local__c());
                }
            }
            morasMap.put(name, mora);
        }
        if (morasMap.size() > 0) {
            morasCiclicas.add(morasMap);
        }
    }
    Map<Integer, ReporteMoraCiclica> morasConsolidadoMap = new TreeMap<Integer, ReporteMoraCiclica>();
    // Recorre los ciclos
    for (Iterator<Map<Integer, ReporteMoraCiclica>> iter = morasCiclicas.iterator(); iter.hasNext(); ) {
        Map<Integer, ReporteMoraCiclica> cicloMap = iter.next();
        // Recorre las moras
        for (Iterator<Integer> iterMoras = cicloMap.keySet().iterator(); iterMoras.hasNext(); ) {
            int nameMora = iterMoras.next();
            ReporteMoraCiclica moraCiclica = cicloMap.get(nameMora);
            ReporteMoraCiclica moraConsolidada = new ReporteMoraCiclica();
            if (morasConsolidadoMap.containsKey(nameMora)) {
                moraConsolidada = morasConsolidadoMap.get(nameMora);
            }
            moraConsolidada.setCicloName("CONSOLIDADO");
            moraConsolidada.setCiclo(-1);
            moraConsolidada.setMora(String.valueOf(nameMora));
            moraConsolidada.setCuentasAsignadas(moraConsolidada.getCuentasAsignadas() + moraCiclica.getCuentasAsignadas());
            moraConsolidada.setMontoInicioUSD(moraConsolidada.getMontoInicioUSD() + moraCiclica.getMontoInicioUSD());
            moraConsolidada.setMontoContagioUSD(moraConsolidada.getMontoContagioUSD() + moraCiclica.getMontoContagioUSD());
            moraConsolidada.setMontoInicioHNL(moraConsolidada.getMontoInicioHNL() + moraCiclica.getMontoInicioHNL());
            moraConsolidada.setMontoContagioHNL(moraConsolidada.getMontoContagioHNL() + moraCiclica.getMontoContagioHNL());
            moraConsolidada.setCuentasRehabilitadas(moraConsolidada.getCuentasRehabilitadas() + moraCiclica.getCuentasRehabilitadas());
            moraConsolidada.setMontoRehabilitadoUSD(moraConsolidada.getMontoRehabilitadoUSD() + moraCiclica.getMontoRehabilitadoUSD());
            moraConsolidada.setMontoContagioRehabilitadoUSD(moraConsolidada.getMontoContagioRehabilitadoUSD() + moraCiclica.getMontoContagioRehabilitadoUSD());
            moraConsolidada.setMontoRehabilitadoHNL(moraConsolidada.getMontoRehabilitadoHNL() + moraCiclica.getMontoRehabilitadoHNL());
            moraConsolidada.setMontoContagioRehabilitadoHNL(moraConsolidada.getMontoContagioRehabilitadoHNL() + moraCiclica.getMontoContagioRehabilitadoHNL());
            moraConsolidada.setCuentasMora(moraConsolidada.getCuentasMora() + moraCiclica.getCuentasMora());
            moraConsolidada.setMontoMoraUSD(moraConsolidada.getMontoMoraUSD() + moraCiclica.getMontoMoraUSD());
            moraConsolidada.setMontoContagioMoraUSD(moraConsolidada.getMontoContagioMoraUSD() + moraCiclica.getMontoContagioMoraUSD());
            moraConsolidada.setMontoMoraHNL(moraConsolidada.getMontoMoraHNL() + moraCiclica.getMontoMoraHNL());
            moraConsolidada.setMontoContagioMoraHNL(moraConsolidada.getMontoContagioMoraHNL() + moraCiclica.getMontoContagioMoraHNL());
            morasConsolidadoMap.put(nameMora, moraConsolidada);
        }
    }
    morasCiclicas.add(morasConsolidadoMap);
    return morasCiclicas;
}
