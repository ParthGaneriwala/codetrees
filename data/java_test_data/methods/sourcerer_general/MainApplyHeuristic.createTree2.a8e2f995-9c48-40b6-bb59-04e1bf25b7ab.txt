private static QueryNode createTree2() {
    // A
    RelationNode relA = new RelationNode("Auto", "A");
    // B
    RelationNode relB = new RelationNode("Bote", "B");
    // A x B
    ProductNode prod = new ProductNode();
    prod.linkWith(relA, relB);
    // Sel(A x B)
    QueryConditionOperand selectAOperand1 = new FieldOperand(new QueryField("A", "a1"));
    QueryConditionOperand selectAOperand2 = new LiteralOperand("1");
    QuerySingleCondition query1 = new QuerySingleCondition(selectAOperand1, QueryConditionOperator.EQUAL, selectAOperand2);
    QueryConditionOperand selectAOperand21 = new FieldOperand(new QueryField("A", "a2"));
    QueryConditionOperand selectAOperand22 = new LiteralOperand("15");
    QuerySingleCondition query2 = new QuerySingleCondition(selectAOperand21, QueryConditionOperator.GREATER_THAN, selectAOperand22);
    QueryConditionOperand selectAOperand31 = new FieldOperand(new QueryField("B", "b1"));
    QueryConditionOperand selectAOperand32 = new LiteralOperand("8");
    QuerySingleCondition query3 = new QuerySingleCondition(selectAOperand31, QueryConditionOperator.LESS_THAN_OR_EQUAL, selectAOperand32);
    QueryConditionOperand selectAOperand41 = new FieldOperand(new QueryField("B", "b2"));
    QueryConditionOperand selectAOperand42 = new LiteralOperand("4");
    QuerySingleCondition query4 = new QuerySingleCondition(selectAOperand41, QueryConditionOperator.NOT_EQUAL, selectAOperand42);
    List<QuerySingleCondition> lista = new ArrayList<QuerySingleCondition>();
    lista.add(query1);
    lista.add(query2);
    lista.add(query3);
    lista.add(query4);
    QueryAndSingleConditions queryDelNodo = new QueryAndSingleConditions(lista);
    QuerySingleInputNode selectAxB = new SelectionNode(queryDelNodo);
    selectAxB.linkWith(prod);
    // Proj(Sel(A x B))
    List<QueryField> projectedFields = Collections.singletonList(new QueryField("A", "a2"));
    ProjectionNode project = new ProjectionNode(projectedFields);
    project.linkWith(selectAxB);
    return project;
}
