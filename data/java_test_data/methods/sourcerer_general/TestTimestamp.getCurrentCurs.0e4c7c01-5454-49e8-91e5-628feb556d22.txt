private Timestamp getCurrentCurs() throws Exception {
    long idCurrency = 134;
    long idSite = 23;
    String sql_ = "select max(f.DATE_CHANGE) LAST_DATE " + "from  CASH_CURR_VALUE f, CASH_CURRENCY b " + "where f.ID_CURRENCY=b.ID_CURRENCY and b.ID_SITE=? and f.ID_CURRENCY=? ";
    PreparedStatement ps = null;
    ResultSet rs = null;
    Timestamp stamp = null;
    try {
        ps = conn.prepareStatement(sql_);
        ps.setLong(1, idSite);
        ps.setLong(2, idCurrency);
        rs = ps.executeQuery();
        if (rs.next()) {
            stamp = rs.getTimestamp("LAST_DATE");
        } else {
            return null;
        }
    } finally {
        rs.close();
        ps.close();
        rs = null;
        ps = null;
    }
    System.out.println("ts in db " + stamp);
    if (stamp == null) {
        return null;
    }
    try {
        SimpleDateFormat df = new SimpleDateFormat("dd.MM.yyyy HH:mm:ss.SSS", Locale.ENGLISH);
        df.setTimeZone(timeZone);
        String st = df.format(stamp);
        System.out.println("String ts in db " + st);
    } catch (Throwable th) {
        System.out.println("Error get timestamp " + th.toString());
    }
    sql_ = "select  a.ID_CURRENCY, a.DATE_CHANGE, a.CURS " + "from CASH_CURR_VALUE a, CASH_CURRENCY b " + "where a.ID_CURRENCY=b.ID_CURRENCY and " + "b.ID_SITE=? and " + "a.ID_CURRENCY=? and " + "DATE_CHANGE = ?";
    ps = null;
    rs = null;
    double curs;
    Timestamp tsCurs = null;
    long idCurrencyCurs;
    try {
        ps = conn.prepareStatement(sql_);
        ps.setLong(1, idSite);
        ps.setLong(2, idCurrency);
        ps.setTimestamp(3, stamp);
        rs = ps.executeQuery();
        if (rs.next()) {
            curs = rs.getDouble("CURS");
            tsCurs = rs.getTimestamp("DATE_CHANGE");
        }
        return tsCurs;
    } finally {
        rs.close();
        ps.close();
        rs = null;
        ps = null;
    }
}
