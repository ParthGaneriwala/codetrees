@Test
public void testTimeBank() throws UIMAException, IOException {
    CollectionReader reader = FilesCollectionReader.getCollectionReaderWithView("src/test/resources/data/timeml/wsj_0106.tml", TimeMLViewName.TIMEML);
    AnalysisEngine engine = AnalysisEngineFactory.createPrimitive(TimeMLGoldAnnotator.getDescription());
    reader.getNext(this.jCas.getCas());
    engine.process(this.jCas);
    engine.collectionProcessComplete();
    // <EVENT eid="e1" class="REPORTING">said</EVENT>
    // <MAKEINSTANCE eventID="e1" eiid="ei128" tense="PAST" aspect="NONE"
    // polarity="POS" pos="VERB"/>
    Event event = JCasUtil.select(this.jCas, Event.class).iterator().next();
    Assert.assertEquals("said", event.getCoveredText());
    Assert.assertEquals("e1", event.getId());
    Assert.assertEquals("ei128", event.getEventInstanceID());
    Assert.assertEquals("REPORTING", event.getEventClass());
    Assert.assertEquals("PAST", event.getTense());
    Assert.assertEquals("NONE", event.getAspect());
    Assert.assertEquals("POS", event.getPolarity());
    Assert.assertEquals("VERB", event.getPos());
    Assert.assertEquals(null, event.getStem());
    Assert.assertEquals(null, event.getModality());
    Assert.assertEquals(null, event.getCardinality());
    // <TIMEX3 tid="t26" type="DATE" value="1989-11-02"
    // temporalFunction="false"
    // functionInDocument="CREATION_TIME">11/02/89</TIMEX3>
    Time docTime = JCasUtil.select(this.jCas, Time.class).iterator().next();
    Assert.assertEquals("11/02/89", docTime.getCoveredText());
    Assert.assertEquals("t26", docTime.getId());
    Assert.assertEquals("DATE", docTime.getTimeType());
    Assert.assertEquals("1989-11-02", docTime.getValue());
    Assert.assertEquals("false", docTime.getTemporalFunction());
    Assert.assertEquals("CREATION_TIME", docTime.getFunctionInDocument());
    Assert.assertTrue(docTime instanceof DocumentCreationTime);
    // <TLINK lid="l1" relType="BEFORE" eventInstanceID="ei128"
    // relatedToTime="t26"/>
    Iterator<TemporalLink> tlinks = JCasUtil.select(this.jCas, TemporalLink.class).iterator();
    TemporalLink tlink0 = tlinks.next();
    Assert.assertEquals("l1", tlink0.getId());
    Assert.assertEquals("BEFORE", tlink0.getRelationType());
    Assert.assertEquals("e1", tlink0.getSource().getId());
    Assert.assertEquals("t26", tlink0.getTarget().getId());
    Assert.assertEquals(event, tlink0.getSource());
    // <TLINK lid="l2" relType="SIMULTANEOUS" eventInstanceID="ei131"
    // relatedToEventInstance="ei130"/>
    TemporalLink tlink1 = tlinks.next();
    Assert.assertEquals("l2", tlink1.getId());
    Assert.assertEquals("SIMULTANEOUS", tlink1.getRelationType());
    Assert.assertEquals("e5", tlink1.getSource().getId());
    Assert.assertEquals("e4", tlink1.getTarget().getId());
}
