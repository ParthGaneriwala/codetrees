public String execute() {
    List<String> fileData = null;
    if (documents == null) {
        // 批量导入验证
        this.addFieldError("documents", "导入文件不正确，请重新选择");
        return "addLink";
    }
    if (documents == null) {
        return "input";
    }
    ServletContext context = ServletActionContext.getServletContext();
    // 获取在服务器中的目录
    String targetDirectory = context.getRealPath(savePath);
    File target = null;
    int n = documents.size();
    String filePath = null;
    StringBuffer sb = new StringBuffer();
    String targetFileName = null;
    for (int i = 0; i < n; i++) {
        targetFileName = generateFileName(fileName.get(i));
        target = new File(targetDirectory, targetFileName);
        try {
            FileUtils.copyFile(documents.get(i), target);
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        filePath = targetDirectory + "/" + targetFileName;
        // 读取刚上传的excel文件数据
        fileData = StudentExcel.getStudentRegExcel().readExcel(filePath);
        // 减去最后保存列数的一位
        int resultLength = fileData.size() - 1;
        // 获取保存的属性列数
        int columns = Integer.parseInt(fileData.get(resultLength).toString());
        sb.append("<table border=\"1\">");
        for (int j = 0; j < resultLength; j++) {
            if (j % columns == 0)
                sb.append("<tr>");
            sb.append("<td>" + fileData.get(j) + "</td>");
            if (j % columns == columns - 1)
                sb.append("</tr>");
        }
        sb.append("</table>");
        context.setAttribute("fileName", targetFileName);
    }
    if (fileData != null) {
        context.setAttribute("fileData", sb.toString());
    }
    return "confirmLink";
}
