public void setChannelRectangle(int channel, int x, int y, int width, int height, byte[] buffer, int offset, int scansize) throws IOException {
    int shift = channel;
    int mask = ~(0xff << shift);
    int bufferOffset = offset;
    // dimensions of the region of the page to write to
    int writeWidth;
    int writeHeight;
    // current position and remaining pixels of the logical region to write to
    int xRemaining;
    int xPosition;
    int yRemaining = height;
    int yPosition = y;
    // loop complete vertically
    while (yRemaining != 0) {
        xRemaining = width;
        xPosition = x;
        writeHeight = Math.min(pageHeight - (yPosition % pageHeight), yRemaining);
        int xPageIndex = xPosition % pageWidth;
        int yPageIndex = yPosition % pageWidth;
        // loop until complete horizontally
        while (xRemaining != 0) {
            int pageNumber = getLogicalPageNumberForLocation(xPosition, yPosition);
            IntPageFrame pageFrame = (IntPageFrame) getPageFrameForWriting(pageNumber);
            // width of the region of the page to write to
            writeWidth = Math.min(pageWidth - (xPosition % pageWidth), xRemaining);
            int[] pageData = pageFrame.getPageData();
            // copy from page frame into buffer
            for (int row = 0; row < writeHeight; row++) {
                int pageDataIndex = (xPosition % pageWidth) + (((yPosition % pageHeight) + row) * pageWidth);
                int bufferIndex = bufferOffset + xPosition - x + ((yPosition - y + row) * scansize);
                for (int column = 0; column < writeWidth; column++) {
                    pageData[pageDataIndex + column] &= mask;
                    pageData[pageDataIndex + column] |= 0xff000000 | ((((int) buffer[bufferIndex + column]) & 0xff) << shift);
                }
            }
            // advance position horizontally
            xPosition += writeWidth;
            xRemaining -= writeWidth;
        }
        // advance position vertically
        yPosition += writeHeight;
        yRemaining -= writeHeight;
    }
}
