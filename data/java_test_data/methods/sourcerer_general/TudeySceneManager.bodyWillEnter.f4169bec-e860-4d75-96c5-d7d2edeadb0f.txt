// from PlaceManager
@Override
public void bodyWillEnter(BodyObject body) {
    // configure the client's message throttle to 1.5 times the absolute minimum
    PresentsSession client = _clmgr.getClient(body.username);
    if (client != null) {
        client.setIncomingMessageThrottle(1500 / getTransmitInterval());
    }
    // add the pawn and configure a local to provide its id
    ConfigReference<ActorConfig> ref = getPawnConfig(body);
    if (ref != null) {
        Vector2f translation = Vector2f.ZERO;
        float rotation = 0f;
        Object portalKey = _entering.remove(body.getOid());
        if (portalKey instanceof Logic) {
            // make sure the logic is still active
            Logic entrance = (Logic) portalKey;
            if (entrance.isActive()) {
                translation = entrance.getTranslation();
                rotation = entrance.getRotation();
            }
        } else if (portalKey instanceof String) {
            List<Logic> tagged = getTagged((String) portalKey);
            if (tagged != null) {
                Logic entrance = RandomUtil.pickRandom(tagged);
                translation = entrance.getTranslation();
                rotation = entrance.getRotation();
            }
        } else if (portalKey instanceof Transform2D) {
            Transform2D transform = (Transform2D) portalKey;
            translation = transform.extractTranslation();
            rotation = transform.extractRotation();
        } else if (portalKey != null) {
            // get the translation/rotation from the entering portal
            Entry entry = ((TudeySceneModel) _scene.getSceneModel()).getEntry(portalKey);
            if (entry != null) {
                translation = entry.getTranslation(_cfgmgr);
                rotation = entry.getRotation(_cfgmgr);
            }
        }
        if (translation == Vector2f.ZERO) {
            // select a default entrance
            Logic entrance = getDefaultEntrance();
            if (entrance != null) {
                translation = entrance.getTranslation();
                rotation = entrance.getRotation();
            }
        }
        final ActorLogic logic = spawnActor(getNextTimestamp(), translation, rotation, ref);
        if (logic != null) {
            logic.bodyWillEnter(body);
            ((TudeyBodyObject) body).setPawnId(logic.getActor().getId());
        }
    }
    // now let the body actually enter the scene
    super.bodyWillEnter(body);
}
