public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
    x += backgroundThickness;
    y += backgroundThickness;
    height -= 2 * backgroundThickness;
    width -= 2 * backgroundThickness;
    // Top
    g.setColor(backgroundColor);
    g.drawLine(x, y, x + width, y);
    g.drawLine(x, y + 1, x + width, y + 1);
    g.drawLine(x, y + 2, x + width, y + 2);
    g.setColor(borderColor);
    g.drawLine(x, y + 3, x + width, y + 3);
    // Bottom
    g.setColor(borderColor);
    g.drawLine(x, y + height - 4, x + width, y + height - 4);
    g.setColor(shadowColor);
    g.drawLine(x, y + height - 3, x + width, y + height - 3);
    g.drawLine(x, y + height - 2, x + width, y + height - 2);
    // Left
    g.setColor(backgroundColor);
    g.drawLine(x, y, x, y + height);
    g.drawLine(x + 1, y, x + 1, y + height);
    g.drawLine(x + 2, y, x + 2, y + height);
    g.setColor(borderColor);
    g.drawLine(x + 3, y, x + 3, y + height);
    // Right
    g.setColor(borderColor);
    g.drawLine(x + width - 4, y, x + width - 4, y + height);
    g.setColor(shadowColor);
    g.drawLine(x + width - 3, y, x + width - 3, y + height);
    g.drawLine(x + width - 2, y, x + width - 2, y + height);
    // Background around the border
    g.setColor(backgroundColor);
    for (int i = 0; i < backgroundThickness + 1; i++) {
        g.drawRect(x - i, y - i, width - 1 + 2 * i, height - 1 + 2 * i);
    }
    // Corners
    height += backgroundThickness;
    width += backgroundThickness;
    topLeftCorner.paintIcon(c, g, x, y);
    topRightCorner.paintIcon(c, g, x + width - insets.right, y);
    bottomLeftCorner.paintIcon(c, g, x, y + height - insets.bottom);
    bottomRightCorner.paintIcon(c, g, x + width - insets.right, y + height - insets.bottom);
}
