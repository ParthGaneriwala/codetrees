@SuppressWarnings("unchecked")
public ActionForward copy(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    if (log.isDebugEnabled()) {
        log.debug("Entering 'copy' method");
    }
    ActionMessages messages = new ActionMessages();
    ChainForm chainForm = (ChainForm) form;
    ChainManager mgr = (ChainManager) getBean("chainManager");
    Chain oldchain = mgr.getChain(chainForm.getChainId());
    Chain chain = new Chain();
    chain.setDescription(oldchain.getDescription());
    chain.setName(oldchain.getName() + "_copy");
    chain.initAudit(this.getLoginUser());
    try {
        while (true) {
            Chain c = mgr.getChainByName(chain.getName());
            if (c != null) {
                chain.setName(chain.getName() + "_copy");
            }
            break;
        }
        mgr.saveChain(chain);
    } catch (Exception e) {
        log.warn(e.getMessage());
        updateFormBean(mapping, request, chainForm);
        return mapping.findForward("failure");
    }
    ChainFlowManager flowMgr = (ChainFlowManager) getBean("chainFlowManager");
    Set oldflows = oldchain.getChainFlows();
    Iterator flowIte = oldflows.iterator();
    while (flowIte.hasNext()) {
        ChainFlow oldflow = (ChainFlow) flowIte.next();
        oldflow = flowMgr.getChainFlow(oldflow.getFlowId().toString());
        ChainFlow flow = new ChainFlow();
        BeanUtils.copyProperties(flow, convert(oldflow));
        flow.setScripts(oldflow.getScripts());
        flow.setFlowId(null);
        flow.setChainId(chain.getChainId());
        flow.initAudit(this.getLoginUser());
        flowMgr.saveChainFlow(flow);
    }
    messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("chain.copied", oldchain.getName()));
    saveMessages(request.getSession(), messages);
    return mapping.findForward("list");
}
