public void searchNow(int blockOffset) {
    HashMap<DBNodeIdent, DBNode> dBGroupMemberTable = hpg.getDBGroupMember();
    // System.out.println("searchNow11111111111");
    if (dBGroupMemberTable.size() != 0) {
        // System.out.println("searchNow2222222222222");
        if (!searchRecordTable.containsKey(blockOffset)) {
            SearchRecord su = new SearchRecord();
            searchRecordTable.put(blockOffset, su);
        }
        SearchRecord sr = (SearchRecord) searchRecordTable.get(blockOffset);
        Iterator it = dBGroupMemberTable.keySet().iterator();
        DBNodeIdent[] dba = new DBNodeIdent[dBGroupMemberTable.size()];
        int i = 0;
        while (it.hasNext()) {
            DBNodeIdent dbi2 = (DBNodeIdent) it.next();
            dba[i] = dbi2;
            i++;
        }
        SourceSearchMessage sgm = new SourceSearchMessage(mdb.md, (short) blockOffset);
        int j = 0;
        int offset = peer.tools.RandomNum.randomInt(dba.length);
        int searchNum = 0;
        if (firstSearch) {
            searchNum = 10;
            firstSearch = false;
        } else {
            searchNum = peer.Config.maxSearchNode;
        }
        while (j < dba.length & j < searchNum) {
            DBNodeIdent dbi2 = dba[offset];
            DBNode dbn2 = dBGroupMemberTable.get(dbi2);
            sgm.setDstAddress(dbn2.ip);
            sgm.setDstPort(dbn2.getPort());
            try {
                ds.send(sgm.getDatagramPacket());
            } catch (IOException e) {
                e.printStackTrace();
            }
            // System.out.println("searchNowsssddddd "+blockOffset+" "+dbn2.ip);
            sr.update();
            j++;
            offset++;
            if (offset > dba.length - 1) {
                offset = 0;
            }
        }
    }
}
