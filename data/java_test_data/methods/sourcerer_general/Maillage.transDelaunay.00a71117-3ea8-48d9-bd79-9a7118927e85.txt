public static void transDelaunay() {
    try {
        next = true;
        while (next) {
            Fenetre.imageTransformee.repaint();
            Thread.sleep(10);
        }
        boolean continuer = true;
        int iteration = 0;
        int i = 0;
        int j = 0;
        while (continuer) {
            iteration++;
            continuer = false;
            for (i = 0; i < triangles.size(); i++) {
                Triangles triag = (Triangles) triangles.get(i);
                for (j = 0; j < triangles.size(); j++) {
                    Triangles triagComp = (Triangles) triangles.get(j);
                    if (triag.isComplete(triagComp)) {
                        if (triag.becomeDelaunay(triagComp)) {
                            continuer = true;
                            triangles.remove(i);
                            if (i < j) {
                                triangles.remove(j - 1);
                            } else {
                                triangles.remove(j);
                            }
                            Fenetre.imageTransformee.repaint();
                            /*
							next = true;
							while(next) {
								Fenetre.imageTransformee.repaint();
								Thread.sleep(10);
							}
							*/
                            Fenetre.logsPrincipal.setText("Triangles :" + triangles.size() + " - Calcul : " + (i * triangles.size() + j + 1) + "/" + (triangles.size() * triangles.size()));
                            triag = (Triangles) triangles.get(i);
                            i = 0;
                            j = triangles.size();
                        }
                    }
                }
            }
        }
        Fenetre.logsPrincipal.setText("Termine " + (i * triangles.size() + j + 1) + " / " + (triangles.size() * triangles.size()));
    } catch (Exception e) {
        System.out.println(e);
        e.printStackTrace();
    }
}
