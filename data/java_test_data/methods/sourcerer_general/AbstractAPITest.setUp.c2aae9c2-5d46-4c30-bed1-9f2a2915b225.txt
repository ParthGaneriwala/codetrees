protected void setUp() throws Exception {
    // Turn on the API Debug mode which shows errors
    // TODO: Add error checking to the API when there is a problem
    System.setProperty("DEBUG-API", "true");
    // Get a database connection
    super.setUp();
    assertTrue("The database connection was null.", db != null);
    // Insert a new sync client for the API to test against
    syncClient = new SyncClient();
    syncClient.setType("API Test Client");
    syncClient.setVersion((String) null);
    syncClient.setEnteredBy(USER_ID);
    syncClient.setModifiedBy(USER_ID);
    syncClient.setEnabled(true);
    syncClient.setCode(CLIENT_CODE);
    syncClient.insert(db);
    assertTrue(syncClient.getId() > -1);
    syncClient = new SyncClient(db, syncClient.getId(), CLIENT_CODE);
    api = new APIConnection();
    api.setUrl("http://127.0.0.1:8080");
    api.setClientId(syncClient.getId());
    api.setSystemId(SYSTEM_ID);
    api.setCode(CLIENT_CODE);
    api.setAutoCommit(false);
    // Declare the server-side class instead of looking it up in the database
    SyncTableList syncTableList = new SyncTableList();
    syncTableList.setSystemId(SYSTEM_ID);
    // Load the core object map
    syncTableList.loadObjectMap(SyncTableList.class.getResourceAsStream("/object_map.xml"));
    assertFalse("Did not find any objects in object_map.xml", syncTableList.size() == 0);
    // Load plug-in mappings in the services path
    File[] serviceFiles = new File("src/main/webapp/WEB-INF/services").listFiles();
    assertTrue("Services not found in working directory... " + "src/main/webapp/WEB-INF/services", serviceFiles != null && serviceFiles.length > 0);
    if (serviceFiles != null && serviceFiles.length > 0) {
        for (File thisFile : serviceFiles) {
            if (thisFile.getAbsolutePath().endsWith(".xml")) {
                try {
                    LOG.info("Adding services from... " + thisFile.getAbsolutePath());
                    syncTableList.loadObjectMap(new FileInputStream(thisFile));
                } catch (Exception e) {
                    LOG.error("getObjectMap exception", e);
                }
            }
        }
    }
    assertNotNull("Could not find 'backup' service", syncTableList.getSyncTableByName("backup"));
    // From the Service action method
    packetContext = new PacketContext();
    packetContext.setObjectMap(syncTableList.getObjectMapping(SYSTEM_ID));
    // Test the indexer when the API is used
    SchedulerFactory schedulerFactory = new org.quartz.impl.StdSchedulerFactory();
    scheduler = schedulerFactory.getScheduler();
    scheduler.getContext().setAllowsTransientData(true);
    scheduler.getContext().put("ConnectionPool", connectionPool);
    scheduler.getContext().put("ConnectionElement", ce);
    scheduler.getContext().put("ApplicationPrefs", mockPrefs);
    scheduler.getContext().put("IndexArray", new Vector());
    JobDetail job = new JobDetail("indexer", Scheduler.DEFAULT_GROUP, IndexerJob.class);
    // Update every 24 hours, starting in 5 minutes
    long startTime = System.currentTimeMillis() + (5L * 60L * 1000L);
    SimpleTrigger trigger = new SimpleTrigger("indexer", Scheduler.DEFAULT_GROUP, new Date(startTime), null, SimpleTrigger.REPEAT_INDEFINITELY, 24L * 60L * 60L * 1000L);
    scheduler.scheduleJob(job, trigger);
    // scheduler.addJob(job, true);
    scheduler.start();
    // Jobs will be added by the tests
    packetContext.setScheduler(scheduler);
}
