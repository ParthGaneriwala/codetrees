public void add(IndexWriter writer, Object item, boolean modified) throws IOException {
    FileItem fileItem = (FileItem) item;
    // use the project's general access to speedup guest projects
    Project project = ProjectUtils.loadProject(fileItem.getLinkItemId());
    String ext = fileItem.getExtension();
    String filename = fileItem.getFullFilePath();
    String contents = ContentUtils.getText(ext, filename);
    // add the document
    Document document = new Document();
    document.add(new Field("type", "file", Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("fileId", String.valueOf(fileItem.getId()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("folderId", String.valueOf(fileItem.getFolderId()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("projectId", String.valueOf(fileItem.getLinkItemId()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("projectCategoryId", String.valueOf(project.getCategoryId()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("guests", (project.getFeatures().getAllowGuests() ? "1" : "0"), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("participants", (project.getFeatures().getAllowParticipants() ? "1" : "0"), Field.Store.YES, Field.Index.UN_TOKENIZED));
    // determine if membership is needed for this content based on a guest's access to the data
    int membership = project.getFeatures().getMembershipRequired() ? 1 : 0;
    if (membership == 1 && ProjectUtils.hasAccess(project.getId(), UserUtils.createGuestUser(), "project-documents-files-download")) {
        membership = 0;
    }
    document.add(new Field("membership", String.valueOf(membership), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("title", fileItem.getSubject() + " - " + fileItem.getClientFilename(), Field.Store.YES, Field.Index.TOKENIZED));
    document.add(new Field("titleLower", (fileItem.getSubject() + " - " + fileItem.getClientFilename()).toLowerCase(), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("filename", fileItem.getClientFilename(), Field.Store.YES, Field.Index.TOKENIZED));
    document.add(new Field("extension", fileItem.getExtension(), Field.Store.YES, Field.Index.TOKENIZED));
    document.add(new Field("contents", fileItem.getSubject() + " " + fileItem.getClientFilename() + " " + ContentUtils.toText(contents), Field.Store.YES, Field.Index.TOKENIZED));
    if (modified) {
        document.add(new Field("modified", String.valueOf(System.currentTimeMillis()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    } else {
        document.add(new Field("modified", String.valueOf(fileItem.getModified().getTime()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    }
    document.add(new Field("size", String.valueOf(fileItem.getSize()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    writer.addDocument(document);
    if (System.getProperty("DEBUG") != null && modified) {
        System.out.println("FileItemIndexer-> fileId: " + fileItem.getId());
        System.out.println("FileItemIndexer-> folderId: " + fileItem.getFolderId());
        System.out.println("FileItemIndexer-> projectId: " + fileItem.getLinkItemId());
        System.out.println("FileItemIndexer-> title: " + fileItem.getId());
        System.out.println("FileItemIndexer-> extension: " + fileItem.getExtension());
    }
}
