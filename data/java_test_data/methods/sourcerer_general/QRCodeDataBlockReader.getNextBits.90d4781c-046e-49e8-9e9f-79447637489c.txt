int getNextBits(int numBits) throws ArrayIndexOutOfBoundsException {
    // System.out.println("numBits:" + String.valueOf(numBits));
    // System.out.println("blockPointer:" + String.valueOf(blockPointer));
    // System.out.println("bitPointer:" + String.valueOf(bitPointer));
    int bits = 0;
    if (numBits < bitPointer + 1) {
        // next word fits into current data block
        int mask = 0;
        for (int i = 0; i < numBits; i++) {
            mask += 1 << i;
        }
        mask <<= (bitPointer - numBits + 1);
        bits = (blocks[blockPointer] & mask) >> (bitPointer - numBits + 1);
        bitPointer -= numBits;
        return bits;
    } else if (numBits < bitPointer + 1 + 8) {
        // next word crosses 2 data blocks
        int mask1 = 0;
        for (int i = 0; i < bitPointer + 1; i++) {
            mask1 += 1 << i;
        }
        bits = (blocks[blockPointer] & mask1) << (numBits - (bitPointer + 1));
        blockPointer++;
        bits += (blocks[blockPointer]) >> (8 - (numBits - (bitPointer + 1)));
        bitPointer = bitPointer - numBits % 8;
        if (bitPointer < 0) {
            bitPointer = 8 + bitPointer;
        }
        return bits;
    } else if (numBits < bitPointer + 1 + 16) {
        // next word crosses 3 data blocks
        // mask of first block
        int mask1 = 0;
        // mask of 3rd block
        int mask3 = 0;
        // numBits - (bitPointer + 1 + 8) : number of bits of the 3rd block
        for (int i = 0; i < bitPointer + 1; i++) {
            mask1 += 1 << i;
        }
        int bitsFirstBlock = (blocks[blockPointer] & mask1) << (numBits - (bitPointer + 1));
        blockPointer++;
        int bitsSecondBlock = blocks[blockPointer] << (numBits - (bitPointer + 1 + 8));
        blockPointer++;
        for (int i = 0; i < numBits - (bitPointer + 1 + 8); i++) {
            mask3 += 1 << i;
        }
        mask3 <<= 8 - (numBits - (bitPointer + 1 + 8));
        int bitsThirdBlock = (blocks[blockPointer] & mask3) >> (8 - (numBits - (bitPointer + 1 + 8)));
        bits = bitsFirstBlock + bitsSecondBlock + bitsThirdBlock;
        bitPointer = bitPointer - (numBits - 8) % 8;
        if (bitPointer < 0) {
            bitPointer = 8 + bitPointer;
        }
        return bits;
    } else {
        System.out.println("ERROR!");
        return 0;
    }
}
