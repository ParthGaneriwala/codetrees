// / destroy a rigid body given a definition. No reference to the definition
// / is retained. This function is locked during callbacks.
// / @warning This automatically deletes all associated shapes and joints.
public synchronized void destroyBody(BBBody b) {
    assert (m_bodyCount > 0);
    assert (!IsLocked());
    if (IsLocked()) {
        return;
    }
    // Delete the attached joints.
    BBJointEdge je = b.m_jointList;
    while (je != null) {
        BBJointEdge je0 = je;
        je = je.next;
        if (m_destructionListener != null) {
            m_destructionListener.SayGoodbye(je0.joint);
        }
        destroyJoint(je0.joint);
    }
    b.m_jointList = null;
    // Delete the attached contacts.
    BBContactEdge ce = b.m_contactList;
    while (ce != null) {
        BBContactEdge ce0 = ce;
        ce = ce.next;
        m_contactManager.destroy(ce0.contact);
    }
    b.m_contactList = null;
    // Delete the attached fixtures. This destroys broad-phase proxies.
    BBFixture f = b.m_fixtureList;
    while (f != null) {
        BBFixture f0 = f;
        f = f.m_next;
        if (m_destructionListener != null) {
            m_destructionListener.SayGoodbye(f0);
        }
        f0.destroy(m_contactManager.m_broadPhase);
    }
    b.m_fixtureList = null;
    b.m_fixtureCount = 0;
    // Remove world body list.
    if (b.m_prev != null) {
        b.m_prev.m_next = b.m_next;
    }
    if (b.m_next != null) {
        b.m_next.m_prev = b.m_prev;
    }
    if (b == m_bodyList) {
        m_bodyList = b.m_next;
    }
    --m_bodyCount;
}
