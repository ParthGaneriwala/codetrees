public void generateServiceImpl(Class modelClass) {
    String cn = modelClass.getSimpleName();
    StringBuffer sb = new StringBuffer();
    sb.append("/**").append("\n");
    sb.append("* Author: Bob Chen").append("\n");
    sb.append("*/").append("\n");
    sb.append("\n");
    sb.append("package " + serviceimplpkg + ";").append("\n");
    sb.append("\n");
    sb.append("import java.util.List;").append("\n");
    sb.append("\n");
    sb.append("import org.apache.commons.logging.Log;").append("\n");
    sb.append("import org.apache.commons.logging.LogFactory;").append("\n");
    sb.append("import org.hibernate.Hibernate;").append("\n");
    sb.append("\n");
    sb.append("import " + daopkg + "." + cn + "DAO;").append("\n");
    sb.append("import " + modelClass.getName() + ";").append("\n");
    sb.append("import " + servicepkg + "." + cn + "Manager;").append("\n");
    sb.append("\n");
    sb.append("public class " + cn + "ManagerImpl implements " + cn + "Manager {").append("\n");
    sb.append("    private static Log log = LogFactory.getLog(" + cn + "ManagerImpl.class);").append("\n");
    sb.append("    private " + cn + "DAO dao;").append("\n");
    sb.append("\n");
    sb.append("    public void set" + cn + "DAO(" + cn + "DAO dao) {").append("\n");
    sb.append("        this.dao = dao;\n");
    sb.append("    }\n");
    sb.append("\n");
    sb.append("    public " + cn + " initialize(" + cn + " obj) {").append("\n");
    sb.append("        if (obj != null && !Hibernate.isInitialized(obj)) {\n");
    sb.append("            obj = dao.get" + cn + "(obj.getId());\n");
    sb.append("        }\n");
    sb.append("        return obj;\n");
    sb.append("    }\n");
    sb.append("\n");
    sb.append("    public List<" + cn + "> get" + cn + "List() {").append("\n");
    sb.append("        return dao.get" + cn + "List();\n");
    sb.append("    }\n");
    sb.append("\n");
    sb.append("    public " + cn + " get" + cn + "(String id) {").append("\n");
    sb.append("        " + cn + " obj = dao.get" + cn + "(Integer.parseInt(id));\n");
    sb.append("        return obj;\n");
    sb.append("    }\n");
    sb.append("\n");
    sb.append("    public void save" + cn + "(" + cn + " obj) {").append("\n");
    sb.append("        dao.save" + cn + "(obj);\n");
    sb.append("    }\n");
    sb.append("\n");
    sb.append("    public void remove" + cn + "(String id) {").append("\n");
    sb.append("        dao.remove" + cn + "(Integer.parseInt(id));\n");
    sb.append("    }\n");
    sb.append("}").append("\n");
    File path = new File(targetPath, serviceimplpkg.replace(".", File.separator));
    if (!path.exists()) {
        path.mkdirs();
    }
    try {
        FileOutputStream fos = new FileOutputStream(new File(path, cn + "ManagerImpl.java"));
        fos.write(sb.toString().getBytes());
        fos.close();
    } catch (FileNotFoundException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
