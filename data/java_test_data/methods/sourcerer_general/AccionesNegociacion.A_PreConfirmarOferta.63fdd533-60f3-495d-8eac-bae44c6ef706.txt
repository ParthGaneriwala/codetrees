public ActionForward A_PreConfirmarOferta(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    // Salidas
    final String SALIDA_0 = "V_PreConfirmarOferta";
    String salida = SALIDA_0;
    Session s = HibernateUtil.getSessionFactory().getCurrentSession();
    Transaction tr = s.beginTransaction();
    try {
        // FConfOferta fFConfOferta = (FConfOferta)form;
        String crit = request.getSession().getAttribute("idDepartamento").toString();
        if (Integer.parseInt(request.getSession().getAttribute("tipoUsuario").toString()) != 0) {
            if (crit == null)
                crit = " where departamento = " + request.getParameter("idDepartamento");
            else
                crit = " where departamento = " + crit;
        } else {
            if (crit == null)
                crit = "";
            else
                crit = " where departamento = " + crit;
        }
        HttpSession sess = request.getSession();
        FConfOferta fFConfOferta = (FConfOferta) sess.getAttribute("FConfOferta");
        if (fFConfOferta == null) {
            fFConfOferta = new FConfOferta();
            sess.setAttribute("FConfOferta", fFConfOferta);
        } else {
            fFConfOferta.reset(mapping, request);
        }
        /*
            {java.util.List<ve.usb.cohesion.runtime.OfertaConf> listC = 
               (java.util.List<ve.usb.cohesion.runtime.OfertaConf>)s.createQuery(
               "select new ve.usb.cohesion.runtime.OfertaConf(oferta, aprobado, comentario) " + 
               "from OfertaEnviada where departamento="+idDepartamento).list();
             fFConfOferta.setL_OfertaConf(listC);
            }
            */
        List<OfertaEnviada> listO = (java.util.List<OfertaEnviada>) s.createQuery("from OfertaEnviada" + crit).list();
        request.setAttribute("L_OfertaConfI", listO);
        fFConfOferta.setL_OfertaConfI(listO);
        for (OfertaEnviada ofertaEnviada : listO) {
            if (ofertaEnviada.getOferta().getPeriodo() != null)
                ofertaEnviada.getOferta().getPeriodo().getNombre();
        }
        for (OfertaEnviada ofertaEnviada : listO) {
            if (ofertaEnviada.getOferta().getPlanDeEstudios() != null)
                ofertaEnviada.getOferta().getPlanDeEstudios().getCoordinacion();
        }
        for (OfertaEnviada ofertaEnviada : listO) {
            if (ofertaEnviada.getOferta().getRequisito() != null)
                ofertaEnviada.getOferta().getRequisito().getAsignatura().getCodigo();
        }
        tr.commit();
    } catch (Exception ex) {
        tr.rollback();
        ex.printStackTrace();
        throw ex;
    }
    return mapping.findForward(salida);
}
