public String getCalendarEndDate(String source) {
    int displayMonth = 0;
    int displayDay = 0;
    int displayYear = 0;
    if (source != null) {
        if (calendarInfo.isAgendaView() && source.equalsIgnoreCase("calendarDetails")) {
            Calendar today = Calendar.getInstance(timeZone, locale);
            today.set(Calendar.HOUR, 0);
            today.set(Calendar.MINUTE, 0);
            today.set(Calendar.SECOND, 0);
            today.set(Calendar.MILLISECOND, 0);
            today.add(Calendar.DATE, AGENDA_DAY_COUNT);
            displayMonth = today.get(Calendar.MONTH) + 1;
            displayDay = today.get(Calendar.DAY_OF_MONTH);
            displayYear = today.get(Calendar.YEAR);
        } else if (!source.equalsIgnoreCase("Calendar")) {
            if (calendarInfo.getCalendarView().equalsIgnoreCase("day")) {
                Calendar tmpCal = Calendar.getInstance(locale);
                tmpCal.set(Calendar.HOUR, 0);
                tmpCal.set(Calendar.MINUTE, 0);
                tmpCal.set(Calendar.SECOND, 0);
                tmpCal.set(Calendar.MILLISECOND, 0);
                tmpCal.set(calendarInfo.getYearSelected(), calendarInfo.getMonthSelected() - 1, calendarInfo.getDaySelected());
                tmpCal.add(java.util.Calendar.DATE, +1);
                displayMonth = tmpCal.get(Calendar.MONTH) + 1;
                displayDay = tmpCal.get(Calendar.DAY_OF_MONTH);
                displayYear = tmpCal.get(Calendar.YEAR);
            } else if (calendarInfo.getCalendarView().equalsIgnoreCase("week")) {
                Calendar newDate = Calendar.getInstance(timeZone, locale);
                newDate.set(Calendar.HOUR, 0);
                newDate.set(Calendar.MINUTE, 0);
                newDate.set(Calendar.SECOND, 0);
                newDate.set(Calendar.MILLISECOND, 0);
                newDate.set(calendarInfo.getYearSelected(), calendarInfo.getStartMonthOfWeek() - 1, calendarInfo.getStartDayOfWeek());
                newDate.add(Calendar.DATE, 7);
                displayMonth = newDate.get(Calendar.MONTH) + 1;
                displayDay = newDate.get(Calendar.DATE);
                displayYear = newDate.get(Calendar.YEAR);
            } else {
                displayMonth = calNext.get(Calendar.MONTH) + 1;
                displayYear = calNext.get(Calendar.YEAR);
                displayDay = numberOfCells - getEndCell(cal) - 1;
            }
        } else {
            Calendar tmpCal = Calendar.getInstance(locale);
            tmpCal.set(Calendar.HOUR, 0);
            tmpCal.set(Calendar.MINUTE, 0);
            tmpCal.set(Calendar.SECOND, 0);
            tmpCal.set(Calendar.MILLISECOND, 0);
            tmpCal.set(calNext.get(Calendar.YEAR), calNext.get(Calendar.MONTH), (numberOfCells - getEndCell(cal) - 1));
            tmpCal.add(java.util.Calendar.DATE, +1);
            displayMonth = tmpCal.get(Calendar.MONTH) + 1;
            displayDay = tmpCal.get(Calendar.DAY_OF_MONTH);
            displayYear = tmpCal.get(Calendar.YEAR);
        }
    } else {
        LOG.warn("getCalendarEndDate() source is NULL");
    }
    LOG.debug("End Day: " + displayMonth + "/" + displayDay + "/" + displayYear);
    return (displayMonth + "/" + displayDay + "/" + displayYear);
}
