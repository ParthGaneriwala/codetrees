public void testCrearFamilia() throws ValidadorException {
    Vector asociados1 = new Vector();
    Vector asociados2 = new Vector();
    asociados1.add(socio2.getIdSocioI());
    asociados1.add(socio3.getIdSocioI());
    asociados1.add(socio4.getIdSocioI());
    asociados2.add(socio6.getIdSocioI());
    asociados2.add(socio7.getIdSocioI());
    AdministradorDeFamilias.CrearFamilia(socio1.getIdSocio(), asociados1);
    AdministradorDeFamilias.CrearFamilia(socio5.getIdSocio(), asociados2);
    List titulares = AdministradorDeFamilias.getTitulares();
    // El Socio 1 tiene que estar entre los titulares
    assertTrue(titulares.indexOf(socio1) >= 0);
    // El Socio 5 tiene que estar entre los titulares
    assertTrue(titulares.indexOf(socio5) >= 0);
    List asociados = AdministradorDeFamilias.getAsociados(socio1.getIdSocio());
    assertTrue(asociados.indexOf(socio2) >= 0);
    assertTrue(asociados.indexOf(socio3) >= 0);
    assertTrue(asociados.indexOf(socio4) >= 0);
    assertFalse(asociados.indexOf(socio1) >= 0);
    assertFalse(asociados.indexOf(socio5) >= 0);
    assertTrue(socio2.isAsociado());
    assertTrue(socio3.isAsociado());
    assertFalse(socio1.isAsociado());
    // socio1 = AdministradorDeSocios.ObtenerSocio(socio1.getIdSocio());
    assertTrue(socio1.getSocios().contains(socio2));
    assertTrue(socio1.getSocios().contains(socio3));
    assertTrue(socio1.getSocios().contains(socio4));
    assertFalse(socio1.getSocios().contains(socio1));
    assertFalse(socio1.getSocios().contains(socio5));
}
