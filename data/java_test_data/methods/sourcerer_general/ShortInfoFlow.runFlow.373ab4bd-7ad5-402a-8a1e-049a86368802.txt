/*
	 * private int onError(ChainFlow chainFlow, ChainContext chainContext, int
	 * iMsgCode) throws Exception { int iRet = iMsgCode;
	 * chainContext.addSimuList("ErrorCode: " + String.valueOf(iMsgCode));
	 * switch (chainFlow.getOnError()) { case Constants.ONERROR_END: iRet =
	 * iMsgCode; break; case Constants.ONERROR_SKIP: iRet = 0; break; case
	 * Constants.ONERROR_REPEAT: if (repeattimes==-1) { repeattimes =
	 * chainFlow.getRepeattimes(); } chainContext.addSimuList("repeatTime: " +
	 * String.valueOf(repeattimes)); if (repeattimes-- > 0) iRet =
	 * Integer.parseInt(runFlow(chainFlow, chainContext)); else iRet = iMsgCode;
	 * break; } return iRet; }
	 */
public String runFlow(ChainFlow chainFlow, ChainContext chainContext) throws FlowException {
    try {
        List script = chainFlow.getScripts();
        int ret = 98;
        log.info("Start to run the flow [" + chainFlow.getFlowCode() + "]");
        chainContext.addSimuList("<font color=#fbaf5c><b>Start to run the flow [" + chainFlow.getFlowCode() + "]");
        if ("Y".equals(chainFlow.getSkipYn())) {
            log.info("The flow [" + chainFlow.getFlowCode() + "]: skipFlag=true");
            chainContext.addSimuList("The flow [" + chainFlow.getFlowCode() + "]: skipFlag=true<br>=================");
            return "0";
        }
        if (script.size() < 1) {
            log.info("The flow [" + chainFlow.getFlowCode() + "]: there is no statement");
            chainContext.addSimuList("The flow [" + chainFlow.getFlowCode() + "]: there is no statement<br>=================");
            return "0";
        }
        String COM = chainFlow.getAttr1();
        // String pn = chainFlow.getAttr2();
        String userdata = chainContext.getUserdata();
        String[] s = userdata.split("â€»");
        String sqlstr = null;
        ShortInfo sinfo = new ShortInfo(COM);
        for (int i = 0; i < script.size(); i++) {
            sqlstr = script.get(i).toString();
            Iterator iter = chainContext.getDataMapIterator();
            while (iter.hasNext()) {
                DataMapping dataMapping = (DataMapping) iter.next();
                sqlstr = StringUtils.replace(sqlstr, dataMapping.getFieldName(), dataMapping.getFieldMapping());
            }
            sqlstr = FormulaFactory.getInstance().run(sqlstr);
            System.out.println(sqlstr);
            chainContext.addSimuList(sqlstr);
            ret = sinfo.SendShortInfo(s[0], sqlstr);
            System.out.println(ret);
        }
        sinfo.Close();
        return Integer.toString(ret);
    } catch (Exception e) {
        return "98";
    }
}
