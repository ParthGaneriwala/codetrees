@RequestMapping("/tree.do")
public ModelAndView tree(HttpServletRequest request, HttpServletResponse response) {
    String userid = (String) request.getSession().getAttribute("userid");
    String taskid = ServletRequestUtils.getStringParameter(request, "taskid", "0");
    String q = ServletRequestUtils.getStringParameter(request, "q", "");
    String treetype = ServletRequestUtils.getStringParameter(request, "treetype", "checkbox");
    String gpl = ServletRequestUtils.getStringParameter(request, "gpl", "");
    String oper = ServletRequestUtils.getStringParameter(request, "oper", "");
    String[] keywordParts = null;
    if (q != null) {
        q = q.replace("_/", " ");
        keywordParts = q.split(" ");
    }
    int operType = 0;
    if (oper.equals("AND"))
        operType = GeneDao.SEARCH_OPER_AND;
    else if (oper.equals("AND"))
        operType = GeneDao.SEARCH_OPER_OR;
    List<String> gpl2gseList = null;
    Vector<String> gpl2gseListResult = new Vector<String>();
    List<Gse> gseList = null;
    try {
        if (taskid.equals("0")) {
            if (gpl != null) {
                gpl2gseList = geneService.readGpl2gse(gpl);
                gseList = geneService.readGse(keywordParts, GeneDao.ONLY_SUMMARY, operType);
            }
            if (gseList != null) {
                for (int count = 0; count < gseList.size(); count++) {
                    Gse tmpGse = gseList.get(count);
                    if (gpl2gseList.indexOf(tmpGse.getId()) >= 0) {
                        gpl2gseListResult.add(tmpGse.getId());
                    }
                }
            }
        } else {
            gpl2gseList = geneService.readGpl2gse(gpl);
            gseList = geneService.readGseByTaskid(userid, taskid);
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    ModelAndView model = new ModelAndView("tree");
    if (taskid.equals("0")) {
        if (gseList == null) {
            model.addObject("totalSize", gpl2gseList.size());
            model.addObject("gseList", gpl2gseList);
        } else if (gpl2gseListResult != null) {
            model.addObject("totalSize", gpl2gseListResult.size());
            model.addObject("gseList", gpl2gseListResult);
        }
    } else {
        System.out.println("!!!!!!!!!!!!!!!!!!!!!!gse!!! : " + gseList.size());
        System.out.println("!!!!!!!!!!!!!!!!!!!!!!gse!!! : " + gseList.size());
        System.out.println("!!!!!!!!!!!!!!!!!!!!!!gse!!! : " + gseList.size());
        for (int count = 0; count < gseList.size(); count++) {
            Gse tmpGse = gseList.get(count);
            if (gpl2gseList.indexOf(tmpGse.getId()) >= 0) {
                gpl2gseListResult.add(tmpGse.getId());
            }
        }
        model.addObject("totalSize", gpl2gseListResult.size());
        model.addObject("gseList", gpl2gseListResult);
    }
    model.addObject("gpl", gpl);
    model.addObject("treetype", treetype);
    return model;
}
