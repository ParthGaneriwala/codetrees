public static void addAttachments(Report r, Database db, byte[] pdfKey, boolean encrypt, boolean stamp, HttpSession session) throws Exception {
    if (r.type != null && r.id != null) {
        PdfReader original = new PdfReader(new RandomAccessArray(r.getStream()), null);
        int orgPages = original.getNumberOfPages();
        int totalPages = orgPages;
        if (r.type.canPrint()) {
            PdfCopy copy = r.getPdfCopy();
            addPages(copy, original);
            /*
				 * Get the pdfs from the file table
				 */
            ResultSet rs = db.dbQuery("select file from files where id = '" + r.id + "' and type = '" + r.type.getCode() + "' and content_type like '%pdf' and print = 1 order by " + "uploaded desc");
            PdfReader file = null;
            InputStream is;
            while (rs.next()) {
                is = FileServlet.getFileAsInputStream(rs);
                file = new PdfReader(is);
                is.close();
                if (!file.isOpenedWithFullPermissions()) {
                    file.close();
                    is = FileServlet.getFileAsInputStream(rs);
                    file = new PdfReader(is, pdfKey);
                    is.close();
                    if (!file.isOpenedWithFullPermissions()) {
                        file.close();
                        log.debug("addAttachments: unable to open file");
                        break;
                    }
                }
                totalPages += addPages(copy, file);
            }
            rs.getStatement().close();
            /*
				 * Get the non-pdfs out of the file table
				 */
            rs = db.dbQuery(FileImage.getQuery(r.type, r.id));
            Report t = new FileImage(r.type, r.id, rs);
            ByteArrayOutputStream baos;
            t.create(null, null);
            baos = t.getStream();
            if (baos != null) {
                file = new PdfReader(new RandomAccessArray(baos), null);
                totalPages += addPages(copy, file);
            }
            /*
				 * Now look for images in KFW
				 */
            rs = db.dbQuery("select * from kf_documents where id = '" + r.id + "' and type = '" + r.type.getCode() + "' order by document_id", true);
            while (rs.next() && rs.getBoolean("print")) {
                t = new KFWImage(rs.getString("document_id"), session);
                // If we don't have anything let's not add it DUH!
                baos = t.getStream();
                if (baos != null) {
                    file = new PdfReader(new RandomAccessArray(baos), null);
                    totalPages += addPages(copy, file);
                }
            }
            rs.getStatement().close();
        }
        /*
			 * Now stamp the pages
			 */
        if (stamp) {
            log.debug("addAttachments: Stamping the pages with: " + r.type.getCode() + r.id);
            original = new PdfReader(new RandomAccessArray(r.getStream()), null);
            r.stream = new ByteArrayOutputStream();
            PdfStamper stamper = new PdfStamper(original, r.stream);
            if (encrypt) {
                stamper.setEncryption(null, pdfKey, PdfWriter.ALLOW_COPY | PdfWriter.ALLOW_PRINTING, PdfWriter.STANDARD_ENCRYPTION_128);
                log.debug("addAttachments: setting encryption");
            }
            float offset = 0;
            Image image39 = null;
            PdfContentByte under;
            PdfContentByte fake = stamper.getOverContent(1);
            Barcode39 code39 = new Barcode39();
            code39.setCode(r.type.getCode() + r.id);
            code39.setStartStopText(false);
            image39 = code39.createImageWithBarcode(fake, null, null);
            image39.setRotationDegrees(270);
            offset = image39.getScaledWidth() + 10;
            BaseFont bf = BaseFont.createFont(BaseFont.HELVETICA_BOLD, BaseFont.WINANSI, BaseFont.EMBEDDED);
            for (int i = 1; i <= totalPages; i++) {
                under = stamper.getOverContent(i);
                image39.setAbsolutePosition(stamper.getReader().getPageSizeWithRotation(i).getWidth() - offset, 10);
                under.addImage(image39);
                if (i > orgPages) {
                    under.beginText();
                    under.setFontAndSize(bf, 10);
                    under.setTextMatrix(10, 10);
                    under.showText("Contrack ID: " + r.type.getCode() + r.id + "     Page: " + i + " of " + totalPages);
                    under.endText();
                }
            }
            original.close();
            stamper.close();
        }
    }
}
