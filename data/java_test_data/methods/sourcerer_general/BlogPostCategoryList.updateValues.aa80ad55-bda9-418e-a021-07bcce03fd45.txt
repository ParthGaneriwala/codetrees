public void updateValues(Connection db, String[] params, String[] names) throws SQLException {
    boolean commit = db.getAutoCommit();
    try {
        if (commit) {
            db.setAutoCommit(false);
        }
        // Put into something manageable
        ArrayList arrayList = new ArrayList();
        for (int i = 0; i < params.length; i++) {
            arrayList.add(params[i]);
        }
        // BEGIN TRANSACTION
        // Iterate through this article list
        Iterator items = this.iterator();
        while (items.hasNext()) {
            BlogPostCategory thisCategory = (BlogPostCategory) items.next();
            // If item is not in the passed array, then disable the entry
            if (!arrayList.contains(String.valueOf(thisCategory.getId()))) {
                thisCategory.setEnabled(false);
                thisCategory.update(db);
                items.remove();
            }
        }
        // Iterate through the array
        for (int i = 0; i < params.length; i++) {
            if (params[i].startsWith("*")) {
                // TODO: Check to see if a previously disabled entry has the same name,
                // and enable it
                // New item, add it at the correct position
                BlogPostCategory thisCategory = new BlogPostCategory();
                thisCategory.setProjectId(projectId);
                thisCategory.setName(names[i]);
                thisCategory.setLevel(i);
                thisCategory.insert(db);
                this.add(thisCategory);
            } else {
                // Existing item, update the name and position
                updateName(db, Integer.parseInt(params[i]), names[i]);
                updateLevel(db, Integer.parseInt(params[i]), i);
                updateEnabled(db, Integer.parseInt(params[i]), true);
            }
        }
        if (commit) {
            db.commit();
        }
    } catch (Exception e) {
        if (commit) {
            db.rollback();
        }
        throw new SQLException(e.getMessage());
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
}
