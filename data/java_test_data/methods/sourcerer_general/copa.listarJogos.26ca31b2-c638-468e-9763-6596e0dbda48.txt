private void listarJogos(FiltroGrupo f, ComparadorPosicao c) {
    rEnumJogos = null;
    vecJogos.removeAllElements();
    try {
        rEnumJogos = rsJogos.enumerateRecords(f, c, false);
        int posicao = 0;
        while (rEnumJogos.hasNextElement()) {
            int RecordId = rEnumJogos.nextRecordId();
            byte[] dados = rsJogos.getRecord(RecordId);
            ByteArrayInputStream BAIS = new ByteArrayInputStream(dados);
            DataInputStream DIS = new DataInputStream(BAIS);
            String grupoLido = DIS.readUTF();
            String dataLido = DIS.readUTF();
            String time1Lido = DIS.readUTF();
            String time2Lido = DIS.readUTF();
            int golsTime1Lido = DIS.readInt();
            int golsTime2Lido = DIS.readInt();
            int golsPenalti1Lido = DIS.readInt();
            int golsPenalti2Lido = DIS.readInt();
            Jogos jogo = new Jogos(grupoLido, dataLido, time1Lido, time2Lido, golsTime1Lido, golsTime2Lido, golsPenalti1Lido, golsPenalti2Lido, RecordId, posicao);
            vecJogos.addElement(jogo);
            posicao++;
        }
    } catch (Exception exc) {
        mostrarAlerta("Erro na listagem", exc.toString());
    }
}
