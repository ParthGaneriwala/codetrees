private int prepareFilter(PreparedStatement pst) throws SQLException {
    int i = 0;
    if (userId > -1) {
        pst.setInt(++i, userId);
    }
    if (groupId > -1) {
        pst.setInt(++i, groupId);
    }
    if (departmentId > -1) {
        pst.setInt(++i, departmentId);
    }
    if (watchForums != Constants.UNDEFINED) {
        pst.setBoolean(++i, watchForums == Constants.TRUE);
    }
    if (validUser == Constants.TRUE) {
        pst.setBoolean(++i, true);
        pst.setTimestamp(++i, new java.sql.Timestamp(System.currentTimeMillis()));
    }
    if (validUser == Constants.FALSE) {
        pst.setBoolean(++i, false);
        pst.setTimestamp(++i, new java.sql.Timestamp(System.currentTimeMillis()));
    }
    if (username != null) {
        pst.setString(++i, username.toLowerCase());
    }
    if (userIdArray != null && userIdArray.length > 0) {
        int count = 0;
        while (count < userIdArray.length) {
            pst.setInt(++i, Integer.parseInt(userIdArray[count].trim()));
            count++;
        }
    }
    if (searchCriteria != null) {
        if (StringUtils.hasText(searchCriteria.getEmail())) {
            pst.setString(++i, "%" + searchCriteria.getEmail().toLowerCase() + "%");
        }
        if (StringUtils.hasText(searchCriteria.getFirstName())) {
            pst.setString(++i, "%" + searchCriteria.getFirstName().toLowerCase() + "%");
        }
        if (StringUtils.hasText(searchCriteria.getLastName())) {
            pst.setString(++i, "%" + searchCriteria.getLastName().toLowerCase() + "%");
        }
        if (StringUtils.hasText(searchCriteria.getCompany())) {
            pst.setString(++i, "%" + searchCriteria.getCompany().toLowerCase() + "%");
        }
        if (StringUtils.hasText(searchCriteria.getName())) {
            pst.setString(++i, "%" + searchCriteria.getName().toLowerCase() + "%");
        }
        if (StringUtils.hasText(searchCriteria.getName())) {
            pst.setString(++i, "%" + searchCriteria.getName().toLowerCase() + "%");
        }
        if (searchCriteria.getEnabled() != Constants.UNDEFINED) {
            pst.setBoolean(++i, searchCriteria.getEnabled() == Constants.TRUE);
        }
        if (searchCriteria.getRegistered() != Constants.UNDEFINED) {
            pst.setBoolean(++i, searchCriteria.getRegistered() == Constants.TRUE);
        }
        if (searchCriteria.getExpired() != Constants.UNDEFINED) {
            pst.setTimestamp(++i, new java.sql.Timestamp(System.currentTimeMillis()));
        }
        if (searchCriteria.getAdmin() != Constants.UNDEFINED) {
            pst.setBoolean(++i, searchCriteria.getAdmin() == Constants.TRUE);
        }
        if (searchCriteria.getContentEditor() != Constants.UNDEFINED) {
            pst.setBoolean(++i, searchCriteria.getContentEditor() == Constants.TRUE);
        }
        if (StringUtils.hasText(searchCriteria.getActiveProject())) {
            if (searchCriteria.getRoleIds() != null && searchCriteria.getRoleIds().size() > 0) {
                HashMap roleIds = searchCriteria.getRoleIds();
                Iterator operators = roleIds.keySet().iterator();
                while (operators.hasNext()) {
                    String operator = (String) operators.next();
                    ArrayList values = (ArrayList) roleIds.get(operator);
                    Iterator iter = values.iterator();
                    while (iter.hasNext()) {
                        String value = (String) iter.next();
                        if (searchCriteria.getIsTeamMember() == Constants.TRUE) {
                            if (searchCriteria.getIsNotificationEnabled() != Constants.UNDEFINED) {
                                pst.setBoolean(++i, searchCriteria.getIsNotificationEnabled() == Constants.TRUE);
                            }
                        }
                    }
                }
            }
            if (searchCriteria.getRatings() != null && searchCriteria.getRatings().size() > 0) {
                HashMap ratings = searchCriteria.getRatings();
                Iterator operators = ratings.keySet().iterator();
                while (operators.hasNext()) {
                    String operator = (String) operators.next();
                    ArrayList values = (ArrayList) ratings.get(operator);
                    Iterator iter = values.iterator();
                    while (iter.hasNext()) {
                        String value = (String) iter.next();
                        if (searchCriteria.getIsTeamMember() == Constants.TRUE) {
                            if (searchCriteria.getIsNotificationEnabled() != Constants.UNDEFINED) {
                                pst.setBoolean(++i, searchCriteria.getIsNotificationEnabled() == Constants.TRUE);
                            }
                        }
                    }
                }
            }
            if (searchCriteria.getLastViewed() != null && searchCriteria.getLastViewed().size() > 0) {
                HashMap lastViewed = searchCriteria.getLastViewed();
                Iterator operators = lastViewed.keySet().iterator();
                while (operators.hasNext()) {
                    String operator = (String) operators.next();
                    ArrayList values = (ArrayList) lastViewed.get(operator);
                    Iterator iter = values.iterator();
                    while (iter.hasNext()) {
                        String value = (String) iter.next();
                        if (searchCriteria.getIsTeamMember() == Constants.TRUE) {
                            if (searchCriteria.getIsNotificationEnabled() != Constants.UNDEFINED) {
                                pst.setBoolean(++i, searchCriteria.getIsNotificationEnabled() == Constants.TRUE);
                            }
                        }
                    }
                }
            }
        }
    }
    if (guid != null) {
        // From UserUtils.generateGuid
        pst.setString(++i, UserUtils.getPasswordSubStringFromGuid(guid));
        pst.setTimestamp(++i, UserUtils.getEnteredTimestampFromGuid(guid));
        pst.setInt(++i, UserUtils.getUserIdFromGuid(guid));
    }
    if (isAdmin != Constants.UNDEFINED) {
        pst.setBoolean(++i, isAdmin == Constants.TRUE);
    }
    return i;
}
