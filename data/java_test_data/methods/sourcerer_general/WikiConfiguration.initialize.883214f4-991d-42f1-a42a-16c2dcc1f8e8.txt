private void initialize() {
    try {
        this.dataHandlers = new Vector();
        this.namespaces = new HashMap();
        this.parsers = new Vector();
        this.pseudotopics = new Vector();
        this.searchEngines = new Vector();
        this.translations = new HashMap();
        this.userHandlers = new Vector();
        File file = Utilities.getClassLoaderFile(JAMWIKI_CONFIGURATION_FILE);
        Document document = XMLUtil.parseXML(file, false);
        Node node = document.getElementsByTagName(XML_CONFIGURATION_ROOT).item(0);
        NodeList children = node.getChildNodes();
        Node child = null;
        for (int i = 0; i < children.getLength(); i++) {
            child = children.item(i);
            if (child.getNodeName().equals(XML_PARSER_ROOT)) {
                this.parsers = this.parseConfigurationObjects(child, XML_PARSER);
            } else if (child.getNodeName().equals(XML_DATA_HANDLER_ROOT)) {
                this.dataHandlers = this.parseConfigurationObjects(child, XML_DATA_HANDLER);
            } else if (child.getNodeName().equals(XML_SEARCH_ENGINE_ROOT)) {
                this.searchEngines = this.parseConfigurationObjects(child, XML_SEARCH_ENGINE);
            } else if (child.getNodeName().equals(XML_USER_HANDLER_ROOT)) {
                this.userHandlers = this.parseConfigurationObjects(child, XML_USER_HANDLER);
            } else if (child.getNodeName().equals(XML_NAMESPACE_ROOT)) {
                this.parseNamespaces(child);
            } else if (child.getNodeName().equals(XML_PSEUDOTOPIC_ROOT)) {
                this.parsePseudotopics(child);
            } else if (child.getNodeName().equals(XML_TRANSLATION_ROOT)) {
                this.parseTranslations(child);
            } else {
                logUnknownChild(node, child);
            }
        }
        logger.config("Configuration values loaded from " + file.getPath());
    } catch (Exception e) {
        logger.severe("Failure while parsing configuration file " + JAMWIKI_CONFIGURATION_FILE, e);
    }
}
