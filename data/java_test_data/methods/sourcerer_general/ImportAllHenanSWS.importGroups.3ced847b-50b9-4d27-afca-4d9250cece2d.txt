public static void importGroups() throws Exception {
    // TODO Auto-generated method stub
    POIFSFileSystem fs = new POIFSFileSystem(new FileInputStream("c:\\sws.xls"));
    HSSFWorkbook wb = new HSSFWorkbook(fs);
    int numsheets = wb.getNumberOfSheets();
    int directgroup = 18;
    Statement stmt = con.createStatement();
    Map allgroups = new HashMap();
    for (int i = 0; i < numsheets; i++) {
        HSSFSheet sheet = wb.getSheetAt(i);
        String sheetname = wb.getSheetName(i);
        if (sheetname.equals("省直") || sheetname.equals("郑州")) {
            continue;
        }
        if (sheetname.toLowerCase().indexOf("sheet") != -1)
            continue;
        int parentid = getGroupid(con, sheetname);
        // System.out.println(sheetname + ",,," + parentid);
        short s = sheet.getTopRow();
        Iterator _ite = sheet.rowIterator();
        while (_ite.hasNext()) {
            HSSFRow row = (HSSFRow) _ite.next();
            // 事务所名称 地址 行政联络人 电话 执业证号 会员编号 所属律协
            String groupname = HSSFCellToString.toString(row.getCell(0)).trim();
            String groupaddress = HSSFCellToString.toString(row.getCell(1)).trim();
            String contacter = HSSFCellToString.toString(row.getCell(2)).trim();
            String groupphone = HSSFCellToString.toString(row.getCell(3)).trim();
            String groupenname = HSSFCellToString.toString(row.getCell(4)).trim();
            String systemno = HSSFCellToString.toString(row.getCell(5)).trim();
            String district = HSSFCellToString.toString(row.getCell(6)).trim();
            String groupfax = "";
            String postcode = "";
            String createuser = "100331导入";
            String comments = "100331导入";
            if (groupname.indexOf("事务所名称") != -1) {
                continue;
            }
            if (groupname == null || groupname.equals(""))
                break;
            if (allgroups.containsKey(groupenname)) {
                System.out.println(sheetname + "律协的执业证号" + groupenname + "，2个事务所雷同：" + allgroups.get(groupenname) + "和" + groupname + ",导入" + allgroups.get(groupenname) + "," + groupname + "修改为：" + groupenname + "_1");
                groupenname = groupenname + "_1";
            }
            allgroups.put(groupenname, groupname);
            String groupsql = "insert into sys_group(parentid,grouplevel,groupname,groupenname,contacter,phone,fax,address,delflag,grouptype,directgroup,postcode,createuser,createtime,systemno,comments,district)values('" + parentid + "',3,'" + groupname + "','" + groupenname + "','" + contacter + "','" + groupphone + "','" + groupfax + "','" + groupaddress + "',0,1," + directgroup + ",'" + postcode + "','" + createuser + "',now(),'" + systemno + "','" + comments + "','" + district + "')";
            stmt.addBatch(groupsql);
        // System.out.println(groupsql);
        }
        String usersql = "insert into sys_user(groupid,roleid,loginname,password,username,status,delflag,provinceid,cityid,officeid,createuserid,createtime,comments,systemno) " + " select groupid,1,groupenname,'123456',groupname,0,0,directgroup,parentid,groupid,0,now(),comments,systemno from sys_group where parentid=" + parentid + " and grouptype=1";
        // System.out.println(usersql);
        stmt.addBatch(usersql);
        stmt.executeBatch();
        stmt.clearBatch();
    }
    stmt.close();
}
