public void edit(Inscricao inscricao) throws NonexistentEntityException, Exception {
    EntityManager em = null;
    try {
        em = getEntityManager();
        em.getTransaction().begin();
        Inscricao persistentInscricao = em.find(Inscricao.class, inscricao.getId());
        Concurso concursoOld = persistentInscricao.getConcurso();
        Concurso concursoNew = inscricao.getConcurso();
        Candidato candidatoOld = persistentInscricao.getCandidato();
        Candidato candidatoNew = inscricao.getCandidato();
        if (concursoNew != null) {
            concursoNew = em.getReference(concursoNew.getClass(), concursoNew.getId());
            inscricao.setConcurso(concursoNew);
        }
        if (candidatoNew != null) {
            candidatoNew = em.getReference(candidatoNew.getClass(), candidatoNew.getId());
            inscricao.setCandidato(candidatoNew);
        }
        inscricao = em.merge(inscricao);
        if (concursoOld != null && !concursoOld.equals(concursoNew)) {
            concursoOld.getInscricoes().remove(inscricao);
            concursoOld = em.merge(concursoOld);
        }
        if (concursoNew != null && !concursoNew.equals(concursoOld)) {
            concursoNew.getInscricoes().add(inscricao);
            concursoNew = em.merge(concursoNew);
        }
        if (candidatoOld != null && !candidatoOld.equals(candidatoNew)) {
            candidatoOld.setInscricao(null);
            candidatoOld = em.merge(candidatoOld);
        }
        if (candidatoNew != null && !candidatoNew.equals(candidatoOld)) {
            Inscricao oldInscricaoOfCandidato = candidatoNew.getInscricao();
            if (oldInscricaoOfCandidato != null) {
                oldInscricaoOfCandidato.setCandidato(null);
                oldInscricaoOfCandidato = em.merge(oldInscricaoOfCandidato);
            }
            candidatoNew.setInscricao(inscricao);
            candidatoNew = em.merge(candidatoNew);
        }
        em.getTransaction().commit();
    } catch (Exception ex) {
        String msg = ex.getLocalizedMessage();
        if (msg == null || msg.length() == 0) {
            long id = inscricao.getId();
            if (findInscricao(id) == null) {
                throw new NonexistentEntityException("The inscricao with id " + id + " no longer exists.");
            }
        }
        throw ex;
    } finally {
        if (em != null) {
            em.close();
        }
    }
}
