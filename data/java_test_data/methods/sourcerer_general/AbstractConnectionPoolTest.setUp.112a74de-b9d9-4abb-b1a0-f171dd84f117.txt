protected void setUp() throws Exception {
    DATABASE_URL = PropertyManager.getProperty("TEST.SITE.URL", PropertyManager.getProperty("SITE.URL"));
    DATABASE_USER = PropertyManager.getProperty("TEST.SITE.USER", PropertyManager.getProperty("SITE.USER"));
    DATABASE_PASSWORD = PropertyManager.getProperty("TEST.SITE.PASSWORD", PropertyManager.getProperty("SITE.PASSWORD"));
    DATABASE_DRIVER = PropertyManager.getProperty("TEST.SITE.DRIVER", PropertyManager.getProperty("SITE.DRIVER"));
    mockPrefs.add("FILELIBRARY", System.getProperty("java.io.tmpdir") + "/test-fileLibrary-" + System.currentTimeMillis() + File.separator);
    mockPrefs.add("TITLE", PropertyManager.getProperty("TEST.TITLE", PropertyManager.getProperty("TITLE")));
    connectionPool = new ConnectionPool();
    connectionPool.setDebug(false);
    connectionPool.setTestConnections(false);
    connectionPool.setAllowShrinking(true);
    connectionPool.setMaxConnections(5);
    connectionPool.setMaxIdleTime(60000);
    connectionPool.setMaxDeadTime(1000000);
    // Test a connection
    ce = new ConnectionElement(DATABASE_URL, DATABASE_USER, DATABASE_PASSWORD);
    ce.setDriver(DATABASE_DRIVER);
    db = connectionPool.getConnection(ce);
    assertTrue("The database connection was null.", db != null);
    CacheManager.create();
    CacheContext cacheContext = new CacheContext();
    // Give the cache manager its own connection pool... this can speed up the web-tier
    // when background processing is occurring
    cacheContext.setConnectionPool(connectionPool);
    cacheContext.setConnectionElement(ce);
    cacheContext.setApplicationPrefs(mockPrefs);
    Caches.addCaches(cacheContext);
}
