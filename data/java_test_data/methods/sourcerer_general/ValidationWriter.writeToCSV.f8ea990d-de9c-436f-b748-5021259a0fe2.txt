public static synchronized void writeToCSV(String file, Algorithms algorithm, Dataset result, Map<String, String> params) {
    CIndex ci = new CIndex();
    float cindex = ci.calculateIndex(result);
    DBIndex dbindex = new DBIndex();
    float db = dbindex.calculateIndex(result);
    DunnIndex di = new DunnIndex();
    float dunnIndex = di.calculateIndex(result);
    FowlkesMallowsIndex fmIndex = new FowlkesMallowsIndex();
    float fowlkesMallows = fmIndex.calculateIndex(result);
    JaccardIndex jaccardIndex = new JaccardIndex();
    float ji = jaccardIndex.calculateIndex(result);
    RandIndex randIndex = new RandIndex();
    float ri = randIndex.calculateIndex(result);
    SilhouetteIndex siIndex = new SilhouetteIndex();
    float si = siIndex.calculateIndex(result);
    BPIndex bpIndex = new BPIndex();
    float bipartiteIndex = bpIndex.calculateIndex(result);
    CalinskiHarabasz chIndex = new CalinskiHarabasz();
    float ch = chIndex.calculateIndex(result);
    String indices = cindex + "#" + db + "#" + dunnIndex + "#" + fowlkesMallows + "#" + ji + "#" + ri + "#" + si + "#" + bipartiteIndex + "#" + ch;
    Map<Integer, Cluster> clustermap = result.getClustermap();
    String numberOfFeatureVectors = String.valueOf(result.size());
    String dimensionOfVectors = String.valueOf(result.get(0).getDimension());
    String unclassified = (clustermap.get(FeatureVector.UNCLASSIFIED) == null) ? "0" : String.valueOf(clustermap.get(FeatureVector.UNCLASSIFIED).size());
    String numberOfClust = String.valueOf(result.getClustermap().size());
    String basicInfos = numberOfFeatureVectors + "#" + dimensionOfVectors + "#" + numberOfClust + "#" + unclassified + "#";
    String algorithmInfos = ValidationWriter.getAlgorithmInfos(algorithm, params);
    String line = algorithmInfos + basicInfos + indices;
    CSVWriter writer = null;
    String header = null;
    File output = new File(file);
    if (!output.exists()) {
        header = ALGORITHM_LABEL + "#" + LEADER_EPSILON_LABEL + "#" + KMEANS_K_LABEL + "#" + NUM_OF_VECT + "#" + VECT_DIM + "#" + NUM_OF_CLUST + "#" + UNCLASSIFIED_VECTS + "#" + CINDEX_LABEL + "#" + DBINDEX_LABEL + "#" + DUNNINDEX_LABEL + "#" + FM_LABEL + "#" + JACCARD_LABEL + "#" + RAND_LABEL + "#" + SIHLOUETTE_LABEL + "#" + BIPARTIE_LABEL + "#" + CH_LABEL;
    }
    try {
        FileWriter fw = new FileWriter(file, true);
        // feed in your array (or convert your data to an array)
        String[] entries = line.split("#");
        writer = new CSVWriter(fw, '\t');
        if (header != null) {
            writer.writeNext(header.split("#"));
        }
        writer.writeNext(entries);
    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } finally {
        if (writer != null) {
            try {
                writer.close();
            } catch (IOException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
    }
}
