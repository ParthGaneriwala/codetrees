private void printExp(BINOP e, int i) {
    ident(i);
    switch(e.binop) {
        case BINOP.AND:
            print("(binop.and");
            break;
        case BINOP.ARSHIFT:
            print("(binop.arshift");
            break;
        case BINOP.DIV:
            print("(binop.div");
            break;
        case BINOP.LSHIFT:
            print("(binop.lshift");
            break;
        case BINOP.MINUS:
            print("(binop.minus");
            break;
        case BINOP.OR:
            print("(binop.or");
            break;
        case BINOP.PLUS:
            print("(binop.plus");
            break;
        case BINOP.RSHIFT:
            print("(binop.rshift");
            break;
        case BINOP.TIMES:
            print("(binop.times");
            break;
        case BINOP.XOR:
            print("(binop.xor");
            break;
        default:
            print("(binop.?");
            break;
    }
    println();
    printExp(e.left, i + 1);
    print(",");
    println();
    printExp(e.right, i + 1);
    println();
    ident(i);
    print("binop.end)");
}
