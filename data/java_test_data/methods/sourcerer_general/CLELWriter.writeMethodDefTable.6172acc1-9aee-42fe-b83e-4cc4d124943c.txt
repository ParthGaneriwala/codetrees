private void writeMethodDefTable(byte[] text, int off, StreamTable st) {
    ArrayList<StreamTableRow> rows = st.getRows();
    StreamTableRow str;
    int i;
    int row_off = off;
    for (i = 0; i < rows.size(); i++) {
        str = rows.get(i);
        insertInt(text, row_off, str.getMethodDefRVA());
        insertShort(text, row_off + 4, (short) str.getMethodDefImplFlags());
        insertShort(text, row_off + 6, (short) str.getMethodDefFlags());
        row_off += 8;
        if (parser.getStringsHeap().size() < 0xffff) {
            insertShort(text, row_off, (short) str.getMethodDefName());
            row_off += 2;
        } else {
            insertInt(text, row_off, str.getMethodDefName());
            row_off += 4;
        }
        if (parser.getBlobHeap().size() < 0xffff) {
            insertShort(text, row_off, (short) str.getMethodDefSignature());
            row_off += 2;
        } else {
            insertInt(text, row_off, str.getMethodDefSignature());
            row_off += 4;
        }
        StreamTable st_size = parser.getPoundTildaStream().getStreamTable(CLELConstants.PARAM_TABLE);
        if (st_size == null || st_size.getRows().size() < 0xffff) {
            insertShort(text, row_off, (short) str.getMethodDefParamList());
            row_off += 2;
        } else {
            insertInt(text, row_off, str.getMethodDefParamList());
            row_off += 4;
        }
    }
}
