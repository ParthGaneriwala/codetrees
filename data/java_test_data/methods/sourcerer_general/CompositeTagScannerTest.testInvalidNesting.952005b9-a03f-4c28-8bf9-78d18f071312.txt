public void testInvalidNesting() throws ParserException {
    String html = "<table cellspacing=\"2\" cellpadding=\"0\" border=\"0\" width=\"600\">\n" + "<tr>\n" + "<td><div class=\"ScoreBoardSec\">&nbsp;<a  target=\"_parent\" class=\"ScoreBoardSec\" href=\"http://www.nba.com/heat/\">Heat</a><div></td>\n" + "</tr>\n" + "</table>";
    createParser(html);
    parseAndAssertNodeCount(1);
    assertType("table", TableTag.class, node[0]);
    TableTag table = (TableTag) node[0];
    assertTrue("table should have 3 nodes", 3 == table.getChildCount());
    assertType("row", TableRow.class, table.childAt(1));
    TableRow row = (TableRow) table.childAt(1);
    assertTrue("row should have 3 nodes", 3 == row.getChildCount());
    assertType("column", TableColumn.class, row.childAt(1));
    TableColumn column = (TableColumn) row.childAt(1);
    assertTrue("column should have 1 node", 1 == column.getChildCount());
    assertType("element", Div.class, column.childAt(0));
    Div div = (Div) column.childAt(0);
    assertTrue("div should have 3 nodes", 3 == div.getChildCount());
    assertType("link", LinkTag.class, div.childAt(1));
    LinkTag link = (LinkTag) div.childAt(1);
    assertTrue("link contents", link.getLink().equals("http://www.nba.com/heat/"));
    assertType("bogus div", Div.class, div.childAt(2));
    assertTrue("bogus div should have no children", 0 == ((Div) div.childAt(2)).getChildCount());
}
