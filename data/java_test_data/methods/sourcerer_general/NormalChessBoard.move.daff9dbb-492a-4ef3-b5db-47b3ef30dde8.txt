public Boolean move(Move m) {
    if (checkMove(m) == false) {
        if (matrix.get(m.to.x).get(m.to.y) != null && matrix.get(m.to.x).get(m.to.y).getColor() == player)
            return false;
        setChanged();
        notifyObservers(new EventInfo(EventInfo.Type.ILLEGAL));
        return false;
    }
    if (player == Piece.Color.WHITE)
        player = Piece.Color.BLACK;
    else
        player = Piece.Color.WHITE;
    /*Castling*/
    if (m.from.equals(new Position(0, 0)) || m.to.equals(new Position(0, 0)))
        wCastleLeft = false;
    if (m.from.equals(new Position(7, 0)) || m.to.equals(new Position(7, 0)))
        wCastleRight = false;
    if (m.from.equals(new Position(0, 7)) || m.to.equals(new Position(0, 7)))
        bCastleLeft = false;
    if (m.from.equals(new Position(7, 7)) || m.to.equals(new Position(7, 7)))
        bCastleRight = false;
    if (m.from.equals(new Position(4, 0)) && m.from.equals(king[0])) {
        wCastleLeft = false;
        wCastleRight = false;
        if (m.to.equals(new Position(6, 0))) {
            Castle(m);
            return true;
        }
        if (m.to.equals(new Position(2, 0))) {
            Castle(m);
            return true;
        }
    }
    if (m.from.equals(new Position(4, 7)) && m.from.equals(king[1])) {
        bCastleLeft = false;
        bCastleRight = false;
        if (m.to.equals(new Position(6, 7))) {
            Castle(m);
            return true;
        }
        if (m.to.equals(new Position(2, 7))) {
            Castle(m);
            return true;
        }
    }
    /*Castling End*/
    if (// 0 : 1 reversed, since player has already switched
    king[player == Piece.Color.WHITE ? 1 : 0].equals(m.from))
        king[player == Piece.Color.WHITE ? 1 : 0].setPosition(m.to);
    /*Promotion*/
    if (matrix.get(m.from.x).get(m.from.y).getType() == Piece.Type.PAWN) {
        if (// White has just moved
        player == Piece.Color.BLACK && m.to.y == 7)
            matrix.get(m.from.x).set(m.from.y, new NormalQueen(Piece.Color.WHITE, this, m.to));
        else if (// Black has just moved
        player == Piece.Color.BLACK && m.to.y == 0)
            matrix.get(m.from.x).set(m.from.y, new NormalQueen(Piece.Color.BLACK, this, m.to));
    }
    Piece piece = matrix.get(m.from.x).get(m.from.y);
    // flytte brikket til ny position
    matrix.get(m.to.x).set(m.to.y, piece);
    // slet brikket fra tidligere position
    matrix.get(m.from.x).set(m.from.y, null);
    piece.setPosition(m.to);
    pieceSelected = false;
    setChanged();
    notifyObservers(new EventInfo(m));
    if (enPassant) {
        if (// Black has just moved
        player == Piece.Color.WHITE) {
            if (m.to.equals(toEnPassant) && m.from.y == (toEnPassant.y + 1) && (m.from.x == (toEnPassant.x + 1) || m.from.x == (toEnPassant.x - 1))) {
                matrix.get(m.to.x).set(m.to.y + 1, null);
                setChanged();
                notifyObservers(new EventInfo(new Move(toEnPassant, new Position(toEnPassant.x, toEnPassant.y + 1))));
            }
        } else // White has just moved
        {
            if (m.to.equals(toEnPassant) && m.from.y == (toEnPassant.y - 1) && (m.from.x == (toEnPassant.x + 1) || m.from.x == (toEnPassant.x - 1))) {
                matrix.get(m.to.x).set(m.to.y - 1, null);
                setChanged();
                notifyObservers(new EventInfo(new Move(toEnPassant, new Position(toEnPassant.x, toEnPassant.y - 1))));
            }
        }
    }
    // En passant
    enPassant = false;
    if (// Black has just moved
    player == Piece.Color.WHITE) {
        if (m.from.y == 6 && m.to.y == 4 && piece.getType() == Piece.Type.PAWN) {
            enPassant = true;
            toEnPassant = new Position(m.from.x, 5);
        }
    } else // White has just moved
    {
        if (m.from.y == 1 && m.to.y == 3 && piece.getType() == Piece.Type.PAWN) {
            enPassant = true;
            toEnPassant = new Position(m.from.x, 2);
        }
    }
    /*Gameover?*/
    if (noMoves()) {
        if (inCheck(king[player == Piece.Color.WHITE ? 0 : 1])) {
            gameover = true;
            setChanged();
            notifyObservers(new EventInfo("kongenErMat.wav"));
            setChanged();
            notifyObservers(new EventInfo(player == Piece.Color.WHITE ? Piece.Color.BLACK : Piece.Color.WHITE));
        } else {
            gameover = true;
            setChanged();
            notifyObservers(new EventInfo(EventInfo.Type.DRAW));
        }
    } else if (inCheck(king[player == Piece.Color.WHITE ? 0 : 1])) {
        setChanged();
        notifyObservers(new EventInfo(EventInfo.Type.CHECK));
    }
    return true;
}
