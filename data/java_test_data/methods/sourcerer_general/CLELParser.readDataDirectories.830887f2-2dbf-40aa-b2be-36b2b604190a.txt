private void readDataDirectories() throws IOException {
    TableLocation exported = null, importt = null, resource = null, exception = null;
    TableLocation certificate = null, baserelocation = null, debug = null, copyright = null;
    TableLocation global = null, tls = null, loadconfig = null, bound = null, iat = null;
    TableLocation delay = null, clrheader = null, reserved = null;
    try {
        exported = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        importt = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        resource = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        exception = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        certificate = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        baserelocation = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        debug = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        copyright = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        global = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        tls = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        loadconfig = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        bound = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        iat = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        delay = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        clrheader = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
        reserved = new TableLocation(Tools.LittleToBigEndian(inFile.readLong()));
    } catch (IOException ioe) {
        System.out.println("Error: reading Data Directories");
        ioe.printStackTrace();
        throw ioe;
    }
    dataDirectories = new DataDirectories(exported, importt, resource, exception, certificate, baserelocation, debug, copyright, global, tls, loadconfig, bound, iat, delay, clrheader, reserved);
    Offset += CLELConstants.DATADIRECTORIES_SIZE;
}
