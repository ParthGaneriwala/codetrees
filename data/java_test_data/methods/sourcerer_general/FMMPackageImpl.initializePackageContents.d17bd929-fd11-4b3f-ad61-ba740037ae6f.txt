public void initializePackageContents() {
    if (isInitialized)
        return;
    isInitialized = true;
    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);
    // Obtain other dependent packages
    MediatorPackage theMediatorPackage = (MediatorPackage) EPackage.Registry.INSTANCE.getEPackage(MediatorPackage.eNS_URI);
    // Add subpackages
    getESubpackages().add(theMediatorPackage);
    // Create type parameters
    ETypeParameter fStructuralSemanticLinkEClass_S = addETypeParameter(fStructuralSemanticLinkEClass, "S");
    ETypeParameter fRoleEClass_S = addETypeParameter(fRoleEClass, "S");
    // Set bounds for type parameters
    EGenericType g1 = createEGenericType(this.getFStructure());
    fStructuralSemanticLinkEClass_S.getEBounds().add(g1);
    g1 = createEGenericType(this.getFStructure());
    fRoleEClass_S.getEBounds().add(g1);
    // Add supertypes to classes
    fDeclarableEClass.getESuperTypes().add(this.getFStructure());
    fInstantiableEClass.getESuperTypes().add(this.getFStructure());
    fStructuralSemanticLinkEClass.getESuperTypes().add(this.getFSemanticLink());
    g1 = createEGenericType(this.getFStructuralSemanticLink());
    EGenericType g2 = createEGenericType(this.getFDeclarable());
    g1.getETypeArguments().add(g2);
    fStructureDeclarationEClass.getEGenericSuperTypes().add(g1);
    g1 = createEGenericType(this.getFStructuralSemanticLink());
    g2 = createEGenericType(this.getFInstantiable());
    g1.getETypeArguments().add(g2);
    fStructureInstantiationEClass.getEGenericSuperTypes().add(g1);
    // Initialize classes and features; add operations and parameters
    initEClass(fStructureEClass, FStructure.class, "FStructure", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFStructure_StructureID(), ecorePackage.getEString(), "structureID", null, 1, 1, FStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    g1 = createEGenericType(this.getFStructuralSemanticLink());
    g2 = createEGenericType();
    g1.getETypeArguments().add(g2);
    initEReference(getFStructure_SemanticLink(), g1, null, "semanticLink", null, 0, -1, FStructure.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    EOperation op = addEOperation(fStructureEClass, ecorePackage.getEBoolean(), "equals", 1, 1, IS_UNIQUE, IS_ORDERED);
    addEParameter(op, ecorePackage.getEJavaObject(), "o", 1, 1, IS_UNIQUE, IS_ORDERED);
    op = addEOperation(fStructureEClass, ecorePackage.getEBoolean(), "addSemanticLinkIfUnique", 1, 1, IS_UNIQUE, IS_ORDERED);
    g1 = createEGenericType(this.getFStructuralSemanticLink());
    g2 = createEGenericType();
    g1.getETypeArguments().add(g2);
    addEParameter(op, g1, "semanticLink", 1, 1, IS_UNIQUE, IS_ORDERED);
    op = addEOperation(fStructureEClass, this.getFSourceReference(), "findOrCreateSourceReference", 1, 1, IS_UNIQUE, IS_ORDERED);
    addEParameter(op, ecorePackage.getEInt(), "offset", 1, 1, IS_UNIQUE, IS_ORDERED);
    addEParameter(op, ecorePackage.getEInt(), "length", 1, 1, IS_UNIQUE, IS_ORDERED);
    initEClass(fDeclarableEClass, FDeclarable.class, "FDeclarable", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEClass(fInstantiableEClass, FInstantiable.class, "FInstantiable", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEClass(fSemanticLinkEClass, FSemanticLink.class, "FSemanticLink", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEClass(fStructuralSemanticLinkEClass, FStructuralSemanticLink.class, "FStructuralSemanticLink", IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFStructuralSemanticLink_SourceReference(), this.getFSourceReference(), null, "sourceReference", null, 1, 1, FStructuralSemanticLink.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    op = addEOperation(fStructuralSemanticLinkEClass, ecorePackage.getEBoolean(), "equals", 1, 1, IS_UNIQUE, IS_ORDERED);
    addEParameter(op, ecorePackage.getEJavaObject(), "o", 1, 1, IS_UNIQUE, IS_ORDERED);
    initEClass(fStructureDeclarationEClass, FStructureDeclaration.class, "FStructureDeclaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEClass(fStructureInstantiationEClass, FStructureInstantiation.class, "FStructureInstantiation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEClass(fSourceReferenceEClass, FSourceReference.class, "FSourceReference", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFSourceReference_Offset(), ecorePackage.getEInt(), "offset", null, 1, 1, FSourceReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFSourceReference_Length(), ecorePackage.getEInt(), "length", null, 1, 1, FSourceReference.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    op = addEOperation(fSourceReferenceEClass, ecorePackage.getEBoolean(), "equals", 1, 1, IS_UNIQUE, IS_ORDERED);
    addEParameter(op, ecorePackage.getEJavaObject(), "o", 1, 1, IS_UNIQUE, IS_ORDERED);
    initEClass(fPatternEClass, FPattern.class, "FPattern", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getFPattern_Name(), ecorePackage.getEString(), "name", null, 1, 1, FPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    g1 = createEGenericType(this.getFRole());
    g2 = createEGenericType(this.getFStructure());
    g1.getETypeArguments().add(g2);
    initEReference(getFPattern_Role(), g1, null, "role", null, 1, -1, FPattern.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEClass(fRoleEClass, FRole.class, "FRole", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    g1 = createEGenericType(fRoleEClass_S);
    initEReference(getFRole_PlayedBy(), g1, null, "playedBy", null, 1, 1, FRole.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFRole_MinCardinality(), ecorePackage.getEInt(), "minCardinality", null, 1, 1, FRole.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getFRole_MaxCardinality(), ecorePackage.getEInt(), "maxCardinality", null, 1, 1, FRole.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    g1 = createEGenericType(fRoleEClass_S);
    initEReference(getFRole_Collaborator(), g1, null, "collaborator", null, 0, -1, FRole.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEClass(fFrameworkEClass, FFramework.class, "FFramework", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFFramework_Structure(), this.getFStructure(), null, "structure", null, 0, -1, FFramework.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getFFramework_SemanticLink(), this.getFSemanticLink(), null, "semanticLink", null, 0, -1, FFramework.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    op = addEOperation(fFrameworkEClass, null, "getStructure", 0, -1, IS_UNIQUE, IS_ORDERED);
    ETypeParameter t1 = addETypeParameter(op, "T");
    g1 = createEGenericType(this.getFStructure());
    t1.getEBounds().add(g1);
    g1 = createEGenericType(ecorePackage.getEJavaClass());
    g2 = createEGenericType(t1);
    g1.getETypeArguments().add(g2);
    addEParameter(op, g1, "type", 0, 1, IS_UNIQUE, IS_ORDERED);
    g1 = createEGenericType(t1);
    initEOperation(op, g1);
    // Create resource
    createResource(eNS_URI);
}
