public String viewCall(String callId) {
    CallSession callSession = _sessionManager.get(callId);
    if (callSession == null)
        return "No call with ID " + callId + " found";
    StringBuilder sb = new StringBuilder();
    try {
        sb.append("+ ").append(callId).append('\n');
        CSession cSession = (CSession) callSession;
        Iterator<AppSession> it = cSession._appSessions.iterator();
        sb.append("\t+ [appSessions]\n");
        while (it.hasNext()) printAppSession(sb, it.next());
        Iterator<ClientTransaction> it2 = cSession._clientTransactions.iterator();
        if (it2.hasNext())
            sb.append("\t+ [clientTransaction]\n");
        while (it2.hasNext()) sb.append("\t\t+ ").append(it2.next()).append('\n');
        Iterator<ServerTransaction> it3 = cSession._serverTransactions.iterator();
        if (it3.hasNext())
            sb.append("\t+ [serverTransaction]\n");
        while (it3.hasNext()) sb.append("\t\t+ ").append(it3.next()).append('\n');
        Iterator<TimerTask> it4 = cSession._timers.iterator();
        if (it4.hasNext())
            sb.append("\t+ [Timers]\n");
        while (it4.hasNext()) {
            TimerTask task = it4.next();
            sb.append("\t\t+ ").append(task).append('\n');
            printAttr(sb, "class", task.getRunnable().getClass().getName());
            printAttr(sb, "executionTime", new Date(task.getExecutionTime()));
        }
    } catch (Exception e) {
        sb.append("\n\n").append(e);
        Log.warn(e);
    }
    return sb.toString();
}
