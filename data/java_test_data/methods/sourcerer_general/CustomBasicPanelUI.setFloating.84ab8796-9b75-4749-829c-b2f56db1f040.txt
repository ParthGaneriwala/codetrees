public void setFloating(boolean b, Point p) {
    if (panel.isFloatable() == true) {
        boolean visible = false;
        Window ancestor = SwingUtilities.getWindowAncestor(panel);
        if (ancestor != null) {
            visible = ancestor.isVisible();
        }
        if (dragWindow != null) {
            dragWindow.setVisible(false);
        }
        this.floating = b;
        if (floatingWindow == null) {
            floatingWindow = createFloatingWindow(panel);
        }
        if (b == true) {
            if (dockingSource == null) {
                dockingSource = panel.getParent();
                dockingSource.remove(panel);
            }
            constraintBeforeFloating = calculateConstraint();
            if (propertyListener != null)
                UIManager.addPropertyChangeListener(propertyListener);
            floatingWindow.getContentPane().add(panel, BorderLayout.CENTER);
            if (floatingWindow instanceof Window) {
                ((Window) floatingWindow).setPreferredSize(new Dimension(300, 200));
                ((Window) floatingWindow).setLocation(floatingX, floatingY);
                if (visible) {
                    ((Window) floatingWindow).setVisible(true);
                } else {
                    ancestor.addWindowListener(new WindowAdapter() {

                        public void windowOpened(WindowEvent e) {
                            ((Window) floatingWindow).setVisible(true);
                        }
                    });
                }
            }
        } else {
            if (floatingWindow == null)
                floatingWindow = createFloatingWindow(panel);
            if (floatingWindow instanceof Window)
                ((Window) floatingWindow).setVisible(false);
            floatingWindow.getContentPane().remove(panel);
            String constraint = getDockingConstraint(dockingSource, p);
            if (constraint == null) {
                constraint = BorderLayout.NORTH;
            }
            if (dockingSource == null)
                dockingSource = panel.getParent();
            if (propertyListener != null)
                UIManager.removePropertyChangeListener(propertyListener);
            dockingSource.add(constraint, panel);
        }
        dockingSource.invalidate();
        Container dockingSourceParent = dockingSource.getParent();
        if (dockingSourceParent != null)
            dockingSourceParent.validate();
        dockingSource.repaint();
    }
}
