private void initForLandmark() {
    JTabbedPane envelopsPane = MapineerFrame.getFrame().getNetworksTabPane();
    String tabName = envelopsPane.getTitleAt(envelopsPane.getSelectedIndex());
    NetworkTable table = NetworkFactory.getTable(tabName);
    LoisTableModel model = (LoisTableModel) table.getModel();
    if (PopupListener.getWaypointer() == null) {
        String label = getLabel(model);
        labelTextField.setText(label);
        lonTextField.setText(MapineerFrame.getFrame().getLonTextField().getText());
        latTextField.setText(MapineerFrame.getFrame().getLatTextField().getText());
        xTextField.setText(MapineerFrame.getFrame().getXTextField().getText());
        yTextField.setText(MapineerFrame.getFrame().getYTextField().getText());
    } else {
        Landmark landmark = (Landmark) PopupListener.getWaypointer();
        descrTextField.setText(landmark.getDescr());
        labelTextField.setText(landmark.getLabel());
        lonTextField.setText(landmark.getLon());
        latTextField.setText(landmark.getLat());
        xTextField.setText(landmark.getX() + "");
        yTextField.setText(landmark.getY() + "");
        audioTextField.setText(landmark.getAudio());
        this.setCategories(landmark.getCategories());
        MobisodesTableModel mobiModel = (MobisodesTableModel) this.mobisodesTable.getModel();
        mobiModel.setMobisodes(landmark.getMobisodes());
    // MapineerFrame.getFrame().setDirty(false);
    }
    labelTextField.setEditable(false);
    lonTextField.setEditable(true);
    latTextField.setEditable(true);
    xTextField.setEditable(true);
    yTextField.setEditable(true);
}
