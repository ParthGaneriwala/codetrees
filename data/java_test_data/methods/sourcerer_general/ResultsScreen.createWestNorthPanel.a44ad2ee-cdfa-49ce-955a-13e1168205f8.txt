private JPanel createWestNorthPanel() {
    JPanel wnPan = new JPanel();
    // wnPan.setBackground(Color.BLUE);
    wnPan.setPreferredSize(new Dimension(0, getSize().height / 6));
    wnPan.setMaximumSize(new Dimension(Integer.MAX_VALUE, getSize().height / 6));
    wnPan.setLayout(new BoxLayout(wnPan, BoxLayout.X_AXIS));
    JButton buttonSelectAll = new JButton("Select All");
    buttonSelectAll.setToolTipText("Selects or unselects all of the tick boxes on this page");
    buttonSelectAll.setPreferredSize(buttonDim);
    buttonSelectAll.addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent event) {
            boolean allSelected = true;
            for (int i = 0; i < m_table.getRowCount(); i++) {
                if (!(Boolean) m_table.getValueAt(i, 0)) {
                    allSelected = false;
                    break;
                }
            }
            // if they were all true then we want
            allSelected = !allSelected;
            // true;
            for (int i = 0; i < m_table.getRowCount(); i++) {
                m_table.setValueAt(allSelected, i, 0);
            }
        }
    });
    JLabel labNumOfResults = new JLabel("Entrys Per Page? ");
    final JTextField wnField = new JTextField();
    wnField.setPreferredSize(buttonDim);
    // nField.setSize(buttonDim);
    wnField.setMaximumSize(buttonDim);
    wnField.setText(((ResultsTableModel) m_table.getModel()).getEntriesPerPageIdeal() + "");
    wnField.addCaretListener(new CaretListener() {

        @Override
        public void caretUpdate(CaretEvent arg0) {
            String textWnField = wnField.getText();
            if (textWnField.equals("")) {
                return;
            }
            try {
                int intwnField = Integer.parseInt(textWnField);
                if (intwnField > 0) {
                    ((ResultsTableModel) m_table.getModel()).setEntriesPerPageIdeal(intwnField);
                } else if (intwnField < 0) {
                    throw new NumberFormatException();
                }
            } catch (NumberFormatException e) {
                final String temp = ((ResultsTableModel) m_table.getModel()).getEntriesPerPageIdeal() + "";
                // uglyest bit of code ever
                // the setText method can not be called if the user is in
                // the middle of editing it
                // this creates a new thread that sets the text the moment
                // it can be set
                EventQueue.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        wnField.setText(temp);
                    }
                });
            }
        }
    });
    labNumOfResults.setLabelFor(wnField);
    JButton buttonNextPage = new JButton("Next");
    buttonNextPage.setToolTipText("Lets you see the next page of data");
    buttonNextPage.setPreferredSize(buttonDim);
    buttonNextPage.addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent event) {
            ((ResultsTableModel) m_table.getModel()).displayNextPage();
        }
    });
    JButton buttonPrevPage = new JButton("Previous");
    buttonPrevPage.setToolTipText("Lets you see the previous page of data");
    buttonPrevPage.setPreferredSize(buttonDim);
    buttonPrevPage.addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent event) {
            ((ResultsTableModel) m_table.getModel()).displayPrevPage();
        }
    });
    wnPan.add(Box.createHorizontalGlue());
    wnPan.add(buttonSelectAll);
    wnPan.add(Box.createHorizontalGlue());
    wnPan.add(labNumOfResults);
    wnPan.add(wnField);
    wnPan.add(Box.createHorizontalGlue());
    wnPan.add(buttonPrevPage);
    wnPan.add(Box.createHorizontalGlue());
    wnPan.add(buttonNextPage);
    wnPan.add(Box.createHorizontalGlue());
    return wnPan;
}
