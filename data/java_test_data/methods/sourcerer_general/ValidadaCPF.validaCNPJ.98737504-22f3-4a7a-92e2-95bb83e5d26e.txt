public static boolean validaCNPJ(String CNPJOriginal) {
    /* Remove os caracters */
    String cnpj = CNPJOriginal.replaceAll("[^0-9]*", "");
    /* Seleciona os d�gitos verificadores */
    int primeiroDigito = 0;
    int segundoDigito = 0;
    /* Resto */
    int resto = 0;
    /* Vari�veis para o calculo*/
    int constante;
    int soma;
    /* Resultado */
    boolean isValido = true;
    /* Verifica a quantidade de digitos do CNPJ informado. 
		 * Caso for diferente que 14 o CNPJ est� errado
		 */
    if (cnpj.length() != 14)
        return false;
    /* Calcula o segundo d�gito */
    constante = 6;
    soma = 0;
    for (int i = 0; i < (cnpj.length() - 1); i++) {
        soma += (Integer.parseInt(String.valueOf(cnpj.charAt(i))) * constante);
        if (constante == 2)
            constante = 9;
        else
            constante--;
    }
    /**
     * Se o resto for 0 ou 1
     * O primeiroDigito � igual [0] (zero)
     * Se for 2, 3, 4, 5, 6, 7, 8, 9 ou 10
     * O primeiroDigito � igual [11 - resto]
     */
    resto = soma % 11;
    if (resto < 2)
        primeiroDigito = 0;
    else
        primeiroDigito = 11 - resto;
    /* Calcula o primeiro d�gito */
    constante = 5;
    soma = 0;
    for (int i = 0; i < (cnpj.length() - 2); i++) {
        soma += (Integer.parseInt(String.valueOf(cnpj.charAt(i))) * constante);
        if (constante == 2)
            constante = 9;
        else
            constante--;
    }
    /**
     * Se o resto for 0 ou 1
     * O primeiroDigito � igual [0] (zero)
     * Se for 2, 3, 4, 5, 6, 7, 8, 9 ou 10
     * O primeiroDigito � igual [11 - resto]
     */
    resto = soma % 11;
    if (resto < 2)
        segundoDigito = 0;
    else
        segundoDigito = 11 - resto;
    if (primeiroDigito != Integer.parseInt(String.valueOf(cnpj.charAt(12))))
        isValido = false;
    else if (segundoDigito != Integer.parseInt(String.valueOf(cnpj.charAt(13))))
        isValido = false;
    return isValido;
}
