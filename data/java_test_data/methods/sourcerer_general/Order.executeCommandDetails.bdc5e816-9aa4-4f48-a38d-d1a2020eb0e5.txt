public String executeCommandDetails(ActionContext context) {
    // Make sure demo is enabled
    /*
     *  if (!"true".equals(getPref(context, "DEMO"))) {
     *  return "PermissionError";
     *  }
     */
    String productId = context.getRequest().getParameter("pid");
    Connection db = null;
    try {
        db = getConnection(context);
        // Load the product
        Product product = new Product(db, Integer.parseInt(productId));
        if (product.getEnabled()) {
            context.getRequest().setAttribute("product", product);
            // See if the product has any children
            ProductList productList = new ProductList();
            productList.setEnabled(Constants.TRUE);
            productList.setParentId(product.getId());
            productList.setParents(Constants.FALSE);
            productList.buildList(db);
            // Prepare the product(s)
            productList.add(0, product);
            Iterator i = productList.iterator();
            while (i.hasNext()) {
                Product thisProduct = (Product) i.next();
                // Load the product's options
                OptionList optionList = new OptionList();
                optionList.setEnabled(Constants.TRUE);
                optionList.setProductId(thisProduct.getId());
                optionList.buildList(db);
                thisProduct.setOptionList(optionList);
                // Load the product's attachments
                AttachmentList attachmentList = new AttachmentList();
                attachmentList.setProductId(thisProduct.getId());
                attachmentList.buildList(db);
                thisProduct.setAttachmentList(attachmentList);
            }
            context.getRequest().setAttribute("productList", productList);
            return "OrderProductDetailsOK";
        }
    } catch (Exception e) {
        e.printStackTrace(System.out);
    } finally {
        freeConnection(context, db);
    }
    return "OrderCatalogError";
}
