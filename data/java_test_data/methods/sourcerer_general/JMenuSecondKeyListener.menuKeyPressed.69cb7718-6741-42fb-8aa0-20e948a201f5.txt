public void menuKeyPressed(MenuKeyEvent e) {
    // Handle the case for Escape or Enter...
    if (!Character.isLetterOrDigit(e.getKeyChar())) {
        return;
    }
    // System.out.println(menu.getName());
    int keyCode = e.getKeyCode();
    MenuSelectionManager manager = e.getMenuSelectionManager();
    MenuElement[] path = e.getPath();
    MenuElement[] items = menu.getSubElements();
    int currentIndex = -1;
    int matches = 0;
    int firstMatch = -1;
    int[] indexes = null;
    for (int j = 0; j < items.length; j++) {
        if (!(items[j] instanceof JMenuItem)) {
            continue;
        }
        JMenuItem item = (JMenuItem) items[j];
        Integer mnemonicKeyCode = (Integer) item.getClientProperty("mnemonicKeyCode");
        if (item.isEnabled() && item.isVisible() && mnemonicKeyCode != null && mnemonicKeyCode.intValue() == keyCode) {
            if (matches == 0) {
                firstMatch = j;
                matches++;
            } else {
                if (indexes == null) {
                    indexes = new int[items.length];
                    indexes[0] = firstMatch;
                }
                indexes[matches++] = j;
            }
        }
        if (item.isArmed()) {
            currentIndex = matches - 1;
        }
    }
    if (matches == 0) {
    // no op
    } else if (matches == 1) {
        // Invoke the menu action
        JMenuItem item = (JMenuItem) items[firstMatch];
        if (item instanceof JMenu) {
            // submenus are handled in menuKeyTyped
            menuToOpen = item;
        } else if (item.isEnabled()) {
            // we have a menu item
            manager.clearSelectedPath();
            item.doClick();
        }
        e.consume();
    } else {
        // Select the menu item with the matching mnemonic. If
        // the same mnemonic has been invoked then select the next
        // menu item in the cycle.
        MenuElement newItem = null;
        newItem = items[indexes[(currentIndex + 1) % matches]];
        MenuElement[] newPath = new MenuElement[path.length + 1];
        System.arraycopy(path, 0, newPath, 0, path.length);
        newPath[path.length] = newItem;
        manager.setSelectedPath(newPath);
        e.consume();
    }
    return;
}
