// exchange an arbitrary list of props (and cash) with someone
public void trade(MPlayer p) {
    // get player to trade with
    StringBuffer PlayList = new StringBuffer("0. Exit" + G.Serv.CR);
    int x = 0;
    String[] plist = new String[remaining() + 1];
    MPlayer t = null;
    Enumeration<MPlayer> e;
    for (e = players.elements(); e.hasMoreElements(); ) {
        t = e.nextElement();
        if (!isBank(t) && !t.getAuto()) {
            x++;
            plist[x] = t.name;
            PlayList.append(x + ". " + t.name + G.Serv.CR);
        }
    }
    int n = MiscUtil.strToInt(p.ask("Trade with:", PlayList.toString(), "0"));
    if (n > 0 && n <= x)
        t = getMPlayer(plist[n]);
    else
        return;
    // clear filters, init variables
    for (int z = 0; z < 40; z++) // filter developed props
    if (props[z].houses > 0)
        props[z].filter = true;
    int[] t1 = new int[40], t2 = new int[40];
    int i = 0, i2 = 0, y = 0, z = 0;
    StringBuffer st = new StringBuffer("nothing");
    StringBuffer st2 = new StringBuffer("nothing");
    // get requested props
    do {
        y = askProp("Which property do you want? " + "(0 to finish)", t, p);
        if (y > 0) {
            i++;
            t1[i] = y;
            if (i > 1)
                st.append(" and ");
            else
                st = new StringBuffer("");
            st.append(props[y].longname);
            props[y].filter = true;
        }
    } while (y > 0);
    // get offered props
    do {
        z = askProp("Which property are you offering?", p);
        if (z > 0) {
            i2++;
            t2[i2] = z;
            if (i2 > 1)
                st2.append(" and ");
            else
                st2 = new StringBuffer("");
            st2.append(props[z].longname);
            props[z].filter = true;
        }
    } while (z > 0);
    // get money
    String mc = p.ask("How much money are you throwing in? (X to cancel)", "0");
    if (mc.equalsIgnoreCase("X")) {
        unfilter();
        return;
    }
    int m = MiscUtil.strToInt(mc);
    if (p.cash < m || t.cash < -m) {
        G.Serv.say(p.name, "Not enough cash: trade aborted.");
        unfilter();
        return;
    }
    spam(p.name + " offers " + t.name + " " + st2 + " and " + m + " dollars for " + st);
    String OK = t.askYesNo("Trade " + st + " for " + st2 + " and " + m + " dollars?", "N");
    // perform trade
    if (OK.equalsIgnoreCase("Y")) {
        if (i > 0)
            for (x = 1; x <= i; x++) props[t1[x]].owner = p;
        if (i2 > 0)
            for (x = 1; x <= i2; x++) props[t2[x]].owner = t;
        if (p.cash >= m)
            p.cash -= m;
        if (t.cash >= -m)
            t.cash += m;
        spam("Trade accepted!");
    } else
        spam("Trade declined.");
    unfilter();
}
