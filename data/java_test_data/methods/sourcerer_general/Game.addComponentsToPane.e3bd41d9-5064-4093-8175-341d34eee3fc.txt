public void addComponentsToPane(Container pane) {
    pane.setLayout(new BorderLayout());
    pane.setPreferredSize(pane.getSize());
    grid = new JTable(new Grid());
    grid.setDefaultRenderer(Boolean.class, new CellRenderer());
    grid.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    for (int i = 0; i < grid.getColumnModel().getColumnCount(); i++) {
        grid.getColumnModel().getColumn(i).setPreferredWidth(5);
    }
    pane.add(grid, BorderLayout.CENTER);
    JPanel buttonPanel = new JPanel();
    buttonPanel.setLayout(new BoxLayout(buttonPanel, BoxLayout.PAGE_AXIS));
    buttonPanel.add(Box.createRigidArea(new Dimension(0, 5)));
    JButton button = new JButton();
    button.setText("Iterate");
    button.setAlignmentX(Component.LEFT_ALIGNMENT);
    button.setMaximumSize(null);
    button.setPreferredSize(null);
    button.addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            iterateButtonAction(e);
        }
    });
    buttonPanel.add(button);
    buttonPanel.add(Box.createRigidArea(new Dimension(0, 5)));
    button = new JButton();
    button.setText("Start");
    button.setAlignmentX(Component.LEFT_ALIGNMENT);
    button.setMaximumSize(null);
    button.setPreferredSize(null);
    buttonPanel.add(button);
    buttonPanel.add(Box.createRigidArea(new Dimension(0, 5)));
    button = new JButton();
    button.setText("Exit");
    button.setAlignmentX(Component.LEFT_ALIGNMENT);
    button.setMaximumSize(null);
    button.setPreferredSize(null);
    button.addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            System.exit(0);
        }
    });
    buttonPanel.add(button);
    pane.add(buttonPanel, BorderLayout.LINE_END);
}
