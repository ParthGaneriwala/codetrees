public void add(Buffer name, Buffer value) {
    if (!name.isImmutable())
        name = new SipBuffer(name.asArray());
    if (SipHeaders.getType(name).isList()) {
        boolean quote = false;
        int start = value.getIndex();
        int end = value.putIndex();
        byte[] b = value.array();
        // if (value == null) value = _value.asArray();
        int startValue = start;
        int endValue = end;
        while (end > start && b[end - 1] <= ' ') end--;
        for (int i = start; i < end; i++) {
            int c = b[i];
            if (c == '"')
                quote = !quote;
            if (c == ',' && !quote) {
                endValue = i;
                while (endValue > start && b[endValue - 1] <= ' ') endValue--;
                while (startValue < endValue && b[startValue] <= ' ') startValue++;
                byte[] bValue = asArray(b, startValue, endValue - startValue);
                // Buffer buffer = new View(value, startValue, startValue, endValue, Buffer.READONLY);
                msg.getFields().addBuffer(name, new ByteArrayBuffer(bValue));
                // value = new View(value, i + 1, i + 1, end, Buffer.READONLY);
                startValue = i + 1;
            }
        }
        while (startValue < end && b[startValue] <= ' ') startValue++;
        byte[] bValue = asArray(b, startValue, end - startValue);
        msg.getFields().addBuffer(name, new ByteArrayBuffer(bValue));
    // value = new View(value, startValue, startValue, end, Buffer.READONLY);
    } else {
        msg.getFields().addBuffer(name, new ByteArrayBuffer(value.asArray()));
    }
}
