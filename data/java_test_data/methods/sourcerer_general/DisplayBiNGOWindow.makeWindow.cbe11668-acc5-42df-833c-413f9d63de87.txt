/*--------------------------------------------------------------
    METHODS.
    --------------------------------------------------------------*/
public void makeWindow() {
    CyNetwork network = buildNetwork();
    buildNodeAttributes(network);
    buildEdgeAttributes(network);
    CyNetworkView bingoCyNetworkView = Cytoscape.createNetworkView(network, clusterName);
    // from MCODE plugin, MCODEResultsDialog class
    // layout graph and fit it to window
    // randomize node positions before layout so that they don't all layout in a line
    // (so they don't fall into a local minimum for the SpringEmbedder)
    // If the SpringEmbedder implementation changes, this code may need to be removed
    NodeView nv;
    for (Iterator in = bingoCyNetworkView.getNodeViewsIterator(); in.hasNext(); ) {
        nv = (NodeView) in.next();
        nv.setXPosition(nv.getXPosition() * Math.random());
        // height is small for many default drawn graphs, thus +100
        nv.setYPosition((nv.getYPosition() + 100) * Math.random());
    }
    // apply spring embedded layout...
    SpringEmbeddedLayouter spring = new SpringEmbeddedLayouter(bingoCyNetworkView);
    // Configure JTask
    JTaskConfig config = new JTaskConfig();
    // Show Cancel/Close Buttons
    config.displayCancelButton(true);
    config.displayStatus(true);
    // Execute Task via TaskManager
    // This automatically pops-open a JTask Dialog Box.
    // This method will block until the JTask Dialog Box is disposed.
    boolean success = TaskManager.executeTask(spring, config);
    Cytoscape.getDesktop().toFront();
    bingoCyNetworkView.fitContent();
    // create visual style with ID dependent on clusterName
    TheVisualStyle vs = new TheVisualStyle(clusterName, (new Double(alpha)).doubleValue());
    VisualStyle visualStyle = vs.createVisualStyle(network);
    CytoscapeDesktop cytoscapedesktop = Cytoscape.getDesktop();
    VisualMappingManager vmm = Cytoscape.getVisualMappingManager();
    try {
        vmm.getCalculatorCatalog().addVisualStyle(visualStyle);
        // VisualStyle oldStyle = vmm.setVisualStyle(visualStyle.getName());
        bingoCyNetworkView.applyVizmapper(visualStyle);
    // bingoCyNetworkView.setVisualStyle(visualStyle.getName());
    } catch (Exception e) {
        JOptionPane.showMessageDialog(cytoscapedesktop, "A visual style already exists for the cluster name you specified." + "\n" + "The existing style will be overwritten.");
        vs.adaptVisualStyle(vmm.getCalculatorCatalog().getVisualStyle(visualStyle.getName()), network);
        // VisualStyle oldStyle = vmm.setVisualStyle(visualStyle.getName());
        bingoCyNetworkView.applyVizmapper(vmm.getCalculatorCatalog().getVisualStyle(visualStyle.getName()));
    // bingoCyNetworkView.setVisualStyle(visualStyle.getName());
    }
    // add color scale panel
    JFrame window = new JFrame(clusterName + " Color Scale");
    String alpha1 = SignificantFigures.sci_format(alpha, 3);
    String tmp = (new BigDecimal(alpha)).divide(new BigDecimal("100000"), SCALE_RESULT, BigDecimal.ROUND_HALF_UP).toString();
    String alpha2 = SignificantFigures.sci_format(tmp, 3);
    ColorPanel colPanel = new ColorPanel(alpha1, alpha2, new Color(255, 255, 0), new Color(255, 127, 0));
    window.getContentPane().add(colPanel);
    window.getContentPane().setBackground(Color.WHITE);
    window.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    window.pack();
    // for bottom right position of the color scale panel.
    window.setLocation(screenSize.width - window.getWidth() - 10, screenSize.height - window.getHeight() - 30);
    window.setVisible(true);
    window.setResizable(false);
}
