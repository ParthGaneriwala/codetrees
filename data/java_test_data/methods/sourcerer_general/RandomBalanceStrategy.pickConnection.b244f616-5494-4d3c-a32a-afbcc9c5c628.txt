public ConnectionImpl pickConnection(LoadBalancingConnectionProxy proxy, List<String> configuredHosts, Map<String, ConnectionImpl> liveConnections, long[] responseTimes, int numRetries) throws SQLException {
    int numHosts = configuredHosts.size();
    SQLException ex = null;
    List<String> whiteList = new ArrayList<String>(numHosts);
    whiteList.addAll(configuredHosts);
    Map<String, Long> blackList = proxy.getGlobalBlacklist();
    whiteList.removeAll(blackList.keySet());
    Map<String, Integer> whiteListMap = this.getArrayIndexMap(whiteList);
    for (int attempts = 0; attempts < numRetries; ) {
        int random = (int) Math.floor((Math.random() * whiteList.size()));
        if (whiteList.size() == 0) {
            throw SQLError.createSQLException("No hosts configured", null);
        }
        String hostPortSpec = whiteList.get(random);
        ConnectionImpl conn = liveConnections.get(hostPortSpec);
        if (conn == null) {
            try {
                conn = proxy.createConnectionForHost(hostPortSpec);
            } catch (SQLException sqlEx) {
                ex = sqlEx;
                if (proxy.shouldExceptionTriggerFailover(sqlEx)) {
                    Integer whiteListIndex = whiteListMap.get(hostPortSpec);
                    // exclude this host from being picked again
                    if (whiteListIndex != null) {
                        whiteList.remove(whiteListIndex.intValue());
                        whiteListMap = this.getArrayIndexMap(whiteList);
                    }
                    proxy.addToGlobalBlacklist(hostPortSpec);
                    if (whiteList.size() == 0) {
                        attempts++;
                        try {
                            Thread.sleep(250);
                        } catch (InterruptedException e) {
                        }
                        // start fresh
                        whiteListMap = new HashMap<String, Integer>(numHosts);
                        whiteList.addAll(configuredHosts);
                        blackList = proxy.getGlobalBlacklist();
                        whiteList.removeAll(blackList.keySet());
                        whiteListMap = this.getArrayIndexMap(whiteList);
                    }
                    continue;
                } else {
                    throw sqlEx;
                }
            }
        }
        return conn;
    }
    if (ex != null) {
        throw ex;
    }
    // we won't get here, compiler can't tell
    return null;
}
