@Test
@DirtiesContext
public void testMail() throws Exception {
    configureMinimalGame();
    // Add cms image
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    CrudRootServiceHelper<DbCmsImage> crud = cmsService.getImageCrudRootServiceHelper();
    DbCmsImage dbCmsImage1 = crud.createDbChild();
    dbCmsImage1.setData(new byte[50000]);
    dbCmsImage1.setContentType("image1");
    crud.updateDbChild(dbCmsImage1);
    DbCmsImage dbCmsImage2 = crud.createDbChild();
    dbCmsImage2.setData(new byte[10000]);
    dbCmsImage2.setContentType("image2");
    crud.updateDbChild(dbCmsImage2);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    CrudRootServiceHelper<DbPage> pageCrud = cmsService.getPageCrudRootServiceHelper();
    DbPage dbPage = pageCrud.createDbChild();
    dbPage.setPredefinedType(CmsUtil.CmsPredefinedPage.HOME);
    dbPage.setName("Home");
    // Mail List
    DbContentContainer dbContentContainer = new DbContentContainer();
    dbPage.setContentAndAccessWrites(dbContentContainer);
    dbContentContainer.init(userService);
    DbContentList mailList = (DbContentList) dbContentContainer.getContentCrud().createDbChild(DbContentList.class);
    mailList.setSpringBeanName("messengerService");
    mailList.setContentProviderGetter("userMailCrud");
    DbContentBooleanExpressionImage readImage = (DbContentBooleanExpressionImage) mailList.getColumnsCrud().createDbChild(DbContentBooleanExpressionImage.class);
    readImage.setExpression("read");
    readImage.setTrueImage(dbCmsImage1);
    readImage.setFalseImage(dbCmsImage2);
    DbExpressionProperty date = (DbExpressionProperty) mailList.getColumnsCrud().createDbChild(DbExpressionProperty.class);
    date.setExpression("sent");
    date.setOptionalType(DbExpressionProperty.Type.DATE_DDMMYYYY_HH_MM_SS);
    DbExpressionProperty from = (DbExpressionProperty) mailList.getColumnsCrud().createDbChild(DbExpressionProperty.class);
    from.setExpression("fromUser");
    DbExpressionProperty subject = (DbExpressionProperty) mailList.getColumnsCrud().createDbChild(DbExpressionProperty.class);
    subject.setExpression("subject");
    DbContentDetailLink details = (DbContentDetailLink) mailList.getColumnsCrud().createDbChild(DbContentDetailLink.class);
    details.setName("read");
    DbContentBook dbContentBook = mailList.getContentBookCrud().createDbChild();
    dbContentBook.setClassName("com.btxtech.game.services.messenger.DbMail");
    dbContentBook.setHiddenMethodName("setMailRead");
    DbContentRow dbContentRow = dbContentBook.getRowCrud().createDbChild();
    DbExpressionProperty mailSubject = new DbExpressionProperty();
    mailSubject.init(userService);
    mailSubject.setParent(dbContentRow);
    dbContentRow.setDbContent(mailSubject);
    mailSubject.setExpression("subject");
    pageCrud.updateDbChild(dbPage);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Activate
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    cmsService.activateCms();
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    createUserAndSendEmails();
    // Verify
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    userService.login("U1", "test");
    tester.startPage(CmsPage.class);
    tester.assertLabel("form:content:container:1:table:rows:1:cells:4:cell", "subject6");
    tester.assertLabel("form:content:container:1:table:rows:1:cells:3:cell", "U2");
    tester.assertLabel("form:content:container:1:table:rows:2:cells:4:cell", "subject4");
    tester.assertLabel("form:content:container:1:table:rows:2:cells:3:cell", "U2");
    tester.assertLabel("form:content:container:1:table:rows:3:cells:4:cell", "subject2");
    tester.assertLabel("form:content:container:1:table:rows:3:cells:3:cell", "U2");
    Assert.assertFalse(messengerService.getMails().get(0).isRead());
    // click the read more link
    tester.clickLink("form:content:container:1:table:rows:1:cells:5:cell:link");
    tester.assertLabel("form:content:table:rows:1:cells:2:cell", "subject6");
    endHttpRequestAndOpenSessionInViewFilter();
    beginHttpRequestAndOpenSessionInViewFilter();
    Assert.assertTrue(messengerService.getMails().get(0).isRead());
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
