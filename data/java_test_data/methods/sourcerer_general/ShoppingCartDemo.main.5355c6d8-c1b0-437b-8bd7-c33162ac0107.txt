public static void main(String[] args) {
    ShoppingCartDemo demo = new ShoppingCartDemo();
    CatalogItem itemOneToAdd, itemTwoToAdd;
    itemOneToAdd = catalog.getCatalogItemById(13);
    cart.addItem(itemOneToAdd, 2);
    itemTwoToAdd = catalog.getCatalogItemById(28);
    // has bundle and products
    cart.addItem(itemTwoToAdd, 1);
    // crude test of the tax rules
    log.warn("item one base price: " + itemOneToAdd.getSalePrice());
    log.warn("item one tax price: " + itemOneToAdd.getTaxedSalePrice(customer.createDefaultShippingInfo()));
    log.warn("item two base price: " + itemTwoToAdd.getSalePrice());
    log.warn("item two tax price: " + itemTwoToAdd.getTaxedSalePrice(customer.createDefaultShippingInfo()));
    // crude test of CatalogItem.listProducts
    List<Product> itemTwoProducts = itemTwoToAdd.getAllProducts();
    log.warn("Products in catalog item 28:");
    for (Product prod : itemTwoProducts) {
        log.warn(prod.getName());
    }
    // bad checkout
    try {
        order = cart.completeCheckout();
    } catch (IllegalStateException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    // prepare cart for checkout
    cart.setShippingInfo(customer.createDefaultShippingInfo());
    PaymentAuthorization creditCardAuth = new CreditCardAuthorization();
    PaymentAuthorization accountAuth = new CreditAccountAuthorization();
    if (accountAuth.authorize(customer)) {
        cart.setPaymentAuthorization(accountAuth);
    } else if (creditCardAuth.authorize(customer)) {
        cart.setPaymentAuthorization(creditCardAuth);
    } else {
        log.warn("Can't get payment auth!");
    }
    // good checkout
    try {
        order = cart.completeCheckout();
    } catch (IllegalStateException e) {
        e.printStackTrace();
    }
}
