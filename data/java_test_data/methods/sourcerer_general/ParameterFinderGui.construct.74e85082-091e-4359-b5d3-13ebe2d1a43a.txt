public Boolean construct() {
    progressBar1.setIndeterminate(true);
    QuantitativeValidationSingelton iQuantitativeValidationSingelton = QuantitativeValidationSingelton.getInstance();
    iQuantitativeValidationSingelton.setUseOnlyValidRatioForProteinMean(true);
    for (int i = 0; i < iFiles.size(); i++) {
        // update progress bar
        RovFile lRovFile = new RovFile(iFiles.get(i));
        boolean allOk = lRovFile.unzipRovFile();
        File lXml = lRovFile.getQuantitationXmlFile();
        try {
            if (lXml == null) {
                txtInfo.append((i + 1) + ". " + iFiles.get(i).getName() + "\tNo quantitation file found" + "\n");
            } else {
                FileReader freader = new FileReader(lXml);
                LineNumberReader lnreader = new LineNumberReader(freader);
                String lLine = "";
                boolean lReadFurther = true;
                String lQuality;
                String lCorrelation;
                String lThreshold = null;
                boolean lUseFraction = false;
                String lFraction = null;
                while (lReadFurther == true && (lLine = lnreader.readLine()) != null) {
                    if (lLine.trim().startsWith("<mqm:method ")) {
                        lThreshold = lLine.substring(lLine.indexOf("sig_threshold_value=") + 21, lLine.indexOf("\">"));
                    }
                    if (lLine.trim().startsWith("<mqm:quality")) {
                        lUseFraction = Boolean.valueOf(lLine.substring(lLine.indexOf("isolated_precursor") + 20, lLine.indexOf("\"", lLine.indexOf("isolated_precursor") + 21)));
                        lFraction = lLine.substring(lLine.indexOf("isolated_precursor_threshold") + 30, lLine.indexOf("\"", lLine.indexOf("isolated_precursor_threshold") + 31));
                    }
                    if (lLine.trim().startsWith("<mqm:integration")) {
                        // we are in the wanted line
                        lReadFurther = false;
                        lQuality = lLine.substring(lLine.indexOf("elution_profile_correlation_threshold=") + 39, lLine.indexOf("\" ", lLine.indexOf("elution_profile_correlation_threshold=")));
                        lCorrelation = lLine.substring(lLine.indexOf("matched_rho=") + 13, lLine.indexOf("\" ", lLine.indexOf("matched_rho=")));
                        txtInfo.append((i + 1) + ". " + iFiles.get(i).getName() + "\t" + lThreshold + "\t" + lQuality + "\t" + lCorrelation + "\t" + lUseFraction + "\t" + lFraction + "\n");
                    }
                }
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    return null;
}
