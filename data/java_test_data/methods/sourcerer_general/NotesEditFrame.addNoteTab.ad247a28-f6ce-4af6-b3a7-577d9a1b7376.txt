private void addNoteTab(final RtmTaskNote taskNote) {
    JScrollPane jScrollPane = new JScrollPane();
    final JEditorPane jEditorPane = new JEditorPane();
    jEditorPane.setFont(editorFont);
    jEditorPane.setText(taskNote.getText());
    jScrollPane.setViewportView(jEditorPane);
    JPanel panel = new JPanel();
    panel.setLayout(new FlowLayout());
    panel.setOpaque(false);
    final JLabel taskTitle = new JLabel(taskNote.getTitle());
    panel.add(taskTitle);
    panel.add(new JLabel("  "));
    panel.add(new JSeparator(SwingConstants.VERTICAL));
    panel.add(new JLabel("  "));
    JButton commitButton = createTabButton(commitIcon);
    commitButton.setToolTipText("sync the changes with RTM");
    JButton closeButton = createTabButton(closeIcon);
    closeButton.setToolTipText("delete this note");
    closeButton.addMouseListener(new MouseAdapter() {

        @Override
        public void mouseClicked(MouseEvent e) {
            int index = notesTabList.indexOf(taskNote);
            jTabbedPane.setSelectedIndex(index);
            int retVal = JOptionPane.showConfirmDialog(NotesEditFrame.this, "This will delete the currently selected note. Are you sure?", "Delete Note", JOptionPane.OK_CANCEL_OPTION);
            if (retVal == JOptionPane.OK_OPTION) {
                SwingUtilities.invokeLater(new Runnable() {

                    public void run() {
                        rtmTask.deleteNote(taskNote);
                        int index = notesTabList.indexOf(taskNote);
                        notesTabList.remove(index);
                        jTabbedPane.remove(index);
                    }
                });
            }
        }
    });
    panel.add(commitButton);
    panel.add(closeButton);
    notesTabList.add(taskNote);
    int index = notesTabList.indexOf(taskNote);
    jTabbedPane.insertTab("X", null, jScrollPane, null, index);
    jTabbedPane.setTabComponentAt(index, panel);
    panel.addMouseListener(new MouseAdapter() {

        @Override
        public void mouseClicked(MouseEvent e) {
            int index = notesTabList.indexOf(taskNote);
            jTabbedPane.setSelectedIndex(index);
        }
    });
    jEditorPane.addKeyListener(new KeyAdapter() {

        @Override
        public void keyTyped(KeyEvent e) {
            taskTitle.setText(taskNote.getTitle() + " *");
        }
    });
    commitButton.addMouseListener(new MouseAdapter() {

        @Override
        public void mouseClicked(MouseEvent e) {
            SwingUtilities.invokeLater(new Runnable() {

                public void run() {
                    rtmTask.updateNote(taskNote, jEditorPane.getText());
                    taskTitle.setText(taskNote.getTitle());
                }
            });
        }
    });
}
