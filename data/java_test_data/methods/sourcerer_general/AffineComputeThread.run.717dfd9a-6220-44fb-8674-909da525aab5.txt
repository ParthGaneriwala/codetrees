public void run() {
    AffineBusyDialog abd = new AffineBusyDialog(parent, this);
    abd.setVisible(true);
    JProgressBar progressBar = abd.getProgressBar();
    progressBar.setMaximum(model.getRowCount());
    // progressBar.setValue(newValue);
    progressBar.setIndeterminate(false);
    int combos = 0;
    for (int i = 0; i < model.getRowCount(); i++) {
        progressBar.setValue(i + 1);
        for (int j = i + 1; j < model.getRowCount(); j++) {
            Way way1 = model.getWay(i);
            Way way2 = model.getWay(j);
            double x1 = way1.getX();
            double y1 = way1.getY();
            double lon1 = way1.getRealLon();
            double lat1 = way1.getRealLat();
            int x2 = way2.getX();
            int y2 = way2.getY();
            double lon2 = way2.getRealLon();
            double lat2 = way2.getRealLat();
            double a = (lon1 - lon2) / (x1 - x2);
            double e = (lat1 - lat2) / (y1 - y2);
            double c = lon1 - a * x1;
            double f = lat1 - e * y1;
            double sumerr = 0;
            double sumerr2 = 0;
            double n = 0;
            for (int k = 0; k < model.getRowCount(); k++) {
                if (k == i || k == j) {
                    continue;
                }
                if (!trucking)
                    return;
                combos++;
                Way ref = model.getWay(k);
                double x = ref.getX();
                double y = ref.getY();
                double lon = ref.getRealLon();
                double lat = ref.getRealLat();
                double xest = (lon - c) / a;
                double yest = (lat - f) / e;
                double dist = Math.sqrt((x - xest) * (x - xest) + (y - yest) * (y - yest));
                sumerr += dist;
                sumerr2 += (dist * dist);
                n++;
            }
            double rmse = sumerr / n;
            if (rmse < minErr) {
                besta = a;
                bestc = c;
                beste = e;
                bestf = f;
                iCandidate = i;
                jCandidate = j;
                minErr = rmse;
                minErrStdev = Math.sqrt(sumerr2 / n - rmse * rmse);
            }
        }
    }
    abd.getRmseLabel().setText(minErr + "");
    abd.getStdevLabel().setText(minErrStdev + "");
    abd.getCombosLabel().setText(combos + "");
    abd.getWaypt1Label().setText("[" + iCandidate + "]");
    abd.getWaypt2Label().setText("[" + jCandidate + "]");
    abd.getStatusLabel().setText("Status: done!");
    abd.getOkButton().setEnabled(true);
}
