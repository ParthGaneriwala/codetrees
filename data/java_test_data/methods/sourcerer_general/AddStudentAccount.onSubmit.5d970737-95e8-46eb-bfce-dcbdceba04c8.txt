public void onSubmit() {
    try {
        String batch = (String) batchModel.getObject();
        String no = (String) noModel.getObject();
        String studentId = batch + "-" + no;
        String yearLevel = (String) yearLevelModel.getObject();
        String firstName = (String) firstNameModel.getObject();
        String middleName = (String) middleNameModel.getObject();
        String lastName = (String) lastNameModel.getObject();
        String gender = (String) genderModel.getObject();
        String birthday = (String) birthdayModel.getObject();
        String address = (String) addressModel.getObject();
        String mobile = (String) mobileModel.getObject();
        String password = (String) passwordModel.getObject();
        String newPassword = md5.md5(password);
        String field = (String) fieldModel.getObject();
        String uploader = ((Sessions) getSession()).getDesc();
        Date today = new Date();
        Timestamp timestamp = new Timestamp(today.getTime());
        String ts = timestamp.toString();
        System.out.println("id" + studentId + "year" + yearLevel + "first" + firstName + "middle" + middleName + "last" + lastName + "gender" + gender + "birthday" + birthday + "address" + address + "mobile" + mobile + "password" + newPassword + "field" + field + "status");
        StudentInformation info = new StudentInformation();
        info.setStudent_id(studentId);
        info.setStudent_yearlvl(yearLevel);
        info.setStudent_firstName(firstName);
        info.setStudent_middleName(middleName);
        info.setStudent_lastName(lastName);
        info.setStudent_birthdate(birthday);
        info.setStudent_gender(gender);
        info.setStudent_address(address);
        info.setStudent_contNo(mobile);
        info.setStudent_hobby(field);
        info.setDate_created(ts);
        sqlMap.insert("StudentInformation.insertInformation", info);
        int one = 1;
        Account b = (Account) sqlMap.queryForObject("Account.getSemester", one);
        String sem = b.getSemester(one);
        Account a = (Account) sqlMap.queryForObject("Account.getSchoolYear", one);
        String sy = a.getSchoolYear(one);
        System.out.println("SY" + sy + "SID" + sem);
        Account account = new Account();
        account.setPassword(newPassword);
        account.setStudent_id(studentId);
        account.setUserid(4);
        account.setSchoolyear(sy);
        account.setSemester(sem);
        sqlMap.insert("Account.addAccount", account);
        Registered reg = new Registered();
        reg.setSchoolyear(sy);
        reg.setSemester(sem);
        reg.setStudent_id(studentId);
        reg.setStudent_yearlevel(yearLevel);
        reg.setStudent_name(firstName + " " + middleName + " " + lastName);
        reg.setUploader(uploader);
        reg.setDate_created(ts);
        sqlMap.insert("Registered.insert", reg);
        Logs log = new Logs();
        log.setLog_activity("Add Student Account:" + studentId);
        log.setLog_officer(uploader);
        log.setLog_time(ts);
        sqlMap.insert("Logs.insert", log);
        if (yearLevel == "1") {
            FreshmenList page = new FreshmenList();
            setResponsePage(page);
        } else if (yearLevel == "2") {
            SophiesList page = new SophiesList();
            setResponsePage(page);
        } else if (yearLevel == "3") {
            JuniorsList page = new JuniorsList();
            setResponsePage(page);
        } else if (yearLevel == "4") {
            SeniorsList page = new SeniorsList();
            setResponsePage(page);
        }
    } catch (SQLException e) {
        error("Record Exists");
        e.printStackTrace();
    } catch (IOException e) {
        // TODO Auto-generated catch block
        error("Fill up necessary fields");
        e.printStackTrace();
    }
}
