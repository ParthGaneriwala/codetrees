public void MakeDwtWatermark(String inputImageFilePath, String outputDwt) {
    DwtConv imageGrayer = new DwtConv();
    // citeste imaginea
    BufferedImage inputImage = imageGrayer.readImage(inputImageFilePath);
    // Convertim imaginea in grayscale
    int[][] IKey = imageGrayer.creazaKey(imageGrayer, true);
    int[][] IRgb = imageGrayer.grayScale(inputImage);
    double[][] Imax = new double[imageGrayer.hi][imageGrayer.wi];
    double[][] Water = new double[imageGrayer.hi][imageGrayer.wi];
    for (int i = 0; i < Imax.length; i++) {
        for (int j = 0; j < Imax[0].length; j++) {
            Imax[i][j] = (double) IRgb[i][j];
        }
    }
    Imax = imageGrayer.dwt(Imax, imageGrayer.Lo_D, imageGrayer.Hi_D);
    double c = 0.01;
    for (int i = 0; i < Water.length; i++) {
        for (int j = 0; j < Water.length; j++) {
            // Water[i][j] = Imax[i][j] + c*Math.abs(Imax[i][j])*IKey[i][j];
            Water[i][j] = Imax[i][j] + IKey[i][j];
        }
    }
    int p = Imax.length / 2;
    int q = Imax[0].length / 2;
    double[][] nca = new double[p][q];
    double[][] ncv = new double[p][q];
    double[][] nch = new double[p][q];
    double[][] ncd = new double[p][q];
    for (int i = 0; i < p; i++) {
        for (int j = 0; j < q; j++) {
            nca[i][j] = Water[i][j];
            ncv[i][j] = Water[i + p][j];
            nch[i][j] = Water[i][j + q];
            ncd[i][j] = Water[i + p][j + q];
        }
    }
    Imax = imageGrayer.idwt(nca, ncv, nch, ncd, imageGrayer.Lo_R, imageGrayer.Hi_R);
    BufferedImage output = new BufferedImage(imageGrayer.wi, imageGrayer.hi, 4);
    for (int i = 0; i < Imax.length; i++) {
        for (int j = 0; j < Imax[0].length; j++) {
            int colorInt = (255 & 0xff) << 24 | ((int) Imax[i][j] & 0xff) << 16 | ((int) Imax[i][j] & 0xff) << 8 | ((int) Imax[i][j] & 0xff);
            output.setRGB(j, i, colorInt);
        }
    }
    imageGrayer.writeImage(output, outputDwt, "jpg");
    // ImageIcon imag = new ImageIcon(outputDwt);
    interf.afis(outputDwt, 2);
}
