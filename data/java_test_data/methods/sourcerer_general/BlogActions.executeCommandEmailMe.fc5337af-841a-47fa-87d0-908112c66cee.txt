public String executeCommandEmailMe(ActionContext context) {
    Connection db = null;
    // Parameters
    String projectId = context.getRequest().getParameter("pid");
    String newsId = context.getRequest().getParameter("id");
    try {
        db = getConnection(context);
        // Load the project
        Project thisProject = retrieveAuthorizedProject(Integer.parseInt(projectId), context);
        if (!hasProjectAccess(context, thisProject.getId(), "project-news-view")) {
            return "PermissionError";
        }
        // Load the article and send the email
        BlogPost thisArticle = new BlogPost(db, Integer.parseInt(newsId), thisProject.getId());
        if (1 == 1) {
            ApplicationPrefs prefs = getApplicationPrefs(context);
            SMTPMessage mail = SMTPMessageFactory.createSMTPMessageInstance(prefs.getPrefs());
            mail.setFrom(this.getPref(context, "EMAILADDRESS"));
            mail.addReplyTo(getUser(context).getEmail());
            mail.setType("text/html");
            mail.addTo(getUser(context).getEmail());
            mail.setSubject(thisArticle.getSubject());
            // Populate the message template
            Template template = getFreemarkerConfiguration(context).getTemplate("blog_article_email_me_notification-html.ftl");
            Map bodyMappings = new HashMap();
            bodyMappings.put("post", thisArticle);
            bodyMappings.put("link", new HashMap());
            ((Map) bodyMappings.get("link")).put("post", getLink(context, "show/" + thisProject.getUniqueId() + "/post/" + thisArticle.getId()));
            // Parse and send
            StringWriter inviteBodyTextWriter = new StringWriter();
            template.process(bodyMappings, inviteBodyTextWriter);
            mail.setBody(inviteBodyTextWriter.toString());
            mail.send();
        }
        context.getRequest().setAttribute("project", thisProject);
        context.getRequest().setAttribute("IncludeSection", "news_email_ok");
        context.getRequest().setAttribute("pid", projectId);
        return "EmailMeOK";
    } catch (Exception errorMessage) {
        context.getRequest().setAttribute("Error", errorMessage);
        return ("SystemError");
    } finally {
        this.freeConnection(context, db);
    }
}
