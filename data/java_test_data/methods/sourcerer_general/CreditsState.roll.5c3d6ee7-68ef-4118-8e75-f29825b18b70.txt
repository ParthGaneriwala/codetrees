void roll(Coordinate pStart, Coordinate pEnd, Label pText, double pRollSpeed, long pTime) {
    double lInitAngle = pText.getAngle();
    long lStartTime = System.currentTimeMillis();
    long lEndTime = lStartTime + pTime;
    int lStartX = pStart.getX();
    int lStartY = pStart.getY();
    long lDistX = (pEnd.getX() - lStartX);
    long lDistY = (pEnd.getY() - lStartY);
    double lSpeedX = (double) lDistX / (double) pTime;
    double lSpeedY = (double) lDistY / (double) pTime;
    Coordinate lInitSize = pText.getSize();
    int lInitSizeX = lInitSize.getX();
    int lInitSizeY = lInitSize.getY();
    long lCurTime = System.currentTimeMillis();
    while (lCurTime < lEndTime) {
        long lDeltaTime = (lCurTime - lStartTime);
        double xPos = lStartX + lSpeedX * lDeltaTime;
        double yPos = lStartY + lSpeedY * lDeltaTime;
        double lCurAngle = lInitAngle + pRollSpeed * lDeltaTime;
        Coordinate lNewSize = pText.getSize();
        int lNewSizeX = lNewSize.getX();
        int lNewSizeY = lNewSize.getY();
        int lDeltaX = (lNewSizeX - lInitSizeX);
        int lDeltaY = (lNewSizeY - lInitSizeY);
        double lNewPosX = xPos - lDeltaX / 2;
        double lNewPosY = yPos - lDeltaY / 2;
        pText.rotateFromZero(lCurAngle);
        pText.setPosition(new Coordinate((int) lNewPosX, (int) lNewPosY));
        aBackground.draw();
        pText.draw();
        Application.aMainWindow.render();
        lCurTime = System.currentTimeMillis();
    }
}
