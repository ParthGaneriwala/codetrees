public void reguaInfo(int w, int h, J3DGraphics2D g2) {
    g2.setColor(Color.BLACK);
    g2.drawLine((int) p1.x, (int) p1.y, (int) p2.x, (int) p2.y);
    Point3d point3d1 = new Point3d();
    Point3d point3d2 = new Point3d();
    camera.canvas.getPixelLocationInImagePlate(p1, point3d1);
    Transform3D temp = new Transform3D();
    camera.canvas.getImagePlateToVworld(temp);
    temp.transform(point3d1);
    camera.canvas.getPixelLocationInImagePlate(p2, point3d2);
    temp.transform(point3d2);
    double scale = point3d2.distance(point3d1);
    String units = " m";
    if (scale < 1) {
        units = "cm";
        scale *= 100;
    } else {
        if (scale > 1000) {
            units = "Km";
            scale /= 1000;
        }
    }
    int scaleint = (int) (scale * 100);
    scale = scaleint;
    scale /= 100;
    String text = new String(scale + units);
    if (camera.projection == View.PERSPECTIVE_PROJECTION) {
        text = new String("(Prespective view)");
    }
    Rectangle2D stringBounds = g2.getFontMetrics().getStringBounds(text, g2);
    window((int) p2.x - 2 + 2, (int) p2.y - 14, (int) p2.x + (int) stringBounds.getWidth(), (int) p2.y);
    g2.drawString(text, (int) p2.x + 2, (int) p2.y - 2);
}
