// </editor-fold>//GEN-END:initComponents
private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {
    if (// nhập khách mới !
    customerId.getText().equals(" ")) {
        if (firstName.getText().equals("") || lastName.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn phải nhập họ và tên của khách hàng");
        } else {
            InsertNewCustomer();
            String customerIdMax = new publicClass().selectDateToString("select Max(customerId) as cusMax from customers", "cusMax");
            AddCusInorder(customerIdMax, orderId.getText());
            String roomId = new publicClass().selectDateToString("select roomid from rooms where roomnumb='" + cbRooms.getSelectedItem().toString() + "'", "roomid");
            new publicClass().SQLRUN("insert into roomcurent_detail (roomid,customerId) values('" + roomId + "','" + customerIdMax + "')");
            String IdDetail = new publicClass().selectDateToString("select [id] from roomInorder where roomid=(select roomid from rooms where roomnumb='" + cbRooms.getSelectedItem() + "') and orderId='" + orderId.getText() + "' and getDate() between [Ngày đến ở] and enddate ", "id");
            String sqlUpdateRoomStatus = "update orderDetail set roomstatus =5 where Id='" + IdDetail + "'";
            new publicClass().SQLRUN(sqlUpdateRoomStatus);
            new publicClass().SQLRUN("update orders set status=2 where orderid='" + orderId.getText() + "'");
            new publicClass().addItemToTable(tblCusIinOrder, "select firstName +' '+ lastName as [Tên khách hàng] from CusInOrder where orderId='" + orderId.getText() + "'");
            unfillAllFeid();
        }
    } else // chọn khách quen
    {
        int countCusInOrder = new Integer(new publicClass().selectDateToString("select count (customerId) as CountCus from cusInOrders where orderId='" + orderId.getText() + "' and CusTomerId='" + customerId.getText() + "' ", "CountCus"));
        if (countCusInOrder > 0) {
            int countCusInRoom = new Integer(new publicClass().selectDateToString("select count (customerId) as CountCusInr from roomcurent_detail where CusTomerId='" + customerId.getText() + "' ", "CountCusInr"));
            if (countCusInRoom > 0) {
                JOptionPane.showMessageDialog(this, "Khách này đã có ");
            } else // khách đã đến ở trong phòng
            // xêp phòng cho khách !
            {
                String roomId = new publicClass().selectDateToString("select roomid from rooms where roomnumb='" + cbRooms.getSelectedItem().toString() + "'", "roomid");
                new publicClass().SQLRUN("insert into roomcurent_detail (roomid,customerId) values('" + roomId + "','" + customerId.getText() + "')");
                String IdDetail = new publicClass().selectDateToString("select [id] from roomInorder where roomid=(select roomid from rooms where roomnumb='" + cbRooms.getSelectedItem() + "') and orderId='" + orderId.getText() + "' and getDate() between [Ngày đến ở] and enddate ", "id");
                // String IdDetail=new publicClass().selectDateToString("select [id] from roomInorder where roomid=(select roomid from rooms where roomnumb='"+cbRooms.getSelectedItem()+"') and orderId='"+orderId.getText()+"'","id");
                String sqlUpdateRoomStatus = "update orderDetail set roomstatus =5 where Id='" + IdDetail + "'";
                new publicClass().SQLRUN(sqlUpdateRoomStatus);
                new publicClass().SQLRUN("update orders set status=2 where orderid='" + orderId.getText() + "'");
                new publicClass().addItemToTable(tblCusIinOrder, "select  firstName +' '+ lastName as [Tên khách hàng] from CusInOrder where orderId='" + orderId.getText() + "'");
                unfillAllFeid();
                JOptionPane.showMessageDialog(this, "Người đặt hàng vừa được xếp phòng !");
            }
        // xêp phòng cho khách !
        } else // khách đã có ở đơn hàng
        // khách chưa có, vừa thêm vào đơn hàng vừa xếp phòng
        {
            AddCusInorder(customerId.getText(), orderId.getText());
            String roomId = new publicClass().selectDateToString("select roomid from rooms where roomnumb='" + cbRooms.getSelectedItem().toString() + "'", "roomid");
            new publicClass().SQLRUN("insert into roomcurent_detail (roomid,customerId) values('" + roomId + "','" + customerId.getText() + "')");
            String IdDetail = new publicClass().selectDateToString("select [id] from roomInorder where roomid=(select roomid from rooms where roomnumb='" + cbRooms.getSelectedItem() + "') and orderId='" + orderId.getText() + "' and getDate() between [Ngày đến ở] and enddate ", "id");
            String sqlUpdateRoomStatus = "update orderDetail set roomstatus =5 where Id='" + IdDetail + "'";
            new publicClass().SQLRUN(sqlUpdateRoomStatus);
            new publicClass().SQLRUN("update orders set status=2 where orderid='" + orderId.getText() + "'");
            new publicClass().addItemToTable(tblCusIinOrder, "select  firstName +' '+ lastName as [Tên khách hàng] from CusInOrder where orderId='" + orderId.getText() + "'");
            unfillAllFeid();
        }
    }
// khách quen
}
