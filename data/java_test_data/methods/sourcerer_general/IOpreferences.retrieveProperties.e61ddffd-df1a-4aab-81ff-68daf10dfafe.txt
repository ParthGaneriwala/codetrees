// -------------------------------------------------------------------------------------------
/**
 * Retrieves Properties from compSimProperties.txt
 */
public void retrieveProperties() {
    File inFile = new File("compSimProperties.txt");
    FileInputStream in;
    Properties CompSimProp = new Properties();
    try {
        in = new FileInputStream(inFile);
        CompSimProp.load(in);
    } catch (java.io.IOException ioe) {
        System.err.println("Property loading error");
    }
    String loaded = null;
    loaded = CompSimProp.getProperty("instructionMax");
    this.instructionMax = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("CPUInstructionTime");
    this.CPUInstructionTime = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("ALUCount");
    this.numALU = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("CPUMonitoringStatus");
    this.CPUMon = stringtoboolean(loaded);
    loaded = CompSimProp.getProperty("cacheMonitoringStatus");
    this.cacheMon = stringtoboolean(loaded);
    loaded = CompSimProp.getProperty("instructionSetMonitoringStatus");
    this.instructionMon = stringtoboolean(loaded);
    loaded = CompSimProp.getProperty("RAMMonitoringStatus");
    this.RAMMon = stringtoboolean(loaded);
    loaded = CompSimProp.getProperty("CPUReportStatus");
    this.CPURep = stringtoboolean(loaded);
    loaded = CompSimProp.getProperty("cacheReportStatus");
    this.cacheRep = stringtoboolean(loaded);
    loaded = CompSimProp.getProperty("instructionSetReportStatus");
    this.instructionRep = stringtoboolean(loaded);
    loaded = CompSimProp.getProperty("RAMReportStatus");
    this.RAMRep = stringtoboolean(loaded);
    loaded = CompSimProp.getProperty("ramSize");
    this.ramSize = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("ramSpeed");
    this.ramSpeed = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("l1size");
    this.L1CacheSize = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("l2size");
    this.L2CacheSize = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("l1speed");
    this.L1CacheSpeed = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("l2speed");
    this.L2CacheSpeed = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("l2status");
    this.L2Status = stringtoboolean(loaded);
    loaded = CompSimProp.getProperty("bgColour");
    this.bgColour = loaded;
    loaded = CompSimProp.getProperty("textSize");
    this.textSize = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("textRed");
    this.textRed = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("textGreen");
    this.textGreen = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("textBlue");
    this.textBlue = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("textIOStatus");
    this.isTextIOEnabled = stringtoboolean(loaded);
    loaded = CompSimProp.getProperty("bgImage");
    this.bgImage = loaded;
    loaded = CompSimProp.getProperty("PermanentStorageSpeed");
    this.PSSpeed = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("PermanentStorageCapacity");
    this.PSCapacity = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("InstructionSetSpeed");
    this.ISSpeed = Integer.parseInt(loaded);
    loaded = CompSimProp.getProperty("InstructionSetType");
    this.ISType = Integer.parseInt(loaded);
// PreferencesGUI.prefs = new Preferences(this.CPUMon,this.RAMMon,this.cacheMon,this.instructionMon,this.instructionMax,this.CPUInstructionTime,this.numALU,this.ramSize,this.ramSpeed,this.L1CacheSize, this.L2CacheSize, this.L1CacheSpeed, this.L2CacheSpeed, this.CPURep,this.RAMRep,this.cacheRep,this.instructionRep,this.bgColour,this.textSize,this.textRed,this.textGreen,this.textBlue, this.L2Status, this.isTextIOEnabled,this.bgImage,this.PSSpeed,this.PSCapacity,this.ISSpeed,this.ISType);
}
