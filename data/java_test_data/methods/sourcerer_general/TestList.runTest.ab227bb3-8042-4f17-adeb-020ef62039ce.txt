public void runTest() {
    Model m = ModelFactory.createDefaultModel();
    Resource root = m.createResource(NS + "root");
    Property p = m.createProperty(NS, "p");
    Resource nil = RDF.nil;
    m.add(nil, RDF.type, RDF.List);
    Resource list0 = m.createResource();
    m.add(list0, RDF.type, RDF.List);
    m.add(list0, RDF.first, "fred");
    m.add(list0, RDF.rest, nil);
    m.add(root, p, list0);
    RDFList l1 = getListRoot(m);
    checkValid("settail1", l1, true);
    Resource list1 = m.createResource();
    m.add(list1, RDF.type, RDF.List);
    m.add(list1, RDF.first, "george");
    m.add(list1, RDF.rest, nil);
    RDFList l2 = (RDFList) list1.as(RDFList.class);
    assertNotNull("as(RDFList) should not return null for root", l2);
    checkValid("settail2", l2, true);
    assertEquals("l1 should have length 1", 1, l1.size());
    assertEquals("l2 should have length 1", 1, l2.size());
    // use set tail to join the lists together
    l1.setTail(l2);
    checkValid("settail3", l1, true);
    checkValid("settail4", l2, true);
    assertEquals("l1 should have length 2", 2, l1.size());
    assertEquals("l2 should have length 1", 1, l2.size());
}
