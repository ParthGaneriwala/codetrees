private void readTypeDef(ArrayList<Byte> file, int off, ArrayList<Integer> all_rows, ArrayList<Integer> heapRows) {
    int flags = 0, name = 0, namespace = 0, extendsi = 0, fieldlist = 0, methodlist = 0;
    StreamTableRow str;
    int i;
    size = 0;
    for (i = 0; i < numrows; i++) {
        flags = Tools.MakeInt(file, off + size);
        size += 4;
        if (heapRows.get(CLELConstants.STRINGS_INDEX) < 0xffff) {
            name = (int) Tools.MakeShort(file, off + size);
            namespace = (int) Tools.MakeShort(file, off + size + 2);
            size += 4;
        } else {
            name = Tools.MakeInt(file, off + size);
            namespace = Tools.MakeInt(file, off + size + 4);
            size += 8;
        }
        // FIX????    P.397, P.120
        extendsi = (int) Tools.MakeShort(file, off + size);
        size += 2;
        if (all_rows.get(CLELConstants.FIELD_TABLE) < 0xffff) {
            fieldlist = (int) Tools.MakeShort(file, off + size);
            size += 2;
        } else {
            fieldlist = Tools.MakeInt(file, off + size);
            size += 4;
        }
        if (all_rows.get(CLELConstants.METHODDEF_TABLE) < 0xffff) {
            methodlist = (int) Tools.MakeShort(file, off + size);
            size += 2;
        } else {
            methodlist = Tools.MakeInt(file, off + size);
            size += 4;
        }
        str = new StreamTableRow(CLELConstants.TYPEDEF_TABLE, flags, name, namespace, extendsi, fieldlist, methodlist);
        rows.add(str);
    }
}
