@Override
public void bltText(String text, Font font, RECT rect, int align) {
    java.awt.Font f = ((CXT2DFont) font).getFont();
    _gBackbuffer.setFont(f);
    _gBackbuffer.setPaint(new Color(font.getColor().red, font.getColor().green, font.getColor().blue, font.getColor().alpha));
    GlyphVector gv = f.createGlyphVector(_gBackbuffer.getFontRenderContext(), text);
    Rectangle2D bound = gv.getLogicalBounds();
    int px = rect.x;
    int py = rect.y + 20;
    switch(align) {
        case GraphicsEngine.POINT_CENTER:
            px = (int) ((rect.width / 2) + rect.x - (bound.getWidth() / 2));
            py = (int) ((rect.height / 2) + rect.y - (bound.getHeight() / 2));
            break;
        case GraphicsEngine.POINT_CENTERLEFT:
            px = (int) (rect.width + rect.x - bound.getWidth());
            py = (int) ((rect.height / 2) + rect.y - (bound.getHeight() / 2));
            break;
        case GraphicsEngine.POINT_CENTERRIGHT:
            px = rect.x;
            py = (int) ((rect.height / 2) + rect.y - (bound.getHeight() / 2));
            break;
        case GraphicsEngine.POINT_TOPCENTER:
            px = (int) ((rect.width / 2) + rect.x - (bound.getWidth() / 2));
            py = (int) (rect.y + bound.getHeight());
            break;
        case GraphicsEngine.POINT_TOPLEFT:
            px = (int) (rect.width + rect.x - bound.getWidth());
            py = (int) (rect.y + bound.getHeight());
            break;
        case GraphicsEngine.POINT_TOPRIGHT:
            px = rect.x;
            py = (int) (rect.y + bound.getHeight());
            break;
        case GraphicsEngine.POINT_BOTTOMCENTER:
            px = (int) ((rect.width / 2) + rect.x - (bound.getWidth() / 2));
            py = rect.y + rect.height;
            break;
        case GraphicsEngine.POINT_BOTTOMLEFT:
            px = (int) (rect.width + rect.x - bound.getWidth());
            py = rect.y + rect.height;
            break;
        case GraphicsEngine.POINT_BOTTOMRIGHT:
            px = rect.x;
            py = rect.y + rect.height;
            break;
    }
    _gBackbuffer.drawGlyphVector(gv, px, py);
}
