public static AWSCredentials load(String password, BufferedInputStream inputStream) throws S3ServiceException {
    boolean partialReadOnly = (password == null);
    if (partialReadOnly) {
        log.debug("Loading partial information about AWS Credentials from input stream");
    } else {
        log.debug("Loading AWS Credentials from input stream");
    }
    try {
        EncryptionUtil encryptionUtil = null;
        byte[] encryptedKeys = new byte[2048];
        int encryptedDataIndex = 0;
        String version = null;
        String algorithm = null;
        String friendlyName = null;
        // Read version information from AWS credentials file.
        version = ServiceUtils.readInputStreamLineToString(inputStream, Constants.DEFAULT_ENCODING);
        if (!version.startsWith(VERSION_PREFIX)) {
            // Either this is not a valid AWS Credentials file, or it's an obsolete version.
            // Try decrypting using the obsolete approach.
            friendlyName = version;
            if (!partialReadOnly) {
                encryptionUtil = EncryptionUtil.getObsoleteEncryptionUtil(password);
            }
        } else {
            // Read algorithm and friendly name from file.
            algorithm = ServiceUtils.readInputStreamLineToString(inputStream, Constants.DEFAULT_ENCODING);
            friendlyName = ServiceUtils.readInputStreamLineToString(inputStream, Constants.DEFAULT_ENCODING);
            if (!partialReadOnly) {
                encryptionUtil = new EncryptionUtil(password, algorithm, EncryptionUtil.DEFAULT_VERSION);
            }
        }
        if (partialReadOnly) {
            return new AWSCredentials(null, null, friendlyName);
        }
        // Read encrypted data bytes from file.
        encryptedDataIndex = inputStream.read(encryptedKeys);
        // Decrypt data.
        String keys = encryptionUtil.decryptString(encryptedKeys, 0, encryptedDataIndex);
        int delimOffset = keys.indexOf(KEYS_DELIMITER);
        if (delimOffset < 0) {
            throw new Exception("Unable to load AWS keys. Is the password correct?");
        }
        AWSCredentials awsCredentials = new AWSCredentials(keys.substring(0, delimOffset), keys.substring(delimOffset + KEYS_DELIMITER.length()), friendlyName);
        return awsCredentials;
    } catch (BadPaddingException bpe) {
        throw new S3ServiceException("Unable to decrypt AWS credentials. Is your password correct?", bpe);
    } catch (Throwable t) {
        throw new S3ServiceException("Failed to load AWS credentials", t);
    } finally {
        if (inputStream != null) {
            try {
                inputStream.close();
            } catch (IOException e) {
            }
        }
    }
}
