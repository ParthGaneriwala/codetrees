protected void createContents() {
    shell = new Shell();
    final GridLayout gridLayout_1 = new GridLayout();
    gridLayout_1.numColumns = 2;
    shell.setLayout(gridLayout_1);
    shell.setSize(535, 397);
    shell.setText("SWT Application");
    final Composite group = new Composite(shell, SWT.NONE);
    final RowLayout rowLayout = new RowLayout();
    rowLayout.marginTop = 0;
    rowLayout.marginRight = 0;
    rowLayout.marginLeft = 0;
    rowLayout.marginBottom = 0;
    rowLayout.pack = false;
    group.setLayout(rowLayout);
    group.setLayoutData(new GridData(SWT.FILL, SWT.FILL, false, false, 2, 1));
    final Button addRootButton = new Button(group, SWT.NONE);
    addRootButton.addSelectionListener(new SelectionAdapter() {

        public void widgetSelected(final SelectionEvent e) {
            List list = input.getList();
            Bean root = createBean("root");
            list.add(root);
            input.setList(list);
            beanViewer.setSelection(new StructuredSelection(root));
            beanText.selectAll();
            beanText.setFocus();
        }
    });
    addRootButton.setText("Add Root");
    addChildBeanButton = new Button(group, SWT.NONE);
    addChildBeanButton.addSelectionListener(new SelectionAdapter() {

        public void widgetSelected(final SelectionEvent e) {
            Bean parent = getSelectedBean();
            List list = new ArrayList(parent.getList());
            Bean child = createBean("child");
            list.add(child);
            parent.setList(list);
            beanViewer.setSelection(new StructuredSelection(child));
            beanText.selectAll();
            beanText.setFocus();
        }
    });
    addChildBeanButton.setText("Add Child");
    removeBeanButton = new Button(group, SWT.NONE);
    removeBeanButton.addSelectionListener(new SelectionAdapter() {

        public void widgetSelected(final SelectionEvent e) {
            TreeItem selectedItem = beanViewer.getTree().getSelection()[0];
            TreeItem parentItem = selectedItem.getParentItem();
            Bean parent;
            int index;
            if (parentItem == null) {
                parent = input;
                index = beanViewer.getTree().indexOf(selectedItem);
            } else {
                parent = (Bean) parentItem.getData();
                index = parentItem.indexOf(selectedItem);
            }
            List list = new ArrayList(parent.getList());
            list.remove(index);
            parent.setList(list);
        }
    });
    removeBeanButton.setText("Remove");
    copyButton = new Button(group, SWT.NONE);
    copyButton.addSelectionListener(new SelectionAdapter() {

        public void widgetSelected(final SelectionEvent e) {
            clipboard.setValue(getSelectedBean());
        }
    });
    copyButton.setText("Copy");
    pasteButton = new Button(group, SWT.NONE);
    pasteButton.addSelectionListener(new SelectionAdapter() {

        public void widgetSelected(final SelectionEvent e) {
            Bean copy = (Bean) clipboard.getValue();
            if (copy == null)
                return;
            Bean parent = getSelectedBean();
            if (parent == null)
                parent = input;
            List list = new ArrayList(parent.getList());
            list.add(copy);
            parent.setList(list);
            beanViewer.setSelection(new StructuredSelection(copy));
            beanText.selectAll();
            beanText.setFocus();
        }
    });
    pasteButton.setText("Paste");
    final Button refreshButton = new Button(group, SWT.NONE);
    refreshButton.addSelectionListener(new SelectionAdapter() {

        public void widgetSelected(final SelectionEvent e) {
            beanViewer.refresh();
        }
    });
    refreshButton.setText("Refresh");
    beanViewer = new TreeViewer(shell, SWT.FULL_SELECTION | SWT.BORDER);
    beanViewer.setUseHashlookup(true);
    tree = beanViewer.getTree();
    tree.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 2, 1));
    final Label itemNameLabel = new Label(shell, SWT.NONE);
    itemNameLabel.setText("Item Name");
    beanText = new Text(shell, SWT.BORDER);
    final GridData gd_beanValue = new GridData(SWT.FILL, SWT.CENTER, true, false);
    beanText.setLayoutData(gd_beanValue);
    m_bindingContext = initDataBindings();
    // 
    initExtraBindings(m_bindingContext);
}
