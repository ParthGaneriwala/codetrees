@Test
public void testBag() throws Exception {
    ContextExtractor<Token> extractor = new ContextExtractor<Token>(Token.class, new TypePathExtractor(Token.class, "pos"), new Bag(new Preceding(2)), new Bag(new Preceding(3, 6)), new Bag(new FirstCovered(1), new LastCovered(1)), new Bag(new Following(1, 3)), new Bag(new Following(3, 5)), new Bag(new Preceding(1), new Following(1)));
    this.tokenBuilder.buildTokens(this.jCas, "The quick brown fox jumped over the lazy dog.", "The quick brown fox jumped over the lazy dog .", "DT JJ JJ NN VBD IN DT JJ NN .");
    Chunk chunk = new Chunk(this.jCas, 20, 31);
    chunk.addToIndexes();
    Assert.assertEquals("jumped over", chunk.getCoveredText());
    List<Feature> features = extractor.extract(this.jCas, chunk);
    Assert.assertEquals(13, features.size());
    Iterator<Feature> iter = features.iterator();
    this.assertFeature("Bag_Preceding_0_2_TypePath(Pos)", "JJ", iter.next());
    this.assertFeature("Bag_Preceding_0_2_TypePath(Pos)", "NN", iter.next());
    this.assertFeature("Bag_Preceding_3_6", "OOB2", iter.next());
    this.assertFeature("Bag_Preceding_3_6", "OOB1", iter.next());
    this.assertFeature("Bag_Preceding_3_6_TypePath(Pos)", "DT", iter.next());
    this.assertFeature("Bag_FirstCovered_0_1_LastCovered_0_1_TypePath(Pos)", "VBD", iter.next());
    this.assertFeature("Bag_FirstCovered_0_1_LastCovered_0_1_TypePath(Pos)", "IN", iter.next());
    this.assertFeature("Bag_Following_1_3_TypePath(Pos)", "JJ", iter.next());
    this.assertFeature("Bag_Following_1_3_TypePath(Pos)", "NN", iter.next());
    this.assertFeature("Bag_Following_3_5_TypePath(Pos)", ".", iter.next());
    this.assertFeature("Bag_Following_3_5", "OOB1", iter.next());
    this.assertFeature("Bag_Preceding_0_1_Following_0_1_TypePath(Pos)", "NN", iter.next());
    this.assertFeature("Bag_Preceding_0_1_Following_0_1_TypePath(Pos)", "DT", iter.next());
}
