@RequestMapping(value = "/addBoardList.htm", method = RequestMethod.POST)
public String addBoardList(@RequestParam("hostId") Long hostId, HttpServletRequest request, ModelMap model) throws Exception {
    Host host = hostRepository.get(hostId);
    Map<String, List<String>> boardMap = new HashMap<String, List<String>>();
    for (int i = 1; i <= 2; i++) {
        String boardUrl = request.getParameter("boardUrl" + i);
        if (StringUtils.isBlank(boardUrl)) {
            continue;
        }
        List<String> list = new ArrayList<String>();
        for (int j = 1; j <= 2; j++) {
            String pUrl = request.getParameter("pUrl" + i + j);
            list.add(pUrl);
        }
        boardMap.put(boardUrl, list);
    }
    Map<String, List<String>> topicMap = new HashMap<String, List<String>>();
    for (int i = 1; i <= 2; i++) {
        String topicUrl = request.getParameter("itemUrl" + i);
        if (StringUtils.isBlank(topicUrl)) {
            continue;
        }
        List<String> list = new ArrayList<String>();
        for (int j = 1; j <= 2; j++) {
            String pUrl = request.getParameter("pItemUrl" + i + j);
            list.add(pUrl);
        }
        topicMap.put(topicUrl, list);
    }
    PageUrlTemplate boardPageUrlTemplate = templateExtractor.deducePageUrl(boardMap);
    pageUrlTemplateRepository.save(boardPageUrlTemplate);
    PageUrlTemplate topicPageUrlTemplate = templateExtractor.deducePageUrl(topicMap);
    pageUrlTemplateRepository.save(topicPageUrlTemplate);
    host.setBoardPageTemplate(boardPageUrlTemplate);
    host.setTopicPageTemplate(topicPageUrlTemplate);
    hostRepository.save(host);
    return "redirect:addListFields.htm";
}
