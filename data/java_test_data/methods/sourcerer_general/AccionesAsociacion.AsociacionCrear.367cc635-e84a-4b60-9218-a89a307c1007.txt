public ActionForward AsociacionCrear(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    // Salidas
    final String SALIDA_1 = "asociacion";
    String salida = SALIDA_1;
    Session s = HibernateUtil.getSessionFactory().getCurrentSession();
    Transaction tr = s.beginTransaction();
    try {
        FAsociacion fFAsociacion = (FAsociacion) form;
        Asociacion asociacion = new Asociacion();
        if (fFAsociacion.getRequisito() == 0)
            asociacion.setRequisito(null);
        else if ((asociacion.getRequisito() == null) || (asociacion.getRequisito().getIdRequisito() != fFAsociacion.getRequisito())) {
            Requisitos obj = (Requisitos) s.load(Requisitos.class, fFAsociacion.getRequisito());
            asociacion.setRequisito(obj);
        }
        asociacion.setPeriodoAbs(fFAsociacion.getPeriodoAbs());
        {
            Modalidad obj = (Modalidad) s.load(Modalidad.class, new Long(request.getParameter("idModalidad")));
            obj.addToAsociaciones(asociacion);
            fFAsociacion.setModalidad(obj.getIdModalidad());
        }
        // s.save(asociacion);
        s.flush();
        fFAsociacion.setIdAsociacion(asociacion.getIdAsociacion());
        // Feed for combo listRequisitos.
        {
            java.util.List<ve.usb.cohesion.runtime.Pair> list = (java.util.List<ve.usb.cohesion.runtime.Pair>) s.createQuery("select new ve.usb.cohesion.runtime.Pair(asignatura.codigo, idRequisito) " + "from Requisitos").list();
            list.add(0, new ve.usb.cohesion.runtime.Pair("Ninguna", 0));
            fFAsociacion.setListRequisitos(list);
        }
        // Feed for combo listModalidad.
        {
            java.util.List<ve.usb.cohesion.runtime.Pair> list = (java.util.List<ve.usb.cohesion.runtime.Pair>) s.createQuery("select new ve.usb.cohesion.runtime.Pair(nombre, idModalidad) " + "from Modalidad").list();
            list.add(0, new ve.usb.cohesion.runtime.Pair("Ninguna", 0));
            fFAsociacion.setListModalidad(list);
        }
        // fFAsociacion.setModalidad(asociacion.getModalidad().getIdModalidad());
        request.getSession().setAttribute("idRequisito", fFAsociacion.getRequisito());
        request.getSession().setAttribute("idModalidad", fFAsociacion.getModalidad());
        request.getSession().setAttribute("idAsociacion", asociacion.getIdAsociacion());
        tr.commit();
    } catch (Exception ex) {
        tr.rollback();
        throw ex;
    }
    return mapping.findForward(salida);
}
