public final void token() throws RecognitionException, TokenStreamException {
    returnAST = null;
    ASTPair currentAST = new ASTPair();
    AST token_AST = null;
    Token a = null;
    AST a_AST = null;
    Token b = null;
    AST b_AST = null;
    try {
        // for error handling
        {
            switch(LA(1)) {
                case MACRO:
                    {
                        a = LT(1);
                        a_AST = astFactory.create(a);
                        astFactory.addASTChild(currentAST, a_AST);
                        match(MACRO);
                        token_AST = (AST) currentAST.root;
                        token_AST = (AST) astFactory.make((new ASTArray(2)).add(astFactory.create(MACRO, "macro")).add(a_AST));
                        currentAST.root = token_AST;
                        currentAST.child = token_AST != null && token_AST.getFirstChild() != null ? token_AST.getFirstChild() : token_AST;
                        currentAST.advanceChildToEnd();
                        break;
                    }
                case NON_MACRO:
                    {
                        b = LT(1);
                        b_AST = astFactory.create(b);
                        astFactory.addASTChild(currentAST, b_AST);
                        match(NON_MACRO);
                        token_AST = (AST) currentAST.root;
                        token_AST = (AST) astFactory.make((new ASTArray(2)).add(astFactory.create(NON_MACRO, "non_macro")).add(b_AST));
                        currentAST.root = token_AST;
                        currentAST.child = token_AST != null && token_AST.getFirstChild() != null ? token_AST.getFirstChild() : token_AST;
                        currentAST.advanceChildToEnd();
                        break;
                    }
                default:
                    {
                        throw new NoViableAltException(LT(1), getFilename());
                    }
            }
        }
        token_AST = (AST) currentAST.root;
    } catch (RecognitionException ex) {
        reportError(ex);
        recover(ex, _tokenSet_1);
    }
    returnAST = token_AST;
}
