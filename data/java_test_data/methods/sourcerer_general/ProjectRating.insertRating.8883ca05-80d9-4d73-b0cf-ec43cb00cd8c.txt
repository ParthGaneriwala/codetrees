private static void insertRating(Connection db, ProjectRating projectRating) throws SQLException {
    StringBuffer sql = new StringBuffer();
    sql.append("INSERT INTO projects_rating " + "(project_id, rating, title, comment, enteredby, modifiedby ");
    if (projectRating.getEntered() != null) {
        sql.append(", entered ");
    }
    if (projectRating.getModified() != null) {
        sql.append(",modified ");
    }
    sql.append(") VALUES (");
    sql.append("?, ?, ?, ?, ?, ?");
    if (projectRating.getEntered() != null) {
        sql.append(",? ");
    }
    if (projectRating.getModified() != null) {
        sql.append(",? ");
    }
    sql.append(")");
    int i = 0;
    PreparedStatement pst = db.prepareStatement(sql.toString());
    DatabaseUtils.setInt(pst, ++i, projectRating.getProjectId());
    DatabaseUtils.setInt(pst, ++i, projectRating.getRating());
    pst.setString(++i, projectRating.getTitle());
    pst.setString(++i, projectRating.getComment());
    pst.setInt(++i, projectRating.getEnteredBy());
    if (projectRating.getModifiedBy() > -1) {
        pst.setInt(++i, projectRating.getModifiedBy());
    } else {
        pst.setInt(++i, projectRating.getEnteredBy());
    }
    if (projectRating.getEntered() != null) {
        pst.setTimestamp(++i, projectRating.getEntered());
    }
    if (projectRating.getModified() != null) {
        pst.setTimestamp(++i, projectRating.getModified());
    }
    pst.execute();
    pst.close();
    projectRating.setId(DatabaseUtils.getCurrVal(db, "projects_rating_rating_id_seq", projectRating.getId()));
}
