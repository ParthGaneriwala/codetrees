public String executeCommandAdd(ActionContext context) {
    Exception errorMessage = null;
    Connection db = null;
    String projectId = context.getRequest().getParameter("pid");
    try {
        db = getConnection(context);
        // Load the project
        Project thisProject = retrieveAuthorizedProject(Integer.parseInt(projectId), context);
        if (!hasProjectAccess(context, thisProject.getId(), "project-lists-modify")) {
            return "PermissionError";
        }
        context.getRequest().setAttribute("project", thisProject);
        context.getRequest().setAttribute("IncludeSection", "lists_add");
        // Prepare the category header
        String categoryId = context.getRequest().getParameter("cid");
        if (categoryId == null) {
            categoryId = context.getRequest().getParameter("categoryId");
        }
        TaskCategory thisCategory = new TaskCategory(db, Integer.parseInt(categoryId));
        context.getRequest().setAttribute("category", thisCategory);
        // Prepare the form lookups
        LookupList priorityList = new LookupList(db, "lookup_task_priority");
        context.getRequest().setAttribute("PriorityList", priorityList);
        // Make the assignable users available
        TeamMemberList teamMemberList = new TeamMemberList();
        teamMemberList.setProjectId(thisProject.getId());
        teamMemberList.setMinimumRoleLevel(TeamMember.VIP);
        teamMemberList.buildList(db);
        context.getRequest().setAttribute("teamMemberList", teamMemberList);
        ProjectItemList functionalAreaList = new ProjectItemList();
        functionalAreaList.setProjectId(thisProject.getId());
        functionalAreaList.buildList(db, ProjectItemList.LIST_FUNCTIONAL_AREA);
        context.getRequest().setAttribute("functionalAreaList", functionalAreaList);
        ProjectItemList complexityList = new ProjectItemList();
        complexityList.setProjectId(thisProject.getId());
        complexityList.buildList(db, ProjectItemList.LIST_COMPLEXITY);
        context.getRequest().setAttribute("complexityList", complexityList);
        ProjectItemList businessValueList = new ProjectItemList();
        businessValueList.setProjectId(thisProject.getId());
        businessValueList.buildList(db, ProjectItemList.LIST_VALUE);
        context.getRequest().setAttribute("businessValueList", businessValueList);
        ProjectItemList targetSprintList = new ProjectItemList();
        targetSprintList.setProjectId(thisProject.getId());
        targetSprintList.buildList(db, ProjectItemList.LIST_TARGET_SPRINT);
        context.getRequest().setAttribute("targetSprintList", targetSprintList);
        ProjectItemList targetReleaseList = new ProjectItemList();
        targetReleaseList.setProjectId(thisProject.getId());
        targetReleaseList.buildList(db, ProjectItemList.LIST_TARGET_RELEASE);
        context.getRequest().setAttribute("targetReleaseList", targetReleaseList);
        ProjectItemList statusList = new ProjectItemList();
        statusList.setProjectId(thisProject.getId());
        statusList.buildList(db, ProjectItemList.LIST_STATUS);
        context.getRequest().setAttribute("statusList", statusList);
        ProjectItemList loeRemainingList = new ProjectItemList();
        loeRemainingList.setProjectId(thisProject.getId());
        loeRemainingList.buildList(db, ProjectItemList.LIST_LOE_REMAINING);
        context.getRequest().setAttribute("loeRemainingList", loeRemainingList);
        ProjectItemList assignedPriorityList = new ProjectItemList();
        assignedPriorityList.setProjectId(thisProject.getId());
        assignedPriorityList.buildList(db, ProjectItemList.LIST_ASSIGNED_PRIORITY);
        context.getRequest().setAttribute("assignedPriorityList", assignedPriorityList);
    // Prepare the form object
    // Task thisTask = (Task) context.getFormBean();
    } catch (Exception e) {
        errorMessage = e;
    } finally {
        this.freeConnection(context, db);
    }
    if (errorMessage == null) {
        return ("ProjectCenterOK");
    } else {
        context.getRequest().setAttribute("Error", errorMessage);
        return ("SystemError");
    }
}
