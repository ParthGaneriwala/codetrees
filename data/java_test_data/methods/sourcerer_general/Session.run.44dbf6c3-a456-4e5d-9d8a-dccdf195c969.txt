public void run() {
    for (int i = 0; i < listeners.size(); i++) {
        SessionListener l = (SessionListener) listeners.elementAt(i);
        // System.out.println("@@@Entered "+ev);
        switch(type) {
            case SERVICE_LOGOFF:
                l.connectionClosed(ev);
                break;
            case SERVICE_ISAWAY:
                l.friendsUpdateReceived((SessionFriendEvent) ev);
                break;
            case SERVICE_MESSAGE:
                l.messageReceived(ev);
                break;
            case SERVICE_X_OFFLINE:
                l.offlineMessageReceived(ev);
                break;
            case SERVICE_NEWMAIL:
                l.newMailReceived((SessionNewMailEvent) ev);
                break;
            case SERVICE_CONTACTNEW:
                l.contactRequestReceived((SessionEvent) ev);
                break;
            case SERVICE_CONFDECLINE:
                l.conferenceInviteDeclinedReceived((SessionConferenceEvent) ev);
                break;
            case SERVICE_CONFINVITE:
                l.conferenceInviteReceived((SessionConferenceEvent) ev);
                break;
            case SERVICE_CONFLOGON:
                l.conferenceLogonReceived((SessionConferenceEvent) ev);
                break;
            case SERVICE_CONFLOGOFF:
                l.conferenceLogoffReceived((SessionConferenceEvent) ev);
                break;
            case SERVICE_CONFMSG:
                l.conferenceMessageReceived((SessionConferenceEvent) ev);
                break;
            case SERVICE_FILETRANSFER:
                l.fileTransferReceived((SessionFileTransferEvent) ev);
                break;
            case SERVICE_NOTIFY:
                l.notifyReceived((SessionNotifyEvent) ev);
                break;
            case SERVICE_LIST:
                l.listReceived(ev);
                break;
            case SERVICE_FRIENDADD:
                l.friendAddedReceived((SessionFriendEvent) ev);
                break;
            case SERVICE_FRIENDREMOVE:
                l.friendRemovedReceived((SessionFriendEvent) ev);
                break;
            case SERVICE_CONTACTREJECT:
                l.contactRejectionReceived((SessionEvent) ev);
                break;
            case SERVICE_CHATLOGON:
                l.chatLogonReceived((SessionChatEvent) ev);
                break;
            case SERVICE_CHATLOGOFF:
                l.chatLogoffReceived((SessionChatEvent) ev);
                break;
            case SERVICE_CHATDISCONNECT:
                l.chatConnectionClosed((SessionEvent) ev);
                break;
            case SERVICE_CHATMSG:
                l.chatMessageReceived((SessionChatEvent) ev);
                break;
            case SERVICE_X_CHATUPDATE:
                l.chatUserUpdateReceived((SessionChatEvent) ev);
                break;
            case SERVICE_X_ERROR:
                l.errorPacketReceived((SessionErrorEvent) ev);
                break;
            case SERVICE_X_EXCEPTION:
                l.inputExceptionThrown((SessionExceptionEvent) ev);
                break;
            case SERVICE_X_BUZZ:
                l.buzzReceived(ev);
                break;
            default:
                System.out.println("UNKNOWN event: " + type);
                break;
        }
    // System.out.println("@@@Exited "+ev);
    }
}
