public static void drawNextFlow(JspWriter out, String chainId, String flowId, String index) {
    try {
        ChainManager chainManager = (ChainManager) SpringUtil.getBean("chainManager");
        ChainFlowManager flowManager = (ChainFlowManager) SpringUtil.getBean("chainFlowManager");
        ChainFlow thisFlow = flowManager.getChainFlow(flowId);
        String nextFlowCode = thisFlow.getNextFlowCode();
        Chain chain = chainManager.getChain(chainId);
        if (Constants.FLOW_TYPE_CONDITION.equals(thisFlow.getFlowType()) || Constants.FLOW_TYPE_SQL_CONDITION.equals(thisFlow.getFlowType())) {
            if ("0".equals(index)) {
                nextFlowCode = thisFlow.getAttr1();
            } else if ("1".equals(index)) {
                nextFlowCode = thisFlow.getAttr2();
            }
        }
        Set flows = chain.getChainFlows();
        Iterator flowsIterator = flows.iterator();
        Long id = Long.parseLong(flowId);
        Long[] l = new Long[flows.size() - 1];
        out.print("<option value=\"\" />");
        int i = 0;
        while (flowsIterator.hasNext()) {
            ChainFlow flow = (ChainFlow) flowsIterator.next();
            String flowCode = flow.getFlowCode();
            Long chainFlowId = flow.getFlowId();
            if (!chainFlowId.equals(id)) {
                l[i++] = Long.parseLong(flowCode);
            }
        }
        Arrays.sort(l);
        for (int j = 0; j < l.length; j++) {
            String flowCode = l[j].toString();
            if (5 > flowCode.length()) {
                for (int k = 5; flowCode.length() != 5; k--) {
                    flowCode = "0" + flowCode;
                }
            }
            out.print("<option value=\"" + flowCode + "\" ");
            out.print((flowCode.equals(nextFlowCode) ? "selected" : "") + ">");
            out.print(flowCode + "</option>");
        }
    } catch (Exception e) {
        log.warn("Draw flow list error.", e);
    }
}
