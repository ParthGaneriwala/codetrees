@Override
public void run() {
    String prevNote = "";
    HttpPost post = new HttpPost(serverAddress);
    while (continueReading.get()) {
        try {
            Note outputNote = Note.newBuilder().setBtAddress(bluetoothAddress).build();
            post.setEntity(new ByteArrayEntity(outputNote.toByteArray()));
            HttpResponse response = httpClient.execute(post);
            HttpEntity responseEntity = response.getEntity();
            InputStream input = responseEntity.getContent();
            Note note = Note.parseFrom(input);
            if (!prevNote.equals(note.getMessage())) {
                Log.d(TAG, "Note received: " + note.toString());
                Bundle noteBundle = new Bundle();
                noteBundle.putString(BUNDLE_KEY, note.getMessage());
                Message message = handler.obtainMessage();
                message.setData(noteBundle);
                handler.sendMessage(message);
            }
            prevNote = note.getMessage();
        } catch (IOException io) {
            Log.e(TAG, "IOException when receiving note from " + serverAddress, io);
            Bundle noteBundle = new Bundle();
            noteBundle.putString(BUNDLE_KEY, "IOException: " + io.getMessage());
            Message message = handler.obtainMessage();
            handler.sendMessage(message);
            continueReading.set(false);
        }
        try {
            Thread.sleep(1000);
        } catch (InterruptedException ie) {
        }
    }
}
