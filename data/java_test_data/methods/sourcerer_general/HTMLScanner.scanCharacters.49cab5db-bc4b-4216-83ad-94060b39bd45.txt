// scan(boolean):boolean
// 
// Protected methods
// 
protected void scanCharacters() throws IOException {
    if (DEBUG_BUFFER) {
        System.out.print("(scanCharacters: ");
        printBuffer();
        System.out.println();
    }
    int newlines = skipNewlines();
    if (newlines == 0 && fCurrentEntity.offset == fCurrentEntity.length) {
        if (DEBUG_BUFFER) {
            System.out.print(")scanCharacters: ");
            printBuffer();
            System.out.println();
        }
        return;
    }
    char c;
    int offset = fCurrentEntity.offset - newlines;
    for (int i = offset; i < fCurrentEntity.offset; i++) {
        fCurrentEntity.buffer[i] = '\n';
    }
    while (fCurrentEntity.offset < fCurrentEntity.length) {
        c = fCurrentEntity.buffer[fCurrentEntity.offset];
        if (c == '<' || c == '&' || c == '\n' || c == '\r') {
            break;
        }
        fCurrentEntity.offset++;
        fCurrentEntity.columnNumber++;
    }
    if (fCurrentEntity.offset > offset && fDocumentHandler != null && fElementCount >= fElementDepth) {
        fString.setValues(fCurrentEntity.buffer, offset, fCurrentEntity.offset - offset);
        if (DEBUG_CALLBACKS) {
            System.out.println("characters(" + fString + ")");
        }
        fEndLineNumber = fCurrentEntity.lineNumber;
        fEndColumnNumber = fCurrentEntity.columnNumber;
        fDocumentHandler.characters(fString, locationAugs());
    }
    if (DEBUG_BUFFER) {
        System.out.print(")scanCharacters: ");
        printBuffer();
        System.out.println();
    }
}
