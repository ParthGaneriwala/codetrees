private void updateView() {
    // Log.d(Constants.LOG_TAG, "updateView");
    setContentView(R.layout.site_update_details);
    // Get the layout elements
    TextView name = (TextView) findViewById(R.id.site_update_details_name);
    TextView version = (TextView) findViewById(R.id.site_update_details_version);
    TextView blocks = (TextView) findViewById(R.id.site_update_details_blocks);
    TextView progress = (TextView) findViewById(R.id.site_update_progress);
    TextView size = (TextView) findViewById(R.id.site_update_details_size);
    TextView statusText = (TextView) findViewById(R.id.site_update_status);
    ProgressBar progressBar = (ProgressBar) findViewById(R.id.update_progress_bar);
    ProgressBar progressSpinner = (ProgressBar) findViewById(R.id.update_progress_spinner);
    Button toggleRunButton = (Button) findViewById(R.id.site_update_toggle_button);
    Button cancelButton = (Button) findViewById(R.id.site_update_cancel_button);
    // Set defaults
    name.setText(sUpdate.getName().replaceAll("_", " "));
    version.setText(sUpdate.getVersion());
    blocks.setText(sUpdate.getBlockCount() + "");
    progressBar.setVisibility(View.GONE);
    progressSpinner.setVisibility(View.GONE);
    size.setText(Utilities.parseBytesToHumanString(sUpdate.getFileSize()));
    statusText.setVisibility(View.VISIBLE);
    statusText.setText(sUpdate.getStatusMessage());
    progress.setVisibility(View.INVISIBLE);
    // Calculate the download percentage
    int downloadPercentage = 0;
    if (sUpdate.getCurrentBlock() > 1) {
        double p = (((double) sUpdate.getCurrentBlock() - 1.0) / (double) sUpdate.getBlockCount()) * 100.0;
        downloadPercentage = (int) p;
    }
    // Update elements based on the update's state
    if (sUpdate.isUpdateComplete()) {
        toggleRunButton.setVisibility(View.GONE);
        cancelButton.setVisibility(View.GONE);
    } else if (sUpdate.isUpdateInProgress()) {
        toggleRunButton.setText(R.string.pause_update);
        toggleRunButton.setVisibility(View.VISIBLE);
        cancelButton.setVisibility(View.VISIBLE);
        if (sUpdate.getCurrentMode() > SiteUpdateThread.MODE_RESUME) {
            progressSpinner.setVisibility(View.VISIBLE);
            progressBar.setVisibility(View.GONE);
        } else {
            progressBar.setProgress(downloadPercentage);
            progressBar.setVisibility(View.VISIBLE);
        }
    } else {
        if (!sUpdate.isUpdateAvailable() && !sUpdate.isNewSite()) {
            toggleRunButton.setVisibility(View.GONE);
            progress.setVisibility(View.GONE);
        } else if (sUpdate.hasUpdateStarted()) {
            toggleRunButton.setText(R.string.resume_update);
            progressBar.setVisibility(View.VISIBLE);
            progressBar.setProgress(downloadPercentage);
        } else if (sUpdate.hasError()) {
            toggleRunButton.setText(R.string.retry_update);
        } else {
            statusText.setVisibility(View.GONE);
            progress.setVisibility(View.GONE);
            toggleRunButton.setText(R.string.start_update);
        }
        cancelButton.setVisibility(View.GONE);
        if (mViewThread != null) {
            mViewThread.interrupt();
        }
    }
    onContentChanged();
}
