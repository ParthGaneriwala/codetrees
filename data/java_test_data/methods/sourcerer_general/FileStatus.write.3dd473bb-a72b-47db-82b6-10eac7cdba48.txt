public void write(TProtocol oprot) throws TException {
    TStruct struct = new TStruct("FileStatus");
    oprot.writeStructBegin(struct);
    TField field = new TField();
    if (this.path != null) {
        field.name = "path";
        field.type = TType.STRING;
        field.id = 1;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.path);
        oprot.writeFieldEnd();
    }
    field.name = "length";
    field.type = TType.I64;
    field.id = 2;
    oprot.writeFieldBegin(field);
    oprot.writeI64(this.length);
    oprot.writeFieldEnd();
    field.name = "isdir";
    field.type = TType.BOOL;
    field.id = 3;
    oprot.writeFieldBegin(field);
    oprot.writeBool(this.isdir);
    oprot.writeFieldEnd();
    field.name = "block_replication";
    field.type = TType.I16;
    field.id = 4;
    oprot.writeFieldBegin(field);
    oprot.writeI16(this.block_replication);
    oprot.writeFieldEnd();
    field.name = "blocksize";
    field.type = TType.I64;
    field.id = 5;
    oprot.writeFieldBegin(field);
    oprot.writeI64(this.blocksize);
    oprot.writeFieldEnd();
    field.name = "modification_time";
    field.type = TType.I64;
    field.id = 6;
    oprot.writeFieldBegin(field);
    oprot.writeI64(this.modification_time);
    oprot.writeFieldEnd();
    if (this.permission != null) {
        field.name = "permission";
        field.type = TType.STRING;
        field.id = 7;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.permission);
        oprot.writeFieldEnd();
    }
    if (this.owner != null) {
        field.name = "owner";
        field.type = TType.STRING;
        field.id = 8;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.owner);
        oprot.writeFieldEnd();
    }
    if (this.group != null) {
        field.name = "group";
        field.type = TType.STRING;
        field.id = 9;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.group);
        oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
}
