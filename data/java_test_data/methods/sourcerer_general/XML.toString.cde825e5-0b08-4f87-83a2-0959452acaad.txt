public static String toString(Object o, String tagName) throws JSONException {
    StringBuffer b = new StringBuffer();
    int i;
    JSONArray ja;
    JSONObject jo;
    String k;
    Iterator keys;
    int len;
    String s;
    Object v;
    if (o instanceof JSONObject) {
        if (tagName != null) {
            b.append('<');
            b.append(tagName);
            b.append('>');
        }
        // Loop thru the keys.
        jo = (JSONObject) o;
        keys = jo.keys();
        while (keys.hasNext()) {
            k = keys.next().toString();
            v = jo.opt(k);
            if (v == null) {
                v = "";
            }
            if (v instanceof String) {
                s = (String) v;
            } else {
                s = null;
            }
            if (k.equals("content")) {
                if (v instanceof JSONArray) {
                    ja = (JSONArray) v;
                    len = ja.length();
                    for (i = 0; i < len; i += 1) {
                        if (i > 0) {
                            b.append('\n');
                        }
                        b.append(escape(ja.get(i).toString()));
                    }
                } else {
                    b.append(escape(v.toString()));
                }
            // Emit an array of similar keys
            } else if (v instanceof JSONArray) {
                ja = (JSONArray) v;
                len = ja.length();
                for (i = 0; i < len; i += 1) {
                    v = ja.get(i);
                    if (v instanceof JSONArray) {
                        b.append('<');
                        b.append(k);
                        b.append('>');
                        b.append(toString(v));
                        b.append("</");
                        b.append(k);
                        b.append('>');
                    } else {
                        b.append(toString(v, k));
                    }
                }
            } else if (v.equals("")) {
                b.append('<');
                b.append(k);
                b.append("/>");
            // Emit a new tag <k>
            } else {
                b.append(toString(v, k));
            }
        }
        if (tagName != null) {
            // Emit the </tagname> close tag
            b.append("</");
            b.append(tagName);
            b.append('>');
        }
        return b.toString();
    // XML does not have good support for arrays. If an array appears in a place
    // where XML is lacking, synthesize an <array> element.
    } else if (o instanceof JSONArray) {
        ja = (JSONArray) o;
        len = ja.length();
        for (i = 0; i < len; ++i) {
            v = ja.opt(i);
            b.append(toString(v, (tagName == null) ? "array" : tagName));
        }
        return b.toString();
    } else {
        s = (o == null) ? "null" : escape(o.toString());
        return (tagName == null) ? "\"" + s + "\"" : (s.length() == 0) ? "<" + tagName + "/>" : "<" + tagName + ">" + s + "</" + tagName + ">";
    }
}
