public void compila(ArrayList<String> vAlTokens, int pIndex, Semantico semantico) throws Exception {
    // Percorrer os tokens para montar o cï¿½digo IL
    for (int i = pIndex; i < vAlTokens.size(); i++) {
        String vStrToken = vAlTokens.get(i);
        if (vStrToken.equals(Constantes.DS_ASSIGN)) {
            vStrToken = vAlTokens.get(i + 1);
            Token vToken = new Token(vStrToken, Constantes.CD_IL_INT32);
            semantico.executarAcao(vToken, Constantes.CD_ASSIGN);
            vToken.setExpresao(Funcoes.getExpressao(vAlTokens, i + 2));
            i = i + vToken.getExpresao().size();
            semantico.executarAcao(vToken, Constantes.CD_REALIZA_OPERACAO);
        } else if (vStrToken.equals(Constantes.DS_STM_PRINT)) {
            vStrToken = vAlTokens.get(i + 2);
            Token vToken = new Token(vStrToken);
            vToken.aIsAtribuicao = false;
            vToken.setExpresao(Funcoes.getExpressao(vAlTokens, i + 2));
            i = i + vToken.getExpresao().size();
            semantico.executarAcao(vToken, Constantes.CD_REALIZA_OPERACAO);
            semantico.executarAcao(vToken, Constantes.CD_STM_PRINT);
        } else if (vStrToken.equals(Constantes.DS_STM_IF)) {
            IFStatment vStatmentIF = Funcoes.getIFStatment(vAlTokens, i + 1);
            Token vToken = new Token(vStrToken);
            vToken.setIFStatment(vStatmentIF);
            i = i + vToken.getIFStatment().aStackExpressao.size() + vToken.getIFStatment().aStackBlocoVerdadeiro.size() + vToken.getIFStatment().aStackBlocoFalso.size();
            semantico.executarAcao(vToken, Constantes.CD_REALIZA_EXPRESSAO_IF);
        } else if (vStrToken.equals(Constantes.DS_STM_WHILE)) {
            WHILEStatment vStatmentWHILE = Funcoes.getWHILEStatment(vAlTokens, i + 1);
            Token vToken = new Token(vStrToken);
            vToken.setWHILEStatment(vStatmentWHILE);
            i = i + vToken.getWHILEStatment().aStackExpressao.size() + vToken.getWHILEStatment().aStackBloco.size();
            semantico.executarAcao(vToken, Constantes.CD_REALIZA_EXPRESSAO_WHILE);
        }
    }
}
