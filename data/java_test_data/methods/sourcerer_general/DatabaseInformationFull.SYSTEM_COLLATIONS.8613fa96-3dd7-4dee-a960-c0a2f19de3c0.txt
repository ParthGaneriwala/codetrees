Table SYSTEM_COLLATIONS() throws HsqlException {
    Table t = sysTables[SYSTEM_COLLATIONS];
    if (t == null) {
        t = createBlankTable(sysTableHsqlNames[SYSTEM_COLLATIONS]);
        addColumn(t, "COLLATION_CATALOG", Types.VARCHAR);
        addColumn(t, "COLLATION_SCHEMA", Types.VARCHAR, true);
        addColumn(t, "COLLATION_NAME", Types.VARCHAR, true);
        addColumn(t, "PAD_ATTRIBUTE", Types.VARCHAR, 9, true);
        addColumn(t, "COLLATION_TYPE", Types.VARCHAR, true);
        addColumn(t, "COLLATION_DEFINITION", Types.VARCHAR);
        addColumn(t, "COLLATION_DICTIONARY", Types.VARCHAR);
        addColumn(t, "CHARACTER_REPERTOIRE_NAME", Types.VARCHAR, true);
        // false PK, as rows may have NULL COLLATION_CATALOG
        t.createPrimaryKey(null, new int[] { 0, 1, 2 }, false);
        return t;
    }
    Iterator collations;
    String collation;
    String collationSchema = SchemaManager.PUBLIC_SCHEMA;
    String padAttribute = "NO PAD";
    String characterRepertoireName = "UNICODE";
    Object[] row;
    final int icolcat = 0;
    final int icolschem = 1;
    final int icolname = 2;
    final int ipadattr = 3;
    final int icoltype = 4;
    final int icoldef = 5;
    final int icoldict = 6;
    final int icharrep = 7;
    collations = Collation.nameToJavaName.keySet().iterator();
    while (collations.hasNext()) {
        row = t.getEmptyRowData();
        collation = (String) collations.next();
        row[icolcat] = ns.getCatalogName(collation);
        row[icolschem] = collationSchema;
        row[icolname] = collation;
        row[ipadattr] = padAttribute;
        row[icharrep] = characterRepertoireName;
        t.insertSys(row);
    }
    t.setDataReadOnly(true);
    return t;
}
