public void rotateRYB(float i_angle) {
    float hue = ((p.hue(c)) / 256f) * 360;
    i_angle %= 360;
    float angle = 0;
    int[][] wheel = { { 0, 0 }, { 15, 8 }, { 30, 17 }, { 45, 26 }, { 60, 34 }, { 75, 41 }, { 90, 48 }, { 105, 54 }, { 120, 60 }, { 135, 81 }, { 150, 103 }, { 165, 123 }, { 180, 138 }, { 195, 155 }, { 210, 171 }, { 225, 187 }, { 240, 204 }, { 255, 219 }, { 270, 234 }, { 285, 251 }, { 300, 267 }, { 315, 282 }, { 330, 298 }, { 345, 329 }, { 360, 0 } };
    for (int i = 0; i < wheel.length - 1; i++) {
        int x0 = wheel[i][0];
        int y0 = wheel[i][1];
        int x1 = wheel[i + 1][0];
        int y1 = wheel[i + 1][1];
        if (y1 < y0) {
            y1 += 360;
        }
        if (y0 <= hue && hue <= y1) {
            angle = 1f * x0 + (x1 - x0) * (hue - y0) / (y1 - y0);
            break;
        }
    }
    System.out.println("hue: " + hue + "angle: " + angle);
    angle = (angle + i_angle) % 360;
    for (int i = 0; i < wheel.length - 1; i++) {
        int x0 = wheel[i][0];
        int y0 = wheel[i][1];
        int x1 = wheel[i + 1][0];
        int y1 = wheel[i + 1][1];
        if (y1 < y0)
            y1 += 360;
        if (x0 <= angle && angle <= x1) {
            hue = 1f * y0 + (y1 - y0) * (angle - x0) / (x1 - x0);
            break;
        }
    }
    hue %= 360;
    c = setHSBColor(hue * 256 / 360, p.saturation(c), p.brightness(c), p.alpha(c));
}
