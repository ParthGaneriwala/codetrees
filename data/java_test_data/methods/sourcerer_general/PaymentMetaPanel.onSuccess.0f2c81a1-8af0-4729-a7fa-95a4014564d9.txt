public void onSuccess(PaymentConfigMetaForm result) {
    System.out.println("result: \n");
    System.out.println(result.toString());
    // contentPanel.reset();
    // removeMyPanel(contentPanel);
    // contentPanel = new ColumnPanel();
    // add(contentPanel);
    // contentPanel.layout();
    // 
    // Window.alert("here11!");
    TextBox tb = new TextBox();
    tb.setText(result.getName());
    contentPanel.createPanel(PaymentConfigMetaForm.NAME, "支付方式名称", tb);
    TextArea ta = new TextArea();
    ta.setHeight("180px");
    ta.setWidth("250px");
    ta.setText(result.getDescription());
    contentPanel.createPanel(PaymentConfigMetaForm.DESC, "支付方式描述", ta);
    Map<String, PaymentConfigFieldMetaForm> fieldMetas = result.getFieldMetas();
    Map<String, String> keyValues = result.getFieldValues();
    for (String key : fieldMetas.keySet()) {
        String value = keyValues.get(key);
        System.out.println("key: " + key + ", value: " + value);
        PaymentConfigFieldMetaForm meta = fieldMetas.get(key);
        Object options = meta.getOptions();
        if (options == null) {
            TextBox textBox = new TextBox();
            textBox.setText(value);
            contentPanel.createPanel(key, meta.getLable(), textBox);
        } else {
            Map<String, String> optionMap = (Map<String, String>) options;
            List<ChoicePanel.Item> typeItems = new ArrayList<ChoicePanel.Item>();
            for (String option : optionMap.keySet()) {
                String lable = optionMap.get(option);
                typeItems.add(new ChoicePanel.Item(lable, option));
            }
            ChoicePanel choicePanel = new ChoicePanel(value, typeItems);
            contentPanel.createPanel(key, meta.getLable(), choicePanel);
        }
    }
    tb = new TextBox();
    tb.setText(result.getPayFee());
    contentPanel.createPanel(PaymentConfigMetaForm.PAYFEE, "支付手续费", tb);
    Label lb = new Label();
    if (result.isCod()) {
        lb.setText("是");
    } else {
        lb.setText("否");
    }
    contentPanel.createPanel(null, "货到付款？", lb);
    lb = new Label();
    if (result.isOnline()) {
        lb.setText("是");
    } else {
        lb.setText("否");
    }
    contentPanel.createPanel(null, "在线支付？", lb);
    Button btnNew = new Button();
    Button btnCancel = new Button();
    HorizontalPanel panel = new HorizontalPanel();
    panel.setSpacing(10);
    btnNew.setText("确定");
    btnCancel.setText("重置");
    panel.add(btnNew);
    panel.add(btnCancel);
    contentPanel.createPanel(null, null, panel);
    isonline = new Hidden(PaymentConfigMetaForm.ISONLINE, String.valueOf(result.isOnline()));
    iscod = new Hidden(PaymentConfigMetaForm.ISCOD, String.valueOf(result.isCod()));
    idhidden = new Hidden(PaymentConfigMetaForm.ID, String.valueOf(result.getId()));
    code = new Hidden(PaymentConfigMetaForm.CODE, result.getCode());
    order = new Hidden(PaymentConfigMetaForm.ORDER, "0");
    contentPanel.createPanel(PaymentConfigMetaForm.ISONLINE, null, isonline);
    contentPanel.createPanel(PaymentConfigMetaForm.ISCOD, null, iscod);
    contentPanel.createPanel(PaymentConfigMetaForm.ID, null, idhidden);
    contentPanel.createPanel(PaymentConfigMetaForm.CODE, null, code);
    contentPanel.createPanel(PaymentConfigMetaForm.ORDER, null, order);
    // contentPanel.createPanel(PaymentMeta.ISONLINE, "isonline", );
    // contentPanel.createPanel(PaymentMeta.ISCOD, "iscod", );
    // contentPanel.createPanel(PaymentMeta.ID, "id", );
    // contentPanel.createPanel(PaymentMeta.CODE, "code", );
    btnNew.addClickListener(new ClickListener() {

        public void onClick(Widget sender) {
            Map<String, Object> v = contentPanel.getValues();
            // v.put(isonline.getName(),isonline.getValue());
            // v.put(iscod.getName(),iscod.getValue());
            // v.put(idhidden.getName(),idhidden.getValue());
            // v.put(code.getName(),code.getValue());
            // v.put(order.getName(),order.getValue());
            getService().savePayment(v, new AsyncCallback<Boolean>() {

                public void onFailure(Throwable caught) {
                    System.out.println("save failure: " + caught.getMessage());
                }

                public void onSuccess(Boolean result) {
                    System.out.println("onSuccess: " + result.toString());
                    if (result) {
                        Success.State newState = new Success.State();
                        newState.setMessage("编辑成功");
                        PaymentMetaList.State listState = new PaymentMetaList.State();
                        newState.addChoice("支付方式列表", listState.getFullHistoryToken());
                        newState.execute();
                    } else {
                        Window.alert("保存结果失败！！！");
                    }
                }
            });
        }
    });
    btnCancel.addClickListener(new ClickListener() {

        public void onClick(Widget sender) {
            contentPanel.clearValues();
        }
    });
}
