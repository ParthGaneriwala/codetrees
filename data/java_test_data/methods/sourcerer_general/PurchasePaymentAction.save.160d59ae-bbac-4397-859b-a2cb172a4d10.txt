public String save() throws Exception {
    if (cancel != null) {
        return CANCEL;
    }
    if (delete != null) {
    // return delete();
    }
    boolean isNew = false;
    isNew = (purchasePayment.getId() == null);
    purchase = (Purchase) getSession().getAttribute("purchase");
    purchase = purchaseManager.get(purchase.getId());
    Double mount = Double.parseDouble(getRequest().getParameter("purchasePayment.amount"));
    // Verify that the new mount not exceed the rest price
    if (!isNew) {
        PurchasePayment purchasePaymentAux = purchasePaymentManager.get(purchasePayment.getId());
        Double modifyMount = purchase.getRestPrice() + purchasePaymentAux.getAmount();
        if (mount > modifyMount) {
            errorMessage("The mount: " + mount + " exceed the rest price");
            return "reload";
        } else {
            purchase.setRestPrice(modifyMount);
            purchase = purchaseManager.save(purchase);
        }
    } else {
        if (mount > purchase.getRestPrice()) {
            errorMessage("The mount: " + mount + " exceed the rest price");
            return "reload";
        }
    }
    purchasePayment.setDate(DateFormatChanger.changeStringtoDate(paidDate));
    purchasePayment.setAmount(Double.parseDouble(getRequest().getParameter("purchasePayment.amount")));
    purchasePayment.setPurchase(purchase);
    purchasePayment.setTypePayment(0);
    purchasePayment.setAmountLeft(purchase.getRestPrice() - purchasePayment.getAmount());
    purchasePayment = purchasePaymentManager.save(purchasePayment);
    purchase.setRestPrice(purchase.getRestPrice() - purchasePayment.getAmount());
    if (purchase.getDeleted()) {
        purchase.setDeleted(false);
        purchase.updateDeleted(false);
    }
    purchase = purchaseManager.save(purchase);
    if (!isNew) {
        saveMessage(getText("purchasePayment.updated"));
        return INPUT;
    } else {
        saveMessage(getText("purchasePayment.added"));
        return SUCCESS;
    }
}
