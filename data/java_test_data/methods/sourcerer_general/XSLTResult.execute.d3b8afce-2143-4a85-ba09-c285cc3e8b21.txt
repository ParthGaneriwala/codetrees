public void execute(ActionInvocation invocation) throws Exception {
    long startTime = System.currentTimeMillis();
    String location = getStylesheetLocation();
    if (parse) {
        ValueStack stack = ActionContext.getContext().getValueStack();
        location = TextParseUtil.translateVariables(location, stack);
    }
    try {
        HttpServletResponse response = ServletActionContext.getResponse();
        Writer writer = response.getWriter();
        // Create a transformer for the stylesheet.
        Templates templates = null;
        Transformer transformer;
        if (location != null) {
            templates = getTemplates(location);
            transformer = templates.newTransformer();
        } else
            transformer = TransformerFactory.newInstance().newTransformer();
        transformer.setURIResolver(getURIResolver());
        String mimeType;
        if (templates == null)
            // no stylesheet, raw xml
            mimeType = "text/xml";
        else
            mimeType = templates.getOutputProperties().getProperty(OutputKeys.MEDIA_TYPE);
        if (mimeType == null) {
            // guess (this is a servlet, so text/html might be the best guess)
            mimeType = "text/html";
        }
        response.setContentType(mimeType);
        Object result = invocation.getAction();
        if (exposedValue != null) {
            ValueStack stack = invocation.getStack();
            result = stack.findValue(exposedValue);
        }
        Source xmlSource = getDOMSourceForStack(result);
        // Transform the source XML to System.out.
        PrintWriter out = response.getWriter();
        LOG.debug("xmlSource = " + xmlSource);
        transformer.transform(xmlSource, new StreamResult(out));
        // ...and flush...
        out.close();
        if (LOG.isDebugEnabled()) {
            LOG.debug("Time:" + (System.currentTimeMillis() - startTime) + "ms");
        }
        writer.flush();
    } catch (Exception e) {
        LOG.error("Unable to render XSLT Template, '" + location + "'", e);
        throw e;
    }
}
