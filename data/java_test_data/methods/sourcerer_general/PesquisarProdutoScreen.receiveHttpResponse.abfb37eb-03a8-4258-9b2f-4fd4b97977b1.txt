public void receiveHttpResponse(byte[] responseBuf) {
    String produtoLabel;
    ByteArrayInputStream responseStream = new ByteArrayInputStream(responseBuf);
    InputStreamReader responseReader = new InputStreamReader(responseStream);
    KXmlParser parser = new KXmlParser();
    try {
        parser.setInput(responseReader);
        parser.nextTag();
        parser.require(XmlPullParser.START_TAG, null, "produtos");
        // parser.nextTag();
        int counterProdutos = 1;
        while (parser.nextTag() != XmlPullParser.END_TAG) {
            parser.require(XmlPullParser.START_TAG, null, "produto");
            produtoLabel = "PRODUTO " + counterProdutos + "\n";
            // resposta.append(produto);
            // resposta.append("\n");
            parserProdutoItem(parser);
            // /resposta.append(produtoLabel+produtos, null);
            parser.require(XmlPullParser.END_TAG, null, "produto");
            counterProdutos++;
        }
        parser.require(XmlPullParser.END_TAG, null, "produtos");
        parser.next();
        parser.require(XmlPullParser.END_DOCUMENT, null, null);
        resposta.append(produtosCg);
        midlet.showScreen(resposta);
    } catch (XmlPullParserException e) {
        e.printStackTrace();
    }// return message.toString();
     catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } catch (Exception e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
}
