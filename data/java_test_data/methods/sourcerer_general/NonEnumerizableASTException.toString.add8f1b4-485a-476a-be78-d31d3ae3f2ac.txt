public String toString() {
    final CompilationUnit root = (CompilationUnit) this.problem.getRoot();
    final ICompilationUnit icu = (ICompilationUnit) root.getJavaElement();
    final StringBuffer ret = new StringBuffer();
    ret.append(icu.getJavaProject().getProject().getName());
    // $NON-NLS-1$
    ret.append("\t");
    ret.append(root.getPackage() != null ? root.getPackage().getName() + "." + icu.getElementName() : // $NON-NLS-1$
    icu.getElementName());
    // $NON-NLS-1$
    ret.append("\t");
    ret.append(root.getLineNumber(this.problem.getStartPosition()));
    // $NON-NLS-1$
    ret.append("\t");
    ret.append(this.problem.getStartPosition());
    // $NON-NLS-1$
    ret.append("\t");
    ret.append(this.problem.getLength());
    // $NON-NLS-1$
    ret.append("\t");
    ret.append(this.getClass().getName());
    // $NON-NLS-1$
    ret.append("\t");
    ret.append(this.getMessage());
    // $NON-NLS-1$
    ret.append("\t");
    ret.append(ASTNode.nodeClassForType(this.problem.getNodeType()).getName());
    // $NON-NLS-1$
    ret.append("\t");
    ret.append(this.problem.toString().replace('\n', ' '));
    // $NON-NLS-1$
    ret.append("\t\t\t");
    return ret.toString();
}
