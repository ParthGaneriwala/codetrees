private void parseLines(MobileApnState apnstate, String mobile, String sgsnid, List<String> lines, int subdataline, List<Integer> subapnlines, int activeapnline) throws Exception {
    int i = 0;
    if (subdataline == 0) {
        // 未附着状态,下面的不用处理了,直接返回
        apnstate.setStatus("noattach");
        return;
    }
    // 第一个subapn的起始处
    int endsubdataline = subapnlines.size() > 0 ? subapnlines.get(0) : lines.size();
    // System.out.println("第一个:::" + endsubdataline);
    SubscribedPDP subpdp = null;
    int iiii = 0;
    for (String line : lines) {
        i++;
        if (line.equals("isover"))
            break;
        int idx = line.indexOf(":");
        String substrvalue = "";
        String substrkey = "";
        if (idx != -1) {
            substrvalue = line.substring(idx + 1).trim();
            substrkey = line.substring(0, idx).trim();
        // _LOG.debug(substrkey + "==>" + substrvalue);
        }
        if (line.indexOf("Subscriber Data") != -1) {
            SubscriberData subdata = new SubscriberData();
            apnstate.setSubdata(subdata);
            System.out.println("尻。。。。。。。。。。。。。。。。。。。。。。。。。。");
        }
        if (line.indexOf("Subscribed PDP") != -1) {
            subpdp = new SubscribedPDP();
            apnstate.addSubpdp(subpdp);
        }
        if (line.indexOf("Active PDP") != -1) {
            ActiveApn activeapn = new ActiveApn();
            apnstate.setActiveapn(activeapn);
        }
        if (i >= subdataline && i < endsubdataline) {
            if (apnstate.getSubdata() != null) {
                if (substrkey.indexOf("IMSI") != -1) {
                    apnstate.getSubdata().setImsi(substrvalue);
                } else if (substrkey.indexOf("IMEI") != -1) {
                    apnstate.getSubdata().setImei(substrvalue);
                } else if (substrkey.indexOf("Mobile Subscriber ISDN No") != -1) {
                    apnstate.getSubdata().setMsisdn(substrvalue);
                } else if (substrkey.indexOf("Roaming Status") != -1) {
                    apnstate.getSubdata().setRoaminStatus(substrvalue);
                } else if (substrkey.indexOf("Home PLMN APN Operator Id") != -1) {
                    apnstate.getSubdata().setOperatorId(substrvalue);
                } else if (substrkey.indexOf("HLR Address") != -1) {
                    apnstate.getSubdata().setHlrAddress(substrvalue);
                } else if (substrkey.indexOf("Subscribed Teleservices") != -1) {
                    apnstate.getSubdata().setSubscribedTeleservices(substrvalue);
                } else if (substrkey.indexOf("Mobility Management State") != -1) {
                    apnstate.getSubdata().setMobilityState(substrvalue);
                    apnstate.setStatus(substrvalue);
                } else if (substrkey.indexOf("Routing Area [RAI]") != -1) {
                    apnstate.getSubdata().setRai(substrvalue);
                } else if (substrkey.indexOf("Cell [CGI]") != -1) {
                    apnstate.getSubdata().setCellcgi(substrvalue);
                }
            } else {
                System.out.println("========不对啊,这里有错??????????????????" + (iiii++));
            }
        } else if (i >= endsubdataline && (activeapnline == 0 ? true : (i < activeapnline))) {
            if (subpdp != null) {
                if (line.indexOf("Id") != -1) {
                    subpdp.setId(substrvalue);
                } else if (substrkey.indexOf("Type") != -1) {
                    subpdp.setIptype(substrvalue);
                } else if (substrkey.indexOf("Address") != -1) {
                    subpdp.setAddress(substrvalue);
                } else if (substrkey.indexOf("APN") != -1) {
                    subpdp.setSubapn(substrvalue);
                }
            }
        // Subscribed PDP
        // ----------------------------------------------------------------------
        // Id : 2
        // Type : IPv4
        // Address : Dynamic
        // Quality of service :
        // allocation/retention priority : level2
        // delay class : class1
        // reliability class : Unack: GTP,LLC. Ack: RLC. Protected data
        // peak throughput (octet/s) : up to 256000
        // precedence class : normal priority
        // mean throughput (octet/h) : best effort
        // traffic class : interactive
        // delivery order : yes
        // delivery of erroneous SDU : no
        // maximum SDU size (octets) : 1500
        // maximum bit rate for uplink (kbps) : 2048
        // maximum bit rate for downlink (kbps) : 2048
        // residual BER : 1E-5
        // SDU error ratio : 1E-4
        // transfer delay (ms) : 0
        // traffic handling priority : level1
        // guaranteed bit rate for uplink (kbps) : 0
        // guaranteed bit rate for downlink (kbps) : 0
        // VPLMN allowed : false
        // APN : cmmm
        // PDP Charging Characteristics :
        // PDP Charging Characteristics Profile :
        } else if (i >= activeapnline) {
            // } else
            if (apnstate.getActiveapn() != null) {
                if (substrkey.indexOf("Id") != -1) {
                    apnstate.getActiveapn().setId(substrvalue);
                } else if (substrkey.indexOf("NSAPI") != -1) {
                    apnstate.getActiveapn().setNsapi(substrvalue);
                } else if (substrkey.indexOf("APN requested") != -1) {
                    apnstate.getActiveapn().setApnRequest(substrvalue);
                } else if (substrkey.indexOf("Addressing nature") != -1) {
                    apnstate.getActiveapn().setAddressNature(substrvalue);
                } else if (substrkey.indexOf("Address in use") != -1) {
                    apnstate.getActiveapn().setAddressInUse(substrvalue);
                } else if (substrkey.indexOf("APN in use") != -1) {
                    apnstate.getActiveapn().setApnInUse(substrvalue);
                } else if (substrkey.indexOf("GGSN in use") != -1) {
                    apnstate.getActiveapn().setGgsnInUse(substrvalue);
                }
            }
        // // Active PDP
        // //
        // ----------------------------------------------------------------------
        // // Id : 3
        // // NSAPI : 5
        // // Type requested : Information not available
        // // Address requested : Information not available
        // // APN requested : Information not available
        // // Addressing nature : Dynamic
        // // Address in use : 10.201.2.57
        // // APN in use : smjt.cq.mnc000.mcc460.gprs
        // // GGSN in use : 221.177.188.35
        }
    }
}
