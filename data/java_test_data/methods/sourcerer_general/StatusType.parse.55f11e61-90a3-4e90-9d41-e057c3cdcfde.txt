public static StatusType parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception {
    StatusType object = new StatusType();
    int event;
    java.lang.String nillableValue = null;
    java.lang.String prefix = "";
    java.lang.String namespaceuri = "";
    try {
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance", "type") != null) {
            java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance", "type");
            if (fullTypeName != null) {
                java.lang.String nsPrefix = null;
                if (fullTypeName.indexOf(":") > -1) {
                    nsPrefix = fullTypeName.substring(0, fullTypeName.indexOf(":"));
                }
                nsPrefix = nsPrefix == null ? "" : nsPrefix;
                java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":") + 1);
                if (!"StatusType".equals(type)) {
                    // find namespace for the prefix
                    java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                    return (StatusType) com.jcommerce.ws.server.ExtensionMapper.getTypeObject(nsUri, type, reader);
                }
            }
        }
        // Note all attributes that were handled. Used to differ normal attributes
        // from anyAttributes.
        java.util.Vector handledAttributes = new java.util.Vector();
        // handle attribute "code"
        java.lang.String tempAttribCode = reader.getAttributeValue(null, "code");
        if (tempAttribCode != null) {
            java.lang.String content = tempAttribCode;
            object.setCode(org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(tempAttribCode));
        } else {
            object.setCode(java.lang.Integer.MIN_VALUE);
        }
        handledAttributes.add("code");
        // handle attribute "message"
        java.lang.String tempAttribMessage = reader.getAttributeValue(null, "message");
        if (tempAttribMessage != null) {
            java.lang.String content = tempAttribMessage;
            object.setMessage(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(tempAttribMessage));
        } else {
        }
        handledAttributes.add("message");
        reader.next();
    } catch (javax.xml.stream.XMLStreamException e) {
        throw new java.lang.Exception(e);
    }
    return object;
}
