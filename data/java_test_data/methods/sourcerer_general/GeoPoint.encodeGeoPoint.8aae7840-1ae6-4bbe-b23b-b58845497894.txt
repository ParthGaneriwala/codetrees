public static byte[] encodeGeoPoint(GeoPoint gp, byte[] enc, int ofs, int len) {
    /* null/empty bytes */
    if (enc == null) {
        return null;
    }
    /* offset/length out-of-range */
    if (len < 0) {
        len = enc.length;
    }
    if ((ofs + len) > enc.length) {
        return null;
    }
    /* not enough bytes to encode */
    if (len < ENCODE_LORES_LEN) {
        return null;
    }
    /* lat/lon */
    double lat = gp.getLatitude();
    double lon = gp.getLongitude();
    /* standard resolution */
    if ((len >= ENCODE_LORES_LEN) && (len < ENCODE_HIRES_LEN)) {
        // LL-LL-LL LL-LL-LL
        long rawLat24 = (lat != 0.0) ? Math.round((lat - 90.0) * (POW_24 / -180.0)) : 0L;
        long rawLon24 = (lon != 0.0) ? Math.round((lon + 180.0) * (POW_24 / 360.0)) : 0L;
        long rawAccum = ((rawLat24 << 24) & 0xFFFFFF000000L) | (rawLon24 & 0xFFFFFFL);
        enc[ofs + 0] = (byte) ((rawAccum >> 40) & 0xFF);
        enc[ofs + 1] = (byte) ((rawAccum >> 32) & 0xFF);
        enc[ofs + 2] = (byte) ((rawAccum >> 24) & 0xFF);
        enc[ofs + 3] = (byte) ((rawAccum >> 16) & 0xFF);
        enc[ofs + 4] = (byte) ((rawAccum >> 8) & 0xFF);
        enc[ofs + 5] = (byte) ((rawAccum) & 0xFF);
        return enc;
    }
    /* high resolution */
    if (len >= ENCODE_HIRES_LEN) {
        // LL-LL-LL-LL LL-LL-LL-LL
        long rawLat32 = (lat != 0.0) ? Math.round((lat - 90.0) * (POW_32 / -180.0)) : 0L;
        long rawLon32 = (lon != 0.0) ? Math.round((lon + 180.0) * (POW_32 / 360.0)) : 0L;
        long rawAccum = ((rawLat32 << 32) & 0xFFFFFFFF00000000L) | (rawLon32 & 0xFFFFFFFFL);
        enc[ofs + 0] = (byte) ((rawAccum >> 56) & 0xFF);
        enc[ofs + 1] = (byte) ((rawAccum >> 48) & 0xFF);
        enc[ofs + 2] = (byte) ((rawAccum >> 40) & 0xFF);
        enc[ofs + 3] = (byte) ((rawAccum >> 32) & 0xFF);
        enc[ofs + 4] = (byte) ((rawAccum >> 24) & 0xFF);
        enc[ofs + 5] = (byte) ((rawAccum >> 16) & 0xFF);
        enc[ofs + 6] = (byte) ((rawAccum >> 8) & 0xFF);
        enc[ofs + 7] = (byte) ((rawAccum) & 0xFF);
        return enc;
    }
    /* will never reach here */
    return null;
}
