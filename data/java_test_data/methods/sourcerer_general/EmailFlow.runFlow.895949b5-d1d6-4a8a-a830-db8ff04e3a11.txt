public String runFlow(ChainFlow chainFlow, ChainContext chainContext) throws FlowException {
    try {
        String sqlstr = "";
        log.info("Start to run the send email flow [" + chainFlow.getFlowName() + "]");
        chainContext.addSimuList("<font color=blue><b> Start to run the send email flow [" + chainFlow.getFlowCode() + "] </b></font>");
        if ("Y".equals(chainFlow.getSkipYn())) {
            log.info("Send email flow [" + chainFlow.getFlowName() + "]: skipFlag=true");
            chainContext.addSimuList("Send email flow [" + chainFlow.getFlowName() + "]: skipFlag=true<br>=================");
            return "0";
        }
        List scripts = chainFlow.getScripts();
        if (scripts.size() < 1) {
            log.info("Send email flow [" + chainFlow.getFlowName() + "]: there is no statement");
            chainContext.addSimuList("Send email flow [" + chainFlow.getFlowName() + "]: there is no statement<br>=================");
            return "0";
        }
        String emailAddress = chainFlow.getAttr1();
        String emailSender = chainFlow.getAttr2();
        if (emailSender == null || emailSender.trim().equals("")) {
            emailSender = "KAS";
        }
        log.info("EmailSender: " + emailSender);
        chainContext.addSimuList("EmailSender: " + emailSender);
        log.info("EmailAddress: " + emailAddress);
        chainContext.addSimuList("EmailAddress: " + emailAddress);
        SimpleMailMessage message = (SimpleMailMessage) SpringUtil.getBean("mailMessage");
        MailEngine mailEngine = (MailEngine) SpringUtil.getBean("mailEngine");
        StringBuffer msgStr = new StringBuffer();
        for (int i = 0; i < scripts.size(); i++) {
            sqlstr = scripts.get(i).toString();
            Iterator iter = chainContext.getDataMapIterator();
            while (iter.hasNext()) {
                DataMapping dataMapping = (DataMapping) iter.next();
                sqlstr = StringUtils.replace(sqlstr, dataMapping.getFieldName(), dataMapping.getFieldMapping());
            }
            sqlstr = FormulaFactory.getInstance().run(sqlstr);
            chainContext.addSimuList(sqlstr);
            msgStr.append(sqlstr);
        }
        message.setFrom(emailSender);
        message.setSubject("From KAS");
        message.setTo(emailAddress);
        message.setText(msgStr.toString());
        mailEngine.send(message);
        log.info("Send Smail Flow:: OK");
        chainContext.addSimuList("Send Email Flow:: OK<br>--------------------------------");
        return "0";
    } catch (Exception e) {
        log.error("Send Email Flow :" + e.getMessage());
        try {
            onError(chainFlow, chainContext, 98);
        } catch (Exception ex) {
        }
        return "98";
    }
}
