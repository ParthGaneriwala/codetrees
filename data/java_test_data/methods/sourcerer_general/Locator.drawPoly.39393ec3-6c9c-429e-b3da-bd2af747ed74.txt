private void drawPoly(Canvas canvas, Point[] vertices, int xoff, int yoff, Paint paint) {
    // This is the "normalized" triangle locator we want to generate.
    // 
    // (x0, y0)
    // *
    // * *
    // *   *
    // *     *
    // (x2, y2) ********* (x1, y1)
    // 
    // It's normalized in the sense that initially it's always upright
    // with the center at (0,0). Then, given theta, we rotate it locally
    // and translate to its world coordinate, (x,y).
    // Get screen coordinates (again!)
    int scrX = mWorldX - mMapMgr.getViewX();
    int scrY = mWorldY - mMapMgr.getViewY();
    sLog.finest("drawPoly()");
    sLog.finest("screen coordinates: (" + scrX + "," + scrY + ")");
    sLog.finest("current world coordinates: (" + mWorldX + "," + mWorldY + ")");
    sLog.finest("old world coordinates: (" + mOldWorldX + "," + mOldWorldY + ")");
    // If the position has changed, update the poly
    if (mOldWorldX != mWorldX || mOldWorldY != mWorldY) {
        // First reset the poly at its initial position
        vertices[0].x = 0;
        vertices[0].y = -POLY_HT / 2;
        vertices[1].x = POLY_BASE / 2;
        vertices[1].y = POLY_HT / 2;
        vertices[2].x = -POLY_BASE / 2;
        vertices[2].y = POLY_HT / 2;
        // Get the bearing and rotate each vertex respectively
        double theta = LocationManager.getInstance().getBearing();
        VectorOps.rotate(vertices[0], theta);
        VectorOps.rotate(vertices[1], theta);
        VectorOps.rotate(vertices[2], theta);
        // Translate the poly to its screen coordinate with
        // offset (for the shadow).
        vertices[0].x += scrX + xoff;
        vertices[0].y += scrY + yoff;
        vertices[1].x += scrX + xoff;
        vertices[1].y += scrY + yoff;
        vertices[2].x += scrX + xoff;
        vertices[2].y += scrY + yoff;
    }
    // render the poly
    Path path = new Path();
    path.moveTo(vertices[0].x, vertices[0].y);
    path.lineTo(vertices[1].x, vertices[1].y);
    path.lineTo(vertices[2].x, vertices[2].y);
    canvas.drawPath(path, paint);
}
