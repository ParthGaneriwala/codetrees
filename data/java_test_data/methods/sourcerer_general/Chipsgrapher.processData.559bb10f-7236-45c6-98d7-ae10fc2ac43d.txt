public void processData() {
    int minimumChips = 9999999;
    int maximumChips = 0;
    int minimumDot = getSize().height - 25;
    int maximumDot = 60;
    float converter = 0.0f;
    int showFactor = 0;
    int counterA = 0;
    counterY = 0;
    for (int i = 0; i < counterX; i++) {
        // System.out.println("oldchips: "+oldChips[i]+" on "+i);
        if (trnNumber[i] > currentNumber - maxShow) {
            if (i < counterX - 1) {
                for (int j = trnNumber[i]; j < trnNumber[i + 1]; j++) {
                    extractedChips[counterY] = oldChips[i];
                    counterY = counterY + 1;
                }
            } else {
                extractedChips[counterY] = oldChips[i];
                counterY = counterY + 1;
            }
        // System.out.println("extracted on "+(counterY-1)+" is "+extractedChips[counterY-1]);
        }
    }
    if (counterY == 0) {
        extractedChips[0] = oldChips[counterX - 1];
        counterY = counterY + 1;
    }
    toShow = Math.min(toShow, counterY);
    showFactor = (int) (((double) toShow / (double) xWidth) + 0.99999);
    // System.out.println("showFactor: "+showFactor);
    counterZ = 0;
    for (int i = counterY - toShow; i < counterY; i = i + showFactor) {
        for (int j = i; j < Math.min(i + showFactor, counterY); j++) {
            showChips[counterZ] = showChips[counterZ] + (int) (extractedChips[j]);
            counterA = counterA + 1;
        }
        showChips[counterZ] = showChips[counterZ] / counterA;
        counterA = 0;
        if (showChips[counterZ] < minimumChips) {
            minimumChips = showChips[counterZ];
        }
        if (showChips[counterZ] > maximumChips) {
            maximumChips = showChips[counterZ];
        }
        counterZ = counterZ + 1;
    }
    if (maximumChips == minimumChips) {
        converter = 1;
    } else {
        converter = (float) (((double) (maximumDot - minimumDot)) / ((double) ((maximumChips - minimumChips))));
    }
    yaxis1 = maximumChips;
    yaxis2 = yaxis1 - (maximumChips - minimumChips) / 4;
    yaxis3 = yaxis2 - (maximumChips - minimumChips) / 4;
    yaxis4 = yaxis3 - (maximumChips - minimumChips) / 4;
    yaxis5 = minimumChips;
    yaxis1label = (new Integer(yaxis1)).toString();
    yaxis2label = (new Integer(yaxis2)).toString();
    yaxis3label = (new Integer(yaxis3)).toString();
    yaxis4label = (new Integer(yaxis4)).toString();
    yaxis5label = (new Integer(yaxis5)).toString();
    yaxis1 = minimumDot + (int) (converter * (yaxis1 - minimumChips));
    yaxis2 = minimumDot + (int) (converter * (yaxis2 - minimumChips));
    yaxis3 = minimumDot + (int) (converter * (yaxis3 - minimumChips));
    yaxis4 = minimumDot + (int) (converter * (yaxis4 - minimumChips));
    yaxis5 = minimumDot + (int) (converter * (yaxis5 - minimumChips));
    // System.out.println("maximumChips: "+maximumChips+", minimumChips: "+minimumChips+", converter: "+converter);
    x[0] = 80;
    for (int i = 0; i < counterZ; i++) {
        y[i] = minimumDot + (int) (converter * (showChips[i] - minimumChips));
        if (i > 0) {
            x[i] = x[i - 1] + (int) ((getSize().width - 100) / (counterZ - 1));
        }
    }
}
