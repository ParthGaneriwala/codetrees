public static void generateExceptionClasses(final String parserPackageName, final String parserOutputPath) {
    // create content of file
    final StringBuilder fileContent = new StringBuilder();
    final String mainParserPackage = parserPackageName.substring(0, parserPackageName.lastIndexOf('.'));
    fileContent.append("package " + mainParserPackage + ".exception;\n");
    fileContent.append("\n");
    fileContent.append("public class ParseException extends Exception { \n");
    fileContent.append("\n");
    fileContent.append("    private static final long serialVersionUID = 1L;\n");
    fileContent.append("    private Long position;\n");
    fileContent.append("\n");
    fileContent.append("    public ParseException(String message, Long position) {\n");
    fileContent.append("        super(message);\n");
    fileContent.append("        this.position = position;\n");
    fileContent.append("    }\n");
    fileContent.append("\n");
    fileContent.append("    @Override\n");
    fileContent.append("    public String getMessage() {\n");
    fileContent.append("        return super.getMessage() + \" [pos:\" + position.toString() + ']';\n");
    fileContent.append("    }\n");
    fileContent.append("\n");
    fileContent.append("    public String toString() {\n");
    fileContent.append("        return super.getMessage() + \" [pos:\" + position.toString() + ']';\n");
    fileContent.append("    }\n");
    fileContent.append("\n");
    fileContent.append("    public Long getPosition() {\n");
    fileContent.append("        return position;\n");
    fileContent.append("    }\n");
    fileContent.append("\n");
    fileContent.append("};\n");
    // create exception classes
    final String filename = parserOutputPath + "../exception/ParseException.java";
    FileHandlingUtils.createFile(filename, fileContent);
}
