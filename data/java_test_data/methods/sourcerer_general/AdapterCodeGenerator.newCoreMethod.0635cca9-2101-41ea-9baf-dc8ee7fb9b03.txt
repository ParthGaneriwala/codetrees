public void newCoreMethod(String modelName) {
    System.out.println("----------------------------");
    System.out.println("newObject(" + modelName + ")");
    try {
        ModelObject model = (ModelObject) Class.forName("com.jcommerce.core.model." + modelName).newInstance();
        ADBBean wsdlObj = (ADBBean) Class.forName("com.jcommerce.ws.server." + modelName).newInstance();
        String fucName = "public com.jcommerce.core.model." + modelName + " getCore" + modelName + "(com.jcommerce.ws.server." + modelName + " input){";
        out.println(fucName);
        String defineStr = "com.jcommerce.core.model." + modelName + " ret = new com.jcommerce.core.model." + modelName + "();";
        out.println(defineStr);
        Method[] methods = model.getClass().getDeclaredMethods();
        Method[] wsdlMethods = wsdlObj.getClass().getDeclaredMethods();
        for (int i = 0; i < methods.length; i++) {
            boolean setFlag = false;
            Method method = methods[i];
            String methodName = method.getName();
            String type = "###";
            if (methodName.startsWith("set")) {
                Class[] cList = method.getParameterTypes();
                String param = cList[0].getName();
                System.out.println(param);
                if (param.equals("java.util.Set")) {
                    Type[] typeList = method.getGenericParameterTypes();
                    type = typeList[0].toString();
                    System.out.println(type);
                    int startIndex = type.lastIndexOf(".");
                    int endIndex = type.lastIndexOf(">");
                    if (type.indexOf("<com.jcommerce.core.model.") > 0) {
                        type = type.substring(startIndex + 1, endIndex);
                        setFlag = true;
                        System.out.println(type);
                    }
                }
                for (int j = 0; j < wsdlMethods.length; j++) {
                    Method wsdlMethod = wsdlMethods[j];
                    String wsdlMethodName = wsdlMethod.getName();
                    if ((wsdlMethodName.startsWith("get")) && (methodName.substring(3).equals(wsdlMethodName.substring(3)))) {
                        String setStr = "";
                        if (param.equals("java.sql.Timestamp")) {
                            printCoreTimeStampStr(methodName, wsdlMethodName);
                        } else if (param.equalsIgnoreCase("double")) {
                            printCoreDoubleStr(methodName, wsdlMethodName);
                        } else if (list.contains(param)) {
                            String tempType = param.substring(param.lastIndexOf(".") + 1);
                            setStr = "ret." + methodName + "((" + param + ")" + "(dbAccessImpl.getBean0(\"" + tempType + "\", String.valueOf(" + "input." + wsdlMethodName + "()))));";
                        } else if (setFlag) {
                            printCoreCollectionStr(type, methodName, wsdlMethodName);
                            setFlag = false;
                        } else {
                            setStr = "ret." + methodName + "(input." + wsdlMethodName + "());";
                        }
                        out.println(setStr);
                        break;
                    }
                }
            }
        }
        out.println("return ret;");
        String end = "}";
        out.println(end);
    } catch (SecurityException e) {
        e.printStackTrace();
    } catch (IllegalArgumentException e) {
        e.printStackTrace();
    } catch (InstantiationException e) {
        e.printStackTrace();
    } catch (IllegalAccessException e) {
        e.printStackTrace();
    } catch (ClassNotFoundException e) {
        e.printStackTrace();
    } catch (Exception e) {
        e.printStackTrace();
    }
}
