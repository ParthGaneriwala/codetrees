// parseHeader
// -------------------------------------------------------------------------
private void parse() throws Exception {
    ontology = new Ontology(curator, ontologyType);
    for (int i = 1; i < lines.length; i++) {
        String line = lines[i];
        int equals = line.indexOf("=");
        String idString = line.substring(0, equals).trim();
        int id = stringToInt(idString);
        String value = line.substring(equals + 1);
        // adjusted : to avoid incorrect names if they contain [ in the name...
        int firstLeftBracket = value.indexOf("[isa: ");
        if (firstLeftBracket < 0) {
            firstLeftBracket = value.indexOf("[partof: ");
        }
        if (firstLeftBracket < 0) {
            String name = value.substring(0).trim();
            Integer id2 = new Integer(id);
            if (!ontology.containsTerm(((Integer) synonymHash.get(id2)).intValue())) {
                OntologyTerm term = new OntologyTerm(name, ((Integer) synonymHash.get(id2)).intValue());
                ontology.add(term);
            }
            continue;
        }
        OntologyTerm term;
        String name = value.substring(0, firstLeftBracket).trim();
        Integer id2 = new Integer(id);
        // if(!ontology.containsTerm(((Integer) synonymHash.get(id2)).intValue())){
        term = new OntologyTerm(name, ((Integer) synonymHash.get(id2)).intValue());
        ontology.add(term);
        /*}
			else{
				term = ontology.getTerm(((Integer) synonymHash.get(id2)).intValue());
			}*/
        int isaStart = value.indexOf("[isa: ");
        if (isaStart >= 0) {
            int isaEnd = value.indexOf("]", isaStart);
            String rawIsa = value.substring(isaStart + 6, isaEnd).trim();
            String[] allIsas = rawIsa.split(" ");
            for (int j = 0; j < allIsas.length; j++) {
                Integer id3 = new Integer(stringToInt(allIsas[j]));
                // if((id3 == 6944) && (id2 == 6906)){System.out.println("isa OK " + ((Integer) synonymHash.get(id2)).intValue() + "\t" + ((Integer) synonymHash.get(id3)).intValue());}
                term.addParent(((Integer) synonymHash.get(id3)).intValue());
            }
        }
        // found "[isa: "
        int partofStart = value.indexOf("[partof: ");
        if (partofStart >= 0) {
            int partofEnd = value.indexOf("]", partofStart);
            String rawPartof = value.substring(partofStart + 9, partofEnd).trim();
            String[] allPartofs = rawPartof.split(" ");
            for (int j = 0; j < allPartofs.length; j++) {
                Integer id3 = new Integer(stringToInt(allPartofs[j]));
                // if((id3 == 6944) && (id2 == 6906)){System.out.println("partof OK " + ((Integer) synonymHash.get(id2)).intValue() + "\t" + ((Integer) synonymHash.get(id3)).intValue());}
                term.addContainer(((Integer) synonymHash.get(id3)).intValue());
            }
        }
    // if
    }
// for i
}
