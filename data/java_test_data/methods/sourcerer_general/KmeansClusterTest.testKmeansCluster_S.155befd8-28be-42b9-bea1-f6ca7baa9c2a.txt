@Test
public void testKmeansCluster_S() throws Exception {
    String[] options = { "-S", "4" };
    KmeansCluster test = new KmeansCluster();
    test.setOptions(options);
    int[] typAttrib = { Weka.NUMERIC, Weka.NUMERIC, Weka.NUMERIC };
    String[] classAttrib = { "A_", "B_", "C_" };
    double[][] x = { { 10, 10, 10 }, { 10, -10, -10 }, { -10, -10, -10 }, { 11, 11, 11 }, { 11, -11, -11 }, { -11, -11, -11 } };
    Double[][] xD = new Double[x.length][x[0].length];
    for (int i = 0; i < xD.length; i++) for (int j = 0; j < xD[i].length; j++) xD[i][j] = new Double(x[i][j]);
    String[] y = { "A_", "B_", "C_", "A_", "B_", "C_" };
    String[] attrib = { "X1", "X2", "X3" };
    test.setData(attrib, typAttrib, classAttrib, y, xD);
    test.build();
    Double[][] newx = { { new Double(99), new Double(89), new Double(79) }, { new Double(19), new Double(29), new Double(39) } };
    test.setParameters(newx);
    test.clusterInstance();
    Assert.assertNotNull(test.getClusterInstance());
    Assert.assertEquals(2, test.numberOfCluster());
    Assert.assertNotNull(test.getClusterCentroids());
    Assert.assertEquals(4.0, Math.rint(test.getSquaredError()), 0.01);
    Assert.assertNotNull(test.getClusterStandardDevs());
    Assert.assertNotNull(test.getClusterSizes());
}
