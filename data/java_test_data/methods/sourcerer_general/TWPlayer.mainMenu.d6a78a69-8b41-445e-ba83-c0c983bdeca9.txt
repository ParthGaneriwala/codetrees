private void mainMenu() {
    int maxsect = TWS.MetaData.IntRow[MetaTab.MAXSECTS];
    int shipid = SQLConn.getInt("CurrShip FROM Players WHERE id = " + pid);
    while (PLAYING) {
        int currsect = SQLConn.getInt("Sector FROM Ships WHERE id = " + shipid);
        String menu = Sectors.showSect(currsect) + "I - Ship/Cargo Info P - Trade at Port  " + CR + "L - Land on Planet  A - Attack Ship    " + CR + "F - Deploy Fighters M - Deploy Mines   " + CR + "B - Deploy Beacon   D - Dump Cargo     " + CR + "S - Scan Ship       H - Hail Trader(s) " + CR + "C - Ship Computer   Q - Quit Game      " + CR;
        String r = ask(menu);
        int move = MiscUtil.strToInt(r);
        if (move > 0 && move <= maxsect) {
            Vector<Integer> linkvec = Links.getLinks(currsect);
            if (linkvec != null && linkvec.contains(new Integer(move)))
                moveShip(currsect, move, shipid);
            else
                say(Links.listPath(Links.trace(TWS.linkmap, new Integer(currsect), new Integer(move))));
        } else if (r.equalsIgnoreCase("H")) {
            hail();
        } else if (r.equalsIgnoreCase("C")) {
            compMenu(currsect, shipid);
        } else if (r.equalsIgnoreCase("S")) {
            scanShip(currsect, shipid);
        } else if (r.equalsIgnoreCase("A")) {
            attackShip(currsect, shipid);
        } else if (r.equalsIgnoreCase("I")) {
            qSay(Ships.shipInfo(shipid));
        } else if (r.equalsIgnoreCase("P")) {
            portMenu(currsect, shipid);
        } else if (r.equalsIgnoreCase("D")) {
            dumpCargo(shipid);
        } else if (r.equalsIgnoreCase("L")) {
            planetMenu(currsect, shipid);
        } else if (r.equals("Q")) {
            say("Goodbye!");
            PLAYING = false;
        } else
            say("Bad move: " + r);
    }
}
