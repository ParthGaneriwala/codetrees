public void write(OutputStream out) throws IOException {
    int nrModels = probabilities[0].length;
    // the length
    int maxLen = 4;
    // the contexts plus nrModels plus num contexts
    maxLen += PackedInteger.MAX_LENGTH * (2 + contexts.length * nrModels);
    // the word
    maxLen += 8;
    maxLen += 8 * contexts.length * nrModels;
    byte[] buf = new byte[maxLen];
    ByteBuffer buffer = ByteBuffer.wrap(buf);
    // reserve space for the length
    buffer.position(4);
    buffer.putLong(word);
    int position = buffer.position();
    position = PackedInteger.writeInt(buf, position, nrModels);
    position = PackedInteger.writeInt(buf, position, contexts.length);
    for (int i = 0; i < contexts.length; ++i) {
        ClusteredContext ctx = contexts[i];
        for (int clusterid : ctx.clusters) {
            position = PackedInteger.writeInt(buf, position, clusterid);
        }
        position = PackedInteger.writeInt(buf, position, counts[i]);
        buffer.position(position);
        for (double prob : probabilities[i]) {
            buffer.putDouble(prob);
        }
        position = buffer.position();
    }
    // the size of the data block
    buffer.putInt(0, position - 4);
    out.write(buf, 0, position);
}
