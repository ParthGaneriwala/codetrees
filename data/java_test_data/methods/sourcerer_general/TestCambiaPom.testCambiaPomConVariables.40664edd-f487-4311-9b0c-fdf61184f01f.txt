public void testCambiaPomConVariables() {
    boolean encontradaVariable = false;
    // Copia del pom de prueba en pom.xml
    try {
        FileUtils.copyFile(new File(SRC_TEST_CONFIG, "pom_conVariables.xml"), new File(SRC_TEST_CONFIG, "pom.xml"));
    } catch (IOException e) {
        fail("No se puede copiar fichero " + e);
    }
    // Variables que tienen valor.
    Properties propiedades = new Properties();
    propiedades.setProperty("variableExiste", "1.2.3");
    // Cambios deseados.
    Hashtable<Artifact, Artifact> cambios = new Hashtable<Artifact, Artifact>();
    Artifact artifactOriginal = new Artifact();
    artifactOriginal.setGroupId("org.apache.maven");
    artifactOriginal.setArtifactId("maven-plugin-api");
    artifactOriginal.setVersion("1.2.3");
    Artifact artifactDestino = new Artifact();
    artifactDestino.setGroupId("org.apache.maven");
    artifactDestino.setArtifactId("maven-plugin-api");
    artifactDestino.setVersion("3.2.1");
    cambios.put(artifactOriginal, artifactDestino);
    // Instanciacion de la clase, que hace los cambios.
    new CambiaPom(cambios, new File(SRC_TEST_CONFIG), true, new SystemStreamLog(), propiedades);
    // Comprobacion de que existen pom.xml y pom1.xml
    File pom = new File(SRC_TEST_CONFIG, "pom.xml");
    File pom1 = new File(SRC_TEST_CONFIG, "pom1.xml");
    assertTrue(pom.exists());
    assertTrue(pom1.exists());
    try {
        // Lectura hasta el primer groupId, saltandose la cabecera, que
        // puede variar de un fichero a otro.
        BufferedReader brentrada = new BufferedReader(new FileReader(pom));
        String lineaEntrada = avanzaHastaPrimerGroupId(brentrada);
        BufferedReader bsalida = new BufferedReader(new FileReader(pom1));
        String lineaEntrada2 = avanzaHastaPrimerGroupId(bsalida);
        // debido ser reemplazada por 3.2.1
        while (null != lineaEntrada) {
            if (lineaEntrada2.indexOf("${variableExiste}") > -1) {
                assertTrue(lineaEntrada.indexOf("3.2.1") > -1);
                encontradaVariable = true;
            } else {
                assertEquals(lineaEntrada, lineaEntrada2);
            }
            lineaEntrada = brentrada.readLine();
            lineaEntrada2 = bsalida.readLine();
        }
        // Comprobacion de que ambos ficheros han llegado al final a la vez.
        assertNull(lineaEntrada);
        assertNull(lineaEntrada2);
        // Comprobacion de que en pom1.xml no se ha perdido la variable.
        assertTrue(encontradaVariable);
        bsalida.close();
        brentrada.close();
    } catch (Exception e) {
        fail("no se puede leer fichero " + e);
    }
}
