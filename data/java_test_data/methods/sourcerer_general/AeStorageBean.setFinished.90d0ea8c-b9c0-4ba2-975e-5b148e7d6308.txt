public void setFinished(boolean aValue) {
    // clear any local status detail
    setStatusDetail(null);
    setConnected(false);
    setAvailable(false);
    // prevent this but just in case
    if (isEngineRunning()) {
        // $NON-NLS-1$
        setStatusDetail(AeMessages.getString("AeStorageBean.0"));
        return;
    }
    // check that the passwords match
    if (!AeUtil.compareObjects(getPassword(), getPasswordConfirm())) {
        // $NON-NLS-1$
        setStatusDetail(AeMessages.getString("AeStorageBean.1"));
        return;
    }
    // if we have all the info then persistence is on
    Map storeConfigMap = getConfig().getMapEntry(IAeEngineConfiguration.PERSISTENT_STORE_ENTRY);
    if (!AeUtil.isNullOrEmpty(storeConfigMap)) {
        // order: PersistentStore/Factory
        Map factoryMap = (Map) storeConfigMap.get(IAeEngineConfiguration.FACTORY_ENTRY);
        if (!AeUtil.isNullOrEmpty(factoryMap)) {
            Map providerFactoryMap = (Map) factoryMap.get(IAeEngineConfiguration.STORAGE_PROVIDER_FACTORY);
            // location of db type: PersistentStore/Factory/StorageProviderFactory/
            if (!AeUtil.isNullOrEmpty(providerFactoryMap)) {
                providerFactoryMap.put(IAeEngineConfiguration.DATABASE_TYPE_ENTRY, getDatabaseType());
                Map dsMap = (Map) providerFactoryMap.get(IAeEngineConfiguration.DATASOURCE_ENTRY);
                if (dsMap != null) {
                    if (!AeUtil.isNullOrEmpty(getJndiLocation()))
                        dsMap.put(IAeEngineConfiguration.DS_JNDI_NAME_ENTRY, getJndiLocation());
                    if (!AeUtil.isNullOrEmpty(getUsername())) {
                        dsMap.put(IAeTaminoDataSource.DOMAIN, getTaminoDomain());
                        dsMap.put(IAeEngineConfiguration.DS_USERNAME_ENTRY, getUsername());
                        dsMap.put(IAeEngineConfiguration.DS_PASSWORD_ENTRY, getPassword());
                    } else {
                        dsMap.remove(IAeTaminoDataSource.DOMAIN);
                        dsMap.remove(IAeEngineConfiguration.DS_USERNAME_ENTRY);
                        dsMap.remove(IAeEngineConfiguration.DS_PASSWORD_ENTRY);
                    }
                    if (!AeUtil.isNullOrEmpty(getTaminoUrl()))
                        dsMap.put(IAeTaminoDataSource.URL, getTaminoUrl());
                    if (!AeUtil.isNullOrEmpty(getTaminoDatabaseName()))
                        dsMap.put(IAeTaminoDataSource.DATABASE, getTaminoDatabaseName());
                    if (!AeUtil.isNullOrEmpty(getTaminoCollection()))
                        dsMap.put(IAeTaminoDataSource.COLLECTION, getTaminoCollection());
                    if (!AeUtil.isNullOrEmpty(getTaminoPoolsize()))
                        dsMap.put(AePooledTaminoDataSource.MAX_CONNECTIONS, getTaminoPoolsize());
                }
            // end dsMap
            }
            // write the new configuration out
            if (getAdmin().getEngineConfig() instanceof AeFileBasedEngineConfig) {
                ((AeFileBasedEngineConfig) getAdmin().getEngineConfig()).update();
                // tell users they must restart
                // $NON-NLS-1$
                setStatusDetail(AeMessages.getString("AeStorageBean.2"));
            } else {
                // $NON-NLS-1$
                setStatusDetail(AeMessages.getString("AeStorageBean.3"));
            }
        }
    // end factory map
    }
// end config map
}
