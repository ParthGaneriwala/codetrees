public static Dia creaDia(String dno0, String dno1, String dno2, String dno3, String cda0, String cda1, String cda2, String cda3, String cna0, String cna1, String cna2, String cna3) {
    dno0 = Dia.transforma(dno0);
    dno1 = Dia.transforma(dno1);
    dno2 = Dia.transforma(dno2);
    dno3 = Dia.transforma(dno3);
    cda0 = Dia.transforma(cda0);
    cda1 = Dia.transforma(cda1);
    cda2 = Dia.transforma(cda2);
    cda3 = Dia.transforma(cda3);
    cna0 = Dia.transforma(cna0);
    cna1 = Dia.transforma(cna1);
    cna2 = Dia.transforma(cna2);
    cna3 = Dia.transforma(cna3);
    Hashtable<Comida.tipoComida, Comida> dia = new Hashtable<Comida.tipoComida, Comida>();
    Hashtable<Plato.tipoPlato, Plato> desayuno = new Hashtable<Plato.tipoPlato, Plato>();
    if (!dno0.equals("-")) {
        Receta r = ControlBBDD.creaReceta(dno0);
        desayuno.put(Plato.tipoPlato.entrante, new Plato(r, 1));
    }
    if (!dno1.equals("-")) {
        Receta r = ControlBBDD.creaReceta(dno1);
        desayuno.put(Plato.tipoPlato.primero, new Plato(r, 1));
    }
    if (!dno2.equals("-")) {
        Receta r = ControlBBDD.creaReceta(dno2);
        desayuno.put(Plato.tipoPlato.segundo, new Plato(r, 1));
    }
    if (!dno3.equals("-")) {
        Receta r = ControlBBDD.creaReceta(dno3);
        desayuno.put(Plato.tipoPlato.postre, new Plato(r, 1));
    }
    Comida dno = new Comida(Comida.tipoComida.desayuno, desayuno, false);
    dia.put(Comida.tipoComida.desayuno, dno);
    Hashtable<Plato.tipoPlato, Plato> comida = new Hashtable<Plato.tipoPlato, Plato>();
    if (!cda0.equals("-")) {
        Receta r = ControlBBDD.creaReceta(cda0);
        comida.put(Plato.tipoPlato.entrante, new Plato(r, 1));
    }
    if (!cda1.equals("-")) {
        Receta r = ControlBBDD.creaReceta(cda1);
        comida.put(Plato.tipoPlato.primero, new Plato(r, 1));
    }
    if (!cda2.equals("-")) {
        Receta r = ControlBBDD.creaReceta(cda2);
        comida.put(Plato.tipoPlato.segundo, new Plato(r, 1));
    }
    if (!cda3.equals("-")) {
        Receta r = ControlBBDD.creaReceta(cda3);
        comida.put(Plato.tipoPlato.postre, new Plato(r, 1));
    }
    Comida cma = new Comida(Comida.tipoComida.comida, comida, false);
    dia.put(Comida.tipoComida.comida, cma);
    Hashtable<Plato.tipoPlato, Plato> cena = new Hashtable<Plato.tipoPlato, Plato>();
    if (!cna0.equals("-")) {
        Receta r = ControlBBDD.creaReceta(cna0);
        cena.put(Plato.tipoPlato.entrante, new Plato(r, 1));
    }
    if (!cna1.equals("-")) {
        Receta r = ControlBBDD.creaReceta(cna1);
        cena.put(Plato.tipoPlato.primero, new Plato(r, 1));
    }
    if (!cna2.equals("-")) {
        Receta r = ControlBBDD.creaReceta(cna2);
        cena.put(Plato.tipoPlato.segundo, new Plato(r, 1));
    }
    if (!cna3.equals("-")) {
        Receta r = ControlBBDD.creaReceta(cna3);
        cena.put(Plato.tipoPlato.postre, new Plato(r, 1));
    }
    Comida cna = new Comida(Comida.tipoComida.cena, cena, false);
    dia.put(Comida.tipoComida.cena, cna);
    return new Dia(dia);
}
