public void generateTerrain() {
    int numberOfPoints = (xFields + 1) * (zFields + 1);
    int numberOfIndecies = 6 * xFields * zFields;
    IndexedTriangleArray terrain = new IndexedTriangleArray(numberOfPoints, GeometryArray.COORDINATES, numberOfIndecies);
    int count = 0;
    for (int i = 0; i < points.length; i++) {
        terrain.setCoordinate(i, points[i]);
    }
    count = 0;
    for (int z = 0; z < zFields; z++) {
        for (int x = 0; x < xFields; x++) {
            int indexA = x + z * (xFields + 1);
            int indexB = x + z * (xFields + 1) + 1;
            int indexC = x + (z + 1) * (xFields + 1) + 1;
            int indexD = x + (z + 1) * (xFields + 1);
            // Triangle: ABC
            terrain.setCoordinateIndex(count, indexC);
            terrain.setCoordinateIndex(count + 1, indexB);
            terrain.setCoordinateIndex(count + 2, indexA);
            // Triangle: ACD
            terrain.setCoordinateIndex(count + 3, indexD);
            terrain.setCoordinateIndex(count + 4, indexC);
            terrain.setCoordinateIndex(count + 5, indexA);
            count += 6;
        }
    }
    Appearance appearance = new Appearance();
    Material material = new Material();
    if (color != null) {
        material.setDiffuseColor(color);
        material.setSpecularColor(new Color3f(Color.BLACK));
        appearance.setMaterial(material);
    }
    if (textureFileName != null) {
        Texture texImage = new TextureLoader(textureFileName, Main.frame).getTexture();
        TexCoordGeneration tg = new TexCoordGeneration();
        tg.setGenMode(TexCoordGeneration.OBJECT_LINEAR);
        tg.setPlaneS(new Vector4f((1f / textureScaleX), 0f, 0f, 0f));
        tg.setPlaneT(new Vector4f(0f, 0f, (1f / textureScaleZ), 0f));
        appearance.setTexCoordGeneration(tg);
        appearance.setTexture(texImage);
    }
    if (visible < 1f) {
        TransparencyAttributes t = new TransparencyAttributes(0, 1f - visible);
        appearance.setTransparencyAttributes(t);
    }
    shape3D = new Shape3D(terrain);
    shape3D.setAppearance(appearance);
    transformGroup.addChild(shape3D);
    addChild(transformGroup);
    compile();
}
