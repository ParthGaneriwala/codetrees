public boolean incluir(Pedido pedido) throws DAOFactoryException {
    if (conn == null) {
        throw new IllegalStateException("n�o h� conex�o com o banco de dados");
    }
    if (pedido.getStatusPedido() == 0) {
        throw new IllegalArgumentException("Status pedido inv�lido = 0");
    }
    if (pedido.getUnidadeId() == 0) {
        throw new IllegalArgumentException("ID Unidade pedido inv�lido = 0");
    }
    if (pedido.getFuncionarioId() == 0) {
        throw new IllegalArgumentException("ID Funcion�rio pedido inv�lido = 0");
    }
    boolean ret = false;
    PreparedStatement stmt = null;
    String sql = "INSERT INTO pedido " + "(dtaPedido, statusPedido, " + "idUnidade, idFunc, emergencia) " + "VALUES (now(), ?, ?, ?, ?)";
    DAOFactory dao = DAOFactory.getInstance(DAOFactory.MYSQLDB);
    MaterialDAO materialDAO = dao.criarMaterialDAO();
    materialDAO.setConnection(conn);
    Material material = null;
    try {
        stmt = conn.prepareStatement(sql);
        // stmt.setString(1, "'"+ UtilDate.parseDateToDB(pedido.getDataPedido()) + "'");
        stmt.setInt(1, pedido.getStatusPedido());
        stmt.setInt(2, pedido.getUnidadeId());
        stmt.setInt(3, pedido.getFuncionarioId());
        stmt.setInt(4, pedido.isEmergencia() ? 1 : 0);
        int count = stmt.executeUpdate();
        ret = count > 0;
        int idPedido = MysqlNextID.getNextId(conn);
        pedido.setPedidoId(idPedido);
        for (ItemPedido itemPedido : pedido.getLstItens()) {
            itemPedido.setIdPedido(idPedido);
            incluirItemPedido(itemPedido);
            // atualiza a qtde de material, decremento os materiais dispon�veis
            material = materialDAO.buscar(itemPedido.getIdMaterial());
            if (material == null) {
                throw new DAOFactoryException("Material n�o encontrado com o ID '" + itemPedido.getIdMaterial() + "'");
            }
            int qtdDispMaterial = material.getQtdDispMaterial() - itemPedido.getQtdeItemPedido();
            material.setQtdDispMaterial(qtdDispMaterial);
            materialDAO.update(material);
        }
    } catch (SQLException e) {
        throw new DAOFactoryException(e);
    } finally {
        if (stmt != null) {
            try {
                stmt.close();
            } catch (Exception e) {
                System.err.println(e);
                throw new DAOFactoryException(e);
            }
        }
    }
    return ret;
}
