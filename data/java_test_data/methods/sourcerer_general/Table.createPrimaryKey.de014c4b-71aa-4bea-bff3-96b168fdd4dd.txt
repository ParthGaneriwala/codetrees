/**
 * Creates a single or multi-column primary key and index. sets the
 * colTypes array. Finalises the creation of the table. (fredt@users)
 */
void createPrimaryKey(HsqlName indexName, int[] columns, boolean columnsNotNull) throws HsqlException {
    if (primaryKeyCols != null) {
        Trace.doAssert(false, "Table.createPrimaryKey(column)");
    }
    if (columns == null) {
        columns = new int[0];
    } else {
        for (int i = 0; i < columns.length; i++) {
            if (columnsNotNull) {
                getColumn(columns[i]).setNullable(false);
            }
            getColumn(columns[i]).setPrimaryKey(true);
        }
    }
    primaryKeyCols = columns;
    colTypes = new int[columnCount];
    colDefaults = new Expression[columnCount];
    colSizes = new int[columnCount];
    colScales = new int[columnCount];
    colNullable = new boolean[columnCount];
    defaultColumnMap = new int[columnCount];
    for (int i = 0; i < columnCount; i++) {
        setColumnTypeVars(i);
    }
    primaryKeyTypes = new int[primaryKeyCols.length];
    ArrayUtil.copyColumnValues(colTypes, primaryKeyCols, primaryKeyTypes);
    primaryKeyColsSequence = new int[primaryKeyCols.length];
    ArrayUtil.fillSequence(primaryKeyColsSequence);
    resetDefaultsFlag();
    // tony_lai@users 20020820 - patch 595099
    HsqlName name = indexName != null ? indexName : database.nameManager.newAutoName("IDX");
    createPrimaryIndex(columns, name);
    setBestRowIdentifiers();
}
