public static long updateSysdistrib(String tableName, int colNumber) throws ClassNotFoundException, RecordException, IOException {
    Calendar calendar = Calendar.getInstance();
    Sysdistrib sysdistrib = new Sysdistrib();
    long startTime = System.currentTimeMillis();
    int nRecords = 0;
    try {
        nRecords = sysdistrib.getNbRecords();
    } catch (IOException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
        System.out.println("updateSysdistrib: getNbRecords()catched ");
    }
    TableInputBuffer iBuffer = new TableInputBuffer(sysdistrib, sysdistrib.getFile(), nRecords, 0);
    TableOutputBuffer oBuffer = new TableOutputBuffer(sysdistrib, sysdistrib.getFile(), nRecords, 1);
    // create table by the given tableName string
    Class c;
    c = Class.forName("edu.concordia.database.tables." + tableName);
    try {
        Object o;
        o = c.newInstance();
        Table table = (Table) o;
        Comparable[] row = new Comparable[sysdistrib.getFieldCount()];
        // find the row index
        int recordIndex = 0;
        boolean rowFound = false;
        while (nRecords > 0 && !rowFound && recordIndex < nRecords) {
            row = iBuffer.read();
            int lcolNumber = (Integer) row[2];
            String ltableName = (String) row[1];
            rowFound = (lcolNumber == colNumber && ltableName.equals(tableName));
            if (!rowFound)
                recordIndex++;
        }
        Comparable[] collected = collectForSysdistrib(table, colNumber);
        // if row is  found update it:
        if (rowFound) {
            row[0] = calendar.getTime();
            // FIELD_distribution
            row[3] = collected[0];
            // FIELD_distribfile
            row[4] = collected[1];
        }
        // if row is not found insert it:
        if (!rowFound) {
            recordIndex = nRecords;
            row[0] = calendar.getTime();
            row[1] = tableName;
            // FIELD_colno
            row[2] = colNumber;
            // FIELD_distribution
            row[3] = collected[0];
            // FIELD_distribfile
            row[4] = collected[1];
        }
        // TODO !!!this working:   oBuffer.write(row);
        Utils.write(sysdistrib.getFile(), sysdistrib.getLengthTotal(), sysdistrib.getRawData(row), recordIndex);
        iBuffer.close();
        oBuffer.close();
    } catch (InstantiationException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } catch (IllegalAccessException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    long endTime = System.currentTimeMillis();
    return endTime - startTime;
}
