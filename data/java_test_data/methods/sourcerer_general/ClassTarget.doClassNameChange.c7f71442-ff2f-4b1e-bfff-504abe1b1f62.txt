private boolean doClassNameChange(String newName) {
    // need to check that class does not already exist
    if (getPackage().getTarget(newName) != null) {
        getPackage().showError("duplicate-name");
        return false;
    }
    File newSourceFile = new File(getPackage().getPath(), newName + ".java");
    File oldSourceFile = getSourceFile();
    try {
        FileUtility.copyFile(oldSourceFile, newSourceFile);
        getPackage().updateTargetIdentifier(this, getIdentifierName(), newName);
        String filename = newSourceFile.getAbsolutePath();
        String docFilename = getPackage().getProject().getDocumentationFile(filename);
        getEditor().changeName(newName, filename, docFilename);
        oldSourceFile.delete();
        getClassFile().delete();
        getContextFile().delete();
        getDocumentationFile().delete();
        // this is extremely dangerous code here.. must track all
        // variables which are set when ClassTarget is first
        // constructed and fix them up for new class name
        String oldName = getIdentifierName();
        setIdentifierName(newName);
        setDisplayName(newName);
        updateSize();
        BClass bClass = getBClass();
        ExtensionBridge.ChangeBClassName(bClass, getQualifiedName());
        ClassEvent event = new ClassEvent(ClassEvent.CHANGED_NAME, getBClass(), oldName);
        ExtensionsManager.getInstance().delegateEvent(event);
        return true;
    } catch (IOException ioe) {
        return false;
    }
}
