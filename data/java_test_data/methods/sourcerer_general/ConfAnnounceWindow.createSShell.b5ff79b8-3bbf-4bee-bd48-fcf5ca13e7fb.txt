private void createSShell() {
    GridLayout shellLayout = new GridLayout();
    Display display;
    shellLayout.numColumns = 1;
    shellLayout.makeColumnsEqualWidth = true;
    Color[] gradient;
    sShell = new Shell();
    sShell.setText("ConfAnnounce - Easy Conference Metadata publishing");
    sShell.setSize(new Point(650, 540));
    sShell.setLayout(shellLayout);
    sShell.setImage(new Image(sShell.getDisplay(), ImageFileConstants.APP_ICON));
    try {
        this.toolBar = new ToolBar(sShell, SWT.HORIZONTAL);
        // this.coolBar.setLayoutData(new GridData(SWT));
        this.toolBar.setLayout(new FillLayout());
        this.newToolItem = new ToolItem(toolBar, SWT.FLAT);
        this.newToolItem.setImage(new Image(sShell.getDisplay(), ImageFileConstants.NEW_ICON));
        this.newToolItem.addSelectionListener(new ConfAnnounceWindowItemListener());
        this.newToolItem.setToolTipText("New Conference");
        this.ecToolItem = new ToolItem(toolBar, SWT.FLAT);
        this.ecToolItem.setImage(new Image(sShell.getDisplay(), ImageFileConstants.EASYCONF_ICON));
        this.ecToolItem.addSelectionListener(new ConfAnnounceWindowItemListener());
        this.ecToolItem.setToolTipText("Create a new Conference using EasyConf");
        this.separatorToolItem = new ToolItem(toolBar, SWT.SEPARATOR);
        this.openToolItem = new ToolItem(toolBar, SWT.FLAT);
        this.openToolItem.setImage(new Image(sShell.getDisplay(), ImageFileConstants.OPEN_ICON));
        this.openToolItem.addSelectionListener(new ConfAnnounceWindowItemListener());
        this.openToolItem.setToolTipText("Open a Conference ontology");
        this.publishToolItem = new ToolItem(toolBar, SWT.FLAT);
        this.publishToolItem.setImage(new Image(sShell.getDisplay(), ImageFileConstants.SAVE_ICON));
        this.publishToolItem.addSelectionListener(new ConfAnnounceWindowItemListener());
        this.publishToolItem.setToolTipText("Save Conference ontology!");
    } catch (SWTException se) {
    }
    display = sShell.getDisplay();
    gradient = new Color[] { new Color(display, 0, 0, 255), new Color(display, 20, 20, 255), new Color(display, 40, 40, 255), new Color(display, 60, 60, 255), new Color(display, 80, 80, 255) };
    this.tabMainFolder = new CTabFolder(sShell, SWT.TOP | SWT.BORDER);
    this.tabMainFolder.setSimple(false);
    this.tabMainFolder.setLayoutData(new GridData(GridData.FILL_BOTH));
    this.tabMainFolder.setBorderVisible(true);
    this.tabMainFolder.setSelectionBackground(gradient, new int[] { 20, 40, 60, 80 });
    this.tabMainFolder.setSelectionForeground(display.getSystemColor(SWT.COLOR_WHITE));
    this.tabInfoPane = new CTabItem(this.tabMainFolder, SWT.NULL);
    this.tabInfoPane.setText("Main Info");
    this.tabInfoPane.setToolTipText(INFO_PANE_TOOLTIP);
    this.tabTopicPane = new CTabItem(this.tabMainFolder, SWT.NULL);
    this.tabTopicPane.setText("Conference Topics");
    this.tabTopicPane.setToolTipText(TOPIC_PANE_TOOLTIP);
    this.tabLocationPane = new CTabItem(this.tabMainFolder, SWT.NULL);
    this.tabLocationPane.setText("Location");
    this.tabLocationPane.setToolTipText(LOCATION_PANE_TOOLTIP);
    this.tabFulltextPane = new CTabItem(this.tabMainFolder, SWT.NULL);
    this.tabFulltextPane.setText("Announcement Full Text");
    this.tabFulltextPane.setToolTipText(FULLTEXT_PANE_TOOLTIP);
    this.tabSeriesPane = new CTabItem(this.tabMainFolder, SWT.NULL);
    this.tabSeriesPane.setText("Conference Series");
    this.tabSeriesPane.setToolTipText(SERIES_PANE_TOOLTIP);
    this.ctlConfInfo = new ConfInfoPaneController(this.controller.getConf());
    this.paneConfInfo = new TestPane(this.tabMainFolder, SWT.NULL, this.ctlConfInfo);
    this.ctlConfInfo.setPane(this.paneConfInfo);
    this.tabInfoPane.setControl(this.paneConfInfo);
    this.ctlLocation = new LocationPaneController(controller);
    this.paneLocation = new LocationPane(this.tabMainFolder, SWT.NULL);
    this.ctlLocation.setPane(this.paneLocation);
    this.paneLocation.setController(this.ctlLocation);
    this.tabLocationPane.setControl(this.paneLocation);
    this.ctlFulltext = new FulltextPaneController(this.controller);
    this.paneFulltext = new FulltextPane(this.tabMainFolder, SWT.NULL);
    this.ctlFulltext.setPane(this.paneFulltext);
    this.paneFulltext.setController(this.ctlFulltext);
    this.tabFulltextPane.setControl(this.paneFulltext);
    this.ctlSeriesPane = new SeriesPaneController(controller);
    this.paneSeries = new SeriesPane(this.tabMainFolder, SWT.NULL, this.ctlSeriesPane);
    this.ctlSeriesPane.setPane(this.paneSeries);
    this.paneSeries.setController(this.ctlSeriesPane);
    this.tabSeriesPane.setControl(this.paneSeries);
    this.ctlTopicPane = new TopicPaneController(controller);
    this.paneTopic = new TopicPane(this.tabMainFolder, SWT.NULL);
    this.ctlTopicPane.setPane(this.paneTopic);
    this.tabTopicPane.setControl(this.paneTopic);
    this.paneTopic.setController(this.ctlTopicPane);
    this.tabMainFolder.forceFocus();
    buildMenu();
    this.publishToolItem.setEnabled(false);
    this.publishItem.setEnabled(false);
}
