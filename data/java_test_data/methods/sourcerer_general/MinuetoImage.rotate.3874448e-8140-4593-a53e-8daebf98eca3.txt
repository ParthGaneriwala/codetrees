public MinuetoImage rotate(double dAngle) {
    /* Reference to the destination image. */
    BufferedImage bufDestinationImage;
    /* Reference to the affine transformation (the rotation) */
    AffineTransform aftTransform;
    /* Reference to the GraphicPointer */
    Graphics2D g2dGraphicsDestination;
    /* Resulting MinuetoImage */
    MinuetoImage mimDestinationImage;
    /* Size of the resulting MinuetoImage */
    int iNewHeight;
    int iNewWidth;
    double x1, x2, x3, y1, y2, y3, xMin, xMax, yMin, yMax, cosAngle, sinAngle;
    /* Set up the affine transformation needed to rotate the image */
    aftTransform = new AffineTransform();
    /* Rotate the image by dAngle, centered on iWidth/2 and iHeight/2 */
    aftTransform.rotate(dAngle, (double) this.iWidth / 2.0, (double) this.iHeight / 2.0);
    cosAngle = Math.cos(dAngle);
    sinAngle = Math.sin(dAngle);
    /* Get the size of our new image */
    /**
     * Before simplification
     * x0 = 0 * cosAngle - 0 * sinAngle;
     * x1 = 0 * cosAngle - this.iHeight * sinAngle;
     * x2 = this.iWidth * cosAngle - 0 * sinAngle;
     * x3 = this.iWidth * cosAngle - this.iHeight * sinAngle;
     *
     * y0 = 0 * sinAngle + 0 * cosAngle;
     * y1 = 0 * sinAngle + this.iHeight * cosAngle;
     * y2 = this.iWidth * sinAngle + 0 * cosAngle;
     * y3 = this.iWidth * sinAngle + this.iHeight * cosAngle;
     *
     * xMin = Math.min( Math.min(x0, x1), Math.min(x2, x3) );
     * xMax = Math.max( Math.max(x0, x1), Math.max(x2, x3) );
     *
     * yMin = Math.min( Math.min(y0, y1), Math.min(y2, y3) );
     * yMax = Math.max( Math.max(y0, y1), Math.max(y2, y3) );
     */
    x1 = -this.iHeight * sinAngle;
    x2 = this.iWidth * cosAngle;
    x3 = x2 + x1;
    y1 = this.iHeight * cosAngle;
    y2 = this.iWidth * sinAngle;
    y3 = y2 + y1;
    xMin = Math.min(Math.min(0, x1), Math.min(x2, x3));
    xMax = Math.max(Math.max(0, x1), Math.max(x2, x3));
    yMin = Math.min(Math.min(0, y1), Math.min(y2, y3));
    yMax = Math.max(Math.max(0, y1), Math.max(y2, y3));
    iNewWidth = (int) Math.ceil(Math.abs(xMax - xMin));
    iNewHeight = (int) Math.ceil(Math.abs(yMax - yMin));
    iNewWidth = (int) Math.ceil(Math.abs(xMax - xMin));
    iNewHeight = (int) Math.ceil(Math.abs(yMax - yMin));
    // System.out.println("Debug: " + iNewWidth + " , " + iNewHeight + " , " +  dAngle);
    /* The rotation normaly produces an unaccelerated buffered image.
		 * Instead, we produce an accelerated buffered for the result.
		 * The maximum size this image can be is 141% larger than the original.*/
    bufDestinationImage = ImageTools.createImage(iNewWidth, iNewHeight);
    /* Reference to the GraphicPointer of the destination image.*/
    g2dGraphicsDestination = bufDestinationImage.createGraphics();
    /* Make sure we will draw in the middle of our new image. */
    g2dGraphicsDestination.translate((this.iWidth - iNewWidth) / -2, (this.iHeight - iNewHeight) / -2);
    /* Draw the rotated image. */
    g2dGraphicsDestination.drawImage(this.bufImage, aftTransform, null);
    /* Set up the new MinuetoImage with the rotated image. */
    mimDestinationImage = new MinuetoImage();
    mimDestinationImage.setUpImage(bufDestinationImage);
    return mimDestinationImage;
}
