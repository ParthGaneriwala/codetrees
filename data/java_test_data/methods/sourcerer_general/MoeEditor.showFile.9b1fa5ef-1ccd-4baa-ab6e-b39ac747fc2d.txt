public // inherited from Editor, redefined
boolean showFile(// inherited from Editor, redefined
String filename, // inherited from Editor, redefined
boolean compiled, String docFilename, Rectangle bounds) {
    this.filename = filename;
    this.docFilename = docFilename;
    if (bounds != null) {
        setBounds(bounds);
    }
    boolean loaded = false;
    boolean readError = false;
    if (filename != null) {
        try {
            // check for crash file
            String crashFilename = filename + CRASHFILE_SUFFIX;
            String backupFilename = crashFilename + "backup";
            File crashFile = new File(crashFilename);
            if (crashFile.exists()) {
                File backupFile = new File(backupFilename);
                backupFile.delete();
                crashFile.renameTo(backupFile);
                DialogManager.showMessage(this, "editor-crashed");
            }
            FileReader reader = new FileReader(filename);
            sourcePane.read(reader, null);
            reader.close();
            File file = new File(filename);
            lastModified = file.lastModified();
            sourcePane.addMouseListener(this);
            sourceDocument = (MoeSyntaxDocument) sourcePane.getDocument();
            naviView.setDocument(sourceDocument);
            sourceDocument.addDocumentListener(this);
            sourceDocument.addUndoableEditListener(undoManager);
            document = sourceDocument;
            loaded = true;
        } catch (FileNotFoundException ex) {
            clear();
        } catch (IOException ex) {
            readError = true;
        }
    } else {
        if (docFilename != null) {
            if (new File(docFilename).exists()) {
                showInterface(true);
                loaded = true;
                interfaceToggle.setEnabled(false);
            }
        }
    }
    if (// should exist, but didn't
    !loaded)
        return false;
    if (loaded)
        info.message(Config.getString("editor.info.version") + " " + versionString);
    else if (readError)
        info.warning(Config.getString("editor.info.readingProblem"), Config.getString("editor.info.regularFile"));
    else
        info.message(Config.getString("editor.info.version" + versionString), Config.getString("editor.info.newFile"));
    setWindowTitle();
    sourcePane.setFont(PrefMgr.getStandardEditorFont());
    sourcePane.setSelectionColor(selectionColour);
    setCompileStatus(compiled);
    return true;
}
