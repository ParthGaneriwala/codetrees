protected Object getValidNewValue(EAttribute feature, Object value) {
    EClassifier type = feature.getEType();
    if (type instanceof EDataType) {
        Class iClass = type.getInstanceClass();
        if (Boolean.TYPE.equals(iClass)) {
            if (value instanceof Boolean) {
            // ok
            } else if (value instanceof String) {
                value = Boolean.valueOf((String) value);
            } else {
                value = new InvalidValue(NLS.bind(Messages.AbstractParser_UnexpectedValueTypeMessage, iClass.getName()));
            }
        } else if (Character.TYPE.equals(iClass)) {
            if (value instanceof Character) {
            // ok
            } else if (value instanceof String) {
                String s = (String) value;
                if (s.length() == 0) {
                    value = null;
                } else {
                    value = new Character(s.charAt(0));
                }
            } else {
                value = new InvalidValue(NLS.bind(Messages.AbstractParser_UnexpectedValueTypeMessage, iClass.getName()));
            }
        } else if (Byte.TYPE.equals(iClass)) {
            if (value instanceof Byte) {
            // ok
            } else if (value instanceof Number) {
                value = new Byte(((Number) value).byteValue());
            } else if (value instanceof String) {
                String s = (String) value;
                if (s.length() == 0) {
                    value = null;
                } else {
                    try {
                        value = Byte.valueOf(s);
                    } catch (NumberFormatException nfe) {
                        value = new InvalidValue(NLS.bind(Messages.AbstractParser_WrongStringConversionMessage, iClass.getName()));
                    }
                }
            } else {
                value = new InvalidValue(NLS.bind(Messages.AbstractParser_UnexpectedValueTypeMessage, iClass.getName()));
            }
        } else if (Short.TYPE.equals(iClass)) {
            if (value instanceof Short) {
            // ok
            } else if (value instanceof Number) {
                value = new Short(((Number) value).shortValue());
            } else if (value instanceof String) {
                String s = (String) value;
                if (s.length() == 0) {
                    value = null;
                } else {
                    try {
                        value = Short.valueOf(s);
                    } catch (NumberFormatException nfe) {
                        value = new InvalidValue(NLS.bind(Messages.AbstractParser_WrongStringConversionMessage, iClass.getName()));
                    }
                }
            } else {
                value = new InvalidValue(NLS.bind(Messages.AbstractParser_UnexpectedValueTypeMessage, iClass.getName()));
            }
        } else if (Integer.TYPE.equals(iClass)) {
            if (value instanceof Integer) {
            // ok
            } else if (value instanceof Number) {
                value = new Integer(((Number) value).intValue());
            } else if (value instanceof String) {
                String s = (String) value;
                if (s.length() == 0) {
                    value = null;
                } else {
                    try {
                        value = Integer.valueOf(s);
                    } catch (NumberFormatException nfe) {
                        value = new InvalidValue(NLS.bind(Messages.AbstractParser_WrongStringConversionMessage, iClass.getName()));
                    }
                }
            } else {
                value = new InvalidValue(NLS.bind(Messages.AbstractParser_UnexpectedValueTypeMessage, iClass.getName()));
            }
        } else if (Long.TYPE.equals(iClass)) {
            if (value instanceof Long) {
            // ok
            } else if (value instanceof Number) {
                value = new Long(((Number) value).longValue());
            } else if (value instanceof String) {
                String s = (String) value;
                if (s.length() == 0) {
                    value = null;
                } else {
                    try {
                        value = Long.valueOf(s);
                    } catch (NumberFormatException nfe) {
                        value = new InvalidValue(NLS.bind(Messages.AbstractParser_WrongStringConversionMessage, iClass.getName()));
                    }
                }
            } else {
                value = new InvalidValue(NLS.bind(Messages.AbstractParser_UnexpectedValueTypeMessage, iClass.getName()));
            }
        } else if (Float.TYPE.equals(iClass)) {
            if (value instanceof Float) {
            // ok
            } else if (value instanceof Number) {
                value = new Float(((Number) value).floatValue());
            } else if (value instanceof String) {
                String s = (String) value;
                if (s.length() == 0) {
                    value = null;
                } else {
                    try {
                        value = Float.valueOf(s);
                    } catch (NumberFormatException nfe) {
                        value = new InvalidValue(NLS.bind(Messages.AbstractParser_WrongStringConversionMessage, iClass.getName()));
                    }
                }
            } else {
                value = new InvalidValue(NLS.bind(Messages.AbstractParser_UnexpectedValueTypeMessage, iClass.getName()));
            }
        } else if (Double.TYPE.equals(iClass)) {
            if (value instanceof Double) {
            // ok
            } else if (value instanceof Number) {
                value = new Double(((Number) value).doubleValue());
            } else if (value instanceof String) {
                String s = (String) value;
                if (s.length() == 0) {
                    value = null;
                } else {
                    try {
                        value = Double.valueOf(s);
                    } catch (NumberFormatException nfe) {
                        value = new InvalidValue(NLS.bind(Messages.AbstractParser_WrongStringConversionMessage, iClass.getName()));
                    }
                }
            } else {
                value = new InvalidValue(NLS.bind(Messages.AbstractParser_UnexpectedValueTypeMessage, iClass.getName()));
            }
        } else if (type instanceof EEnum) {
            if (value instanceof String) {
                EEnumLiteral literal = ((EEnum) type).getEEnumLiteralByLiteral((String) value);
                if (literal == null) {
                    value = new InvalidValue(NLS.bind(Messages.AbstractParser_UnknownLiteralMessage, value));
                } else {
                    value = literal.getInstance();
                }
            } else {
                value = new InvalidValue(NLS.bind(Messages.AbstractParser_UnexpectedValueTypeMessage, String.class.getName()));
            }
        }
    }
    return value;
}
