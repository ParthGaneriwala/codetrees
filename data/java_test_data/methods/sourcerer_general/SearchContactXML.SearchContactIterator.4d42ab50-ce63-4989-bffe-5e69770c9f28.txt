public boolean SearchContactIterator(ContactOperations contactData, Element element) {
    System.out.println("Element____" + element.toString());
    NodeList nodelist = element.getChildNodes();
    // System.out.println(element.getNodeName());
    for (int i = 0; i < nodelist.getLength(); i++) {
        Node node = nodelist.item(i);
        String str = node.getNodeName();
        if (str.equalsIgnoreCase("BlurSearch")) {
            String value = node.getTextContent();
            if (value.equals("0"))
                blur = true;
        }
    }
    if (blur) {
        // ģ��ƥ��
        System.out.println(element.toString());
        System.out.println("Blur________");
        // System.out.println("Length____"+nodelist.getLength());
        for (int i = 0; i < nodelist.getLength(); i++) {
            System.out.println("LLLLLLLLL");
            Node node = nodelist.item(i);
            System.out.println(node.toString());
            String str = node.getNodeName();
            System.out.println(str);
            if (str.equalsIgnoreCase("ContactName")) {
                String value = node.getTextContent();
                System.out.println("SearchText____" + value);
                System.out.println("Name____" + contactData.getContactName());
                if (contactData.getContactName().contains(value)) {
                    goFlag = true;
                    System.out.println("BlurSearch___MM" + contactData.getContactName() + "MMMMMMMM" + value);
                    System.out.println(goFlag);
                } else {
                    System.out.println("Pos____" + contactData.getContactName().indexOf(value));
                    System.out.println("Error Here!!!");
                    goFlag = false;
                    return false;
                }
            } else if (str.equalsIgnoreCase("Telephone")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getPhoneNumberList().size(); j++) {
                    if (contactData.getPhoneNumberList().get(j).contains(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("Email")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getEmailAddresseList().size(); j++) {
                    if (contactData.getEmailAddresseList().get(j).contains(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("Address")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getContactAddressList().size(); j++) {
                    if (contactData.getContactAddressList().get(j).contains(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("Office")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getWorkingDepartmentList().size(); j++) {
                    if (contactData.getWorkingDepartmentList().get(j).contains(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("IMContact")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getImContactInformationList().size(); j++) {
                    if (contactData.getImContactInformationList().get(j).contains(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("Birthday")) {
                String value = node.getTextContent();
                if (contactData.getContactBirthday().toString().contains(value)) {
                    goFlag = true;
                    break;
                } else {
                    goFlag = false;
                }
            } else if (str.equalsIgnoreCase("url")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getUrlList().size(); j++) {
                    if (contactData.getUrlList().get(j).contains(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("CommonLabel")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getCommonLabelList().size(); j++) {
                    if (contactData.getCommonLabelList().get(j).contains(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("Group")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getGroupList().size(); j++) {
                    if (contactData.getGroupList().get(j).contains(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            }
            if (node instanceof Element && !node.getNodeName().equalsIgnoreCase("RelationLabel")) {
                SearchContactIterator(contactData, (Element) node);
            } else {
            // ���ڲ��ܶԹ�ϵ��ǩ��������
            }
        }
        return goFlag;
    } else {
        // ��ȷ����
        for (int i = 0; i < nodelist.getLength(); i++) {
            Node node = nodelist.item(i);
            String str = node.getNodeName();
            if (str.equalsIgnoreCase("ContactName")) {
                String value = node.getTextContent();
                System.out.println("SearchText____" + value);
                if (contactData.getContactName().equalsIgnoreCase(value))
                    goFlag = true;
                else {
                    goFlag = false;
                    return false;
                }
            } else if (str.equalsIgnoreCase("Telephone")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getPhoneNumberList().size(); j++) {
                    if (contactData.getPhoneNumberList().get(j).equalsIgnoreCase(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("Email")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getEmailAddresseList().size(); j++) {
                    if (contactData.getEmailAddresseList().get(j).equals(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("Address")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getContactAddressList().size(); j++) {
                    if (contactData.getContactAddressList().get(j).equalsIgnoreCase(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("Office")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getWorkingDepartmentList().size(); j++) {
                    if (contactData.getWorkingDepartmentList().get(j).equalsIgnoreCase(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("IMContact")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getImContactInformationList().size(); j++) {
                    if (contactData.getImContactInformationList().get(j).equalsIgnoreCase(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("Birthday")) {
                String value = node.getTextContent();
                System.out.println("Contact----" + contactData.getContactName().toString());
                System.out.println("value---" + value);
                if (contactData.getContactBirthday().toString().equalsIgnoreCase(value)) {
                    goFlag = true;
                    break;
                } else {
                    goFlag = false;
                    return false;
                }
            } else if (str.equalsIgnoreCase("url")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getUrlList().size(); j++) {
                    if (contactData.getUrlList().get(j).equalsIgnoreCase(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("CommonLabel")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getCommonLabelList().size(); j++) {
                    if (contactData.getCommonLabelList().get(j).equalsIgnoreCase(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            } else if (str.equalsIgnoreCase("Group")) {
                String value = node.getTextContent();
                for (int j = 0; j < contactData.getGroupList().size(); j++) {
                    if (contactData.getGroupList().get(j).equalsIgnoreCase(value)) {
                        goFlag = true;
                        break;
                    } else {
                        goFlag = false;
                        continue;
                    }
                }
                if (!goFlag) {
                    return false;
                }
            }
            // }
            if (node instanceof Element && !node.getNodeName().equalsIgnoreCase("RelationLabel")) {
                SearchContactIterator(contactData, (Element) node);
            }
            if (node instanceof Element && node.getNodeName().equalsIgnoreCase("RelationLabel")) {
                System.out.println("RelationLabel Search");
                return RelationLabel(contactData, (Element) node);
            }
        }
    }
    return goFlag;
}
