public ActionForward second(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws ForbesException {
    // UserLoginForm userLoginForm = (UserLoginForm) form;
    UcMembers user = (UcMembers) request.getSession().getAttribute("CLIENT");
    if (user == null || user.getUserDetail() == null) {
        request.setAttribute("FAIL_MESSAGE", "����û��¼�����¼��");
        return mapping.findForward("fail");
    }
    // System.out.println("  second  0");
    // System.out.println("  user.id =  " + user.getUid());
    String title = request.getParameter("title");
    String content = request.getParameter("content");
    String typeid = request.getParameter("typeid");
    String typeid2 = request.getParameter("typeid2");
    String typename = request.getParameter("typename");
    String typename2 = request.getParameter("typename2");
    String score = request.getParameter("score");
    /*System.out.println("  --------------------->1  ");
		
		System.out.println("  typeid->  " + typeid);
		System.out.println("  typeid2->  " + typeid2);
		System.out.println("  typeid->  ");*/
    Ask ask = new Ask();
    ask.setTitle(title);
    ask.setContent(content);
    if (typeid != null && typeid.trim().length() > 0) {
        AskType askType = askTypeManager.getAskType(Integer.parseInt(typeid.trim()));
        ask.setAskType(askType);
    }
    if (typeid2 != null && typeid2.trim().length() > 0) {
        AskType askType2 = askTypeManager.getAskType(Integer.parseInt(typeid2.trim()));
        ask.setAskType2(askType2);
    }
    // System.out.println("  --------------------->2  ");
    // ask.setTypeId(Integer.parseInt(typeid));
    // ask.setTypeId2(Integer.parseInt(typeid2));
    ask.setReward(new Short(score));
    ask.setAnonymous(new Short("0"));
    ask.setBestAnswer(null);
    ask.setDateline(null);
    ask.setDigest(new Short("0"));
    ask.setDisorder(new Short("0"));
    ask.setExpiredTime(new Date());
    ask.setExtra(null);
    ask.setReplies(Integer.parseInt("0"));
    ask.setSolveTime(null);
    ask.setStatus(new Short("0"));
    // ask.setUser(user);
    ask.setUserId(user.getUid());
    ask.setUsername(user.getUsername());
    ask.setViews(Integer.parseInt("0"));
    ask.setIp(request.getRemoteAddr());
    // System.out.println("  second  1");
    // ���ִ���
    Short accountType = DictionaryManager.getInstance().getVal("ACCOUNT_TYPE", "2").getDvalue();
    int amount = 10;
    // System.out.println("accountType = " + accountType);
    String remark = "���� ��" + ask.getTitle() + "�� ";
    boolean updateRst = scoreManager.minusScoreByUser(null, ask.getUserId().toString(), accountType.toString(), (int) amount, remark);
    if (updateRst) {
        // System.out.println("���ٻ��ֳɹ�");
        askManager.askQuestion(user, ask);
    } else {
        request.setAttribute("FAIL_MESSAGE", "���Ļ��ֲ�����");
        // System.out.println("  second  xx");
        return mapping.findForward("fail");
    }
    /*request.setAttribute("KEY_WORD", keyword );
		request.setAttribute("ASK_LIST", list );*/
    // request.setAttribute("RETURN_URL", "ArticleView.do?id="+id );
    request.setAttribute("ASK", ask);
    // System.out.println("  second  2");
    return mapping.findForward("second");
}
