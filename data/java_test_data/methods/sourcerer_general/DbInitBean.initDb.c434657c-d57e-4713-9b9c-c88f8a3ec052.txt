public void initDb() {
    System.out.println("Start init DB");
    List<User> users = new ArrayList<User>();
    SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
    try {
        List<Category> categories = new ArrayList<Category>();
        Category jee5 = new Category("JEE5");
        categories.add(jee5);
        Category jee6 = new Category("JEE6");
        categories.add(jee6);
        Category grails = new Category("Grails");
        categories.add(grails);
        Category wicket = new Category("Wicket");
        categories.add(wicket);
        Category gwt = new Category("GWT");
        categories.add(gwt);
        genericDao.persistAll(categories);
        // new UserBuilder().withFullname("Andreas Baumgartner")
        // .withUsername("abaumgartner")
        // .withPassword("test123")
        // .withEmail("andreas@bambo.it")
        // .withGender(Gender.MALE)
        // .withBirthday(sdf.parse("15.09.1979")).build();
        User bambo = new User("Andreas Baumgartner", "abaumgartner", "test123", "andreas@bambo.it", Gender.MALE, sdf.parse("15.09.1979"));
        users.add(bambo);
        bambo.getCategories().add(jee6);
        User peter = new User("Peter Schneider-Manzell", "pschneider-manzell", "test123", "peter@schneider-manzell.de", Gender.MALE, null);
        users.add(peter);
        peter.getCategories().add(grails);
        User andreas = new User("Andreas Nerlich", "anerlich", "test123", "andreas.nerlich@gmail.com", Gender.MALE, null);
        users.add(andreas);
        andreas.getCategories().add(grails);
        User josip = new User("Josip Mihelko", "jmihelko", "test123", "josip.mihelko@googlemail.com", Gender.MALE, null);
        users.add(josip);
        josip.getCategories().add(grails);
        bambo.getFollowing().add(peter);
        andreas.getFollowing().add(bambo);
        josip.getFollowing().add(andreas);
        createDummyMessages(bambo, 100, new Date(), 1000);
        createDummyMessages(josip, 50, new Date(), 2000);
        createDummyMessages(andreas, 10, new Date(), 3000);
        genericDao.persistAll(users);
    } catch (ParseException e) {
        throw new RuntimeException(e);
    }
}
