Table SYSTEM_PROCEDURES(Session session) {
    Table t = sysTables[SYSTEM_PROCEDURES];
    if (t == null) {
        t = createBlankTable(sysTableHsqlNames[SYSTEM_PROCEDURES]);
        // ----------------------------------------------------------------
        // required
        // ----------------------------------------------------------------
        // 0
        addColumn(t, "PROCEDURE_CAT", SQL_IDENTIFIER);
        // 1
        addColumn(t, "PROCEDURE_SCHEM", SQL_IDENTIFIER);
        // 2
        addColumn(t, "PROCEDURE_NAME", SQL_IDENTIFIER);
        // 3
        addColumn(t, "COL_4", Type.SQL_INTEGER);
        // 4
        addColumn(t, "COL_5", Type.SQL_INTEGER);
        // 5
        addColumn(t, "COL_6", Type.SQL_INTEGER);
        // 6
        addColumn(t, "REMARKS", CHARACTER_DATA);
        // basically: function (returns result), procedure (no return value)
        // or unknown (say, a trigger callout routine)
        // 7
        addColumn(t, "PROCEDURE_TYPE", Type.SQL_SMALLINT);
        // ----------------------------------------------------------------
        // JDBC 4.0
        // ----------------------------------------------------------------
        // 8
        addColumn(t, "SPECIFIC_NAME", SQL_IDENTIFIER);
        // ----------------------------------------------------------------
        // order: PROCEDURE_CAT, PROCEDURE_SCHEM, PROCEDURE_NAME, SPECIFIC_NAME
        HsqlName name = HsqlNameManager.newInfoSchemaObjectName(sysTableHsqlNames[SYSTEM_PROCEDURES].name, false, SchemaObject.INDEX);
        t.createPrimaryKeyConstraint(name, new int[] { 0, 1, 2, 8 }, false);
        return t;
    }
    // 
    final int procedure_catalog = 0;
    final int procedure_schema = 1;
    final int procedure_name = 2;
    final int col_4 = 3;
    final int col_5 = 4;
    final int col_6 = 5;
    final int remarks = 6;
    final int procedure_type = 7;
    final int specific_name = 8;
    // 
    PersistentStore store = session.sessionData.getRowStore(t);
    // 
    Iterator it = database.schemaManager.databaseObjectIterator(SchemaObject.SPECIFIC_ROUTINE);
    while (it.hasNext()) {
        Routine routine = (Routine) it.next();
        Object[] row = t.getEmptyRowData();
        row[procedure_catalog] = row[procedure_catalog] = database.getCatalogName().name;
        row[procedure_schema] = routine.getSchemaName().name;
        row[procedure_name] = routine.getName().name;
        row[procedure_type] = routine.isProcedure() ? ValuePool.INTEGER_1 : ValuePool.INTEGER_2;
        row[specific_name] = routine.getSpecificName().name;
        t.insertSys(store, row);
    }
    return t;
}
