public String runFlow(ChainFlow chainFlow, ChainContext chainContext) throws FlowException {
    if (log.isInfoEnabled()) {
        log.info("Start to run the print flow [" + chainFlow.getFlowName() + "]");
    }
    chainContext.addSimuList("<font color=blue><b> Start to run the web service flow [" + chainFlow.getFlowCode() + "] </b></font>");
    if ("Y".equals(chainFlow.getSkipYn())) {
        if (log.isInfoEnabled()) {
            log.info("Print flow [" + chainFlow.getFlowName() + "]: skipFlag=true");
        }
        chainContext.addSimuList("Print flow [" + chainFlow.getFlowName() + "]: skipFlag=true<br>=================");
        return "0";
    }
    String userdata = chainContext.getUserdata();
    String data = null;
    String temp = null;
    String reader = chainFlow.getAttr3();
    String baudrate = chainFlow.getAttr2();
    String[] para = new String[6];
    if ("FuDan".equals(reader)) {
        FuDanDriver m = new FuDanDriver();
        para[0] = chainFlow.getAttr1();
        para[1] = String.valueOf(baudrate);
        para[2] = "8";
        para[3] = "1";
        para[4] = "none";
        para[5] = "100";
        try {
            m.Open(para);
            // String userData = new
            // String(userdata.getBytes("ISO-8859-1"),"GBK");
            // System.out.println(userdata + "[" +userdata.length() + "]");
            String temp1 = new String(userdata.getBytes("UTF-8"), "ISO-8859-1");
            boolean result = m.setTagData(0, userdata);
            if (result)
                System.out.println("write OK");
            else
                System.out.println("write FAILED");
            temp = m.getTagData(0, temp1.length());
            int index = temp.indexOf((char) 0x0);
            if (index != -1)
                temp = temp.substring(0, index);
            String uid = m.getTagData(0, 0);
            data = "01||" + uid.length() + "||" + uid + "||" + temp.length() + "||" + temp + "||64||DES||64||";
            m.Close();
            log.info("PrintFlowImp::runFlow OK");
        } catch (Exception e) {
            log.error("Print Flow :" + e.getMessage());
            try {
                onError(chainFlow, chainContext, 98);
            } catch (Exception ex) {
            // TODO
            }
            if (m != null)
                m.Close();
        }
    } else if ("Kab500".equals(reader)) {
        Kab500Driver m = new Kab500Driver();
        para[0] = chainFlow.getAttr1();
        para[1] = String.valueOf(baudrate);
        para[2] = "8";
        para[3] = "1";
        para[4] = "none";
        para[5] = "100";
        try {
            m.Open(para);
            String temp1 = new String(userdata.getBytes("UTF-8"), "ISO-8859-1");
            boolean result = m.setTagData(0, userdata);
            if (result)
                System.out.println("write OK");
            else
                System.out.println("write FAILED");
            temp = m.getTagData(0, temp1.length());
            int index = temp.indexOf((char) 0x0);
            if (index != -1)
                temp = temp.substring(0, index);
            String uid = m.getTagData(0, 0);
            data = "01||" + uid.length() + "||" + uid + "||" + temp.length() + "||" + temp + "||64||DES||64||";
            m.Close();
            log.info("PrintFlowImp::runFlow OK");
        } catch (Exception e) {
            log.error("Print Flow :" + e.getMessage());
            try {
                onError(chainFlow, chainContext, 98);
            } catch (Exception ex) {
            // TODO
            }
            if (m != null)
                m.Close();
        }
    }
    return data;
}
