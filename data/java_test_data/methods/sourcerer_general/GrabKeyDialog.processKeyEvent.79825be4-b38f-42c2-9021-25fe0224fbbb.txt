// }}}
protected void processKeyEvent(KeyEvent _evt) {
    KeyEvent evt = KeyEventWorkaround.processKeyEvent(_evt);
    if (!KeyEventWorkaround.isBindable(_evt.getKeyCode()))
        evt = null;
    if (debugBuffer != null) {
        debugBuffer.insert(debugBuffer.getLength(), "Event " + GrabKeyDialog.toString(_evt) + (evt == null ? " filtered\n" : " passed\n"));
    }
    if (evt == null)
        return;
    evt.consume();
    KeyEventTranslator.Key key = KeyEventTranslator.translateKeyEvent(evt);
    if (Debug.DUMP_KEY_EVENTS) {
        Log.log(Log.DEBUG, GrabKeyDialog.class, "processKeyEvent() key=" + key + ", _evt=" + _evt + ".");
    }
    if (key == null)
        return;
    if (debugBuffer != null) {
        debugBuffer.insert(debugBuffer.getLength(), "==> Translated to " + key + "\n");
    }
    StringBuffer keyString = new StringBuffer(getText());
    if (getDocument().getLength() != 0)
        keyString.append(' ');
    if (!Options.SIMPLIFIED_KEY_HANDLING) {
        if (key.modifiers != null)
            keyString.append(key.modifiers).append('+');
        if (key.input == ' ')
            keyString.append("SPACE");
        else if (key.input != '\0')
            keyString.append(key.input);
        else {
            String symbolicName = getSymbolicName(key.key);
            if (symbolicName == null)
                return;
            keyString.append(symbolicName);
        }
    } else {
        if (key.modifiers != null) {
            keyString.append(key.modifiers).append('+');
        }
        String symbolicName = getSymbolicName(key.key);
        if (symbolicName != null) {
            keyString.append(symbolicName);
        } else {
            if (key.input != '\0') {
                if (key.input == ' ') {
                    keyString.append("SPACE");
                } else {
                    keyString.append(key.input);
                }
            } else {
                return;
            }
        }
    }
    setText(keyString.toString());
    if (debugBuffer == null)
        updateAssignedTo(keyString.toString());
}
