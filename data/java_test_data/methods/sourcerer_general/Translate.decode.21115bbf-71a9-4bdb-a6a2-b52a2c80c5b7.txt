public static String decode(String string) {
    CharacterReferenceEx key;
    int amp;
    int index;
    int length;
    StringBuffer buffer;
    char character;
    int number;
    int radix;
    int i;
    int semi;
    boolean done;
    CharacterReference item;
    String ret;
    if (-1 == (amp = string.indexOf('&')))
        ret = string;
    else {
        key = null;
        index = 0;
        length = string.length();
        buffer = new StringBuffer(length);
        do {
            // but without the allocation of a new String
            while (index < amp) buffer.append(string.charAt(index++));
            index++;
            if (index < length) {
                character = string.charAt(index);
                if ('#' == character) {
                    // numeric character reference
                    index++;
                    number = 0;
                    radix = 0;
                    i = index;
                    done = false;
                    while ((i < length) && !done) {
                        character = string.charAt(i);
                        switch(character) {
                            case '0':
                            case '1':
                            case '2':
                            case '3':
                            case '4':
                            case '5':
                            case '6':
                            case '7':
                            case '8':
                            case '9':
                                if (0 == radix)
                                    radix = 10;
                                number = number * radix + (character - '0');
                                break;
                            case 'A':
                            case 'B':
                            case 'C':
                            case 'D':
                            case 'E':
                            case 'F':
                                if (16 == radix)
                                    number = number * radix + (character - 'A' + 10);
                                else
                                    done = true;
                                break;
                            case 'a':
                            case 'b':
                            case 'c':
                            case 'd':
                            case 'e':
                            case 'f':
                                if (16 == radix)
                                    number = number * radix + (character - 'a' + 10);
                                else
                                    done = true;
                                break;
                            case 'x':
                            case 'X':
                                if (0 == radix)
                                    radix = 16;
                                else
                                    done = true;
                                break;
                            case ';':
                                done = true;
                                i++;
                                break;
                            default:
                                done = true;
                                break;
                        }
                        if (!done)
                            i++;
                    }
                    if (0 != number) {
                        buffer.append((char) number);
                        index = i;
                        amp = index;
                    }
                } else if (// really can't start with a digit eh...
                Character.isLetter(character)) {
                    // character entity reference
                    i = index + 1;
                    done = false;
                    semi = length;
                    while ((i < length) && !done) {
                        character = string.charAt(i);
                        if (';' == character) {
                            done = true;
                            semi = i;
                            i++;
                        } else if (Character.isLetterOrDigit(character))
                            i++;
                        else {
                            done = true;
                            semi = i;
                        }
                    }
                    // new CharacterReference (string.substring (index, semi), 0);
                    if (null == key)
                        key = new CharacterReferenceEx();
                    key.setKernel(string);
                    key.setStart(index);
                    key.setEnd(semi);
                    item = lookup(key);
                    if (null != item) {
                        buffer.append((char) item.getCharacter());
                        index += item.getKernel().length();
                        if ((index < length) && (';' == string.charAt(index)))
                            index++;
                        amp = index;
                    }
                } else {
                // need do nothing here, the ampersand will be consumed below
                }
            }
            // gather up unconsumed characters
            while (amp < index) buffer.append(string.charAt(amp++));
        } while ((index < length) && (-1 != (amp = string.indexOf('&', index))));
        // but without the allocation of a new String
        while (index < length) buffer.append(string.charAt(index++));
        ret = buffer.toString();
    }
    return (ret);
}
