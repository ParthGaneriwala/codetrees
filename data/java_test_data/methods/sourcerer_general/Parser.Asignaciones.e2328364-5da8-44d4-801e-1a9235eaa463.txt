// static void Asignaciones() {
// Expect(1);
// if (StartOf(4)) {
// if (la.kind == 16) {
// Get();
// Expect(1);
// if (la.kind == 19 || la.kind == 31) {
// if (la.kind == 19) {
// Get();
// Argumentos();
// Expect(25);
// Expect(31);
// } else {
// Get();
// }
// }
// } else if (la.kind == 1) {
// Get();
// Expect(31);
// } else if (la.kind == 18) {
// Get();
// Expresion();
// Expect(24);
// } else {
// Get();
// if (StartOf(5)) {
// if (StartOf(1)) {
// ArgumentosDeclaracion();
// } else {
// Argumentos();
// }
// }
// Expect(25);
// if (la.kind == 17 || la.kind == 31) {
// if (la.kind == 17) {
// Get();
// Miembros();
// Expect(23);
// } else {
// Get();
// }
// }
// }
// }
// ALLMetodo();
// }
// Asignaciones = ident ["." ident ["("Argumentos")" ";"] | ident ";" | "["Expresion"]" | "("[ArgumentosDeclaracion | Argumentos]")"["{"Miembros"}" |";"]] ALLMetodo
void Asignaciones() {
    Inicializa_aux();
    Esperado(1);
    Simbolo asigna_simbol = new Simbolo();
    asigna_simbol = tablasimbolos.Buscar(simbolo.getId());
    if (asigna_simbol == null)
        SemErr("El identificador es desconocido");
    if (StartOf(3)) {
        if (la.kind == 16) {
            if (asigna_simbol == null) {
                SemErr("El identificador no se corresponde con ningún objeto declarado");
            }
            if (asigna_simbol.getTipo() != 'o') {
                SemError("Se esperaba una variable tipo objeto");
            }
            String clase_asociada = simbolo.getClaseRelacionada();
            TablaSimb tio;
            tio = tablasimbolos.BuscarTio(clase_asociada);
            if (tio == null)
                SemError("No existe la clase relacionada");
            Get();
            Esperado(1);
            asigna_simbol = tablasimbolos.BuscarEn(tio, simbolo.getId());
            if (asigna_simbol == null)
                SemErr("No existe ningún atributo o metodo en la clase " + clase_asociada + " con ese identificador");
            if (la.kind == 19 || la.kind == 31) {
                if (la.kind == 19) {
                    if (asigna_simbol.getTipo() != 'm')
                        SemErr("Sólo un método puede llevar argumentos");
                    else // if (tipo_asig != 'm') SemErr("Sólo un método puede llevar argumentos");
                    {
                        if (asigna_simbol.getColaArgumentos() != null)
                            colaArgumento = asigna_simbol.getColaArgumentos();
                    }
                    Get();
                    Argumentos();
                    Esperado(25);
                    if (la.kind == 31)
                        Esperado(31);
                    else if (la.kind != 15)
                        SemErr("Se esperaba ;");
                }
            }
            if (la.kind == 31) {
                Esperado(31);
            }
        } else if (la.kind == 1) {
            TablaSimb tio;
            tio = tablasimbolos.BuscarTio(asigna_simbol.getId());
            if (tio == null)
                SemErr("No existe ninguna clase declarada con ese identificador");
            else {
                Simbolo simb = new Simbolo(la.val, 'o', la.line);
                simb.setCol(la.col);
                simb.setPos(la.pos);
                simb.setClaseRelacionada(asigna_simbol.getId());
                int existe = tablasimbolos.InsertarSimbolo(simb, la.val);
                if (existe != 0)
                    SemErr("Existe otro elemento con el mismo identificador");
                Get();
                Esperado(31);
            }
        } else if (la.kind == 18) {
            if (asigna_simbol == null)
                SemErr("No existe ningún vector con ese identificador");
            Get();
            char c;
            c = Expresion();
            if (c != 'e')
                SemError("La expresion debe ser matemática");
            tipo_asig = asigna_simbol.getTipoEnVector();
            Esperado(24);
        } else if ((la.kind == 19) || (la.kind == 31)) {
            if (la.kind == 19) {
                if (asigna_simbol.getTipo() != 'm')
                    SemErr("Sólo un método puede llevar argumentos");
                else // if (tipo_asig != 'm') SemErr("Sólo un método puede llevar argumentos");
                {
                    if (asigna_simbol.getColaArgumentos() != null)
                        colaArgumento = asigna_simbol.getColaArgumentos();
                }
                Get();
                Argumentos();
                Esperado(25);
                if (la.kind == 31)
                    Esperado(31);
                else if (la.kind != 15)
                    SemErr("Se esperaba ;");
            }
        } else if (la.kind == 25) {
            /*
            DE QUE VA ESTA PARTE?? QUE ES ESO DE ARGUMENTOS Y ARGUMENTOS DE DECLARACION?????????
         */
            Get();
            if (StartOf(4)) {
                if (StartOf(5)) {
                    ArgumentosDeclaracion();
                } else {
                    Argumentos();
                }
            }
            Esperado(25);
            if (la.kind == 17 || la.kind == 31) {
                if (la.kind == 17) {
                    Get();
                    Miembros();
                    Esperado(23);
                } else {
                    Get();
                }
            }
        }
    }
    ALLMetodo();
}
