private synchronized void drawAxes_(Graphics graphics) {
    String letter;
    double lx, ly;
    FontMetrics fm = graphics.getFontMetrics();
    graphics.setColor(Color.black);
    DPoint3 p2 = new DPoint3();
    p2.move(25, 0, 0);
    p2.transform(rotzMatrix_);
    p2.transform(rotxMatrix_);
    graphics.drawLine(40, 40, 40 + (int) p2.x, 40 + (int) p2.y);
    p2.move(32, 0, 0);
    p2.transform(rotzMatrix_);
    p2.transform(rotxMatrix_);
    letter = new String("X");
    lx = p2.x - fm.stringWidth(letter) / 2.0;
    ly = p2.y + fm.getAscent() / 2.0;
    graphics.drawString(letter, 40 + (int) lx, 40 + (int) ly);
    p2.move(0, 25, 0);
    p2.transform(rotzMatrix_);
    p2.transform(rotxMatrix_);
    graphics.drawLine(40, 40, 40 + (int) p2.x, 40 + (int) p2.y);
    p2.move(0, 32, 0);
    p2.transform(rotzMatrix_);
    p2.transform(rotxMatrix_);
    letter = new String("Y");
    lx = p2.x - fm.stringWidth(letter) / 2.0;
    ly = p2.y + fm.getAscent() / 2.0;
    graphics.drawString(letter, 40 + (int) lx, 40 + (int) ly);
    p2.move(0, 0, 25);
    p2.transform(rotzMatrix_);
    p2.transform(rotxMatrix_);
    graphics.drawLine(40, 40, 40 + (int) p2.x, 40 + (int) p2.y);
    p2.move(0, 0, 32);
    p2.transform(rotzMatrix_);
    p2.transform(rotxMatrix_);
    letter = new String("Z");
    lx = p2.x - fm.stringWidth(letter) / 2.0;
    ly = p2.y + fm.getAscent() / 2.0;
    graphics.drawString(letter, 40 + (int) lx, 40 + (int) ly);
}
