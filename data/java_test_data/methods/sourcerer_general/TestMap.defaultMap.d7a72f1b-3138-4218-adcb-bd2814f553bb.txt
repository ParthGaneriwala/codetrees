public static Tile[][] defaultMap() {
    Tile[][] tile = new Tile[10][10];
    for (int i = 0; i < 10; i++) {
        for (int j = 0; j < 10; j++) tile[i][j] = new Tile(i, j, TerrainFactory.createNormal());
    }
    tile[1][1] = new Tile(1, 1, TerrainFactory.createPlanet());
    tile[3][1] = new Tile(3, 1, TerrainFactory.createPlanet());
    tile[1][3] = new Tile(1, 3, TerrainFactory.createPlanet());
    tile[8][6] = new Tile(8, 6, TerrainFactory.createPlanet());
    tile[6][8] = new Tile(6, 8, TerrainFactory.createPlanet());
    tile[8][8] = new Tile(8, 8, TerrainFactory.createPlanet());
    tile[7][7] = new Tile(7, 7, TerrainFactory.createSlow());
    tile[6][6] = new Tile(6, 6, TerrainFactory.createSlow());
    tile[5][5] = new Tile(5, 5, TerrainFactory.createSlow());
    tile[4][4] = new Tile(4, 4, TerrainFactory.createSlow());
    tile[3][3] = new Tile(3, 3, TerrainFactory.createSlow());
    tile[2][2] = new Tile(2, 2, TerrainFactory.createSlow());
    tile[2][5] = new Tile(2, 5, TerrainFactory.createImpassable());
    tile[2][6] = new Tile(2, 6, TerrainFactory.createImpassable());
    tile[7][3] = new Tile(7, 3, TerrainFactory.createImpassable());
    tile[7][4] = new Tile(7, 4, TerrainFactory.createImpassable());
    tile[5][4].setAreaEffect(new AreaEffect(AreaEffectType.HEAL));
    tile[4][5].setAreaEffect(new AreaEffect(AreaEffectType.TAKEDAMAGE));
    tile[5][3].setAreaEffect(new AreaEffect(AreaEffectType.INSTANTDEATH));
    tile[4][6].setTheItem(new Item(ItemType.NOTPASSABLE));
    tile[2][8].setTheItem(new Item(ItemType.BONUSORE));
    tile[6][1].setTheItem(new Item(ItemType.BONUSORE));
    tile[9][3].setTheItem(new Item(ItemType.BONUSORE));
    return tile;
}
