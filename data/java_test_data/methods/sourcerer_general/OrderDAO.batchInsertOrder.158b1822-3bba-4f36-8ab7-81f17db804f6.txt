public static void batchInsertOrder(Order o) throws AppException {
    Connection conn = DBUtils.getDataConnection();
    PreparedStatement pstmt = null;
    ResultSet rs = null;
    String sqlOrder = null;
    String sqlDetail = null;
    try {
        conn.setAutoCommit(false);
        sqlOrder = "insert into SO_SOMain (ID,cSOCode,dDate," + "cBusType,cCusCode,cCusName," + "cDepCode,cSTCode," + // "cDepCode,cPersonCode,cSTCode," +
        "iVTid,cMaker,cMemo) values (?,?,?,?,?,?,?,?,?,?,?)";
        sqlDetail = "insert into SO_SODetails (ID,cSOCode,cInvCode,cInvName," + "iNum,iQuantity,iTaxUnitPrice,iSum,dPreDate,iSOsID,cFree1,cUnitID) values(?,?,?,?,?,?,?,?,?,?,?,?)";
        // ����Order��
        pstmt = conn.prepareStatement(sqlOrder);
        // ��ȡ����ID
        long maxId = getMaxID(conn, pstmt, rs);
        maxId++;
        // set ID
        pstmt.setLong(1, maxId);
        Long l = maxId;
        o.setId(l.intValue());
        // ��ȡ�����cSOCode
        String code = o.getCode();
        long maxCSOCode = getMaxCSOCode(code, conn, pstmt, rs);
        String csOCode = getCSOCode(code, maxCSOCode);
        o.setCode(csOCode);
        // set csOCode
        pstmt.setString(2, csOCode);
        // set dDate
        pstmt.setDate(3, DateUtil.getSqlDateFormUtilDate(o.getOrderDate()));
        // set cBusType
        pstmt.setString(4, o.getBusinessType());
        // set cCusCode
        pstmt.setString(5, o.getC().getId());
        // set cCusName
        pstmt.setString(6, o.getC().getName());
        // set cDepCode
        pstmt.setString(7, o.getP().getDept().getId());
        // set cPersonCode
        // pstmt.setString(8, o.getP().getId());
        // set cSTCode
        // pstmt.setString(9, o.getSaleType().getId());
        pstmt.setString(8, o.getSaleType().getId());
        // set iVTid
        // pstmt.setInt(10, o.getiVtid());
        pstmt.setInt(9, o.getiVtid());
        // set cMaker
        // pstmt.setString(11, o.getP().getName());
        pstmt.setString(10, o.getP().getName());
        // set cMemo
        // pstmt.setString(12, o.getRemark());
        pstmt.setString(11, o.getRemark());
        pstmt.executeUpdate();
        // ����OrderDetails��
        pstmt.clearParameters();
        pstmt = conn.prepareStatement(sqlDetail);
        ArrayList<OrderDetail> ods = o.getOds();
        long iSOsID = getiSOsID(conn, pstmt, rs);
        for (OrderDetail od : ods) {
            // setID
            pstmt.setLong(1, maxId);
            // set csOCode
            pstmt.setString(2, csOCode);
            // set cInvCode
            pstmt.setString(3, od.getInventory().getId());
            // set cInvName
            pstmt.setString(4, od.getInventory().getName());
            // set iNum
            pstmt.setInt(5, od.getPiece());
            // set iQuantity
            pstmt.setBigDecimal(6, od.getCount());
            // set iTaxUnitPrice
            pstmt.setBigDecimal(7, od.getPrice());
            // set iSum
            pstmt.setBigDecimal(8, od.getSum());
            // set dPreDate
            pstmt.setDate(9, DateUtil.getSqlDateFormUtilDate(od.getSendDate()));
            // set iSOsID
            pstmt.setLong(10, ++iSOsID);
            // set cFree1 packing
            pstmt.setString(11, od.getPacking().getcValue());
            // set cUnitID
            pstmt.setString(12, od.getInventory().getSAComUnitCode());
            // ����OrderDetail
            pstmt.executeUpdate();
            pstmt.clearParameters();
        }
        conn.commit();
    } catch (SQLException sqle) {
        try {
            conn.rollback();
            throw new AppException(sqle.getMessage());
        } catch (SQLException ex) {
            Logger.getLogger(OrderDAO.class.getName()).log(Level.SEVERE, null, ex);
            throw new AppException(ex.getMessage());
        }
    } finally {
        DBUtils.closeAll(rs, pstmt, conn);
    }
}
