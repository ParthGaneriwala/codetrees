// Constructors
// ////////////////////////////////
// External signature methods
// ////////////////////////////////
public void setUp() {
    OntDocumentManager.getInstance().reset();
    OntDocumentManager.getInstance().clearCache();
    mNoInf = ModelFactory.createOntologyModel(OntModelSpec.OWL_MEM);
    mNoInf.read("file:testing/ontology/owl/list-syntax/test-ldp.rdf");
    // mInf = ModelFactory.createOntologyModel( OntModelSpec.OWL_MEM_RULE_INF );
    mInf = ModelFactory.createOntologyModel(OntModelSpec.OWL_MEM_MICRO_RULE_INF);
    mInf.read("file:testing/ontology/owl/list-syntax/test-ldp.rdf");
    infA = mInf.getOntClass(NS + "A");
    infB = mInf.getOntClass(NS + "B");
    infC = mInf.getOntClass(NS + "C");
    noinfA = mNoInf.getOntClass(NS + "A");
    noinfB = mNoInf.getOntClass(NS + "B");
    noinfC = mNoInf.getOntClass(NS + "C");
    noinfG = mNoInf.getObjectProperty(NS + "global");
    infG = mInf.getObjectProperty(NS + "global");
    noinfPa = mNoInf.getObjectProperty(NS + "pA");
    noinfPb = mNoInf.getObjectProperty(NS + "pB");
    noinfPc = mNoInf.getObjectProperty(NS + "pC");
    infPa = mInf.getObjectProperty(NS + "pA");
    infPb = mInf.getObjectProperty(NS + "pB");
    infPc = mInf.getObjectProperty(NS + "pC");
    noinfQa = mNoInf.getObjectProperty(NS + "qA");
    noinfQb = mNoInf.getObjectProperty(NS + "qB");
    infQa = mInf.getObjectProperty(NS + "qA");
    infQb = mInf.getObjectProperty(NS + "qB");
    infAnn = mInf.getOntClass(NS + "HasAnn");
    noinfAnn = mNoInf.getOntClass(NS + "HasAnn");
    infPann = mInf.getAnnotationProperty(NS + "ann");
    noinfPann = mNoInf.getAnnotationProperty(NS + "ann");
    infUnion1 = mInf.getOntClass(NS + "Union1");
    infUnion2 = mInf.getOntClass(NS + "Union2");
    noinfUnion1 = mNoInf.getOntClass(NS + "Union1");
    noinfUnion2 = mNoInf.getOntClass(NS + "Union2");
    infPunion = mInf.getObjectProperty(NS + "unionP");
    noinfPunion = mNoInf.getObjectProperty(NS + "unionP");
    infIntersect1 = mInf.getOntClass(NS + "Intersect1");
    infIntersect2 = mInf.getOntClass(NS + "Intersect2");
    noinfIntersect1 = mNoInf.getOntClass(NS + "Intersect1");
    noinfIntersect2 = mNoInf.getOntClass(NS + "Intersect2");
    infPintersect = mInf.getObjectProperty(NS + "intersectP");
    noinfPintersect = mNoInf.getObjectProperty(NS + "intersectP");
}
