public static String criarMenu(Menu menu, HashSet<Long> hsMarcar, int level, String htmlTemplateOriginal) {
    boolean existeLi = false;
    int upLevel = level - 1;
    StringBuilder sb = new StringBuilder();
    sb.append("\n");
    String cssNameLinkMarcado = "linkMarcado";
    String cssMarcado = " class=\"" + cssNameLinkMarcado + "\"";
    List<ItemMenu> list = menu.getListItemMenu();
    // procurar o primeiro ul, se achar coloca ele ao invez do ul puro
    Pattern patUl = Pattern.compile("(<ul\\s\\s*[^>]*>)");
    Matcher mat = patUl.matcher(htmlTemplateOriginal);
    if (mat.find()) {
        sb.append(mat.group(1));
    } else {
        sb.append("<ul>\n");
    }
    if (upLevel < 1) {
        for (int i = 0; i < list.size(); i++) {
            ItemMenu itemMenu = list.get(i);
            if (itemMenu.isCoEsconder())
                continue;
            boolean marcar = hsMarcar.contains(itemMenu.getNuItemMenu());
            int objNivel = itemMenu.getNuNivel();
            if (objNivel == level) {
                if (!itemMenu.isCoEsconder()) {
                    // BugFix esconder nao estava funcionando no subnivel
                    marcar = hsMarcar.contains(itemMenu.getNuItemMenu());
                    if (existeLi) {
                        sb.append("<li");
                        if (marcar)
                            sb.append(cssMarcado);
                        sb.append(">\n");
                    } else {
                        if (marcar) {
                            sb.append("<li class=\"primeiroLi " + cssNameLinkMarcado + "\">\n");
                        } else {
                            sb.append("<li class=\"primeiroLi\">\n");
                        }
                    }
                    criarLink(itemMenu, sb, marcar, cssMarcado);
                    sb.append("</li>\n");
                    existeLi = true;
                }
            }
        }
    } else {
        for (int i = 0; i < list.size(); i++) {
            ItemMenu itemMenu = list.get(i);
            if (itemMenu.isCoEsconder())
                continue;
            boolean marcar = hsMarcar.contains(itemMenu.getNuItemMenu());
            int objNivel = itemMenu.getNuNivel();
            // procurando o objeto para comecar a montar o menu
            if (objNivel == upLevel && marcar) {
                // colocar somente do mesmo nivel
                i++;
                itemMenu = list.get(i);
                objNivel = itemMenu.getNuNivel();
                while (objNivel <= level) {
                    if (objNivel < level)
                        break;
                    if (!itemMenu.isCoEsconder()) {
                        // BugFix esconder nao estava funcionando no subnivel
                        marcar = hsMarcar.contains(itemMenu.getNuItemMenu());
                        if (existeLi) {
                            sb.append("<li");
                            if (marcar)
                                sb.append(cssMarcado);
                            sb.append(">\n");
                        } else {
                            if (marcar) {
                                sb.append("<li class=\"primeiroLi " + cssNameLinkMarcado + "\">\n");
                            } else {
                                sb.append("<li class=\"primeiroLi\">\n");
                            }
                        }
                        criarLink(itemMenu, sb, marcar, cssMarcado);
                        sb.append("</li>\n");
                        existeLi = true;
                    }
                    i++;
                    itemMenu = list.get(i);
                    objNivel = itemMenu.getNuNivel();
                }
                break;
            }
        }
    }
    sb.append("</ul>\n");
    if (!existeLi) {
        return "";
    } else {
        StringBuilder resultado = new StringBuilder(sb.toString());
        try {
            String tag = "<li>";
            int pos = resultado.lastIndexOf(tag);
            if (pos != -1)
                resultado.insert(pos + tag.length() - 1, " class=\"ultimoLi\"");
        } catch (Exception e) {
            logger.error("Erro ao inserir a classe css do ultimo li", e);
            resultado = sb;
        }
        return resultado.toString();
    }
}
