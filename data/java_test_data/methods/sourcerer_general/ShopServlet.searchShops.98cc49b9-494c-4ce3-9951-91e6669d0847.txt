private void searchShops(String searchType, HttpServletRequest req, HttpServletResponse resp) throws IOException {
    String searchKey = req.getParameter("searchKey");
    String eastingStr = req.getParameter("easting");
    String northingStr = req.getParameter("northing");
    Object[] result = null;
    if (searchKey != null) {
        result = searchByKey(searchType, req, resp, searchKey);
    } else if (eastingStr != null && northingStr != null) {
        result = searchByLoc(searchType, req, resp, Integer.parseInt(eastingStr), Integer.parseInt(northingStr));
    }
    if (result != null) {
        Integer resultCount = (Integer) result[0];
        Shop[] resultShops = (Shop[]) result[1];
        JSONObject resultJsonObj = new JSONObject();
        JSONArray array = new JSONArray();
        for (Shop s : resultShops) {
            JSONObject jsonObj = new JSONObject();
            try {
                jsonObj.put("id", s.getShopId());
                jsonObj.put("name", s.getTitle());
                jsonObj.put("imgSrc", s.getShopImg());
                jsonObj.put("tel", s.getTel());
                jsonObj.put("street", s.getStreet());
                if (s.getDistanceFromUser() != null) {
                    jsonObj.put("distance", s.getDistanceFromUser().doubleValue());
                }
                array.put(jsonObj);
            } catch (JSONException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
        try {
            if (resultCount != null) {
                resultJsonObj.put("total", resultCount);
            }
            resultJsonObj.put("shops", array);
            resp.getWriter().write(resultJsonObj.toString());
        } catch (JSONException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
}
