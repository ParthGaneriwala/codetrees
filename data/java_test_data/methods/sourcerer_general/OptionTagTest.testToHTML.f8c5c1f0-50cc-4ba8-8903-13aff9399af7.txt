public void testToHTML() throws ParserException {
    for (int j = 0; j < nodeCount; j++) {
        assertTrue("Node " + j + " should be Option Tag", node[j] instanceof OptionTag);
    // System.out.println(node[j].getClass().getName());
    // System.out.println(node[j].toHtml());
    }
    OptionTag OptionTag;
    OptionTag = (OptionTag) node[0];
    assertStringEquals("HTML String", option1, OptionTag.toHtml());
    OptionTag = (OptionTag) node[1];
    assertStringEquals("HTML String", option2 + "</OPTION>", OptionTag.toHtml());
    OptionTag = (OptionTag) node[2];
    assertStringEquals("HTML String", option3, OptionTag.toHtml());
    OptionTag = (OptionTag) node[3];
    assertStringEquals("HTML String", option4, OptionTag.toHtml());
    OptionTag = (OptionTag) node[4];
    assertStringEquals("HTML String", option5, OptionTag.toHtml());
    OptionTag = (OptionTag) node[5];
    assertStringEquals("HTML String", option6 + "</OPTION>", OptionTag.toHtml());
    OptionTag = (OptionTag) node[6];
    assertStringEquals("HTML String", option7, OptionTag.toHtml());
    OptionTag = (OptionTag) node[7];
    assertStringEquals("HTML String", option8, OptionTag.toHtml());
    OptionTag = (OptionTag) node[8];
    assertStringEquals("HTML String", option9, OptionTag.toHtml());
    OptionTag = (OptionTag) node[9];
    assertStringEquals("HTML String", option10 + "</OPTION>", OptionTag.toHtml());
    OptionTag = (OptionTag) node[10];
    assertStringEquals("HTML String", option11 + "</OPTION>", OptionTag.toHtml());
    OptionTag = (OptionTag) node[11];
    assertStringEquals("HTML String", option12, OptionTag.toHtml());
    OptionTag = (OptionTag) node[12];
    assertStringEquals("HTML String", option13, OptionTag.toHtml());
}
