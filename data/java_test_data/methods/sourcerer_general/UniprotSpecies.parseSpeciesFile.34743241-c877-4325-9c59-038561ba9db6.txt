private static void parseSpeciesFile() {
    UniprotSpecies entry = null;
    Pattern nLinePattern = Pattern.compile("^(\\S{3,5})\\s+(\\w)\\s+(\\d+|\\?+):\\s+N=(.+)");
    Pattern cLinePattern = Pattern.compile("^\\s+C=(.+)");
    Pattern sLinePattern = Pattern.compile("^\\s+S=(.+)");
    int lineCount = 0;
    try {
        BufferedReader fileReader = null;
        try {
            fileReader = getFileStream();
            boolean inHeader = true;
            String line;
            while ((line = fileReader.readLine()) != null) {
                lineCount++;
                if (inHeader) {
                    if (line.startsWith("_____ ")) {
                        inHeader = false;
                        continue;
                    }
                } else if (line.startsWith("--------")) {
                    // Hit the copyright at the end.
                    break;
                }
                Matcher m = nLinePattern.matcher(line);
                if (m.matches()) {
                    entry = new UniprotSpecies(m.group(1));
                    sCodeIndex.put(m.group(1), entry);
                    entry.setKingdomCode(m.group(2).charAt(0));
                    if (!m.group(3).startsWith("?")) {
                        entry.setTaxonId(Integer.parseInt(m.group(3)));
                    }
                    entry.setScientificName(m.group(4));
                } else if (entry != null) {
                    m = cLinePattern.matcher(line);
                    if (m.matches()) {
                        entry.setCommonName(m.group(1));
                    } else {
                        m = sLinePattern.matcher(line);
                        if (m.matches()) {
                            entry.setSynonym(m.group(1));
                        }
                    }
                }
            }
        } finally {
            if (fileReader != null)
                fileReader.close();
        }
    } catch (IOException e) {
        throw new RuntimeException("Error parsing species file. line: " + lineCount, e);
    }
}
