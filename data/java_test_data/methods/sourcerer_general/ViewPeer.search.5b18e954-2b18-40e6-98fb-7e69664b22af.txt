// GEN-LAST:event_jButton4ActionPerformed
public void search(ArrayList results) {
    // this.results = myOverlay.searchFileNeighbours(jTextField1.getText());
    this.results = results;
    // Create new Table Model
    String[] headers = { "Filename", "Peer", "Filesize", "MD5" };
    Vector headers1 = new Vector();
    headers1.add(headers[0]);
    headers1.add(headers[1]);
    headers1.add(headers[2]);
    headers1.add(headers[3]);
    DefaultTableModel dtm = new DefaultTableModel(headers, 0);
    Vector data = new Vector();
    // Read Arraylist into Array for Table
    Iterator it = this.results.iterator();
    while (it.hasNext()) {
        Vector dataRow = new Vector();
        SearchResult sr = ((SearchResult) it.next());
        int indexX = -1;
        boolean duplicate = false;
        for (int j = 0; j < data.size(); j++) {
            if (((Vector) data.elementAt(j)).contains(sr.getHash())) {
                indexX = j;
            }
            if (((String) ((Vector) data.elementAt(j)).elementAt(1)).contains(sr.getRemotePeer().getIP() + ":" + sr.getRemotePeer().getPort()) && ((Vector) data.elementAt(j)).contains(sr.getHash())) {
                duplicate = true;
            }
            if (sr.getRemotePeer().getIP().equals(myOverlay.getLocalAddress()) && sr.getRemotePeer().getPort() == myOverlay.getListenPort()) {
                duplicate = true;
            }
        }
        if (indexX != -1 && duplicate == false) {
            Vector tmp = new Vector();
            tmp = (Vector) data.elementAt(indexX);
            tmp.set(1, tmp.elementAt(1) + "," + sr.getRemotePeer().toString());
            System.out.println("[ViewPeer] Summarizing a duplicate");
        } else if (duplicate == false) {
            // String[] dataRow = { sr.getFilename(), sr.getRemotePeer().toString(), Long.toString(sr.getFilesize()), "" };
            dataRow.add(sr.getFilename());
            dataRow.add(sr.getRemotePeer().toString());
            dataRow.add(Long.toString(sr.getFilesize()));
            dataRow.add(sr.getHash());
            data.add(dataRow);
            System.out.println(sr.getFilename() + sr.getRemotePeer().toString());
        }
    }
    // Add Rows to Search Results Table
    for (int k = 0; k < data.size(); k++) {
        Vector tmp = new Vector();
        tmp = (Vector) data.elementAt(k);
        int no = ((String) tmp.elementAt(1)).split(",").length;
        tmp.set(1, "(" + no + ")," + (String) tmp.elementAt(1));
        dtm.addRow((Vector) data.elementAt(k));
    }
    jTable1.setModel(dtm);
    jLabel2.setText("Ready");
    jLabel2.setForeground(java.awt.Color.GREEN);
}
