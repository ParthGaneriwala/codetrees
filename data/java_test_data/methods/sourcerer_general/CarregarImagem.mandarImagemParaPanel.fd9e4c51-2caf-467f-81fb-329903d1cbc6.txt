public static BufferedImage mandarImagemParaPanel(File pArquivo, Ponto3d[][] pMatrizPontos, int pIndicadorPainel) {
    switch(pIndicadorPainel) {
        case Principal.INDICADOR_PAINEL_ESQUERDO:
            {
                larguraPanel = Principal.LARGURA_PAINEL_ESQUERDA - 10;
                alturaPanel = Principal.ALTURA_PAINEL_ESQUERDA;
            }
            break;
        case Principal.INDICADOR_PAINEL_CENTRO:
            {
                larguraPanel = Principal.LARGURA_PAINEL_CENTRO - 10;
                alturaPanel = Principal.ALTURA_PAINEL_CENTRO - 80;
            }
            break;
        // Ajustar esses valores para os viewports!
        case Principal.INDICADOR_PAINEL_DIREITO:
            {
                larguraPanel = (Principal.LARGURA_PAINEL_DIREITA - 40) / 2;
                alturaPanel = (Principal.ALTURA_PAINEL_DIREITA) / 5;
            }
            break;
    }
    try {
        BufferedImage image = null;
        Imagem imagem3d;
        if (pArquivo != null) {
            image = ImageIO.read(pArquivo);
            imagem3d = new Imagem(image);
        } else {
            imagem3d = new Imagem(pMatrizPontos);
        }
        int larguraImagem = imagem3d.w;
        int alturaImagem = imagem3d.h;
        if (pIndicadorPainel == Principal.INDICADOR_PAINEL_ESQUERDO) {
            Ponto3d p1 = new Ponto3d(imagem3d.min.getX(), imagem3d.min.getY(), 0);
            Ponto3d p2 = new Ponto3d(imagem3d.max.getX(), imagem3d.max.getY(), 0);
            imagem3d = imagem3d.recorte(imagem3d, p1, p2);
        }
        if (larguraImagem <= larguraPanel && alturaImagem <= alturaPanel) {
            escala = 1.0;
        } else {
            if (alturaImagem > alturaPanel && larguraImagem <= larguraPanel) {
                escala = ((double) alturaImagem) / ((double) alturaPanel);
            } else if (larguraImagem > larguraPanel && alturaImagem <= alturaPanel) {
                escala = ((double) larguraPanel) / ((double) larguraImagem);
            } else {
                if (Math.abs(larguraImagem - larguraPanel) > Math.abs(alturaImagem - alturaPanel)) {
                    escala = ((double) larguraPanel) / ((double) larguraImagem);
                } else {
                    escala = ((double) alturaPanel) / ((double) alturaImagem);
                }
            }
        }
        // if (larguraImagem*alturaImagem > larguraPanel*alturaPanel){
        // if (Math.abs(larguraImagem - larguraPanel) > Math.abs(alturaImagem 	- alturaPanel)) {
        // escala = ((double)larguraPanel) / ((double)larguraImagem);
        // } else {
        // escala = ((double)alturaPanel) / ((double)alturaImagem);
        // }
        // }else {
        // escala = 1.0;
        // }
        BufferedImage image2;
        if (pIndicadorPainel == Principal.INDICADOR_PAINEL_CENTRO) {
            image2 = new BufferedImage(larguraPanel - 30, alturaPanel - 30, BufferedImage.TYPE_INT_RGB);
        } else {
            image2 = new BufferedImage((int) (larguraImagem * escala), (int) (alturaImagem * escala), BufferedImage.TYPE_INT_RGB);
        }
        // image2 = new BufferedImage((int)imagem3d.max.getX(),(int) (imagem3d.max.getY()), BufferedImage.TYPE_INT_RGB);
        imagem3d.imagem3d = imagem3d.escala(imagem3d, escala, escala, 1);
        for (int i = 0; i < imagem3d.imagem3d.length; ++i) {
            for (int j = 0; j < imagem3d.imagem3d[i].length; j++) {
                int x = imagem3d.projecao(imagem3d.imagem3d[i][j].getX(), imagem3d.imagem3d[i][j].getZ(), true);
                int y = imagem3d.projecao(imagem3d.imagem3d[i][j].getY(), imagem3d.imagem3d[i][j].getZ(), false);
                // Condi�oes nas quais os pontos n�o s�o exibidos.
                if ((x < 0) || (y < 0)) {
                    continue;
                }
                if (x >= image2.getWidth() || y >= image2.getHeight())
                    continue;
                image2.setRGB(x, y, imagem3d.imagem3d[i][j].getCor().getRGB());
            }
        }
        if (pIndicadorPainel == Principal.INDICADOR_PAINEL_CENTRO) {
            imgbCentral = image2;
        }
        return image2;
    } catch (IllegalArgumentException ilegal) {
        JOptionPane.showMessageDialog(null, "Par�metro Inv�lido", "Erro", JOptionPane.ERROR_MESSAGE);
        return null;
    } catch (IOException io) {
        JOptionPane.showMessageDialog(null, "Arquivo Nulo", "Erro", JOptionPane.ERROR_MESSAGE);
        return null;
    } catch (NullPointerException nullPointer) {
        JOptionPane.showMessageDialog(null, "NULL POINTER EXCEPTION!", "Erro", JOptionPane.ERROR_MESSAGE);
        return null;
    }
// ImageIO.write(image2, "jpeg", new File("teste.jpeg"));
}
