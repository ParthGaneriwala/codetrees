@Test
public void testSelectFromModelAfterSort() {
    ConfigTablePanel panel = new ConfigTablePanel();
    CobeanTestUtil.setComponentNamesFromPropertyNames(panel);
    ShowcaseTestFrame frame = new ShowcaseTestFrame(panel);
    FrameFixture frameFix = new FrameFixture(frame);
    try {
        frameFix.show();
        ConfigTableShowcase sc = new ConfigTableShowcase();
        sc.setService(ExamplesUtil.createTestService());
        sc.init(panel);
        final SingleSelectionModel model = sc.getModel();
        final JTableFixture tableFix = frameFix.table("booksTable");
        log.debug("\n" + CobeanTestUtil.listToString(model.getBooks()));
        // Sort
        {
            tableFix.tableHeader().clickColumn(0);
            pause(200);
        }
        // Select a book
        {
            model.setBooksSelectedValue(model.getBooks().get(3));
            final String selectionValue = tableFix.selectionValue();
            assertEquals("A Bend in the River", selectionValue);
        }
        // Select another book
        {
            model.setBooksSelectedValue(model.getBooks().get(4));
            final String selectionValue = tableFix.selectionValue();
            assertEquals("A House for Mr Bivas", selectionValue);
        }
        // Sort the other way
        {
            tableFix.tableHeader().clickColumn(0);
            pause(200);
        }
        // Select a book
        {
            model.setBooksSelectedValue(model.getBooks().get(3));
            final String selectionValue = tableFix.selectionValue();
            assertEquals("A Bend in the River", selectionValue);
        }
        // Select another book
        {
            model.setBooksSelectedValue(model.getBooks().get(4));
            final String selectionValue = tableFix.selectionValue();
            assertEquals("A House for Mr Bivas", selectionValue);
        }
    } finally {
        frameFix.cleanUp();
    }
}
