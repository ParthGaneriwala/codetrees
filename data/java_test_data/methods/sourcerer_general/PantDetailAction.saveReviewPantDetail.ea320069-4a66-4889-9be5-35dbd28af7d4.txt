public String saveReviewPantDetail() {
    System.out.println("PantDetailAction -> saveReviewPantDetail()");
    if (pantDetail.getPriceXclothes() > 0 && ((pantDetail.getQuantityFail() == 0 && pantDetail.getPriceXclotheFail() == 0) || (pantDetail.getQuantityFail() != 0 && pantDetail.getPriceXclotheFail() != 0))) {
        PantDetail pantDetailAux = pantDetailManager.get(pantDetail.getId());
        Double diffAmountTotal = (pantDetail.getPriceXclothes() * pantDetailAux.getQuantity()) - pantDetailAux.getTotalAmountClothes();
        Double diffAmountTotalFail = pantDetail.getQuantityFail() * pantDetail.getPriceXclotheFail() - pantDetailAux.getTotalAmountFailClothes();
        pantDetailAux.setPriceXclothes(pantDetail.getPriceXclothes());
        pantDetailAux.setTotalAmountClothes(pantDetail.getPriceXclothes() * pantDetailAux.getQuantity());
        pantDetailAux.setQuantityFail(pantDetail.getQuantityFail());
        pantDetailAux.setPriceXclotheFail(pantDetail.getPriceXclotheFail());
        pantDetailAux.setTotalAmountFailClothes(pantDetailAux.getQuantityFail() * pantDetailAux.getPriceXclotheFail());
        pantDetailAux.setQuantityRealClothes(pantDetailAux.getQuantity() - pantDetailAux.getQuantityFail());
        pantDetailAux.setQuantityRealClothesCurrent(pantDetailAux.getQuantity() - pantDetailAux.getQuantityFail());
        pantDetailAux.setCurrentAmount(pantDetailAux.getCurrentAmount() + diffAmountTotal);
        pantDetailAux.setTotalAmount(pantDetailAux.getTotalAmount() + diffAmountTotal);
        pantDetailAux.setDeleted(false);
        ProcessDressmaker procDressAux = pantDetailAux.getProcessDressmaker();
        procDressAux.setDeleted(false);
        procDressAux.setTotalAmount(procDressAux.getTotalAmount() + diffAmountTotal);
        procDressAux.setTotalAmountFail(procDressAux.getTotalAmountFail() + diffAmountTotalFail);
        if (procDressAux.getTotalCurrentAmount() == 0)
            procDressAux.setTotalCurrentAmount(procDressAux.getTotalAmount() - diffAmountTotalFail);
        else
            procDressAux.setTotalCurrentAmount(procDressAux.getTotalCurrentAmount() + diffAmountTotal - diffAmountTotalFail);
        BalanceEmployee balanceEmployee = procDressAux.getBalanceEmployee();
        periodPaymentEmployee = balanceEmployee.getPeriodPaymentEmployee();
        balanceEmployee.setAmountWon(balanceEmployee.getAmountWon() + diffAmountTotal);
        balanceEmployee.setBalance(periodPaymentEmployee.getCurrentAmount() + diffAmountTotal - diffAmountTotalFail);
        balanceEmployee.setAmountPaid(balanceEmployee.getAmountPaid() + diffAmountTotalFail);
        balanceEmployee.setTypeBalance(1);
        if ((balanceEmployee.getAmountPaid() + diffAmountTotalFail) > 0)
            balanceEmployee.setObservation(balanceEmployee.getAmountPaid() + " POR DESCUENTO");
        else
            balanceEmployee.setObservation("");
        periodPaymentEmployee.setCurrentAmount(periodPaymentEmployee.getCurrentAmount() + diffAmountTotal - diffAmountTotalFail);
        periodPaymentEmployee.setAmountWon(periodPaymentEmployee.getAmountWon() + diffAmountTotal);
        periodPaymentEmployee.setDiscount(periodPaymentEmployee.getDiscount() + diffAmountTotalFail);
        periodPaymentEmployeeManager.save(periodPaymentEmployee);
        balanceEmployeeManager.save(balanceEmployee);
        processDressmakerManager.save(procDressAux);
        // seamStorageManager.save(seamStorage);
        pantDetailManager.save(pantDetailAux);
    }
    System.out.println("PantDetailAction ->  end saveReviewPantDetail()");
    return INPUT;
}
