public void visualize(HashMap<String, List<Pattern>> clusteredPatterns, boolean annotate) {
    XYSeriesCollection seriesCollection = new XYSeriesCollection();
    HashMap<String, XYSeries> clusterSerieses = new HashMap<String, XYSeries>();
    Iterator<String> clusterItr = clusteredPatterns.keySet().iterator();
    while (clusterItr.hasNext()) {
        String clusterLabel = clusterItr.next();
        XYSeries series = new XYSeries(clusterLabel);
        List<Pattern> classPatterns = clusteredPatterns.get(clusterLabel);
        Iterator<Pattern> classPatternItr = classPatterns.iterator();
        while (classPatternItr.hasNext()) {
            Pattern classPattern = classPatternItr.next();
            Matrix patternFeatures = classPattern.getFeatureVector();
            double x = patternFeatures.get(0, 0);
            double y = patternFeatures.get(0, 1);
            series.add(x, y);
        }
        clusterSerieses.put(clusterLabel, series);
    }
    clusterItr = clusterSerieses.keySet().iterator();
    while (clusterItr.hasNext()) {
        String classLabel = clusterItr.next();
        seriesCollection.addSeries(clusterSerieses.get(classLabel));
    }
    XYDataset dataset = seriesCollection;
    JFreeChart chart = createChart(dataset);
    ChartPanel panel = new ChartPanel(chart, true);
    setContentPane(panel);
    pack();
    RefineryUtilities.centerFrameOnScreen(this);
    setVisible(true);
}
