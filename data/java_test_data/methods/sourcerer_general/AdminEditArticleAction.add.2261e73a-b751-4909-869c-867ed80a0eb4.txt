public ActionForward add(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
    ArticleInfoForm articleInfoForm = (ArticleInfoForm) form;
    String returnUrl = request.getParameter("returnUrl");
    java.text.SimpleDateFormat formatter = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    // System.out.println(returnUrl);
    UcMembers user = (UcMembers) request.getSession().getAttribute("ADMIN");
    Article a = new Article();
    try {
        System.out.println(" Maintypeid = " + articleInfoForm.getMaintypeid());
        System.out.println(" Typeid	    = " + articleInfoForm.getTypeid());
        if (articleListManager.verifyTitle(articleInfoForm.getTitle().trim())) {
            ArticleContent content = new ArticleContent();
            content.setContent(articleInfoForm.getContent());
            a.setIsdelete("N");
            a.setUserid(user.getUid());
            a.setUsername(user.getUsername());
            a.setUserip(request.getLocalAddr());
            a.setArticleContent(content);
            a.setPubdate(formatter.parse(articleInfoForm.getPubdate()));
            a.setLastpost(new Date());
            a.setTitle(articleInfoForm.getTitle());
            a.setArticleContent(content);
            a.setClick(0);
            a.setIscommend(new Short("0"));
            a.setIsverify(new Short("0"));
            a.setDigg(0);
            if (articleInfoForm.getIscommend() != null)
                a.setIscommend(articleInfoForm.getIscommend());
            if (articleInfoForm.getIsverify() != null)
                a.setIsverify(articleInfoForm.getIsverify());
            if (articleInfoForm.getMaintypeid() != null) {
                ArticleType at = articleTypeManager.getArticleType(articleInfoForm.getMaintypeid());
                a.setArticleType(at);
            }
            if (articleInfoForm.getTypeid() != null) {
                ArticleType at = articleTypeManager.getArticleType(articleInfoForm.getTypeid());
                a.setArticleType2(at);
            }
            if (articleInfoForm.getShorttitle() != null && articleInfoForm.getShorttitle().length() > 0) {
                a.setShorttitle(articleInfoForm.getShorttitle());
            }
            if (articleInfoForm.getShorttitle() == null || articleInfoForm.getShorttitle().length() == 0) {
                String shorttitle = (articleInfoForm.getTitle().length() > 40) ? articleInfoForm.getTitle().substring(0, 39) : articleInfoForm.getTitle();
                a.setShorttitle(shorttitle);
            }
            if (articleInfoForm.getSource() != null && articleInfoForm.getSource().length() > 0) {
                a.setSource(articleInfoForm.getSource());
            }
            if (articleInfoForm.getWriter() != null && articleInfoForm.getWriter().length() > 0) {
                a.setWriter(articleInfoForm.getWriter());
            }
            if (articleInfoForm.getDescription() != null && articleInfoForm.getDescription().length() > 0) {
                a.setDescription(articleInfoForm.getDescription());
            }
            if (articleInfoForm.getLikeid() != null && articleInfoForm.getLikeid().length() > 0) {
                a.setLikeid(articleInfoForm.getLikeid());
            }
            if (articleInfoForm.getColor() != null && articleInfoForm.getColor().length() > 0) {
                a.setColor(articleInfoForm.getColor());
            }
            a.setKeywords(articleInfoForm.getKeywords());
            System.out.println(articleInfoForm.getLitpictype());
            if (articleInfoForm.getLitpictype() == 2) {
                // �����ϴ�
                System.out.println(articleInfoForm.getLocallitpic() != null);
                if (articleInfoForm.getLocallitpic() != null) {
                    FormFile file = articleInfoForm.getLocallitpic();
                    System.out.println(file.getFileSize());
                    System.out.println(file.getFileName().substring(file.getFileName().lastIndexOf(".")));
                    String ext = "";
                    if (file.getFileSize() > 0 && file.getFileSize() <= 3000000) {
                        ext = file.getFileName().substring(file.getFileName().lastIndexOf("."));
                        if (ext.toLowerCase().equals(".jpg") || ext.toLowerCase().equals(".gif") || ext.toLowerCase().equals(".png") || ext.toLowerCase().equals(".jpeg")) {
                            String litpic = UploadFile.upload(file, request, "UploadFile/article", 400, 400);
                            System.out.println(litpic);
                            a.setLitpic(litpic);
                            FileAccess.Copy(request.getRealPath("/") + litpic, Constant.APPSERV_VIRTUAL_ADDRESS + "\\" + litpic);
                        } else {
                            request.setAttribute("FAIL_MESSAGE", "ֻ���ϴ�jpeg,jpg,gif,png����ͼƬ!");
                            return mapping.findForward("fail");
                        }
                    } else {
                        request.setAttribute("FAIL_MESSAGE", "�ϴ���ͼƬ���󣬲��ܴ���3M!");
                        return mapping.findForward("fail");
                    }
                }
            } else {
                if (articleInfoForm.getLitpicurl() != null && articleInfoForm.getLitpicurl().length() > 0) {
                    a.setLitpic(articleInfoForm.getLitpicurl());
                }
                if (articleInfoForm.getLitpicurl2() != null && articleInfoForm.getLitpicurl2().length() > 0) {
                    a.setLitpic(articleInfoForm.getLitpicurl2());
                }
            }
            content.setArticle(a);
            articleListManager.addArticle(a);
            articleListManager.addArticleContent(content);
        } else {
            request.setAttribute("FAIL_MESSAGE", "ϵͳ���ں͸ñ����ͬ�����¡�");
            return mapping.findForward("fail");
        }
        // ���ɾ�̬ҳ��
        /*boolean flag = ToHtml.toHtml(Constant.FORBES_URL + "/article/ArticleView.do?id="+a.getId(),
					request.getRealPath("/") + "article" + "/" + a.getId() + ".html", "gbk", "gbk");*/
        boolean txtFlag = ToHtml.toTxt(articleInfoForm.getContent(), request.getRealPath("/") + "article/txt/" + a.getId() + ".txt", "gbk");
        request.setAttribute("OK_MESSAGE", "�ɹ��������£�");
        request.setAttribute("RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]"));
        return mapping.findForward("ok");
    } catch (Exception e) {
        e.printStackTrace();
        request.setAttribute("FAIL_MESSAGE", "ϵͳ�������Ժ����ԡ�");
        return mapping.findForward("fail");
    }
}
