/**
 * Thread method to start reading input from the other player and split it
 * to know the other player's name, then starts receiving and sending chat messages.
 */
public void run() {
    if (PLAYER == 2) {
        ChatPanelServer.initiateServer();
    }
    while (true) {
        try {
            InetAddress ia = socket.getInetAddress();
            // playing mp3 file
            File filename = new File("src/sounds/receive.mp3");
            MP3 mp3 = new MP3(filename);
            mp3.play();
            if (splitOnce == true) {
                // getting an empty message from the server to discover the server's name
                String str = in.readLine();
                String[] splitted = str.split(":");
                if (PLAYER == 1) {
                    serverName = splitted[0];
                    Drawing.serverPlayer.setText(serverName);
                } else if (PLAYER == 2) {
                    clientName = splitted[0];
                    if (Server.nameFieldStatus == true) {
                        writeName(Server.serverName);
                    }
                }
                splitOnce = false;
                isSplitted = true;
                sentAndReceiveName();
            } else {
                printString = in.readLine() + "\n";
                printText();
            }
        } catch (IOException e) {
            // playing mp3 file
            File filename = new File("src/sounds/alert.mp3");
            MP3 mp3 = new MP3(filename);
            mp3.play();
            Drawing.cleanUp();
            System.exit(1);
        }
    }
}
