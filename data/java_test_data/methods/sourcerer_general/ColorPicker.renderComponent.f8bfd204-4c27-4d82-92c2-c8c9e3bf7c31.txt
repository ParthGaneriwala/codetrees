// documentation inherited
@Override
protected void renderComponent(Renderer renderer) {
    renderer.setTextureState(null);
    // render the swatches
    Insets insets = getInsets();
    int x = insets.left, y = insets.bottom;
    GL11.glBegin(GL11.GL_QUADS);
    for (int ii = 0; ii < _colors.length; ii++) {
        Color4f color = _colorizedRoots[ii];
        if (_starters && !_colors[ii].starter) {
            GL11.glColor4f(0.25f * _alpha, 0.25f * _alpha, 0.25f * _alpha, _alpha);
        } else {
            GL11.glColor4f(color.r * _alpha, color.g * _alpha, color.b * _alpha, color.a * _alpha);
        }
        GL11.glVertex2f(x, y);
        GL11.glVertex2f(x + _swatchWidth, y);
        GL11.glVertex2f(x + _swatchWidth, y + _swatchHeight);
        GL11.glVertex2f(x, y + _swatchHeight);
        x += _swatchWidth;
    }
    GL11.glEnd();
    // outline the selected swatch
    x = insets.left + (_sidx * _swatchWidth);
    GL11.glLineWidth(2f);
    GL11.glBegin(GL11.GL_LINE_LOOP);
    GL11.glColor4f(_alpha, _alpha, _alpha, _alpha);
    GL11.glVertex2f(x, y);
    GL11.glVertex2f(x + _swatchWidth, y);
    GL11.glVertex2f(x + _swatchWidth, y + _swatchHeight);
    GL11.glVertex2f(x, y + _swatchHeight);
    GL11.glEnd();
    GL11.glLineWidth(1f);
    renderer.invalidateColorState();
}
