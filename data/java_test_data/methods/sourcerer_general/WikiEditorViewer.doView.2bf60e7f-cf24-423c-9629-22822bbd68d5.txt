public String doView(RenderRequest request, RenderResponse response) throws Exception {
    // The JSP to show upon success
    String defaultView = WYSIWYG_VIEW_PAGE;
    ApplicationPrefs prefs = PortalUtils.getApplicationPrefs(request);
    // General Display Preferences
    request.setAttribute(TITLE, request.getPreferences().getValue(PREF_TITLE, "Wiki"));
    // Determine the project container to use
    Project project = findProject(request);
    // Check the user's permissions
    User user = PortalUtils.getUser(request);
    if (!ProjectUtils.hasAccess(project.getId(), user, "project-wiki-add")) {
        throw new PortletException("Unauthorized to add in this project");
    }
    // Determine the record to show
    String subject = PortalUtils.getPageView(request);
    // Get request parameters
    String mode = request.getParameter("mode");
    String sectionId = request.getParameter("section");
    String formId = request.getParameter("form");
    String templateId = request.getParameter("template");
    // Load the record
    Connection db = useConnection(request);
    Wiki wiki = WikiList.queryBySubject(db, subject, project.getId());
    // Determine if a template is requested
    if (!StringUtils.hasText(wiki.getContent()) && templateId != null && !"-1".equals(templateId)) {
        WikiTemplate template = new WikiTemplate(db, Integer.parseInt(templateId));
        if (template.getEnabled() && template.getProjectCategoryId() == project.getCategoryId() && StringUtils.hasText(template.getContent())) {
            wiki.setContent(template.getContent());
        }
    }
    request.setAttribute(WIKI, wiki);
    // Load wiki image library dimensions (@todo cache)
    HashMap<String, ImageInfo> imageList = WikiUtils.buildImageInfo(db, project.getId());
    request.setAttribute(WIKI_IMAGE_LIST, imageList);
    // Create a wiki context to manage sections and forms being edited
    // @note the context is used instead of the full URL
    WikiToHTMLContext wikiContext = new WikiToHTMLContext(wiki, imageList, user.getId(), true, request.getContextPath());
    // Determine the wiki editor to use
    if ("raw".equals(mode)) {
        defaultView = MARKUP_VIEW_PAGE;
    }
    if (sectionId != null) {
        // Render just the section requested
        wikiContext.setEditSectionId(sectionId);
    } else {
        // Render just the html portions and not the form
        wikiContext.setEditSectionId(0);
    }
    if (formId != null) {
        // Render just the form (this overrides the section)
        wikiContext.setEditFormId(formId);
        defaultView = WIKI_FORM_VIEW_PAGE;
    }
    // Convert the wiki to HTML
    String wikiHtml = WikiToHTMLUtils.getHTML(wikiContext, db);
    request.setAttribute(WIKI_HTML, wikiHtml);
    // JSP view
    return defaultView;
}
