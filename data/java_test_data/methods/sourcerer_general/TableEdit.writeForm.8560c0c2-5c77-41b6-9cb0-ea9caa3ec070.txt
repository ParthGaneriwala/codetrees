public String writeForm() {
    StringBuilder retorno = new StringBuilder();
    retorno.append("<form action=\"" + formAction + "\" method=\"post\" onsubmit=\"submitForm();\">\n");
    retorno.append("<div class=\"" + TableEdit.CSS_PREFIX + "_Form\">\n");
    retorno.append("<input type=\"hidden\" name=\"isPosted\" value=\"s\" />\n");
    retorno.append("<span class=\"" + TableEdit.CSS_PREFIX + "_msg\">" + this.getMessage() + "</span>\n");
    try {
        // 
        for (TableToHtml tabela : arrTabelaToWrite) {
            if (tabela.toAdd && !tabela.toView) {
                if (this.getTableControl() != null) {
                    this.getTableControl().configToInsert(this);
                }
                retorno.append("<input type=\"hidden\" name=\"toAdd\" value=\"s\" />\n");
                retorno.append(FormFactory.criaVertical(tabela, btnExtra));
            } else if (tabela.toUpd && !tabela.toView) {
                retorno.append("<input type=\"hidden\" name=\"toAdd\" value=\"s\" />\n");
                retorno.append(FormFactory.criaVerticalUpdSingle(tabela, btnExtra));
            } else {
                /*
					 * ï¿½ para listar o conteudo da tabela
					 */
                if (this.getTableControl() != null) {
                    this.getTableControl().configToSelect(this);
                }
                Connection con = null;
                try {
                    con = getConnection();
                    ListHtmlFactory listFac = new ListHtmlFactory(con);
                    retorno.append(listFac.createList(tabela));
                } catch (Exception e) {
                    logger.error("Erro ao listar a " + tabela);
                } finally {
                    try {
                        if (con != null) {
                            logger.debug("Fechando conexao");
                            con.close();
                        }
                    } catch (Exception e) {
                    }
                }
            }
        }
    } catch (Exception e) {
        logger.error("Erro inesperado ao escrever formulario", e);
    }
    /*
		 * Coloca os campos hidden 
		 */
    for (String inputStr : arrHidden) {
        retorno.append(inputStr);
        retorno.append("\n");
    }
    retorno.append("</div></form>");
    return retorno.toString();
}
