private static void processImage(StringBuffer sb, Node n, Element element, String appendToCRLF, String contextPath, int projectId, String link, String title) {
    // if image ends in -th, then this is in thumbnail mode
    String src = element.getAttribute("src");
    String classAttr = element.getAttribute("class");
    // vertical-align: text-bottom; margin: 3px; border: 3px solid black;
    String style = element.getAttribute("style");
    // displays while loading, or if cannot load (defaults to image name on conversion)
    // String alt = element.getAttribute("alt");
    // Construct the wiki markup
    sb.append("[[Image:");
    // Determine if local or remote
    if (!src.contains(".do?command=Img") && !src.contains("/wiki-image/") && (src.startsWith("http://") || src.startsWith("https://"))) {
        // External images url
        sb.append(StringUtils.fromHtmlValue(src));
    } else {
        // Local images link
        URLControllerBean url = new URLControllerBean(src, contextPath);
        String subject = StringUtils.jsUnEscape(url.getObjectValue());
        subject = StringUtils.replace(subject, "+", " ");
        subject = StringUtils.replace(subject, "[", "\\{");
        subject = StringUtils.replace(subject, "]", "\\}");
        sb.append(subject);
    }
    // frame
    if (classAttr != null && classAttr.contains("wikiFrame") || StringUtils.hasText(title)) {
        sb.append("|frame");
    }
    // thumbnail
    if ("true".equals(extract("th", src))) {
        sb.append("|thumb");
    }
    // position
    if (style != null) {
        if (style.contains("float: right") || style.contains("float:right")) {
            sb.append("|right");
        } else if (style.contains("float: left") || style.contains("float:left")) {
            sb.append("|left");
        } else if (style.contains("block")) {
            sb.append("|center");
        }
    }
    // caption (but not for links)
    if (StringUtils.hasText(title)) {
        sb.append("|").append(StringUtils.fromHtmlValue(title));
    }
    // @note link= must be last!
    if (link != null) {
        sb.append("|link=").append(link);
    }
    // Close the markup
    sb.append("]]");
    // for consistency
    if ((!StringUtils.hasText(title) && hasParentNodeType(n, "div") && !hasParentNodeType(n, "p"))) {
        LOG.trace("CRLF");
        LOG.trace("CRLF");
        sb.append(CRLF + appendToCRLF);
        sb.append(CRLF + appendToCRLF);
    }
}
