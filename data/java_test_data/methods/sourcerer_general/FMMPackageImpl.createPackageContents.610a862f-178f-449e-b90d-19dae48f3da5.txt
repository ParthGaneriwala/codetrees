public void createPackageContents() {
    if (isCreated)
        return;
    isCreated = true;
    // Create classes and their features
    fStructureEClass = createEClass(FSTRUCTURE);
    createEAttribute(fStructureEClass, FSTRUCTURE__STRUCTURE_ID);
    createEReference(fStructureEClass, FSTRUCTURE__SEMANTIC_LINK);
    fDeclarableEClass = createEClass(FDECLARABLE);
    fInstantiableEClass = createEClass(FINSTANTIABLE);
    fSemanticLinkEClass = createEClass(FSEMANTIC_LINK);
    fStructuralSemanticLinkEClass = createEClass(FSTRUCTURAL_SEMANTIC_LINK);
    createEReference(fStructuralSemanticLinkEClass, FSTRUCTURAL_SEMANTIC_LINK__SOURCE_REFERENCE);
    fStructureDeclarationEClass = createEClass(FSTRUCTURE_DECLARATION);
    fStructureInstantiationEClass = createEClass(FSTRUCTURE_INSTANTIATION);
    fSourceReferenceEClass = createEClass(FSOURCE_REFERENCE);
    createEAttribute(fSourceReferenceEClass, FSOURCE_REFERENCE__OFFSET);
    createEAttribute(fSourceReferenceEClass, FSOURCE_REFERENCE__LENGTH);
    fPatternEClass = createEClass(FPATTERN);
    createEAttribute(fPatternEClass, FPATTERN__NAME);
    createEReference(fPatternEClass, FPATTERN__ROLE);
    fRoleEClass = createEClass(FROLE);
    createEReference(fRoleEClass, FROLE__PLAYED_BY);
    createEAttribute(fRoleEClass, FROLE__MIN_CARDINALITY);
    createEAttribute(fRoleEClass, FROLE__MAX_CARDINALITY);
    createEReference(fRoleEClass, FROLE__COLLABORATOR);
    fFrameworkEClass = createEClass(FFRAMEWORK);
    createEReference(fFrameworkEClass, FFRAMEWORK__STRUCTURE);
    createEReference(fFrameworkEClass, FFRAMEWORK__SEMANTIC_LINK);
}
