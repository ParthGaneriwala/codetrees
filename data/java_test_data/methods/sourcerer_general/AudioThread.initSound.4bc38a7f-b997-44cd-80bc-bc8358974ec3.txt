private boolean initSound() {
    convertedBuffer = new byte[CONVERTED_BUFFER_SIZE];
    jorbisDspState.synthesis_init(jorbisInfo);
    jorbisBlock.init(jorbisDspState);
    int channels = jorbisInfo.channels;
    int rate = jorbisInfo.rate;
    AudioFormat format = new AudioFormat((float) rate, 16, channels, true, false);
    DataLine.Info info = new DataLine.Info(SourceDataLine.class, format, AudioSystem.NOT_SPECIFIED);
    // hack to get pan to work (selects java sound mixer over direct audio.... if it fails
    // it chooses the default mixer)
    Mixer.Info[] mixerInfo = AudioSystem.getMixerInfo();
    Mixer mixer = null;
    for (int j = 0; j < mixerInfo.length; j++) {
        if (mixerInfo[j].getName().contains("Java Sound")) {
            mixer = AudioSystem.getMixer(mixerInfo[j]);
            break;
        }
    }
    if (mixer == null) {
        mixer = AudioSystem.getMixer(null);
    }
    if (!mixer.isLineSupported(info)) {
        System.err.println("Audio output line not supported");
        return false;
    }
    try {
        sdLine = (SourceDataLine) mixer.getLine(info);
        sdLine.open(format);
    } catch (LineUnavailableException e) {
        System.err.println(e);
        return false;
    } catch (IllegalStateException e) {
        System.err.println(e);
        return false;
    } catch (SecurityException e) {
        System.err.println(e);
        return false;
    }
    if (sdLine.isControlSupported(FloatControl.Type.PAN)) {
        FloatControl sdLinePan = (FloatControl) sdLine.getControl(FloatControl.Type.PAN);
        sdLinePan.setValue(audio.getPan());
    }
    if (sdLine.isControlSupported(FloatControl.Type.MASTER_GAIN)) {
        FloatControl sdLineVol = (FloatControl) sdLine.getControl(FloatControl.Type.MASTER_GAIN);
        sdLineVol.setValue(audio.getGain());
    }
    sdLine.start();
    pcmInfo = new float[1][][];
    pcmIndex = new int[jorbisInfo.channels];
    return true;
}
