/*
	 * Generated Methods
	 */
public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
    // TODO Auto-generated method stub
    RegistrationForm RF = (RegistrationForm) form;
    System.out.println("REQUEST RECEIVED");
    String firstname = RF.getFirstName();
    String lastname = RF.getLastName();
    String email = RF.getEmail();
    String username = RF.getUserName();
    String password = RF.getPassword1();
    int age = RF.getAge();
    String profession = RF.getProfession();
    String street = RF.getStreet();
    String city = RF.getCity();
    String state = RF.getState();
    int zip = RF.getZip();
    String SuccessfulQuery = "";
    response.setHeader("Pragma", "no-cache");
    response.setHeader("Cache-Control", "no-cache");
    response.setHeader("Cache-Control", "no-store");
    response.setDateHeader("Expires", System.currentTimeMillis());
    try {
        String checkUserName = "select count(*) as count from users where userID=\"" + username + "\"";
        DataAccessObject CheckUserName = new DataAccessObject(checkUserName, true);
        if (!CheckUserName.Verify()) {
            System.out.println("STEP 1");
            String insertQuery = "INSERT INTO users (userID,password,FirstName,LastName,LastVisitTime,Age,Profession) VALUES ('" + username + "','" + password + "','" + firstname + "','" + lastname + "',NOW(),'" + age + "','" + profession + "')";
            String insertAddressQuery = "INSERT INTO address (addressID,Street,City,State,Zip) VALUES ('" + username + "','" + street + "','" + city + "','" + state + "','" + zip + "')";
            String insertHasAddressQuery = "INSERT INTO has_address (userID,addressID) VALUES ('" + username + "','" + username + "')";
            DataAccessObject Register = new DataAccessObject(insertQuery, true);
            SuccessfulQuery = "insertQuery";
            if (Register.execute()) {
                Register = new DataAccessObject(insertAddressQuery, true);
                System.out.println("STEP 2");
                SuccessfulQuery = "insertAddressQuery";
                if (Register.execute()) {
                    Register = new DataAccessObject(insertHasAddressQuery, true);
                    System.out.println("STEP 3");
                    SuccessfulQuery = "insertHasAddressQuery";
                    if (Register.execute()) {
                        SuccessfulQuery = "insertHasAddressQuery";
                        System.out.println("STEP 4");
                        request.setAttribute("RegistrationResult", "Successful");
                        return mapping.findForward("registered");
                    }
                }
            }
        }
        System.out.println(SuccessfulQuery);
        request.setAttribute("RegistrationResult", "Failed");
        return mapping.findForward("RegistrationFailed");
    } catch (Exception e) {
        e.printStackTrace();
        request.setAttribute("RegistrationResult", "Failed");
        return mapping.findForward("RegistrationFailed");
    }
}
