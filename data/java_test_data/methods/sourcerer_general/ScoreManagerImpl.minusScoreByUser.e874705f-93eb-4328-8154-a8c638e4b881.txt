public boolean minusScoreByUser(String objectId, String userId, String accountType, int amount, String remark) {
    System.out.println(" minus account ");
    UserAccount account = getUserAccount(userId, accountType);
    System.out.println(" account id = " + account.getId());
    if (account == null || amount > (account.getBalance() + account.getPresentBalance())) {
        return false;
    }
    int bamount = 0;
    int presenAmount = 0;
    if (amount > account.getPresentBalance()) {
        presenAmount = account.getPresentBalance();
        bamount = amount - presenAmount;
        account.setPresentBalance(0);
        account.setBalance(account.getBalance() - bamount);
    } else {
        presenAmount = amount;
        account.setPresentBalance(account.getPresentBalance() - amount);
    }
    userAccountDAO.save(account);
    UserScoreLog log = new UserScoreLog();
    if (objectId != null && objectId.length() > 0)
        log.setObjectId(Long.parseLong(objectId));
    log.setAmount(bamount * -1);
    log.setBalance(account.getBalance());
    log.setPresentAmount(presenAmount * -1);
    log.setPresentBalance(account.getPresentBalance());
    log.setStatus((short) 1);
    log.setGenDate(Calendar.getInstance().getTime());
    log.setRemark(remark);
    log.setUserId(new Long(userId));
    userScoreLogDAO.save(log);
    checkUserLevel(userId);
    return true;
}
