public Collection readByConestAndUsername(String contestId, String username) {
    Connection con = null;
    PreparedStatement pstm = null;
    try {
        con = DatabaseUtil.getConnection();
        pstm = con.prepareStatement(SQL_READ_BY_CONTEST_AND_USERNAME);
        pstm.setString(1, contestId);
        pstm.setString(2, username);
        // execute command
        ResultSet rs = pstm.executeQuery();
        RecipeDTO recipeDTO = null;
        ArrayList<RecipeDTO> listRecipe = new ArrayList<RecipeDTO>();
        while (rs.next()) {
            recipeDTO = new RecipeDTO();
            recipeDTO.setRecipeID(rs.getString(1));
            // set Post Id
            PostDTO postDTO = new PostDTO();
            postDTO.setPostID(rs.getString(2));
            // set Category id
            CategoryRecipeDTO category = new CategoryRecipeDTO();
            category.setCategoryID(rs.getString(3));
            recipeDTO.setCategory(category);
            // reicpe
            recipeDTO.setIngredient(rs.getString(4));
            recipeDTO.setCookingProcedure(rs.getString(5));
            recipeDTO.setImagePath(rs.getString(6));
            // set username
            UserProfileDTO user = new UserProfileDTO();
            user.setUsername(rs.getString(7));
            postDTO.setUserProfile(user);
            // post
            postDTO.setPostTitle(rs.getString(8));
            postDTO.setUploadDate(Util.getDMYandTime(rs.getString(9)));
            postDTO.setFree(rs.getBoolean(10));
            postDTO.setPostType(rs.getString(11));
            // set post in recipe
            recipeDTO.setPost(postDTO);
            listRecipe.add(recipeDTO);
        }
        // close ResultSet
        rs.close();
        // close PreparedStatement
        pstm.close();
        return listRecipe;
    } catch (SQLException ex) {
        logger.log(Level.SEVERE, null, ex);
        return null;
    } finally {
        // close Connection
        DatabaseUtil.closeConnection(con);
    }
}
