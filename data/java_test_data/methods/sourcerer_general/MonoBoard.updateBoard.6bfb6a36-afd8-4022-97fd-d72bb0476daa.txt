public void updateBoard(String S) {
    // whee
    for (int p = 0; p < 40; p++) props[p].reset();
    StringTokenizer ST = new StringTokenizer(S);
    String owner = ST.nextToken();
    int numplay = Integer.parseInt(ST.nextToken());
    String turn = ST.nextToken();
    int pot = Integer.parseInt(ST.nextToken());
    statusText.setText(owner + "'s board" + MonoPlug.CR + "Pot: " + pot + MonoPlug.CR + "Turn: " + turn + MonoPlug.CR + MonoPlug.CR);
    PlayerData[] players = new PlayerData[numplay];
    for (int i = 0; i < numplay; i++) {
        String name = ST.nextToken();
        int cash = Integer.parseInt(ST.nextToken());
        int networth = Integer.parseInt(ST.nextToken());
        int token = Integer.parseInt(ST.nextToken());
        int loc = Integer.parseInt(ST.nextToken());
        players[i] = new PlayerData(name, cash, token, loc);
        props[loc].addVisitor(plugin.getImg(token));
        statusText.append(name + ": " + MonoPlug.CR + "cash: $" + cash + MonoPlug.CR + "networth: $" + networth + MonoPlug.CR + "token: " + MonoPlug.imgNames[token] + MonoPlug.CR + MonoPlug.CR);
    }
    // String style =
    ST.nextToken();
    while (ST.hasMoreTokens()) {
        int prop = Integer.parseInt(ST.nextToken());
        int ownerTok = Integer.parseInt(ST.nextToken());
        int houses = Integer.parseInt(ST.nextToken());
        if (ownerTok >= 0) {
            if (PropBox.OWNER_TOK)
                props[prop].setOwner(miniTok[ownerTok]);
            else
                props[prop].setOwner(findPlayerByToken(players, ownerTok).name);
            if (houses >= 0) {
                // props[prop].setMorg(false);
                props[prop].setHouses(houses);
            } else {
                props[prop].setHouses(0);
                props[prop].setMorg(true);
            }
        } else
            props[prop].setOwner("Bank");
        props[prop].repaint();
    }
    board.repaint();
}
