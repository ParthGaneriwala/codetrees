public String executeCommandList(ActionContext context) {
    if (!getUser(context).getAccessAdmin()) {
        return "PermissionError";
    }
    resetPagedListInfo(context);
    Connection db = null;
    try {
        db = getConnection(context);
        String badgeCategoryId = context.getRequest().getParameter("badgeCategoryId");
        if (!StringUtils.hasText(badgeCategoryId)) {
            badgeCategoryId = (String) context.getRequest().getAttribute("badgeCategoryId");
        }
        context.getRequest().setAttribute("badgeCategoryId", badgeCategoryId);
        // Get badge categories
        PagedListInfo adminBadgeCategoriesInfo = this.getPagedListInfo(context, "adminBadgeCategoriesInfo");
        adminBadgeCategoriesInfo.setItemsPerPage(0);
        adminBadgeCategoriesInfo.setLink(context, ctx(context) + "/AdminBadgeCategories.do?command=List");
        adminBadgeCategoriesInfo.setColumnToSortBy(" lpc.description, bc.item_name asc ");
        BadgeCategoryList badgeCategoryList = new BadgeCategoryList();
        badgeCategoryList.setPagedListInfo(adminBadgeCategoriesInfo);
        badgeCategoryList.setEnabled(Constants.TRUE);
        badgeCategoryList.buildList(db);
        context.getRequest().setAttribute("badgeCategoryList", badgeCategoryList);
        if (badgeCategoryList.size() > 0 && !StringUtils.hasText(badgeCategoryId)) {
            badgeCategoryId = String.valueOf(badgeCategoryList.get(0).getId());
        }
        // Get badges
        if (StringUtils.hasText(badgeCategoryId)) {
            PagedListInfo adminBadgesInfo = this.getPagedListInfo(context, "adminBadgesInfo");
            adminBadgesInfo.setLink(context, ctx(context) + "/AdminBadges.do?command=List");
            BadgeList badgeList = new BadgeList();
            badgeList.setPagedListInfo(adminBadgesInfo);
            badgeList.setEnabled(Constants.TRUE);
            badgeList.setCategoryId(badgeCategoryId);
            badgeList.setBuildLogos(true);
            badgeList.buildList(db);
            context.getRequest().setAttribute("badgeList", badgeList);
            BadgeCategory badgeCategory = new BadgeCategory(db, Integer.parseInt(badgeCategoryId));
            ProjectCategory projectCategory = new ProjectCategory(db, badgeCategory.getProjectCategoryId());
            context.getRequest().setAttribute("badgeCategory", badgeCategory);
            context.getRequest().setAttribute("projectCategory", projectCategory);
        }
        // Load project category drop-down list
        ProjectCategoryList projectCategoryList = new ProjectCategoryList();
        projectCategoryList.setTopLevelOnly(true);
        projectCategoryList.buildList(db);
        context.getRequest().setAttribute("projectCategoryList", projectCategoryList);
    } catch (Exception e) {
        context.getRequest().setAttribute("Error", e);
        return ("SystemError");
    } finally {
        freeConnection(context, db);
    }
    if ("true".equals(context.getRequest().getParameter("onlyBadges"))) {
        context.getRequest().setAttribute("onlyBadges", "true");
        context.getRequest().setAttribute("PageLayout", "/layout1.jsp");
        return "ListOK";
    }
    return "ListAllOK";
}
