@Override
public void process(JCas jCas) throws AnalysisEngineProcessException {
    String uri = new File(ViewURIUtil.getURI(jCas)).getName();
    String docId = uri.substring(0, uri.indexOf(".sgm"));
    Ace2005Document document;
    document = JCasUtil.select(jCas, Ace2005Document.class).iterator().next();
    Document xml = new Document();
    Element sourceFileElement = new Element("source_file");
    sourceFileElement.setAttribute("URI", uri);
    sourceFileElement.setAttribute("SOURCE", document.getAceSource());
    sourceFileElement.setAttribute("TYPE", document.getAceType());
    xml.addContent(sourceFileElement);
    Element documentElement = new Element("document");
    documentElement.setAttribute("DOCID", docId);
    sourceFileElement.addContent(documentElement);
    FSIterator<FeatureStructure> namedEntities = jCas.getFSIndexRepository().getAllIndexedFS(jCas.getCasType(NamedEntity.type));
    while (namedEntities.hasNext()) {
        NamedEntity namedEntity = (NamedEntity) namedEntities.next();
        Element namedEntityElement = new Element("entity");
        namedEntityElement.setAttribute("ID", "" + idIndex++);
        namedEntityElement.setAttribute("TYPE", namedEntity.getEntityType());
        String entitySubtype = namedEntity.getEntitySubtype();
        if (entitySubtype != null)
            namedEntityElement.setAttribute("SUBTYPE", entitySubtype);
        String entityClass = namedEntity.getEntityClass();
        if (entityClass != null)
            namedEntityElement.setAttribute("CLASS", entityClass);
        FSArray namedEntityMentions = namedEntity.getMentions();
        for (int i = 0; i < namedEntityMentions.size(); i++) {
            NamedEntityMention namedEntityMention = (NamedEntityMention) namedEntityMentions.get(i);
            Element namedEntityMentionElement = new Element("entity_mention");
            namedEntityMentionElement.setAttribute("ID", "" + idIndex++);
            namedEntityMentionElement.setAttribute("TYPE", namedEntityMention.getMentionType());
            namedEntityMentionElement.addContent(createExtentElement("extent", namedEntityMention.getAnnotation()));
            namedEntityMentionElement.addContent(createExtentElement("head", namedEntityMention.getHead()));
            namedEntityElement.addContent(namedEntityMentionElement);
        }
        documentElement.addContent(namedEntityElement);
    }
    XMLOutputter xmlOut = new XMLOutputter(Format.getPrettyFormat());
    try {
        FileOutputStream stream = new FileOutputStream(new File(outputDirectory, docId + ".cleartk.xml"));
        xmlOut.output(xml, stream);
        stream.close();
    } catch (IOException e) {
        throw new AnalysisEngineProcessException(e);
    }
}
