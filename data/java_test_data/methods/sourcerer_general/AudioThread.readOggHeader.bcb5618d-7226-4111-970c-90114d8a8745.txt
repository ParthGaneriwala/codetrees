private boolean readOggHeader() {
    boolean moreData = true;
    int packet = 1;
    while (moreData) {
        index = joggSyncState.buffer(BUFFER_SIZE);
        buffer = joggSyncState.data;
        try {
            count = audioInputStream.read(buffer, index, BUFFER_SIZE);
        } catch (IOException e) {
            System.err.println("Couldn't read input stream");
            System.err.println(e);
        }
        joggSyncState.wrote(count);
        switch(packet) {
            case 1:
                {
                    switch(joggSyncState.pageout(joggPage)) {
                        case -1:
                            {
                                System.err.println("Hole exists in first packet");
                                return false;
                            }
                        case 0:
                            {
                                break;
                            }
                        case 1:
                            {
                                joggStreamState.init(joggPage.serialno());
                                joggStreamState.reset();
                                jorbisInfo.init();
                                jorbisComment.init();
                                if (joggStreamState.pagein(joggPage) == -1) {
                                    System.err.println("Error reading first header page");
                                    return false;
                                }
                                if (joggStreamState.packetout(joggPacket) != 1) {
                                    System.err.println("Error reading first header packet");
                                    return false;
                                }
                                if (jorbisInfo.synthesis_headerin(jorbisComment, joggPacket) < 0) {
                                    System.err.println("Error interpreting first packet.  Data is not Vorbis data");
                                    return false;
                                }
                                packet++;
                                break;
                            }
                    }
                    if (packet == 1)
                        break;
                }
            case 2:
            case 3:
                {
                    switch(joggSyncState.pageout(joggPage)) {
                        case -1:
                            {
                                System.err.println("Hole exists in second or third packet data");
                                return false;
                            }
                        case 0:
                            {
                                break;
                            }
                        case 1:
                            {
                                joggStreamState.pagein(joggPage);
                                switch(joggStreamState.packetout(joggPacket)) {
                                    case -1:
                                        {
                                            System.err.println("Hole exists in first packet data");
                                            return false;
                                        }
                                    case 0:
                                        {
                                            break;
                                        }
                                    case 1:
                                        {
                                            jorbisInfo.synthesis_headerin(jorbisComment, joggPacket);
                                            packet++;
                                            if (packet == 4) {
                                                moreData = false;
                                            }
                                            break;
                                        }
                                }
                                break;
                            }
                    }
                    break;
                }
        }
        index = joggSyncState.buffer(BUFFER_SIZE);
        buffer = joggSyncState.data;
        if (count == 0 && moreData) {
            System.err.println("Not enough header data was supplied");
            return false;
        }
    }
    return true;
}
