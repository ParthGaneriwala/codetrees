private void initialize(CheqexFrame cheqexFrame) {
    this.cheqexFrame.dailyCollection.setEnabled(false);
    this.cheqexFrame.cashInBank.setEnabled(false);
    this.cheqexFrame.accountSettings.setEnabled(false);
    calendar = Calendar.getInstance();
    // Add the first label-spinner pair.
    int cmonth = calendar.get(Calendar.MONTH) + 1;
    monthModel = new SpinnerNumberModel(cmonth, calendar.JANUARY + 1, calendar.DECEMBER + 1, 1);
    m = new JLabel("Month: ");
    m.setLabelFor(spinner1);
    int cday = calendar.get(Calendar.DAY_OF_MONTH);
    dateModel = new SpinnerNumberModel(cday, 1, 31, 1);
    d = new JLabel("Day: ");
    d.setLabelFor(spinner2);
    int currentYear = calendar.get(Calendar.YEAR);
    yearModel = new // initial value
    SpinnerNumberModel(// initial value
    currentYear, // min
    currentYear - 100, // max
    currentYear + 100, // step
    1);
    y = new JLabel("Year: ");
    y.setLabelFor(spinner3);
    saveDateButton = new JButton("Next");
    saveDateButton.setMnemonic(KeyEvent.VK_D);
    saveDateButton.setActionCommand("saveDate");
    saveDateButton.setEnabled(true);
    saveDateButton.addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            try {
                if ("saveDate".equals(e.getActionCommand())) {
                    getDate();
                }
            } catch (Exception e1) {
                e1.printStackTrace();
            }
        }
    });
    gdPanel = new JPanel();
    gdPanel.add(m);
    spinner1 = new JSpinner(monthModel);
    gdPanel.add(spinner1);
    gdPanel.add(y);
    spinner2 = new JSpinner(yearModel);
    gdPanel.add(spinner2);
    gdPanel.add(d);
    spinner3 = new JSpinner(dateModel);
    gdPanel.add(spinner3);
    gdPanel.add(saveDateButton);
    this.add(gdPanel);
    this.pack();
    this.setVisible(true);
    this.setResizable(false);
    this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
    addWindowListener(this);
}
