private URL getURL(String link, URL current) {
    URI baseURI = null;
    URL linkURL = null;
    if (debug)
        System.out.println("[Checkweb: getURL] started with " + current.toString() + ", " + link);
    if (link == null || link.equals("")) {
        if (debug)
            System.out.println("[Checkweb: getURL] null link");
        return null;
    }
    String editedLink = link;
    if (link.startsWith("./")) {
        editedLink = link.replaceFirst("^./", "");
    }
    int parentCnt = 0;
    while (editedLink.startsWith("../")) {
        editedLink = editedLink.replaceFirst("^../", "");
        parentCnt++;
    }
    try {
        // remove filename;
        String dirPath = current.getPath().replaceFirst("/[^/]+$", "");
        int numSlash = dirPath.split("/").length - 1;
        if (parentCnt > numSlash) {
            System.out.println(" =====>   Failed - invalid Path: " + link);
            if (debug)
                System.out.println("[Checkweb: getURL] not more parents than expected");
            return null;
        }
        for (int i = 0; i < parentCnt; i++) {
            dirPath = dirPath.replaceFirst("/[^/]+$", "");
        }
        if (current.getPort() < 0) {
            if (link.startsWith("/")) {
                baseURI = new URI(current.getProtocol() + "://" + current.getHost());
            } else {
                baseURI = new URI(current.getProtocol() + "://" + current.getHost() + dirPath);
            }
        } else {
            if (link.startsWith("/")) {
                baseURI = new URI(current.getProtocol() + "://" + current.getHost() + ":" + current.getPort());
            } else {
                baseURI = new URI(current.getProtocol() + "://" + current.getHost() + ":" + current.getPort() + dirPath);
            }
        }
    } catch (URISyntaxException e) {
        System.out.println(" =====>   Failed - invalid Path: " + current.toString());
        if (debug)
            System.out.println("[Checkweb: getURL] invalid base URL");
        return null;
    }
    if (debug)
        System.out.println("[Checkweb: getURL] baseURI " + baseURI.toString());
    try {
        linkURL = new URL(editedLink);
        return linkURL;
    } catch (MalformedURLException e) {
        // link is not absolute path.
        String absPath;
        // remove last "/"
        String basePath = baseURI.toString().replaceFirst("/$", "");
        if (!basePath.equals(baseURI.toString())) {
            if (debug)
                System.out.println("[Checkweb: getURL] baseURI  " + baseURI.toString());
            if (debug)
                System.out.println("[Checkweb: getURL] basePath " + basePath);
        }
        if (link.startsWith("/")) {
            absPath = basePath + editedLink;
        } else {
            absPath = basePath + "/" + editedLink;
        }
        try {
            linkURL = new URL(absPath);
        } catch (MalformedURLException e1) {
            System.out.println(" =====>   Failed - invalid Path: " + absPath);
            if (debug)
                System.out.println("[Checkweb: getURL] can not create URL");
            if (debug)
                System.out.println("[Checkweb: getURL] absPath:  " + absPath);
            if (debug)
                System.out.println("[Checkweb: getURL] basePath: " + basePath);
            if (debug)
                System.out.println("[Checkweb: getURL] link:     " + editedLink);
            return null;
        }
    }
    if (debug)
        System.out.println("[Checkweb: getURL] ended");
    return linkURL;
}
