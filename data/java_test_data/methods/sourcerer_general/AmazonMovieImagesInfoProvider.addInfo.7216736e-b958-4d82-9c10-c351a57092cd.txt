public void addInfo(Source source) throws DuplicatedSourceException {
    final MovieFileInfo fileInfo = source.getInfo(MovieFileInfo.class);
    try {
        // construction de l'url
        StringBuffer sUrl = new StringBuffer(URL_AMAZON);
        sUrl = appendParam(sUrl, KEY_ACCESS_ID, AMAZON_KEY);
        sUrl = appendParam(sUrl, KEY_TITLE, fileInfo.getTitle());
        final String amazonUrl = sUrl.toString();
        URL url = new URL(amazonUrl);
        DocumentBuilderFactory docFactory = DocumentBuilderFactory.newInstance();
        DocumentBuilder db = docFactory.newDocumentBuilder();
        Document document = db.parse(url.openStream());
        NodeList nodeImage = document.getElementsByTagName(LARGE_IMAGE);
        if (nodeImage != null && nodeImage.getLength() > 0) {
            MovieImagesInfo covers;
            covers = source.getInfo(MovieImagesInfo.class);
            if (covers == null) {
                covers = new MovieImagesInfo();
            }
            for (int i = 0; i < nodeImage.getLength(); i++) {
                org.w3c.dom.Node image = nodeImage.item(i);
                NodeList propImage = image.getChildNodes();
                for (int j = 0; j < propImage.getLength(); j++) {
                    Node node = propImage.item(j);
                    if (URL.equals(node.getNodeName())) {
                        covers.addImageUrl(node.getTextContent());
                    }
                }
            }
            source.addOrUpdateInfo(covers);
        }
    } catch (IOException e) {
        e.printStackTrace();
    } catch (SAXException e) {
        e.printStackTrace();
    } catch (ParserConfigurationException e) {
        e.printStackTrace();
    }
}
