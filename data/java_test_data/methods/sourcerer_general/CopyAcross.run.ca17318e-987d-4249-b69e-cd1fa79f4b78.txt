public void run() {
    try {
        File appPropsFile = getAppPropertiesFile();
        Properties appProps = loadAppProperties(appPropsFile);
        Map<String, String> invalidProperties = validateAndExtractProperies(appProps);
        if (invalidProperties.isEmpty()) {
            destDirPath = appProps.getProperty(DEST_DIR_KEY);
            srcDirPath = appProps.getProperty(SOURCE_DIR_KEY);
            copyAllOnStartup = (appProps.getProperty(COPY_ALL_STARTUP_KEY).equalsIgnoreCase("true"));
            if (!SystemTray.isSupported()) {
                System.err.println("SystemTray is not supported");
                return;
            }
            monitor = new FileChangeMonitor(new File(srcDirPath), this, this, dirWatcherSleepInterval);
            Thread monitorThread = new Thread(monitor);
            monitorThread.setPriority(Thread.MIN_PRIORITY);
            monitorThread.start();
        } else {
            StringBuffer errorMsg = new StringBuffer();
            FileWriter fileWriter = new FileWriter(appPropsFile);
            appProps.store(fileWriter, "Auto written by CopyAcross when properties missing!");
            fileWriter.close();
            errorMsg.append("The following properties are invalid:\n");
            for (Iterator iterator = invalidProperties.keySet().iterator(); iterator.hasNext(); ) {
                String invalidParam = (String) iterator.next();
                String reason = invalidProperties.get(invalidParam);
                errorMsg.append(invalidParam + " - " + reason + "\n");
            }
            errorMsg.append("\nProperties file location: " + appPropsFile.getAbsolutePath() + "\n");
            System.err.println(errorMsg);
            errorMsg.append("\nDo you want to open this properties file now?");
            int dialogResult = JOptionPane.showConfirmDialog(null, errorMsg);
            if (dialogResult == 0) {
                try {
                    Desktop desktop = Desktop.getDesktop();
                    desktop.edit(appPropsFile);
                } catch (Exception e) {
                    e.printStackTrace();
                    String cmd = "RUNDLL32.EXE SHELL32.DLL,OpenAs_RunDLL ";
                    Runtime runtime = Runtime.getRuntime();
                    Process p = runtime.exec(cmd + appPropsFile.getAbsolutePath());
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
