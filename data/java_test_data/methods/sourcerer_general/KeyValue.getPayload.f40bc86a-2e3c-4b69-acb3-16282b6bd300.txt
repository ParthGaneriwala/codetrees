// ------------------------------------------------------------------------
public Payload getPayload(int maxLen) {
    Payload p = new Payload();
    int ndxSize = this.getIndexSize();
    Type type = this.getValueType();
    /* non array types */
    if (type == BINARY) {
        byte[] b = (byte[]) this.getValue(0);
        int len = ((maxLen < 0) || (b.length < maxLen)) ? b.length : maxLen;
        p.writeBytes(b, len);
        return p;
    } else if (type == STRING) {
        String s = (String) this.getValue(0);
        int len = ((maxLen < 0) || (s.length() < maxLen)) ? s.length() : maxLen;
        p.writeString(s, len);
        return p;
    } else if (type == GPS) {
        if ((maxLen >= 0) && (maxLen < 10)) {
            // not enough room
            return null;
        } else {
            // (maxLen < 0) || (maxLen >= 10)
            GeoPoint g = (GeoPoint) this.getValue(0);
            p.writeLong(g.getFixtime(), 4);
            p.writeGPS(g, (maxLen > 0) ? (maxLen - 4) : 6);
            return p;
        }
    }
    /* bytes per index (applicable to array types only) */
    int maxBpi = type.getMaxLength();
    // bytes per index
    int bpi = maxBpi;
    if (maxLen >= 0) {
        bpi = maxLen / ndxSize;
        if (bpi > maxBpi) {
            bpi = maxBpi;
        } else if (bpi <= 0) {
            // not enough room
            return null;
        }
    }
    /* array types */
    if (type == BOOLEAN) {
        for (int i = 0; i < ndxSize; i++) {
            Boolean b = (Boolean) this.getValue(i);
            p.writeLong(b.booleanValue() ? 1 : 0, 1);
        }
        return p;
    } else if (type.isNumeric()) {
        for (int i = 0; i < ndxSize; i++) {
            Object n = this.getValue(i);
            long v = type.toLong(n);
            p.writeLong(v, bpi);
        }
        return p;
    }
    /* invalid type */
    return null;
}
