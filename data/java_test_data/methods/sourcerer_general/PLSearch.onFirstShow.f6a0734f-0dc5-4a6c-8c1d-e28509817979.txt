protected void onFirstShow() {
    this.buff = new TagsBuff(this.pageSize);
    this.setHorizontalAlignment(HasHorizontalAlignment.ALIGN_CENTER);
    this.setVerticalAlignment(HasVerticalAlignment.ALIGN_MIDDLE);
    dplSearch = new DecoratorPanel();
    ftSearch = new FlexTable();
    ftSearch.setStyleName("appSearchTable");
    tpTags = new TagsPanel(pageSize, 1, new ClkRemoveTag());
    tpTags.setStyleName("appTagSelected");
    hSearchHint = new HTML(CNStatsFront.get().constants.searchHint());
    tpTags.insert(hSearchHint, 0);
    btnSearch = new Button(CNStatsFront.get().constants.search(), new ClkSearch());
    ptpTags = new PagedTagsPanel(pageSize, this.buff);
    ptpTags.setStyleName("appTagList");
    hpNavi = new HorizontalPanel();
    hpNavi.setStyleName("appNavi");
    hpNavi.setHorizontalAlignment(HasHorizontalAlignment.ALIGN_LEFT);
    hpNavi.setSpacing(2);
    btnPrev = new Button();
    btnNext = new Button();
    btnPrev.setText("<");
    btnNext.setText(">");
    btnPrev.addClickHandler(new ClkNav("prev"));
    btnNext.addClickHandler(new ClkNav("next"));
    btnPrev.setEnabled(false);
    btnNext.setEnabled(false);
    sbTag = new SuggestBox(new TagOracle());
    sbTag.setStyleName("appTagSearch");
    sbTag.getTextBox().addFocusHandler(new FocusHandler() {

        public void onFocus(FocusEvent event) {
        // sbTag.setText("");
        }
    });
    sbTag.getTextBox().addBlurHandler(new BlurHandler() {

        public void onBlur(BlurEvent event) {
        // sbTag.setText(CNStatsFront.get().constants.searchTag());
        }
    });
    sbTag.getTextBox().addKeyPressHandler(new KeyPressHandler() {

        public void onKeyPress(KeyPressEvent event) {
        // Get return key
        // if (sbTag.getText().length() > 0 && 13 == event.getCharCode()) {
        // CNStatsFront.get().plSearch.hSearchHint.setVisible(false);
        // CNStatsFront.get().plSearch.addTag(sbTag.getText());
        // CNStatsFront.get().plSearch.ptpTags.showTags(
        // CNStatsFront.get().plSearch.tpTags.getTagsText(), "next");
        // sbTag.setText("");
        // sbTag.setFocus(true);
        // }
        }
    });
    // sbTag.setText(CNStatsFront.get().constants.searchTag());
    btnAdd = new Button(CNStatsFront.get().constants.add(), new ClkAdd());
    btnReset = new Button(CNStatsFront.get().constants.reset(), new ClkReset());
    hpNavi.add(btnPrev);
    hpNavi.add(btnNext);
    hpNavi.add(sbTag);
    hpNavi.add(btnAdd);
    hpNavi.add(btnReset);
    plAdv = new DisclosurePanel(CNStatsFront.get().constants.advanced());
    plAdv.addOpenHandler(new OpenHandlerAdv());
    this.add(dplSearch);
    dplSearch.add(ftSearch);
    ftSearch.setWidget(0, 0, tpTags);
    ftSearch.setWidget(0, 1, btnSearch);
    ftSearch.getFlexCellFormatter().setHorizontalAlignment(0, 1, HasHorizontalAlignment.ALIGN_RIGHT);
    ftSearch.getFlexCellFormatter().setColSpan(1, 0, 2);
    ftSearch.setWidget(1, 0, ptpTags);
    ftSearch.getFlexCellFormatter().setColSpan(2, 0, 2);
    ftSearch.setWidget(2, 0, hpNavi);
    ftSearch.getFlexCellFormatter().setColSpan(3, 0, 2);
    ftSearch.setWidget(3, 0, plAdv);
    ftSearch.getCellFormatter().addStyleName(1, 0, "appTags");
    this.reset();
// Query.create(CNStatsFront.baseURL + "queryhistory").send(
// new CBQueryHistory());
}
