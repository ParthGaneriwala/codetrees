public void actionPerformed(ActionEvent e) {
    if (e.getSource() == startButton) {
        if (frame1 == null) {
            frame1 = createFrame1();
            this.add(frame1);
            frame1.pack();
            frame1.setVisible(true);
        }
        hasBreak = false;
        if (query2 != null && !query2.isStarted()) {
            new Thread(query2).start();
        }
        frame1.getContentPane().setVisible(true);
        frame1.repaint();
    } else if (e.getSource() == stopButton) {
        {
            hasBreak = true;
            running = false;
        }
        System.out.println("stop");
    } else if (e.getSource() == uploadQuery) {
        displayQueryArea.setText("");
        JFileChooser fc1 = new JFileChooser();
        int returnVal = fc1.showOpenDialog(uploadQuery);
        fc1.setFileSelectionMode(JFileChooser.FILES_ONLY);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file1 = fc1.getSelectedFile();
            try {
                FileReader fr = new FileReader(file1);
                BufferedReader bufRdr = new BufferedReader(fr);
                String line = null;
                while ((line = bufRdr.readLine()) != null) {
                    displayQueryArea.append(line);
                    displayQueryArea.append("\n");
                }
                bufRdr.close();
                query2 = Query2.parse(file1.getName(), displayQueryArea.getText());
            }// try
             catch (IOException ioex) {
                System.err.println(ioex);
                System.exit(1);
            }
        } else {
            displayQueryArea.append("open command cancelled by user." + "\n");
        }
        displayQueryArea.setCaretPosition(displayQueryArea.getDocument().getLength());
    } else if (e.getSource() == clearQuery) {
        displayQueryArea.setText("");
    // displayQueryPlan.setText("");
    } else if (e.getSource() == clearButton) {
        if (frame1 != null) {
            frame1.getContentPane().setVisible(false);
            frame1.repaint();
        }
    } else if (e.getSource() == save) {
        JFileChooser fc = new JFileChooser();
        String filePath;
        int returnVal = fc.showSaveDialog(null);
        // int returnVal = fc.showOpenDialog(null);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            FileNameExtensionFilter fileFilter = new FileNameExtensionFilter("", "out");
            fc.setSelectedFile(file);
            fc.setFileFilter((javax.swing.filechooser.FileFilter) fileFilter);
            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
            if (file.exists()) {
                int val = JOptionPane.showConfirmDialog(panel1, "File exists; replace?");
                if (val != JOptionPane.OK_OPTION) {
                    System.out.println("Declined replace");
                    return;
                }
            }
        } else {
            displayQueryArea.append("Save command cancelled by user." + "\n");
        }
        displayQueryArea.setCaretPosition(displayQueryArea.getDocument().getLength());
    } else if (e.getSource() == exit) {
        System.exit(0);
    }
}
