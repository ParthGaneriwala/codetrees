public void testEqualsChildSkills() {
    GeneralSkillBias bias1 = new GeneralSkillBias(TEST_GENERAL_SKILL);
    GeneralSkillBias bias2 = new GeneralSkillBias(TEST_GENERAL_SKILL);
    bias1.getWeighting().setValue(2);
    bias2.getWeighting().setValue(2);
    bias1.getWeightedChildSkill(FIRST_AID).getWeighting().setValue(2);
    bias2.getWeightedChildSkill(FIRST_AID).getWeighting().setValue(2);
    assertTrue(bias1.equals(bias2));
    // Fail when value different
    bias2.getWeightedChildSkill(FIRST_AID).getWeighting().setValue(3);
    assertFalse(bias1.equals(bias2));
    bias2 = new GeneralSkillBias(TEST_GENERAL_SKILL);
    // Fail when skill is gone
    bias2.removeChildSkill(FIRST_AID);
    assertFalse(bias1.equals(bias2));
    bias2 = new GeneralSkillBias(TEST_GENERAL_SKILL);
    // Fail when additional skill is present
    bias2.addNewChildSkill("Meatball");
    assertFalse(bias1.equals(bias2));
    bias2 = new GeneralSkillBias(TEST_GENERAL_SKILL);
    // Fail when skill is inn exclusive group
    List<String> members = new ArrayList<String>();
    members.add(FIRST_AID);
    bias2.createExclusiveGroup("Emergency", members);
    assertFalse(bias1.equals(bias2));
    bias2 = new GeneralSkillBias(TEST_GENERAL_SKILL);
    // Fail when skill is in weighing group
    members.add(FIRST_AID);
    bias2.createWeightingGroup("Emergency", members);
    assertFalse(bias1.equals(bias2));
    bias2 = new GeneralSkillBias(TEST_GENERAL_SKILL);
}
