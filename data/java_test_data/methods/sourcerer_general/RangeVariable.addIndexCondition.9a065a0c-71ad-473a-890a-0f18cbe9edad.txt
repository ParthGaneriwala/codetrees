void addIndexCondition(Expression[] exprList, Index index, int colCount) {
    rangeIndex = index;
    opType = exprList[0].getType();
    switch(opType) {
        case OpTypes.NOT:
            indexCond = exprList;
            indexEndCond = new Expression[exprList.length];
            opTypeEnd = OpTypes.MAX;
            break;
        case OpTypes.GREATER:
        case OpTypes.GREATER_EQUAL:
            indexCond = exprList;
            indexEndCond = new Expression[exprList.length];
            opTypeEnd = OpTypes.MAX;
            break;
        case OpTypes.SMALLER:
        case OpTypes.SMALLER_EQUAL:
            {
                Expression e = exprList[0].getLeftNode();
                e = new ExpressionLogical(OpTypes.IS_NULL, e);
                e = new ExpressionLogical(OpTypes.NOT, e);
                indexCond = new Expression[] { e };
                indexEndCond = new Expression[exprList.length];
                indexEndCond[0] = indexEndCondition = exprList[0];
                opTypeEnd = opType;
                opType = OpTypes.NOT;
                break;
            }
        case OpTypes.IS_NULL:
        case OpTypes.EQUAL:
            {
                indexCond = exprList;
                indexEndCond = new Expression[exprList.length];
                for (int i = 0; i < colCount; i++) {
                    Expression e = exprList[i];
                    indexEndCond[i] = e;
                    indexEndCondition = ExpressionLogical.andExpressions(indexEndCondition, e);
                    opType = e.getType();
                }
                opTypeEnd = opType;
                break;
            }
        default:
            Error.runtimeError(ErrorCode.U_S0500, "RangeVariable");
    }
    indexedColumnCount = colCount;
}
