public String searchResultAsXML(String searchTerm) throws SQLException, IllegalAccessException, ClassNotFoundException, InstantiationException {
    StringBuffer bbxml = new StringBuffer();
    bbxml.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");
    bbxml.append("<SEARCH>\n");
    String ref = "";
    int i = 0;
    Connection conn = DBUtils.getConnection();
    PreparedStatement ps = null;
    if (bibleTable.equalsIgnoreCase("BBL_KJVPLUS_XML"))
        ps = conn.prepareStatement("SELECT VERSE_TEXT,BOOK_NO,CHAPTER_NO,VERSE_NO FROM BBL_KJV_XML");
    else
        ps = conn.prepareStatement("SELECT VERSE_TEXT,BOOK_NO,CHAPTER_NO,VERSE_NO FROM " + bibleTable);
    ResultSet rs = ps.executeQuery();
    ;
    while (rs.next()) {
        String verse = rs.getString(1);
        if (verse.indexOf(searchTerm) != -1) {
            bbxml.append("<RECORD>\n");
            ref = CSWConstants.shortBookNames[rs.getInt(2) - 1] + " " + rs.getInt(3) + ":" + rs.getInt(4);
            bbxml.append("<REF>");
            bbxml.append(ref);
            bbxml.append("</REF>");
            bbxml.append("<VERSE>");
            bbxml.append(verse);
            bbxml.append("</VERSE>\n");
            bbxml.append("</RECORD>\n");
            i++;
            if (i > 50)
                break;
        }
    }
    rs.close();
    ps.close();
    if (i == 0) {
        bbxml.append("<RECORD><REF></REF><VERSE></VERSE></RECORD>\n");
    }
    bbxml.append("</SEARCH>");
    return bbxml.toString();
}
