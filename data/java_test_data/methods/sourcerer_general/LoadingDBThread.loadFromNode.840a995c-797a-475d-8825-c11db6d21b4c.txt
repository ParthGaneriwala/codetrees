void loadFromNode(DBNode dbn) throws Exception {
    InetAddress outIp = dbn.getIp();
    int outPort = dbn.routePort;
    if (peer.Config.outIp.equals(outIp) & peer.Config.outPort == outPort) {
        return;
    }
    Connection conn = null;
    try {
        conn = peer.Config.route.getConnection(outIp, outPort);
        GetDBCOM1 gdc = new GetDBCOM1(mdb);
        tun = conn.creatTunnel(false);
        TunnelOutputStream tos = tun.getTunnelOutputStream();
        tos.writeCommand(gdc);
        TunnelInputStream tis = tun.getTunnelInputStream();
        byte[] commandByte = tis.readCommand();
        int commandType = peer.rdp.command.Command.checkCommandType(commandByte);
        if (commandType == peer.tools.CommandType.command_GetDBCOM2) {
            GetDBCOM2 gdc2 = new GetDBCOM2(commandByte);
            int groupDataLength = gdc2.getGroupDataLength();
            byte[] groupData = new byte[groupDataLength];
            int offset = 0;
            int length = 0;
            while (true) {
                length = tis.read(groupData, offset, groupData.length);
                if (length == -1) {
                    break;
                }
                offset += length;
            }
            SourceGroup sg = new SourceGroup(mdb, groupData);
            peer.Config.dbServer.setDB(mdb, sg);
        }
    } catch (Exception e) {
        if (tun != null) {
            try {
                tun.close();
            } catch (ConnectException e2) {
                e2.printStackTrace();
            }
        }
        throw e;
    } finally {
        if (tun != null) {
            try {
                tun.close();
            } catch (ConnectException e2) {
                e2.printStackTrace();
            }
        }
    }
}
