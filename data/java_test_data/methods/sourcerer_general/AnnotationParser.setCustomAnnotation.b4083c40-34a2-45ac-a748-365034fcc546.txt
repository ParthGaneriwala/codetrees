/*--------------------------------------------------------------
     METHODS.
    --------------------------------------------------------------*/
public String setCustomAnnotation() {
    String fileString = params.getAnnotationFile();
    annotation = null;
    String resultString = "";
    // if fileString contains "gene_association" then assume you're using GO Consortium annotation files
    if (fileString.contains("gene_association")) {
        try {
            BiNGOConsortiumAnnotationReader readerAnnotation = new BiNGOConsortiumAnnotationReader(fileString, synonymHash, params, "Consortium", "GO");
            annotation = readerAnnotation.getAnnotation();
            if (readerAnnotation.getOrphans()) {
                orphansFound = true;
            }
            if (readerAnnotation.getConsistency()) {
                consistency = true;
            }
            alias = readerAnnotation.getAlias();
            resultString = LOADCORRECT;
        } catch (IllegalArgumentException e) {
            taskMonitor.setException(e, "ANNOTATION FILE PARSING ERROR, PLEASE CHECK FILE FORMAT:");
            resultString = "ANNOTATION FILE PARSING ERROR, PLEASE CHECK FILE FORMAT:  \n" + e;
        } catch (IOException e) {
            taskMonitor.setException(e, "Annotation file could not be located...");
            resultString = "Annotation file could not be located...";
        } catch (Exception e) {
            taskMonitor.setException(e, "");
            resultString = "" + e;
        }
    } else {
        // flat file reader for custom annotation
        try {
            BiNGOAnnotationFlatFileReader readerAnnotation = new BiNGOAnnotationFlatFileReader(fileString, synonymHash);
            annotation = readerAnnotation.getAnnotation();
            if (readerAnnotation.getOrphans()) {
                orphansFound = true;
            }
            if (readerAnnotation.getConsistency()) {
                consistency = true;
            }
            alias = readerAnnotation.getAlias();
            resultString = LOADCORRECT;
        } catch (IllegalArgumentException e) {
            taskMonitor.setException(e, "ANNOTATION FILE PARSING ERROR, PLEASE CHECK FILE FORMAT:");
            resultString = "ANNOTATION FILE PARSING ERROR, PLEASE CHECK FILE FORMAT:  \n" + e;
        } catch (IOException e) {
            taskMonitor.setException(e, "Annotation file could not be located...");
            resultString = "Annotation file could not be located...";
        } catch (Exception e) {
            System.out.println(e);
            taskMonitor.setException(e, "");
            resultString = "" + e;
        }
    }
    return resultString;
}
