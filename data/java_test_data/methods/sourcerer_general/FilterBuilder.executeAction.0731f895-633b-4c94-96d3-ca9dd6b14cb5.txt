protected void executeAction() {
    Filter[] selections;
    FilterBean bean;
    JInternalFrame frame;
    Dimension dimension;
    // JTextPane text;
    selections = getSelection();
    if (0 == selections.length)
        selections = getFilters();
    if (0 != selections.length) {
        bean = new FilterBean();
        bean.setURL(mURLField.getText());
        bean.setFilters(selections);
        // set up an internal frame for the results
        frame = new JInternalFrame(bean.getURL());
        frame.setClosable(true);
        frame.setResizable(true);
        dimension = mOutput.getSize();
        frame.setBounds(0, 0, dimension.width, dimension.height / 2);
        JTree tree = new JTree(new HtmlTreeModel(bean.getNodes()));
        tree.setRootVisible(false);
        tree.setCellRenderer(new HtmlTreeCellRenderer());
        JScrollPane treeView = new JScrollPane(tree);
        frame.setContentPane(new JScrollPane(treeView, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED));
        // text = new JTextPane ();
        // text.setText (bean.getNodes ().toHtml ());
        // frame.setContentPane (new JScrollPane (
        // text,
        // ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED,
        // ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED));
        // layer 2?
        mOutput.add(frame, new Integer(2));
        try {
            frame.setSelected(true);
        } catch (PropertyVetoException pve) {
            pve.printStackTrace();
        }
        frame.show();
    }
}
