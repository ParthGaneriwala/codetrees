public final ClassDecl Class_decl_lf(Token tk) {
    Token tk1;
    VarDeclList vl;
    MethodDeclList ml;
    switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
        case LBRACE:
            jj_consume_token(LBRACE);
            vl = Var_decl_prime();
            ml = Method_decl_prime();
            jj_consume_token(RBRACE);
            ClassDeclSimple cds = new ClassDeclSimple(new Identifier(tk.image), vl, ml);
            cds.beginLine = tk.beginLine;
            cds.endLine = tk.endLine;
            cds.beginColumn = tk.beginColumn;
            cds.endColumn = tk.endColumn;
            {
                if (true)
                    return cds;
            }
            break;
        case EXTENDS:
            jj_consume_token(EXTENDS);
            tk1 = jj_consume_token(ID);
            jj_consume_token(LBRACE);
            vl = Var_decl_prime();
            ml = Method_decl_prime();
            jj_consume_token(RBRACE);
            ClassDeclExtends cdx = new ClassDeclExtends(new Identifier(tk.image), new Identifier(tk1.image), vl, ml);
            cdx.beginLine = tk.beginLine;
            cdx.endLine = tk.endLine;
            cdx.beginColumn = tk.beginColumn;
            cdx.endColumn = tk.endColumn;
            {
                if (true)
                    return cdx;
            }
            break;
        default:
            jj_la1[0] = jj_gen;
            jj_consume_token(-1);
            Error.getInstance().addErro("Esperado { ou 'extends' no lugar de " + tk.image, tk.beginLine);
    }
    return null;
}
