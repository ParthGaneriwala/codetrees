private void updateChart() {
    // simple sum of all prices
    double sum = INITIAL_PRICE;
    // sum of squares of prices
    double ssq = INITIAL_PRICE * INITIAL_PRICE;
    stats[MIN] = INITIAL_PRICE;
    stats[MAX] = INITIAL_PRICE;
    prices[0] = INITIAL_PRICE;
    for (int i = 1; i < N_FORCASTED_MONTHS; i++) {
        prices[i] = prices[i - 1] * (1 + MAX_MONTHLY_RELATIVE_CHANGE * (2 * Math.random() - 1));
        stats[MIN] = Math.min(stats[MIN], prices[i]);
        stats[MAX] = Math.max(stats[MAX], prices[i]);
        sum += prices[i];
        ssq += prices[i] * prices[i];
    }
    stats[AVG] = sum / N_FORCASTED_MONTHS;
    // use "average of squares minus square of average"
    // formula for variance to get standard deviation.
    stats[STD] = Math.sqrt(ssq / N_FORCASTED_MONTHS - stats[AVG] * stats[AVG]);
    // update pie slices to reflect new stats
    updateStatSlices();
    // update backward-price-difference and price curves
    getCurve(BDIF).clearPoints();
    getCurve(PRICE).clearPoints();
    for (int i = 0; i < N_FORCASTED_MONTHS; i++) {
        getCurve(BDIF).addPoint(i, (i == 0) ? 0 : (prices[i] - prices[i - 1]));
        getCurve(PRICE).addPoint(i, prices[i]);
        if (prices[i] != stats[MIN] && prices[i] != stats[MAX]) {
            // no min/max;
            // no label
            getCurve(PRICE).getPoint().setAnnotationText(null);
        } else {
            // label point to indicate it's at a min or max price
            getCurve(PRICE).getPoint().setAnnotationFontSize(10);
            getCurve(PRICE).getPoint().setAnnotationFontWeight("bold");
            if (prices[i] == stats[MIN]) {
                getCurve(PRICE).getPoint().setAnnotationLocation(AnnotationLocation.SOUTH);
                getCurve(PRICE).getPoint().setAnnotationText(shortStatLabels[MIN]);
                getCurve(PRICE).getPoint().setAnnotationFontColor("blue");
            } else {
                getCurve(PRICE).getPoint().setAnnotationLocation(AnnotationLocation.NORTH);
                getCurve(PRICE).getPoint().setAnnotationText(shortStatLabels[MAX]);
                getCurve(PRICE).getPoint().setAnnotationFontColor("blue");
            }
        }
    }
    update();
}
