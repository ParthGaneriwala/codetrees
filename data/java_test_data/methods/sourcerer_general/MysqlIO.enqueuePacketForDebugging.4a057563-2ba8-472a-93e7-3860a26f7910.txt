private void enqueuePacketForDebugging(boolean isPacketBeingSent, boolean isPacketReused, int sendLength, byte[] header, Buffer packet) throws SQLException {
    if ((this.packetDebugRingBuffer.size() + 1) > this.connection.getPacketDebugBufferSize()) {
        this.packetDebugRingBuffer.removeFirst();
    }
    StringBuffer packetDump = null;
    if (!isPacketBeingSent) {
        int bytesToDump = Math.min(MAX_PACKET_DUMP_LENGTH, packet.getBufLength());
        Buffer packetToDump = new Buffer(4 + bytesToDump);
        packetToDump.setPosition(0);
        packetToDump.writeBytesNoNull(header);
        packetToDump.writeBytesNoNull(packet.getBytes(0, bytesToDump));
        String packetPayload = packetToDump.dump(bytesToDump);
        packetDump = new StringBuffer(96 + packetPayload.length());
        packetDump.append("Server ");
        if (isPacketReused) {
            packetDump.append("(re-used)");
        } else {
            packetDump.append("(new)");
        }
        packetDump.append(" ");
        packetDump.append(packet.toSuperString());
        packetDump.append(" --------------------> Client\n");
        packetDump.append("\nPacket payload:\n\n");
        packetDump.append(packetPayload);
        if (bytesToDump == MAX_PACKET_DUMP_LENGTH) {
            packetDump.append("\nNote: Packet of " + packet.getBufLength() + " bytes truncated to " + MAX_PACKET_DUMP_LENGTH + " bytes.\n");
        }
    } else {
        int bytesToDump = Math.min(MAX_PACKET_DUMP_LENGTH, sendLength);
        String packetPayload = packet.dump(bytesToDump);
        packetDump = new StringBuffer(64 + 4 + packetPayload.length());
        packetDump.append("Client ");
        packetDump.append(packet.toSuperString());
        packetDump.append("--------------------> Server\n");
        packetDump.append("\nPacket payload:\n\n");
        packetDump.append(packetPayload);
        if (bytesToDump == MAX_PACKET_DUMP_LENGTH) {
            packetDump.append("\nNote: Packet of " + sendLength + " bytes truncated to " + MAX_PACKET_DUMP_LENGTH + " bytes.\n");
        }
    }
    this.packetDebugRingBuffer.addLast(packetDump);
}
