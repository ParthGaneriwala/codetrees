private void createNewReconciliation(Node recNode) {
    try {
        NamedNodeMap attributes = recNode.getAttributes();
        String dateString = attributes.getNamedItem("date").getNodeValue();
        String amountString = attributes.getNamedItem("amount").getNodeValue();
        String accountString = attributes.getNamedItem("account").getNodeValue();
        String recurseString = attributes.getNamedItem("recurse").getNodeValue();
        Account owner = accountMap.get(accountString);
        if (owner == null)
            return;
        Reconciliation rec = new Reconciliation(owner);
        rec.setDate(new LocalDate(format.parse(dateString)));
        rec.setEndAmount(new BigDecimal(amountString));
        rec.setRecurse(recurseString.equals("true"));
        owner.setReconciliation(rec);
        for (Node child = recNode.getFirstChild(); child != null; child = child.getNextSibling()) {
            try {
                if (child.getNodeName().equals("split")) {
                    String splitId = child.getAttributes().getNamedItem("id").getTextContent();
                    rec.getSplits().add(splitMap.get(splitId));
                } else if (child.getNodeName().equals("entry")) {
                    NamedNodeMap entryAttrs = child.getAttributes();
                    String payee = entryAttrs.getNamedItem("payee").getTextContent();
                    String memo = entryAttrs.getNamedItem("memo").getTextContent();
                    String date = entryAttrs.getNamedItem("date").getTextContent();
                    String value = entryAttrs.getNamedItem("value").getTextContent();
                    StatementEntry entry = new StatementEntry();
                    entry.payeeName = payee;
                    entry.memo = memo;
                    entry.date = new LocalDate(format.parse(date));
                    entry.value = new BigDecimal(value);
                    rec.getStatementEntries().add(entry);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
