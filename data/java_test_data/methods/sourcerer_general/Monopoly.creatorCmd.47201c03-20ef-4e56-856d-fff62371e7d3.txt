public boolean creatorCmd(String handle, StringTokenizer ST) {
    MBoard b = (MBoard) getCreator(handle);
    if (b == null)
        return false;
    String cmd = ST.nextToken();
    int t = ST.countTokens();
    String t1 = null;
    switch(t) {
        case 0:
            if (cmd.equalsIgnoreCase("!RESTORE")) {
                MonoBase.restore(b);
            } else if (cmd.equalsIgnoreCase("!AUTOSAVE")) {
                MBoard.AUTOSAVE = !MBoard.AUTOSAVE;
                b.spam("Autosave: " + MBoard.AUTOSAVE);
            } else if (cmd.equalsIgnoreCase("!BID") && !b.isPlaying()) {
                b.VARIANT = MBoard.BIDSTART;
                Serv.tch(b.creator + "'s board style: BID");
            } else if (cmd.equalsIgnoreCase("!NORMAL") && !b.isPlaying()) {
                b.VARIANT = MBoard.NORMAL;
                Serv.tch(b.creator + "'s board style: NORMAL");
            } else if (cmd.equalsIgnoreCase("!POKER") && !b.isPlaying()) {
                b.VARIANT = MBoard.POKEMON;
                Serv.tch(b.creator + "'s board style: POKER");
            } else if (cmd.equalsIgnoreCase("!FREEPARK") && !b.isPlaying()) {
                b.FREEPARK = !b.FREEPARK;
                Serv.tch("Free Parking set to " + b.FREEPARK + " on " + b.creator + "'s board.");
            } else if (cmd.equalsIgnoreCase("!DOUBLEGO") && !b.isPlaying()) {
                b.DOUBLEGO = !b.DOUBLEGO;
                Serv.tch("400 on Go set to " + b.DOUBLEGO + " on " + b.creator + "'s board.");
            } else if (cmd.equalsIgnoreCase("!AUCTMORG") && !b.isPlaying()) {
                b.AUCTMORG = !b.AUCTMORG;
                Serv.tch("Auction Morging set to " + b.AUCTMORG + " on " + b.creator + "'s board.");
            } else
                return false;
            break;
        case 1:
            t1 = ST.nextToken();
            if (cmd.equalsIgnoreCase("!STYLE")) {
                b.newStyle(t1);
            } else if (!b.isPlaying() && cmd.equalsIgnoreCase("!ANTE")) {
                b.setAnte(MiscUtil.strToInt(t1));
            } else if (!b.isPlaying() && cmd.equalsIgnoreCase("!PARKLIM")) {
                b.FPLIMIT = MiscUtil.strToInt(t1);
                Serv.tch("Parking Limit set to " + b.FPLIMIT + " on " + b.creator + "'s board.");
            } else if (!b.isPlaying() && cmd.equalsIgnoreCase("!HOUSES")) {
                b.houses = MiscUtil.strToInt(t1);
                Serv.tch("Houses set to " + b.houses + " on " + b.creator + "'s board.");
            } else if (!b.isPlaying() && cmd.equalsIgnoreCase("!HOTELS")) {
                b.hotels = MiscUtil.strToInt(t1);
                Serv.tch("Hotels set to " + b.hotels + " on " + b.creator + "'s board.");
            } else
                return false;
            break;
        default:
            return false;
    }
    return true;
}
