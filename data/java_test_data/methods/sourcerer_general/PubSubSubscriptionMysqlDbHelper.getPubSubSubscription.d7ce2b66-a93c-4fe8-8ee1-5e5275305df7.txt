@Override
public PubSubSubscription getPubSubSubscription(String subscriber, String nodeId, String subId) throws Exception {
    Connection connection = null;
    try {
        connection = connectionPool.getConnection();
        PreparedStatement preStat = connection.prepareStatement(GETONEPUBSUBSUBSCRIPTION_SQL);
        preStat.setString(1, subscriber);
        preStat.setString(2, nodeId);
        preStat.setString(3, subId);
        ResultSet subscriptionsResultSet = preStat.executeQuery();
        if (loggerServiceTracker.isDebugEnabled()) {
            loggerServiceTracker.debug("SQL:" + preStat.toString());
            loggerServiceTracker.debug("Result:" + subscriptionsResultSet.toString());
        }
        if (subscriptionsResultSet.next()) {
            PubSubSubscription sub = new PubSubSubscription();
            sub.setServiceId(subscriptionsResultSet.getString("serviceId"));
            sub.setNodeId(subscriptionsResultSet.getString("nodeId"));
            sub.setJid(subscriptionsResultSet.getString("jid"));
            sub.setSubscriber(subscriptionsResultSet.getString("subscriber"));
            sub.setSubId(subscriptionsResultSet.getString("subId"));
            String subscription = subscriptionsResultSet.getString("subscription");
            if (subscription != null) {
                sub.setSubscription(PubSubSubscription.Subscription.valueOf(subscription));
            }
            sub.setDeliver(subscriptionsResultSet.getBoolean("deliver"));
            sub.setDigest(subscriptionsResultSet.getBoolean("digest"));
            sub.setDigestFrequency(subscriptionsResultSet.getInt("digest_frequency"));
            sub.setExpire(subscriptionsResultSet.getInt("expire"));
            sub.setIncludeBody(subscriptionsResultSet.getBoolean("includeBody"));
            String showValues = subscriptionsResultSet.getString("showValues");
            if (showValues != null) {
                String[] values = showValues.split(";");
                Set<String> valuesSet = new HashSet<String>();
                for (String value : values) {
                    valuesSet.add(value);
                }
                sub.setShowValues(valuesSet);
            }
            sub.setSubscriptionDepth(subscriptionsResultSet.getString("subscriptionDepth"));
            return sub;
        }
    } finally {
        if (connection != null) {
            connectionPool.returnConnection(connection);
        }
    }
    return null;
}
