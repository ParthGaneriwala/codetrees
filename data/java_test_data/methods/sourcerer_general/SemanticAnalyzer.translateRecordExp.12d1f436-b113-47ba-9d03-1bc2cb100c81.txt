public TranslatedExpAndType translateRecordExp(RecordExp recordExpression) {
    Symbol typeSymbol = recordExpression.getTypeSymbol();
    FieldExpList fieldExpList = recordExpression.getFieldExpList();
    RecordTypeEntry recordTypeEntry = null;
    TypeEntry tpEntryExp = (TypeEntry) environments.getTypeTable().get(typeSymbol);
    int fieldCount = 0;
    Stack initExprStack = new Stack();
    if (tpEntryExp == null) {
        errorHandler.addError(fieldExpList.getPosition(), ErrorHandler.THE_TYPE, typeSymbol.toString(), ErrorHandler.NOT_DEFINED);
    } else {
        if (tpEntryExp instanceof RecordTypeEntry) {
            recordTypeEntry = (RecordTypeEntry) tpEntryExp;
            if (fieldExpList != null) {
                for (FieldExpList fel = fieldExpList; fel != null; fel = fel.getNext()) {
                    fieldCount++;
                    Symbol flName = fel.getFieldNameSymbol();
                    // The above name must occur in the recordTypeEntry for this record type; check it
                    boolean fieldFound = false;
                    for (RecordTypeEntry rte = recordTypeEntry; rte != null; rte = rte.getNext()) {
                        Symbol tpEntryName = rte.getFieldName();
                        TypeEntry tpEntry = rte.getFieldType();
                        if (tpEntryName == flName) {
                            Exp initExp = fel.getInitExp();
                            TranslatedExpAndType transInitExp = translateExpression(initExp);
                            AssemType assemInitExp = transInitExp.getAssemType();
                            initExprStack.push(assemInitExp);
                            if (!(transInitExp.getTypeEntry() == tpEntry)) {
                                errorHandler.addError(fel.getPosition(), ErrorHandler.FIELD_EXP_MISMATCH);
                            }
                            fieldFound = true;
                            break;
                        }
                    }
                    if (!fieldFound) {
                        errorHandler.addError(fieldExpList.getPosition(), ErrorHandler.FIELD_NAME, flName.toString(), ErrorHandler.NOT_DEFINED);
                    }
                }
            }
        } else {
            errorHandler.addError(fieldExpList.getPosition(), ErrorHandler.THE_TYPE, typeSymbol.toString(), ErrorHandler.NOT_RECORD);
        }
    }
    TranslatedExpAndType translatedExpAndType = new TranslatedExpAndType();
    translatedExpAndType.setAssemType(translatingMediator.translateRecordExp(fieldCount, initExprStack));
    translatedExpAndType.setEntry(recordTypeEntry);
    return translatedExpAndType;
}
