private File plBlockFile(String seeking) throws IOException, SqlToolError {
    String s;
    // Have already read the if/while/foreach statement, so we are already
    // at nest level 1.  When we reach nestlevel 1 (read 1 net "end"
    // statement), we're at level 0 and return.
    int nestlevel = 1;
    String curPlCommand;
    if (seeking == null || ((!seeking.equals("foreach")) && (!seeking.equals("if")) && (!seeking.equals("while")))) {
        throw new RuntimeException("Assertion failed.  Unsupported PL block type:  " + seeking);
    }
    File tmpFile = File.createTempFile("sqltool-", ".sql");
    PrintWriter pw = new PrintWriter((charset == null) ? (new OutputStreamWriter(new FileOutputStream(tmpFile))) : (new OutputStreamWriter(new FileOutputStream(tmpFile), charset)));
    try {
        pw.println("/* " + (new java.util.Date()) + ". " + getClass().getName() + " PL block. */");
        pw.println();
        Matcher m;
        while (true) {
            s = br.readLine();
            if (s == null) {
                s = rb.getString(SqltoolRB.PL_BLOCK_UNTERMINATED, seeking);
                errprintln(s);
                throw new SqlToolError(s);
            }
            curLinenum++;
            m = plPattern.matcher(s);
            if (m.matches() && m.groupCount() > 0 && m.group(1) != null) {
                String[] tokens = m.group(1).split("\\s+");
                curPlCommand = tokens[0];
                // PL COMMAND of some sort.
                if (curPlCommand.equals(seeking)) {
                    nestlevel++;
                } else if (curPlCommand.equals("end")) {
                    if (tokens.length < 2) {
                        s = rb.getString(SqltoolRB.END_SYNTAX, "1");
                        errprintln(s);
                        throw new SqlToolError(s);
                    }
                    String inType = tokens[1];
                    if (inType.equals(seeking)) {
                        nestlevel--;
                        if (nestlevel < 1) {
                            break;
                        }
                    }
                    if ((!inType.equals("foreach")) && (!inType.equals("if")) && (!inType.equals("while"))) {
                        s = rb.getString(SqltoolRB.END_SYNTAX, "2");
                        errprintln(s);
                        throw new SqlToolError(s);
                    }
                }
            }
            pw.println(s);
        }
        pw.flush();
    } finally {
        pw.close();
    }
    return tmpFile;
}
