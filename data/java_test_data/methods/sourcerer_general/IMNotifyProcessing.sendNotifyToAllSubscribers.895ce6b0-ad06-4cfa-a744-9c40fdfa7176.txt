public void sendNotifyToAllSubscribers(String status, String subStatus) {
    try {
        // We have to get all our subscribers and send them a NOTIFY!
        PresenceManager presenceManager = imUA.getPresenceManager();
        Vector subscribersList = presenceManager.getAllSubscribers();
        DebugIM.println("DEBUG, IMNotifyProcessing, sendNotifyToAllSuscribers()," + " we have to notify our SUBSCRIBERS: let's send a NOTIFY for each one " + "of them (subscribersList: " + subscribersList.size() + ")!!!");
        for (int i = 0; i < subscribersList.size(); i++) {
            Subscriber subscriber = (Subscriber) subscribersList.elementAt(i);
            Response okSent = subscriber.getOkSent();
            String subscriberName = subscriber.getSubscriberName();
            String contactAddress = imUA.getIMAddress() + ":" + imUA.getIMPort();
            String xmlBody = null;
            // if (!status.equals("closed") )
            xmlBody = xmlPidfParser.createXMLBody(status, subStatus, subscriberName, contactAddress);
            Dialog dialog = subscriber.getDialog();
            if (dialog == null) {
                DebugIM.println("ERROR, sendNotifyToAllSubscribers(), PB to " + "retrieve the dialog, NOTIFY not sent!");
                System.out.println("ERROR, sendNotifyToAllSubscribers(), PB to " + "retrieve the dialog, NOTIFY not sent!");
            } else
                sendNotify(okSent, xmlBody, dialog);
        }
        // Send a PUBLISH request to our PA
        IMRegisterProcessing imRegisterProcessing = imUA.getIMRegisterProcessing();
        if (imRegisterProcessing.isRegistered()) {
            // Fetching the sip-uri from gui. Isn't that a bit odd?
            IMPublishProcessing imPublishProcessing = imUA.getIMPublishProcessing();
            javax.swing.JTextField guiSipURI = imUA.getInstantMessagingGUI().getLocalSipURLTextField();
            String localSipURI = guiSipURI.getText();
            int colonIndex = localSipURI.indexOf(':');
            // strip
            String localURI = localSipURI.substring(colonIndex + 1);
            // off
            // "sip:"
            // "fosfor@nitrogen.epact.se"
            imPublishProcessing.sendPublish(localURI, subStatus);
        }
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}
