@Test
public void testMethodHeaders() {
    ArrayList<MethodHeader> mh = clel.getMethodHeaders();
    MethodHeader m;
    ArrayList<Byte> c;
    int i;
    for (i = 0; i < mh.size(); i++) {
        m = mh.get(i);
        c = m.getCode();
        if (i == 0) {
            assertEquals("MethodHeaders - flags", m.getFlags(), 0x2);
            assertEquals("MethodHeaders - maxstack", m.getMaxStack(), (short) 0x8);
            assertEquals("MethodHeaders - codesize", m.getCodeSize(), 0xd);
            assertEquals("MethodHeaders - localvarsigtoken", m.getLocalVarSigToken(), 0x0);
            assertEquals("MethodHeaders - code0", c.get(0), (byte) 0x0);
            assertEquals("MethodHeaders - code1", c.get(1), (byte) 0x72);
            assertEquals("MethodHeaders - code2", c.get(2), (byte) 0x1);
            assertEquals("MethodHeaders - code3", c.get(3), (byte) 0x0);
            assertEquals("MethodHeaders - code4", c.get(4), (byte) 0x0);
            assertEquals("MethodHeaders - code5", c.get(5), (byte) 0x70);
            assertEquals("MethodHeaders - code6", c.get(6), (byte) 0x28);
            assertEquals("MethodHeaders - code7", c.get(7), (byte) 0x03);
            assertEquals("MethodHeaders - code8", c.get(8), (byte) 0x0);
            assertEquals("MethodHeaders - code9", c.get(9), (byte) 0x0);
            assertEquals("MethodHeaders - code10", c.get(10), (byte) 0xa);
            assertEquals("MethodHeaders - code11", c.get(11), (byte) 0x0);
            assertEquals("MethodHeaders - code12", c.get(12), (byte) 0x2a);
        } else {
            assertEquals("MethodHeader - flags", m.getFlags(), 0x2);
            assertEquals("MethodHeaders - maxstack", m.getMaxStack(), (short) 0x8);
            assertEquals("MethodHeaders - codesize", m.getCodeSize(), 0x7);
            assertEquals("MethodHeaders - localvarsigtoken", m.getLocalVarSigToken(), 0x0);
            assertEquals("MethodHeaders - code0", c.get(0), (byte) 0x2);
            assertEquals("MethodHeaders - code1", c.get(1), (byte) 0x28);
            assertEquals("MethodHeaders - code2", c.get(2), (byte) 0x4);
            assertEquals("MethodHeaders - code3", c.get(3), (byte) 0x0);
            assertEquals("MethodHeaders - code4", c.get(4), (byte) 0x0);
            assertEquals("MethodHeaders - code5", c.get(5), (byte) 0xa);
            assertEquals("MethodHeaders - code6", c.get(6), (byte) 0x2a);
        }
    }
}
