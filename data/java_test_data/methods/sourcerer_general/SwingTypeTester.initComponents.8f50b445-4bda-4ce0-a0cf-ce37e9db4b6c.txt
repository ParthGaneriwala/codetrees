@ThreadConfined(ThreadName.EDT)
private void initComponents() {
    handler = new CharacterEventHandler();
    displayCanvas = new AnimatedCharacterDisplayCanvas();
    feedbackCanvas = new CharacterDisplayCanvas(this);
    quitButton = new JButton();
    startButton = new JButton();
    stopButton = new JButton();
    add(displayCanvas, BorderLayout.NORTH);
    add(feedbackCanvas, BorderLayout.CENTER);
    JPanel p = new JPanel();
    startButton.setLabel("Start");
    stopButton.setLabel("Stop");
    stopButton.setEnabled(false);
    quitButton.setLabel("Quit");
    p.add(startButton);
    p.add(stopButton);
    p.add(quitButton);
    add(p, BorderLayout.SOUTH);
    addWindowListener(new WindowAdapter() {

        public void windowClosing(WindowEvent evt) {
            System.out.println("windowClosing thread: " + Thread.currentThread());
            quit();
        }
    });
    feedbackCanvas.addKeyListener(new KeyAdapter() {

        public void keyPressed(KeyEvent ke) {
            char c = ke.getKeyChar();
            if (c != KeyEvent.CHAR_UNDEFINED)
                newCharacter((int) c);
        }
    });
    startButton.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent evt) {
            producer = new RandomCharacterGenerator();
            displayCanvas.setCharacterSource(producer);
            producer.start();
            displayCanvas.setDone(false);
            Thread t = new Thread(displayCanvas);
            t.setName(displayCanvas.THREAD_NAME);
            t.start();
            startButton.setEnabled(false);
            stopButton.setEnabled(true);
            feedbackCanvas.setEnabled(true);
            feedbackCanvas.requestFocus();
        }
    });
    stopButton.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent evt) {
            startButton.setEnabled(true);
            stopButton.setEnabled(false);
            producer.setDone();
            displayCanvas.setDone(true);
            feedbackCanvas.setEnabled(false);
        }
    });
    quitButton.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent evt) {
            quit();
        }
    });
    pack();
}
