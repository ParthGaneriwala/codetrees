private void reloadTaskView() {
    for (final RtmList currentEntry : taskListModel.getLists()) {
        final JTable groupTitleTable = createGroupTitleTable();
        groupTitleTable.setEnabled(false);
        final JTable taskDetailsTable = createTaskDetailsTable();
        taskDetailsTable.setSelectionModel(new TaskSelectionModel());
        taskGroupPanel.add(groupTitleTable, null);
        taskGroupPanel.add(taskDetailsTable, null);
        groupTitleTable.setModel(new TaskListTableModel(currentEntry));
        taskDetailsTable.setModel(new TasksTableModel(taskListModel.getTasks(currentEntry)));
        groupTitleTable.setRowHeight(30);
        taskDetailsTable.setRowHeight(30);
        taskDetailsTable.addMouseListener(new TasksTableMouseAdapter(taskDetailsTable, currentEntry));
        groupTitleTable.addMouseListener(new ListTableMouseAdapter(currentEntry, taskListModel.getTasks(currentEntry), taskDetailsTable, groupTitleTable));
        updateCellFormat(groupTitleTable, new ListTableCellRenderer(currentEntry), 0, 27);
        updateCellFormat(groupTitleTable, new ListTableCellRenderer(currentEntry), 2, 80);
        Vector<RtmTask> tasks = taskListModel.getTasks(currentEntry);
        updateCellFormat(taskDetailsTable, new TaskTableCellRenderer(tasks), 0, 12);
        updateCellFormat(taskDetailsTable, new TaskTableCellRenderer(tasks), 1, 25);
        updateCellFormat(taskDetailsTable, new TaskTableCellRenderer(tasks), 2, -1);
        updateCellFormat(taskDetailsTable, new TaskTableCellRenderer(tasks), 3, 100);
        updateCellFormat(taskDetailsTable, new TaskTableCellRenderer(tasks), 4, 30);
        updateCellFormat(taskDetailsTable, new TaskTableCellRenderer(tasks), 5, 30);
    }
}
