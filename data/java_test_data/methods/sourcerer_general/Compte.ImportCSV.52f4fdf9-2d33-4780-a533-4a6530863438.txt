private static Operation[] ImportCSV(String filename, String theDevise) throws Exception {
    try {
        if (!filename.contains("csv"))
            throw new Exception("Import qif extension file only");
        TextFile theImportFile = new TextFile(filename);
        String[] Lines = theImportFile.Get();
        // 
        // The nbOperation : nb lines beginning with a date
        int nbOperations = 0;
        for (int i = 0; i < Lines.length; i++) {
            if (Lines[i].length() > 0) {
                char c = Lines[i].charAt(0);
                if (Lines[i].split(";").length == 4 && (c == '0' || c == '1' || c == '2' || c == '3'))
                    nbOperations++;
                // The memo is with CR : 2 textfile lines for only one op
                if (Lines[i].split(";").length == 2 && (c == '0' || c == '1' || c == '2' || c == '3'))
                    nbOperations++;
            }
        }
        Operation[] operations;
        operations = new Operation[nbOperations];
        int year = 0, month = 0, day = 0;
        String num = "", payee = "", memo = "", category = "";
        long amountNum = 0L;
        int currentOp = 0;
        for (int i = 0; i < Lines.length; i++) {
            System.out.println(Lines[i]);
            if (Lines[i].length() > 0) {
                char c = Lines[i].charAt(0);
                // -- should be a function -------- c==01234 => IsDate(Lines[i].split(";")[0])
                if (Lines[i].split(";").length == 4 && (c == '0' || c == '1' || c == '2' || c == '3')) {
                    year = Integer.parseInt(Lines[i].substring(6, 10));
                    month = Integer.parseInt(Lines[i].substring(3, 5));
                    day = Integer.parseInt(Lines[i].substring(0, 2));
                    amountNum = Long.parseLong(Lines[i].split(";")[2].replace(",", "").replace(".", "").trim());
                    memo = Lines[i].split(";")[1];
                    payee = thePayees.Get(memo);
                    operations[currentOp] = new Operation(new Q(amountNum, 100L), theDevise, memo, category, num, payee, year, month, day);
                    memo = "";
                    payee = "";
                    year = 0;
                    month = 0;
                    day = 0;
                    amountNum = 0L;
                    currentOp++;
                } else // The memo is with return : 2 textfile lines for only one op
                if (Lines[i].split(";").length == 2 && (c == '0' || c == '1' || c == '2' || c == '3')) {
                    year = Integer.parseInt(Lines[i].substring(6, 10));
                    month = Integer.parseInt(Lines[i].substring(3, 5));
                    day = Integer.parseInt(Lines[i].substring(0, 2));
                    memo = Lines[i].split(";")[1] + " " + Lines[i + 1].split(";")[0];
                    amountNum = Long.parseLong(Lines[i + 1].split(";")[1].replace(",", "").replace(".", "").trim());
                    payee = thePayees.Get(memo);
                    operations[currentOp] = new Operation(new Q(amountNum, 100L), theDevise, memo, category, num, payee, year, month, day);
                    memo = "";
                    payee = "";
                    year = 0;
                    month = 0;
                    day = 0;
                    amountNum = 0L;
                    currentOp++;
                }
            }
        }
        return operations;
    } catch (Exception e) {
        System.out.println("ImportCSV : " + e.toString());
    }
    return null;
}
