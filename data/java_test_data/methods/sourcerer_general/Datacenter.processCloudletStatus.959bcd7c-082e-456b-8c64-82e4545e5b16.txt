protected void processCloudletStatus(SimEvent ev) {
    int cloudletId = 0;
    int userId = 0;
    int vmId = 0;
    int status = -1;
    try {
        // if a sender using cloudletXXX() methods
        int[] data = (int[]) ev.getData();
        cloudletId = data[0];
        userId = data[1];
        vmId = data[2];
        status = getVmAllocationPolicy().getHost(vmId, userId).getVm(userId, vmId).getCloudletScheduler().getCloudletStatus(cloudletId);
    }// if a sender using normal send() methods
     catch (ClassCastException c) {
        try {
            Cloudlet cl = (Cloudlet) ev.getData();
            cloudletId = cl.getCloudletId();
            userId = cl.getUserId();
            status = getVmAllocationPolicy().getHost(vmId, userId).getVm(userId, vmId).getCloudletScheduler().getCloudletStatus(cloudletId);
        } catch (Exception e) {
            Log.printLine(getName() + ": Error in processing CloudSimTags.CLOUDLET_STATUS");
            Log.printLine(e.getMessage());
            return;
        }
    } catch (Exception e) {
        Log.printLine(getName() + ": Error in processing CloudSimTags.CLOUDLET_STATUS");
        Log.printLine(e.getMessage());
        return;
    }
    int[] array = new int[3];
    array[0] = getId();
    array[1] = cloudletId;
    array[2] = status;
    int tag = CloudSimTags.CLOUDLET_STATUS;
    sendNow(userId, tag, array);
}
