@Test
public void testChains1() {
    Protein protein = new Protein();
    protein.addChain(new Protein().setSequence("ACD"));
    protein.addChain(new Protein().setSequence("ACDEF"));
    Assert.assertEquals(890.27862, protein.getMonoisotopicMass(), 0.0001);
    Assert.assertEquals(890.9348, protein.getAverageMass(), 0.0001);
    boolean caught = false;
    try {
        protein.setNumDisulfideBonds(2);
    } catch (Exception e) {
        caught = true;
    }
    Assert.assertTrue("Should not have allowed setting too many disulfides!", caught);
    protein.setNumDisulfideBonds(1);
    // Lose 2H for ea. disulfide
    Assert.assertEquals(888.26297, protein.getMonoisotopicMass(), 0.0001);
    Assert.assertEquals(888.91892, protein.getAverageMass(), 0.0001);
    Map<AminoAcid, Integer> compositionMap = protein.getAminoAcidComposition();
    Assert.assertEquals(compositionMap.get(AminoAcid.ALANINE).intValue(), 2);
    Assert.assertEquals(compositionMap.get(AminoAcid.CYSTEINE).intValue(), 2);
    Assert.assertEquals(compositionMap.get(AminoAcid.PHENYLALANINE).intValue(), 1);
    Assert.assertEquals(compositionMap.get(AminoAcid.GLUTAMIC_ACID).intValue(), 1);
    Assert.assertEquals(compositionMap.get(AminoAcid.METHIONINE).intValue(), 0);
    Assert.assertEquals(3.81, protein.getIsoelectricPoint(), 0.1);
    Assert.assertEquals(125, protein.getExtinctionCoeff(), 0.01);
}
