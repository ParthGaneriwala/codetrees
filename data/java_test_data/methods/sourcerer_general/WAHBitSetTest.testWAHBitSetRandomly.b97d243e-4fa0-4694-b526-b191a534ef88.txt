public void testWAHBitSetRandomly() throws Exception {
    double[] fills = new double[] { 0.001, 0.005, 0.01, 0.05, 0.1 };
    int[] maxSizes = new int[] { 1000, 10000, 100000, 1000000 };
    for (int i = 0; i < maxSizes.length; i++) {
        int maxSize = maxSizes[i];
        System.out.println("maxSize = " + maxSize);
        for (int j = 0; j < fills.length; j++) {
            double fill = fills[j];
            System.out.println("fill = " + fill);
            BitSet set1 = getBitSet(maxSize, fill);
            BitSet set2 = getBitSet(maxSize, fill);
            WAHBitSet wSet1 = new WAHBitSet(set1);
            WAHBitSet wSet2 = new WAHBitSet(set2);
            checkEquality(set1, wSet1);
            checkEquality(set2, wSet2);
            BitSet set3 = (BitSet) set1.clone();
            set3.and(set2);
            BitSet set4 = (BitSet) set1.clone();
            set4.or(set2);
            WAHBitSet wSet3 = wSet1.and(wSet2);
            WAHBitSet wSet4 = wSet1.or(wSet2);
            if (wSet3.cardinality() > 0) {
                assertTrue(wSet1.andSize(wSet2) > 0);
            }
            assertEquals(wSet3.cardinality(), wSet1.andSize(wSet2));
            checkEquality(set3, wSet3);
            checkEquality(set4, wSet4);
        }
    }
}
