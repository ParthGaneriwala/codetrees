public HashMap<String, List<Pattern>> read(String fileURL, boolean calcMINMAX) {
    HashMap<String, List<Pattern>> pointsMap = new HashMap<String, List<Pattern>>();
    File file = new File(fileURL);
    double minX = Double.MAX_VALUE;
    double minY = Double.MAX_VALUE;
    double maxX = 0;
    double maxY = 0;
    if (calcMINMAX) {
        minVector = new double[2];
        maxVector = new double[2];
    }
    try {
        Scanner scanner = new Scanner(file);
        while (scanner.hasNextLine()) {
            String line = scanner.nextLine();
            String[] tokens = line.split("\t");
            if (tokens.length == 0)
                break;
            this.dimensions = tokens.length - 1;
            String classLabel = tokens[0];
            double[] vector = new double[dimensions];
            for (int i = 0; i < dimensions; i++) {
                vector[i] = Double.parseDouble(tokens[i + 1]);
            }
            if (calcMINMAX) {
                double x = vector[0];
                double y = vector[1];
                if (x < minX) {
                    minX = x;
                    minVector[0] = x;
                } else if (x > maxX) {
                    maxX = x;
                    maxVector[0] = x;
                }
                if (y < minY) {
                    minY = y;
                    minVector[1] = y;
                } else if (y > maxY) {
                    maxY = y;
                    maxVector[1] = y;
                }
            }
            Pattern pattern = new Pattern(vector, classLabel);
            if (!pointsMap.containsKey(classLabel))
                pointsMap.put(classLabel, new ArrayList<Pattern>());
            pointsMap.get(classLabel).add(pattern);
        }
    } catch (FileNotFoundException e) {
        e.printStackTrace();
    }
    return pointsMap;
}
