public ActionForward Search(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String username = (String) request.getSession().getAttribute("username");
    DynaValidatorForm searchForm = (DynaValidatorForm) form;
    String keyword = (String) searchForm.get("keyword");
    String type = (String) searchForm.get("type");
    String postType = (String) searchForm.get("postType");
    boolean free = true;
    // else if username exist then get value choose by user
    if (username != null) {
        free = (Boolean) searchForm.get("free");
    }
    Collection recipeList = null;
    Collection tipList = null;
    if (// search by Tip
    postType.equalsIgnoreCase("Tip")) {
        TipDAO tipDAO = new TipDAO();
        if (// search Tip by Author
        type.equalsIgnoreCase("author")) {
            tipList = tipDAO.readByUsernameAndFree(keyword, free);
        } else {
            // search Tip by Title
            tipList = tipDAO.readByTitleAndFree("%" + keyword + "%", free);
        }
        // set search type is tip helper display search result
        request.setAttribute("searchType", "Tip");
    } else // search by Recipe
    {
        RecipeDAO recipeDAO = new RecipeDAO();
        if (// search Tip by Author
        type.equalsIgnoreCase("author")) {
            recipeList = recipeDAO.readByUsernameAndFree(keyword, free);
            Iterator it = recipeList.iterator();
            FeedbackRecipeDAO feedbackRecipeDAO = new FeedbackRecipeDAO();
            CategoryRecipeDAO categoryRecipeDAO = new CategoryRecipeDAO();
            while (it.hasNext()) {
                RecipeDTO recipeDTO = (RecipeDTO) it.next();
                recipeDTO.setCountFeedback(feedbackRecipeDAO.readCountFeedBack(recipeDTO.getRecipeID()));
                CategoryRecipeDTO cateDTO = (CategoryRecipeDTO) categoryRecipeDAO.readById(recipeDTO.getCategory().getCategoryID());
                recipeDTO.setCategory(cateDTO);
            }
        } else {
            // search Tip by Title
            recipeList = recipeDAO.readByTitleAndFree("%" + keyword + "%", free);
        }
        // set search type is Recip helper display search result
        request.setAttribute("searchType", "Recipe");
    }
    request.setAttribute("keyword", keyword);
    request.setAttribute("tipList", tipList);
    request.setAttribute("recipeList", recipeList);
    request.setAttribute("from", "search");
    return mapping.findForward(SUCCESS);
}
