public String executeCommandDefault(ActionContext context) {
    ApplicationPrefs prefs = getApplicationPrefs(context);
    // Make sure the user is an admin
    if (!getUser(context).getAccessAdmin()) {
        return "PermissionError";
    }
    NumberFormat formatter = NumberFormat.getInstance();
    Connection db = null;
    // Load free disk space
    long size = FileUtils.getFreeBytes(getPref(context, "FILELIBRARY"));
    context.getRequest().setAttribute("diskFree", FileUtils.getRelativeSize(size, null));
    // File library location
    context.getRequest().setAttribute("diskPath", getPref(context, "FILELIBRARY"));
    // Application version
    context.getRequest().setAttribute("applicationVersion", ApplicationVersion.VERSION);
    // set the Indexer...
    IIndexerService indexer = IndexerFactory.getInstance().getIndexerService();
    context.getRequest().setAttribute(Constants.DIRECTORY_INDEX, FileUtils.getRelativeSize(indexer.getIndexSizeInBytes(Constants.INDEXER_DIRECTORY), null));
    try {
        db = getConnection(context);
        // Load project count
        int projectCount = ProjectList.buildProjectCount(db);
        context.getRequest().setAttribute("projectCount", formatter.format(projectCount));
        // Load user count
        int userCount = UserList.buildUserCount(db);
        context.getRequest().setAttribute("userCount", formatter.format(userCount));
        // Document library size
        FileItemVersionList fileItemList = new FileItemVersionList();
        long fileSize = fileItemList.queryFileSize(db);
        context.getRequest().setAttribute("fileSize", FileUtils.getRelativeSize(fileSize, null));
        // Services Id
        context.getRequest().setAttribute("servicesId", prefs.get("CONCURSIVE_SERVICES.ID"));
    } catch (Exception e) {
        context.getRequest().setAttribute("Error", e);
        return ("SystemError");
    } finally {
        freeConnection(context, db);
    }
    return "DefaultOK";
}
