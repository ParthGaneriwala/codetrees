public boolean writeFile(ContactManager conM, String filename) {
    try {
        XSSFWorkbook wb = new XSSFWorkbook();
        FileOutputStream fileOut = new FileOutputStream(filename);
        XSSFSheet sheet = wb.createSheet("Sheet_1");
        XSSFRow row = sheet.createRow(0);
        int type = XSSFCell.CELL_TYPE_STRING;
        row.createCell(0).setCellValue("name");
        row.createCell(1).setCellValue("phoneNumber");
        row.createCell(2).setCellValue("fixedTel");
        row.createCell(3).setCellValue("email");
        row.createCell(4).setCellValue("qq");
        row.createCell(5).setCellValue("nick");
        row.createCell(6).setCellValue("sex");
        row.createCell(7).setCellValue("birthday");
        row.createCell(8).setCellValue("icon");
        row.createCell(9).setCellValue("address");
        row.createCell(10).setCellValue("workspace");
        row.createCell(11).setCellValue("zipCode");
        row.createCell(12).setCellValue("homePage");
        row.createCell(13).setCellValue("otherWay");
        row.createCell(14).setCellValue("normal");
        row.createCell(15).setCellValue("relation");
        ArrayList<Contact> contacts = conM.getContacts();
        for (int i = 0; i < contacts.size(); i++) {
            Contact contact = contacts.get(i);
            row = sheet.createRow(i + 1);
            row.createCell(0, Cell.CELL_TYPE_STRING).setCellValue(contact.getName());
            row.createCell(1, Cell.CELL_TYPE_STRING).setCellValue(" " + contact.getPhoneNumber() + " ");
            row.createCell(2, Cell.CELL_TYPE_STRING).setCellValue(" " + contact.getFixedTel() + " ");
            row.createCell(3, Cell.CELL_TYPE_STRING).setCellValue(contact.getEmail());
            row.createCell(4, Cell.CELL_TYPE_STRING).setCellValue(" " + contact.getQq() + " ");
            row.createCell(5, Cell.CELL_TYPE_STRING).setCellValue(contact.getNick());
            switch(contact.getSex()) {
                case 1:
                    row.createCell(6, Cell.CELL_TYPE_STRING).setCellValue("M");
                    break;
                case 2:
                    row.createCell(6, Cell.CELL_TYPE_STRING).setCellValue("F");
                    break;
                default:
                    row.createCell(6, Cell.CELL_TYPE_STRING).setCellValue("");
                    break;
            }
            String birthday = contact.getBirthday().toString();
            row.createCell(7, Cell.CELL_TYPE_STRING).setCellValue(birthday);
            row.createCell(8, Cell.CELL_TYPE_STRING).setCellValue(contact.getIcon());
            row.createCell(9, Cell.CELL_TYPE_STRING).setCellValue(contact.getAddress());
            row.createCell(10, Cell.CELL_TYPE_STRING).setCellValue(contact.getWorkplace());
            row.createCell(11, Cell.CELL_TYPE_STRING).setCellValue(" " + contact.getZipCode() + " ");
            row.createCell(12, Cell.CELL_TYPE_STRING).setCellValue(contact.getHomepage());
            // add otherWays
            ArrayList<String> otherWays = contact.getOtherWay();
            String otherWayStr = "";
            if (otherWays.size() > 0) {
                for (int j = 0; j < otherWays.size() - 1; j++) {
                    otherWayStr += otherWays.get(j);
                    otherWayStr += ";";
                }
                otherWayStr += otherWays.get(otherWays.size() - 1);
            }
            row.createCell(13, Cell.CELL_TYPE_STRING).setCellValue(otherWayStr);
            // add NormalTag
            ArrayList<NormalTag> normals = contact.getNormal();
            String normalStr = "";
            if (normals.size() > 0) {
                for (int j = 0; j < normals.size() - 1; j++) {
                    normalStr += normals.get(j).getName();
                    normalStr += ";";
                }
                normalStr += normals.get(normals.size() - 1).getName();
            }
            row.createCell(14, Cell.CELL_TYPE_STRING).setCellValue(normalStr);
            // add relation
            ArrayList<RelationTag> relations = contact.getRelation();
            String relationStr = "";
            for (int j = 0; j < relations.size(); j++) {
                RelationTag relationTag = relations.get(j);
                ArrayList<Contact> cons = relationTag.getContacts(contact);
                for (int k = 0; k < cons.size(); k++) {
                    relationStr = relationStr + "<" + relationTag.getName() + "," + contact.getName() + "," + cons.get(k).getName() + ">" + ";";
                }
            }
            if (!relationStr.isEmpty())
                relationStr = relationStr.substring(0, relationStr.length() - 1);
            row.createCell(15, Cell.CELL_TYPE_STRING).setCellValue(relationStr);
        }
        wb.write(fileOut);
        fileOut.close();
    } catch (Exception e) {
        e.printStackTrace();
        return false;
    }
    return true;
}
