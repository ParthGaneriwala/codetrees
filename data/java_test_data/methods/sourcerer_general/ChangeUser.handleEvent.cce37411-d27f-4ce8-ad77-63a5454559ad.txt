@Override
public void handleEvent(Event e) {
    // logowanie
    final User selectedUser = CoolKey.getUsers().get(users.getSelectionIndex());
    final boolean[] isPasswordValid = new boolean[1];
    if ((!onStartup && CoolKey.getUser().equals(selectedUser)) || selectedUser.validatePassword(null)) {
        isPasswordValid[0] = true;
    } else {
        final Shell dialog = new Shell(GUI.shell, SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL);
        dialog.setText("Profil zabezpieczony hasłem");
        FormLayout formLayout = new FormLayout();
        formLayout.marginWidth = 10;
        formLayout.marginHeight = 10;
        formLayout.spacing = 10;
        dialog.setLayout(formLayout);
        Label label = new Label(dialog, SWT.NONE);
        label.setText("Podaj hasło:");
        FormData data = new FormData();
        label.setLayoutData(data);
        Button cancel = new Button(dialog, SWT.PUSH);
        cancel.setText("Anuluj");
        data = new FormData();
        data.width = 60;
        data.right = new FormAttachment(100, 0);
        data.bottom = new FormAttachment(100, 0);
        cancel.setLayoutData(data);
        cancel.addListener(SWT.Selection, new Listener() {

            @Override
            public void handleEvent(Event e) {
                dialog.close();
            }
        });
        final Text passwordText = new Text(dialog, SWT.BORDER);
        passwordText.setEchoChar('*');
        data = new FormData();
        data.width = 200;
        data.left = new FormAttachment(label, 0, SWT.DEFAULT);
        data.right = new FormAttachment(100, 0);
        data.top = new FormAttachment(label, 0, SWT.CENTER);
        data.bottom = new FormAttachment(cancel, 0, SWT.DEFAULT);
        passwordText.setLayoutData(data);
        Button ok = new Button(dialog, SWT.PUSH);
        ok.setText("OK");
        data = new FormData();
        data.width = 60;
        data.right = new FormAttachment(cancel, 0, SWT.DEFAULT);
        data.bottom = new FormAttachment(100, 0);
        ok.setLayoutData(data);
        Listener confirmPassword = new Listener() {

            @Override
            public void handleEvent(Event e) {
                if (selectedUser.validatePassword(passwordText.getText())) {
                    isPasswordValid[0] = true;
                    dialog.close();
                } else {
                    MessageBox messageBox = new MessageBox(GUI.shell, SWT.ICON_WARNING);
                    messageBox.setText("Hasło");
                    messageBox.setMessage("Podane hasło jest nieprawidłowe.");
                    messageBox.open();
                }
            }
        };
        ok.addListener(SWT.Selection, confirmPassword);
        passwordText.addListener(SWT.DefaultSelection, confirmPassword);
        passwordText.setFocus();
        dialog.pack();
        dialog.open();
        while (!dialog.isDisposed()) {
            if (!GUI.display.readAndDispatch())
                GUI.display.sleep();
        }
    }
    // zmiana użytkownika
    if (isPasswordValid[0]) {
        if (!CoolKey.getUser().equals(CoolKey.getUsers().get(users.getSelectionIndex()))) {
            if (CoolKey.getCurrentTest().isStarted()) {
                CoolKey.getCurrentTest().restart();
            }
            GUI.graphs.reset();
        }
        CoolKey.selectUser(users.getSelectionIndex());
        changeUserShell.dispose();
        GUI.refresh();
    }
}
