protected void createSShell() {
    GridLayout gridLayout = new GridLayout(1, false);
    HashMap<String, String> fileMap;
    sShell = new Shell(SWT.TITLE | SWT.CLOSE | SWT.BORDER | SWT.RESIZE | SWT.APPLICATION_MODAL);
    sShell.setText("Shell");
    sShell.setSize(new Point(500, 400));
    sShell.setLayout(gridLayout);
    sShell.addKeyListener(new InternalProxyTableEventHandler());
    sShell.addDisposeListener(new InternalProxyTableEventHandler());
    try {
        this.toolBar = new ToolBar(sShell, SWT.HORIZONTAL);
        // this.coolBar.setLayoutData(new GridData(SWT));
        this.toolBar.setLayout(new FillLayout());
        this.newListRowItem = new ToolItem(toolBar, SWT.FLAT);
        this.newListRowItem.setImage(new Image(sShell.getDisplay(), ImageFileConstants.ADD_ICON));
        this.newListRowItem.addSelectionListener(new InternalProxyTableEventHandler());
        this.newListRowItem.setToolTipText("Add Row");
        this.delListRowItem = new ToolItem(toolBar, SWT.FLAT);
        this.delListRowItem.setImage(new Image(sShell.getDisplay(), ImageFileConstants.REMOVE_ICON));
        this.delListRowItem.addSelectionListener(new InternalProxyTableEventHandler());
        this.delListRowItem.setToolTipText("Delete Row");
    } catch (SWTException se) {
    }
    GridData gridData = new GridData(GridData.FILL_HORIZONTAL);
    GridData gridData2 = new GridData(GridData.FILL_BOTH);
    gridData.grabExcessHorizontalSpace = true;
    gridData2.grabExcessHorizontalSpace = true;
    gridData2.grabExcessVerticalSpace = true;
    this.lblProxyEditor = new Label(sShell, SWT.NONE);
    this.lblProxyEditor.setLayoutData(gridData);
    this.lblProxyEditor.setText("Mapping Table:");
    tblEditor = new Table(sShell, SWT.SINGLE | SWT.BORDER | SWT.FULL_SELECTION);
    tblEditor.setLinesVisible(true);
    tblEditor.setHeaderVisible(true);
    tblEditor.setLayoutData(gridData2);
    tblEditor.addMouseListener(new InternalProxyTableEventHandler());
    tblEditor.addKeyListener(new InternalProxyTableEventHandler());
    TableColumn col = new TableColumn(tblEditor, SWT.NONE);
    col.setText("URL");
    col.setWidth(200);
    col = new TableColumn(tblEditor, SWT.NONE);
    col.setText("Local Filename/Path");
    col.setWidth(300);
    if (this.isSystemWide) {
        fileMap = SettingsManager.getInstance().getMapping();
    } else {
        fileMap = new HashMap<String, String>();
        for (String s : this.errorURLList) {
            fileMap.put(s, "");
        }
    }
    for (String s : fileMap.keySet()) {
        TableItem test = new TableItem(tblEditor, SWT.NONE);
        Image image = new Image(null, 1, ROW_HEIGHT);
        test.setImage(image);
        test.setText(0, s);
        test.setText(1, fileMap.get(s));
    }
    if (fileMap.keySet().size() == 0) {
        TableItem test = new TableItem(tblEditor, SWT.NONE);
        Image image = new Image(null, 1, ROW_HEIGHT);
        test.setImage(image);
        test.setText(0, SettingsManager.DEFAULT_URL);
        test.setText(1, SettingsManager.DEFAULT_FILENAME);
    }
    editor = new TableEditor(tblEditor);
    tblEditor.addSelectionListener(new InternalProxyTableEventHandler());
}
