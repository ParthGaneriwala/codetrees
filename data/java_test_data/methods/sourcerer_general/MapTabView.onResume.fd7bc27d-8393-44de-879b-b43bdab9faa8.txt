@Override
protected void onResume() {
    CSLog.e(TAG, "Map view resumed.");
    // Load preferences file
    SharedPreferences settings = getSharedPreferences(PREFS_NAME, 0);
    // Get preference for whether service started or not
    socketData = settings.getBoolean("serviceStart", false);
    if (!socketData) {
        // manage the location changes.
        try {
            initLocationManager();
            CSLog.i(TAG, "Load location manager");
            Location currentLocation = lm.getLastKnownLocation(LocationManager.GPS_PROVIDER);
            CSLog.i(TAG, "Load current location: " + currentLocation);
            curGeoStamp = new GeoStamp(currentLocation.getLatitude(), currentLocation.getLongitude());
            curLocPoint = curGeoStamp.getGeoPoint();
            CSLog.i(TAG, "Load current geo point: " + curLocPoint);
        } catch (NullPointerException ne) {
            Toast.makeText(getApplicationContext(), "Location was not set! Closing App!", Toast.LENGTH_LONG).show();
            finish();
        }
    } else {
        // Loads default geo stamp
        if (defaultStamp) {
            curGeoStamp = new GeoStamp(DEFAULT_LAT, DEFAULT_LON);
            curLocPoint = curGeoStamp.getGeoPoint();
            defaultStamp = false;
        }
        // Get port number from preferences
        final String httpIDS = settings.getString("portnumber", "");
        int httpID = HTTP_ID;
        if (!httpIDS.equals("")) {
            httpID = Integer.parseInt(httpIDS);
        }
        CSLog.i(TAG, "Got httpID: " + httpID);
        // Creates a server socket and starts the socket listener
        // serverSocket = new ServerSocket(portno);
        // new Thread(new SocketLocationListener(serverSocket)).start();
        httpListener = new HTTPListener();
        httpListener.execute(httpID);
    // } catch (IOException e) {
    // CSLog.e(TAG, e.getMessage());
    // }
    }
    // Load map with all pins
    loadMap(false);
    super.onResume();
}
