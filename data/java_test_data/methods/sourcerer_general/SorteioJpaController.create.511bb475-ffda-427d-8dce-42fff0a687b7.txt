public void create(Sorteio sorteio) throws PreexistingEntityException, Exception {
    if (sorteio.getOrdem() == null) {
        sorteio.setOrdem(new HashSet<Ordem>());
    }
    EntityManager em = null;
    try {
        em = getEntityManager();
        em.getTransaction().begin();
        NormaComplementar normaComplementar = sorteio.getNormaComplementar();
        if (normaComplementar != null) {
            normaComplementar = em.getReference(normaComplementar.getClass(), normaComplementar.getId());
            sorteio.setNormaComplementar(normaComplementar);
        }
        Set<Ordem> attachedOrdem = new HashSet<Ordem>();
        for (Ordem ordemOrdemToAttach : sorteio.getOrdem()) {
            ordemOrdemToAttach = em.getReference(ordemOrdemToAttach.getClass(), ordemOrdemToAttach.getId());
            attachedOrdem.add(ordemOrdemToAttach);
        }
        sorteio.setOrdem(attachedOrdem);
        em.persist(sorteio);
        if (normaComplementar != null) {
            normaComplementar.getSorteio().add(sorteio);
            normaComplementar = em.merge(normaComplementar);
        }
        for (Ordem ordemOrdem : sorteio.getOrdem()) {
            Sorteio oldSorteioOfOrdemOrdem = ordemOrdem.getSorteio();
            ordemOrdem.setSorteio(sorteio);
            ordemOrdem = em.merge(ordemOrdem);
            if (oldSorteioOfOrdemOrdem != null) {
                oldSorteioOfOrdemOrdem.getOrdem().remove(ordemOrdem);
                oldSorteioOfOrdemOrdem = em.merge(oldSorteioOfOrdemOrdem);
            }
        }
        em.getTransaction().commit();
    } catch (Exception ex) {
        if (findSorteio(sorteio.getId()) != null) {
            throw new PreexistingEntityException("Sorteio " + sorteio + " already exists.", ex);
        }
        throw ex;
    } finally {
        if (em != null) {
            em.close();
        }
    }
}
