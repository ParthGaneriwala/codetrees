public void initialize() {
    Iterator it = initialCheckBoxes.entrySet().iterator();
    while (it.hasNext()) {
        Map.Entry entry = (Map.Entry) it.next();
        String key = (String) entry.getKey();
        Button b = (Button) entry.getValue();
        b.setSelection(preferences.getBoolean("collapse." + key));
    }
    it = foldCheckBoxes.entrySet().iterator();
    while (it.hasNext()) {
        Map.Entry entry = (Map.Entry) it.next();
        String key = (String) entry.getKey();
        Button b = (Button) entry.getValue();
        b.setSelection(preferences.getBoolean("fold." + key));
        Button counterpart = (Button) initialCheckBoxes.get(key);
        counterpart.setEnabled(b.getSelection());
    }
    minimumLinesField.setText(String.valueOf(preferences.getInt(PreferenceKeys.MINIMUM_SIZE)));
    startUserDefineField.setText(String.valueOf(preferences.getString(PreferenceKeys.USER_DEFINED_START)));
    endUserDefineField.setText(String.valueOf(preferences.getString(PreferenceKeys.USER_DEFINED_END)));
    typeLastLine.setSelection(preferences.getBoolean(PreferenceKeys.LAST_LINE_TYPES));
    methodLastLine.setSelection(preferences.getBoolean(PreferenceKeys.LAST_LINE_METHODS));
    controlLastLine.setSelection(preferences.getBoolean(PreferenceKeys.LAST_LINE_CONTROLS));
    commentLastLine.setSelection(preferences.getBoolean(PreferenceKeys.LAST_LINE_COMMENTS));
    imageSelector.select(imageSelector.indexOf(preferences.getString(PreferenceKeys.FOLDING_ICONS)));
    updateUserDefinedTable();
}
