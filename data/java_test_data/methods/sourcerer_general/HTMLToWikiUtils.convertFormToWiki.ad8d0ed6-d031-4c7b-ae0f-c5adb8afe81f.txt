public static void convertFormToWiki(CustomForm form, StringBuffer sb) {
    if (form != null) {
        if (StringUtils.hasText(form.getName())) {
            sb.append("[{form name=\"" + form.getName() + "\"}]").append(CRLF);
        } else {
            sb.append("[{form name=\"wikiForm\"}]").append(CRLF);
        }
        // process the groups
        for (CustomFormGroup group : form) {
            sb.append("---").append(CRLF);
            sb.append("[{group value=\"").append(group.getName()).append("\"");
            if (!group.getDisplay()) {
                sb.append(" display=\"false\"");
            }
            sb.append("}]").append(CRLF);
            // process the fields
            for (CustomFormField field : group) {
                sb.append("---").append(CRLF);
                // Field label
                sb.append("[{label value=\"").append(field.getLabel()).append("\"");
                if (!field.getLabelDisplay()) {
                    sb.append(" display=\"false\"");
                }
                sb.append("}]").append(CRLF);
                // Field type definition
                sb.append("[{field");
                sb.append(" type=\"").append(field.getTypeAsString()).append("\"");
                sb.append(" name=\"").append(field.getName()).append("\"");
                if (field.getMaxLength() > 0) {
                    sb.append(" maxlength=\"").append(field.getMaxLength()).append("\"");
                }
                if (field.getSize() > 0) {
                    sb.append(" size=\"").append(field.getSize()).append("\"");
                }
                if (StringUtils.hasText(field.getDefaultValue())) {
                    // Handle multi-line values
                    String thisValue = StringUtils.replaceReturns(field.getDefaultValue(), "^");
                    sb.append(" value=\"").append(thisValue).append("\"");
                }
                if (field.getRequired()) {
                    sb.append(" required=\"").append("true").append("\"");
                }
                if (field.getColumns() > -1) {
                    sb.append(" cols=\"").append(field.getColumns()).append("\"");
                }
                if (field.getRows() > -1) {
                    sb.append(" rows=\"").append(field.getRows()).append("\"");
                }
                if (StringUtils.hasText(field.getOptions())) {
                    // TODO: Handle quoted options
                    sb.append(" options=\"").append(field.getOptions()).append("\"");
                }
                sb.append("}]").append(CRLF);
                // Field additional text description
                if (StringUtils.hasText(field.getAdditionalText())) {
                    sb.append("[{description value=\"").append(field.getAdditionalText()).append("\"}]").append(CRLF);
                }
                // Entered value from user
                if (StringUtils.hasText(field.getValue())) {
                    // Handle multi-line values
                    String thisValue = StringUtils.replaceReturns(field.getValue(), "^");
                    sb.append("[{entry");
                    sb.append(" value=\"").append(thisValue).append("\"");
                    if (StringUtils.hasText(field.getValueCurrency())) {
                        sb.append(" currency=\"").append(field.getValueCurrency()).append("\"");
                    }
                    sb.append("}]").append(CRLF);
                }
            }
        }
        sb.append("+++");
    }
}
