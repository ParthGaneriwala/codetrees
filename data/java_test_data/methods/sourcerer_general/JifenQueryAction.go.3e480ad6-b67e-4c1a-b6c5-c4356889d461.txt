@Override
protected String go() throws Exception {
    // SysUser lawer = ;
    DetachedCriteria detachedCriteria = DetachedCriteria.forClass(Lawyerlessonxf.class);
    // 根据查询的年来查,默认为当前时间所在的积分年
    BasicService basicService = (BasicService) getBean("basicService");
    if (userid == 0) {
        this.lawer = getLoginUser();
        detachedCriteria.add(Restrictions.eq("lawer.userid", getLoginUser().getUserid()));
    } else {
        this.lawer = (SysUser) basicService.get(SysUser.class, userid);
        // detachedCriteria.add(Restrictions.eq("lawer", lawer));
        detachedCriteria.add(Restrictions.eq("lawer.userid", userid));
    }
    String nianshen = CommonDatas.SysParameter.get("nianshen").toString();
    // 起始时间是现在的时间基础上加1
    Date temp = dfdate.parse(year + "-" + nianshen);
    // 年审时间的基础上加1的毫秒值
    long time = temp.getTime() + 24 * 60 * 60 * 1000;
    // 得到这个时间
    temp.setTime(time);
    this.from = dfdate.format(temp);
    this.end = (year + 1) + "-" + nianshen;
    // Date _from = dftime.parse(from + " 0:0:0");
    Date _from = temp;
    Date _end = dftime.parse(end + " 23:59:59");
    detachedCriteria.add(Restrictions.between("lastupdate", _from, _end));
    detachedCriteria.addOrder(Order.desc("lastupdate"));
    this.page = basicService.findPageByCriteria(detachedCriteria, Integer.MAX_VALUE, pageNo);
    // detachedCriteria = DetachedCriteria.forClass(Lawyerlessonxf.class);
    if (userid == 0) {
        userid = getLoginUser().getUserid();
    // detachedCriteria.setProjection(Projections.projectionList().add(Projections.sum("pxxf")).add(Projections.groupProperty("learnmode")))
    // .add(Restrictions.eq("lawer.userid", getLoginUser().getUserid())).add(Restrictions.between("lastupdate", _from, _end));
    }
    // else {
    // detachedCriteria.setProjection(Projections.projectionList().add(Projections.sum("pxxf")).add(Projections.groupProperty("learnmode")))
    // .add(Restrictions.eq("lawer.userid", userid)).add(Restrictions.between("lastupdate", _from, _end));
    // }
    String adminsql = "select sum(a.pxxf),a.learnmode from lawyerlessonxf a,sys_user b where a.userid=b.userid and b.userid=" + userid + " and (UNIX_TIMESTAMP(a.lastupdate) between " + _from.getTime() / 1000 + " and " + _end.getTime() / 1000 + ") group by a.learnmode";
    // tongjilist = basicService.findAllByCriteria(detachedCriteria);
    List tongjilist = basicService.findBySqlQuery(adminsql);
    int tongjilength = tongjilist == null ? 0 : tongjilist.size();
    for (int i = 0; i < tongjilength; i++) {
        Object[] obj = (Object[]) tongjilist.get(i);
        if (obj[1].equals("现场培训")) {
            this.localecnt = ((Double) obj[0]).doubleValue();
        } else if (obj[1].equals("在线视频")) {
            this.video = ((Double) obj[0]).doubleValue();
        } else if (obj[1].equals("文本课件")) {
            this.wenbenkejian = ((Double) obj[0]).doubleValue();
        } else if (obj[1].equals("补登积分")) {
            this.budeng = ((Double) obj[0]).doubleValue();
        }
    }
    // TODO Auto-generated method stub
    return SUCCESS;
}
