public boolean insert(Connection db) throws SQLException {
    if (!isValid()) {
        return false;
    }
    boolean commit = db.getAutoCommit();
    try {
        if (commit) {
            db.setAutoCommit(false);
        }
        StringBuffer sql = new StringBuffer();
        sql.append("INSERT INTO project_calendar_meeting_attendees " + "(meeting_id, user_id, is_tentative, enteredby, modifiedby ");
        if (entered != null) {
            sql.append(", entered ");
        }
        if (dimdimStatus != -1) {
            sql.append(", dimdim_status ");
        }
        if (modified != null) {
            sql.append(", modified ");
        }
        sql.append(") VALUES (?, ?, ?, ?, ? ");
        if (entered != null) {
            sql.append(", ? ");
        }
        if (dimdimStatus != -1) {
            sql.append(", ? ");
        }
        if (modified != null) {
            sql.append(", ? ");
        }
        sql.append(") ");
        int i = 0;
        // Insert the Meeting
        PreparedStatement pst = db.prepareStatement(sql.toString());
        pst.setInt(++i, meetingId);
        pst.setInt(++i, userId);
        pst.setBoolean(++i, isTentative);
        pst.setInt(++i, enteredBy);
        pst.setInt(++i, modifiedBy);
        if (entered != null) {
            pst.setTimestamp(++i, entered);
        }
        if (dimdimStatus != -1) {
            DatabaseUtils.setInt(pst, ++i, dimdimStatus);
        }
        if (modified != null) {
            pst.setTimestamp(++i, modified);
        }
        pst.execute();
        pst.close();
        id = DatabaseUtils.getCurrVal(db, "project_calendar_meeting_attendees_attendee_id_seq", -1);
        if (commit) {
            db.commit();
        }
    } catch (SQLException e) {
        if (commit) {
            db.rollback();
        }
        throw e;
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
    return true;
}
