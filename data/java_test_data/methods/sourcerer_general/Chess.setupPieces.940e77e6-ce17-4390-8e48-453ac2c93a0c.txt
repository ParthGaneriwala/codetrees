@Override
public void setupPieces() {
    int length = board.getGrid().length;
    // sets up player 1 pawns
    for (int i = 0; i < length; i++) {
        board.getGrid()[i][1].setPiece(new Pawn());
        board.getGrid()[i][1].getPiece().player = true;
        board.getGrid()[i][1].setOccupied(true);
    }
    // sets up player 1 rooks
    board.getGrid()[0][0].setPiece(new Rook());
    board.getGrid()[0][0].getPiece().player = true;
    board.getGrid()[0][0].setOccupied(true);
    board.getGrid()[length - 1][0].setPiece(new Rook());
    board.getGrid()[length - 1][0].getPiece().player = true;
    board.getGrid()[length - 1][0].setOccupied(true);
    // sets up player 1 knights
    board.getGrid()[1][0].setPiece(new Knight());
    board.getGrid()[1][0].getPiece().player = true;
    board.getGrid()[1][0].setOccupied(true);
    board.getGrid()[length - 2][0].setPiece(new Knight());
    board.getGrid()[length - 2][0].getPiece().player = true;
    board.getGrid()[length - 2][0].setOccupied(true);
    // sets up player 1 bishops
    board.getGrid()[2][0].setPiece(new Bishop());
    board.getGrid()[2][0].getPiece().player = true;
    board.getGrid()[2][0].setOccupied(true);
    board.getGrid()[length - 3][0].setPiece(new Bishop());
    board.getGrid()[length - 3][0].getPiece().player = true;
    board.getGrid()[length - 3][0].setOccupied(true);
    // sets up player 1 queen
    board.getGrid()[3][0].setPiece(new Queen());
    board.getGrid()[3][0].getPiece().player = true;
    board.getGrid()[3][0].setOccupied(true);
    // sets up player 1 king
    board.getGrid()[4][0].setPiece(new King());
    board.getGrid()[4][0].getPiece().player = true;
    board.getGrid()[4][0].setOccupied(true);
    // sets up player 2 pawns
    for (int i = 0; i < length; i++) {
        board.getGrid()[i][length - 2].setPiece(new Pawn());
        board.getGrid()[i][length - 2].getPiece().player = false;
        board.getGrid()[i][length - 2].setOccupied(true);
    }
    // sets up player 2 rooks
    board.getGrid()[0][length - 1].setPiece(new Rook());
    board.getGrid()[0][length - 1].getPiece().player = false;
    board.getGrid()[0][length - 1].setOccupied(true);
    board.getGrid()[length - 1][length - 1].setPiece(new Rook());
    board.getGrid()[length - 1][length - 1].getPiece().player = false;
    board.getGrid()[length - 1][length - 1].setOccupied(true);
    // sets up player 2 knights
    board.getGrid()[1][length - 1].setPiece(new Knight());
    board.getGrid()[1][length - 1].getPiece().player = false;
    board.getGrid()[1][length - 1].setOccupied(true);
    board.getGrid()[length - 2][length - 1].setPiece(new Knight());
    board.getGrid()[length - 2][length - 1].getPiece().player = false;
    board.getGrid()[length - 2][length - 1].setOccupied(true);
    // sets up player 2 bishops
    board.getGrid()[2][length - 1].setPiece(new Bishop());
    board.getGrid()[2][length - 1].getPiece().player = false;
    board.getGrid()[2][length - 1].setOccupied(true);
    board.getGrid()[length - 3][length - 1].setPiece(new Bishop());
    board.getGrid()[length - 3][length - 1].getPiece().player = false;
    board.getGrid()[length - 3][length - 1].setOccupied(true);
    // sets up player 2 queen
    board.getGrid()[3][length - 1].setPiece(new Queen());
    board.getGrid()[3][length - 1].getPiece().player = false;
    board.getGrid()[3][length - 1].setOccupied(true);
    // sets up player 2 king
    board.getGrid()[length - 4][length - 1].setPiece(new King());
    board.getGrid()[length - 4][length - 1].getPiece().player = false;
    board.getGrid()[length - 4][length - 1].setOccupied(true);
}
