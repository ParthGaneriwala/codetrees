public static void main(String[] args) {
    ModelDemo demo = new ModelDemo();
    CatalogItem itemOneToAdd, itemTwoToAdd, itemThreeToAdd, itemFourToAdd;
    itemOneToAdd = catalog.getCatalogItemById(13);
    cart.addItem(itemOneToAdd, 2);
    itemTwoToAdd = catalog.getCatalogItemById(28);
    // has bundle and products
    cart.addItem(itemTwoToAdd, 1);
    itemThreeToAdd = catalog.getCatalogItemById(7);
    cart.addItem(itemThreeToAdd, 1);
    itemFourToAdd = catalog.getCatalogItemById(26);
    cart.addItem(itemFourToAdd, 5);
    // alter and delete
    cart.deleteItem(itemThreeToAdd);
    cart.changeItemQuantity(itemFourToAdd, 3);
    // bad checkout
    try {
        order = cart.completeCheckout();
    } catch (IllegalStateException e) {
        log.warn("Cannot checkout yet");
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    // prepare cart for checkout
    cart.setShippingInfo(customer.createDefaultShippingInfo());
    PaymentAuthorization creditCardAuth = new CreditCardAuthorization();
    PaymentAuthorization accountAuth = new CreditAccountAuthorization();
    if (accountAuth.authorize(customer)) {
        cart.setPaymentAuthorization(accountAuth);
    } else if (creditCardAuth.authorize(customer)) {
        cart.setPaymentAuthorization(creditCardAuth);
    } else {
        log.warn("Can't get payment auth!");
    }
    // good checkout
    try {
        order = cart.completeCheckout();
    } catch (IllegalStateException e) {
        e.printStackTrace();
    }
}
