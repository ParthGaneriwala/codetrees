// from Component
@Override
public void layout() {
    int theight = getHeight() - getInsets().getVertical();
    int gap = ((GroupLayout) getLayoutManager()).getGap();
    // first make sure all of our entries have been measured and
    // compute our total height and extent
    int totheight = 0;
    int snapheight = 0;
    for (int ii = 0, nn = _values.size(); ii < nn; ii++) {
        Entry<V, C> entry = _values.get(ii);
        computeHeight(entry, this);
        if (entry.value == _snapValue) {
            snapheight = totheight + gap * ii;
        }
        totheight += entry.height;
    }
    if (_values.size() > 1) {
        totheight += (gap * _values.size() - 1);
    }
    int extent = Math.min(theight, totheight);
    // if our most recent value was added with _snap then we scroll to
    // the bottom on this layout and clear our snappy flag
    int value = _model.getValue();
    if (_snap) {
        value = totheight - extent;
        _snap = false;
    } else if (_snapValue != null) {
        _snapValue = null;
        value = Math.min(totheight - extent, snapheight);
        _model.setValue(value);
    }
    // invalidate() will have no effect)
    if (extent != _model.getExtent() || totheight != _model.getMaximum()) {
        value = Math.min(value, totheight - extent);
        _model.setRange(0, value, extent, totheight);
    }
    // now back up from the last component until we reach the first one
    // that's in view
    _offset = _model.getValue();
    int compIx = 0;
    for (int ii = 0; ii < _values.size(); ii++) {
        Entry<V, C> entry = _values.get(ii);
        if (_offset < entry.height) {
            compIx = ii;
            break;
        }
        _offset -= (entry.height + gap);
        // remove and clear out the components before our top component
        if (entry.component != null) {
            if (entry.component.isAdded()) {
                remove(entry.component);
            }
            entry.component = null;
        }
    }
    // compensate for the partially visible topmost component
    extent += _offset;
    // now add components until we use up our extent
    int topIx = compIx;
    while (compIx < _values.size() && extent > 0) {
        Entry<V, C> entry = _values.get(compIx);
        if (entry.component == null) {
            entry.component = createComponent(entry.value);
        }
        if (!entry.component.isAdded()) {
            add(compIx - topIx, entry.component);
        }
        extent -= (entry.height + gap);
        compIx++;
    }
    // lastly remove any components below the last visible component
    while (compIx < _values.size()) {
        Entry<V, C> entry = _values.get(compIx);
        if (entry.component != null) {
            if (entry.component.isAdded()) {
                remove(entry.component);
            }
            entry.component = null;
        }
        compIx++;
    }
    // now have the layout manager layout our added components
    super.layout();
}
