@Test
@DirtiesContext
public void test2DynamicHtml() {
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    CrudRootServiceHelper<DbPage> pageCrud = cmsService.getPageCrudRootServiceHelper();
    DbPage dbPage = pageCrud.createDbChild();
    dbPage.setPredefinedType(CmsUtil.CmsPredefinedPage.HOME);
    dbPage.setName("Home");
    DbContentContainer dbContentContainer = new DbContentContainer();
    dbContentContainer.init(userService);
    dbPage.setContentAndAccessWrites(dbContentContainer);
    dbContentContainer.setWriteRestricted(DbContent.Access.ALLOWED);
    DbContentDynamicHtml dynamicHtml1 = (DbContentDynamicHtml) dbContentContainer.getContentCrud().createDbChild(DbContentDynamicHtml.class);
    dynamicHtml1.setEscapeMarkup(false);
    DbContentDynamicHtml dynamicHtml2 = (DbContentDynamicHtml) dbContentContainer.getContentCrud().createDbChild(DbContentDynamicHtml.class);
    dynamicHtml2.setEscapeMarkup(false);
    pageCrud.updateDbChild(dbPage);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Activate
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    cmsService.activateCms();
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Write field 1
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    tester.startPage(CmsPage.class);
    tester.assertVisible("form:content:container:1:edit:edit");
    tester.assertVisible("form:content:container:1:edit:edit");
    FormTester formTester = tester.newFormTester("form");
    formTester.submit("content:container:1:edit:edit");
    endHttpRequestAndOpenSessionInViewFilter();
    beginHttpRequestAndOpenSessionInViewFilter();
    formTester = tester.newFormTester("form");
    tester.assertInvisible("form:content:container:1:edit:edit");
    // tester.assertInvisible("form:content:container:2:edit:edit");
    tester.assertInvisible("form:content:container:2:edit:save");
    tester.assertVisible("form:content:container:1:htmlTextArea");
    formTester.setValue("content:container:1:htmlTextArea", "qaywsxedc");
    formTester.submit("content:container:1:edit:save");
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Write field 2
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    tester.startPage(CmsPage.class);
    tester.assertVisible("form:content:container:1:edit:edit");
    tester.assertVisible("form:content:container:2:edit:edit");
    formTester = tester.newFormTester("form");
    formTester.submit("content:container:2:edit:edit");
    endHttpRequestAndOpenSessionInViewFilter();
    beginHttpRequestAndOpenSessionInViewFilter();
    formTester = tester.newFormTester("form");
    // tester.assertInvisible("form:content:container:1:edit:edit");
    tester.assertInvisible("form:content:container:2:edit:edit");
    tester.assertInvisible("form:content:container:1:edit:save");
    tester.assertVisible("form:content:container:2:htmlTextArea");
    formTester.setValue("content:container:2:htmlTextArea", "qaywsxedc2");
    formTester.submit("content:container:2:edit:save");
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Verify
    Assert.assertEquals("qaywsxedc", contentService.getDynamicHtml(dynamicHtml1.getId()));
    Assert.assertEquals("qaywsxedc2", contentService.getDynamicHtml(dynamicHtml2.getId()));
}
