public JPanel chore_setProps() {
    if (tempChore == null) {
        tempChore = new ChoreData();
        int largestChoreID = 0;
        int choreID = 0;
        for (int i = 0; i < chores.length; i++) {
            choreID = Integer.decode(chores[i].getID());
            if (choreID > largestChoreID)
                largestChoreID = choreID;
        }
        tempChore.setID(Integer.toString(largestChoreID + 1));
    }
    GridBagConstraints gbc = new GridBagConstraints();
    ;
    GridBagLayout gbl = new GridBagLayout();
    JPanel all = new JPanel();
    all.setLayout(gbl);
    JLabel new_chore_name_lbl = new JLabel("Chore Name:", JLabel.RIGHT);
    JLabel new_chore_desc_lbl = new JLabel("Chore Description:", JLabel.RIGHT);
    JLabel new_chore_note_lbl = new JLabel("Chore Notes:", JLabel.RIGHT);
    JTextField new_chore_name = new JTextField(tempChore.getName(), 15);
    JTextArea new_chore_desc = new JTextArea(tempChore.getDescription(), 6, 15);
    JTextArea new_chore_note = new JTextArea(tempChore.getNotes(), 6, 15);
    JScrollPane descScroll = new JScrollPane(new_chore_desc);
    JScrollPane noteScroll = new JScrollPane(new_chore_note);
    new_chore_name.getDocument().addDocumentListener(new ChoreDocListener(true, 0));
    new_chore_desc.getDocument().addDocumentListener(new ChoreDocListener(false, 1));
    new_chore_note.getDocument().addDocumentListener(new ChoreDocListener(false, 2));
    if (tempChore.getName() != null && !tempChore.getName().equals("") && currState != STATE.CHORE_DEL_2)
        btn_finish.setEnabled(true);
    JLabel desc = new JLabel("Input the values for the chore you wish to create");
    if (currState == STATE.CHORE_EDIT_2)
        desc = new JLabel("Edit the values of the chore you've selected");
    else if (currState == STATE.CHORE_DEL_2) {
        desc = new JLabel("View the values of the chore you've selected to delete");
        new_chore_name.setEditable(false);
        new_chore_desc.setEditable(false);
        new_chore_note.setEditable(false);
    }
    gbc = new GridBagConstraints(0, 0, 2, 1, 0, 0, GridBagConstraints.PAGE_START, GridBagConstraints.HORIZONTAL, new Insets(20, 6, 2, 6), 8, 8);
    gbl.setConstraints(desc, gbc);
    JSeparator sep = new JSeparator();
    gbc = new GridBagConstraints(0, 1, 2, 1, 1, 0, GridBagConstraints.PAGE_START, GridBagConstraints.HORIZONTAL, new Insets(2, 6, 6, 6), 8, 8);
    gbl.setConstraints(sep, gbc);
    gbc = new GridBagConstraints(0, 2, 1, 1, 0, 0, GridBagConstraints.PAGE_START, GridBagConstraints.HORIZONTAL, new Insets(2, 6, 2, 6), 8, 8);
    gbl.setConstraints(new_chore_name_lbl, gbc);
    gbc = new GridBagConstraints(0, 3, 1, 1, 0, 0, GridBagConstraints.PAGE_START, GridBagConstraints.HORIZONTAL, new Insets(2, 6, 2, 6), 8, 8);
    gbl.setConstraints(new_chore_desc_lbl, gbc);
    gbc = new GridBagConstraints(0, 4, 1, 1, 0, 1, GridBagConstraints.PAGE_START, GridBagConstraints.HORIZONTAL, new Insets(2, 6, 2, 6), 8, 8);
    gbl.setConstraints(new_chore_note_lbl, gbc);
    gbc = new GridBagConstraints(1, 2, 1, 1, 0, 0, GridBagConstraints.PAGE_START, GridBagConstraints.HORIZONTAL, new Insets(2, 6, 2, 6), 8, 8);
    gbl.setConstraints(new_chore_name, gbc);
    gbc = new GridBagConstraints(1, 3, 1, 1, 0, 0, GridBagConstraints.PAGE_START, GridBagConstraints.HORIZONTAL, new Insets(2, 6, 2, 6), 8, 8);
    gbl.setConstraints(descScroll, gbc);
    gbc = new GridBagConstraints(1, 4, 1, 1, 0, 1, GridBagConstraints.PAGE_START, GridBagConstraints.HORIZONTAL, new Insets(2, 6, 2, 6), 8, 8);
    gbl.setConstraints(noteScroll, gbc);
    all.add(desc);
    all.add(sep);
    all.add(new_chore_name_lbl);
    all.add(new_chore_desc_lbl);
    all.add(new_chore_note_lbl);
    all.add(new_chore_name);
    all.add(descScroll);
    all.add(noteScroll);
    return all;
}
