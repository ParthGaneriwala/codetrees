public String runFlow(ChainFlow chainFlow, ChainContext chainContext) throws FlowException {
    try {
        if (log.isInfoEnabled()) {
            log.info("Start to run the beanshell flow [" + chainFlow.getFlowName() + "]");
        }
        chainContext.addSimuList("<font color=blue><b> Start to run the beanshell flow [" + chainFlow.getFlowCode() + "] </b></font>");
        if ("Y".equals(chainFlow.getSkipYn())) {
            if (log.isInfoEnabled()) {
                log.info("Beanshell flow [" + chainFlow.getFlowName() + "]: skipFlag=true");
            }
            chainContext.addSimuList("Beanshell flow [" + chainFlow.getFlowName() + "]: skipFlag=true<br>=================");
            return "0";
        }
        List script = chainFlow.getScripts();
        if (script.size() < 1) {
            if (log.isInfoEnabled()) {
                log.info("Beanshell flow [" + chainFlow.getFlowName() + "]: there is no statement");
            }
            chainContext.addSimuList("Beanshell flow [" + chainFlow.getFlowName() + "]: there is no statement<br>=================");
            return "0";
        }
        for (int i = 0; i < script.size(); i++) {
            String sqlstr = (String) script.get(i);
            Iterator iter = chainContext.getDataMapIterator();
            while (iter.hasNext()) {
                DataMapping dataMapping = (DataMapping) iter.next();
                sqlstr = StringUtils.replace(sqlstr, dataMapping.getFieldName(), dataMapping.getFieldMapping());
            }
            sqlstr = FormulaFactory.getInstance().run(sqlstr);
            StringBuffer bf = new StringBuffer();
            bf.append(this.getTemplate());
            bf.append("try {");
            bf.append(sqlstr);
            bf.append("} catch (Exception ex) {");
            bf.append(" throw ex;");
            bf.append(" }");
            if (log.isInfoEnabled()) {
                log.info("Beanshell script: " + bf.toString());
            }
            Interpreter interpreter = BshUtil.getMasterInterpreter(null);
            // interpreter.set("log", log);
            try {
                interpreter.eval(bf.toString());
            } catch (TargetError ex) {
                throw new Exception(ex.getTarget().getMessage());
            }
        }
        log.info("BeanshellFlow::runFlow OK");
        chainContext.addSimuList("BeanshellFlow::runFlow OK<br>--------------------------------");
        return "0";
    } catch (Exception e) {
        log.error("Beanshell Flow :" + e.getMessage());
        chainContext.addSimuList("BeanshellFlow::runFlow Error[" + e.getMessage() + "]<br>--------------------------------");
        return "98";
    }
}
