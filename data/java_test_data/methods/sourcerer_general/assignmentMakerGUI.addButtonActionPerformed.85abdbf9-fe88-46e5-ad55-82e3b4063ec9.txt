// GEN-LAST:event_saveButtonActionPerformed
private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {
    // GEN-FIRST:event_addButtonActionPerformed
    Vector<Vector<String>> lines = new Vector<Vector<String>>();
    Vector<runConfig> Assignments = new Vector<runConfig>();
    StringTokenizer paramTokenizer = new StringTokenizer(paramListTextBox.getText(), "\n");
    while (paramTokenizer.hasMoreTokens()) {
        String line = paramTokenizer.nextToken();
        StringTokenizer elements = new StringTokenizer(line, ",");
        Vector<String> runs = new Vector<String>();
        while (elements.hasMoreElements()) runs.add(elements.nextToken());
        if (runs.size() > 1)
            lines.add(runs);
    }
    int totalRuns = generateCountOfAssignments();
    int[] pointers = new int[lines.size()];
    for (int ct = 0; ct < pointers.length; ct++) pointers[ct] = 1;
    while (Assignments.size() != totalRuns) {
        for (int c = 0; c < Integer.parseInt(repTextBox.getText()); c++) {
            Vector<String> commands = new Vector<String>();
            for (int ct = 0; ct < pointers.length; ct++) {
                commands.add(lines.get(ct).get(0) + " " + lines.get(ct).get(pointers[ct]));
            }
            // ----------------todo, add custom file name generation code
            File outputName;
            if (genCheckBox.isSelected()) {
                StringTokenizer st = new StringTokenizer(saveLocation.toString(), ".");
                String name = st.nextToken();
                for (int ct = 0; ct < commands.size(); ct++) name += " " + commands.get(ct);
                name += " run " + c;
                name += "." + st.nextToken();
                outputName = new File(name);
            } else
                outputName = saveLocation;
            Assignments.add(new runConfig(openFile, outputName.toString(), Long.parseLong(tickCt.getText()), commands));
        }
        pointers[pointers.length - 1]++;
        for (int c = pointers.length - 1; c > 0; c--) if (pointers[c] >= lines.get(c).size()) {
            pointers[c] = 1;
            pointers[c - 1]++;
        }
    }
    for (int ct = 0; ct < Assignments.size(); ct++) data.addTodo(Assignments.elementAt(ct));
    myHost.updateView();
}
