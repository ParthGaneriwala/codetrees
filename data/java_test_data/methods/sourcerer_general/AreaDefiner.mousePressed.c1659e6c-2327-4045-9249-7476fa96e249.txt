// documentation inherited
@Override
public void mousePressed(MouseEvent event) {
    if (_editor.isSpecialDown()) {
        return;
    }
    int button = event.getButton();
    if (_entry != null) {
        if (button == MouseEvent.BUTTON1) {
            // continue placing
            insertVertex(_entry, _idx + 1);
        } else if (button == MouseEvent.BUTTON3) {
            // remove the vertex
            release();
        }
        return;
    }
    if (_editor.getMouseRay(_pick)) {
        SceneElement element = _editor.getView().getScene().getIntersection(_pick, _isect, AREA_FILTER);
        if (element instanceof Model) {
            Model model = (Model) element;
            AreaSprite sprite = (AreaSprite) model.getUserObject();
            AreaEntry entry = (AreaEntry) sprite.getEntry();
            int idx = sprite.getVertexIndex(model);
            if (idx != -1) {
                if (button == MouseEvent.BUTTON1) {
                    // start moving the vertex
                    _entry = entry;
                    _idx = idx;
                } else if (button == MouseEvent.BUTTON3) {
                    removeVertices(entry, idx, 1);
                }
                return;
            }
            idx = sprite.getEdgeIndex(model);
            if (button == MouseEvent.BUTTON1) {
                // insert in between
                insertVertex(entry, idx + 1);
            } else if (button == MouseEvent.BUTTON3) {
                if (idx == entry.vertices.length - 1) {
                    // last edge
                    removeVertices(entry, idx, 1);
                    removeVertices(entry, 0, 1);
                } else {
                    // middle edge
                    removeVertices(entry, idx, 2);
                }
            }
            return;
        } else if (element != null && button == MouseEvent.BUTTON3) {
            // delete the entire area
            AreaSprite sprite = (AreaSprite) element.getUserObject();
            _editor.removeEntries(sprite.getEntry().getKey());
        }
    }
    ConfigReference<AreaConfig> area = _eref.getReference();
    if (button == MouseEvent.BUTTON1 && area != null && getMousePlaneIntersection(_isect)) {
        // start a new area
        _entry = new AreaEntry();
        _idx = 1;
        _entry.area = area;
        _entry.vertices = new Vertex[] { new Vertex(), new Vertex() };
        setMouseLocation(_entry.vertices[0]);
        _editor.addEntries(_entry);
    }
}
