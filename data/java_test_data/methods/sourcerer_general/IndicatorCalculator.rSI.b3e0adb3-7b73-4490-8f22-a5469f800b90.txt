/**
 * Average Gain = [(previous Average Gain) x 13 + current Gain] / 14
 * First Average Gain = Total of Gains during past 14 periods / 14
 *
 * Average Loss = [(previous Average Loss) x 13 + current Loss] / 14
 * First Average Loss = Total of Losses during past 14 periods / 14
 *
 * RSI=100-(1/RS)
 * Initial RS = (average gain/average loss)
 * average gain=total gain/n
 * average loss-total loss/n
 * n=number of periods
 * smoothed RS = ([(prev avg gain) * 13 + current gain]/14)/([(prev avg loss) * 13 + curr loss]/14)
 * @param nbrDays
 * @param histPrices
 * @param session
 */
// TODO Modify this so that it handles picking up where left off so that it will
public static void rSI(int numberOfDays, List<DailyQuoteHistory> historicalPrices) {
    BigDecimal prevClose = null;
    boolean hasSeed = false;
    double priceChange;
    double prevAvgGain = 0d;
    double prevAvgLoss = 0d;
    BigDecimal rsi;
    Fifo gainsFifo = new Fifo(numberOfDays);
    Fifo lossesFifo = new Fifo(numberOfDays);
    // session.beginTransaction();
    for (DailyQuoteHistory quoteHist : historicalPrices) {
        if (prevClose != null) {
            priceChange = quoteHist.getClose().doubleValue() - prevClose.doubleValue();
            if (priceChange < 0) {
                lossesFifo.push(new BigDecimal((-1 * priceChange)));
                gainsFifo.push(new BigDecimal(0));
            } else {
                lossesFifo.push(new BigDecimal(0));
                gainsFifo.push(new BigDecimal(priceChange));
            }
            if (gainsFifo.isFull()) {
                if (!hasSeed) {
                    prevAvgGain = gainsFifo.getAverage().doubleValue();
                    prevAvgLoss = lossesFifo.getAverage().doubleValue();
                    rsi = getRSI(numberOfDays, prevAvgGain, prevAvgLoss, priceChange);
                    hasSeed = true;
                } else {
                    if (priceChange < 0) {
                        prevAvgGain = ((prevAvgGain * (numberOfDays - 1)) + 0d) / numberOfDays;
                        prevAvgLoss = ((prevAvgLoss * (numberOfDays - 1)) + (-1 * priceChange)) / numberOfDays;
                    } else {
                        prevAvgGain = ((prevAvgGain * (numberOfDays - 1)) + priceChange) / numberOfDays;
                        prevAvgLoss = ((prevAvgLoss * (numberOfDays - 1)) + 0d) / numberOfDays;
                    }
                    rsi = getRSI(numberOfDays, prevAvgGain, prevAvgLoss, priceChange);
                }
                switch(numberOfDays) {
                    case 7:
                        quoteHist.setSevenDayRSI(rsi);
                        break;
                    case 14:
                        quoteHist.setFourteenDayRSI(rsi);
                        break;
                    case 21:
                        quoteHist.setTwentyOneDayRSI(rsi);
                        break;
                }
            }
        }
        prevClose = quoteHist.getClose();
    // session.save(quoteHist);
    // em.persist(quoteHist);
    }
// session.getTransaction().commit();
}
