private JPanel createParameterPanel(String startString, String endString, ParameterList parameterList) {
    JPanel tmpPanel = new JPanel();
    GridBagLayout gridBag = new GridBagLayout();
    tmpPanel.setLayout(gridBag);
    JLabel startParenthesis = new JLabel(startString);
    double comboHeight = getComboBoxHeight();
    // we want a large parenthesis
    double parenthesisHeight = startParenthesis.getPreferredSize().getHeight();
    double parenthesisScale = comboHeight / parenthesisHeight;
    Font f = startParenthesis.getFont();
    Font parenthesisFont = f.deriveFont((float) (f.getSize() * parenthesisScale));
    startParenthesis.setFont(parenthesisFont);
    GridBagConstraints constraints = new GridBagConstraints();
    constraints.insets = INSETS;
    constraints.gridx = 0;
    constraints.anchor = GridBagConstraints.NORTHEAST;
    tmpPanel.add(startParenthesis, constraints);
    for (int i = 0; i < parameterList.size(); i++) {
        constraints.gridx = 1;
        constraints.gridy = i;
        constraints.anchor = GridBagConstraints.WEST;
        JComponent component = parameterList.getParameterComponent(i);
        gridBag.setConstraints(component, constraints);
        tmpPanel.add(component);
        JLabel eol = new JLabel(",", JLabel.LEFT);
        JLabel type = new JLabel(" " + parameterList.getType(i), JLabel.LEFT);
        if (i == (parameterList.size() - 1)) {
            eol.setText(endString);
            eol.setFont(parenthesisFont);
            if (parameterList.size() == 1) {
                type = null;
            } else {
                setPreferredHeight(type, comboHeight);
                constraints.anchor = GridBagConstraints.NORTH;
            }
        }
        if (type != null) {
            constraints.gridx = 3;
            tmpPanel.add(type, constraints);
        }
        constraints.gridx = 2;
        setPreferredHeight(eol, comboHeight);
        constraints.anchor = GridBagConstraints.SOUTHWEST;
        gridBag.setConstraints(eol, constraints);
        tmpPanel.add(eol);
    }
    return tmpPanel;
}
