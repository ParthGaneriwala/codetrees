@Override
protected void setUp() throws Exception {
    String p1 = getClass().getName().replace('.', '_');
    String p2 = config.propertyCacheEnabled ? "propertycached" : "propertynotcached";
    String p3 = config.optimizeHasNodeEnabled ? "hasnodeoptimized" : "hasnodenotoptimized";
    String p4 = config.optimizeHasPropertyEnabled ? "haspropertyoptimized" : "haspropertynotoptimized";
    String p5 = config.instrumentorClassName.lastIndexOf('.') == -1 ? config.instrumentorClassName : config.instrumentorClassName.substring(config.instrumentorClassName.lastIndexOf('.') + 1);
    String p6 = testName;
    // 
    rootNodePath = "/" + p1 + "/" + p2 + "/" + p3 + "/" + p4 + "/" + p5 + "/" + p6;
    // 
    builder = ChromatticBuilder.create();
    // 
    createDomain();
    // 
    boolean pingRootNode = pingRootNode();
    // 
    builder.setOptionValue(ChromatticBuilder.ROOT_NODE_PATH, rootNodePath);
    builder.setOptionValue(ChromatticBuilder.ROOT_NODE_TYPE, "nt:unstructured");
    builder.setOptionValue(ChromatticBuilder.PROPERTY_CACHE_ENABLED, config.propertyCacheEnabled);
    builder.setOptionValue(ChromatticBuilder.INSTRUMENTOR_CLASSNAME, config.instrumentorClassName);
    builder.setOptionValue(ChromatticBuilder.JCR_OPTIMIZE_HAS_PROPERTY_ENABLED, config.optimizeHasPropertyEnabled);
    builder.setOptionValue(ChromatticBuilder.JCR_OPTIMIZE_HAS_NODE_ENABLED, config.optimizeHasNodeEnabled);
    // 
    if (pingRootNode) {
        builder.setOptionValue(ChromatticBuilder.CREATE_ROOT_NODE, true);
        builder.setOptionValue(ChromatticBuilder.LAZY_CREATE_ROOT_NODE, false);
    }
    // 
    chromattic = builder.build();
    // Create virtual root node if required
    if (pingRootNode) {
        ChromatticSessionImpl sess = login();
        sess.getRoot();
        sess.save();
    }
}
