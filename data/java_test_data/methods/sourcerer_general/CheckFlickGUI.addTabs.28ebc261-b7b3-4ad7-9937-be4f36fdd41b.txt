private void addTabs() {
    // Tab folder
    RibbonTabFolder tabs = shell.getRibbonTabFolder();
    // Tabs
    RibbonTab searchTab = new RibbonTab(tabs, "Search");
    RibbonTab insertTab = new RibbonTab(tabs, "Insert");
    // Tooltips
    RibbonTooltip searchToolTip = new RibbonTooltip("Search For", "Please click on one of the buttons to search.");
    RibbonTooltip insertToolTip = new RibbonTooltip("Insert", "Please click on one of the buttons to insert movie/person.");
    RibbonTooltip importToolTip = new RibbonTooltip("Import The Database", "Please click the button to import.\n \\bWARNING: this could take a while.");
    // Search tab
    RibbonGroup searching = new RibbonGroup(searchTab, "Search For", searchToolTip);
    final RibbonButton movieSearch = new RibbonButton(searching, ImageCache.getImage("camera_48.png"), " \nMovie", RibbonButton.STYLE_TWO_LINE_TEXT);
    new RibbonGroupSeparator(searching);
    final RibbonButton personSearch = new RibbonButton(searching, ImageCache.getImage("user_48.png"), " \nPerson", RibbonButton.STYLE_TWO_LINE_TEXT);
    // Insert Tab
    RibbonGroup inserting = new RibbonGroup(insertTab, "Insert", insertToolTip);
    final RibbonButton movieInsert = new RibbonButton(inserting, ImageCache.getImage("camera_48.png"), " \nMovie", RibbonButton.STYLE_TWO_LINE_TEXT);
    new RibbonGroupSeparator(inserting);
    final RibbonButton personInsert = new RibbonButton(inserting, ImageCache.getImage("user_48.png"), " \nPerson", RibbonButton.STYLE_TWO_LINE_TEXT);
    RibbonGroup importing = new RibbonGroup(insertTab, "Import", importToolTip);
    final RibbonButton importButton = new RibbonButton(importing, ImageCache.getImage("star_48.png"), " \nImport", RibbonButton.STYLE_TWO_LINE_TEXT);
    ButtonSelectGroup group = new ButtonSelectGroup();
    movieInsert.setButtonSelectGroup(group);
    movieInsert.setEnabled(isAdmin);
    personInsert.setButtonSelectGroup(group);
    personInsert.setEnabled(isAdmin);
    movieSearch.setButtonSelectGroup(group);
    personSearch.setButtonSelectGroup(group);
    importButton.setButtonSelectGroup(group);
    importButton.setEnabled(isAdmin);
    movieSearch.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            movieSearch.setSelected(false);
            searchByMovie();
        }
    });
    personSearch.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            personSearch.setSelected(false);
            searchByPerson();
        }
    });
    movieInsert.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            movieInsert.setSelected(false);
            insertMovie();
        }
    });
    personInsert.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            personInsert.setSelected(false);
            insertPerson();
        }
    });
    importButton.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            importButton.setSelected(false);
            switch(yesNoMessageBox("Importing the data may take a while (about an hour). Are you sure you want to import the data?")) {
                case (SWT.YES):
                    {
                        cleanAllComposites();
                        try {
                            shell.getRibbonTabFolder().getTabs().get(1).setName("Busy");
                            shell.redrawContents();
                            openImportMessage(importLabel, closeImportButton);
                            pool.execute(DataManager.importIntoDb(AppData.getInstance().getImportFolder()));
                        } catch (InterruptedException e1) {
                            e1.printStackTrace();
                        }
                    }
                // do nothing
                case (SWT.NO):
                    {
                    }
            }
        }
    });
}
