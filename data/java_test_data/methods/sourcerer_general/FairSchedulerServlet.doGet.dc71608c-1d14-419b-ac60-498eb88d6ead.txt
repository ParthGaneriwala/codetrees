@Override
public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    // If the request has a set* param, handle that and redirect to the regular
    // view page so that the user won't resubmit the data if they hit refresh.
    boolean advancedView = request.getParameter("advanced") != null;
    if (request.getParameter("setFifo") != null) {
        scheduler.setUseFifo(request.getParameter("setFifo").equals("true"));
        response.sendRedirect("/scheduler" + (advancedView ? "?advanced" : ""));
        return;
    }
    if (request.getParameter("setPool") != null) {
        PoolManager poolMgr = scheduler.getPoolManager();
        synchronized (poolMgr) {
            String pool = request.getParameter("setPool");
            String jobId = request.getParameter("jobid");
            Collection<JobInProgress> runningJobs = jobTracker.runningJobs();
            for (JobInProgress job : runningJobs) {
                if (job.getProfile().getJobID().toString().equals(jobId)) {
                    poolMgr.setPool(job, pool);
                    scheduler.update();
                    break;
                }
            }
        }
        response.sendRedirect("/scheduler" + (advancedView ? "?advanced" : ""));
        return;
    }
    if (request.getParameter("setPriority") != null) {
        PoolManager poolMgr = scheduler.getPoolManager();
        synchronized (poolMgr) {
            JobPriority priority = JobPriority.valueOf(request.getParameter("setPriority"));
            String jobId = request.getParameter("jobid");
            Collection<JobInProgress> runningJobs = jobTracker.runningJobs();
            for (JobInProgress job : runningJobs) {
                if (job.getProfile().getJobID().toString().equals(jobId)) {
                    job.setPriority(priority);
                    scheduler.update();
                    break;
                }
            }
        }
        response.sendRedirect("/scheduler" + (advancedView ? "?advanced" : ""));
        return;
    }
    // Print out the normal response
    response.setContentType("text/html");
    PrintWriter out = new PrintWriter(response.getOutputStream());
    String hostname = StringUtils.simpleHostname(jobTracker.getJobTrackerMachine());
    out.print("<html><head>");
    out.printf("<title>%s Job Scheduler Admininstration</title>\n", hostname);
    out.printf("<META http-equiv=\"refresh\" content=\"15;URL=/scheduler%s\">", advancedView ? "?advanced" : "");
    out.print("<link rel=\"stylesheet\" type=\"text/css\" " + "href=\"/static/org.fit.hiai.hadoop.css\">\n");
    out.print("</head><body>\n");
    out.printf("<h1><a href=\"/jobtracker.jsp\">%s</a> " + "Job Scheduler Administration</h1>\n", hostname);
    showPools(out, advancedView);
    showJobs(out, advancedView);
    showAdminForm(out, advancedView);
    out.print("</body></html>\n");
    out.close();
}
