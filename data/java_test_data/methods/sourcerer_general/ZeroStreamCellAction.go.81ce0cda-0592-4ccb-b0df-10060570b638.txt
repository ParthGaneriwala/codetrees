@Override
protected String go() throws Exception {
    BasicSetService setservice = (BasicSetService) this.getBean("basicSetService");
    setservice.getAllSets();
    if (date == null || date.equals("")) {
        date = df.format(com.sxit.stat.util.StatUtil.getPrevDate());
    }
    Date thedate = com.sxit.stat.util.StatUtil.getDate(date);
    if (orderfield == null || orderfield.equals(""))
        orderfield = "cellid";
    if (resultType != null && resultType.equals("excel")) {
        this.pageNo = 1;
        this.pageSize = Integer.MAX_VALUE;
    }
    ZeroService zeroservice = (ZeroService) this.getBean("zeroService");
    if (dayflag.equals("1")) {
        this.page = zeroservice.getDayZeroCells(thedate, getOrderby(), pageNo, pageSize);
    } else {
        if (starthour == null || starthour.equals("")) {
            starthour = "01";
        }
        if (endhour == null || endhour.equals("")) {
            Calendar c = Calendar.getInstance();
            int now = c.get(Calendar.HOUR_OF_DAY);
            if (now == 0 || now == 1)
                endhour = "01";
            else {
                Date d = new Date();
                long _now = d.getTime();
                d.setTime(_now - 60 * 60 * 1000);
                endhour = dfhour.format(d);
            }
        }
        int start_ = Integer.parseInt(starthour);
        int end_ = Integer.parseInt(endhour);
        // this.page = zeroservice.getHourZeroCells(date, hour,getOrderby(),pageNo, pageSize);
        List resultList = null;
        if (firstpage.equals("yes")) {
            resultList = zeroservice.getHourZeroCells(date, getOrderby(), start_, end_);
            set("zerocelllist", resultList);
        } else {
            resultList = (List) get("zerocelllist");
        }
        int totalCount = resultList.size();
        int startIndex = (pageNo - 1) * pageSize;
        List list = new ArrayList();
        for (int i = startIndex; i < totalCount && i < startIndex + pageSize; i++) {
            list.add(resultList.get(i));
        }
        this.page = new PaginationSupport(list, totalCount, pageSize, startIndex);
    }
    if (resultType != null && resultType.equals("excel")) {
        return "excel";
    }
    return SUCCESS;
}
