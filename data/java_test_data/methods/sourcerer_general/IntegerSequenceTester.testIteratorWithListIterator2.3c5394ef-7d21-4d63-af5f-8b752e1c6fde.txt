public void testIteratorWithListIterator2() {
    // --- 升序的测试
    list = new IntegerSequence(2, 10);
    Iterator it = list.listIterator(1);
    int index = 3;
    while (it.hasNext()) {
        assertEquals(new Integer(index), it.next());
        index++;
    }
    ListIterator ListIt = list.listIterator(1);
    index = 0;
    while (ListIt.hasNext()) {
        assertEquals(index, ListIt.nextIndex());
        index++;
    }
    index = 10;
    while (ListIt.hasPrevious()) {
        assertEquals(new Integer(index), ListIt.previous());
        index--;
    }
    assertEquals(2, index);
    while (ListIt.hasNext()) {
        ListIt.nextIndex();
    }
    index = 7;
    while (ListIt.hasPrevious()) {
        assertEquals(index, ListIt.previousIndex());
        index--;
    }
    // --- 降序的测试
    list = new IntegerSequence(10, 2);
    it = list.listIterator(1);
    index = 9;
    while (it.hasNext()) {
        assertEquals(new Integer(index), it.next());
        index--;
    }
    ListIt = list.listIterator(1);
    index = 0;
    while (ListIt.hasNext()) {
        assertEquals(index, ListIt.nextIndex());
        index++;
    }
    index = 2;
    while (ListIt.hasPrevious()) {
        assertEquals(new Integer(index), ListIt.previous());
        index++;
    }
    assertEquals(10, index);
    while (ListIt.hasNext()) {
        ListIt.nextIndex();
    }
    index = 7;
    while (ListIt.hasPrevious()) {
        assertEquals(index, ListIt.previousIndex());
        index--;
    }
}
