private boolean updateTaskTrackerStatus(String trackerName, TaskTrackerStatus status) {
    TaskTrackerStatus oldStatus = taskTrackers.get(trackerName);
    if (oldStatus != null) {
        totalMaps -= oldStatus.countMapTasks();
        totalReduces -= oldStatus.countReduceTasks();
        totalMapTaskCapacity -= oldStatus.getMaxMapTasks();
        totalReduceTaskCapacity -= oldStatus.getMaxReduceTasks();
        if (status == null) {
            taskTrackers.remove(trackerName);
            Integer numTaskTrackersInHost = uniqueHostsMap.get(oldStatus.getHost());
            numTaskTrackersInHost--;
            if (numTaskTrackersInHost > 0) {
                uniqueHostsMap.put(oldStatus.getHost(), numTaskTrackersInHost);
            } else {
                uniqueHostsMap.remove(oldStatus.getHost());
            }
        }
    }
    if (status != null) {
        totalMaps += status.countMapTasks();
        totalReduces += status.countReduceTasks();
        totalMapTaskCapacity += status.getMaxMapTasks();
        totalReduceTaskCapacity += status.getMaxReduceTasks();
        boolean alreadyPresent = false;
        if (taskTrackers.containsKey(trackerName)) {
            alreadyPresent = true;
        }
        taskTrackers.put(trackerName, status);
        if (!alreadyPresent) {
            Integer numTaskTrackersInHost = uniqueHostsMap.get(status.getHost());
            if (numTaskTrackersInHost == null) {
                numTaskTrackersInHost = 0;
            }
            numTaskTrackersInHost++;
            uniqueHostsMap.put(status.getHost(), numTaskTrackersInHost);
        }
    }
    return oldStatus != null;
}
