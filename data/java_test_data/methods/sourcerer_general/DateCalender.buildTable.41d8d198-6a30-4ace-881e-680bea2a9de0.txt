private void buildTable() {
    try {
        int TABLE_ROW_COUNT = tablemodel.getRowCount();
        for (int cnt = 0; cnt < TABLE_ROW_COUNT; cnt++) {
            tablemodel.removeRow(0);
        }
        Vector vtDate = new Vector();
        for (int i = 1; i < 36; i++) {
            int year = (int) Integer.parseInt(String.valueOf(lstYear.getValue()));
            int month = cboMonth.getSelectedIndex();
            Date datearr = new Date(year - 1900, month, i);
            if (datearr.getDate() == i) {
                vtDate.addElement(new Integer(i));
                switch(datearr.getDay() + 1) {
                    case Calendar.MONDAY:
                        {
                            createRow(i, 0);
                            break;
                        }
                    case Calendar.TUESDAY:
                        {
                            createRow(i, 1);
                            break;
                        }
                    case Calendar.WEDNESDAY:
                        {
                            createRow(i, 2);
                            break;
                        }
                    case Calendar.THURSDAY:
                        {
                            createRow(i, 3);
                            break;
                        }
                    case Calendar.FRIDAY:
                        {
                            createRow(i, 4);
                            break;
                        }
                    case Calendar.SATURDAY:
                        {
                            createRow(i, 5);
                            break;
                        }
                    case Calendar.SUNDAY:
                        {
                            createRow(i, 6);
                            tablemodel.addRow(row);
                            tablemodel.fireTableDataChanged();
                            tablemodel.fireTableStructureChanged();
                            row[0] = "";
                            row[1] = "";
                            row[2] = "";
                            row[3] = "";
                            row[4] = "";
                            row[5] = "";
                            row[6] = "";
                            break;
                        }
                    default:
                        {
                            createRow(i, 5);
                            break;
                        }
                }
            }
        }
        tablemodel.addRow(row);
        tablemodel.fireTableDataChanged();
        tablemodel.fireTableStructureChanged();
        row[0] = "";
        row[1] = "";
        row[2] = "";
        row[3] = "";
        row[4] = "";
        row[5] = "";
        row[6] = "";
        myTable.addMouseListener(new MouseAdapter() {

            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    dispose();
                }
            }
        });
    } catch (Exception e) {
        e.printStackTrace();
    }
}
