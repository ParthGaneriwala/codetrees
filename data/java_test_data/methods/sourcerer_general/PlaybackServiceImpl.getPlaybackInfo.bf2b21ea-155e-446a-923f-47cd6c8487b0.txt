@Override
public PlaybackInfo getPlaybackInfo(String sessionId, long startTime, String levelName) {
    try {
        PlaybackInfo playbackInfo = new PlaybackInfo();
        // Tutorial
        MovableServiceImpl.setCommonInfo(playbackInfo, userService, itemService, mgmtService, cmsUiService);
        DbAbstractLevel dbAbstractLevel = userGuidanceService.getDbLevel(levelName);
        playbackInfo.setTutorialConfig(tutorialService.getTutorialConfig((DbSimulationLevel) dbAbstractLevel));
        playbackInfo.setLevel(dbAbstractLevel.getLevel());
        terrainService.setupTerrain(playbackInfo, dbAbstractLevel);
        // Start and and time
        LifecycleTrackingInfo lifecycleTrackingInfo = userTrackingService.getLifecycleTrackingInfo(sessionId, startTime);
        long startClient = lifecycleTrackingInfo.getStartClient();
        Long endClient = lifecycleTrackingInfo.getNextStartClient();
        playbackInfo.setEventTrackingStart(userTrackingService.getDbEventTrackingStart(sessionId, startClient, endClient).createEventTrackingStart());
        // Mouse tracking
        ArrayList<EventTrackingItem> eventTrackingItems = new ArrayList<EventTrackingItem>();
        for (DbEventTrackingItem dbEventTrackingItem : userTrackingService.getDbEventTrackingItem(sessionId, startClient, endClient)) {
            eventTrackingItems.add(dbEventTrackingItem.createEventTrackingItem());
        }
        playbackInfo.setEventTrackingItems(eventTrackingItems);
        // Selections
        ArrayList<SelectionTrackingItem> selectionTrackingItems = new ArrayList<SelectionTrackingItem>();
        for (DbSelectionTrackingItem dbSelectionTrackingItem : userTrackingService.getDbSelectionTrackingItems(sessionId, startClient, endClient)) {
            selectionTrackingItems.add(dbSelectionTrackingItem.createSelectionTrackingItem());
        }
        playbackInfo.setSelectionTrackingItems(selectionTrackingItems);
        // Commands
        ArrayList<BaseCommand> baseCommands = new ArrayList<BaseCommand>();
        for (DbCommand dbCommand : userTrackingService.getDbCommands(sessionId, startClient, endClient)) {
            baseCommands.add(dbCommand.getBaseCommand());
        }
        playbackInfo.setCommands(baseCommands);
        // Scrolling
        ArrayList<TerrainScrollTracking> terrainScrollTrackings = new ArrayList<TerrainScrollTracking>();
        for (DbScrollTrackingItem dbScrollTrackingItem : userTrackingService.getDbScrollTrackingItems(sessionId, startClient, endClient)) {
            terrainScrollTrackings.add(dbScrollTrackingItem.createScrollTrackingItem());
        }
        playbackInfo.setScrollTrackingItems(terrainScrollTrackings);
        // Scrolling
        ArrayList<BrowserWindowTracking> browserWindowTrackings = new ArrayList<BrowserWindowTracking>();
        for (DbBrowserWindowTracking dbBrowserWindowTracking : userTrackingService.getDbBrowserWindowTrackings(sessionId, startClient, endClient)) {
            browserWindowTrackings.add(dbBrowserWindowTracking.createBrowserWindowTracking());
        }
        playbackInfo.setBrowserWindowTrackings(browserWindowTrackings);
        return playbackInfo;
    } catch (Throwable t) {
        log.error("", t);
        return null;
    }
}
