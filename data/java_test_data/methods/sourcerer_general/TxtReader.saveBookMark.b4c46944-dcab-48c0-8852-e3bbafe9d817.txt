public boolean saveBookMark() {
    byte[] b = new byte[0];
    int start = 0;
    if (mMyLines.size() > 0) {
        if (mCurrentLine == 0) {
            b = new byte[mMyLines.get(mCurrentLine).lineLength];
            mCurrentOffset = mMyLines.get(mCurrentLine).offset - b.length;
            start = 0;
        } else {
            b = new byte[mMyLines.get(mCurrentLine - 1).lineLength];
            mCurrentOffset = mMyLines.get(mCurrentLine - 1).offset;
            start = mCurrentLine - 2;
            if (start > 0) {
                start = mMyLines.get(mCurrentLine - 1).beforeLineLength - mMyLines.get(mCurrentLine - 2).beforeLineLength;
            } else {
                start = 0;
            }
        }
    } else {
        mCurrentOffset = 0;
        b = new byte[mMyLines.get(mCurrentLine).lineLength];
    }
    System.arraycopy(mScreenData, start, b, 0, b.length);
    String bookMarkName = Constant.BOOKMARK;
    try {
        bookMarkName = new String(b, this.encoding);
    } catch (UnsupportedEncodingException e) {
        bookMarkName = Constant.BOOKMARK;
    }
    bookMarkList.add(new BookMark(mCurrentOffset, bookMarkName, Constant.BOOK_ID_IN_DATABASE));
    boolean x = objectUtil.saveToFile(bookMarkList);
    // boolean x = xmlutil.saveToFile(bookMarkList);
    b = null;
    bookMarkName = null;
    System.gc();
    return x;
}
