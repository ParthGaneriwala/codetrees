public String saveEmployee() throws Exception {
    boolean isEdit = false;
    if (employee != null) {
        if (employee.getId() != null)
            isEdit = true;
        EmployeeStatus es = employee.getWorkStatus();
        if (es != null && es.getId() == 1L) {
            employee.setLeaveDate(null);
        }
        employeeDao.storeEmployee(employee);
        if (this.salaryStrategy != null) {
            SalaryStrategy salaryStrategy = salaryDao.getSalary(employee.getId());
            if (salaryStrategy == null) {
                salaryStrategy = new SalaryStrategy();
            }
            salaryStrategy.setEmployee(employee);
            salaryStrategy.setCreatedDate(DateUtil.getCurrentTimestamp());
            salaryStrategy.setSalary(this.salaryStrategy.getSalary());
            salaryStrategy.setBonusStock(this.salaryStrategy.getBonusStock());
            salaryStrategy.setDutySubsidy(this.salaryStrategy.getDutySubsidy());
            salaryStrategy.setNoAbsenceFee(this.salaryStrategy.getNoAbsenceFee());
            salaryStrategy.setSocialInsurence(this.salaryStrategy.getSocialInsurence());
            salaryDao.saveSalary(salaryStrategy);
        }
        if (upload != null) {
            Photo photo = new Photo();
            photo.setPhoto(upload);
            photo.setEmployee(employee);
            photo.setCreatedDate(DateUtil.getCurrentTimestamp());
            photoDao.savePhoto(photo);
        }
    }
    updateEmployeesList();
    if (isEdit)
        return "close_page";
    return SUCCESS;
}
