private void doSend(String request, HttpPosterListener listener) {
    record = new SalvaPreferencias();
    record.openRecStore();
    HttpConnection conn = null;
    InputStream in = null;
    OutputStream out = null;
    String cookie = null;
    if (record.readRecord(3) != null) {
        if (!record.readRecord(3).equals("")) {
            cookie = new String(record.readRecord(3));
        }
    } else {
        cookie = null;
    }
    byte[] responseBuf = null;
    String errorStr = null;
    boolean wasError = false;
    try {
        conn = (HttpConnection) Connector.open(url + parteOfUrl);
        // Set the request method and headers
        conn.setRequestMethod(HttpConnection.POST);
        conn.setRequestProperty("Content-Length", Integer.toString(request.length()));
        conn.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
        // If you have a cook, send it
        if (cookie != null) {
            conn.setRequestProperty("Cookie", "JSESSIONID=" + cookie);
        }
        // Getting the output stream may flush the headers
        out = conn.openOutputStream();
        int requestLength = request.length();
        for (int i = 0; i < requestLength; ++i) {
            out.write(request.charAt(i));
        }
        // Connect, then read cookie value
        // if we don't have one already
        int rc = conn.getResponseCode();
        if (cookie == null) {
            cookie = readCookie(conn).substring(11);
        // System.out.println("Co: "+cookie);
        }
        // Opening the InputStream will open the connection
        // and read the HTTP headers. They are stored until
        // requested.
        in = conn.openInputStream();
        System.out.println("Entrei");
        // Get the length and process the data
        long length = conn.getLength();
        if (length > 0) {
            responseBuf = new byte[(int) length];
        } else {
        // System.out.println("Entrei aqui");
        // responseBuf = new byte[100];  // default length
        }
        int ch = in.read();
        int indice = 0;
        while ((ch != -1)) {
            responseBuf[indice] = (byte) ch;
            ch = in.read();
            indice++;
        }
    } catch (IOException e) {
        wasError = true;
        errorStr = e.getMessage();
    } catch (SecurityException e) {
        wasError = true;
        errorStr = e.getMessage();
    } catch (NullPointerException e) {
        wasError = true;
        errorStr = e.getMessage();
    } finally {
        if (in != null) {
            try {
                in.close();
            } catch (IOException e) {
            }
        }
        if (out != null) {
            try {
                out.close();
            } catch (IOException e) {
            }
        }
        if (conn != null) {
            try {
                conn.close();
            } catch (IOException e) {
            }
        }
        // System.out.println("Passou4");
        record.writeRecord(3, cookie);
        // record.openRecStore();
        if (record.readRecord(3) != null) {
            cookie = new String(record.readRecord(3));
        // System.out.println("Cookie: "+cookie);
        }
        record.closeRecStore();
    }
    if (wasError) {
        listener.handleHttpError(errorStr);
    } else {
        listener.receiveHttpResponse(responseBuf);
    }
// System.out.println("Passou3");
}
