private void setGamesPanel() {
    gamesPanel = new JPanel(new GridLayout(1, 2));
    JPanel left = new JPanel();
    JPanel right = new JPanel();
    left.setLayout(new BoxLayout(left, BoxLayout.PAGE_AXIS));
    right.setLayout(new BoxLayout(right, BoxLayout.PAGE_AXIS));
    Box l = Box.createHorizontalBox();
    Box r = Box.createHorizontalBox();
    l.add(new JLabel("Open Games"));
    r.add(new JLabel("Games For Watch"));
    left.add(l);
    right.add(r);
    openGames = new JTable(new DefaultTableModel());
    for (String colName : openGamesColumnsNames) {
        ((DefaultTableModel) openGames.getModel()).addColumn(colName);
    }
    gamesForWatch = new JTable(new DefaultTableModel());
    for (String colName : gamesForWatchColumnsNames) {
        ((DefaultTableModel) gamesForWatch.getModel()).addColumn(colName);
    }
    openGames.setFillsViewportHeight(true);
    gamesForWatch.setFillsViewportHeight(true);
    JScrollPane openTablePane = new JScrollPane(openGames);
    JScrollPane gamesForWatchTablePane = new JScrollPane(gamesForWatch);
    l = Box.createHorizontalBox();
    r = Box.createHorizontalBox();
    l.add(openTablePane);
    r.add(gamesForWatchTablePane);
    left.add(l);
    right.add(r);
    joinGame = new JButton("Join Game");
    joinGame.addMouseListener(this);
    watchGame = new JButton("Watch Game");
    watchGame.addMouseListener(this);
    l = Box.createHorizontalBox();
    r = Box.createHorizontalBox();
    l.add(joinGame);
    r.add(watchGame);
    left.add(l);
    right.add(r);
    gamesPanel.add(left);
    gamesPanel.add(right);
}
