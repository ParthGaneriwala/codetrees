protected InputStream getStreamForLocation(IAeResourceKey aKey) throws AeResourceException {
    InputStream stream = null;
    try {
        byte[] bytes = (byte[]) mLru.get(aKey);
        if (bytes == null) {
            InputSource source = getInputSource(aKey.getLocation());
            stream = source.getByteStream();
            if (stream != null) {
                // read the stream into a buffer and save the buffer in cache
                int readLen, totalLen = 0;
                byte[] buffer = new byte[32768];
                while ((readLen = stream.read(buffer)) > 0) {
                    totalLen += readLen;
                    if (bytes == null) {
                        byte[] newBuf = new byte[readLen];
                        System.arraycopy(buffer, 0, newBuf, 0, readLen);
                        bytes = newBuf;
                    } else {
                        byte[] newBuf = new byte[totalLen];
                        System.arraycopy(bytes, 0, newBuf, 0, bytes.length);
                        System.arraycopy(buffer, 0, newBuf, bytes.length, readLen);
                        bytes = newBuf;
                    }
                }
                // just in case it is an empty file
                if (bytes.length == 0)
                    bytes = new byte[0];
            } else {
                Reader reader = source.getCharacterStream();
                // read the stream into a buffer and save the buffer in cache
                int readLen, totalLen = 0;
                char[] buffer = new char[32768];
                char[] chars = null;
                while ((readLen = reader.read(buffer)) > 0) {
                    totalLen += readLen;
                    if (chars == null) {
                        char[] newBuf = new char[readLen];
                        System.arraycopy(buffer, 0, newBuf, 0, readLen);
                        chars = newBuf;
                    } else {
                        char[] newBuf = new char[totalLen];
                        System.arraycopy(chars, 0, newBuf, 0, chars.length);
                        System.arraycopy(buffer, 0, newBuf, chars.length, readLen);
                        chars = newBuf;
                    }
                }
                // just in case it is an empty file
                if (chars.length == 0)
                    chars = new char[0];
                // convert to byte array for caching
                // $NON-NLS-1$
                String encoding = "utf-8";
                if (source.getEncoding() != null)
                    encoding = source.getEncoding();
                bytes = (new String(chars)).getBytes(encoding);
            }
            mLru.cache(aKey, bytes);
            // update stats
            if (getResourceStats() != null)
                getResourceStats().logDiskRead();
        }
        return new ByteArrayInputStream(bytes);
    } catch (Exception ex) {
        throw new AeResourceException(ex);
    } finally {
        AeCloser.close(stream);
    }
}
