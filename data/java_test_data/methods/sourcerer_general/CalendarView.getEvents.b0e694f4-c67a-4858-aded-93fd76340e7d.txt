public ArrayList getEvents(int max) {
    ArrayList<CalendarEventList> allDays = new ArrayList<CalendarEventList>();
    int count = 0;
    int loopCount = 0;
    int dayCount = 0;
    Calendar tmpCal = Calendar.getInstance(timeZone, locale);
    tmpCal.set(Calendar.HOUR, 0);
    tmpCal.set(Calendar.MINUTE, 0);
    tmpCal.set(Calendar.SECOND, 0);
    tmpCal.set(Calendar.MILLISECOND, 0);
    if (calendarInfo != null) {
        if (calendarInfo.isAgendaView()) {
            dayCount = AGENDA_DAY_COUNT;
        } else if (calendarInfo.getCalendarView().equalsIgnoreCase("day")) {
            dayCount = 1;
            tmpCal.set(calendarInfo.getYearSelected(), calendarInfo.getMonthSelected() - 1, calendarInfo.getDaySelected());
        } else if (calendarInfo.getCalendarView().equalsIgnoreCase("week")) {
            dayCount = 7;
            tmpCal.set(calendarInfo.getYearSelected(), calendarInfo.getStartMonthOfWeek() - 1, calendarInfo.getStartDayOfWeek());
        } else if (calendarInfo.getCalendarView().equals("month")) {
            dayCount = getEndCell(cal);
            tmpCal.set(calendarInfo.getYearSelected(), calendarInfo.getMonthSelected() - 1, 1);
        }
    }
    while (count < max && loopCount < dayCount) {
        CalendarEventList thisEventList = getDaysEvents(tmpCal.get(Calendar.MONTH), tmpCal.get(Calendar.DAY_OF_MONTH), tmpCal.get(Calendar.YEAR));
        if (thisEventList.size() > 0) {
            thisEventList.setDate(DateUtils.getDate(tmpCal));
            allDays.add(thisEventList);
        }
        tmpCal.add(java.util.Calendar.DATE, +1);
        loopCount++;
        count++;
    }
    return allDays;
}
