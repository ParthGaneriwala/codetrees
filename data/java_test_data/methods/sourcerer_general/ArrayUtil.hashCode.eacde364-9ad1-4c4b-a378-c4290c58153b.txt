/* ============================================================================ */
/* Hashcode������ */
/*                                                                              */
/* ���·�������ȡ�������hash code�� */
/* ============================================================================ */
public static int hashCode(Object array) {
    if (array == null) {
        return 0;
    }
    if (!array.getClass().isArray()) {
        return array.hashCode();
    }
    int hashCode = INITIAL_NON_ZERO_ODD_NUMBER;
    // array������
    if (array instanceof long[]) {
        long[] longArray = (long[]) array;
        for (int i = 0; i < longArray.length; i++) {
            hashCode = (hashCode * MULTIPLIER_NON_ZERO_ODD_NUMBER) + ((int) (longArray[i] ^ (longArray[i] >> 32)));
        }
    } else if (array instanceof int[]) {
        int[] intArray = (int[]) array;
        for (int i = 0; i < intArray.length; i++) {
            hashCode = (hashCode * MULTIPLIER_NON_ZERO_ODD_NUMBER) + intArray[i];
        }
    } else if (array instanceof short[]) {
        short[] shortArray = (short[]) array;
        for (int i = 0; i < shortArray.length; i++) {
            hashCode = (hashCode * MULTIPLIER_NON_ZERO_ODD_NUMBER) + shortArray[i];
        }
    } else if (array instanceof byte[]) {
        byte[] byteArray = (byte[]) array;
        for (int i = 0; i < byteArray.length; i++) {
            hashCode = (hashCode * MULTIPLIER_NON_ZERO_ODD_NUMBER) + byteArray[i];
        }
    } else if (array instanceof double[]) {
        double[] doubleArray = (double[]) array;
        for (int i = 0; i < doubleArray.length; i++) {
            long longBits = Double.doubleToLongBits(doubleArray[i]);
            hashCode = (hashCode * MULTIPLIER_NON_ZERO_ODD_NUMBER) + ((int) (longBits ^ (longBits >> 32)));
        }
    } else if (array instanceof float[]) {
        float[] floatArray = (float[]) array;
        for (int i = 0; i < floatArray.length; i++) {
            hashCode = (hashCode * MULTIPLIER_NON_ZERO_ODD_NUMBER) + Float.floatToIntBits(floatArray[i]);
        }
    } else if (array instanceof boolean[]) {
        boolean[] booleanArray = (boolean[]) array;
        for (int i = 0; i < booleanArray.length; i++) {
            hashCode = (hashCode * MULTIPLIER_NON_ZERO_ODD_NUMBER) + (booleanArray[i] ? 1 : 0);
        }
    } else if (array instanceof char[]) {
        char[] charArray = (char[]) array;
        for (int i = 0; i < charArray.length; i++) {
            hashCode = (hashCode * MULTIPLIER_NON_ZERO_ODD_NUMBER) + charArray[i];
        }
    } else {
        Object[] objectArray = (Object[]) array;
        for (int i = 0; i < objectArray.length; i++) {
            hashCode = (hashCode * MULTIPLIER_NON_ZERO_ODD_NUMBER) + hashCode(objectArray[i]);
        }
    }
    return hashCode;
}
