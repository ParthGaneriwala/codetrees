public com.jcommerce.core.model.Order getCoreOrder(com.jcommerce.ws.server.Order input) {
    com.jcommerce.core.model.Order ret = new com.jcommerce.core.model.Order();
    ret.setId(input.getId());
    ret.setUser((com.jcommerce.core.model.User) (dbAccessImpl.getBean0("User", String.valueOf(input.getUser()))));
    ret.setEmail(input.getEmail());
    if (input.getAddTime() != null) {
        ret.setAddTime(new Timestamp(input.getAddTime().getTime()));
    }
    ret.setAgency((com.jcommerce.core.model.Agency) (dbAccessImpl.getBean0("Agency", String.valueOf(input.getAgency()))));
    ret.setReferer(input.getReferer());
    ret.setSN(input.getSN());
    ret.setShippingStatus(input.getShippingStatus());
    ret.setRegion((com.jcommerce.core.model.Region) (dbAccessImpl.getBean0("Region", String.valueOf(input.getRegion()))));
    ret.setPayStatus(input.getPayStatus());
    ret.setConsignee(input.getConsignee());
    ret.setZip(input.getZip());
    ret.setPhone(input.getPhone());
    ret.setMobile(input.getMobile());
    ret.setSignBuilding(input.getSignBuilding());
    ret.setBestTime(input.getBestTime());
    ret.setPostScript(input.getPostScript());
    ret.setPackName(input.getPackName());
    ret.setCardName(input.getCardName());
    ret.setCardMessage(input.getCardMessage());
    ret.setInvoicePayee(input.getInvoicePayee());
    ret.setInvoiceContent(input.getInvoiceContent());
    if ((String.valueOf(input.getGoodsAmount()).indexOf("NaN") < 0) && (String.valueOf(input.getGoodsAmount()).indexOf("Inf") < 0)) {
        ret.setGoodsAmount(input.getGoodsAmount());
    }
    if ((String.valueOf(input.getShippingFee()).indexOf("NaN") < 0) && (String.valueOf(input.getShippingFee()).indexOf("Inf") < 0)) {
        ret.setShippingFee(input.getShippingFee());
    }
    if ((String.valueOf(input.getInsureFee()).indexOf("NaN") < 0) && (String.valueOf(input.getInsureFee()).indexOf("Inf") < 0)) {
        ret.setInsureFee(input.getInsureFee());
    }
    if ((String.valueOf(input.getPayFee()).indexOf("NaN") < 0) && (String.valueOf(input.getPayFee()).indexOf("Inf") < 0)) {
        ret.setPayFee(input.getPayFee());
    }
    ret.setPayment((com.jcommerce.core.model.Payment) (dbAccessImpl.getBean0("Payment", String.valueOf(input.getPayment()))));
    ret.setShipping((com.jcommerce.core.model.Shipping) (dbAccessImpl.getBean0("Shipping", String.valueOf(input.getShipping()))));
    ret.setHowOss(input.getHowOss());
    ret.setHowSurplus(input.getHowSurplus());
    if ((String.valueOf(input.getMoneyPaid()).indexOf("NaN") < 0) && (String.valueOf(input.getMoneyPaid()).indexOf("Inf") < 0)) {
        ret.setMoneyPaid(input.getMoneyPaid());
    }
    if ((String.valueOf(input.getSurplus()).indexOf("NaN") < 0) && (String.valueOf(input.getSurplus()).indexOf("Inf") < 0)) {
        ret.setSurplus(input.getSurplus());
    }
    ret.setIntegral(input.getIntegral());
    if ((String.valueOf(input.getIntegralMoney()).indexOf("NaN") < 0) && (String.valueOf(input.getIntegralMoney()).indexOf("Inf") < 0)) {
        ret.setIntegralMoney(input.getIntegralMoney());
    }
    if ((String.valueOf(input.getOrderAmount()).indexOf("NaN") < 0) && (String.valueOf(input.getOrderAmount()).indexOf("Inf") < 0)) {
        ret.setOrderAmount(input.getOrderAmount());
    }
    if ((String.valueOf(input.getBonusMoney()).indexOf("NaN") < 0) && (String.valueOf(input.getBonusMoney()).indexOf("Inf") < 0)) {
        ret.setBonusMoney(input.getBonusMoney());
    }
    ret.setFromAD(input.getFromAD());
    if (input.getConfirmTime() != null) {
        ret.setConfirmTime(new Timestamp(input.getConfirmTime().getTime()));
    }
    if (input.getPayTime() != null) {
        ret.setPayTime(new Timestamp(input.getPayTime().getTime()));
    }
    if (input.getShippingTime() != null) {
        ret.setShippingTime(new Timestamp(input.getShippingTime().getTime()));
    }
    ret.setPack((com.jcommerce.core.model.Pack) (dbAccessImpl.getBean0("Pack", String.valueOf(input.getPack()))));
    ret.setCard((com.jcommerce.core.model.Card) (dbAccessImpl.getBean0("Card", String.valueOf(input.getCard()))));
    ret.setUserBonus((com.jcommerce.core.model.UserBonus) (dbAccessImpl.getBean0("UserBonus", String.valueOf(input.getUserBonus()))));
    ret.setInvoiceNO(input.getInvoiceNO());
    ret.setExtensionCode(input.getExtensionCode());
    ret.setExtensionId(input.getExtensionId());
    ret.setToBuyer(input.getToBuyer());
    ret.setPayNote(input.getPayNote());
    ret.setInvoceType(input.getInvoceType());
    if ((String.valueOf(input.getTax()).indexOf("NaN") < 0) && (String.valueOf(input.getTax()).indexOf("Inf") < 0)) {
        ret.setTax(input.getTax());
    }
    ret.setSeparate(input.getSeparate());
    if ((String.valueOf(input.getDiscount()).indexOf("NaN") < 0) && (String.valueOf(input.getDiscount()).indexOf("Inf") < 0)) {
        ret.setDiscount(input.getDiscount());
    }
    ret.setParent((com.jcommerce.core.model.Order) (dbAccessImpl.getBean0("Order", String.valueOf(input.getParent()))));
    ret.setStatus(input.getStatus());
    ret.setAddress(input.getAddress());
    return ret;
}
