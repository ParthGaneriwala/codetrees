// GEN-BEGIN:|2-switchDisplayable|2|
// </editor-fold>//GEN-END:|2-switchDisplayable|2|
// <editor-fold defaultstate="collapsed" desc=" Generated Method: commandAction for Displayables ">//GEN-BEGIN:|4-commandAction|0|4-preCommandAction
public void commandAction(Command command, Displayable displayable) {
    // write pre-action user code here
    if (displayable == configScreen) {
        // GEN-BEGIN:|4-commandAction|1|31-preAction
        if (command == clearCommand1) {
            // GEN-END:|4-commandAction|1|31-preAction
            textField.setString("");
        // GEN-LINE:|4-commandAction|2|31-postAction
        } else if (command == saveCommand) {
            // GEN-LINE:|4-commandAction|3|28-preAction
            presentationActions.setServerConfig(textField.getString());
            // GEN-LINE:|4-commandAction|4|28-postAction
            switchDisplayable(null, getStartScreen());
        }
    // GEN-BEGIN:|4-commandAction|5|59-preAction
    } else if (displayable == meetingHistoryList) {
        if (command == List.SELECT_COMMAND) {
            // GEN-END:|4-commandAction|5|59-preAction
            // write pre-action user code here
            // GEN-LINE:|4-commandAction|6|59-postAction
            meetingHistoryListAction();
        // write post-action user code here
        } else if (command == backCommand) {
            // GEN-LINE:|4-commandAction|7|62-preAction
            // write pre-action user code here
            // GEN-LINE:|4-commandAction|8|62-postAction
            switchDisplayable(null, getStartScreen());
        // write post-action user code here
        } else if (command == clearCommand) {
            // write pre-action user code here
            if (meetings != null) {
                meetings.removeAllElements();
            }
            if (notes != null) {
                notes.removeAllElements();
            }
            getMeetingHistoryList().deleteAll();
        // GEN-LINE:|4-commandAction|10|90-postAction
        // write post-action user code here
        } else if (command == selectCommand) {
            // GEN-LINE:|4-commandAction|11|64-preAction
            // write pre-action user code here
            int selectedIndex = getMeetingHistoryList().getSelectedIndex();
            if (selectedIndex > -1) {
                PresentationMeeting presentationMeeting = (PresentationMeeting) meetings.elementAt(getMeetingHistoryList().getSelectedIndex());
                notes = presentationMeeting.getMeetingNotes();
                getMeetingNoteList().deleteAll();
                if (notes != null) {
                    for (int i = 0; i < notes.size(); i++) {
                        getMeetingNoteList().append((String) notes.elementAt(i), null);
                    }
                }
                // GEN-LINE:|4-commandAction|12|64-postAction
                switchDisplayable(null, getMeetingNoteList());
            }
        // write post-action user code here
        }
    // GEN-BEGIN:|4-commandAction|13|75-preAction
    } else if (displayable == meetingNoteList) {
        if (command == List.SELECT_COMMAND) {
            // GEN-END:|4-commandAction|13|75-preAction
            // write pre-action user code here
            // GEN-LINE:|4-commandAction|14|75-postAction
            meetingNoteListAction();
        // write post-action user code here
        } else if (command == backCommand2) {
            // GEN-LINE:|4-commandAction|15|78-preAction
            // write pre-action user code here
            // GEN-LINE:|4-commandAction|16|78-postAction
            switchDisplayable(null, getMeetingHistoryList());
        // write post-action user code here
        } else if (command == selectCommand1) {
            // GEN-LINE:|4-commandAction|17|80-preAction
            // write pre-action user code here
            int selectedIndex = getMeetingNoteList().getSelectedIndex();
            if (selectedIndex > -1) {
                getNoteText().setText((String) notes.elementAt(selectedIndex));
                // GEN-LINE:|4-commandAction|18|80-postAction
                switchDisplayable(null, getNoteScreen());
            }
        // write post-action user code here
        }
    // GEN-BEGIN:|4-commandAction|19|85-preAction
    } else if (displayable == noteScreen) {
        if (command == backCommand3) {
            // GEN-END:|4-commandAction|19|85-preAction
            // write pre-action user code here
            // GEN-LINE:|4-commandAction|20|85-postAction
            switchDisplayable(null, getMeetingNoteList());
        // write post-action user code here
        }
    // GEN-BEGIN:|4-commandAction|21|13-preAction
    } else if (displayable == presentationScreen) {
        if (command == backCommand1) {
            // GEN-END:|4-commandAction|21|13-preAction
            presentationActions.stopServerCommunication();
            // GEN-LINE:|4-commandAction|22|13-postAction
            switchDisplayable(null, getStartScreen());
        } else if (command == nextNoteCommand) {
            // GEN-LINE:|4-commandAction|23|17-preAction
            final String nextNote = presentationActions.getNextNote();
            if (nextNote != null && !"".equals(nextNote)) {
                setScreenText(nextNote);
            }
        // GEN-LINE:|4-commandAction|24|17-postAction
        } else if (command == prevNoteCommand) {
            // GEN-LINE:|4-commandAction|25|15-preAction
            final String prevNote = presentationActions.getPreviousNote();
            if (prevNote != null && !"".equals(prevNote)) {
                setScreenText(prevNote);
            }
        // GEN-LINE:|4-commandAction|26|15-postAction
        }
    // GEN-BEGIN:|4-commandAction|27|92-preAction
    } else if (displayable == startScreen) {
        if (command == deviceInfoCommand) {
            // GEN-END:|4-commandAction|27|92-preAction
            Alert alert = new Alert("Bluetooth address");
            alert.setString(presentationActions.showInfo());
            alert.setType(AlertType.INFO);
            alert.setTimeout(Alert.FOREVER);
            getDisplay().setCurrent(alert);
        // GEN-LINE:|4-commandAction|28|92-postAction
        // write post-action user code here
        } else if (command == exitCommand) {
            // GEN-LINE:|4-commandAction|29|34-preAction
            presentationActions.exitApp();
            exitMIDlet();
        // GEN-LINE:|4-commandAction|30|34-postAction
        // write post-action user code here
        } else if (command == historyCommand) {
            // GEN-LINE:|4-commandAction|31|38-preAction
            getMeetingHistoryList().deleteAll();
            meetings = presentationActions.getPreviousMeetings();
            if (meetings != null) {
                for (int i = 0; i < meetings.size(); i++) {
                    PresentationMeeting presentationMeeting = (PresentationMeeting) meetings.elementAt(i);
                    Date savedDate = presentationMeeting.getSavedDate();
                    if (savedDate == null) {
                        getMeetingHistoryList().append(presentationMeeting.getMeetingId(), null);
                    } else {
                        getMeetingHistoryList().append(savedDate.toString(), null);
                    }
                }
            }
            // GEN-LINE:|4-commandAction|32|38-postAction
            switchDisplayable(null, getMeetingHistoryList());
        // write post-action user code here
        } else if (command == presentationCommand) {
            // GEN-LINE:|4-commandAction|33|36-preAction
            // write pre-action user code here
            presentationActions.startServerCommunication();
            // GEN-LINE:|4-commandAction|34|36-postAction
            switchDisplayable(null, getPresentationScreen());
        // write post-action user code here
        } else if (command == serverConfigCommand) {
            // GEN-LINE:|4-commandAction|35|94-preAction
            getDisplay().setCurrent(getConfigScreen());
            textField.setString(presentationActions.getServerConfig());
            // GEN-LINE:|4-commandAction|36|94-postAction
            switchDisplayable(null, getConfigScreen());
        // write post-action user code here
        }
    // GEN-BEGIN:|4-commandAction|37|4-postCommandAction
    }
// GEN-END:|4-commandAction|37|4-postCommandAction
// write post-action user code here
}
