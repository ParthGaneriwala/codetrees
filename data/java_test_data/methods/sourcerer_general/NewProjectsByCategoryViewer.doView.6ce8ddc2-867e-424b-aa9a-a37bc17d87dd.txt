public String doView(RenderRequest request, RenderResponse response) throws Exception {
    String defaultView = VIEW_PAGE1;
    // Preferences
    String categoryName = request.getPreferences().getValue(PREF_CATEGORY, "");
    String title = request.getPreferences().getValue(PREF_TITLE, "");
    String limitString = request.getPreferences().getValue(PREF_LIMIT, "0");
    request.setAttribute(SHOW_RATING, request.getPreferences().getValue(PREF_SHOW_RATING, null));
    request.setAttribute(SHOW_POINTS, request.getPreferences().getValue(PREF_SHOW_POINTS, null));
    request.setAttribute(TITLE, title);
    // Get category id from name
    Connection db = PortalUtils.useConnection(request);
    ProjectCategoryList categories = new ProjectCategoryList();
    categories.setCategoryDescription(categoryName);
    categories.setEnabled(true);
    categories.setTopLevelOnly(true);
    categories.buildList(db);
    ProjectCategory category = (categories.size() > 0 ? categories.get(0) : null);
    if (category != null) {
        ProjectList projectList = new ProjectList();
        projectList.setInstanceId(PortalUtils.getInstance(request).getId());
        projectList.setCategoryId(category.getId());
        PagedListInfo projectListInfo = new PagedListInfo();
        projectListInfo.setItemsPerPage(Integer.parseInt(limitString));
        projectListInfo.setDefaultSort("entered", "DESC");
        projectList.setPagedListInfo(projectListInfo);
        projectList.setApprovedOnly(true);
        projectList.setOpenProjectsOnly(true);
        if (PortalUtils.getDashboardPortlet(request).isCached()) {
            if (PortalUtils.canShowSensitiveData(request)) {
                // Use the most generic settings since this portlet is cached
                projectList.setForParticipant(Constants.TRUE);
            } else {
                // Use the most generic settings since this portlet is cached
                projectList.setPublicOnly(true);
            }
        } else {
            // Use the current user's setting
            User thisUser = PortalUtils.getUser(request);
            if (thisUser.isLoggedIn()) {
                projectList.setForParticipant(Constants.TRUE);
            } else {
                projectList.setPublicOnly(true);
            }
        }
        projectList.setProfileEnabled(Constants.TRUE);
        projectList.setBuildImages(true);
        projectList.buildList(db);
        request.setAttribute(PROJECT_LIST, projectList);
        if (projectList.size() == 0) {
            return null;
        }
    }
    // JSP view
    return defaultView;
}
