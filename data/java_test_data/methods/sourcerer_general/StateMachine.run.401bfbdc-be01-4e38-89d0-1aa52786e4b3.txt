public String run(String processName, IActionHandler actionHandler, IUI ui, String processDefinitionResolver, String data) {
    ProcessDefinition processDefinition = ProcessDefinitionLoader.load(processName, "", processDefinitionResolver, data);
    ProcessInstance rootProcess = new ProcessInstance(processDefinition);
    rootProcess.getContextInstance().setVariable(actionHandlerVariableName, actionHandler);
    UIManager man = new UIManager(ui, rootProcess.getContextInstance());
    Token token = rootProcess.getRootToken();
    ProcessInstance process = rootProcess;
    do {
        if (process.hasEnded()) {
            Token superToken = process.getSuperProcessToken();
            if (superToken != null) {
                token = superToken;
                process = token.getProcessInstance();
                continue;
            } else
                break;
        }
        ProcessInstance subprocess = token.getSubProcessInstance();
        if (subprocess != null) {
            process = subprocess;
            token = subprocess.getRootToken();
        }
        Node n = token.getNode();
        if (n instanceof State) {
            for (; ; ) {
                Helper.ProcessInformation pi = Helper.getProcessInformation(process.getProcessDefinition().getStartState().getName());
                String action = man.show(n.getName(), pi.processName, pi.superProcessName);
                try {
                    token.signal(action);
                } catch (Exception e) {
                    e.printStackTrace();
                    continue;
                }
                break;
            }
        } else {
            token.signal();
        }
    } while (true);
    String action;
    action = (String) rootProcess.getContextInstance().getVariable("action");
    return action;
}
