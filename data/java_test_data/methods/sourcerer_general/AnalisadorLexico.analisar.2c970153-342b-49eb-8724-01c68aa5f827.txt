public void analisar() {
    erros = new ArrayList<Erro>();
    tokens = new ArrayList<Token>();
    index = 0;
    numeroDaLinha = 1;
    if (!codigoFonte.isEmpty()) {
        firstChar();
    }
    while (index < codigoFonte.length()) {
        // Gambiarra de fim da string :)
        if (atual.equals("FIM DO FONTE"))
            return;
        if (currentChar().equals(" ") || currentChar().equals("\f") || currentChar().equals("\t")) {
            token = "";
            nextChar();
            continue;
        } else if (currentChar().equals("\n")) {
            numeroDaLinha++;
            token = "";
            nextChar();
            continue;
        } else if (Pattern.matches(regexEstadosAnalisadorLexico.getString("i0A"), currentChar().toString())) {
            token += currentChar();
            estadoA();
        } else if (Pattern.matches(regexEstadosAnalisadorLexico.getString("i0B"), currentChar().toString())) {
            token += currentChar();
            estadoB();
        } else if (Pattern.matches(regexEstadosAnalisadorLexico.getString("i0D"), currentChar().toString())) {
            token += currentChar();
            estadoD();
        } else if (Pattern.matches(regexEstadosAnalisadorLexico.getString("i0E"), currentChar().toString())) {
            token += currentChar();
            estadoE();
        } else if (Pattern.matches(regexEstadosAnalisadorLexico.getString("i0G"), currentChar().toString())) {
            token += currentChar();
            estadoG();
        } else if (Pattern.matches(regexEstadosAnalisadorLexico.getString("i0I"), currentChar().toString())) {
            token += currentChar();
            estadoI();
        } else if (Pattern.matches(regexEstadosAnalisadorLexico.getString("i0L"), currentChar().toString()) || Pattern.matches(",", currentChar().toString())) {
            token += currentChar();
            estadoL();
        } else if (Pattern.matches(regexEstadosAnalisadorLexico.getString("i0N"), currentChar().toString())) {
            token += currentChar();
            estadoN();
        } else if (Pattern.matches(regexEstadosAnalisadorLexico.getString("i0i1"), currentChar().toString())) {
            token += currentChar();
            estadoi1();
        } else {
            token += currentChar();
            erros.add(new ErroLexico(new Token(token, TipoToken.INVALIDO, numeroDaLinha), TipoErroLexico.SIMBOLO_INEXISTENTE));
            nextChar();
        }
    }
}
