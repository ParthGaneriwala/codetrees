public static String changeUserPassword(String id, String oldPass, String newPass, Info in) {
    String result = "Password Changed";
    Logger log = Logger.getLogger(ActiveDirectoryPassword.class);
    LdapContext ctx = null;
    try {
        ActiveDirectory ldap = new ActiveDirectory(in);
        Attributes attrs = ldap.getUserById(id);
        String dn = (String) attrs.get("distinguishedName").get();
        ldap.close();
        ctx = getUserContext(dn, oldPass, in);
        ldap = new ActiveDirectory(ctx);
        ModificationItem[] modificationItem = new ModificationItem[2];
        modificationItem[0] = new ModificationItem(DirContext.REMOVE_ATTRIBUTE, getPasswordAttribute(oldPass));
        modificationItem[1] = new ModificationItem(DirContext.ADD_ATTRIBUTE, getPasswordAttribute(newPass));
        ctx.modifyAttributes(dn, modificationItem);
    } catch (AuthenticationException e) {
        result = "Invalid current password";
    } catch (OperationNotSupportedException e) {
        result = "Password was not accepted by the server: " + e.getMessage();
        log.warn(result, e);
    } catch (InvalidAttributeValueException e) {
        result = "Password was not accepted by the server (security policy)";
        log.warn(result, e);
    } catch (NamingException e) {
        result = "ERROR! Message from server: " + e.toString() + " " + e.getMessage();
        log.warn(result, e);
    } catch (UnsupportedEncodingException e) {
        result = "INTERNAL password encoding error";
    } finally {
        try {
            if (ctx != null)
                ctx.close();
        } catch (NamingException e) {
            log.warn("Error closing context", e);
        }
    }
    return result;
}
