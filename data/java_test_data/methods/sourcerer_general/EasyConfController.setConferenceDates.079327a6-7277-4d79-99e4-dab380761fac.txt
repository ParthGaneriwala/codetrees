public void setConferenceDates(String dateStr) {
    // Pattern p = Pattern.compile("^(\\w+)\\.?\\s+(\\d+)\\s*-\\s*(\\d+)\\s*,+(\\d+)");
    Pattern p = Pattern.compile("\\s*(\\w+)\\s+(\\d+)\\s*-\\s*(\\d+)\\s*,\\s*(\\d+)\\s*");
    Matcher m = p.matcher(dateStr);
    DateFormat df = DateFormat.getDateInstance();
    if (m.matches()) {
        Calendar cal1, cal2;
        String date1, date2;
        StringBuffer outDate1 = new StringBuffer(), outDate2;
        date1 = m.group(1) + " " + m.group(2) + ", " + m.group(4);
        date2 = m.group(1) + " " + m.group(3) + ", " + m.group(4);
        cal1 = Calendar.getInstance();
        cal2 = Calendar.getInstance();
        try {
            cal1.setTime(df.parse(date1));
            cal2.setTime(df.parse(date2));
            outDate1.append(cal1.get(Calendar.YEAR));
            outDate1.append("-");
            outDate2 = new StringBuffer(outDate1.toString());
            outDate1.append(cal1.get(Calendar.MONTH) + 1);
            outDate1.append("-");
            outDate1.append(cal1.get(Calendar.DAY_OF_MONTH));
            outDate2.append(cal2.get(Calendar.MONTH) + 1);
            outDate2.append("-");
            outDate2.append(cal2.get(Calendar.DAY_OF_MONTH));
            this.windowController.setConferenceStartDate(outDate1.toString());
            this.windowController.setConferenceEndDate(outDate2.toString());
        } catch (ParseException pe) {
        }
    } else {
        System.out.println("uh uh + " + dateStr);
    }
}
