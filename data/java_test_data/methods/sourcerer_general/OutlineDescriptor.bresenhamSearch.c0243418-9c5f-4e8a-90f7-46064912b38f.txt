private java.awt.Point bresenhamSearch(RGBImage img, int c_x, int c_y, int e_x, int e_y) {
    boolean steep = Math.abs(e_y - c_y) > Math.abs(e_x - c_x);
    int x0 = c_x, y0 = c_y, x1 = e_x, y1 = e_y;
    int temp = 0;
    if (steep) {
        x0 = c_y;
        y0 = c_x;
        x1 = e_y;
        y1 = e_x;
    }
    if (x0 > x1) {
        temp = x0;
        x0 = x1;
        x1 = temp;
        temp = y0;
        y0 = y1;
        y1 = temp;
    }
    int deltax = x1 - x0;
    int deltay = Math.abs(y1 - y0);
    float error = 0;
    float deltaerr = (float) deltay / deltax;
    int y = y0;
    int ystep = 1;
    if (y0 < y1)
        ystep = 1;
    else
        ystep = -1;
    for (int x = x0; x < x1; x++) {
        RGBColor RGB = null;
        if (steep)
            RGB = img.getRGBColor(y, x);
        else
            RGB = img.getRGBColor(x, y);
        error = error + deltaerr;
        if (error >= 0.5) {
            y += ystep;
            error -= 1;
        }
        int w = RGB.getBlue() & 0xFF;
        if (w > 240) {
            if (steep)
                return new java.awt.Point(y, x);
            else
                return new java.awt.Point(x, y);
        }
    }
    return null;
}
