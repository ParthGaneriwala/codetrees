public DetallePedidoVO findByPrimaryKey(DetallePedidoVO object) throws SystemException {
    Assert.isNotNull(object, "productoVO specified is null!!");
    final String METHOD_NAME = "findByPrimaryKey";
    PreparedStatement statement = null;
    ResultSet query = null;
    StringBuffer sql = new StringBuffer();
    StringBuffer sqlSentence = new StringBuffer();
    DetallePedidoVO elem = new DetallePedidoVO();
    try {
        sql.append("SELECT ");
        sql.append(factorizeSqlBindValues());
        sql.append(" FROM detalle_pedido  WHERE   ");
        sqlSentence.append(sql.toString());
        sql.append("id_pedido=?");
        sql.append("AND");
        sql.append("id_producto=?");
        statement = connection.prepareStatement(sql.toString());
        if (object.getId_pedido() != null) {
            statement.setLong(1, object.getId_pedido());
            sqlSentence.append("id=").append(object.getId_pedido());
        }
        if (object.getId_producto() != null) {
            statement.setLong(2, object.getId_producto());
            sqlSentence.append("nombre=").append(object.getId_producto());
        }
        query = statement.executeQuery();
        List<DetallePedidoVO> tmp = factorizeFieldNames(query);
        if ((tmp.size() > 0) && (tmp.get(0) != null)) {
            elem = tmp.get(0);
        }
        return elem;
    } catch (Exception sqlEx) {
        throw new SystemException(sqlEx, FULL_NAME, METHOD_NAME);
    } finally {
        closeResources(statement, query);
    }
}
