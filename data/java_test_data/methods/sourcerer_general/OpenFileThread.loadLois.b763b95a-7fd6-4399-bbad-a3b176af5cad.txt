private void loadLois(String realName, String[] labels) {
    String netName = realName + " (" + MapKeys.NET_LOIS + ")";
    String key = MapKeys.DESCR + realName;
    String descr = props.getProperty(key);
    if (descr == null)
        descr = "N/A";
    else
        descr = descr.replace("%20", " ");
    NetworkFactory.create(NetworkFactory.Type.LANDMARK, netName, descr, null);
    Network net = NetworkFactory.getNetwork(netName);
    LoisTableModel model = (LoisTableModel) NetworkFactory.getTable(netName).getModel();
    // Get each step indexed by label which starts as the 2nd (index 1) value
    for (int row = 1; row < labels.length; row++) {
        String label = labels[row];
        // map.net.<real tabName>.<label> <x> <y> <longitude> <latitude>
        key = MapKeys.LOIS + realName + "." + label;
        // String ky = MapKeys.LOIS + realName + "." + label;
        String value = props.getProperty(key);
        boolean isLandmark = false;
        // If value is not alpha numeric, this must be a watch
        if (label.matches("[A-Z]"))
            isLandmark = true;
        String[] values = value.split(" +");
        int x = Integer.parseInt(values[0]);
        int y = Integer.parseInt(values[1]);
        double lon = Double.parseDouble(values[2]);
        double lat = Double.parseDouble(values[3]);
        sb.delete(0, sb.length());
        formatter.format("%9.5f", lon);
        String lons = sb.toString();
        sb.delete(0, sb.length());
        formatter.format("%9.5f", lat);
        String lats = sb.toString();
        LOI step = null;
        if (isLandmark) {
            // Get the step
            step = new Landmark(lons, lats);
            // Save reference to this step in case it's an extent
            keyToWayMap.put(key, step);
            // Set the network as the landmark will need it (somewhere)
            step.setNetwork(net);
            loadCategories(realName, label, ((Landmark) step).getCategories());
            loadMobisodes(realName, label, ((Landmark) step).getMobisodes());
            // Retrieve the audio prompt
            String k = key + ".audio";
            String v = props.getProperty(k);
            if (v != null)
                ((Landmark) step).setAudio(v);
        } else {
            step = new Watch(lons, lats);
            double radius = Double.parseDouble(values[5]);
            ((Watch) step).setRadius(radius);
        }
        step.setLabel(labels[row]);
        step.setX(x);
        step.setY(y);
        step.setRealLat(lat);
        step.setRealLon(lon);
        step.setNetName(netName);
        step.setDescr(values[4].replace("%20", " "));
        model.addWay(step);
        // Get the landmark reference (thus, we can only be processing
        // a watch), if there is one, and put it in the extent
        // hashtable for second pass later
        key += ".extent";
        String landmarkRef = props.getProperty(key);
        if (landmarkRef != null)
            wayToXptMap.put(step, landmarkRef);
    }
}
