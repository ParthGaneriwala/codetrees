public ActionForward edit(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
    VideoInfoForm videoInfoForm = (VideoInfoForm) form;
    UcMembers admin = (UcMembers) request.getSession().getAttribute("ADMIN");
    String returnUrl = request.getParameter("returnUrl");
    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    System.out.println(returnUrl);
    try {
        if (videoListManager.verifyTitle(videoInfoForm.getId(), videoInfoForm.getTitle().trim())) {
            Video v = videoListManager.getVideo(videoInfoForm.getId());
            v.setIsdelete("N");
            v.setUserid(admin.getUid());
            v.setUserip(request.getLocalAddr());
            v.setPubdate(formatter.parse(videoInfoForm.getPubdate()));
            v.setTitle(videoInfoForm.getTitle());
            v.setContent(videoInfoForm.getContent());
            v.setLastpost(new Date());
            /*v.setVideourl( videoInfoForm.getVideourl() );
				v.setWidth( videoInfoForm.getWidth() );
				v.setHeight( videoInfoForm.getHeight() );*/
            v.setClick(0);
            v.setIscommend(new Short("0"));
            v.setIsverify(new Short("0"));
            v.setDigg(0);
            if (videoInfoForm.getIscommend() != null)
                v.setIscommend(videoInfoForm.getIscommend());
            if (videoInfoForm.getIsverify() != null)
                v.setIsverify(videoInfoForm.getIsverify());
            if (videoInfoForm.getMaintypeid() != null) {
                VideoType at = videoTypeManager.getVideoType(videoInfoForm.getMaintypeid());
                v.setVideoType(at);
            }
            if (videoInfoForm.getTypeid() != null) {
                VideoType at = videoTypeManager.getVideoType(videoInfoForm.getTypeid());
                v.setVideoType2(at);
            }
            if (videoInfoForm.getShorttitle() != null && videoInfoForm.getShorttitle().length() > 0) {
                v.setShorttitle(videoInfoForm.getShorttitle());
            }
            if (videoInfoForm.getShorttitle() == null || videoInfoForm.getShorttitle().length() == 0) {
                String shorttitle = (videoInfoForm.getTitle().length() > 40) ? videoInfoForm.getTitle().substring(0, 39) : videoInfoForm.getTitle();
                v.setShorttitle(shorttitle);
            }
            if (videoInfoForm.getSource() != null && videoInfoForm.getSource().length() > 0) {
                v.setSource(videoInfoForm.getSource());
            }
            if (videoInfoForm.getWriter() != null && videoInfoForm.getWriter().length() > 0) {
                v.setWriter(videoInfoForm.getWriter());
            }
            if (videoInfoForm.getDescription() != null && videoInfoForm.getDescription().length() > 0) {
                v.setDescription(videoInfoForm.getDescription());
            }
            if (videoInfoForm.getLikeid() != null && videoInfoForm.getLikeid().length() > 0) {
                v.setLikeid(videoInfoForm.getLikeid());
            }
            if (videoInfoForm.getColor() != null && videoInfoForm.getColor().length() > 0) {
                v.setColor(videoInfoForm.getColor());
            }
            v.setKeywords(videoInfoForm.getKeywords());
            System.out.println(videoInfoForm.getLitpictype());
            if (videoInfoForm.getLitpictype() == 2) {
                // �����ϴ�
                System.out.println(videoInfoForm.getLocallitpic() != null);
                if (videoInfoForm.getLocallitpic() != null) {
                    FormFile file = videoInfoForm.getLocallitpic();
                    System.out.println(file.getFileSize());
                    System.out.println(file.getFileName().substring(file.getFileName().lastIndexOf(".")));
                    String ext = "";
                    if (file.getFileSize() > 0 && file.getFileSize() <= 3000000) {
                        ext = file.getFileName().substring(file.getFileName().lastIndexOf("."));
                        if (ext.toLowerCase().equals(".jpg") || ext.toLowerCase().equals(".gif") || ext.toLowerCase().equals(".png") || ext.toLowerCase().equals(".jpeg")) {
                            String litpic = UploadFile.upload(file, request, "UploadFile/video", 400, 400);
                            System.out.println(litpic);
                            v.setLitpic(litpic);
                            System.out.println(request.getRealPath("/") + litpic);
                            System.out.println(Constant.APPSERV_VIRTUAL_ADDRESS + "\\" + litpic);
                            FileAccess.Copy(request.getRealPath("/") + litpic, Constant.APPSERV_VIRTUAL_ADDRESS + "\\" + litpic);
                        } else {
                            request.setAttribute("FAIL_MESSAGE", "ֻ���ϴ�jpeg,jpg,gif,png����ͼƬ!");
                            return mapping.findForward("fail");
                        }
                    } else {
                        request.setAttribute("FAIL_MESSAGE", "�ϴ���ͼƬ���󣬲��ܴ���3M!");
                        return mapping.findForward("fail");
                    }
                }
            } else {
                if (videoInfoForm.getLitpicurl() != null && videoInfoForm.getLitpicurl().length() > 0) {
                    v.setLitpic(videoInfoForm.getLitpicurl());
                }
                if (videoInfoForm.getLitpicurl2() != null && videoInfoForm.getLitpicurl2().length() > 0) {
                    v.setLitpic(videoInfoForm.getLitpicurl2());
                }
            }
            videoListManager.updateVideo(v);
        } else {
            request.setAttribute("FAIL_MESSAGE", "ϵͳ���ں͸ñ����ͬ����Ƶ��");
            return mapping.findForward("fail");
        }
        // 
        request.setAttribute("OK_MESSAGE", "�޸���Ƶ�ɹ���");
        request.setAttribute("RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]"));
        return mapping.findForward("ok");
    } catch (Exception e) {
        e.printStackTrace();
        request.setAttribute("FAIL_MESSAGE", "ϵͳ�������Ժ����ԡ�");
        return mapping.findForward("fail");
    }
}
