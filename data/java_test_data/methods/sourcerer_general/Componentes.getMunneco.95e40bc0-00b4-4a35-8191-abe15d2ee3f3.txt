private Widget getMunneco(Componente c) {
    final String id = c.getId();
    indexCuerpo = ((indexCuerpo + 1) % MAX_CUERPOS) + 1;
    VerticalPanel muneco = new VerticalPanel();
    muneco.setHorizontalAlign(HorizontalAlignment.CENTER);
    muneco.setSpacing(0);
    Image cara = null;
    if (!Boolean.parseBoolean(c.getNofoto())) {
        cara = new Image("datos/componentes/caras/" + id + ".png");
    } else {
        cara = new Image("datos/componentes/caras/NoFoto.png");
    }
    cara.setSize("65px", "");
    DOM.removeElementAttribute(cara.getElement(), "height");
    muneco.add(cara);
    String toolTipText = Format.substitute("<b style='font-size: 14px; color: red;'>{0}. {1}</b>.<br/><br/><span style='font-size: 12px; color: #A7052F;'>{2}</span>", Format.capitalize(id), c.getPuesto(), c.getFrase());
    ToolTipConfig toolTipConfig = new ToolTipConfig();
    toolTipConfig.setMouseOffset(new int[] { 50, -50 });
    toolTipConfig.setAutoHide(true);
    toolTipConfig.setDismissDelay(0);
    toolTipConfig.setText(toolTipText);
    muneco.setToolTip(toolTipConfig);
    final Image cuerpo = new Image("imagenes/palote.png");
    final Timer timerInvisibiliad = new Timer() {

        @Override
        public void run() {
            cuerpo.setVisible(false);
        }
    };
    cuerpo.setVisible(false);
    MouseOverHandler cuerpoVisible = new MouseOverHandler() {

        @Override
        public void onMouseOver(MouseOverEvent event) {
            timerInvisibiliad.cancel();
            cuerpo.setVisible(true);
        }
    };
    MouseOutHandler cuerpoInvisible = new MouseOutHandler() {

        @Override
        public void onMouseOut(MouseOutEvent event) {
            timerInvisibiliad.schedule(800);
        }
    };
    cara.addMouseOverHandler(cuerpoVisible);
    cara.addMouseOutHandler(cuerpoInvisible);
    cuerpo.addMouseOverHandler(cuerpoVisible);
    cuerpo.addMouseOutHandler(cuerpoInvisible);
    muneco.add(cuerpo);
    return muneco;
}
