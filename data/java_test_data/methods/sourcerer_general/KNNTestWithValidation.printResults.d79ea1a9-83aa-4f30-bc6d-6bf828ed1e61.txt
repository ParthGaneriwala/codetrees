private static void printResults(String[] classList, String[][] neighborClasses, String[] realClasses, double[][] accuracyRates, int[][][] confusionMatrices, double[][][] probMatrices, double[][] probRates) {
    // because Excel is stupid enough to limit to 256 columns.
    boolean vertical = neighborClasses[0].length > 255;
    int[] unclassified = new int[neighborClasses[0].length];
    if (vertical) {
        // get the error rates
        System.out.println();
        System.out.println("accuracy rates");
        for (int i = 0; i < classList.length; i++) {
            System.out.print(classList[i] + ",");
        }
        System.out.println("total,unclassified");
        for (int i = 0; i < accuracyRates[0].length; i++) {
            for (int j = 0; j < accuracyRates.length; j++) {
                System.out.print("," + accuracyRates[j][i]);
            }
            System.out.println("," + ((double) unclassified[i] / (double) neighborClasses.length));
        }
    } else {
        // get the class matrix (only if not vertical, because it won't fit if the vertical is used
        System.out.println("classification matrix");
        for (int i = 0; i < neighborClasses.length; i++) {
            System.out.print(realClasses[i]);
            for (int j = 0; j < neighborClasses[i].length; j++) {
                System.out.print("," + neighborClasses[i][j]);
                if (neighborClasses[i][j].equalsIgnoreCase("null")) {
                    unclassified[j]++;
                }
            }
            System.out.println();
        }
        // get the error rates
        System.out.println();
        System.out.println("accuracy rates");
        for (int i = 0; i < accuracyRates.length; i++) {
            if (i < classList.length) {
                System.out.print(classList[i]);
            } else {
                System.out.print("total");
            }
            for (int j = 0; j < accuracyRates[i].length; j++) {
                System.out.print("," + accuracyRates[i][j]);
            }
            System.out.println();
        }
    }
    // Confusion matrices
    System.out.println();
    System.out.println("confusion matrix");
    for (int k = 5; k <= confusionMatrices.length; k = k + 5) {
        System.out.println();
        System.out.println("k=" + k + "," + getClassesString(classList));
        int[][] confusionMatrix = confusionMatrices[k - 1];
        for (int i = 0; i < confusionMatrix.length; i++) {
            System.out.print(classList[i]);
            for (int j = 0; j < confusionMatrix[i].length; j++) {
                System.out.print("," + confusionMatrix[i][j]);
            }
            System.out.println();
        }
    }
    // Probability matrices
    System.out.println();
    System.out.println("probability matrices");
    for (int k = 5; k <= probMatrices.length; k = k + 5) {
        System.out.println();
        System.out.println("k=" + k + "," + getClassesString(classList));
        double[][] probabilityMatrix = probMatrices[k - 1];
        for (int i = 0; i < probabilityMatrix.length; i++) {
            System.out.print(classList[i]);
            for (int j = 0; j < probabilityMatrix[i].length; j++) {
                System.out.print("," + probabilityMatrix[i][j]);
            }
            System.out.println();
        }
    }
    if (vertical) {
        // get the error rates
        System.out.println();
        System.out.println("KNN probability correct");
        for (int i = 0; i < classList.length; i++) {
            System.out.print(classList[i] + ",");
        }
        System.out.println("total");
        for (int i = 0; i < probRates[0].length; i++) {
            for (int j = 0; j < probRates.length; j++) {
                System.out.print("," + probRates[j][i]);
            }
            System.out.println();
        }
    } else {
        // KNN probability correct
        System.out.println();
        System.out.println("KNN probability correct");
        for (int i = 0; i < probRates.length; i++) {
            if (i < classList.length) {
                System.out.print(classList[i]);
            } else {
                System.out.print("total");
            }
            for (int j = 0; j < probRates[i].length; j++) {
                System.out.print("," + probRates[i][j]);
            }
            System.out.println();
        }
    }
}
