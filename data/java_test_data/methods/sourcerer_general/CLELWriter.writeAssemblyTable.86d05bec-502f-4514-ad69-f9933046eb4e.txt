private void writeAssemblyTable(byte[] text, int off, StreamTable st) {
    ArrayList<StreamTableRow> rows = st.getRows();
    StreamTableRow str;
    int i;
    int row_off = off;
    for (i = 0; i < rows.size(); i++) {
        str = rows.get(i);
        insertInt(text, row_off, str.getAssemblyHashAlgId());
        insertShort(text, row_off + 4, (short) str.getAssemblyMajorVersion());
        insertShort(text, row_off + 6, (short) str.getAssemblyMinorVersion());
        insertShort(text, row_off + 8, (short) str.getAssemblyBuildNumber());
        insertShort(text, row_off + 10, (short) str.getAssemblyRevisionNumber());
        insertInt(text, row_off + 12, str.getAssemblyFlags());
        row_off += 16;
        if (parser.getBlobHeap().size() < 0xffff) {
            insertShort(text, row_off, (short) str.getAssemblyPublicKey());
            row_off += 2;
        } else {
            insertInt(text, row_off, str.getAssemblyPublicKey());
            row_off += 4;
        }
        if (parser.getStringsHeap().size() < 0xffff) {
            insertShort(text, row_off, (short) str.getAssemblyName());
            insertShort(text, row_off + 2, (short) str.getAssemblyCulture());
            row_off += 4;
        } else {
            insertInt(text, row_off, str.getAssemblyName());
            insertInt(text, row_off + 4, str.getAssemblyCulture());
            row_off += 8;
        }
    }
}
