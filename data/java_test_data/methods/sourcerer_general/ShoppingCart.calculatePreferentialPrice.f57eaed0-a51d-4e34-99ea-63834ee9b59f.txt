private float calculatePreferentialPrice() {
    Map<Integer, Float> products = new HashMap<Integer, Float>();
    for (Item item : printPhotosItems) {
        Product product = item.getProduct();
        Integer key = product.getId();
        if (!products.containsKey(key)) {
            products.put(key, item.getPrice());
        } else {
            Float oldPrice = products.get(key);
            Float newPrice = oldPrice + item.getPrice();
            products.put(key, newPrice);
        }
    }
    for (Item item : items) {
        Product product = item.getProduct();
        Integer key = product.getId();
        if (!products.containsKey(key)) {
            products.put(key, item.getPrice());
        } else {
            Float oldPrice = products.get(key);
            Float newPrice = oldPrice + item.getPrice();
            products.put(key, newPrice);
        }
    }
    float preferentialPrice = 0f;
    Collection c = coupons.values();
    Iterator iter = c.iterator();
    while (iter.hasNext()) {
        Coupon coupon = (Coupon) iter.next();
        Product product = coupon.getProduct();
        if (product == null) {
            continue;
        }
        Integer key = product.getId();
        if (!"gift".equals(coupon.getType())) {
            if (products.containsKey(key)) {
                Float productPrice = products.get(key);
                if (productPrice.floatValue() >= coupon.getPrice()) {
                    preferentialPrice += preferentialPrice + coupon.getPrice();
                } else {
                    preferentialPrice += preferentialPrice + productPrice;
                }
            }
        }
    }
    return preferentialPrice;
}
