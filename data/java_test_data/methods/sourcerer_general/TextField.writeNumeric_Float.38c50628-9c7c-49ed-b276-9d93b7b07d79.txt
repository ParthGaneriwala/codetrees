private void writeNumeric_Float(int keyCode) {
    if (currentStringBuffer.length() < maxChar) {
        if (goToNextChar || keyCode != lastPressedKey) {
            goToNextChar = true;
            lastPressedKey = keyCode;
            currentKeyStep = 0;
        } else {
            currentKeyStep++;
        }
        switch(type) {
            case TYPE_T9:
                chAux = T9.getNumericFloat(keyCode);
                break;
            case TYPE_QWERTY:
                chAux = Qwerty.getNumericInteger(keyCode);
                break;
            case TYPE_SURETYPE:
                chAux = SureType.getNumericInteger(keyCode);
                break;
            default:
                break;
        }
        if (chAux != 'X') {
            if (chAux == '.') {
                if (caretIndex > 0 && ((currentStringBuffer.charAt(0) == '-' && caretIndex > 1) || (currentStringBuffer.charAt(0) != '-' && caretIndex == 1)) && currentStringBuffer.toString().indexOf(".") == -1) {
                    currentStringBuffer.insert(caretIndex, chAux);
                    caretIndex++;
                    currentString = currentStringBuffer.toString();
                    updateCaretPosition();
                    lastKeyTimestamp = System.currentTimeMillis();
                    goToNextChar = false;
                }
            } else if (chAux == '-') {
                if (caretIndex == 0 && currentStringBuffer.toString().indexOf("-") == -1) {
                    currentStringBuffer.insert(caretIndex, chAux);
                    caretIndex++;
                    currentString = currentStringBuffer.toString();
                    updateCaretPosition();
                    lastKeyTimestamp = System.currentTimeMillis();
                    goToNextChar = false;
                }
            } else {
                currentStringBuffer.insert(caretIndex, chAux);
                caretIndex++;
                currentString = currentStringBuffer.toString();
                updateCaretPosition();
                lastKeyTimestamp = System.currentTimeMillis();
                goToNextChar = false;
            }
        }
    }
}
