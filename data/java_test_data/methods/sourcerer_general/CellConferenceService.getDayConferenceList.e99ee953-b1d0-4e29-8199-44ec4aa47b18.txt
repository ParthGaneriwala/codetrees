public PaginationSupport getDayConferenceList(String date, String cellid, String lac, int pageNo, int pageSize, boolean isalarm, String orderby) {
    long start = 0;
    long end = 0;
    if (date != null) {
        start = com.sxit.stat.util.StatUtil.getDateTime(date);
        end = com.sxit.stat.util.StatUtil.getOneDayAfter(start);
    } else {
        start = 0;
        end = Long.MAX_VALUE;
    }
    String where = "";
    if (isalarm)
        where = " and alarmflag=1";
    if (!(lac == null || lac.equals(""))) {
        where += " and lac=" + lac;
    }
    if (!(cellid == null || cellid.equals(""))) {
        where += " and cellid=" + cellid;
    }
    String countsql = "select count(*) from alarm_cellid where (stattime between " + start / 1000 + " and " + end / 1000 + ") " + where;
    String sql = "";
    int startIndex = (pageNo - 1) * pageSize;
    sql = "select * from(select a.*,rownum rn from(select * from alarm_cellid where (stattime between " + start / 1000 + " and " + end / 1000 + ")" + where + orderby + ") a where rownum<=" + (startIndex + pageSize) + ") where rn>" + startIndex;
    System.out.println(countsql);
    System.out.println(sql);
    int totalCount = 0;
    Object object = jdbcTemplate.query(sql, new ResultSetExtractor() {

        public Object extractData(ResultSet rs) throws SQLException, DataAccessException {
            List list = new ArrayList();
            while (rs.next()) {
                AlarmCell cell = new AlarmCell();
                cell.setCellid(rs.getString("cellid"));
                cell.setLac(rs.getString("lac"));
                cell.setStattime(rs.getLong("stattime"));
                cell.setPredayallvolume(rs.getDouble("predayallvolume"));
                cell.setPretimeallvolume(rs.getDouble("pretimeallvolume"));
                cell.setPredayusercount(rs.getInt("predayusercount"));
                cell.setPretimeusercount(rs.getInt("pretimeusercount"));
                cell.setUsercount(rs.getInt("usercount"));
                cell.setAllvolume(rs.getDouble("allvolume"));
                list.add(cell);
            }
            return list;
        }
    });
    List list = (List) object;
    if (pageSize == Integer.MAX_VALUE) {
        totalCount = list.size();
    } else {
        totalCount = jdbcTemplate.queryForInt(countsql);
    }
    PaginationSupport ps = new PaginationSupport(list, totalCount, pageSize, startIndex);
    return ps;
}
