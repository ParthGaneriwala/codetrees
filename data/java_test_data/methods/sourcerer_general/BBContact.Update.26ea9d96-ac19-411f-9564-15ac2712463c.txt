public void Update(BBContactListener listener) {
    BBManifold oldManifold = m_manifold;
    // Re-enable this contact.
    m_flags &= ~e_disabledFlag;
    if (testOverlap(m_fixtureA.m_aabb, m_fixtureB.m_aabb)) {
        evaluate();
    } else {
        m_manifold.m_pointCount = 0;
    }
    BBBody bodyA = m_fixtureA.getBody();
    BBBody bodyB = m_fixtureB.getBody();
    int oldCount = oldManifold.m_pointCount;
    int newCount = m_manifold.m_pointCount;
    if (newCount == 0 && oldCount > 0) {
        bodyA.wakeUp();
        bodyB.wakeUp();
    }
    // Slow contacts don't generate TOI events.
    if (bodyA.isStatic() || bodyA.isBullet() || bodyB.isStatic() || bodyB.isBullet()) {
        m_flags |= e_continuousFlag;
    } else {
        m_flags &= ~e_continuousFlag;
    }
    // stored impulses to warm start the solver.
    for (int i = 0; i < m_manifold.m_pointCount; ++i) {
        BBManifoldPoint mp2 = m_manifold.m_points[i];
        mp2.m_normalImpulse = 0.0f;
        mp2.m_tangentImpulse = 0.0f;
        BBContactID id2 = mp2.m_id;
        for (int j = 0; j < oldManifold.m_pointCount; ++j) {
            BBManifoldPoint mp1 = oldManifold.m_points[j];
            if (mp1.m_id.key() == id2.key()) {
                mp2.m_normalImpulse = mp1.m_normalImpulse;
                mp2.m_tangentImpulse = mp1.m_tangentImpulse;
                break;
            }
        }
    }
    if (newCount > 0) {
        m_flags |= e_touchingFlag;
    } else {
        m_flags &= ~e_touchingFlag;
    }
    if (oldCount == 0 && newCount > 0) {
        listener.beginContact(this);
    }
    if (oldCount > 0 && newCount == 0) {
        listener.endContact(this);
    }
    if ((m_flags & e_sensorFlag) == 0) {
        listener.PreSolve(this, oldManifold);
    }
}
