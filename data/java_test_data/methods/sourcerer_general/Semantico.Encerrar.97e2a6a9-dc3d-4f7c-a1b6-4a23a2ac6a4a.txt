public void Encerrar() {
    // encerra o programa pincipal
    this.saidaASM.write(" " + "HM" + " " + "/0 ;");
    this.saidaASM.write("\n");
    this.saidaASM.write(" " + "#" + " " + "/0 ;");
    this.saidaASM.write("\n");
    // define a área de dados
    this.saidaASM.write(" " + "@" + " " + "=2000 ; area de dados");
    this.saidaASM.write("\n");
    // reservar espaço de memória para constantes
    incluirConstantesPadrao();
    int i = 0;
    while (!pilhaConstantes.pilhaVazia()) {
        int valor;
        valor = ((Integer) pilhaConstantes.desempilha());
        this.saidaASM.write("C" + i + " " + "K" + " " + "=" + valor + " ;");
        this.saidaASM.write("\n");
        i++;
    }
    // reservar espaço de memória para variáveis
    while (!pilhaVariaveis.pilhaVazia()) {
        Simbolo token;
        String nome;
        int valor = 0000;
        token = (Simbolo) pilhaVariaveis.desempilha();
        nome = token.getNome() + token.getCodigo();
        if (token.getCategoria().equals(Simbolo.VETOR)) {
            this.saidaASM.write("P" + nome + " " + "K" + " " + nome + " ;");
            this.saidaASM.write("\n");
        }
        this.saidaASM.write(nome + " " + "K" + " " + "=" + valor + " ;");
        this.saidaASM.write("\n");
    }
}
