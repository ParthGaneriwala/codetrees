// protected EventServiceResourcesModel resources_model;
@Override
public void setup() {
    try {
        super.setup();
        heads = new Hashtable();
        subscriptionHandler = new SubscriptionHandler();
        eventHandler = new EventHandler();
        addBehaviour(new PublishListenBehaviour(this));
        addBehaviour(new SubscribeListenBehaviour(this));
        addBehaviour(new RecipientsListenBehaviour(this));
        // addBehaviour(new UnsubscribeListenBehaviour(this));
        addBehaviour(new EventServiceLogBehaviour(this));
        /* generating resources */
        Object[] argv = this.getArguments();
        this.seedRand = ((Long) argv[1]).longValue();
        this.pr_gen = new PseudoRandomGenerator(this.seedRand);
        this.resources_model = new EventServiceResourcesModel(this.pr_gen);
        /* launching a new CH */
        Object[] argv2 = new Object[2];
        // argv2[0] = this.generalLogger;//new String(this.container);
        this.getContainerController().createNewAgent(Config.CH_ROOT_NAME, "im.clusterhead.ClusterHeadAgent", argv2).start();
        this.addHead(Config.CH_ROOT_NAME, new ClusterHeadInfo(Config.EVENT_SERVICE_NAME));
        /* launched */
        // addBehaviour(new EventServiceListenBehaviour(this));
        addBehaviour(new SendCHListBehaviour(this));
        addBehaviour(new ClusterJoinNotifyBehaviour(this));
        addBehaviour(new ClusterShrinkNotifyBehaviour(this));
        addBehaviour(new NewCHListernerBehaviour(this));
        addBehaviour(new ResourcesDynamicUpdaterBehaviour(this));
    } catch (Exception ex) {
        Logger.getLogger(EventServiceAgent.class.getName()).log(Level.SEVERE, null, ex);
        ex.printStackTrace();
    }
}
