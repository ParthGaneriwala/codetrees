@Test
public void testMetaDataStreamHeader() {
    ArrayList<MetaDataStreamHeader> mdsh = clel.getMetaDataStreamHeader();
    MetaDataStreamHeader m;
    ArrayList<Byte> name;
    int i;
    for (i = 0; i < mdsh.size(); i++) {
        m = mdsh.get(i);
        name = m.getName();
        if (i == 0) {
            assertEquals("MetaDataStreamHeader - offset", m.getOffset(), 0x6c);
            assertEquals("MetaDataStreamHeader - size", m.getSize(), 0xe4);
            assertEquals("MetaDataStreamHeader - name0", name.get(0), (byte) 0x23);
            assertEquals("MetaDataStreamHeader - name1", name.get(1), (byte) 0x7e);
            assertEquals("MetaDataStreamHeader - name2", name.get(2), (byte) 0x0);
            assertEquals("MetaDataStreamHeader - name3", name.get(3), (byte) 0x0);
        } else if (i == 1) {
            assertEquals("MetaDataStreamHeader - offset", m.getOffset(), 0x150);
            assertEquals("MetaDataStreamHeader - size", m.getSize(), 0xac);
            assertEquals("MetaDataStreamHeader - name0", name.get(0), (byte) 0x23);
            assertEquals("MetaDataStreamHeader - name1", name.get(1), (byte) 0x53);
            assertEquals("MetaDataStreamHeader - name2", name.get(2), (byte) 0x74);
            assertEquals("MetaDataStreamHeader - name3", name.get(3), (byte) 0x72);
            assertEquals("MetaDataStreamHeader - name4", name.get(4), (byte) 0x69);
            assertEquals("MetaDataStreamHeader - name5", name.get(5), (byte) 0x6e);
            assertEquals("MetaDataStreamHeader - name6", name.get(6), (byte) 0x67);
            assertEquals("MetaDataStreamHeader - name7", name.get(7), (byte) 0x73);
            assertEquals("MetaDataStreamHeader - name8", name.get(8), (byte) 0x0);
            assertEquals("MetaDataStreamHeader - name9", name.get(9), (byte) 0x0);
            assertEquals("MetaDataStreamHeader - name10", name.get(10), (byte) 0x0);
            assertEquals("MetaDataStreamHeader - name11", name.get(11), (byte) 0x0);
        } else if (i == 2) {
            assertEquals("MetaDataStreamHeader - offset", m.getOffset(), 0x1fc);
            assertEquals("MetaDataStreamHeader - size", m.getSize(), 0x1c);
            assertEquals("MetaDataStreamHeader - name0", name.get(0), (byte) 0x23);
            assertEquals("MetaDataStreamHeader - name1", name.get(1), (byte) 0x55);
            assertEquals("MetaDataStreamHeader - name2", name.get(2), (byte) 0x53);
            assertEquals("MetaDataStreamHeader - name3", name.get(3), (byte) 0x0);
        } else if (i == 3) {
            assertEquals("MetaDataStreamHeader - offset", m.getOffset(), 0x218);
            assertEquals("MetaDataStreamHeader - size", m.getSize(), 0x10);
            assertEquals("MetaDataStreamHeader - name0", name.get(0), (byte) 0x23);
            assertEquals("MetaDataStreamHeader - name1", name.get(1), (byte) 0x47);
            assertEquals("MetaDataStreamHeader - name2", name.get(2), (byte) 0x55);
            assertEquals("MetaDataStreamHeader - name3", name.get(3), (byte) 0x49);
            assertEquals("MetaDataStreamHeader - name4", name.get(4), (byte) 0x44);
            assertEquals("MetaDataStreamHeader - name5", name.get(5), (byte) 0x0);
            assertEquals("MetaDataStreamHeader - name6", name.get(6), (byte) 0x0);
            assertEquals("MetaDataStreamHeader - name7", name.get(7), (byte) 0x0);
        } else if (i == 4) {
            assertEquals("MetaDataStreamHeader - offset", m.getOffset(), 0x228);
            assertEquals("MetaDataStreamHeader - size", m.getSize(), 0x44);
            assertEquals("MetaDataStreamHeader - name0", name.get(0), (byte) 0x23);
            assertEquals("MetaDataStreamHeader - name1", name.get(1), (byte) 0x42);
            assertEquals("MetaDataStreamHeader - name2", name.get(2), (byte) 0x6c);
            assertEquals("MetaDataStreamHeader - name3", name.get(3), (byte) 0x6f);
            assertEquals("MetaDataStreamHeader - name4", name.get(4), (byte) 0x62);
            assertEquals("MetaDataStreamHeader - name5", name.get(5), (byte) 0x0);
            assertEquals("MetaDataStreamHeader - name6", name.get(6), (byte) 0x0);
            assertEquals("MetaDataStreamHeader - name7", name.get(7), (byte) 0x0);
        }
    }
}
