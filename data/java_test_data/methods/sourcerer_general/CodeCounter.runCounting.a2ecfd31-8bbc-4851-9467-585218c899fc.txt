public void runCounting(ICompilationUnit cu) {
    // Get the info corresponding to the compilation unit
    CodeInfo info = getCodeInfo(cu);
    info.reset();
    // 
    try {
        String source = cu.getSource();
        // Use the JFace class Document to count lines of source code.
        Document doc = new Document(source);
        info.lines_all = doc.getNumberOfLines();
        // Use the JFace-Text Document partitioner to partition the document.
        IDocumentExtension3 extension3 = (IDocumentExtension3) doc;
        IDocumentPartitioner partitioner = new FastPartitioner(patitionScanner, SimpleJavaPartitionScanner.JAVA_PARTITION_TYPES);
        extension3.setDocumentPartitioner(JAVA_PARTITIONING, partitioner);
        partitioner.connect(doc);
        // line-by-line
        for (int i = 0; i < info.lines_all; i++) {
            try {
                IRegion region = doc.getLineInformation(i);
                String line = doc.get(region.getOffset(), region.getLength());
                // check blank lines
                if (StringUtil.isEmpty(line)) {
                    // blank lines in comments are also treated as BLANK_LINE
                    info.lines_blank++;
                    String type = doc.getContentType(JAVA_PARTITIONING, region.getOffset(), false);
                    // If the blank line is in comments, the comments line-number should also grow up.
                    if (SimpleJavaPartitionScanner.JAVA_DOC.equals(type) || SimpleJavaPartitionScanner.JAVA_MULTILINE_COMMENT.equals(type)) {
                        info.lines_comment++;
                    }
                } else {
                    // Check each position of the line, in case that the line has both comments and code.
                    // Or in case that the line is where the comment begins, if we only check the first position,
                    // the content type will be IDocument.DEFAULT_CONTENT_TYPE, so...
                    boolean comment = false;
                    boolean singleLineComment = false;
                    boolean code = false;
                    for (int j = 0; j < region.getLength(); j++) {
                        String type = doc.getContentType(JAVA_PARTITIONING, region.getOffset() + j, false);
                        if (SimpleJavaPartitionScanner.JAVA_DOC.equals(type) || SimpleJavaPartitionScanner.JAVA_MULTILINE_COMMENT.equals(type)) {
                            comment = true;
                        } else if (SimpleJavaPartitionScanner.JAVA_SINGLELINE_COMMENT.equals(type)) {
                            singleLineComment = true;
                        } else {
                            if (doc.getChar(region.getOffset() + j) != ' ') {
                                code = true;
                            }
                        }
                        // if single line comment, then the right-part of this line are all single-line comment
                        if (singleLineComment) {
                            break;
                        }
                        if ((singleLineComment || comment) && code) {
                            break;
                        }
                    }
                    if (code) {
                        info.lines_code++;
                    }
                    if (comment || singleLineComment) {
                        info.lines_comment++;
                    }
                }
            } catch (BadLocationException e) {
                e.printStackTrace();
            } catch (BadPartitioningException e) {
                e.printStackTrace();
            }
        }
    } catch (JavaModelException e) {
        e.printStackTrace();
    }
}
