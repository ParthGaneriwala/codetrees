@Override
protected Control createDialogArea(Composite parent) {
    extComposite = new Composite(parent, SWT.BORDER);
    extComposite.setLayout((new GridLayout(1, true)));
    extComposite.setBackground(whiteColor);
    toolkit = new FormToolkit(extComposite.getDisplay());
    form = toolkit.createForm(extComposite);
    GridLayout layout = new GridLayout(2, false);
    form.getBody().setLayout(layout);
    imgComposite = toolkit.createComposite(form.getBody(), SWT.NONE);
    imgComposite.setLayout((new GridLayout(1, true)));
    infoImage = Activator.imageDescriptorFromPlugin("lead.streamingTool.server", ("icons" + File.separator + "IsisLabLogo.gif")).createImage();
    // Label imageLabel = toolkit.createLabel(form.getBody(), "", SWT.NONE|SWT.NO_TRIM/*|SWT.BORDER*/);
    Label imageLabel = new Label(imgComposite, SWT.NONE | SWT.NO_TRIM);
    imageLabel.setImage(infoImage);
    infoImage2 = Activator.imageDescriptorFromPlugin("lead.streamingTool.server", ("icons" + File.separator + "Red5Logo.png")).createImage();
    Label image2Label = new Label(imgComposite, SWT.NONE | SWT.NO_TRIM);
    image2Label.setImage(infoImage2);
    ftext = new FormText(form.getBody(), SWT.NONE);
    // ftext = toolkit.createFormText(form.getBody(), true);
    String linkIsisLab = "<a href=\"" + "http://isis.dia.unisa.it/" + "\"> http://isis.dia.unisa.it/</a>";
    String linkRed5 = "<a href=\"" + "http://osflash.org/red5" + "\"> http://osflash.org/red5</a>";
    String linkGNULicense = "<a href=\"" + "http://www.opensource.org/licenses/lgpl-license.php" + "\"> http://www.opensource.org/</a>";
    String linkRichNetApps = "<a href=\"" + "http://www.richnetapps.com/" + "\"> RichNetApps.com</a>";
    String linkStreamingToolSite = "<a href=\"" + "http://code.google.com/p/coffee-streamingtool/" + "\">http://code.google.com/p/coffee-streamingtool/</a>";
    ftext.setText("<form><p><b>Streaming Tool</b></p>" + "<p>Version: " + versionString + "</p>" + "<p></p>" + "<p>Developed by:</p>" + "<p> <b>Gerardo Lombardo</b></p>" + "<p>Developed at:</p>" + "<p> <b>IsisLab&#160; </b>(" + linkIsisLab + ")</p>" + "<p></p>" + "<p>The StreamingPlayer SWF Animation is an extended version</p>" + "<p>of the <b>Mini FLV Player</b> by " + linkRichNetApps + "</p>" + "<p></p>" + "<p>The Streaming Tool uses the following software:</p>" + "<p> <b>Red5&#160; </b>(" + linkRed5 + ") distributed under LGPL license.</p>" + "<p>  See terms of license at&#160;" + linkGNULicense + "</p>" + "<p></p>" + "<p>More info about Streaming Tool at: </p>" + "<p> " + linkStreamingToolSite + " </p>" + "</form>", true, false);
    HyperlinkSettings hypLinkSettings = ftext.getHyperlinkSettings();
    hypLinkSettings.setHyperlinkUnderlineMode(HyperlinkSettings.UNDERLINE_HOVER);
    ftext.addHyperlinkListener(new IHyperlinkListener() {

        public void linkActivated(HyperlinkEvent e) {
            System.out.println("\n HYPERLINK ACTIVATED EVENT DETAILS: " + e.toString() + "\n\n");
            URL urlToLoad = null;
            try {
                urlToLoad = new URL(((String) e.data));
            } catch (MalformedURLException e1) {
                e1.printStackTrace();
                return;
            }
            try {
                PlatformUI.getWorkbench().getBrowserSupport().createBrowser(IWorkbenchBrowserSupport.AS_EXTERNAL, "SysBrowserWindow", "IsisLab HomePage", "IsisLab HomePage").openURL(urlToLoad);
            } catch (PartInitException e1) {
                e1.printStackTrace();
                return;
            }
        }

        public void linkEntered(HyperlinkEvent e) {
        }

        public void linkExited(HyperlinkEvent e) {
        }
    });
    ftext.setBackground(whiteColor);
    ftext.pack();
    form.pack();
    this.setBlockOnOpen(true);
    extComposite.forceFocus();
    return super.createDialogArea(parent);
}
