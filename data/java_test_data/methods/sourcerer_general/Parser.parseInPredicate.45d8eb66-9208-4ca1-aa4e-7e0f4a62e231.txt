private Expression parseInPredicate(Expression a) throws HsqlException {
    int type = iToken;
    read();
    readThis(Expression.OPEN);
    Expression b = null;
    int brackets = 0;
    if (iToken == Expression.OPEN) {
        brackets += parseOpenBrackets() + 1;
        read();
    }
    if (iToken == Expression.SELECT) {
        SubQuery sq = parseSubquery(brackets, null, false, Expression.IN);
        // until we support rows in IN predicates
        Trace.check(sq.select.iResultLen == 1, Trace.SINGLE_COLUMN_EXPECTED);
        b = new Expression(sq);
        read();
    } else {
        tokenizer.back();
        HsqlArrayList v = new HsqlArrayList();
        while (true) {
            Expression value = parseExpression();
            if (value.exprType == Expression.VALUE && value.valueData == null && !value.isParam()) {
                throw Trace.error(Trace.NULL_IN_VALUE_LIST);
            }
            v.add(value);
            read();
            if (iToken != Expression.COMMA) {
                break;
            }
        }
        Expression[] valueList;
        valueList = (Expression[]) v.toArray(new Expression[v.size()]);
        b = new Expression(valueList);
    }
    readThis(Expression.CLOSE);
    return new Expression(type, a, b);
}
