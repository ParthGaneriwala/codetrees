public void startRender(int level, int param) {
    if (_matchTextureDimensions) {
        Texture tex = (_color == null) ? _depth : _color;
        int twidth = tex.getWidth(), theight = tex.getHeight();
        if (_width != twidth || _height != theight) {
            resize(twidth, theight);
        }
    }
    _level = level;
    _param = param;
    if (_framebuffer != null) {
        _obuffer = _renderer.getFramebuffer();
        _renderer.setFramebuffer(_framebuffer);
    } else if (_pbuffer != null) {
        if (_pbuffer.isBufferLost()) {
            _pbuffer.destroy();
            initPbuffer();
        }
        if (_rtex != null) {
            releaseTextures();
        }
        try {
            _pbuffer.makeCurrent();
            _orenderer = _ctx.getRenderer();
            _ctx.setRenderer(_renderer);
        } catch (LWJGLException e) {
            log.warning("Failed to make pbuffer context current.", e);
        }
    }
    if (_color == null) {
        _odraw = _renderer.getDrawBuffer();
        _oread = _renderer.getReadBuffer();
        _renderer.setBuffers(GL11.GL_NONE, GL11.GL_NONE);
    }
    Camera camera = _ctx.getCompositor().getCamera();
    _oviewport.set(camera.getViewport());
    camera.getViewport().set(0, 0, _width, _height);
    camera.apply(_renderer);
}
