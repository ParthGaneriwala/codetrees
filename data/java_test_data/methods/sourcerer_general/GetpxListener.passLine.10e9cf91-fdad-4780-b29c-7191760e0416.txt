public static boolean passLine(String line) {
    if (Library.grabUptoFirstSpace(line).equals("*getpx")) {
        // grab handle and playerExists information
        line = Library.truncateFirstSpace(line);
        user = Library.grabUptoFirstSpace(line);
        existing = true;
        // grab logged on information
        int timesToTruncate = 7;
        for (int i = 0; i < timesToTruncate; ++i) {
            line = Library.truncateFirstSpace(line);
        }
        String temp = Library.grabUptoFirstSpace(line);
        int tempInt = Integer.parseInt(temp);
        if (tempInt > 0) {
            loggedOn = true;
        } else {
            loggedOn = false;
        }
        // grab title information ( is computer, GM/IM/..)
        timesToTruncate = 5;
        for (int i = 0; i < timesToTruncate; ++i) {
            line = Library.truncateFirstSpace(line);
        }
        temp = line.substring(0, line.indexOf("}") + 1);
        line = line.substring(line.indexOf("}") + 2);
        if (temp.indexOf("C") != -1) {
            title = "(C)";
            computer = true;
        } else {
            title = "";
        }
        if (temp.indexOf("WGM") != -1) {
            title = "(WGM)";
        } else if (temp.indexOf("WIM") != -1) {
            title = "(WIM)";
        } else if (temp.indexOf("WFM") != -1) {
            title = "(WFM)";
        } else if (temp.indexOf("GM") != -1) {
            title = "(GM)";
        } else if (temp.indexOf("IM") != -1) {
            title = "(IM)";
        } else if (temp.indexOf("FM") != -1) {
            title = "(FM)";
        }
        // grab tournament information
        temp = line.substring(0, line.indexOf("}") + 1);
        line = line.substring(line.indexOf("}") + 2);
        if (temp.equals("{0}")) {
            tournament = false;
        } else {
            tournament = true;
        }
        // grab standard, blitz, and bullet ratings, and use the highest
        line = Library.truncateFirstSpace(line);
        temp = Library.grabUptoFirstSpace(line);
        try {
            rating1 = Integer.parseInt(temp.substring(0, temp.indexOf(",")));
        } catch (Exception e) {
            SimulHandler.getRecorder().record("Rating grab from the getpxlistener failed!");
            rating1 = 1600;
        }
        line = Library.truncateFirstSpace(line);
        temp = Library.grabUptoFirstSpace(line);
        try {
            rating2 = Integer.parseInt(temp.substring(0, temp.indexOf(",")));
        } catch (Exception e) {
            SimulHandler.getRecorder().record("Rating grab from the getpxlistener failed!");
            rating2 = 1600;
        }
        line = Library.truncateFirstSpace(line);
        temp = Library.grabUptoFirstSpace(line);
        try {
            rating3 = Integer.parseInt(temp.substring(0, temp.indexOf(",")));
        } catch (Exception e) {
            SimulHandler.getRecorder().record("Rating grab from the getpxlistener failed!");
            rating3 = 1600;
        }
        rating = Math.max(Math.max(rating1, rating2), rating3);
        if (SimulHandler.DEBUG_MODE) {
            printInfo();
        }
        return true;
    } else if (Library.grabUptoFirstSpace(line).equals("*getpxf")) {
        // *getpxf guest5342 456
        line = Library.truncateFirstSpace(line);
        user = Library.grabUptoFirstSpace(line);
        existing = false;
        if (SimulHandler.DEBUG_MODE) {
            printInfo();
        }
        return true;
    } else {
        return false;
    }
}
