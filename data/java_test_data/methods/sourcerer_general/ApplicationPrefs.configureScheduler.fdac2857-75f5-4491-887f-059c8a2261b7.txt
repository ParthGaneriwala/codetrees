private void configureScheduler(ServletContext context) {
    Scheduler scheduler = (Scheduler) context.getAttribute(Constants.SCHEDULER);
    if (scheduler != null) {
        // Initialize
        try {
            scheduler.getContext().setAllowsTransientData(true);
            scheduler.getContext().put("ServletContext", context);
            // Give the scheduler its own connection pool... this can speed up the web-tier
            // when background processing is occurring
            ConnectionPool commonCP = (ConnectionPool) context.getAttribute(Constants.CONNECTION_POOL);
            if (commonCP != null) {
                if (!this.has(CONNECTION_POOL_MAX_SCHEDULER_CONNECTIONS)) {
                    scheduler.getContext().put(Constants.CONNECTION_POOL, context.getAttribute(Constants.CONNECTION_POOL));
                } else {
                    ConnectionPool schedulerCP = new ConnectionPool();
                    schedulerCP.setDebug(commonCP.getDebug());
                    schedulerCP.setTestConnections(commonCP.getTestConnections());
                    schedulerCP.setAllowShrinking(commonCP.getAllowShrinking());
                    schedulerCP.setMaxConnections(this.get(CONNECTION_POOL_MAX_SCHEDULER_CONNECTIONS));
                    schedulerCP.setMaxIdleTime(commonCP.getMaxIdleTime());
                    schedulerCP.setMaxDeadTime(commonCP.getMaxDeadTime());
                    scheduler.getContext().put("ConnectionPool", schedulerCP);
                }
            }
            ConnectionElement ce = new ConnectionElement();
            ce.setDriver(this.get(CONNECTION_DRIVER));
            ce.setUrl(this.get(CONNECTION_URL));
            ce.setUsername(this.get(CONNECTION_USER));
            ce.setPassword(this.get(CONNECTION_PASSWORD));
            scheduler.getContext().put("ConnectionElement", ce);
            scheduler.getContext().put("ApplicationPrefs", this);
            scheduler.start();
            scheduler.getContext().put(ScheduledJobs.CONTEXT_SCHEDULER_GROUP, ScheduledJobs.UNIQUE_GROUP);
            ScheduledJobs.addJobs(scheduler, context);
        } catch (Exception e) {
            e.printStackTrace(System.out);
            LOG.error("Scheduler Error: " + e.getMessage(), e);
        }
    }
}
