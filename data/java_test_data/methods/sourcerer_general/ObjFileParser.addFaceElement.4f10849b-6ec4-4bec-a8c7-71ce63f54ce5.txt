private static void addFaceElement(String line, GraphicModel model, Material material, List<Point3D> geometricVertices, List<Point3D> textureVertices, List<Vector3D> vertexNormals) {
    Scanner lineScanner = new Scanner(line);
    if (!lineScanner.hasNext())
        throw new RuntimeException("line doesn't have any tokens: " + line);
    lineScanner.next();
    ModelFace face = new ModelFace(material);
    while (lineScanner.hasNext()) {
        String vertexStr = lineScanner.next();
        Scanner vertexScanner = new Scanner(vertexStr);
        vertexScanner.useDelimiter("/");
        if (!vertexScanner.hasNextInt())
            throw new RuntimeException("line cannot be parsed into \"\\S+ {float}/{float}/{float}\": " + line);
        int v = getPositiveInt(vertexScanner, geometricVertices.size());
        if (v == 0) {
            System.out.println("[Debug] Warning: skipping line because a vertex is misnumbered: " + line);
            continue;
        }
        Point3D geometricVertex = geometricVertices.get(v - 1);
        Point3D textureVertex = null;
        Vector3D vertexNormal = null;
        if (vertexScanner.hasNextInt()) {
            int vt = getPositiveInt(vertexScanner, textureVertices.size());
            textureVertex = textureVertices.get(vt - 1);
        } else {
            // the element isn't an int, but it's a blank space most likely, so still have to skip it
            if (vertexScanner.hasNext())
                vertexScanner.next();
        }
        if (vertexScanner.hasNextInt()) {
            int vn = getPositiveInt(vertexScanner, vertexNormals.size());
            vertexNormal = vertexNormals.get(vn - 1);
        }
        GraphicsVertex vertex = new GraphicsVertex(geometricVertex, textureVertex, vertexNormal);
        face.addVertex(vertex);
    }
    face.normalizeVertices();
    model.addFace(face);
}
