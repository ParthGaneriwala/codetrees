public void filterOntologies() {
    // Ugh, why didn't I make a composite model structure?
    Model composite = ModelFactory.createDefaultModel();
    for (String key : this.hashModels.keySet()) {
        composite.add(this.hashModels.get(key));
    }
    ArrayList<String> contributedPropertyTypes = new ArrayList<String>(), contributedTypes = new ArrayList<String>();
    contributedPropertyTypes.addAll(OWLUtil.getSubAndEquivalentProperties(composite, Conference.SUBTOPIC_OF));
    contributedTypes.addAll(OWLUtil.getInferredTypes(composite, Conference.TOPIC));
    ArrayList<String> removeList = new ArrayList<String>();
    for (String s : this.hashModels.keySet()) {
        Model m = this.hashModels.get(s);
        boolean remove = true;
        StmtIterator siter;
        for (String prop : contributedPropertyTypes) {
            siter = m.listStatements((Resource) null, m.getProperty(prop), (RDFNode) null);
            if (siter != null && siter.hasNext()) {
                remove = false;
                break;
            }
        }
        if (remove) {
            for (String type : contributedTypes) {
                siter = m.listStatements((Resource) null, RDF.type, m.getResource(type));
                if (siter != null && siter.hasNext()) {
                    remove = false;
                    break;
                }
            }
        }
        if (remove) {
            removeList.add(s);
        }
    }
    for (String s : removeList) {
        this.hashModels.remove(s);
        this.lstOntologies.removeByData(s);
        this.populateSettings();
        this.reload();
    }
    populateSettings();
    reload();
}
