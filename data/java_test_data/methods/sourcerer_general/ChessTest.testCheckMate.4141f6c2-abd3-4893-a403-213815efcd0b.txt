@Test
public void testCheckMate() {
    // example1
    chess.setBoard(chess.setupBoard());
    chess.getBoard().getGrid()[4][0].setPiece(new King());
    chess.getBoard().getGrid()[4][0].getPiece().setPlayer(true);
    chess.getBoard().getGrid()[4][0].setOccupied(true);
    chess.getBoard().getGrid()[0][1].setPiece(new Rook());
    chess.getBoard().getGrid()[0][1].getPiece().setPlayer(false);
    chess.getBoard().getGrid()[0][1].setOccupied(true);
    chess.getBoard().getGrid()[4][2].setPiece(new King());
    chess.getBoard().getGrid()[4][2].getPiece().setPlayer(false);
    chess.getBoard().getGrid()[4][2].setOccupied(true);
    chess.setPlayer1(false);
    chess.setPlayer2(true);
    System.out.println(chess.getBoard());
    chess.move(0, 1, 0, 0);
    System.out.println(chess.getBoard().toString());
    assertEquals("p1_inCheck", chess.check());
    chess.swapTurn();
    assertEquals("p1_inCheckMate", chess.checkMate());
    // example2
    Chess c = new Chess(null);
    c.setBoard(c.setupBoard());
    c.setupPieces();
    c.move(5, 1, 5, 2);
    c.move(4, 6, 4, 4);
    c.move(6, 1, 6, 3);
    c.move(3, 7, 7, 3);
    c.swapTurn();
    assertEquals("p1_inCheckMate", c.checkMate());
}
