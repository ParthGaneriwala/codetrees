public static int attack(String inFile, String outFile) throws IOException, DataFormatException, InterruptedException {
    inFile = TextWork.cutComma(inFile);
    inFileName = inFile;
    outFileName = outFile;
    counter = 0;
    percent = -1;
    pauseFlag = false;
    stopFlag = false;
    trueCounter = 0;
    minPenalty = Integer.MAX_VALUE;
    minBiPenalty = Double.MAX_VALUE;
    TableOfFrequency tableOfFrec = new TableOfFrequency();
    tableOfFrec = Statistic.calcFrequency(inFile);
    tableOfFrec.sortFrequences();
    EncryptBiFrec = Statistic.calcBigramFrequency(inFile);
    EncryptBiFrec.sortLetters();
    try {
        standartFrec = Statistic.loadEtalonFrequency();
        standartFrec.sortFrequences();
        biStandart = Statistic.loadEtalonBigram();
    } catch (IOException e) {
        e.printStackTrace();
        throw new IOException(e.getMessage() + "Please choose StatisticFile correctly. ");
    }
    posTable = new PossibilityTable(standartFrec);
    posTable.create(tableOfFrec);
    posTable.reform();
    System.out.println(posTable.toString());
    currentTable = new ChangeTable();
    allWork = posTable.getAmountOfVariants(new ChangeTable());
    System.out.println(allWork);
    int result = rec(0, 0);
    File f1 = new File(outFileName);
    File f2 = new File(outFileName + trueCounter);
    f2.renameTo(f1);
    f2.delete();
    return result;
}
