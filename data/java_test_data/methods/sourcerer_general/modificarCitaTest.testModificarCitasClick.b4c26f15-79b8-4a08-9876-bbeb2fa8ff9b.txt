public void testModificarCitasClick() {
    List dialogs0 = new FrameFinder("Acceso a Consultaplus").findAll();
    assertEquals("Dialog not found:", 1, dialogs0.size());
    Container campo_usuario = (Container) dialogs0.get(0);
    Finder f33 = new ComponentFinder(JTextField.class);
    JTextField field33 = (JTextField) f33.find(campo_usuario, 0);
    assertNotNull("Could not find field", field33);
    m_helper.sendString(new StringEventData(this, field33, "admin"));
    Container campo_contrasea = (Container) dialogs0.get(0);
    Finder f55 = new ComponentFinder(JTextField.class);
    JTextField field55 = (JTextField) f55.find(campo_contrasea, 1);
    assertNotNull("Could not find field", field55);
    m_helper.sendString(new StringEventData(this, field55, "admin"));
    Container boton_aceptar = (Container) dialogs0.get(0);
    Finder f66 = new ComponentFinder(JButton.class);
    JButton field66 = (JButton) f66.find(boton_aceptar, 0);
    assertNotNull("Could not find field", field66);
    f66 = new ComponentFinder(JButton.class);
    JButton aceptar = (JButton) f66.find(boton_aceptar, 1);
    m_helper.enterClickAndLeave(new MouseEventData(this, aceptar));
    assertTrue("Unsuccessful exit:", m_normalExit);
    checkException();
    List dialogs = new FrameFinder("Consultaplus").findAll();
    assertEquals("Dialog not found:", 1, dialogs.size());
    Container nameCitas = (Container) dialogs.get(0);
    Finder f2 = new ComponentFinder(JButton.class);
    JButton field2 = (JButton) f2.find(nameCitas, 0);
    assertNotNull("Could not find field", field2);
    f2 = new ComponentFinder(JButton.class);
    JButton entrar = (JButton) f2.find(nameCitas, 2);
    m_helper.enterClickAndLeave(new MouseEventData(this, entrar));
    assertTrue("Unsuccessful exit:", m_normalExit);
    checkException();
    Container paciente = (Container) dialogs.get(0);
    Finder f3 = new ComponentFinder(JTable.class);
    JTable field3 = (JTable) f3.find(paciente, 0);
    assertNotNull("Could not find field", field3);
    f3 = new ComponentFinder(JTable.class);
    JTable selec_pac = (JTable) f3.find(paciente, 0);
    m_helper.enterClickAndLeave(new MouseEventData(this, selec_pac));
    assertTrue("Unsuccessful exit:", m_normalExit);
    checkException();
    Container boton_actu = (Container) dialogs.get(0);
    Finder f8 = new ComponentFinder(JButton.class);
    JButton field8 = (JButton) f8.find(boton_actu, 0);
    assertNotNull("Could not find field", field8);
    f8 = new ComponentFinder(JButton.class);
    JButton g = (JButton) f8.find(boton_actu, 5);
    m_helper.enterClickAndLeave(new MouseEventData(this, g));
    assertTrue("Unsuccessful exit:", m_normalExit);
    checkException();
    List dialogs1 = new FrameFinder("Modificar cita").findAll();
    assertEquals("Dialog not found:", 1, dialogs.size());
    Container date = (Container) dialogs.get(0);
    Finder f11 = new ComponentFinder(JDateChooser.class);
    JDateChooser field11 = (JDateChooser) f11.find(date, 0);
    assertNotNull("Could not find field", field11);
    f11 = new ComponentFinder(JDateChooser.class);
    JButton fecha = (JButton) f11.find(date, 1);
    m_helper.enterClickAndLeave(new MouseEventData(this, fecha));
    assertTrue("Unsuccessful exit:", m_normalExit);
    checkException();
    Container hora = (Container) dialogs.get(0);
    Finder f12 = new ComponentFinder(JComboBox.class);
    JComboBox field12 = (JComboBox) f12.find(hora, 0);
    assertNotNull("Could not find field", field12);
    f12 = new ComponentFinder(JComboBox.class);
    JComboBox h = (JComboBox) f12.find(hora, 0);
    m_helper.enterClickAndLeave(new MouseEventData(this, h));
    assertTrue("Unsuccessful exit:", m_normalExit);
    checkException();
    Container guardar = (Container) dialogs.get(0);
    Finder f13 = new ComponentFinder(JButton.class);
    JButton field13 = (JButton) f13.find(guardar, 0);
    assertNotNull("Could not find field", field13);
    f13 = new ComponentFinder(JButton.class);
    JButton gua = (JButton) f13.find(guardar, 5);
    m_helper.enterClickAndLeave(new MouseEventData(this, gua));
    assertTrue("Unsuccessful exit:", m_normalExit);
    checkException();
}
