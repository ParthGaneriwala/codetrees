public void actionPerformed(ActionEvent e) {
    generateCFG = false;
    if (codeTextPane.getText() == null || codeTextPane.getText().isEmpty()) {
        postStatusMessage("Please Enter some text");
        generateCFG = true;
        controlFlowGraphPane.cleanUp();
        JOptionPane.showMessageDialog(mainFrame, "Please Enter some text", "Error", JOptionPane.ERROR_MESSAGE);
        keepCodeTextPaneFocused();
        return;
    }
    System.out.println(readFromXMl);
    if (readFromXMl == true)
        generatedCFGs = getControlFlowGraphFromXML();
    else
        generatedCFGs = getControlFlowGraph();
    if (generatedCFGs == null || generatedCFGs.isEmpty()) {
        controlFlowGraphPane.cleanUp();
        generateCFG = true;
        postStatusMessage("Compile Error. Please check the code");
        JOptionPane.showMessageDialog(mainFrame, "Compile Error. Please check the code", "Error", JOptionPane.ERROR_MESSAGE);
        keepCodeTextPaneFocused();
        return;
    }
    CFGXMLConverter cfgConverter = new CFGXMLConverter();
    cfgConverter.generatetXML(generatedCFGs);
    if (generatedCFGs == null || generatedCFGs.isEmpty()) {
        postStatusMessage("Exception while converting CFG to xml.");
        JOptionPane.showMessageDialog(mainFrame, "Exception while converting CFG to xml.", "Error", JOptionPane.ERROR_MESSAGE);
        keepCodeTextPaneFocused();
        generateCFG = true;
        return;
    }
    for (ControlFlowGraph graph : generatedCFGs) {
        graph.displayFlowGraph();
    }
    controlFlowGraphPane.setCfg(generatedCFGs);
    controlFlowGraphPane.setRecalculate(true);
    postStatusMessage("Control flow graph generated successfully.");
}
