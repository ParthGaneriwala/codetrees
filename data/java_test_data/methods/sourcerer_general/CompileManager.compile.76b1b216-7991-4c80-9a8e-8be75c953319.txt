public String compile(String path, String fileName, String source) {
    StringBuffer buffer = new StringBuffer();
    FileWriter fw = null;
    try {
        fw = new FileWriter(path + "WEB-INF/classes/" + fileName + ".java");
        fw.write(source);
        fw.close();
    } catch (IOException e1) {
        e1.printStackTrace();
    }
    CAJavaCompiler javaCompiler = new CAJavaCompiler();
    javaCompiler.addSourceFile(path + "WEB-INF/classes/" + fileName + ".java");
    // javaCompiler.addSourceFile(path + "WEB-INF/classes/" + fileName + ".java", source);
    javaCompiler.compile();
    List<Diagnostic<? extends JavaFileObject>> diagnosticList = javaCompiler.getDiagnostics();
    JSONObject jsonObject = new JSONObject();
    try {
        if (diagnosticList.size() > 0) {
            JSONArray jsonArray = new JSONArray();
            for (Diagnostic<? extends JavaFileObject> diagnostic : diagnosticList) {
                JSONObject jsonWarning = new JSONObject();
                jsonWarning.put("line", new Long(diagnostic.getLineNumber()).toString());
                jsonWarning.put("message", diagnostic.getMessage(Locale.ENGLISH));
                jsonArray.put(jsonWarning);
            }
            jsonObject.put("length", jsonArray.length());
            jsonObject.put("status", "failed");
            jsonObject.put("info", jsonArray.toString());
        } else {
            JSONArray result = ReflectManager.getManager().getFieldsAndMethods(fileName);
            jsonObject.put("fileName", fileName);
            jsonObject.put("length", result.length());
            jsonObject.put("status", "succeed");
            jsonObject.put("info", result.toString());
        }
    } catch (JSONException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
    buffer.append(jsonObject.toString());
    return buffer.toString();
}
