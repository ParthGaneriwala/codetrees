public static void initSound(int buff_size, AudioFormat format) {
    BUFF_SIZE = buff_size;
    try {
        mixer = AudioSystem.getMixer(null);
        System.out.println("Mixer: " + mixer.getMixerInfo());
        mixer.open();
        Line.Info srcLineInfo = null;
        Line.Info[] srcLineInfos = mixer.getSourceLineInfo();
        for (int i = 0; i < srcLineInfos.length; i++) {
            srcLineInfo = srcLineInfos[i];
            System.out.println("Source Line " + i + ": " + srcLineInfo.getLineClass().getName());
            if (srcLineInfo.getLineClass().getName().equals("javax.sound.sampled.SourceDataLine"))
                break;
        }
        if (srcLineInfo == null) {
            System.out.println("Augh: no SourceDataLine found for mixer.");
            INITIALIZED = false;
            return;
        }
        if (!((DataLine.Info) srcLineInfo).isFormatSupported(format)) {
            AudioFormat[] formats = ((DataLine.Info) srcLineInfo).getFormats();
            // whatever...
            format = formats[0];
        }
        System.out.println("Audio Format: " + format);
        MAX_POLY = mixer.getMaxLines(srcLineInfo);
        lines = new SourceDataLine[MAX_POLY];
        for (int i = 0; i < MAX_POLY; i++) {
            lines[i] = (SourceDataLine) mixer.getLine(srcLineInfo);
            lines[i].open(format, BUFF_SIZE);
        }
        if (mixer.isSynchronizationSupported(lines, true))
            mixer.synchronize(lines, true);
        for (int i = 0; i < MAX_POLY; i++) lines[i].start();
        try {
            speaker = (Port) AudioSystem.getLine(Port.Info.SPEAKER);
            speaker.open();
        } catch (Exception fark) {
            System.out.println(fark);
            speaker = (Port) AudioSystem.getLine(Port.Info.LINE_OUT);
            speaker.open();
        }
        SAMPLE_RATE = (int) (format.getSampleRate());
        System.out.println("Max Polyphony: " + SampleSystem.MAX_POLY);
        System.out.println("Initialized.");
        INITIALIZED = true;
        return;
    } catch (Exception augh) {
        System.out.println(augh);
        INITIALIZED = false;
        return;
    }
}
