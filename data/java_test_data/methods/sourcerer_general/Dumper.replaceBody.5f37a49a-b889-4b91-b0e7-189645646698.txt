private static void replaceBody(SootMethod method) {
    JimpleBody body = Jimple.v().newBody();
    LocalGenerator localGen = new LocalGenerator(body);
    RefType baseType = Scene.v().getObjectType();
    ArrayType arrayType = ArrayType.v(baseType, 1);
    Local arrayLocal = localGen.generateLocal(arrayType);
    int numActualParams = method.getParameterCount() - 1;
    PatchingChain<Unit> units = body.getUnits();
    RefType declType = RefType.v(method.getDeclaringClass());
    Local thisLocal = localGen.generateLocal(declType);
    units.add(Jimple.v().newIdentityStmt(thisLocal, Jimple.v().newThisRef(declType)));
    List<Type> parameterTypes = method.getParameterTypes();
    int num = -1;
    int spParamNum = -1;
    Local[] paramLocals = new Local[method.getParameterCount()];
    for (Type t : parameterTypes) {
        num++;
        if (t instanceof RefType) {
            if (((RefType) t).getClassName().equals("org.aspectj.lang.JoinPoint$StaticPart")) {
                spParamNum = num;
            }
        }
        Local paramLocal = localGen.generateLocal(t);
        ParameterRef paramRef = Jimple.v().newParameterRef(t, num);
        IdentityStmt paramAssignToLocal = Jimple.v().newIdentityStmt(paramLocal, paramRef);
        units.add(paramAssignToLocal);
        paramLocals[num] = paramLocal;
    }
    if (spParamNum < 0) {
        throw new InternalError("StaticPart not found!");
    }
    AssignStmt arrayInitStmt = Jimple.v().newAssignStmt(arrayLocal, Jimple.v().newNewArrayExpr(baseType, IntConstant.v(numActualParams)));
    units.add(arrayInitStmt);
    num = -1;
    for (Type t : parameterTypes) {
        num++;
        if (num != spParamNum) {
            AssignStmt assignToArray = Jimple.v().newAssignStmt(Jimple.v().newArrayRef(arrayLocal, IntConstant.v(num)), paramLocals[num]);
            units.add(assignToArray);
        }
    }
    Local methodNameLocal = localGen.generateLocal(RefType.v("java.lang.String"));
    AssignStmt methodNameAssign = Jimple.v().newAssignStmt(methodNameLocal, StringConstant.v(method.getDeclaringClass().getName() + "." + method.getName()));
    units.add(methodNameAssign);
    SootClass dumperClass = Scene.v().getSootClass("org.aspectbench.tm.runtime.internal.Dumper");
    SootMethod dumpMethod = dumperClass.getMethodByName("dump");
    StaticInvokeExpr invoke = Jimple.v().newStaticInvokeExpr(dumpMethod.makeRef(), arrayLocal, paramLocals[spParamNum], methodNameLocal);
    InvokeStmt invokeStmt = Jimple.v().newInvokeStmt(invoke);
    units.add(invokeStmt);
    // TODO won't work for around advice
    units.add(Jimple.v().newReturnVoidStmt());
    body.setMethod(method);
    method.setActiveBody(body);
    body.validate();
}
