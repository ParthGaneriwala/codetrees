public void contextInitialized(ServletContextEvent event) {
    try {
        // Globals globals = new Globals();
        // 得到所有的rightcode等等
        BasicService service = (BasicService) Globals.getBean("basicService");
        List list = service.find("from com.changpeng.models.Areas a where a.grade<=3");
        for (int i = 0; i < list.size(); i++) {
            Areas area = (Areas) list.get(i);
            CommonDatas.AreasIdParent.put(area.getAreaCode(), area.getParentAreaCode());
            CommonDatas.AreasIdName.put(area.getAreaCode(), area.getAreaName());
        }
        list = service.findAll(SysParameter.class);
        int length = list == null ? 0 : list.size();
        for (int i = 0; i < length; i++) {
            SysParameter param = (SysParameter) list.get(i);
            CommonDatas.SysParameter.put(param.getParamname(), param.getParamvalue());
        }
        LOG.info("参数:" + CommonDatas.SysParameter);
        // list = service.findAll(SysUnionparams.class);
        // length = list == null ? 0 : list.size();
        // for (int i = 0; i < length; i++) {
        // SysUnionparams area = (SysUnionparams) list.get(i);
        // if (area.getDomain() != null &&! area.getDomain().equals("")) {
        // CommonDatas.SysUnionparams.put(area.getDomain(), area);
        // }
        // }
        com.changpeng.system.util.CommonDatas.getGroupParamsUrl();
        LOG.info("URL:" + CommonDatas.SysUnionparams.keySet());
        if (CommonDatas.SysParameter.containsKey("sysname")) {
            Constants.SYS_NAME = CommonDatas.SysParameter.get("sysname").toString();
            Constants.DEFAULT_SYS_NAME = Constants.SYS_NAME;
        }
        if (CommonDatas.SysParameter.containsKey("location")) {
            Constants.LOCATION = CommonDatas.SysParameter.get("location").toString();
        }
        if (CommonDatas.SysParameter.containsKey("logopath")) {
            Constants.LOGO_PATH = CommonDatas.SysParameter.get("logopath").toString();
            Constants.DEFAULT_LOGO_PATH = Constants.LOGO_PATH;
        }
        if (CommonDatas.SysParameter.containsKey("resourcepath")) {
            Constants.RESOURCE_PATH = CommonDatas.SysParameter.get("resourcepath").toString();
        }
        if (CommonDatas.SysParameter.containsKey("indexpic")) {
            Constants.INDEX_PIC = CommonDatas.SysParameter.get("indexpic").toString();
            Constants.DEFAULT_INDEX_PIC = Constants.INDEX_PIC;
        }
        if (CommonDatas.SysParameter.containsKey("topbarpic")) {
            Constants.TOP_BAR_PIC = CommonDatas.SysParameter.get("topbarpic").toString();
            Constants.DEFAULT_TOP_BAR_PIC = Constants.TOP_BAR_PIC;
        }
        if (CommonDatas.SysParameter.containsKey("photosavepath")) {
            Constants.PHOTO_SAVE_PATH = CommonDatas.SysParameter.get("photosavepath").toString();
            if (Constants.PHOTO_SAVE_PATH.endsWith("/"))
                Constants.PHOTO_SAVE_PATH = Constants.PHOTO_SAVE_PATH + "/";
        }
        if (CommonDatas.SysParameter.containsKey("startyear")) {
            Constants.START_YER = Integer.parseInt(CommonDatas.SysParameter.get("startyear").toString());
        }
        if (CommonDatas.SysParameter.containsKey("havelocal")) {
            if (CommonDatas.SysParameter.get("havelocal").toString().equals("true") || CommonDatas.SysParameter.get("havelocal").toString().equals("false"))
                Constants.HAVELOCAL = Boolean.parseBoolean(CommonDatas.SysParameter.get("havelocal").toString());
            else
                Constants.HAVELOCAL = false;
            Constants.DEFAULT_HAVELOCAL = Constants.HAVELOCAL;
        }
        // LOG.warn("CommonDatas.SysParameter.containsKey(\"fromaddr\"):"
        // + CommonDatas.SysParameter.containsKey("fromaddr"));
        // LOG.warn("Constants.FROMADDR:::" + Constants.FROMADDR);
        SysRightService rightService = (SysRightService) Globals.getBean("sysRightService");
        RightTree.setRightList(rightService.findAll());
        getSysteNos();
        LOG.info("杭州卡号和系统编号获取成功!");
        com.changpeng.system.util.CommonDatas.getGroups();
        com.changpeng.system.util.CommonDatas.getUsers();
        com.changpeng.system.util.CommonDatas.getLawyers();
        com.changpeng.lessons.util.CommonDatas.getAlllessons();
    } catch (ServiceException e) {
        LOG.error("系统启动初始化权限列表为空" + e);
    }
    String contextid = System.currentTimeMillis() / 1000 + "";
    event.getServletContext().setAttribute("CONTEXTID", contextid);
    LOG.info("系统启动初始化,系统ID......" + contextid);
}
