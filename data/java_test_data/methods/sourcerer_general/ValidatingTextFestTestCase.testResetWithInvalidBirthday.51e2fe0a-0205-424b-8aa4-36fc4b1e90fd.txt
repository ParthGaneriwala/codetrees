@Test
public void testResetWithInvalidBirthday() {
    SimpleSingleFailureFieldTextPanel panel = new SimpleSingleFailureFieldTextPanel();
    CobeanTestUtil.setComponentNamesFromPropertyNames(panel);
    ShowcaseTestFrame frame = new ShowcaseTestFrame(panel);
    FrameFixture showcaseFix = new FrameFixture(frame);
    SimpleSingleFailureFieldTextShowcase sc = new SimpleSingleFailureFieldTextShowcase();
    sc.setService(new TestLitService());
    sc.init(panel);
    showcaseFix.show();
    try {
        final JTextComponentFixture failureTextBox = showcaseFix.textBox("failureTextField");
        final JTextComponentFixture birthdayTextBox = showcaseFix.textBox("birthdayTextField");
        final JTextComponentFixture idTextBox = showcaseFix.textBox("idTextField");
        final JTextComponentFixture nameTextBox = showcaseFix.textBox("nameTextField");
        final JButtonFixture resetButton = showcaseFix.button("resetButton");
        showcaseFix.button("uppercaseButton");
        showcaseFix.button("lowercaseButton");
        // Check initial state
        nameTextBox.requireText("Gernot Wolfsgruber");
        idTextBox.requireText("7");
        birthdayTextBox.requireEmpty();
        // Check if there are the same values in the cobeans
        assertEquals("Gernot Wolfsgruber", sc.getNameCobean().getValue());
        assertEquals(7, sc.getIdCobean().getValue().intValue());
        assertEquals(null, sc.getBirthdayCobean().getValue());
        // Enter a new invalid birthday
        birthdayTextBox.setText("");
        birthdayTextBox.enterText("DDD");
        idTextBox.focus();
        failureTextBox.requireText("'DDD' is not a valid date. Use 'dd.MM.yyyy'");
        nameTextBox.requireText("Gernot Wolfsgruber");
        idTextBox.requireText("7");
        birthdayTextBox.requireText("DDD");
        assertEquals("Gernot Wolfsgruber", sc.getNameCobean().getValue());
        assertEquals(7, sc.getIdCobean().getValue().intValue());
        assertEquals(null, sc.getBirthdayCobean().getValue());
        // Enter a new another invalid birthday
        birthdayTextBox.setText("");
        birthdayTextBox.enterText("1.55.2009");
        nameTextBox.focus();
        failureTextBox.requireText("'1.55.2009' is not a valid date. Use 'dd.MM.yyyy'");
        nameTextBox.requireText("Gernot Wolfsgruber");
        idTextBox.requireText("7");
        birthdayTextBox.requireText("1.55.2009");
        assertEquals("Gernot Wolfsgruber", sc.getNameCobean().getValue());
        assertEquals(7, sc.getIdCobean().getValue().intValue());
        assertEquals(null, sc.getBirthdayCobean().getValue());
        // Enter a new valid birthday
        birthdayTextBox.setText("");
        birthdayTextBox.enterText("1.2.2009");
        idTextBox.focus();
        failureTextBox.requireEmpty();
        nameTextBox.requireText("Gernot Wolfsgruber");
        idTextBox.requireText("7");
        birthdayTextBox.requireText("01.02.2009");
        assertEquals("Gernot Wolfsgruber", sc.getNameCobean().getValue());
        assertEquals(7, sc.getIdCobean().getValue().intValue());
        assertEquals(CobeanTestUtil.createDate("yyyyMMdd", "20090201"), sc.getBirthdayCobean().getValue());
        // Enter a new another invalid birthday
        birthdayTextBox.setText("");
        birthdayTextBox.enterText("1.55.2009");
        idTextBox.focus();
        failureTextBox.requireText("'1.55.2009' is not a valid date. Use 'dd.MM.yyyy'");
        nameTextBox.requireText("Gernot Wolfsgruber");
        idTextBox.requireText("7");
        birthdayTextBox.requireText("1.55.2009");
        assertEquals("Gernot Wolfsgruber", sc.getNameCobean().getValue());
        assertEquals(7, sc.getIdCobean().getValue().intValue());
        assertEquals(CobeanTestUtil.createDate("yyyyMMdd", "20090201"), sc.getBirthdayCobean().getValue());
        // Enter a new valid birthday
        resetButton.click();
        pauseShort();
        failureTextBox.requireEmpty();
        failureTextBox.requireEmpty();
        nameTextBox.requireText("Gernot Wolfsgruber");
        idTextBox.requireText("7");
        birthdayTextBox.requireText("01.02.2009");
        assertEquals("Gernot Wolfsgruber", sc.getNameCobean().getValue());
        assertEquals(7, sc.getIdCobean().getValue().intValue());
        assertEquals(CobeanTestUtil.createDate("yyyyMMdd", "20090201"), sc.getBirthdayCobean().getValue());
    } finally {
        pauseShort();
        showcaseFix.cleanUp();
    }
}
