void parseArgv() {
    CommandLine cmdLine = null;
    try {
        cmdLine = parser.parse(argv_);
    } catch (Exception oe) {
        LOG.error(oe.getMessage());
        exitUsage(argv_.length > 0 && "-info".equals(argv_[0]));
    }
    if (cmdLine != null) {
        verbose_ = cmdLine.hasOption("-verbose");
        detailedUsage_ = cmdLine.hasOption("-info");
        debug_ = cmdLine.hasOption("-debug") ? debug_ + 1 : debug_;
        inputSpecs_.addAll(cmdLine.getValues("-input"));
        output_ = (String) cmdLine.getValue("-output");
        mapCmd_ = (String) cmdLine.getValue("-mapper");
        comCmd_ = (String) cmdLine.getValue("-combiner");
        redCmd_ = (String) cmdLine.getValue("-reducer");
        if (!cmdLine.getValues("-file").isEmpty()) {
            packageFiles_.addAll(cmdLine.getValues("-file"));
        }
        String fsName = (String) cmdLine.getValue("-dfs");
        if (null != fsName) {
            LOG.warn("-dfs option is deprecated, please use -fs instead.");
            config_.set("fs.default.name", fsName);
        }
        additionalConfSpec_ = (String) cmdLine.getValue("-additionalconfspec");
        inputFormatSpec_ = (String) cmdLine.getValue("-inputformat");
        outputFormatSpec_ = (String) cmdLine.getValue("-outputformat");
        numReduceTasksSpec_ = (String) cmdLine.getValue("-numReduceTasks");
        partitionerSpec_ = (String) cmdLine.getValue("-partitioner");
        inReaderSpec_ = (String) cmdLine.getValue("-inputreader");
        mapDebugSpec_ = (String) cmdLine.getValue("-mapdebug");
        reduceDebugSpec_ = (String) cmdLine.getValue("-reducedebug");
        List<String> car = cmdLine.getValues("-cacheArchive");
        if (null != car && !car.isEmpty()) {
            LOG.warn("-cacheArchive option is deprecated, please use -archives instead.");
            for (String s : car) {
                cacheArchives = (cacheArchives == null) ? s : cacheArchives + "," + s;
            }
        }
        List<String> caf = cmdLine.getValues("-cacheFile");
        if (null != caf && !caf.isEmpty()) {
            LOG.warn("-cacheFile option is deprecated, please use -files instead.");
            for (String s : caf) {
                cacheFiles = (cacheFiles == null) ? s : cacheFiles + "," + s;
            }
        }
        List<String> jobConfArgs = (List<String>) cmdLine.getValue(jobconf);
        List<String> envArgs = (List<String>) cmdLine.getValue(cmdenv);
        if (null != jobConfArgs && !jobConfArgs.isEmpty()) {
            LOG.warn("-jobconf option is deprecated, please use -D instead.");
            for (String s : jobConfArgs) {
                String[] parts = s.split("=", 2);
                config_.set(parts[0], parts[1]);
            }
        }
        if (null != envArgs) {
            for (String s : envArgs) {
                if (addTaskEnvironment_.length() > 0) {
                    addTaskEnvironment_ += " ";
                }
                addTaskEnvironment_ += s;
            }
        }
    } else {
        exitUsage(argv_.length > 0 && "-info".equals(argv_[0]));
    }
}
