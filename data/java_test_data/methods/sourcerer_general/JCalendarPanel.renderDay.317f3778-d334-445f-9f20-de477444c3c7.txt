private void renderDay() {
    m_jBtnToday.setEnabled(isEnabled());
    if (m_date == null) {
        m_jBtnMonthDec.setEnabled(false);
        m_jBtnMonthInc.setEnabled(isEnabled());
        m_jBtnYearDec.setEnabled(isEnabled());
        m_jBtnYearInc.setEnabled(isEnabled());
    } else {
        m_CalendarHelper.setTime(m_date);
        m_CalendarHelper.add(Calendar.MONTH, -1);
        m_jBtnMonthDec.DateInf = m_CalendarHelper.getTime();
        m_jBtnMonthDec.setEnabled(isEnabled());
        m_CalendarHelper.add(Calendar.MONTH, 2);
        m_jBtnMonthInc.DateInf = m_CalendarHelper.getTime();
        m_jBtnMonthInc.setEnabled(isEnabled());
        m_CalendarHelper.setTime(m_date);
        m_CalendarHelper.add(Calendar.YEAR, -1);
        m_jBtnYearDec.DateInf = m_CalendarHelper.getTime();
        m_jBtnYearDec.setEnabled(isEnabled());
        m_CalendarHelper.add(Calendar.YEAR, 2);
        m_jBtnYearInc.DateInf = m_CalendarHelper.getTime();
        m_jBtnYearInc.setEnabled(isEnabled());
        if (m_jCurrent != null) {
            m_jCurrent.setForeground((Color) UIManager.getDefaults().get("TextPane.foreground"));
            m_jCurrent.setBackground((Color) UIManager.getDefaults().get("TextPane.background"));
            m_jCurrent.setBorder(null);
        }
        JButtonDate jAux = getLabelByDate(m_date);
        jAux.setBackground((Color) UIManager.getDefaults().get("TextPane.selectionBackground"));
        jAux.setForeground((Color) UIManager.getDefaults().get("TextPane.selectionForeground"));
        jAux.setBorder(new LineBorder((Color) UIManager.getDefaults().get("TitledBorder.titleColor")));
        m_jCurrent = jAux;
    }
}
