public static HashMap<String, Integer> getEntityList(String content, String entitytag) {
    HashMap<String, Integer> entities = new HashMap<String, Integer>();
    String[] lines = content.split("\n");
    for (int i = 0; i < lines.length; i++) {
        String pre = "0";
        String out = "";
        String tag = "";
        String pun = "";
        String prepun = "";
        String line = lines[i];
        while (line.contains(" ")) {
            String t = line.substring(0, line.indexOf(" "));
            String[] ts = t.split("/");
            String word = ts[0];
            if (ts.length >= 2) {
                tag = ts[1].replaceAll("[\\p{Punct}]", "").trim();
                pun = ts[1].substring(tag.length());
                if (!pre.equals(tag)) {
                    if (!pre.equals("O")) {
                        if (// &&!out.contains(""))
                        pre.equals(entitytag)) {
                            if (entities.containsKey(out + "\t" + entitytag)) {
                                int c = entities.get(out + "\t" + entitytag);
                                entities.remove(out + "\t" + entitytag);
                                entities.put(out + "\t" + entitytag, c + 1);
                            } else {
                                entities.put(out + "\t" + entitytag, 1);
                            }
                        }
                    }
                    pre = tag;
                    out = ts[0];
                } else {
                    out += prepun + " " + ts[0];
                }
            }
            prepun = pun;
            line = line.substring(line.indexOf(" ") + 1);
        }
        String[] ts = line.split("/");
        if (ts.length >= 2) {
            tag = ts[1].replaceAll("[\\p{Punct}]", "").trim();
            pun = ts[1].substring(tag.length());
            if (!pre.equals(tag)) {
                if (!pre.equals("O")) {
                    if (// &&!out.contains(""))
                    pre.equals(entitytag)) {
                        // System.out.println(out);
                        if (entities.containsKey(out + "\t" + entitytag)) {
                            int c = entities.get(out + "\t" + entitytag);
                            entities.remove(out + "\t" + entitytag);
                            entities.put(out + "\t" + entitytag, c + 1);
                        } else {
                            entities.put(out + "\t" + entitytag, 1);
                        }
                    }
                }
                pre = tag;
                out = ts[0] + " ";
            } else {
                out += prepun + " " + ts[0];
            }
        }
        if (tag.equals(entitytag)) {
            if (entities.containsKey(out + "\t" + entitytag)) {
                int c = entities.get(out + "\t" + entitytag);
                entities.remove(out + "\t" + entitytag);
                entities.put(out + "\t" + entitytag, c + 1);
            } else {
                entities.put(out + "\t" + entitytag, 1);
            }
        }
    }
    // line
    return entities;
}
