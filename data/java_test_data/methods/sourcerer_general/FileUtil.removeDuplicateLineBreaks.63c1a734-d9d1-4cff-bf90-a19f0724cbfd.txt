public static void removeDuplicateLineBreaks(final File f) {
    String sep = StringUtil.getNewLine();
    if (!f.exists()) {
        System.err.println("FileUtil.removeDuplicateLineBreak(File f): " + f.getAbsolutePath() + " does not exist!");
        return;
    }
    if (f.isDirectory()) {
        System.err.println("FileUtil.removeDuplicateLineBreak(File f): " + f.getAbsolutePath() + " is a directory!");
        return;
    }
    // real file
    try {
        BufferedInputStream in = new BufferedInputStream(new FileInputStream(f), 1024);
        StringBuffer result = new StringBuffer();
        int tmpread;
        while ((tmpread = in.read()) != -1) {
            result.append((char) tmpread);
        }
        String tmpstring;
        StringTokenizer toke = new StringTokenizer(result.toString(), sep, true);
        result = new StringBuffer();
        int breaks = 0;
        while (toke.hasMoreTokens()) {
            tmpstring = toke.nextToken().trim();
            if (tmpstring.equals("") && breaks > 0) {
                breaks++;
                // if(breaks<=2)result.append(sep);
                continue;
            }
            if (tmpstring.equals("")) {
                tmpstring = sep;
                breaks++;
            } else {
                breaks = 0;
            }
            result.append(tmpstring);
        }
        // delete original file and write it new from tmpfile.
        f.delete();
        f.createNewFile();
        FileWriter out = new FileWriter(f);
        out.write(result.toString());
        out.flush();
    } catch (FileNotFoundException e) {
    // does never happen.
    } catch (IOException g) {
        g.printStackTrace(System.err);
    }
}
