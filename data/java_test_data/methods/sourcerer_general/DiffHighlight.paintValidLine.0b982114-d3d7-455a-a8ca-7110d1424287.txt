public void paintValidLine(Graphics2D gfx, final int screenLine, final int physicalLine, final int start, final int end, final int y) {
    if (this.isEnabled()) {
        try {
            if ((this.textArea.getLineStartOffset(physicalLine) == -1) || (this.textArea.getLineEndOffset(physicalLine) == -1)) {
                return;
            }
        } catch (Exception e) {
            return;
        }
        Diff.change hunk = this.edits;
        Color color;
        if (this.position == DiffHighlight.LEFT) {
            for (; hunk != null; hunk = hunk.link) {
                if (hunk.line0 > physicalLine) {
                    break;
                }
                if (hunk.deleted == 0) {
                    if (hunk.line0 != physicalLine) {
                        continue;
                    }
                    color = JDiffPlugin.highlightInvalidColor;
                    TextAreaPainter painter = this.textArea.getPainter();
                    gfx.setColor(color);
                    gfx.drawLine(0, y, painter.getWidth() - 1, y);
                    continue;
                }
                if ((hunk.line0 + hunk.deleted - 1) < physicalLine) {
                    continue;
                }
                if (hunk.inserted == 0) {
                    color = JDiffPlugin.highlightDeletedColor;
                } else {
                    color = JDiffPlugin.highlightChangedColor;
                }
                TextAreaPainter painter = this.textArea.getPainter();
                FontMetrics fm = painter.getFontMetrics();
                gfx.setColor(color);
                gfx.fillRect(0, y, painter.getWidth(), fm.getHeight());
                break;
            }
        } else {
            // DiffHighlight.RIGHT
            for (; hunk != null; hunk = hunk.link) {
                if (hunk.line1 > physicalLine) {
                    break;
                }
                if (hunk.inserted == 0) {
                    if (hunk.line1 != physicalLine) {
                        continue;
                    }
                    color = JDiffPlugin.highlightInvalidColor;
                    TextAreaPainter painter = this.textArea.getPainter();
                    gfx.setColor(color);
                    gfx.drawLine(0, y, painter.getWidth() - 1, y);
                    continue;
                }
                if ((hunk.line1 + hunk.inserted - 1) < physicalLine) {
                    continue;
                }
                if (hunk.deleted == 0) {
                    color = JDiffPlugin.highlightInsertedColor;
                } else {
                    color = JDiffPlugin.highlightChangedColor;
                }
                TextAreaPainter painter = this.textArea.getPainter();
                FontMetrics fm = painter.getFontMetrics();
                gfx.setColor(color);
                gfx.fillRect(0, y, painter.getWidth(), fm.getHeight());
                break;
            }
        }
    }
}
