protected void onRender(Element parent, int index) {
    super.onRender(parent, index);
    System.out.println("----------Attribute");
    add(contentPanel);
    contentPanel.createPanel(AttributeForm.NAME, "分类名称：", new TextBox());
    lstGoodsType.addChangeListener(new ChangeListener() {

        public void onChange(Widget sender) {
            getCurState().setSelectedGoodsTypeID(lstGoodsType.getValue(lstGoodsType.getSelectedIndex()));
        }
    });
    contentPanel.createPanel(AttributeForm.GOODSTYPE, "所属商品类型：", lstGoodsType);
    List<ChoicePanel.Item> indexItems = new ArrayList<ChoicePanel.Item>();
    indexItems.add(new ChoicePanel.Item("不需要检索", "0"));
    indexItems.add(new ChoicePanel.Item("关键字检索", "1"));
    indexItems.add(new ChoicePanel.Item("范围检索", "2"));
    ChoicePanel showIndex = new ChoicePanel("0", indexItems);
    contentPanel.createPanel(AttributeForm.INDEX, "能否进行检索:", showIndex);
    List<ChoicePanel.Item> linkedItems = new ArrayList<ChoicePanel.Item>();
    linkedItems.add(new ChoicePanel.Item("否", "0"));
    linkedItems.add(new ChoicePanel.Item("是", "1"));
    ChoicePanel showLinked = new ChoicePanel("0", indexItems);
    contentPanel.createPanel(AttributeForm.LINKED, "相同属性值的商品是否关联？", showLinked);
    List<ChoicePanel.Item> typeItems = new ArrayList<ChoicePanel.Item>();
    typeItems.add(new ChoicePanel.Item("唯一属性", "0"));
    typeItems.add(new ChoicePanel.Item("单选属性", "1"));
    typeItems.add(new ChoicePanel.Item("复选属性", "2"));
    ChoicePanel showType = new ChoicePanel("0", typeItems);
    contentPanel.createPanel(AttributeForm.TYPE, "属性是否可选：", showType);
    List<ChoicePanel.Item> inputTypeItems = new ArrayList<ChoicePanel.Item>();
    inputTypeItems.add(new ChoicePanel.Item("手工录入", "0"));
    inputTypeItems.add(new ChoicePanel.Item("从下面的列表中选择（一行代表一个可选值）", "1"));
    inputTypeItems.add(new ChoicePanel.Item("多行文本框", "2"));
    ChoicePanel showInputType = new ChoicePanel("0", inputTypeItems);
    contentPanel.createPanel(AttributeForm.INPUTTYPE, "该属性值的录入方式：", showInputType);
    TextArea valuesArea = new TextArea();
    valuesArea.setHeight("180px");
    valuesArea.setWidth("100px");
    contentPanel.createPanel(AttributeForm.VALUES, "可选值列表：", valuesArea);
    Button btnNew = new Button();
    Button btnCancel = new Button();
    HorizontalPanel panel = new HorizontalPanel();
    panel.setSpacing(10);
    btnNew.setText("确定");
    btnCancel.setText("重置");
    panel.add(btnNew);
    panel.add(btnCancel);
    contentPanel.createPanel(null, null, panel);
    btnNew.addClickListener(new ClickListener() {

        public void onClick(Widget sender) {
            String id = getCurState().getAttrID();
            AttributeForm attribute = new AttributeForm(ModelNames.ATTRIBUTE, contentPanel.getValues());
            try {
                attribute.validate();
            } catch (ValidationException ex) {
                // TODO leon need a common validation handling
                Window.alert(ex.getMessage());
                return;
            }
            if (getCurState().getIsEdit()) {
                new UpdateService().updateBean(id, attribute, new UpdateService.Listener() {

                    public synchronized void onSuccess(Boolean success) {
                        // List<PageState> choices = new ArrayList<PageState>();
                        // AttributeList.State newState = new AttributeList.State();
                        // newState.setSelectedGoodsTypeID(getCurState().getSelectedGoodsTypeID());
                        // choices.add(newState);
                        // String message = "编辑商品类型成功";
                        // com.jcommerce.gwt.client.iShop.getInstance().displaySuccessPanel(message, getName(), choices);
                        Success.State newState = new Success.State();
                        newState.setMessage("编辑商品类型成功");
                        AttributeListPanel.State choice1 = new AttributeListPanel.State();
                        choice1.setSelectedGoodsTypeID(getCurState().getSelectedGoodsTypeID());
                        newState.addChoice(AttributeListPanel.getInstance().getName(), choice1.getFullHistoryToken());
                        newState.execute();
                    }
                });
            } else {
                new CreateService().createBean(attribute, new CreateService.Listener() {

                    public synchronized void onSuccess(String id) {
                        System.out.println("new onSuccess( " + id);
                        getCurState().setAttrID(id);
                        System.out.println("1 b_list.addItem(" + id);
                        // attributes.put(id, attribute);
                        contentPanel.setValue(IAttribute.ID, id);
                        // List<PageState> choices = new ArrayList<PageState>();
                        // AttributeList.State newState = new AttributeList.State();
                        // newState.setSelectedGoodsTypeID(getCurState().getSelectedGoodsTypeID());
                        // choices.add(newState);
                        // String message = "编辑商品类型成功";
                        // com.jcommerce.gwt.client.iShop.getInstance().displaySuccessPanel(message, getName(), choices);
                        Success.State newState = new Success.State();
                        newState.setMessage("添加商品类型成功");
                        AttributeListPanel.State choice1 = new AttributeListPanel.State();
                        choice1.setSelectedGoodsTypeID(getCurState().getSelectedGoodsTypeID());
                        newState.addChoice(AttributeListPanel.getInstance().getName(), choice1.getFullHistoryToken());
                        newState.execute();
                    }
                });
            }
        }
    });
    btnCancel.addClickListener(new ClickListener() {

        public void onClick(Widget sender) {
            contentPanel.clearValues();
        }
    });
// refresh();
}
