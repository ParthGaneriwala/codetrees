public void insert(DetalleInventarioVO[] detalle_inventarioVOSet, boolean allowNulls) throws SystemException {
    Assert.isNotNull(detalle_inventarioVOSet, "detalle_inventarioVOSet[] specified is null!!");
    Assert.isTrue(detalle_inventarioVOSet.length > 0, "detalle_inventarioVOSet[] don't have any element!!");
    final String METHOD_NAME = "insert(Collection)";
    StringBuffer sqlSentences = new StringBuffer();
    PreparedStatement statement = null;
    boolean createStatement = true;
    int i = 0;
    try {
        for (; i < detalle_inventarioVOSet.length; i++) {
            Assert.isNotNull(detalle_inventarioVOSet[i], "detalle _inventarioVOSet[] specified is null!!");
            SqlVO vo = createSqlObject(detalle_inventarioVOSet[i], CommonDAO.INSERT_OPERATION, allowNulls);
            sqlSentences.append(vo.getSqlString());
            sqlSentences.append("\n");
            if (createStatement) {
                statement = connection.prepareStatement(vo.getBindString());
                createStatement = false;
            }
            bindValuesforInsert(statement, vo.getValues());
            statement.addBatch();
            statement.clearParameters();
        }
        statement.executeBatch();
        statement.close();
    } catch (IllegalArgumentException e) {
        StringBuffer msj = new StringBuffer(e.getMessage());
        msj.append("when try to insert VO No ");
        msj.append(i);
        throw new SystemException(e, FULL_NAME, METHOD_NAME);
    } catch (SQLException sqlEx) {
        throw new SystemException(sqlEx, FULL_NAME, METHOD_NAME);
    } finally {
        closeResources(statement);
    }
}
