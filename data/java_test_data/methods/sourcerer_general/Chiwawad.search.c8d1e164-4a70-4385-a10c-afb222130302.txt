private void search(String[] param, Boolean bRecordKeyword) {
    String strParameter = "";
    String sql = "";
    String strFileName = "";
    try {
        for (int i = 0; i < param.length; i++) {
            strParameter += param[i] + " ";
        }
        if (param.length < 3) {
            log.error("wrong search parameter");
            return;
        }
        int nPage = Integer.parseInt(param[1]);
        sql = "SELECT path, name, size, date, downrank FROM file where ";
        String strKeyword = "";
        for (int i = 2; i < param.length; i++) {
            // recode keyword into searchLog
            if (bRecordKeyword) {
                dbManager.executeUpdate("call sp_keywordInsert( '" + param[i] + "' )");
            }
            strKeyword = strKeyword.concat(param[i] + " ");
            sql = sql.concat("( path LIKE '%" + param[i] + "%' OR ");
            sql = sql.concat("name LIKE '%" + param[i] + "%' ) and ");
        }
        strKeyword = strKeyword.trim();
        int nLimitStart = propertyAll.nLimitCountSearchCount * (nPage - 1);
        sql += "regdate > DATE_SUB( ( SELECT MAX( regdate ) from file ), INTERVAL 5 HOUR )";
        sql += " LIMIT " + nLimitStart + ", " + propertyAll.nLimitCountSearchCount;
        strFileName = "search." + strKeyword + "." + nPage + ".xml";
        ArrayList<String[]> table = dbManager.executeQuery(sql, 5);
        Xml.makeXmlForSearch(strKeyword, strFileName, table);
    } catch (Exception e) {
        log.error("parameter = " + strParameter);
        log.error("sql = " + sql);
        log.error("file = " + strFileName);
        log.printStackTrace(e);
    }
}
