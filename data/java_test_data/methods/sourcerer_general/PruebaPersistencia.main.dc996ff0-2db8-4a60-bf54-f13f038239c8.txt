public static void main(String[] args) {
    importarEsquema();
    // Start EntityManagerFactory
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("clepet");
    // First unit of work
    EntityManager em = emf.createEntityManager();
    EntityTransaction tx = em.getTransaction();
    tx.begin();
    /*Veterinaria veterinaria = new Veterinaria("nomVet","locVet","dirVet","telVet");
		em.persist(veterinaria);
		
		Agenda agenda = new Agenda(CANTIDAD_CONSULTAS_SIMULTANEAS, MINUTOS_TURNO);
		veterinaria.setAgenda(agenda);
		agenda.setVeterinaria(veterinaria);
		em.persist(agenda);
		
		Medico medico = new Medico("nomMed","locMed","dirMed","telMed","celMed","mailMed","obsMed");
		veterinaria.getMedicos().add(medico);
		medico.setVeterinaria(veterinaria);
		em.persist(medico);
		
		Cliente cliente = new Cliente("nomCli","locCli","dirCli","telCli","celCli","mailCli","obsCli");
		veterinaria.getClientes().add(cliente);
		cliente.setVeterinaria(veterinaria);
		em.persist(cliente);
		
		Mascota mascota = new Mascota("nomMas","espMas","razaMas",new Date(),'M',"pesoMas","carMas");
		cliente.getMascotas().add(mascota);
		mascota.setResponsable(cliente);
		em.persist(mascota);
		
		SesionDeConsulta sesionDeConsulta = new SesionDeConsulta("la", "lala", "lalala", "lalalala");
		sesionDeConsulta.setFechaYHora(new Date());
		sesionDeConsulta.setMedico(medico);
		mascota.getSesionesDeConsulta().add(sesionDeConsulta);
		sesionDeConsulta.setMascota(mascota);
		em.persist(sesionDeConsulta);
		
		Turno turno = new Turno(cliente, new Date());
		agenda.getTurnos().add(turno);
		turno.setAgenda(agenda);
		em.persist(turno);*/
    Veterinaria veterinaria = new Veterinaria("nomVet", "locVet", "dirVet", "telVet");
    em.persist(veterinaria);
    veterinaria.inicializarAgenda(CANTIDAD_CONSULTAS_SIMULTANEAS, MINUTOS_TURNO);
    em.persist(veterinaria.getAgenda());
    Medico medico = new Medico("nomMed", "locMed", "dirMed", "telMed", "celMed", "mailMed", "obsMed");
    veterinaria.darDeAltaMedico(medico);
    em.persist(medico);
    Cliente cliente = new Cliente("nomCli", "locCli", "dirCli", "telCli", "celCli", "mailCli", "obsCli");
    veterinaria.darDeAltaCliente(cliente);
    em.persist(cliente);
    Mascota mascota = new Mascota("nomMas", "espMas", "razaMas", new Date(), 'M', "pesoMas", "carMas");
    veterinaria.darDeAltaMascota(cliente, mascota);
    em.persist(mascota);
    tx.commit();
    em.close();
}
