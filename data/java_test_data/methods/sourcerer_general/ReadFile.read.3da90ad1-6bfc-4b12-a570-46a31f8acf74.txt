public byte[] read(int len) {
    if (isDirectory()) {
        // is a directory?
        return null;
    }
    byte[] abyte0 = null;
    long l = 0L;
    // get file length
    l = mFile.length();
    if (mOffset + len > (int) l) {
        len = (int) (l - mOffset);
    }
    // new a byte array
    abyte0 = new byte[len];
    if (mBUFFER > len) {
        // read all data
        try {
            mDataInputStream.read(abyte0);
            mOffset += len;
        } catch (IOException ex1) {
            return null;
        }
    } else {
        // read the data by paragraph
        int datapos = 0;
        // calculate the buffer count
        int times = len / mBUFFER;
        for (int i = 0; i < times; i++) {
            byte[] buffer = new byte[mBUFFER];
            try {
                mDataInputStream.read(buffer);
                // copy the data to a byte array
                System.arraycopy(buffer, 0, abyte0, datapos, mBUFFER);
                datapos += mBUFFER;
                mOffset += mBUFFER;
            } catch (IOException ex2) {
                return null;
            }
        }
        int rest = len - datapos;
        // If you read the provisions of the length of the actual reading is greater than the length of the
        // go on read data
        byte[] buffer = new byte[rest];
        try {
            mDataInputStream.read(buffer);
            System.arraycopy(buffer, 0, abyte0, datapos, rest);
            mOffset += rest;
        } catch (IOException ex3) {
        }
        buffer = null;
    }
    System.gc();
    return abyte0;
}
