static void addFiles(FSEditLog editLog, int numFiles, short replication, int blocksPerFile, long startingBlockId, FileNameGenerator nameGenerator) {
    PermissionStatus p = new PermissionStatus("joeDoe", "people", new FsPermission((short) 0777));
    INodeDirectory dirInode = new INodeDirectory(p, 0L);
    editLog.logMkDir(BASE_PATH, dirInode);
    long blockSize = 10;
    BlockInfo[] blocks = new BlockInfo[blocksPerFile];
    for (int iB = 0; iB < blocksPerFile; ++iB) {
        blocks[iB] = new BlockInfo(new Block(0, blockSize, GenerationStamp.FIRST_VALID_STAMP), replication);
    }
    long currentBlockId = startingBlockId;
    long bidAtSync = startingBlockId;
    for (int iF = 0; iF < numFiles; iF++) {
        for (int iB = 0; iB < blocksPerFile; ++iB) {
            blocks[iB].setBlockId(currentBlockId++);
        }
        try {
            INodeFileUnderConstruction inode = new INodeFileUnderConstruction(null, replication, 0, blockSize, blocks, p, "", "", null);
            // Append path to filename with information about blockIDs
            String path = "_" + iF + "_B" + blocks[0].getBlockId() + "_to_B" + blocks[blocksPerFile - 1].getBlockId() + "_";
            String filePath = nameGenerator.getNextFileName("");
            filePath = filePath + path;
            // Log the new sub directory in edits
            if ((iF % nameGenerator.getFilesPerDirectory()) == 0) {
                String currentDir = nameGenerator.getCurrentDir();
                dirInode = new INodeDirectory(p, 0L);
                editLog.logMkDir(currentDir, dirInode);
            }
            editLog.logOpenFile(filePath, inode);
            editLog.logCloseFile(filePath, inode);
            if (currentBlockId - bidAtSync >= 2000) {
                // sync every 2K blocks
                editLog.logSync();
                bidAtSync = currentBlockId;
            }
        } catch (IOException e) {
            System.out.println("Creating trascation for file " + iF + " encountered exception " + e);
        }
    }
    System.out.println("Created edits log in directory " + edits_dir);
    System.out.println(" containing " + numFiles + " File-Creates, each file with " + blocksPerFile + " blocks");
    System.out.println(" blocks range: " + startingBlockId + " to " + (currentBlockId - 1));
}
