public boolean execute(ComponentContext context) {
    boolean result = false;
    Connection db = null;
    try {
        if (StringUtils.hasText(context.getParameter(PROJECT_ID))) {
            // Load the project for comparing permissions
            Project thisProject = ProjectUtils.loadProject(Integer.parseInt(context.getParameter(PROJECT_ID)));
            context.setAttribute(PROJECT, thisProject);
            // Retrieve the access level of the specified role
            int projectRole = thisProject.getAccessUserLevel(context.getParameter(PROJECT_PERMISSION));
            LookupList roleList = CacheUtils.getLookupList("lookup_project_role");
            int userAccessLevel = roleList.getLevelFromId(projectRole);
            // Load the team members with the specified permission and minimum role
            TeamMemberList teamMemberList = new TeamMemberList();
            teamMemberList.setProjectId(thisProject.getId());
            teamMemberList.setMinimumRoleLevel(userAccessLevel);
            db = getConnection(context);
            teamMemberList.buildList(db);
            Iterator<TeamMember> itr = teamMemberList.iterator();
            if (teamMemberList.size() > 0) {
                StringBuffer userIds = new StringBuffer();
                while (itr.hasNext()) {
                    userIds.append(itr.next().getUserId());
                    if (itr.hasNext()) {
                        userIds.append(",");
                    }
                }
                context.setAttribute(USER_IDS, userIds.toString());
            }
            result = true;
        }
    } catch (Exception e) {
        e.printStackTrace(System.out);
    } finally {
        freeConnection(context, db);
    }
    return result;
}
