public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
    HttpServletRequest httpRequest = (HttpServletRequest) request;
    MenuRepository repository = new MenuRepository();
    MenuRepository defaultRepository = (MenuRepository) config.getServletContext().getAttribute(MenuRepository.MENU_REPOSITORY_KEY);
    if (defaultRepository != null) {
        repository.setDisplayers(defaultRepository.getDisplayers());
    }
    Session session = HibernateUtil.currentSession();
    Criteria criteria = session.createCriteria(MenuItem.class);
    List rows = criteria.list();
    for (int i = 0; i < rows.size(); i++) {
        MenuComponent mc = new MenuComponent();
        MenuItem row = (MenuItem) rows.get(i);
        String name = row.getName();
        mc.setName(name);
        String parent = row.getParentName();
        System.out.println(name + ", parent is: " + parent);
        if (parent != null) {
            MenuComponent parentMenu = repository.getMenu(parent);
            if (parentMenu == null) {
                System.out.println("parentMenu '" + parent + "' doesn't exist!");
                // create a temporary parentMenu
                parentMenu = new MenuComponent();
                parentMenu.setName(parent);
                repository.addMenu(parentMenu);
            }
            mc.setParent(parentMenu);
        }
        HibernateUtil.closeSession(session);
        String title = row.getTitle();
        mc.setTitle(title);
        String location = row.getLocation();
        mc.setLocation(location);
        repository.addMenu(mc);
    }
    // config.getServletContext().setAttribute("repository", repository);
    httpRequest.setAttribute("repository", repository);
    // we're done checking; continue on
    chain.doFilter(request, response);
}
