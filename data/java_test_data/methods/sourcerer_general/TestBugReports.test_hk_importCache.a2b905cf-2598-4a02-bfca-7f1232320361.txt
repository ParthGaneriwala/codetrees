public void test_hk_importCache() {
    final String BASE = "http://protege.stanford.edu/plugins/owl/testdata/";
    OntModelSpec spec = new OntModelSpec(OntModelSpec.OWL_MEM);
    spec.setReasoner(null);
    OntDocumentManager dm = OntDocumentManager.getInstance();
    dm.reset();
    dm.setCacheModels(false);
    dm.addAltEntry("http://protege.stanford.edu/plugins/owl/testdata/Import-normalizerBug.owl", "file:testing/ontology/bugs/test_hk_import/Import-normalizerBug.owl");
    dm.addAltEntry("http://protege.stanford.edu/plugins/owl/testdata/normalizerBug.owl", "file:testing/ontology/bugs/test_hk_import/normalizerBug.owl");
    spec.setDocumentManager(dm);
    OntModel oldOntModel = ModelFactory.createOntologyModel(spec, null);
    oldOntModel.read(BASE + "Import-normalizerBug.owl", FileUtils.langXMLAbbrev);
    Graph oldSubGraph = (Graph) oldOntModel.getSubGraphs().iterator().next();
    final int oldTripleCount = getTripleCount(oldSubGraph);
    OntClass ontClass = oldOntModel.getOntClass(BASE + "normalizerBug.owl#SuperClass");
    oldSubGraph.add(new Triple(ontClass.asNode(), RDF.type.asNode(), OWL.DeprecatedClass.asNode()));
    assertEquals(oldTripleCount + 1, getTripleCount(oldSubGraph));
    // TODO this workaround to be removed
    SimpleGraphMaker sgm = (SimpleGraphMaker) ((ModelMakerImpl) spec.getImportModelMaker()).getGraphMaker();
    List toGo = new ArrayList();
    for (Iterator i = sgm.listGraphs(); i.hasNext(); toGo.add(i.next())) {
    /**/
    }
    for (Iterator i = toGo.iterator(); i.hasNext(); sgm.removeGraph((String) i.next())) {
    /**/
    }
    dm.clearCache();
    OntModel newOntModel = ModelFactory.createOntologyModel(spec, null);
    newOntModel.read(BASE + "Import-normalizerBug.owl", FileUtils.langXMLAbbrev);
    Graph newSubGraph = (Graph) newOntModel.getSubGraphs().iterator().next();
    // OK!
    assertFalse(newOntModel == oldOntModel);
    // FAILS!
    assertFalse(newSubGraph == oldSubGraph);
    final int newTripleCount = getTripleCount(newSubGraph);
    assertEquals(oldTripleCount, newTripleCount);
}
