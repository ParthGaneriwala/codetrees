@Test
@DirtiesContext
public void testAttackWithDestination() throws Exception {
    configureMinimalGame();
    // Target
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    movableService.sendTutorialProgress(TutorialConfig.TYPE.TUTORIAL, "", "", 0, 0);
    Id target = getFirstSynItemId(TEST_START_BUILDER_ITEM_ID);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Attacker
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    movableService.sendTutorialProgress(TutorialConfig.TYPE.TUTORIAL, "", "", 0, 0);
    sendBuildCommand(getFirstSynItemId(TEST_START_BUILDER_ITEM_ID), new Index(500, 100), TEST_FACTORY_ITEM_ID);
    waitForActionServiceDone();
    sendBuildCommand(getFirstSynItemId(TEST_START_BUILDER_ITEM_ID), new Index(500, 100), TEST_FACTORY_ITEM_ID);
    waitForActionServiceDone();
    sendBuildCommand(getFirstSynItemId(TEST_START_BUILDER_ITEM_ID), new Index(500, 100), TEST_FACTORY_ITEM_ID);
    waitForActionServiceDone();
    sendFactoryCommand(getFirstSynItemId(TEST_FACTORY_ITEM_ID), TEST_ATTACK_ITEM_ID);
    waitForActionServiceDone();
    sendAttackCommands(getAllSynItemId(TEST_ATTACK_ITEM_ID), target);
    waitForActionServiceDone();
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
