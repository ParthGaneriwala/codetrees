public ActionForward add(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    ClientUserWeekAbilityForm weekAbilityForm = (ClientUserWeekAbilityForm) form;
    UcMembers user = (UcMembers) request.getSession().getAttribute("CLIENT");
    String id = request.getParameter("id");
    String date = request.getParameter("date");
    SimpleDateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd");
    try {
        if (id != null && id.length() > 0) {
            UserWeekAbility ability = weekAbilityManager.getWeekAbility(Integer.parseInt(id));
            ability.setUserId(user.getUid());
            ability.setDate(dateFormatter.parse(date));
            ability.setArdour(weekAbilityForm.getArdour());
            ability.setPromises(weekAbilityForm.getPromises());
            ability.setResponsibility(weekAbilityForm.getResponsibility());
            ability.setAdmire(weekAbilityForm.getAdmire());
            ability.setContribute(weekAbilityForm.getContribute());
            ability.setBelieve(weekAbilityForm.getBelieve());
            ability.setWinwin(weekAbilityForm.getWinwin());
            ability.setListen(weekAbilityForm.getListen());
            ability.setFocus(weekAbilityForm.getFocus());
            ability.setEcho(weekAbilityForm.getEcho());
            ability.setPraise(weekAbilityForm.getPraise());
            ability.setConvince(weekAbilityForm.getConvince());
            ability.setFeedback(weekAbilityForm.getFeedback());
            ability.setThank(weekAbilityForm.getThank());
            ability.setVisualize(weekAbilityForm.getVisualize());
            ability.setStudy(weekAbilityForm.getStudy());
            ability.setInnovation(weekAbilityForm.getInnovation());
            ability.setLove(weekAbilityForm.getLove());
            ability.setGumption(weekAbilityForm.getGumption());
            ability.setPurpose(weekAbilityForm.getPurpose());
            ability.setIntent(weekAbilityForm.getIntent());
            ability.setProfessional(weekAbilityForm.getProfessional());
            ability.setWillpower(weekAbilityForm.getWillpower());
            weekAbilityManager.updateWeekAbility(ability);
        } else {
            UserWeekAbility ability = new UserWeekAbility();
            ability.setUserId(user.getUid());
            ability.setDate(dateFormatter.parse(date));
            ability.setArdour(weekAbilityForm.getArdour());
            ability.setPromises(weekAbilityForm.getPromises());
            ability.setResponsibility(weekAbilityForm.getResponsibility());
            ability.setAdmire(weekAbilityForm.getAdmire());
            ability.setContribute(weekAbilityForm.getContribute());
            ability.setBelieve(weekAbilityForm.getBelieve());
            ability.setWinwin(weekAbilityForm.getWinwin());
            ability.setListen(weekAbilityForm.getListen());
            ability.setFocus(weekAbilityForm.getFocus());
            ability.setEcho(weekAbilityForm.getEcho());
            ability.setPraise(weekAbilityForm.getPraise());
            ability.setConvince(weekAbilityForm.getConvince());
            ability.setFeedback(weekAbilityForm.getFeedback());
            ability.setThank(weekAbilityForm.getThank());
            ability.setVisualize(weekAbilityForm.getVisualize());
            ability.setStudy(weekAbilityForm.getStudy());
            ability.setInnovation(weekAbilityForm.getInnovation());
            ability.setLove(weekAbilityForm.getLove());
            ability.setGumption(weekAbilityForm.getGumption());
            ability.setPurpose(weekAbilityForm.getPurpose());
            ability.setIntent(weekAbilityForm.getIntent());
            ability.setProfessional(weekAbilityForm.getProfessional());
            ability.setWillpower(weekAbilityForm.getWillpower());
            weekAbilityManager.addWeekAbility(ability);
        }
        request.setAttribute("OK_MESSAGE", "�����ɹ�");
        request.setAttribute("RETURN_URL", "ClientManageUserWeekAbility.do?act=list&date=" + date);
        return mapping.findForward("ok");
    } catch (Exception e) {
        e.printStackTrace();
        return mapping.findForward("fail");
    }
}
