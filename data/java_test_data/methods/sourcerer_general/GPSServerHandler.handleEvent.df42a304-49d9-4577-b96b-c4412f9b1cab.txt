@Override
public boolean handleEvent(Object data) {
    if (!(data instanceof Request))
        return false;
    Request req = (Request) data;
    System.err.println(req.getRequestType());
    // received a position update.  save/update our list
    if (req.getRequestType() == Message.MessageType.GPS_POSITION) {
        GeoPoint pos = (GeoPoint) req.getData(Message.GPS_POSITION);
        pos.setTimestamp(System.currentTimeMillis());
        mPositionList.put(mAuthHandler.getClientUserName((SocketChannel) mChannel), pos);
        return true;
    } else // received a request for our position list.  send it in response.
    if (req.getRequestType() == Message.MessageType.GPS_STUDENT_POLL) {
        Response res = new Response(req, Message.GPS_POSITION_LIST, mPositionList);
        try {
            sendMessage(res);
        } catch (IOException ignore) {
        }
        return true;
    } else // request
    if (req.getRequestType() == Message.MessageType.GPS_WAYPOINT) {
        Response res = new Response(req, Message.GPS_WAYPOINT, req.getData(Message.GPS_WAYPOINT));
        res.setUser(req.getUser());
        sendMessageToMultiple(res, mAuthHandler.getClientMap(), req.getRecipients());
        return true;
    } else // in the request
    if (req.getRequestType() == Message.MessageType.GPS_MEETING_PNT) {
        try {
            Response res = new Response(req, Message.GPS_MEETING_PNT, req.getData(Message.GPS_MEETING_PNT));
            res.setUser(req.getUser());
            ArrayList<String> recipients = req.getRecipients();
            System.err.println(recipients.size());
            if (recipients.size() == 0) {
                GPSEnum type = (GPSEnum) req.getData(Message.GPS_SEND_TYPE);
                System.err.println(req.getData(Message.GPS_SEND_TYPE));
                if (type == GPSEnum.SEND_TO_GROUP) {
                    UserAdmin userAdmin = new UserAdmin();
                    recipients = userAdmin.getGroupMembers(res.getUser().getId());
                } else {
                    recipients.add(mAuthHandler.getTeacherUserName());
                }
            }
            sendMessageToMultiple(res, mAuthHandler.getClientMap(), recipients);
        } catch (DatabaseException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
        return true;
    }
    return false;
}
