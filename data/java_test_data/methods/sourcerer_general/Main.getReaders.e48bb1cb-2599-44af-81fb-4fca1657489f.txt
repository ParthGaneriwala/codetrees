private List<String> getReaders() {
    List<String> names = new ArrayList<String>();
    try {
        List<URL> urls = new ArrayList<URL>();
        // Directory for embedded readers
        urls.add(new URL("file:/"));
        String readersDir = properties.getProperty("ReadersDirectory");
        if (readersDir == null) {
            readersDir = getDefaultReadersDirectory();
            properties.setProperty("ReadersDirectory", readersDir);
            try {
                saveProperties();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        File directory = new File(readersDir);
        if (directory.isDirectory()) {
            File[] files = directory.listFiles();
            for (File file : files) {
                if (file.isFile()) {
                    try {
                        urls.add(file.toURI().toURL());
                        JarFile jarFile = new JarFile(file);
                        Manifest manif = jarFile.getManifest();
                        Map<String, Attributes> map = manif.getEntries();
                        Attributes attr = manif.getMainAttributes();
                        if (attr != null) {
                            String namesAll = attr.getValue("Readers");
                            String[] namesS = namesAll.split(" ");
                            for (String n : namesS) {
                                names.add(n);
                            }
                        }
                    } catch (java.util.zip.ZipException ze) {
                        System.out.println("File isn't looks like jar-file: " + file);
                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                }
            }
        }
        classLoader = new URLClassLoader(urls.toArray(new URL[0]));
        // Embedded readers
        names.add("ru.concretesoft.concretesplitviewer.OCT2007Reader");
        names.add("ru.concretesoft.concretesplitviewer.OSVReader");
        names.add("ru.concretesoft.concretesplitviewer.SFReader");
    } catch (MalformedURLException ex) {
        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
    }
    return names;
}
