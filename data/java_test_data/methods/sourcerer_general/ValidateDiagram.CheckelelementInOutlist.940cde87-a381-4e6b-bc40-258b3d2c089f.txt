private String CheckelelementInOutlist(ArrayList<IChild> list1, ArrayList<IChild> list2) {
    // boolean bResult = false;
    String listofNames = "";
    String bResult = null;
    // unique list of names of the elements in the list1
    String[] arrayOfStrings1 = null;
    String[] arrayOfStrings2 = null;
    int iIndex1 = 0;
    int iIndex2 = 0;
    // if both the lists are non empty
    if (!(list1.isEmpty()) && !(list2.isEmpty())) {
        int iIndex = 0;
        Iterator ListItr1 = list1.iterator();
        int size = list1.size();
        arrayOfStrings1 = new String[size];
        while (ListItr1.hasNext()) {
            if (iIndex >= size)
                break;
            ITagComponent childComponent = (ITagComponent) ListItr1.next();
            String elementName1 = childComponent.getMaterial();
            // Empty Element
            if (childComponent.isInitial()) {
                break;
            }
            int i = 0;
            boolean bflag = false;
            // Check if the element is already present in the array
            while (i < size && null != arrayOfStrings1[i]) {
                if (arrayOfStrings1[i].equals(elementName1)) {
                    bflag = true;
                    break;
                }
                i++;
            }
            // if element name is not present in the array add it
            if (!bflag) {
                arrayOfStrings1[iIndex1] = elementName1;
                iIndex1++;
            }
            iIndex++;
        }
        Iterator ListItr2 = list2.iterator();
        iIndex = 0;
        int size2 = list2.size();
        arrayOfStrings2 = new String[size2];
        while (ListItr2.hasNext()) {
            if (iIndex >= size2)
                break;
            ITagComponent childComponent = (ITagComponent) ListItr2.next();
            String elementName = childComponent.getMaterial();
            // Empty Element
            if (childComponent.isInitial()) {
                break;
            }
            int i = 0;
            boolean bflag = false;
            // Check if the element is already present in the array
            while (i < size && null != arrayOfStrings2[i]) {
                if (arrayOfStrings2[i].equals(elementName)) {
                    bflag = true;
                    break;
                }
                i++;
            }
            // if element name is not present in the array add it
            if (!bflag) {
                arrayOfStrings2[iIndex2] = elementName;
                iIndex2++;
            }
            iIndex++;
        }
    } else {
        return bResult;
    }
    // if number of intems in both the lists are not same return false
    // if(iIndex2 != iIndex1){
    // return bResult;
    // }
    // else{
    boolean bflag = false;
    for (int i = 0; i < iIndex1; i++) {
        bflag = false;
        for (int j = 0; j < iIndex2; j++) {
            if (arrayOfStrings1[i].equals(arrayOfStrings2[j])) {
                bflag = true;
                break;
            }
        }
        if (!bflag) {
            // enter this element in the outname list;
            listofNames += arrayOfStrings1[i];
            listofNames += ",";
        // currently just break
        // break;
        }
    }
    if (!listofNames.isEmpty() || !listofNames.equals(""))
        bResult = listofNames;
    // }
    return bResult;
}
