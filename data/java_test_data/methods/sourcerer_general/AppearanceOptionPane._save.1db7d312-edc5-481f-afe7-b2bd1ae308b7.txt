// }}}
protected void _save() {
    String lf = lfs[lookAndFeel.getSelectedIndex()].getClassName();
    jEdit.setProperty("lookAndFeel", lf);
    jEdit.setFontProperty("metal.primary.font", primaryFont.getFont());
    jEdit.setFontProperty("metal.secondary.font", secondaryFont.getFont());
    jEdit.setProperty("history", history.getText());
    jEdit.setProperty("menu.spillover", menuSpillover.getText());
    jEdit.setBooleanProperty("tip.show", showTips.isSelected());
    jEdit.setBooleanProperty("appearance.continuousLayout", continuousLayout.isSelected());
    IconTheme.set(iconThemes.getSelectedItem().toString());
    /* AntiAlias nv = AntiAlias.appearance();
		 int idx = antiAliasExtras.getSelectedIndex();
		nv.set(idx);
		primaryFont.setAntiAliasEnabled(idx > 0);
		secondaryFont.setAntiAliasEnabled(idx > 0);
		primaryFont.repaint();
		secondaryFont.repaint(); */
    // this is handled a little differently from other jEdit settings
    // as the splash screen flag needs to be known very early in the
    // startup sequence, before the user properties have been loaded
    String settingsDirectory = jEdit.getSettingsDirectory();
    if (settingsDirectory != null) {
        File file = new File(settingsDirectory, "nosplash");
        if (showSplash.isSelected())
            file.delete();
        else {
            FileOutputStream out = null;
            try {
                out = new FileOutputStream(file);
                out.write('\n');
                out.close();
            } catch (IOException io) {
                Log.log(Log.ERROR, this, io);
            } finally {
                IOUtilities.closeQuietly(out);
            }
        }
    }
    jEdit.setBooleanProperty("textColors", textColors.isSelected());
    jEdit.setBooleanProperty("decorate.frames", decorateFrames.isSelected());
    jEdit.setBooleanProperty("decorate.dialogs", decorateDialogs.isSelected());
}
