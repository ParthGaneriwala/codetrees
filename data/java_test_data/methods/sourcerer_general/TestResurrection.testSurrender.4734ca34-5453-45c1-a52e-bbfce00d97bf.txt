@Test
@DirtiesContext
public void testSurrender() throws Exception {
    configureMinimalGame();
    System.out.println("***** testSurrender *****");
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    movableService.sendTutorialProgress(TutorialConfig.TYPE.TUTORIAL, "", "", 0, 0);
    // Connection
    SimpleBase simpleBase = getMyBase();
    movableService.surrenderBase();
    try {
        movableService.getSyncInfo();
        Assert.fail("Disconnection expected");
    } catch (NoConnectionException e) {
    // OK
    }
    endHttpRequestAndOpenSessionInViewFilter();
    beginHttpRequestAndOpenSessionInViewFilter();
    Assert.assertEquals(1, baseService.getBases().size());
    assertWholeItemCount(1);
    // Connection
    SimpleBase newBase = getMyBase();
    Assert.assertFalse(simpleBase.equals(newBase));
    Assert.assertEquals(2, baseService.getBases().size());
    Message message2 = new Message();
    message2.setMessage("You lost your base. A new base was created.");
    assertPackagesIgnoreSyncItemInfoAndClear(message2);
    assertWholeItemCount(2);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
