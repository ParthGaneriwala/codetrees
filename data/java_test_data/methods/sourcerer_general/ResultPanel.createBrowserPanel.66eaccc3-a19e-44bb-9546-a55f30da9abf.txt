private JPanel createBrowserPanel(Image[] imageList) {
    JPanel panel = new JPanel();
    panel.setLayout(new BorderLayout());
    StringBuffer sb = new StringBuffer("Complex Browser( ");
    sb.append(imageList.length);
    sb.append(" in total )");
    panel.setBorder(BorderFactory.createTitledBorder(sb.toString()));
    complexBrowser = new ResultPanel.ClusterBrowserTableModel(imageList);
    table = new JTable(complexBrowser);
    table.addMouseListener(new PopClickListener());
    table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    table.setDefaultRenderer(StringBuffer.class, new ResultPanel.JTextAreaRenderer(defaultRowHeight));
    // gives a little vertical room between complexes
    table.setIntercellSpacing(new Dimension(10, 8));
    // removes an outline that appears when the user clicks on the images
    table.setFocusable(false);
    // Ask to be notified of selection changes.
    ListSelectionModel rowSM = table.getSelectionModel();
    rowSM.addListSelectionListener(new ResultPanel.TableRowSelectionAction());
    JScrollPane tableScrollPane = new JScrollPane(table);
    tableScrollPane.getViewport().setBackground(Color.GRAY);
    // the sortPanel
    JPanel sortPanel = new JPanel();
    sortPanel.setLayout(new FlowLayout());
    // the radio buttons
    boolean set3 = currentParamsCopy.getAlgorithm().equals(ParameterSet.MCODE);
    boolean set2 = (currentParamsCopy.getAlgorithm().equals(ParameterSet.FAGEC) && currentParamsCopy.isWeak());
    boolean set1 = ((!set2) && (!set3));
    JRadioButton way1 = new JRadioButton("Size", set1);
    JRadioButton way2 = new JRadioButton("Modularity", set2);
    JRadioButton way3 = new JRadioButton("Score", set3);
    way1.setActionCommand("size");
    way2.setActionCommand("modu");
    way3.setActionCommand("score");
    way1.addActionListener(new SortWayAction(table, complexBrowser));
    way2.addActionListener(new SortWayAction(table, complexBrowser));
    way3.addActionListener(new SortWayAction(table, complexBrowser));
    ButtonGroup ways = new ButtonGroup();
    ways.add(way1);
    ways.add(way2);
    if (currentParamsCopy.getAlgorithm().equals(ParameterSet.MCODE))
        ways.add(way3);
    // the label
    JLabel label = new JLabel("Sort Complexes by (descend):");
    // add components to the sortPanel
    sortPanel.add(label);
    sortPanel.add(way1);
    sortPanel.add(way2);
    if (currentParamsCopy.getAlgorithm().equals(ParameterSet.MCODE))
        sortPanel.add(way3);
    sortPanel.setToolTipText("Select a way to sort the complexes");
    panel.add(sortPanel, BorderLayout.NORTH);
    panel.add(tableScrollPane, BorderLayout.CENTER);
    panel.setToolTipText("information of the identified complexes");
    return panel;
}
