@Override
public void processInput() throws IOException {
    StringBuilder sb = new StringBuilder();
    long lineNo = 0;
    for (String line = reader.readLine(); line != null; line = reader.readLine()) {
        ++lineNo;
        // System.err.printf("SRI input[%06d]: %s\n", lineNo, line);
        line = line.trim();
        if (line.startsWith(REMOTELM_VERSION2)) {
            protocolVersion = 2;
            sb.append(REMOTELM_OK);
            sb.append('\n');
        // writer.write(REMOTELM_OK);
        // writer.write("\n");
        } else if (protocolVersion == 1 || line.startsWith(REMOTELM_WORDPROB)) {
            long[] ngram = getNgram(line);
            if (ngram != null) {
                double logProb = marginalizer.getNgramProbability(ngram);
                if (protocolVersion == 1) {
                    sb.append(String.format("%f\n", logProb));
                } else {
                    sb.append(String.format("%s %f\n", REMOTELM_OK, logProb));
                }
            } else {
                sb.append(REMOTELM_ERROR);
                sb.append("\n");
            }
        } else if (line.startsWith(REMOTELM_CONTEXTBOW)) {
            sb.append(String.format("%s %f\n", REMOTELM_OK, 0.0f));
        } else if (line.startsWith(REMOTELM_CONTEXTID1)) {
            long[] ngram = getNgram(line);
            int hash = Arrays.hashCode(ngram);
            sb.append(String.format("%s %d %d\n", REMOTELM_OK, hash, ngram.length));
        } else if (line.startsWith(REMOTELM_CONTEXTID2)) {
            long[] ngram = getNgram(line);
            int hash = Arrays.hashCode(Arrays.copyOf(ngram, ngram.length - 1));
            sb.append(String.format("%s %d %d\n", REMOTELM_OK, hash, ngram.length - 1));
        }
        if (sb.length() > 0) {
            String output = sb.toString();
            if (opts.dumpQueries) {
                System.err.printf("input: '%s', output: '%s'\n", line.trim(), output.trim());
            }
            writer.append(output);
            // O(1)
            sb.delete(0, sb.length());
        }
        writer.flush();
    }
}
