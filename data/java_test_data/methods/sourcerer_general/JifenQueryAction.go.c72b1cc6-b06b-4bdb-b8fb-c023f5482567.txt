@Override
protected String go() throws Exception {
    // SysUser lawer = ;
    lawyers = (Lawyers) basicService.get(Lawyers.class, lawyerid);
    // 根据查询的年来查,默认为当前时间所在的积分年
    SysUnionparams params = (SysUnionparams) basicService.get(SysUnionparams.class, lawyers.getDirectunion());
    dabiaofen = params.getDabiaofen();
    jifentime = CommonDatas.getJifenTime(year, params.getNianshen());
    this.year = jifentime.getNianshenyear();
    DetachedCriteria detachedCriteria = null;
    String table = "lawyerlessonxf";
    Lawyers lawyers = (Lawyers) basicService.get(Lawyers.class, lawyerid);
    if (lawyers == null) {
        this.message = "对应的律师信息不存在,请返回";
        return "message";
    }
    if (lawyers.getLawyertype() == -1) {
        detachedCriteria = DetachedCriteria.forClass(LawyerlessonxfShixi.class);
        table = "lawyerlessonxf_shixi";
    }
    if (lawyers.getLawyertype() == -2) {
        detachedCriteria = DetachedCriteria.forClass(LawyerlessonxfGongzheng.class);
        table = "lawyerlessonxf_gongzheng";
    } else
        detachedCriteria = DetachedCriteria.forClass(Lawyerlessonxf.class);
    detachedCriteria.add(Restrictions.eq("lawyerid", lawyerid));
    detachedCriteria.add(Restrictions.eq("theyear", jifentime.getNianshenyear()));
    detachedCriteria.addOrder(Order.desc("lastupdate"));
    this.page = basicService.findPageByCriteria(detachedCriteria, Integer.MAX_VALUE, pageNo);
    String adminsql = "select format(sum(a.pxxf),2),a.learnmode from " + table + " a where a.lawyerid=" + this.lawyerid + " and (a.theyear=" + jifentime.getNianshenyear() + ") group by a.learnmode";
    List tongjilist = basicService.findBySqlQuery(adminsql);
    int tongjilength = tongjilist == null ? 0 : tongjilist.size();
    for (int i = 0; i < tongjilength; i++) {
        Object[] obj = (Object[]) tongjilist.get(i);
        if (obj[1].toString().equals("1")) {
            this.localecnt = Double.parseDouble(obj[0].toString());
        } else if (obj[1].toString().equals("2")) {
            this.video = Double.parseDouble(obj[0].toString());
        } else if (obj[1].toString().equals("3")) {
            this.wenbenkejian = Double.parseDouble(obj[0].toString());
        } else if (obj[1].toString().equals("4")) {
            this.budeng = Double.parseDouble(obj[0].toString());
        }
    }
    // TODO Auto-generated method stub
    if (!resultType.equals("") && resultType.equals("excel"))
        return "excel";
    return SUCCESS;
}
