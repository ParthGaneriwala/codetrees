protected static void openImportMessage(Label label, Button close) {
    shell.getShell().setEnabled(false);
    final Shell importShell = new Shell(SWT.CLOSE);
    Color bgColor = new Color(display, 222, 235, 247);
    importShell.setBackground(bgColor);
    Rectangle monitor_bounds = importShell.getShell().getMonitor().getBounds();
    importShell.setLocation(monitor_bounds.width / 2 - 100, monitor_bounds.height / 2 - 100);
    importShell.setSize(new Point(monitor_bounds.width / 5, 100));
    importShell.setText("Importing...");
    GridLayout layout = new GridLayout(2, false);
    importShell.setLayout(layout);
    label = new Label(importShell, SWT.NONE);
    label.setBackground(bgColor);
    label.setText("Please wait while importing the data...");
    GridData gridData = new GridData();
    gridData.horizontalAlignment = GridData.CENTER;
    gridData.horizontalSpan = 2;
    label.setLayoutData(gridData);
    Button cancel = new Button(importShell, SWT.PUSH);
    cancel.setText("Cancel");
    cancel.setBackground(bgColor);
    // listen to the cancel button
    cancel.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            shell.getShell().setEnabled(true);
            pool.stopRequestIdleWorkers();
            try {
                Thread.sleep(1000);
                pool.stopRequestAllWorkers();
                Thread.sleep(500);
                pool.stopRequestAllWorkers();
            } catch (InterruptedException e1) {
                e1.printStackTrace();
            }
            pool = new ThreadPool(AppData.getInstance().getMaxThreads());
            importShell.close();
        }
    });
    close = new Button(importShell, SWT.PUSH);
    close.setText("Close");
    close.setBackground(bgColor);
    close.setVisible(false);
    // listen to the close button. it will be visible when the import is
    // finished
    close.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            shell.getShell().setEnabled(true);
            importShell.close();
        }
    });
    // listen to the X button
    importShell.addDisposeListener(new DisposeListener() {

        public void widgetDisposed(DisposeEvent e) {
            shell.getShell().setEnabled(true);
        }
    });
    importShell.open();
}
