public void generateReport() {
    List<RowEntry> rowEntrysEntriesAux = new ArrayList<RowEntry>(this.rowEntryEntries);
    List<RowEntry> rowEntryPaymentsAux = new ArrayList<RowEntry>(this.rowEntryPayments);
    arrangeByDateAsc(rowEntrysEntriesAux);
    arrangeByDateAsc(rowEntryPaymentsAux);
    Double balance = 0.0D;
    while (!rowEntryPaymentsAux.isEmpty() || !rowEntrysEntriesAux.isEmpty()) {
        RowEntry rowEntryEntry = null;
        RowEntry rowEntryPayment = null;
        RowEntry newRowEntry = null;
        if (!rowEntrysEntriesAux.isEmpty())
            rowEntryEntry = rowEntrysEntriesAux.get(0);
        if (!rowEntryPaymentsAux.isEmpty())
            rowEntryPayment = rowEntryPaymentsAux.get(0);
        if (rowEntryEntry != null && rowEntryPayment != null)
            if (rowEntryEntry.getDate().compareTo(rowEntryPayment.getDate()) > 0) {
                balance += rowEntryEntry.getEntry();
                newRowEntry = rowEntryEntry;
            } else {
                balance -= rowEntryPayment.getEntry();
                newRowEntry = rowEntryPayment;
            }
        else if (rowEntryEntry != null) {
            balance += rowEntryEntry.getEntry();
            newRowEntry = rowEntryEntry;
        } else {
            balance -= rowEntryPayment.getEntry();
            newRowEntry = rowEntryPayment;
        }
        newRowEntry.setBalance(balance);
        rowEntrys.add(newRowEntry);
    }
}
