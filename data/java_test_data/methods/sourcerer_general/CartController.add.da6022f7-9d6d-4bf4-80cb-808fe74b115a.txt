public void add(HttpServletRequest request, HttpServletResponse response) {
    Gson gson = new GsonBuilder().create();
    List<Message> errors = new ArrayList<Message>();
    Map<String, Object> responseModel = new HashMap<String, Object>();
    String item = request.getParameter("item");
    String quantity = request.getParameter("quantity");
    if (StringUtils.isEmpty(item)) {
        errors.add(newError("item", getString("errors.notEmpty"), new Object[] { "item" }));
    }
    // find item
    ItemDTO itemDTO = getItemDSO().findById(new Integer(item));
    if (item == null)
        errors.add(newError("item", getString("errors.notEmpty"), new Object[] { "item" }));
    // check cart in session
    List<CartDTO> cartEntries = getCart(request);
    // create cart entry
    String cartId = request.getSession().getId();
    Integer iQuantity = new Integer(quantity);
    Double subtotal = itemDTO.getItemPrice() * iQuantity;
    CartDTO cartDTO = new CartDTO(cartId, itemDTO, iQuantity, subtotal);
    cartEntries.add(cartDTO);
    // persist session
    request.getSession().setAttribute("cart", cartEntries);
    // fill response model
    if (errors.isEmpty()) {
        responseModel.put("responseCode", SUCCESS);
        responseModel.put("responseMessage", "Item Added to Cart");
    } else {
        responseModel.put("responseCode", FAILURE);
        responseModel.put("responseMessage", "Error, item was not added");
        responseModel.put("errors", errors);
    }
    // serialize output
    try {
        response.setContentType("application/json");
        OutputStreamWriter os = new OutputStreamWriter(response.getOutputStream());
        String data = gson.toJson(responseModel);
        os.write(data);
        os.flush();
        os.close();
    } catch (IOException e) {
        logger.fatal(e);
    }
}
