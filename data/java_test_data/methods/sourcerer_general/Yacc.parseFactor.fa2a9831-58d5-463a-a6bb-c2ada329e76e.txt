private boolean parseFactor() {
    // �Ƿ�����ı�־λ
    boolean def = false;
    if (lop.getType() == Lex.IDSY) {
        // �Ա�ʶ����ͷ��Ҫ�ѱ�ʶ������register����Ԥ��һ�������ֳ��Ǻ������û��ǵ�����ʶ����
        Output idsy = lop;
        if (!next() || lop.getType() != Lex.Lpar) {
            for (Constant con : curfunc.getConst()) {
                if (con.getName().equals(idsy.getWord())) {
                    register = Integer.toString(con.getValue());
                    def = true;
                    break;
                }
            }
            for (Constant con : this.global_const) {
                if (def)
                    break;
                if (con.getName().equals(idsy.getWord())) {
                    register = Integer.toString(con.getValue());
                    def = true;
                    break;
                }
            }
            for (String para : curfunc.getPara()) {
                if (def)
                    break;
                if (para.equals(idsy.getWord())) {
                    register = idsy.getWord();
                    def = true;
                    break;
                }
            }
            for (String var : curfunc.getVar()) {
                if (def)
                    break;
                if (var.equals(idsy.getWord())) {
                    register = idsy.getWord();
                    def = true;
                    break;
                }
            }
            for (String var : this.global_var) {
                if (def)
                    break;
                if (var.equals(idsy.getWord())) {
                    register = idsy.getWord();
                    def = true;
                    break;
                }
            }
            if (!def) {
                // δ����ı���������
                error = true;
                errorList.add(Error.report(Error.ERR_NOTDEFINE, idsy.getLine(), idsy.getWord()));
                return false;
            }
            return true;
        }
        // �У�һ���Ǻ�������
        register = idsy.getWord();
        for (Function func : funcList) {
            if (func.getName().equals(register) && func.getRetype() == Function.R_VOID) {
                error = true;
                errorList.add(Error.report(Error.ERR_APPEARVOID, idsy.getLine(), idsy.getWord()));
                return false;
            }
        }
        if (!next() || !parseCall()) {
            return false;
        }
        return true;
    }
    if (lop.getType() == Lex.Lpar) {
        // ����һ���ǣ�ʱ���ж��Ƿ��ǣ�Expression����ʽ��
        if (!next() || !parseExpression()) {
            return false;
        }
        if (lop.getType() != Lex.Rpar) {
            error = true;
            errorList.add(Error.report(Error.ERR_ABNORMAL, lop.getLine(), null));
            return false;
        }
        next();
        return true;
    }
    if (lop.getType() == Lex.INTEGER) {
        // ��Ϊ������ֱ�ӷ�������
        register = lop.getWord();
        next();
        return true;
    }
    return false;
}
