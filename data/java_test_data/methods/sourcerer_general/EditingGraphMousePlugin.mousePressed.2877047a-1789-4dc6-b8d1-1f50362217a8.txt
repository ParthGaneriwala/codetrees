@SuppressWarnings("unchecked")
public void mousePressed(MouseEvent e) {
    if (checkModifiers(e)) {
        final VisualizationViewer<V, E> vv = (VisualizationViewer<V, E>) e.getSource();
        final Point2D p = e.getPoint();
        GraphElementAccessor<V, E> pickSupport = vv.getPickSupport();
        if (pickSupport != null) {
            Graph<V, E> graph = vv.getModel().getGraphLayout().getGraph();
            // set default edge type
            if (graph instanceof DirectedGraph) {
                edgeIsDirected = EdgeType.DIRECTED;
            } else {
                edgeIsDirected = EdgeType.UNDIRECTED;
            }
            final V vertex = pickSupport.getVertex(vv.getModel().getGraphLayout(), p.getX(), p.getY());
            if (vertex != null) {
                // get ready to make an edge
                startVertex = vertex;
                down = e.getPoint();
                transformEdgeShape(down, down);
                vv.addPostRenderPaintable(edgePaintable);
                if ((e.getModifiers() & MouseEvent.SHIFT_MASK) != 0 && vv.getModel().getGraphLayout().getGraph() instanceof UndirectedGraph == false) {
                    edgeIsDirected = EdgeType.DIRECTED;
                }
                if (edgeIsDirected == EdgeType.DIRECTED) {
                    transformArrowShape(down, e.getPoint());
                    vv.addPostRenderPaintable(arrowPaintable);
                }
            } else if (!Launcher.getEditorGUI().getPropositionTextField().getText().isEmpty() && e.getClickCount() == 2) {
                // make a new vertex
                V newVertex = vertexFactory.create();
                Layout<V, E> layout = vv.getModel().getGraphLayout();
                graph.addVertex(newVertex);
                layout.setLocation(newVertex, vv.getRenderContext().getMultiLayerTransformer().inverseTransform(e.getPoint()));
                /**
                 * Mise en mémoire dans des vecteurs différents
                 * des vertex créés dans les deux panels
                 * pour pouvoir réutiliser ceux ci au moment
                 * de la sauvergarde de l'arbre C-K
                 */
                if (vv.getName() == "concept") {
                    ((Concept) newVertex).setPosition(e.getPoint());
                    ((Concept) newVertex).setVecteurConceptSave();
                    save = false;
                } else {
                    ((Knowledge) newVertex).setPosition(e.getPoint());
                    ((Knowledge) newVertex).setVecteurKnowledgeSave();
                    save = false;
                }
            }
        }
        vv.repaint();
    }
}
