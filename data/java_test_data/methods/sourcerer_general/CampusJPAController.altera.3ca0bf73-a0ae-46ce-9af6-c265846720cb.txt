public void altera(Campus campus) throws Exception {
    EntityManager em = null;
    try {
        em = getEntityManager();
        em.getTransaction().begin();
        Campus persistentCampus = em.find(Campus.class, campus.getIdCampus());
        Collection<Setor> setorCollectionOld = persistentCampus.getSetorCollection();
        Collection<Setor> setorCollectionNew = campus.getSetorCollection();
        Collection<Setor> attachedSetorCollectionNew = new ArrayList<Setor>();
        for (Setor setorCollectionNewSetorToAttach : setorCollectionNew) {
            setorCollectionNewSetorToAttach = em.getReference(setorCollectionNewSetorToAttach.getClass(), setorCollectionNewSetorToAttach.getIdSetor());
            attachedSetorCollectionNew.add(setorCollectionNewSetorToAttach);
        }
        setorCollectionNew = attachedSetorCollectionNew;
        campus.setSetorCollection(setorCollectionNew);
        campus = em.merge(campus);
        for (Setor setorCollectionOldSetor : setorCollectionOld) {
            if (!setorCollectionNew.contains(setorCollectionOldSetor)) {
                setorCollectionOldSetor.setCampus(null);
                setorCollectionOldSetor = em.merge(setorCollectionOldSetor);
            }
        }
        for (Setor setorCollectionNewSetor : setorCollectionNew) {
            if (!setorCollectionOld.contains(setorCollectionNewSetor)) {
                Campus oldCampusOfSetorCollectionNewSetor = setorCollectionNewSetor.getCampus();
                setorCollectionNewSetor.setCampus(campus);
                setorCollectionNewSetor = em.merge(setorCollectionNewSetor);
                if (oldCampusOfSetorCollectionNewSetor != null && !oldCampusOfSetorCollectionNewSetor.equals(campus)) {
                    oldCampusOfSetorCollectionNewSetor.getSetorCollection().remove(setorCollectionNewSetor);
                    oldCampusOfSetorCollectionNewSetor = em.merge(oldCampusOfSetorCollectionNewSetor);
                }
            }
        }
        em.getTransaction().commit();
    } catch (Exception ex) {
        String msg = ex.getLocalizedMessage();
        if (msg == null || msg.length() == 0) {
            Integer id = campus.getIdCampus();
            if (findCampus(id) == null) {
                throw new Exception("Campus com id " + id + " nï¿½o existe.");
            }
        }
        throw ex;
    } finally {
        if (em != null) {
            em.close();
        }
    }
}
