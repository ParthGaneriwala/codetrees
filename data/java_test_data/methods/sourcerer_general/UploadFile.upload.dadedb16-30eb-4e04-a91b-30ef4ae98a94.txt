public static String upload(FormFile file, HttpServletRequest request, String path, float width, float height) {
    try {
        /*String contentType  = file.getContentType(); 
			String size         = (file.getFileSize() + " bytes");//�ļ���С 
			String fileName     = file.getFileName();//�ļ���*/
        String returnUrl = "";
        String ext = file.getFileName().substring(file.getFileName().lastIndexOf("."));
        // ���ļ��x��
        InputStream stream = file.getInputStream();
        // ȡ��ǰϵͳ·��
        String filePath = request.getRealPath("/") + path;
        if (!new java.io.File(filePath).isDirectory())
            new java.io.File(filePath).mkdirs();
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        OutputStream bos = new FileOutputStream(filePath + "/" + file.getFileName());
        // ����һ���ς��ļ�������������ς��ļ�����web���õĸ�Ŀ䛡�
        int bytesRead = 0;
        byte[] buffer = new byte[8192];
        while ((bytesRead = stream.read(buffer, 0, 8192)) != -1) {
            // ���ļ����������
            bos.write(buffer, 0, bytesRead);
        }
        bos.close();
        stream.close();
        // �x��ղ��ς����ļ�
        java.io.File newFile = new java.io.File(filePath + "/" + file.getFileName());
        returnUrl = path + "/" + (new Date().getTime()) + ext;
        // �µ����ԈD�����ַ
        String newurl = request.getRealPath("/") + returnUrl;
        // ���ɿs�ԈD
        // ����Image����
        Image src = javax.imageio.ImageIO.read(newFile);
        // float tagsize  = 300;
        // �õ�Դ�D��
        int old_w = src.getWidth(null);
        int old_h = src.getHeight(null);
        int new_w = 0;
        // �õ�Դ�D�L
        int new_h = 0;
        float tempdouble;
        if (old_w > old_h) {
            tempdouble = old_w / width;
        } else {
            tempdouble = old_h / height;
        }
        new_w = Math.round(old_w / tempdouble);
        // �����D�L��
        new_h = Math.round(old_h / tempdouble);
        BufferedImage tag = new BufferedImage(new_w, new_h, BufferedImage.TYPE_INT_RGB);
        // ������С��ĈD
        tag.getGraphics().drawImage(src, 0, 0, new_w, new_h, null);
        // ������ļ���
        FileOutputStream newimage = new FileOutputStream(newurl);
        JPEGImageEncoder encoder = JPEGCodec.createJPEGEncoder(newimage);
        // ��JPEG��a
        encoder.encode(tag);
        newimage.close();
        java.io.File deleteFile = new java.io.File(filePath + "/" + file.getFileName());
        deleteFile.delete();
        return returnUrl;
    } catch (IOException e) {
        e.printStackTrace();
        return null;
    }
}
