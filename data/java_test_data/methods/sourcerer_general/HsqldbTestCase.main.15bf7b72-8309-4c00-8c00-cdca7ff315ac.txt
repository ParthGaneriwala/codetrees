public static void main(String[] args) {
    Properties props = new Properties();
    props.put("user", "sa");
    props.put("password", "");
    props.put("hsqldb.default_table_type", "cached");
    // props.put("hsqldb.cache_size_scale", "12");
    props.put("hsqldb.cache_scale", "8");
    // props.put("hsqldb.cache_file_scale", "8");
    props.put("hsqldb.applog", "0");
    props.put("hsqldb.log_size", "200");
    props.put("hsqldb.result_memory_rows", "10");
    props.put("shutdown", "true");
    String url = "jdbc:hsqldb:";
    url += "/hsql/statBase/test";
    // delete earlier files
    HsqldbTestCase.deleteDir(new File("/hsql/statBase/"));
    try {
        Class clsDriver = Class.forName("org.hsqldb.jdbc.JDBCDriver");
        Driver driver = (Driver) clsDriver.newInstance();
        DriverManager.registerDriver(driver);
        Connection con = DriverManager.getConnection(url, props);
        String createQuery = "drop table test1 if exists;create table test1 (rowNum identity, col1 varchar(50), col2 int, col3 varchar(50))";
        Statement st = con.createStatement();
        st.execute(createQuery);
        st.close();
        // we try to insert values in batch
        String insertQuery = "insert into test1 (col1,col2,col3) values (?,?,?)";
        PreparedStatement pst = con.prepareStatement(insertQuery);
        // we insert 1001
        for (int i = 0; i < 1001; i++) {
            pst.setString(1, "string_" + i);
            pst.setInt(2, i);
            pst.setString(3, "string2_" + i);
            pst.addBatch();
            if ((i > 0) && (i % 100 == 0)) {
                pst.executeBatch();
            }
        }
        pst.close();
        // we try to do a select on this statement and to scroll it with the absolute method
        String selectQuery = "select * from test1";
        st = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
        ResultSet scrollableSet = st.executeQuery(selectQuery);
        scrollableSet.setFetchSize(100);
        scrollableSet.next();
        int tmpIndex = scrollableSet.getInt(3);
        if (tmpIndex != 0) {
            System.out.println("index at 0 is !=0");
        }
        // we go from 0 to 1000 with absolute and a gap of 100
        for (int i = 0; i <= 1000; i += 100) {
            scrollableSet.absolute(i + 1);
            tmpIndex = scrollableSet.getInt(3);
            System.out.println(tmpIndex);
        }
        // we go from 1000 to 0 with absolute and a gap of 100
        for (int i = 1000; i > 0; i -= 100) {
            scrollableSet.relative(-100);
            tmpIndex = scrollableSet.getInt(3);
            System.out.println(tmpIndex);
        }
    } catch (Exception ex) {
        ex.printStackTrace(System.out);
    }
}
