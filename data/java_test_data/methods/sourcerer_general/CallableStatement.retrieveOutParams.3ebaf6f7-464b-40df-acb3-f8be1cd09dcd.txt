private void retrieveOutParams() throws SQLException {
    int numParameters = this.paramInfo.numberOfParameters();
    this.parameterIndexToRsIndex = new int[numParameters];
    for (int i = 0; i < numParameters; i++) {
        this.parameterIndexToRsIndex[i] = NOT_OUTPUT_PARAMETER_INDICATOR;
    }
    int localParamIndex = 0;
    if (numParameters > 0) {
        // $NON-NLS-1$
        StringBuffer outParameterQuery = new StringBuffer("SELECT ");
        boolean firstParam = true;
        boolean hadOutputParams = false;
        for (Iterator paramIter = this.paramInfo.iterator(); paramIter.hasNext(); ) {
            CallableStatementParam retrParamInfo = (CallableStatementParam) paramIter.next();
            if (retrParamInfo.isOut) {
                hadOutputParams = true;
                this.parameterIndexToRsIndex[retrParamInfo.index] = localParamIndex++;
                if ((retrParamInfo.paramName == null) && (hasParametersView())) {
                    retrParamInfo.paramName = "nullnp" + retrParamInfo.index;
                }
                String outParameterName = mangleParameterName(retrParamInfo.paramName);
                if (!firstParam) {
                    // $NON-NLS-1$
                    outParameterQuery.append(",");
                } else {
                    firstParam = false;
                }
                if (!outParameterName.startsWith("@")) {
                    // $NON-NLS-1$
                    outParameterQuery.append('@');
                }
                outParameterQuery.append(outParameterName);
            }
        }
        if (hadOutputParams) {
            // We can't use 'ourself' to execute this query, or any
            // pending result sets would be overwritten
            java.sql.Statement outParameterStmt = null;
            java.sql.ResultSet outParamRs = null;
            try {
                outParameterStmt = this.connection.createStatement();
                outParamRs = outParameterStmt.executeQuery(outParameterQuery.toString());
                this.outputParameterResults = ((com.mysql.jdbc.ResultSetInternalMethods) outParamRs).copy();
                if (!this.outputParameterResults.next()) {
                    this.outputParameterResults.close();
                    this.outputParameterResults = null;
                }
            } finally {
                if (outParameterStmt != null) {
                    outParameterStmt.close();
                }
            }
        } else {
            this.outputParameterResults = null;
        }
    } else {
        this.outputParameterResults = null;
    }
}
