public static void main(String[] args) {
    try {
        // Load the ontology from disk
        OWLOntologyManager manager = OWLManager.createOWLOntologyManager();
        URI physicalURI = URI.create("file:/home/pik/Bioinformatics/OPL/sample_for_opl.owl");
        OWLOntology ontology = manager.loadOntologyFromPhysicalURI(physicalURI);
        // Print all the classes
        for (OWLClass cls : ontology.getReferencedClasses()) {
            System.out.println(cls);
        }
        // Load the reasoner
        OWLReasoner reasoner = ReasonerFactory.createReasoner(manager);
        String ontologyURI = ontology.getURI().toString();
        OWLDataFactory factory = manager.getOWLDataFactory();
        OWLObjectProperty produces = factory.getOWLObjectProperty(URI.create(ontologyURI + "#produces"));
        OWLClass chorizo = factory.getOWLClass(URI.create(ontologyURI + "#chorizo"));
        OWLDescription producesSomeChorizo = factory.getOWLObjectSomeRestriction(produces, chorizo);
        Set<Set<OWLClass>> subClsSets = reasoner.getSubClasses(producesSomeChorizo);
        Set<OWLClass> subClses = OWLReasonerAdapter.flattenSetOfSets(subClsSets);
        for (OWLClass cls : subClses) {
            System.out.println(">>>>>>>>" + cls);
        }
        // Remove classes
        OWLEntityRemover remover = new OWLEntityRemover(manager, Collections.singleton(ontology));
        for (OWLClass cls : ontology.getReferencedClasses()) {
            cls.accept(remover);
        }
        manager.applyChanges(remover.getChanges());
        remover.reset();
        System.out.println("Number of classes: " + ontology.getReferencedClasses().size());
    } catch (OWLOntologyCreationException e) {
        e.printStackTrace();
    } catch (OWLReasonerException e) {
        e.printStackTrace();
    } catch (OWLOntologyChangeException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }
}
