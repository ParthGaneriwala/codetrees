public void saveToDB(String type, String sender, String receiver, Message data, boolean isGroupChat) {
    if (sender == null || sender.trim().length() == 0) {
        Log.info("invalid sender");
        return;
    }
    Calendar date = Calendar.getInstance();
    Connection conn = mySQLPool.getConnection();
    String dataValue = JSONValue.toJSONString(data);
    try {
        if (CHAT_TRACK.equals(type)) {
            String sql = "insert into chat_history(receiver_id, sender_id, send_time, chat_content, group_chat) values(?,?,?,?,?);";
            PreparedStatement psm = conn.prepareStatement(sql);
            psm.setString(1, receiver);
            psm.setString(2, sender);
            psm.setTimestamp(3, new Timestamp(date.getTimeInMillis()));
            psm.setString(4, dataValue);
            psm.setBoolean(5, isGroupChat);
            psm.executeUpdate();
        }
        if (RECEIVE_UNREAD_MSG.equals(type)) {
            String unreadSql = "insert into chat_unread(receiver_id, sender_id, send_time, chat_content, group_chat) values(?,?,?,?,?);";
            PreparedStatement unreadPsm = conn.prepareStatement(unreadSql);
            unreadPsm.setString(1, receiver);
            unreadPsm.setString(2, sender);
            unreadPsm.setTimestamp(3, new Timestamp(date.getTimeInMillis()));
            unreadPsm.setString(4, dataValue);
            unreadPsm.setBoolean(5, isGroupChat);
            unreadPsm.executeUpdate();
        }
    } catch (SQLException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    } finally {
        if (conn != null) {
            try {
                conn.close();
            } catch (SQLException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
    }
}
