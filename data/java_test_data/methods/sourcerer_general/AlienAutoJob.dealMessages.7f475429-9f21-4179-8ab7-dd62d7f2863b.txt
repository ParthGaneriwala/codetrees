public void dealMessages(Message message) {
    log.debug("job started");
    ReaderManager rm = new ReaderManager();
    if (message != null && message.getTagCount() > 0) {
        Tag[] tags = message.getTagList();
        String filter = si.getFilter();
        for (int i = 0; i < tags.length; i++) {
            String temp = tags[i].getTagID();
            if (filter != null && filter.length() > 0) {
                if (filter.indexOf(",") >= 0) {
                    if (!StaticFactory.isValid(filter, temp)) {
                        log.debug(LOGGER + "TAG [" + temp + "] is rejected. " + StaticFactory.getFormatTime(StaticFactory.TIME_FULL));
                        if (si.getReaderID().equals("test"))
                            rm.addSysmsg(LOGGER + "TAG [" + temp + "] is rejected. " + StaticFactory.getFormatTime(StaticFactory.TIME_FULL));
                        else
                            rm.addDatamsg(LOGGER + "TAG [" + temp + "] is rejected. " + StaticFactory.getFormatTime(StaticFactory.TIME_FULL));
                        continue;
                    }
                } else {
                    try {
                        FilterInterface fi = (FilterInterface) Class.forName(filter).newInstance();
                        if (!fi.isValid(temp, 0, temp.length())) {
                            log.debug(LOGGER + "TAG [" + temp + "] is rejected. " + StaticFactory.getFormatTime(StaticFactory.TIME_FULL));
                            if (si.getReaderID().equals("test"))
                                rm.addSysmsg(LOGGER + "TAG [" + temp + "] is rejected. " + StaticFactory.getFormatTime(StaticFactory.TIME_FULL));
                            else
                                rm.addDatamsg(LOGGER + "TAG [" + temp + "] is rejected. " + StaticFactory.getFormatTime(StaticFactory.TIME_FULL));
                            continue;
                        }
                    } catch (Exception ex) {
                        log.debug(LOGGER + "Can not create filter engine:" + ex.getMessage());
                        if (si.getReaderID().equals("test"))
                            rm.addSysmsg(LOGGER + "Can not create filter engine:" + ex.getMessage());
                        else
                            rm.addDatamsg(LOGGER + "Can not create filter engine:" + ex.getMessage());
                    }
                }
            }
            log.debug(LOGGER + "TAG[" + tags[i].getTagID() + "] " + StaticFactory.getFormatTime(StaticFactory.TIME_FULL));
            if (si.getReaderID().equals("test"))
                rm.addSysmsg(LOGGER + "TAG[" + tags[i].getTagID() + "] " + StaticFactory.getFormatTime(StaticFactory.TIME_FULL));
            else
                rm.addDatamsg(LOGGER + "TAG[" + tags[i].getTagID() + "] " + StaticFactory.getFormatTime(StaticFactory.TIME_FULL));
            if (si.getChainName() != null && si.getChainName().length() > 0) {
                log.debug("push chain message");
                rm.addChainMessage("", (si.getReaderID() != null && si.getReaderID().length() > 0) ? si.getReaderID() : message.getReaderName(), tags[i].getTagID(), "", si.getUserDataType(), si.getChainName());
            }
        }
    }
}
