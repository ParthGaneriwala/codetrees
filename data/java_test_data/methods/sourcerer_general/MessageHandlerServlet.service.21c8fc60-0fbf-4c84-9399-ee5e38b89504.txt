@SuppressWarnings("unchecked")
@Override
public void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    int contentLength = request.getContentLength();
    String inputMessage = null;
    String outputMessage = null;
    try {
        // get input message
        InputStream inputStream = request.getInputStream();
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        BufferedOutputStream bufferedOutputStream = new BufferedOutputStream(byteArrayOutputStream);
        byte[] buffer = new byte[bufferSize];
        int readSize = 0;
        int totalReadSize = 0;
        while ((readSize = inputStream.read(buffer)) != -1 && (totalReadSize < contentLength)) {
            bufferedOutputStream.write(buffer, 0, readSize);
            bufferedOutputStream.flush();
            totalReadSize += readSize;
            if (log.isDebugEnabled()) {
                StringBuilder sb = new StringBuilder();
                sb.append("read size: ").append(readSize);
                sb.append(", ");
                sb.append("total read size: ").append(totalReadSize);
                log.debug(sb.toString());
            }
        }
        // message
        inputMessage = new String(byteArrayOutputStream.toByteArray(), charsetName);
        // get bean
        String serviceName = MessageUtil.getServiceName(inputMessage);
        MessageHandlerService stringHandlerService = (MessageHandlerService) webApplicationContext.getBean(serviceName);
        // invoke
        Class serviceClass = stringHandlerService.getClass();
        Class[] paramTypes = new Class[] { String.class };
        Method serviceMethod = serviceClass.getMethod(DEFAULT_METHOD, paramTypes);
        Object[] paramList = new String[] { inputMessage };
        outputMessage = (String) serviceMethod.invoke(stringHandlerService, paramList);
    } catch (Exception e) {
        e.printStackTrace();
        outputMessage = this.makeExceptionalOutputMessage(e);
    } finally {
        // response
        response.setContentType(contentType);
        response.setCharacterEncoding(charsetName);
        response.getWriter().write(outputMessage);
        // log
        if (log.isDebugEnabled()) {
            StringBuilder sb = new StringBuilder();
            sb.append("content length: ").append(contentLength);
            sb.append(", ");
            sb.append("input message: [").append(inputMessage).append("]");
            sb.append(", ");
            sb.append("input message length: ").append(inputMessage.getBytes().length);
            sb.append(", ");
            sb.append("output message: [").append(outputMessage).append("]");
            sb.append(", ");
            sb.append("output message length: ").append(outputMessage.getBytes().length);
            log.debug(sb.toString());
        }
    }
}
