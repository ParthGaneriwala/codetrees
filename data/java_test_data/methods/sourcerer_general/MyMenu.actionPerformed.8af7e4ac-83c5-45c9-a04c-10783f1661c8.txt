@Override
public void actionPerformed(ActionEvent e) {
    // TODO Auto-generated method stub
    if (e.getSource() == this.mylogin) {
        LoginPane.getInstance();
    } else if (e.getSource() == this.myregist) {
        RegisterPane.getInstance();
    } else if (e.getSource() == this.myexit) {
        MainFrame.getInstance().user = MainFrame.getInstance().alluser.all.get(0);
    // ContactManager.getManager()
    } else if (e.getSource() == this.myopen) {
        jfc = new JFileChooser();
        // FileNameExtensionFilter filter = new FileNameExtensionFilter("֧�ֵ��ļ�:txt,csv","txt","csv");
        // jfc.setFileFilter(filter);
        int n = jfc.showOpenDialog(MainFrame.getInstance());
        if (n == JFileChooser.APPROVE_OPTION) {
            // System.out.print(jfc.getSelectedFile().getPath());
            ContactManager cm = DataManager.dataManager.readFile(jfc.getSelectedFile().getPath());
            ContactManager.getManager().mergeContactManager(cm);
            MainFrame.getInstance().update();
        }
    } else if (e.getSource() == this.myimport) {
        jfc = new JFileChooser();
        // FileNameExtensionFilter filter = new FileNameExtensionFilter("֧�ֵ��ļ�:txt,csv,xls","txt","csv","xls");
        // jfc.setFileFilter(filter);
        int n = jfc.showOpenDialog(MainFrame.getInstance());
        if (n == JFileChooser.APPROVE_OPTION) {
            System.out.print(jfc.getSelectedFile().getPath());
            // DataManager.dataManager.readFile(jfc.getSelectedFile().getPath());
            ContactManager cm = DataManager.dataManager.readFile(jfc.getSelectedFile().getPath());
            ContactManager.getManager().mergeContactManager(cm);
            MainFrame.getInstance().update();
        }
    } else if (e.getSource() == this.myexport) {
        jfc = new JFileChooser();
        // FileNameExtensionFilter filter = new FileNameExtensionFilter("֧�ֵ��ļ�:txt,csv,xls","txt","csv","xls");
        // jfc.setFileFilter(filter);
        int n = jfc.showSaveDialog(MainFrame.getInstance());
        if (n == JFileChooser.APPROVE_OPTION) {
            // System.out.print(jfc.getSelectedFile().getPath());
            DataManager.dataManager.writeFile(ContactManager.getManager(), jfc.getSelectedFile().getPath());
        }
    } else if (e.getSource() == this.dbcontact) {
        DBCotactPane.getInstance();
    } else if (e.getSource() == this.dbexport) {
        DBCotactPane.dbc.exportContacts(ContactManager.getManager());
    } else if (e.getSource() == this.dbimport) {
        try {
            ContactManager cm = DBCotactPane.dbc.importContacts();
            ContactManager.getManager().mergeContactManager(cm);
        } catch (Exception e1) {
            // TODO Auto-generated catch block
            e1.printStackTrace();
        }
    } else if (e.getSource() == this.newcon) {
        try {
            ContactManager.getManager().addNewContact("�½���ϵ��", "0", "0", "name@gmail.com", "0");
        } catch (NoNameException e1) {
            // TODO Auto-generated catch block
            e1.printStackTrace();
        } catch (NoInfoException e1) {
            // TODO Auto-generated catch block
            e1.printStackTrace();
        } catch (InfoFormatException e1) {
            // TODO Auto-generated catch block
            e1.printStackTrace();
        }
    // ContactChooser.getInstance().right.rightList.setSelectedIndex(arg0);
    } else if (e.getSource() == this.delcon) {
        int index = ContactChooser.getInstance().right.rightList.getSelectedIndex();
        if (index >= 0)
            ContactManager.getManager().deleteContact(ContactChooser.getInstance().right.cm.getContacts().get(index));
    } else if (e.getSource() == this.myserchbyname) {
        String name = JOptionPane.showInputDialog(MainFrame.getInstance(), "����", "����������", JOptionPane.PLAIN_MESSAGE);
        if (name == null)
            ;
        else
            ContactChooser.getInstance().right.update(ContactManager.getManager().findByName(name));
    } else if (e.getSource() == this.myserchbytel) {
        String name = JOptionPane.showInputDialog(MainFrame.getInstance(), "�ֻ���", "�������ֻ���", JOptionPane.PLAIN_MESSAGE);
        if (name == null)
            ;
        else
            ContactChooser.getInstance().right.update(ContactManager.getManager().findByPhoneNumber(name));
    } else if (e.getSource() == this.myserchbyfix) {
        String name = JOptionPane.showInputDialog(MainFrame.getInstance(), "�̶��绰", "������̶��绰", JOptionPane.PLAIN_MESSAGE);
        if (name == null)
            ;
        else
            ContactChooser.getInstance().right.update(ContactManager.getManager().findByFixedTel(name));
    } else if (e.getSource() == this.myserchbyqq) {
        String name = JOptionPane.showInputDialog(MainFrame.getInstance(), "QQ��", "������QQ��", JOptionPane.PLAIN_MESSAGE);
        if (name == null)
            ;
        else
            ContactChooser.getInstance().right.update(ContactManager.getManager().findByQQ(name));
    } else if (e.getSource() == this.myserchbyemail) {
        String name = JOptionPane.showInputDialog(MainFrame.getInstance(), "�����ʼ�", "����������ʼ�", JOptionPane.PLAIN_MESSAGE);
        if (name == null)
            ;
        else
            ContactChooser.getInstance().right.update(ContactManager.getManager().findByEmail(name));
    } else if (e.getSource() == this.myserchbybirth) {
        BirthSearchPane.getInstance();
    } else if (e.getSource() == this.myhelpitem) {
        String msg = "    PhoneMe - ͨѶ���Ϲ���\n    ������� coollemon С���Ա����\n" + "        - ��· CS61\n        - ��¶ CS61\n" + "        - ���� CS61\n        - ��� CS61\n" + "                                      2009��5��30��";
        String title = "About - PhoneMe";
        JOptionPane.showMessageDialog(MainFrame.getInstance(), msg, title, JOptionPane.PLAIN_MESSAGE);
    }
    MainFrame.getInstance().update();
}
