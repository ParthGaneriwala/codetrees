final Table SYSTEM_CONNECTION_PROPERTIES(Session session) {
    Table t = sysTables[SYSTEM_CONNECTION_PROPERTIES];
    if (t == null) {
        t = createBlankTable(sysTableHsqlNames[SYSTEM_CONNECTION_PROPERTIES]);
        addColumn(t, "NAME", SQL_IDENTIFIER);
        addColumn(t, "MAX_LEN", Type.SQL_INTEGER);
        // not null
        addColumn(t, "DEFAULT_VALUE", SQL_IDENTIFIER);
        // not null
        addColumn(t, "DESCRIPTION", SQL_IDENTIFIER);
        HsqlName name = HsqlNameManager.newInfoSchemaObjectName(sysTableHsqlNames[SYSTEM_PRIMARYKEYS].name, false, SchemaObject.INDEX);
        t.createPrimaryKeyConstraint(name, new int[] { 0 }, true);
        return t;
    }
    PersistentStore store = session.sessionData.getRowStore(t);
    Object[] row;
    // column number mappings
    final int iname = 0;
    final int imax_len = 1;
    final int idefault_value = 2;
    final int idescription = 3;
    Iterator it = HsqlDatabaseProperties.getPropertiesMetaIterator();
    while (it.hasNext()) {
        Object[] meta = (Object[]) it.next();
        int propType = ((Integer) meta[HsqlProperties.indexType]).intValue();
        if (propType == HsqlDatabaseProperties.FILE_PROPERTY) {
            if (HsqlDatabaseProperties.hsqldb_readonly.equals(meta[HsqlProperties.indexName]) || HsqlDatabaseProperties.hsqldb_files_readonly.equals(meta[HsqlProperties.indexName])) {
            } else {
                continue;
            }
        } else if (propType != HsqlDatabaseProperties.SQL_PROPERTY) {
            continue;
        }
        row = t.getEmptyRowData();
        Object def = meta[HsqlProperties.indexDefaultValue];
        row[iname] = meta[HsqlProperties.indexName];
        row[imax_len] = ValuePool.getInt(8);
        row[idefault_value] = def == null ? null : def.toString();
        row[idescription] = "see HyperSQL guide";
        t.insertSys(store, row);
    }
    return t;
}
