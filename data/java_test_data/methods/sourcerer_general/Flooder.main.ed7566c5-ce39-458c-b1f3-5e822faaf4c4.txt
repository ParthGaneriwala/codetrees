public static void main(String[] args) {
    String user = new String("Flooder");
    int numMessages = 10000;
    int numBytes = 1000;
    String address = null;
    int port = 0;
    boolean readOnly = false;
    boolean writeOnly = false;
    for (int i = 0; i < args.length; i++) {
        // ////////////////
        if ((args[i].compareTo("-u") == 0) && (args.length > (i + 1))) {
            // Set user.
            // //////////
            i++;
            user = args[i];
        } else // ///////////////////////
        if ((args[i].compareTo("-m") == 0) && (args.length > (i + 1))) {
            // Set numMessages.
            // /////////////////
            i++;
            numMessages = Integer.parseInt(args[i]);
        } else // ////////////////////
        if ((args[i].compareTo("-b") == 0) && (args.length > (i + 1))) {
            // Set numBytes.
            // //////////////
            i++;
            numBytes = Integer.parseInt(args[i]);
        } else // ///////////////////
        if ((args[i].compareTo("-s") == 0) && (args.length > (i + 1))) {
            // Set address.
            // /////////////
            i++;
            address = args[i];
        } else // ////////////////
        if ((args[i].compareTo("-p") == 0) && (args.length > (i + 1))) {
            // Set port.
            // //////////
            i++;
            port = Integer.parseInt(args[i]);
        } else // ////////////////////
        if (args[i].compareTo("-ro") == 0) {
            // Set readOnly.
            // //////////////
            readOnly = true;
            writeOnly = false;
        } else // /////////////////////
        if (args[i].compareTo("-wo") == 0) {
            // Set writeOnly.
            // ///////////////
            writeOnly = true;
            readOnly = false;
        } else {
            System.out.print("Usage: flooder\n" + "\t[-u <user name>]     : unique user name\n" + "\t[-m <num messages>]  : number of messages\n" + "\t[-b <num bytes>]     : number of bytes per message\n" + "\t[-s <address>]       : the name or IP for the daemon\n" + "\t[-p <port>]          : the port for the daemon\n" + "\t[-ro]                : read  only (no multicast)\n" + "\t[-wo]                : write only (no receive)\n");
            System.exit(0);
        }
    }
    Flooder f = new Flooder(user, numMessages, numBytes, address, port, readOnly, writeOnly);
}
