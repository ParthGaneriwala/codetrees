public void layout(IFigure container) {
    Rectangle r = container.getClientArea();
    int x = r.x;
    int y = r.y;
    int indent = getIndent();
    long lastEventTStamp = 0;
    ArrayList<TraceEvent> subsumedEvents = new ArrayList<TraceEvent>();
    for (TraceEvent t : getState().getEventsWithSubsumption(subsumedEvents)) {
        IFigure f = eventFigures.get(t);
        Dimension d = f.getPreferredSize();
        long tStamp = t.getTStamp();
        int gap = getGapHeight(tStamp - lastEventTStamp);
        lastEventTStamp = tStamp;
        y += gap;
        if (t.getEnd() == t) {
            x -= indent;
        }
        f.setBounds(new Rectangle(x, y, d.width, d.height));
        if (t.getEnd() == t) {
            // place the interval figure now that we've laid out
            // the start and end
            TraceEvent start = t.getStart();
            IFigure ifig = intervalFigures.get(start);
            if (ifig != null) {
                IFigure startFig = eventFigures.get(start);
                Rectangle startBounds = startFig.getBounds();
                int ifigY = startBounds.y + startBounds.height;
                ifig.setBounds(new Rectangle(x, ifigY, indent, y - ifigY));
            }
        }
        if (t.getStart() == t) {
            x += indent;
        }
        y += d.height;
    }
    Rectangle invisible = new Rectangle(r.x, r.y, 0, 0);
    for (TraceEvent t : subsumedEvents) {
        IFigure f = eventFigures.get(t);
        f.setBounds(invisible);
        if (t.getStart() == t) {
            IFigure ifig = intervalFigures.get(t);
            if (ifig != null) {
                ifig.setBounds(invisible);
            }
        }
    }
}
