public void updatePosition() {
    // if not visible_ then everything is 0
    if (!visible_) {
        CCQuad3 newVertices = new CCQuad3(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        vertexCoords_ = newVertices;
    } else // rotation ? -> update: rotation, scale, position
    if (getRotation() != 0) {
        float x1 = -getTransformAnchorX() * getScaleX();
        float y1 = -getTransformAnchorY() * getScaleY();
        float x2 = x1 + rect_.size.width * getScaleX();
        float y2 = y1 + rect_.size.height * getScaleY();
        float x = getPositionX();
        float y = getPositionY();
        float r = -CCMacros.CC_DEGREES_TO_RADIANS(getRotation());
        float cr = (float) Math.cos(r);
        float sr = (float) Math.sin(r);
        float ax = x1 * cr - y1 * sr + x;
        float ay = x1 * sr + y1 * cr + y;
        float bx = x2 * cr - y1 * sr + x;
        float by = x2 * sr + y1 * cr + y;
        float cx = x2 * cr - y2 * sr + x;
        float cy = x2 * sr + y2 * cr + y;
        float dx = x1 * cr - y2 * sr + x;
        float dy = x1 * sr + y2 * cr + y;
        CCQuad3 newVertices = new CCQuad3((int) ax, (int) ay, 0, (int) bx, (int) by, 0, (int) dx, (int) dy, 0, (int) cx, (int) cy, 0);
        vertexCoords_ = newVertices;
    } else // scale ? -> update: scale, position
    if (getScaleX() != 1 || getScaleY() != 1) {
        float x = getPositionX();
        float y = getPositionY();
        float x1 = (x - getTransformAnchorX() * getScaleX());
        float y1 = (y - getTransformAnchorY() * getScaleY());
        float x2 = (x1 + rect_.size.width * getScaleX());
        float y2 = (y1 + rect_.size.height * getScaleY());
        CCQuad3 newVertices = new CCQuad3((int) x1, (int) y1, 0, (int) x2, (int) y1, 0, (int) x1, (int) y2, 0, (int) x2, (int) y2, 0);
        vertexCoords_ = newVertices;
    } else // update position
    {
        float x = getPositionX();
        float y = getPositionY();
        float x1 = (x - getTransformAnchorX());
        float y1 = (y - getTransformAnchorY());
        float x2 = (x1 + rect_.size.width);
        float y2 = (y1 + rect_.size.height);
        CCQuad3 newVertices = new CCQuad3((int) x1, (int) y1, 0, (int) x2, (int) y1, 0, (int) x1, (int) y2, 0, (int) x2, (int) y2, 0);
        vertexCoords_ = newVertices;
    }
    textureAtlas_.updateQuad(texCoords_, vertexCoords_, atlasIndex_);
    dirty_ = false;
}
