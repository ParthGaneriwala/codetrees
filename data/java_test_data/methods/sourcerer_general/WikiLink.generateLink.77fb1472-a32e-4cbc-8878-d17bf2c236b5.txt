public static String generateLink(Object object) {
    StringBuffer link = new StringBuffer("[[|");
    if (object instanceof Project) {
        Project project = (Project) object;
        link.append(project.getId());
        link.append(":profile||");
        link.append(project.getTitle());
    } else if (object instanceof ProjectFormBean) {
        ProjectFormBean projectBean = (ProjectFormBean) object;
        link.append(projectBean.getProjectId());
        link.append(":profile||");
        link.append(projectBean.getProjectTitle());
    } else if (object instanceof TaskCategory) {
        TaskCategory taskCategory = (TaskCategory) object;
        if (taskCategory.getLinkModuleId() == Constants.TASK_CATEGORY_PROJECTS) {
            link.append(taskCategory.getLinkItemId());
            link.append(":list|");
            link.append(taskCategory.getId());
            link.append("|");
            link.append(taskCategory.getDescription());
        }
    } else if (object instanceof BlogPost) {
        BlogPost blog = (BlogPost) object;
        link.append(blog.getProjectId());
        link.append(":post|");
        link.append(blog.getId());
        link.append("|");
        link.append(blog.getSubject());
    } else if (object instanceof Meeting) {
        Meeting meeting = (Meeting) object;
        link.append(meeting.getProjectId());
        link.append(":event|");
        link.append(meeting.getId());
        link.append("|");
        link.append(meeting.getTitle());
    } else if (object instanceof Wiki) {
        Wiki wiki = (Wiki) object;
        link.append(wiki.getProjectId());
        link.append(":wiki|");
        link.append(wiki.getSubject());
        link.append("|");
        link.append(wiki.getSubject());
    } else if (object instanceof Forum) {
        Forum forum = (Forum) object;
        link.append(forum.getProjectId());
        link.append(":forum|");
        link.append(forum.getId());
        link.append("|");
        link.append(forum.getSubject());
    } else if (object instanceof Topic) {
        Topic topic = (Topic) object;
        link.append(topic.getProjectId());
        link.append(":topic|");
        link.append(topic.getId());
        link.append("|");
        link.append(topic.getSubject());
    } else if (object instanceof Ad) {
        Ad ad = (Ad) object;
        link.append(ad.getProjectId());
        link.append(":promotion|");
        link.append(ad.getId());
        link.append("|");
        link.append(ad.getHeading());
    } else if (object instanceof Classified) {
        Classified classified = (Classified) object;
        link.append(classified.getProjectId());
        link.append(":classified-ad|");
        link.append(classified.getId());
        link.append("|");
        link.append(classified.getTitle());
    } else if (object instanceof FileItem) {
        FileItem file = (FileItem) object;
        if (file.getLinkModuleId() == Constants.PROJECTS_FILES) {
            link.append(file.getLinkItemId());
            link.append(":file|");
            link.append(file.getId());
            link.append("|");
            link.append(file.getSubject());
        }
    } else if (object instanceof FileFolder) {
        FileFolder folder = (FileFolder) object;
        if (folder.getLinkModuleId() == Constants.PROJECTS_FILES) {
            link.append(folder.getLinkItemId());
            link.append(":folder|");
            link.append(folder.getId());
            link.append("|");
            link.append(folder.getSubject());
        }
    } else if (object instanceof ProjectBadge) {
        ProjectBadge badge = (ProjectBadge) object;
        link.append(badge.getProjectId());
        link.append(":badge|");
        link.append(badge.getBadgeId());
        link.append("|");
        link.append(badge.getBadge().getTitle());
    } else if (object instanceof ProjectRating) {
        ProjectRating rating = (ProjectRating) object;
        link.append(rating.getProjectId());
        link.append(":review|");
        link.append(rating.getId());
        link.append("|");
        link.append(rating.getTitle());
    }
    link.append("]]");
    if (object instanceof Meeting) {
        Meeting meeting = (Meeting) object;
        if (meeting.getIsWebcast()) {
            link.append(" ([[|");
            link.append(meeting.getProjectId());
            link.append(":webcasts|");
            link.append("|");
            link.append("Webcast");
            link.append("]])");
        }
    }
    return link.toString().trim();
}
