public static String[][] readCSV(String fullPathFilename, int numToRead) throws IOException {
    BufferedReader reader = new BufferedReader(new FileReader(fullPathFilename));
    String line;
    StringTokenizer st;
    int size = 0;
    int index = 0;
    // skip the first position.
    int pos = 1;
    String[][] data;
    String[][] temp;
    final int DEFAULT_SIZE = 250;
    final String DELIMITER = ",";
    int maxRecords;
    // read the first line to get the size of the array
    line = reader.readLine();
    st = new StringTokenizer(line, DELIMITER);
    while (st.hasMoreElements()) {
        st.nextElement();
        size++;
    }
    // otherwise stop as requested.
    if (numToRead == 0) {
        numToRead = DEFAULT_SIZE;
        maxRecords = Integer.MAX_VALUE;
    } else {
        maxRecords = numToRead;
    }
    data = new String[numToRead][size];
    // do it again to add to the array
    st = new StringTokenizer(line, DELIMITER);
    while (st.hasMoreElements()) {
        data[0][index] = st.nextElement().toString();
        index++;
    }
    index = 0;
    // now do a bunch..
    while ((line = reader.readLine()) != null && pos < maxRecords) {
        st = new StringTokenizer(line, DELIMITER);
        while (st.hasMoreElements()) {
            if (index == data[0].length)
                break;
            data[pos][index] = st.nextElement().toString();
            index++;
        }
        index = 0;
        pos++;
        if (pos == data.length - 1) {
            // size array if needed.
            temp = new String[data.length + numToRead][size];
            for (int n = 0; n < data.length; n++) {
                System.arraycopy(data[n], 0, temp[n], 0, temp[n].length);
            }
            data = temp;
        }
    }
    // size the array correctly.. it may be too large.
    // the size read
    temp = new String[pos][size];
    for (int n = 0; n < temp.length; n++) {
        System.arraycopy(data[n], 0, temp[n], 0, temp[n].length);
    }
    reader.close();
    return temp;
}
