public void testParseRelativePath() {
    visitor.assertRelativePath("", "_");
    visitor.assertRelativePath("a", "_a");
    visitor.assertRelativePath(".", ".");
    visitor.assertRelativePathFailure("[");
    visitor.assertRelativePathFailure("]");
    visitor.assertRelativePathFailure("|");
    visitor.assertRelativePath("a/", "_a");
    visitor.assertRelativePath("..", "..");
    visitor.assertRelativePath(".a", "_.a");
    visitor.assertRelativePath("a.", "_a.");
    visitor.assertRelativePath("ab", "_ab");
    visitor.assertRelativePath("./", ".");
    visitor.assertRelativePath(".:", "_.:");
    visitor.assertRelativePath(":a", "_:a");
    visitor.assertRelativePath("a:", "_a:");
    visitor.assertRelativePathFailure("//");
    visitor.assertRelativePathFailure("/:");
    visitor.assertRelativePathFailure("/[");
    visitor.assertRelativePathFailure("/]");
    visitor.assertRelativePathFailure("/*");
    visitor.assertRelativePathFailure("/'");
    visitor.assertRelativePathFailure("/'");
    visitor.assertRelativePathFailure("/\"");
    visitor.assertRelativePathFailure("/|");
    visitor.assertRelativePathFailure(".[");
    visitor.assertRelativePathFailure(".]");
    visitor.assertRelativePathFailure(".*");
    visitor.assertRelativePathFailure(".|");
    visitor.assertRelativePath("a/b", "_a", "_b");
    visitor.assertRelativePath("./b", ".", "_b");
    visitor.assertRelativePath("a/.", "_a", ".");
    visitor.assertRelativePath("./.", ".", ".");
    visitor.assertRelativePath("../", "..");
    visitor.assertRelativePath("../.", "..", ".");
    visitor.assertRelativePath("./..", ".", "..");
    visitor.assertRelativePath("../a", "..", "_a");
    visitor.assertRelativePath("a/..", "_a", "..");
    visitor.assertRelativePath("a[0]", "_a[0]");
    visitor.assertRelativePath("../..", "..", "..");
}
