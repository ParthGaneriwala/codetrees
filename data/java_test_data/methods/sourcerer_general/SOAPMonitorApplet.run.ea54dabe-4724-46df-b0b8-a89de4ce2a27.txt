public void run() {
    Long id;
    Integer message_type;
    String target;
    String soap;
    SOAPMonitorData data;
    int selected;
    int row;
    boolean update_needed;
    while (socket != null) {
        try {
            // Get the data from the server
            message_type = (Integer) in.readObject();
            // Process the data depending on its type
            switch(message_type.intValue()) {
                case SOAPMonitorConstants.SOAP_MONITOR_REQUEST:
                    // Get the id, target and soap info
                    id = (Long) in.readObject();
                    target = (String) in.readObject();
                    soap = (String) in.readObject();
                    // Add new request data to the table
                    data = new SOAPMonitorData(id, target, soap);
                    model.addData(data);
                    // If "most recent" selected then update
                    // the details area if needed
                    selected = table.getSelectedRow();
                    if ((selected == 0) && model.filterMatch(data)) {
                        valueChanged(null);
                    }
                    break;
                case SOAPMonitorConstants.SOAP_MONITOR_RESPONSE:
                    // Get the id and soap info
                    id = (Long) in.readObject();
                    soap = (String) in.readObject();
                    data = model.findData(id);
                    if (data != null) {
                        update_needed = false;
                        // Get the selected row
                        selected = table.getSelectedRow();
                        // update details area
                        if (selected == 0) {
                            update_needed = true;
                        }
                        // If the data being updated is
                        // selected then update details
                        row = model.findRow(data);
                        if ((row != -1) && (row == selected)) {
                            update_needed = true;
                        }
                        // Set the response and update table
                        data.setSOAPResponse(soap);
                        model.updateData(data);
                        // Refresh details area (if needed)
                        if (update_needed) {
                            valueChanged(null);
                        }
                    }
                    break;
            }
        } catch (Exception e) {
            // server communication has been terminated.
            if (stop_button.isEnabled()) {
                stop();
                setErrorStatus(STATUS_CLOSED);
            }
        }
    }
}
