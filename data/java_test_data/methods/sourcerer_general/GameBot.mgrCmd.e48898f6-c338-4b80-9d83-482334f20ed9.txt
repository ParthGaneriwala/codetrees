public boolean mgrCmd(String m, StringTokenizer ST, boolean c, boolean mgr) {
    String cmd = ST.nextToken();
    int t = ST.countTokens();
    B b = null, b2 = null;
    String p = null, p2 = null;
    switch(t) {
        case 0:
            if (mgr && cmd.equals("OFF")) {
                croak("Bye!");
            } else if (mgr && cmd.equals("REBOOT")) {
                reboot("Rebooting...");
            } else if (mgr && cmd.equalsIgnoreCase("CLEAR")) {
                for (B bb : boards) {
                    closeBoard(bb);
                }
                // boards.clear();
                boards.removeAllElements();
                Serv.tch("Boards cleared.");
            } else
                return false;
            break;
        case 1:
            p = ST.nextToken();
            int i = MiscUtil.strToInt(p);
            if (c)
                b = getCreator(m);
            else
                b = getPlayer(p);
            Player z = null;
            if (b != null)
                z = b.getPlayer(p);
            if (b != null && i >= 0 && cmd.equalsIgnoreCase("TIMEOUT")) {
                if (i > 0)
                    b.TIMEOUT = i;
                b.spam("Turn time: " + i + " seconds.");
            } else if (mgr && cmd.equalsIgnoreCase("MANAGER")) {
                manager = p;
                Serv.tch("New manager: " + manager);
            } else if (cmd.equalsIgnoreCase("EJECT")) {
                if (b == null) {
                    Serv.say(m, "No such player.");
                } else if (c && z == null) {
                    Serv.say(m, p + "'s not at your board.");
                } else if (b.isPlaying() && !m.equals(manager)) {
                    Serv.say(m, "You can't eject from a board that has already started.");
                } else {
                    b.spam(m + " is ejecting " + p + "...");
                    b.leaveBoard(p);
                    Serv.say(m, "Ejected " + p + ".");
                }
            } else if (cmd.equalsIgnoreCase("BORG")) {
                if (b == null) {
                    Serv.say(m, "No such player.");
                } else if (c && z == null) {
                    Serv.say(m, p + "'s not at your board.");
                } else {
                    b.spam(m + " is automating " + p + "...");
                    z.automate(true);
                    Serv.say(m, "Automated " + p + ".");
                }
            } else
                return false;
            break;
        case 2:
            p = ST.nextToken();
            b = getPlayer(p);
            p2 = ST.nextToken();
            b2 = getPlayer(p2);
            if (cmd.equalsIgnoreCase("REPLACE")) {
                if (b != null && b2 == null) {
                    if (c && !b.creator.equalsIgnoreCase(m)) {
                        Serv.say(m, "Wrong board.");
                    } else {
                        ((Player) b.getPlayer(p)).name = p2;
                        b.spam(m + " replaces " + p + " with " + p2);
                        Serv.say(m, "Replaced " + p + " with " + p2);
                    }
                } else
                    Serv.say(m, "Augh, you goofed up.");
            } else
                return false;
            break;
        default:
            return false;
    }
    return true;
}
