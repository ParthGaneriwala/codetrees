public void altera(LicitacaoOrigem licitacaoorigem) throws Exception {
    EntityManager em = null;
    try {
        em = getEntityManager();
        em.getTransaction().begin();
        LicitacaoOrigem persistentLicitacaoorigem = em.find(LicitacaoOrigem.class, licitacaoorigem.getIdlicitacaoOrigem());
        Collection<Contrato> contratoCollectionOld = persistentLicitacaoorigem.getContratoCollection();
        Collection<Contrato> contratoCollectionNew = licitacaoorigem.getContratoCollection();
        Collection<Contrato> attachedContratoCollectionNew = new ArrayList<Contrato>();
        for (Contrato contratoCollectionNewContratoToAttach : contratoCollectionNew) {
            contratoCollectionNewContratoToAttach = em.getReference(contratoCollectionNewContratoToAttach.getClass(), contratoCollectionNewContratoToAttach.getIdcontrato());
            attachedContratoCollectionNew.add(contratoCollectionNewContratoToAttach);
        }
        contratoCollectionNew = attachedContratoCollectionNew;
        licitacaoorigem.setContratoCollection(contratoCollectionNew);
        licitacaoorigem = em.merge(licitacaoorigem);
        for (Contrato contratoCollectionOldContrato : contratoCollectionOld) {
            if (!contratoCollectionNew.contains(contratoCollectionOldContrato)) {
                contratoCollectionOldContrato.setLicitacaoOrigem(null);
                contratoCollectionOldContrato = em.merge(contratoCollectionOldContrato);
            }
        }
        for (Contrato contratoCollectionNewContrato : contratoCollectionNew) {
            if (!contratoCollectionOld.contains(contratoCollectionNewContrato)) {
                LicitacaoOrigem oldLicitacaoOrigemOfContratoCollectionNewContrato = contratoCollectionNewContrato.getLicitacaoOrigem();
                contratoCollectionNewContrato.setLicitacaoOrigem(licitacaoorigem);
                contratoCollectionNewContrato = em.merge(contratoCollectionNewContrato);
                if (oldLicitacaoOrigemOfContratoCollectionNewContrato != null && !oldLicitacaoOrigemOfContratoCollectionNewContrato.equals(licitacaoorigem)) {
                    oldLicitacaoOrigemOfContratoCollectionNewContrato.getContratoCollection().remove(contratoCollectionNewContrato);
                    oldLicitacaoOrigemOfContratoCollectionNewContrato = em.merge(oldLicitacaoOrigemOfContratoCollectionNewContrato);
                }
            }
        }
        em.getTransaction().commit();
    } catch (Exception ex) {
        String msg = ex.getLocalizedMessage();
        if (msg == null || msg.length() == 0) {
            Integer id = licitacaoorigem.getIdlicitacaoOrigem();
            if (findLicitacaoorigem(id) == null) {
                throw new Exception("The licitacaoorigem with id " + id + " no longer exists.");
            }
        }
        throw ex;
    } finally {
        if (em != null) {
            em.close();
        }
    }
}
