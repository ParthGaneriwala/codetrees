public static Table QueryB(String isLikePattern, int inMemorySize) throws IOException, RecordException, CloneNotSupportedException {
    statistics();
    Table table = new Customer();
    Table oTable = null;
    Table tmpT;
    StringBuffer qp = new StringBuffer();
    double sum = 0;
    long t1 = System.nanoTime();
    float acctbal_avg = SQL.avg(table, table.getIndex(Customer.FIELD_C_ACCTBAL), inMemorySize);
    long t2 = System.nanoTime();
    oTable = new Custom("", new File("./"), new String[0], new int[0], new int[0], new boolean[0]);
    oTable.setExecutionTime((t2 - t1) / Utils.NANO);
    qp.append(getQPEntry(table, null, oTable, "Average", new String[] { Customer.FIELD_C_ACCTBAL }));
    sum += oTable.getExecutionTime();
    File tmp1 = new File(Utils.FILEPATH_WORKDIR + "where.txt");
    File tmp2 = new File(Utils.FILEPATH_OUTPUT + "queryB.txt");
    oTable = SQL.whereLike(table, tmp1, table.getIndex(Customer.FIELD_C_PHONE), isLikePattern, inMemorySize);
    qp.append(getQPEntry(table, null, oTable, "Where Like", new String[] { Customer.FIELD_C_PHONE }));
    sum += oTable.getExecutionTime();
    tmpT = oTable;
    oTable = SQL.whereGreater(oTable, tmp2, oTable.getIndex(Customer.FIELD_C_ACCTBAL), acctbal_avg, inMemorySize);
    qp.append(getQPEntry(tmpT, null, oTable, "Where Greater", new String[] { Customer.FIELD_C_ACCTBAL }));
    sum += oTable.getExecutionTime();
    qp.append("Total: " + sum);
    copyAndAppend(oTable, new File(Utils.FILEPATH_OUTPUT + "b.out"), qp.toString(), inMemorySize);
    ProjectGUI.getInstance().update("Memory Execution: QueryB done", 0);
    System.out.println("Done B");
    return oTable;
}
