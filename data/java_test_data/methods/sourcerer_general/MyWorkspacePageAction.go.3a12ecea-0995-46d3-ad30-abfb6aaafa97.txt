@Override
protected String go() throws Exception {
    com.changpeng.lessons.util.CommonDatas.getAlllessons();
    com.changpeng.common.CommonDatas.getGroups();
    LawyerlessonxfService xfservice = (LawyerlessonxfService) this.getBean("lawyerlessonxfService");
    this.lawyers = (Lawyers) basicService.get(Lawyers.class, this.getLoginUser().getLawyerid());
    // 根据查询的年来查,默认为当前时间所在的积分年
    SysUnionparams params = (SysUnionparams) basicService.get(SysUnionparams.class, lawyers.getDirectunion());
    needfen = params.getDabiaofen();
    jifentime = CommonDatas.getJifenTime(0, params.getNianshen());
    debug("起始时间:::" + jifentime.getStartstr() + ",终止时间::::" + jifentime.getEndstr());
    DetachedCriteria detachedCriteria = null;
    // nowxuefen = xfservice.getLawyerZongjifen(this.lawyers.getLawyerid(), jifentime.getStart(), jifentime.getEnd());
    nowxuefen = xfservice.getLawyerZongjifen(this.lawyers.getLawyerid(), jifentime.getNianshenyear());
    // detachedCriteria =
    // DetachedCriteria.forClass(Lawyerlessonxf.class).add(
    // Restrictions.eq("lawyerid", lawyers.getLawyerid())).add(
    // Restrictions.between("lastupdate", jifentime.getStart(),
    // jifentime.getEnd()));
    // List jflist = basicService.findAllByCriteria(detachedCriteria);
    // int length = jflist == null ? 0 : jflist.size();
    // for (int i = 0; i < length; i++) {
    // Lawyerlessonxf xf = (Lawyerlessonxf) jflist.get(i);
    // nowxuefen += xf.getPxxf();
    // }
    // detachedCriteria = DetachedCriteria.forClass(Forum.class).add(Restrictions.eq("ismain", true)).add(Restrictions.eq("provinceid",lawyers.getProvinceunion()));
    detachedCriteria = DetachedCriteria.forClass(Forum.class).add(Restrictions.eq("ismain", true)).add(Restrictions.eq("cityid", lawyers.getCityid()));
    detachedCriteria.addOrder(Order.desc("lastupdate"));
    PaginationSupport page = basicService.findPageByCriteria(detachedCriteria, 6, 1);
    this.forumList = page.getItems();
    // 1是通知2是帮助
    detachedCriteria = DetachedCriteria.forClass(Articles.class).add(Restrictions.eq("type", 2));
    detachedCriteria.addOrder(Order.asc("listorder"));
    page = basicService.findPageByCriteria(detachedCriteria, 10, 1);
    this.helpList = page.getItems();
    // 获取重要通知,我的事务所发布的或者我的市律协发布的或者我的省律协发布的,也包括系统发布滴
    detachedCriteria = DetachedCriteria.forClass(Articles.class).add(Restrictions.eq("status", 0)).add(Restrictions.eq("type", 1)).add(Restrictions.eq("toshouye", true));
    Criterion province = Restrictions.in("thegroup", new Integer[] { this.getLoginUser().getProvinceunion(), this.getLoginUser().getDirectunion(), this.getLoginUser().getTheoffice(), 0 });
    Criterion c = Restrictions.eq("provinceid", 0);
    detachedCriteria.add(Restrictions.or(c, province));
    detachedCriteria.addOrder(Order.desc("createtime"));
    List list = basicService.findAllByCriteria(detachedCriteria);
    if (list != null && list.size() != 0) {
        this.tongzhi = (Articles) list.get(0);
    }
    // 我的所属市律协
    SysGroup group = (SysGroup) basicService.get(SysGroup.class, this.getLoginUser().getDirectunion());
    // LessonsService lessonsService = (LessonsService) this.getBean("lessonsService");
    // PaginationSupport __page = lessonsService.getPages(group, -1, 0, 0, null, null, 6, 1,null,null);
    // 这里的课程显示为本省的或者本市的，不分享的
    detachedCriteria = DetachedCriteria.forClass(Lessons.class).add(Restrictions.eq("deleteflag", false));
    detachedCriteria.add(Restrictions.in("groupid", new Object[] { this.getLoginUser().getProvinceunion(), this.getLoginUser().getDirectunion() }));
    detachedCriteria.addOrder(Order.desc("lessondate"));
    PaginationSupport __page = basicService.findPageByCriteria(detachedCriteria, 6, 1);
    this.lessonList = __page.getItems();
    // 好评课程，这里也只要显示共享给我的，也就是共享到市律协和省律协的
    String sql = "select count(a.lessonid) as count,a.lessonid from Lessonscore a where a.score>=2 and exists(select lessonid from lessonshared b where a.lessonid=b.lessonid and b.groupid in(" + group.getGroupid() + "," + group.getParentid() + "))group by a.lessonid order by count desc limit 10";
    this.goodlessonList = basicService.findBySqlQuery(sql);
    // this.goodlessonList = page.getItems();
    return SUCCESS;
}
