public String printCartXML(EcomCustomerRemote ecomCustomerBean, String contextCurrency, PrintStream out) {
    Element cart = new Element("cart");
    org.jdom.Document document = new Document(cart);
    Element cartSate = new Element("state");
    cartSate.setText(String.valueOf(ecomCustomerBean.getCartState()));
    cart.addContent(cartSate);
    DecimalFormat myFormatter = new DecimalFormat("##0.00");
    for (CartLine line : ecomCustomerBean.getProductsInCart()) {
        ProductBean p = line.getStock().getProduct();
        ProductStoreBean s = line.getStock().getStore();
        Element product = ProductCommandImpl.buildXMLProductNode(p);
        Element store = StoreCommandImpl.buildXMLStoreNode(s, false, ecomCustomerBean, contextCurrency);
        product.addContent(store);
        cart.addContent(product);
        Element quantity = new Element("quantity");
        quantity.setText(String.valueOf(line.getOrderedQuantity()));
        product.addContent(quantity);
        Element price = new Element("price");
        price.setText(myFormatter.format(ecomCustomerBean.convertFromEuro(line.getStock().getProductPrice(), contextCurrency)));
        Attribute currency = new Attribute("currency", contextCurrency);
        price.setAttribute(currency);
        product.addContent(price);
    }
    Element totalAmount = new Element("total");
    totalAmount.setText(myFormatter.format(ecomCustomerBean.convertFromEuro(ecomCustomerBean.getCartTotalPrice(), contextCurrency)));
    Attribute currency = new Attribute("currency", contextCurrency);
    totalAmount.setAttribute(currency);
    cart.addContent(totalAmount);
    XMLOutputter sortie = new XMLOutputter(Format.getPrettyFormat());
    return sortie.outputString(document);
}
