public String toString(PortalURL portalURL) {
    // servletPath: /context/show/project/module
    LOG.debug("servletPath: " + portalURL.getServletPath());
    // renderPath: /context.SomePortlet!T3
    LOG.debug("renderPath: " + portalURL.getRenderPath());
    // Decode the current url
    StringBuffer buffer = new StringBuffer();
    // Detect if pointing to a new url based on passed parameters
    String action = null;
    String object = null;
    String value = null;
    String params = null;
    for (Object paramObject : portalURL.getParameters()) {
        PortalURLParameter param = (PortalURLParameter) paramObject;
        if ("portlet-action".equals(param.getName())) {
            action = param.getValues()[0];
        } else if ("portlet-object".equals(param.getName())) {
            object = param.getValues()[0];
        } else if ("portlet-value".equals(param.getName())) {
            value = param.getValues()[0];
        } else if ("portlet-params".equals(param.getName())) {
            params = param.getValues()[0];
        }
    }
    if (action != null || object != null || value != null || params != null) {
        // Strip off the context for determining the components of the url
        String url = portalURL.getServletPath();
        if (portalURL.getRenderPath() != null) {
            String ctx = portalURL.getRenderPath().substring(0, portalURL.getRenderPath().indexOf("."));
            if (ctx.length() > 1) {
                url = url.substring(ctx.length());
                buffer.append(ctx);
            }
        }
        LOG.debug("Base url: " + url);
        // Split apart the url items
        String[] currentURL = url.split("/");
        int level = 0;
        if (url.startsWith("/")) {
            level = 1;
        }
        // Add the action
        if (action != null) {
            buffer.append("/").append(action);
        } else {
            buffer.append("/").append(currentURL[level]);
        }
        // Add the project uniqueId
        buffer.append("/");
        buffer.append(currentURL[level + 1]);
        // Add the object
        if (object != null) {
            buffer.append("/").append(object);
        } else {
            if (currentURL.length > level + 2) {
                buffer.append("/").append(currentURL[level + 2]);
            }
        }
        // Add the value
        if (value != null) {
            buffer.append("/").append(value);
        }
        // Add the params
        if (params != null) {
            buffer.append("/").append(params);
        }
    } else {
        // Use the current path
        if (!portalURL.getServletPath().startsWith("/")) {
            buffer.append("/");
        }
        buffer.append(portalURL.getServletPath());
    }
    // Append action and render parameters
    for (Iterator it = portalURL.getParameters().iterator(); it.hasNext(); ) {
        PortalURLParameter param = (PortalURLParameter) it.next();
        if ("portlet-action".equals(param.getName())) {
            continue;
        } else if ("portlet-object".equals(param.getName())) {
            continue;
        } else if ("portlet-value".equals(param.getName())) {
            continue;
        } else if ("portlet-params".equals(param.getName())) {
            continue;
        } else if ("out".equals(param.getName())) {
            if (StringUtils.hasText(param.getValues()[0])) {
                appendParameter(buffer, param.getName() + "=" + param.getValues()[0]);
            }
            continue;
        } else if ("popup".equals(param.getName())) {
            if (StringUtils.hasText(param.getValues()[0])) {
                appendParameter(buffer, param.getName() + "=" + param.getValues()[0]);
            }
            continue;
        }
        // Encode action params in the query appended at the end of the URL.
        if (portalURL.getActionWindow() != null && portalURL.getActionWindow().equals(param.getWindowId())) {
            for (int i = 0; i < param.getValues().length; i++) {
                if (StringUtils.hasText(param.getValues()[i])) {
                    appendParameter(buffer, param.getName() + "=" + param.getValues()[i]);
                }
            }
        } else if (param.getValues() != null && param.getValues().length > 0) {
            // Encode the parameter ONLY if it targets the currently being rendered portlet
            if (param.getWindowId().equals(portalURL.getRenderPath())) {
                // The Project Portal uses clean URLs, so portlet window targeting is not used
                if (!buffer.toString().contains("?" + param.getName() + "=") && !buffer.toString().contains("&" + param.getName() + "=")) {
                    String valueString = encodeMultiValues(param.getValues());
                    // @note TEST TEST TEST
                    // appendParameter(buffer, param.getName() + "=" + valueString);
                    appendParameter(buffer, param.getName() + "=" + StringUtils.encodeUrl(valueString));
                } else {
                // If param already exists, replace the value
                }
            }
        }
    }
    // Append the action window definition, if it exists
    if (portalURL.getActionWindow() != null) {
        appendParameter(buffer, "portletAction=" + PREFIX + ACTION + encodeCharacters(portalURL.getActionWindow()));
    }
    // Append portlet mode definitions
    for (Iterator it = portalURL.getPortletModes().entrySet().iterator(); it.hasNext(); ) {
        Map.Entry entry = (Map.Entry) it.next();
        // If the portlet mode is "view" then no need to show the portlet mode in the url because that is the default
        if (!"view".equals(entry.getValue().toString())) {
            appendParameter(buffer, "portletMode=" + encodeControlParameter(PORTLET_MODE, entry.getKey().toString(), entry.getValue().toString()));
        }
    }
    // Append window state definitions
    int windowStateCount = 0;
    for (Iterator it = portalURL.getWindowStates().entrySet().iterator(); it.hasNext(); ) {
        ++windowStateCount;
        Map.Entry entry = (Map.Entry) it.next();
        // If the portlet window state is "normal" then no need to show it in the url because that is the default
        if (!"normal".equals(entry.getValue().toString())) {
            appendParameter(buffer, "portletWindowState" + windowStateCount + "=" + encodeControlParameter(WINDOW_STATE, entry.getKey().toString(), entry.getValue().toString()));
        }
    }
    // Construct the string representing the portal URL.
    return buffer.toString();
}
