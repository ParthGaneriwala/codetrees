private void initComponents() {
    final Calendar cal = Calendar.getInstance();
    currentYear = cal.get(java.util.Calendar.YEAR);
    currentMonth = cal.get(Calendar.MONTH) + 1;
    currentDay = cal.get(Calendar.DAY_OF_MONTH);
    currentHour = cal.get(Calendar.HOUR_OF_DAY);
    currentMinute = cal.get(Calendar.MINUTE);
    btnConnect = (Button) findViewById(R.id.btnConnect);
    btnConnect.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            newOrderCount = 0;
            processedOrderCount = 0;
            int startMonthVal = startMonthSpinner.getSelectedItemPosition() + 1;
            int startDayVal = startDaySpinner.getSelectedItemPosition() + 1;
            int startYearVal = currentYear - startYearSpinner.getSelectedItemPosition();
            int endMonthVal = endMonthSpinner.getSelectedItemPosition() + 1;
            int endDayVal = endDaySpinner.getSelectedItemPosition() + 1;
            int endYearVal = currentYear - endYearSpinner.getSelectedItemPosition();
            startMonth = Integer.toString(startMonthVal);
            startDay = Integer.toString(startDayVal);
            startYear = Integer.toString(startYearVal);
            endMonth = Integer.toString(endMonthVal);
            endDay = Integer.toString(endDayVal);
            endYear = Integer.toString(endYearVal);
            if (currentMonth == endMonthVal && currentDay == endDayVal && currentYear == endYearVal) {
                String endHour = "";
                if (currentMinute < 6) {
                    currentMinute = currentMinute + 60;
                    currentHour = currentHour - 1;
                    if (currentHour < 0) {
                        currentHour = 0;
                    }
                }
                if (currentHour < 10) {
                    endHour = "0" + Integer.toString(currentHour);
                } else {
                    endHour = Integer.toString(currentHour);
                }
                endTime = endHour + ":" + Integer.toString(currentMinute - 6) + ":" + "00";
            } else {
                endTime = "23:59:59";
            }
            orderStateText = orderStateSpinner.getSelectedItem().toString();
            if (transactionFeeSpinner.getSelectedItemPosition() == 1) {
                androidTransactionsFees = false;
            }
            connectToServer();
        }
    });
    startMonthSpinner = (Spinner) findViewById(R.id.start_month);
    startDaySpinner = (Spinner) findViewById(R.id.start_day);
    startYearSpinner = (Spinner) findViewById(R.id.start_year);
    endMonthSpinner = (Spinner) findViewById(R.id.end_month);
    endDaySpinner = (Spinner) findViewById(R.id.end_day);
    endYearSpinner = (Spinner) findViewById(R.id.end_year);
    monthSpinnerArrayAdapter = ArrayAdapter.createFromResource(this, R.array.months, android.R.layout.simple_spinner_item);
    monthSpinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    daySpinnerArrayAdapter = new ArrayAdapter<CharSequence>(this, android.R.layout.simple_spinner_item);
    daySpinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    for (int i = 1; i < 32; i++) {
        daySpinnerArrayAdapter.add(Integer.toString(i));
    }
    yearSpinnerArrayAdapter = new ArrayAdapter<CharSequence>(this, android.R.layout.simple_spinner_item);
    yearSpinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    for (int i = currentYear; i > currentYear - 30; i--) {
        yearSpinnerArrayAdapter.add(Integer.toString(i));
    }
    startMonthSpinner.setAdapter(monthSpinnerArrayAdapter);
    startDaySpinner.setAdapter(daySpinnerArrayAdapter);
    startYearSpinner.setAdapter(yearSpinnerArrayAdapter);
    endMonthSpinner.setAdapter(monthSpinnerArrayAdapter);
    endDaySpinner.setAdapter(daySpinnerArrayAdapter);
    endYearSpinner.setAdapter(yearSpinnerArrayAdapter);
    startMonthSpinner.setSelection(currentMonth - 1);
    startDaySpinner.setSelection(currentDay - 1);
    endMonthSpinner.setSelection(currentMonth - 1);
    endDaySpinner.setSelection(currentDay - 1);
    orderStateSpinner = (Spinner) findViewById(R.id.order_state);
    transactionFeeSpinner = (Spinner) findViewById(R.id.transaction_fee);
    orderStateSpinnerArrayAdapter = ArrayAdapter.createFromResource(this, R.array.order_states, R.layout.my_spinner_style);
    orderStateSpinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    transactionFeeSpinnerArrayAdapter = ArrayAdapter.createFromResource(this, R.array.transaction_fees, R.layout.my_spinner_style);
    transactionFeeSpinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    orderStateSpinner.setAdapter(orderStateSpinnerArrayAdapter);
    transactionFeeSpinner.setAdapter(transactionFeeSpinnerArrayAdapter);
}
