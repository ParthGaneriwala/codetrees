public void report() throws IOException {
    if (fs instanceof DistributedFileSystem) {
        DistributedFileSystem dfs = (DistributedFileSystem) fs;
        DiskStatus ds = dfs.getDiskStatus();
        long capacity = ds.getCapacity();
        long used = ds.getDfsUsed();
        long remaining = ds.getRemaining();
        long presentCapacity = used + remaining;
        boolean mode = dfs.setSafeMode(FSConstants.SafeModeAction.SAFEMODE_GET);
        UpgradeStatusReport status = dfs.distributedUpgradeProgress(UpgradeAction.GET_STATUS);
        if (mode) {
            System.out.println("Safe mode is ON");
        }
        if (status != null) {
            System.out.println(status.getStatusText(false));
        }
        System.out.println("Configured Capacity: " + capacity + " (" + byteDesc(capacity) + ")");
        System.out.println("Present Capacity: " + presentCapacity + " (" + byteDesc(presentCapacity) + ")");
        System.out.println("DFS Remaining: " + remaining + " (" + byteDesc(remaining) + ")");
        System.out.println("DFS Used: " + used + " (" + byteDesc(used) + ")");
        System.out.println("DFS Used%: " + limitDecimalTo2(((1.0 * used) / presentCapacity) * 100) + "%");
        System.out.println();
        System.out.println("-------------------------------------------------");
        DatanodeInfo[] live = dfs.getClient().datanodeReport(DatanodeReportType.LIVE);
        DatanodeInfo[] dead = dfs.getClient().datanodeReport(DatanodeReportType.DEAD);
        System.out.println("Datanodes available: " + live.length + " (" + (live.length + dead.length) + " total, " + dead.length + " dead)\n");
        for (DatanodeInfo dn : live) {
            System.out.println(dn.getDatanodeReport());
            System.out.println();
        }
        for (DatanodeInfo dn : dead) {
            System.out.println(dn.getDatanodeReport());
            System.out.println();
        }
    }
}
