@Override
public void createPartControl(Composite parent) {
    Legislator legislator = getLegislator();
    Color bgColor = parent.getDisplay().getSystemColor(SWT.COLOR_LIST_BACKGROUND);
    Color fgColor = parent.getDisplay().getSystemColor(SWT.COLOR_LIST_FOREGROUND);
    Color nameFgColor = JFaceResources.getColorRegistry().get(JFacePreferences.COUNTER_COLOR);
    Color linkFgColor = JFaceColors.getHyperlinkText(parent.getDisplay());
    /* creates a composite to display the scrollable information list */
    final ScrolledComposite scrollComposite = new ScrolledComposite(parent, SWT.V_SCROLL | SWT.BORDER);
    setColors(scrollComposite, bgColor, fgColor);
    final Composite mainArea = new Composite(scrollComposite, SWT.NONE);
    setColors(mainArea, bgColor, fgColor);
    mainArea.setLayout(new GridLayout(2, false));
    scrollComposite.setContent(mainArea);
    scrollComposite.setExpandVertical(true);
    scrollComposite.setExpandHorizontal(true);
    scrollComposite.addControlListener(new ControlAdapter() {

        @Override
        public void controlResized(ControlEvent e) {
            Rectangle r = scrollComposite.getClientArea();
            scrollComposite.setMinSize(mainArea.computeSize(r.width, SWT.DEFAULT));
        }
    });
    /* creates the name field */
    Composite nameArea = new Composite(mainArea, SWT.NONE);
    setColors(nameArea, bgColor, fgColor);
    GridData nameGridData = new GridData(SWT.FILL, SWT.FILL, true, false);
    nameGridData.horizontalSpan = 2;
    nameArea.setLayoutData(nameGridData);
    nameArea.setLayout(new GridLayout(2, false));
    Label titleLabel = new Label(nameArea, SWT.NONE);
    setColors(titleLabel, bgColor, nameFgColor);
    titleLabel.setFont(JFaceResources.getHeaderFont());
    titleLabel.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, false, false));
    titleLabel.setText(legislator.getTitle().toString());
    Text nameText = new Text(nameArea, SWT.NONE);
    nameText.setEditable(false);
    setColors(nameText, bgColor, fgColor);
    nameText.setFont(JFaceResources.getHeaderFont());
    nameText.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false));
    List<String> nameTokens = new ArrayList<String>(5);
    nameTokens.add(legislator.getFirstName());
    nameTokens.add(legislator.getMiddleName());
    if (!StringUtils.isBlank(legislator.getNickname())) {
        nameTokens.add("\"" + legislator.getNickname() + "\"");
    }
    nameTokens.add(legislator.getLastName());
    nameTokens.add(legislator.getNameSuffix());
    nameText.setText(StringUtils.join(nameTokens, " "));
    /* creates the photo field */
    if (!StringUtils.isBlank(legislator.getBioguideId())) {
        try {
            ImageDescriptor photoImageDescr = ImageDescriptor.createFromURL(new URL("http://bioguide.congress.gov/bioguide/photo/" + legislator.getBioguideId().charAt(0) + "/" + legislator.getBioguideId() + ".jpg "));
            if ((photoImageDescr != null) && !(photoImageDescr.equals(ImageDescriptor.getMissingImageDescriptor()))) {
                photoImage = photoImageDescr.createImage();
            }
        } catch (MalformedURLException e1) {
        // this should not happen
        }
        if (photoImage != null) {
            Rectangle bounds = photoImage.getBounds();
            if (bounds.width > 10) {
                // avoid to show the default missing image
                Label imageLabel = new Label(mainArea, SWT.NONE);
                GridData imageLayoutData = new GridData(SWT.BEGINNING, SWT.CENTER, false, false);
                imageLayoutData.horizontalSpan = 2;
                imageLabel.setLayoutData(imageLayoutData);
                imageLabel.setImage(photoImage);
            }
        }
    }
    /* adds additional property fields */
    addStringProperty(mainArea, "Party", legislator.getParty().toString(), bgColor, fgColor, nameFgColor);
    addStringProperty(mainArea, "State", legislator.getState().toString(), bgColor, fgColor, nameFgColor);
    addStringProperty(mainArea, "District", legislator.getDistrict().toString(), bgColor, fgColor, nameFgColor);
    addStringProperty(mainArea, "In Office", legislator.isInOffice() ? "Active" : "Inactive", bgColor, fgColor, nameFgColor);
    addStringProperty(mainArea, "Gender", legislator.getGender().toString(), bgColor, fgColor, nameFgColor);
    addStringProperty(mainArea, "Office Phone", legislator.getPhone().toString(), bgColor, fgColor, nameFgColor);
    addStringProperty(mainArea, "Office Fax", legislator.getFax().toString(), bgColor, fgColor, nameFgColor);
    addStringProperty(mainArea, "Office Address", legislator.getCongressOffice(), bgColor, fgColor, nameFgColor);
    addURLProperty(mainArea, "Web Site", legislator.getWebSite(), bgColor, linkFgColor, nameFgColor);
    addURLProperty(mainArea, "Web Contact Form", legislator.getWebContactForm(), bgColor, linkFgColor, nameFgColor);
    addURLProperty(mainArea, "Email", legislator.getEmail(), bgColor, linkFgColor, nameFgColor, true);
    addStringProperty(mainArea, "Bioguide ID", legislator.getBioguideId(), bgColor, fgColor, nameFgColor);
    addURLProperty(mainArea, "", getURL("http://bioguide.congress.gov/scripts/biodisplay.pl?index=${id}", legislator.getBioguideId()), bgColor, linkFgColor, nameFgColor);
    addStringProperty(mainArea, "Vote Smart ID", legislator.getVoteSmartId(), bgColor, fgColor, nameFgColor);
    addURLProperty(mainArea, "", getURL("http://votesmart.org/bio.php?can_id=${id}", legislator.getVoteSmartId()), bgColor, linkFgColor, nameFgColor);
    addStringProperty(mainArea, "FEC ID", legislator.getFecId(), bgColor, fgColor, nameFgColor);
    addURLProperty(mainArea, "", getURL("http://query.nictusa.com/cgi-bin/can_detail/${id}", legislator.getFecId()), bgColor, linkFgColor, nameFgColor);
    addStringProperty(mainArea, "GovTrack.us ID", legislator.getGovTrackId(), bgColor, fgColor, nameFgColor);
    addURLProperty(mainArea, "", getURL("http://www.govtrack.us/congress/person.xpd?id=${id}", legislator.getGovTrackId()), bgColor, linkFgColor, nameFgColor);
    addStringProperty(mainArea, "CRP ID", legislator.getCrpId(), bgColor, fgColor, nameFgColor);
    addURLProperty(mainArea, "", getURL("http://www.opensecrets.org/politicians/summary.php?cid=${id}", legislator.getCrpId()), bgColor, linkFgColor, nameFgColor);
    addStringProperty(mainArea, "Eventful.com ID", legislator.getEventfulId(), bgColor, fgColor, nameFgColor);
    addURLProperty(mainArea, "", getURL("http://eventful.com/performers/${id}", legislator.getEventfulId()), bgColor, linkFgColor, nameFgColor);
    addStringProperty(mainArea, "Twitter ID", legislator.getTwitterId(), bgColor, fgColor, nameFgColor);
    addURLProperty(mainArea, "", getURL("http://twitter.com/${id}", legislator.getTwitterId()), bgColor, linkFgColor, nameFgColor);
    addURLProperty(mainArea, "Congresspedia URL", legislator.getCongresspediaURL(), bgColor, linkFgColor, nameFgColor);
    addURLProperty(mainArea, "YouTube URL", legislator.getYouTubeURL(), bgColor, linkFgColor, nameFgColor);
}
