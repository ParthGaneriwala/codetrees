@Override
protected Result evaluate(final LogicContext context, final Integer patientId, final Map<String, Object> parameters) throws LogicException {
    Result result = new Result();
    Patient patient = Context.getPatientService().getPatient(patientId);
    if (patient.getBirthdate() != null) {
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(patient.getBirthdate());
        calendar.add(Calendar.WEEK_OF_YEAR, 6);
        Date sixWeeks = calendar.getTime();
        calendar.setTime(patient.getBirthdate());
        calendar.add(Calendar.MONTH, 18);
        Date eighteenMonths = calendar.getTime();
        if (sixWeeks.before(new Date()) && eighteenMonths.after(new Date())) {
            ValidPolymeraseRule validPolymeraseRule = new ValidPolymeraseRule();
            parameters.put(EvaluableConstants.OBS_FETCH_SIZE, 2);
            parameters.put(EvaluableConstants.OBS_CONCEPT, Arrays.asList(EvaluableNameConstants.HIV_DNA_POLYMERASE_CHAIN_REACTION_QUALITATIVE));
            parameters.put(EvaluableConstants.OBS_VALUE_CODED, Arrays.asList(EvaluableNameConstants.NEGATIVE));
            Result validPolymeraseResults = validPolymeraseRule.eval(context, patientId, parameters);
            // if we have less than 2 negative results
            if (CollectionUtils.size(validPolymeraseResults) < 2) {
                parameters.remove(EvaluableConstants.OBS_CONCEPT);
                parameters.remove(EvaluableConstants.OBS_VALUE_CODED);
                parameters.remove(EvaluableConstants.OBS_FETCH_ORDER);
                parameters.remove(EvaluableConstants.OBS_FETCH_SIZE);
                PneumocystisCariniiRule pneumocystisCariniiRule = new PneumocystisCariniiRule();
                parameters.put(EvaluableConstants.ENCOUNTER_TYPE, Arrays.asList(EvaluableNameConstants.ENCOUNTER_TYPE_PEDIATRIC_INITIAL, EvaluableNameConstants.ENCOUNTER_TYPE_PEDIATRIC_RETURN, EvaluableNameConstants.ENCOUNTER_TYPE_PEDIATRIC_NONCLINICALMEDICATION));
                Result pneumocystisCariniiResults = pneumocystisCariniiRule.eval(context, patientId, parameters);
                if (CollectionUtils.isEmpty(pneumocystisCariniiResults))
                    result.add(new Result(String.valueOf(parameters.get(ReminderParameters.DISPLAYED_REMINDER_TEXT))));
            }
        }
    }
    return result;
}
