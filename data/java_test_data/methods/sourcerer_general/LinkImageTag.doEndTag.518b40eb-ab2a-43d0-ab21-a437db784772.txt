public int doEndTag() throws JspException {
    String tagValue = null;
    String tagTarget = null;
    // Resin 3.0, 3.1 throws ClassCastException with evaluateString for values like "1", so use tmp variable
    Object tmp = null;
    try {
        tmp = ExpressionEvaluationUtils.evaluate("value", this.value, pageContext);
        if (tmp != null) {
            tagValue = tmp.toString();
        }
        if (!StringUtils.isBlank(this.target)) {
            tmp = ExpressionEvaluationUtils.evaluate("target", this.target, pageContext);
            if (tmp != null) {
                tagTarget = tmp.toString();
            }
        }
    } catch (JspException e) {
        logger.severe("Failure in link tag for " + this.value + " / " + this.text, e);
        throw e;
    }
    WikiLink wikiLink = LinkUtil.parseWikiLink(tagValue);
    String tagText = buildLinkText();
    HttpServletRequest request = (HttpServletRequest) this.pageContext.getRequest();
    String url = null;
    String virtualWiki = WikiUtil.getVirtualWikiFromRequest(request);
    if (!StringUtils.isBlank(this.queryParams)) {
        wikiLink.setQuery(this.queryParams);
    }
    try {
        if (!StringUtils.isBlank(tagText)) {
            // return formatted link of the form "<a href="/wiki/en/Special:Edit">text</a>"
            url = LinkUtil.buildInternalLinkImageHtml(request.getContextPath(), virtualWiki, wikiLink, tagText, this.style, tagTarget, true);
        } else {
            // return raw link of the form "/wiki/en/Special:Edit"
            url = LinkUtil.buildInternalLinkImageUrl(request.getContextPath(), virtualWiki, wikiLink);
        }
        String fileType = null;
        if (!StringUtils.isBlank(text) && text.startsWith("Image:")) {
            if (text.indexOf(":") != -1)
                fileType = text.substring(text.indexOf(".") + 1);
        }
        String imgStr = LinkUtil.fileTypeImage(request.getContextPath(), fileType);
        this.pageContext.getOut().print(imgStr + "&nbsp;&nbsp;" + url);
    } catch (Exception e) {
        logger.severe("Failure while building url " + url + " with value " + this.value + " and text " + this.text, e);
        throw new JspException(e);
    } finally {
        this.queryParams = "";
    }
    return EVAL_PAGE;
}
