public void testDestroyTransitiveLoadedDescendantWithAbsentParent() throws Exception {
    ChromatticSession session = login();
    A a = session.insert(A.class, "bar");
    String aId = session.getId(a);
    String aPath = session.getPath(a);
    String aName = session.getName(a);
    A b = session.insert(a, A.class, "foo");
    A c = session.insert(b, A.class, "foo");
    String cId = session.getId(c);
    String cPath = session.getPath(c);
    String cName = session.getName(c);
    session.save();
    session.close();
    session = login();
    a = session.findByPath(A.class, "bar");
    c = session.findById(A.class, cId);
    EventQueue listener = new EventQueue();
    session.addEventListener(listener);
    session.remove(a);
    assertEquals(Status.REMOVED, session.getStatus(a));
    assertEquals(Status.REMOVED, session.getStatus(c));
    listener.assertLifeCycleEvent(LifeCycleEventType.REMOVED, cId, cPath, cName, c);
    listener.assertLifeCycleEvent(LifeCycleEventType.REMOVED, aId, aPath, aName, a);
    listener.assertEmpty();
    session.save();
}
