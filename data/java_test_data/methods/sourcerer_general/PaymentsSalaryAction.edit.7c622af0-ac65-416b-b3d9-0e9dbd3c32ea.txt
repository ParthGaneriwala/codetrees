public String edit() {
    if (id != null) {
        paymentsSalary = paymentsSalaryManager.get(id);
        employee = (Employee) getSession().getAttribute("employee");
        if (paymentsSalaryManager.lastPaymentSalary(employee).getId().equals(paymentsSalary.getId())) {
            setEditable(true);
        }
        typePay = new ArrayList<LabelValue>();
        typePay.add(new LabelValue(getText("paymentsSalary.half"), "half"));
        Salary s = paymentsSalary.getSalary();
        boolean paged = s.getPaged();
        boolean halfPay = s.getHalfPay();
        if (paged) {
            paged = false;
        } else {
            halfPay = false;
        }
        if (!halfPay) {
            Date currentDate = new Date(System.currentTimeMillis());
            Date endDate = new Date(s.getEndDate().getTime());
            aCLSize = asistanceControlManager.sizeByEmployeePeriod(employee, s.getInitDate(), endDate);
            int difACLSize = aCLSize;
            int lastACLSize = aCLSize;
            while (difACLSize > 0) {
                endDate.setTime(endDate.getTime() + (86400000 * difACLSize));
                aCLSize = asistanceControlManager.sizeByEmployeePeriod(employee, s.getInitDate(), endDate);
                difACLSize = aCLSize - lastACLSize;
                lastACLSize = aCLSize;
            }
            if (endDate.before(currentDate)) {
                typePay.add(new LabelValue(getText("paymentsSalary.complete"), "complete"));
            }
        }
    } else {
        paymentsSalary = new PaymentsSalary();
        employee = (Employee) getSession().getAttribute("employee");
        setEditable(true);
        typePay = new ArrayList<LabelValue>();
        typePay.add(new LabelValue(getText("paymentsSalary.half"), "half"));
        Salary s = salaryManager.findByEmployeePay(employee);
        if (!s.getHalfPay()) {
            Date currentDate = new Date(System.currentTimeMillis());
            Date endDate = new Date(s.getEndDate().getTime());
            aCLSize = asistanceControlManager.sizeByEmployeePeriod(employee, s.getInitDate(), endDate);
            int difACLSize = aCLSize;
            int lastACLSize = aCLSize;
            while (difACLSize > 0) {
                endDate.setTime(endDate.getTime() + (86400000 * difACLSize));
                aCLSize = asistanceControlManager.sizeByEmployeePeriod(employee, s.getInitDate(), endDate);
                difACLSize = aCLSize - lastACLSize;
                lastACLSize = aCLSize;
            }
            if (endDate.before(currentDate)) {
                typePay.add(new LabelValue(getText("paymentsSalary.complete"), "complete"));
            }
        }
    }
    paymentsSalary.setTypePay("half");
    paymentsSalary.setDatePay(new Date(System.currentTimeMillis()));
    return SUCCESS;
}
