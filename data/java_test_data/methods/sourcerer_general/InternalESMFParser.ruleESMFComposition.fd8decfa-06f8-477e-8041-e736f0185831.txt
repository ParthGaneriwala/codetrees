// $ANTLR end entryRuleESMFComposition
// $ANTLR start ruleESMFComposition
public final EObject ruleESMFComposition() throws RecognitionException {
    EObject current = null;
    EObject lv_connection_3 = null;
    EObject temp = null;
    setCurrentLookahead();
    resetLookahead();
    try {
        // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:1033:6: ( ( 'define' 'composition' '{' (lv_connection_3= ruleESMFComponentConnection )+ '}' ) )
        // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:1034:1: ( 'define' 'composition' '{' (lv_connection_3= ruleESMFComponentConnection )+ '}' )
        {
            // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:1034:1: ( 'define' 'composition' '{' (lv_connection_3= ruleESMFComponentConnection )+ '}' )
            // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:1034:2: 'define' 'composition' '{' (lv_connection_3= ruleESMFComponentConnection )+ '}'
            {
                match(input, 12, FOLLOW_12_in_ruleESMFComposition2078);
                createLeafNode(grammarAccess.getESMFCompositionAccess().getDefineKeyword_0(), null);
                match(input, 32, FOLLOW_32_in_ruleESMFComposition2087);
                createLeafNode(grammarAccess.getESMFCompositionAccess().getCompositionKeyword_1(), null);
                match(input, 15, FOLLOW_15_in_ruleESMFComposition2096);
                createLeafNode(grammarAccess.getESMFCompositionAccess().getLeftCurlyBracketKeyword_2(), null);
                // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:1046:1: (lv_connection_3= ruleESMFComponentConnection )+
                int cnt16 = 0;
                loop16: do {
                    int alt16 = 2;
                    int LA16_0 = input.LA(1);
                    if ((LA16_0 == 12)) {
                        alt16 = 1;
                    }
                    switch(alt16) {
                        case 1:
                            // ../ESMFDSL/src-gen/org/earthsystemcurator/dsl/parser/antlr/internal/InternalESMF.g:1049:6: lv_connection_3= ruleESMFComponentConnection
                            {
                                currentNode = createCompositeNode(grammarAccess.getESMFCompositionAccess().getConnectionESMFComponentConnectionParserRuleCall_3_0(), currentNode);
                                pushFollow(FOLLOW_ruleESMFComponentConnection_in_ruleESMFComposition2130);
                                lv_connection_3 = ruleESMFComponentConnection();
                                _fsp--;
                                if (current == null) {
                                    current = factory.create(grammarAccess.getESMFCompositionRule().getType().getClassifier());
                                    associateNodeWithAstElement(currentNode.getParent(), current);
                                }
                                try {
                                    add(current, "connection", lv_connection_3, "ESMFComponentConnection", currentNode);
                                } catch (ValueConverterException vce) {
                                    handleValueConverterException(vce);
                                }
                                currentNode = currentNode.getParent();
                            }
                            break;
                        default:
                            if (cnt16 >= 1)
                                break loop16;
                            EarlyExitException eee = new EarlyExitException(16, input);
                            throw eee;
                    }
                    cnt16++;
                } while (true);
                match(input, 22, FOLLOW_22_in_ruleESMFComposition2144);
                createLeafNode(grammarAccess.getESMFCompositionAccess().getRightCurlyBracketKeyword_4(), null);
            }
        }
        resetLookahead();
        lastConsumedNode = currentNode;
    } catch (RecognitionException re) {
        recover(input, re);
        appendSkippedTokens();
    } finally {
    }
    return current;
}
