private ByteArrayOutputStream getBytes(HttpServletRequest request, String path, String id, Database db, Info in) throws ServletException {
    db.connect();
    ResultSet rs = null;
    ResultSet rs2 = null;
    ResultSet rs3 = null;
    Report rep;
    // String add = request.getParameter("add");
    ByteArrayOutputStream baos = null;
    Image logo = null;
    try {
        rs = db.dbQuery("select logo from sites where site_id = " + db.site_id);
        if (rs.first())
            logo = Image.getInstance(rs.getBytes(1));
        if (rs != null)
            rs.getStatement().close();
        rs = null;
        if (path.indexOf("sl") != -1) {
            if (path.indexOf("Architect") != -1)
                rep = new GenSubmittalToArch(id, db);
            else
                rep = new GenSubmittalToSub(id, db);
        /*
			 * Pay Requests
			 */
        } else if (path.indexOf("pr") != -1) {
            if (path.indexOf("Month") != -1) {
                rs = db.dbQuery(GenMonthlyPayment.getQuery(id));
                rs2 = db.dbQuery(GenMonthlyPayment.getQuery2());
                rs2.first();
                rep = new GenMonthlyPayment(rs, rs2.getString(1), db.get("full_name"));
            } else {
                rs = db.dbQuery(GenFinalPayment.getQuery(id));
                rs2 = db.dbQuery(GenFinalPayment.getQuery2());
                rs2.first();
                rep = new GenFinalPayment(rs, rs2.getString(1), db.get("full_name"));
            }
        } else /*
			 * Change Orders
			 */
        if (path.indexOf("changes") != -1) {
            rep = new GenChangeAuthorizationSummary(db);
        } else if (path.indexOf("rfi") != -1) {
            rs = db.dbQuery(GenRFIDocument.getQuery(id));
            if (!rs.isBeforeFirst()) {
                rs.getStatement().close();
                rs = db.dbQuery(GenRFIDocument.getQuery2(id));
            }
            rep = new GenRFIDocument(rs, db.job_name);
        /* else if (path.indexOf("Transmittal") != -1) {
				if (path.indexOf("my") != -1) {
					rs = db.dbQuery(GenTransmittal.getQuery(id, true));
					rep = new GenTransmittal(rs, null, true);
				} else {
					rs = db.dbQuery(GenTransmittal.getQuery(id));
					rep = new GenTransmittal(rs, attr.getJobName());
				}
				*/
        } else
            rep = new ErrorReport();
        baos = rep.create(in, logo);
        rep.doCleanup(db);
        rep = null;
    } catch (IOException e) {
        throw new ServletException("Report: " + e.toString(), e);
    } catch (SQLException e) {
        throw new ServletException("Report: " + e.toString(), e);
    } catch (Exception e) {
        throw new ServletException("Report: " + e.toString(), e);
    } finally {
        try {
            if (rs != null)
                rs.getStatement().close();
            rs = null;
            if (rs2 != null)
                rs2.getStatement().close();
            rs3 = null;
            if (rs3 != null)
                rs3.getStatement().close();
            rs3 = null;
        } catch (SQLException e) {
            throw new ServletException("Report Exception: ", e);
        }
    }
    return baos;
}
