@SuppressWarnings("unchecked")
public void writeAnnoteaRDF(OutputStream out) {
    List<Element> elements = selectNodes("//*");
    HashMap<String, SemanticTag> bestSemanticTags = getBestSemanticTagMap();
    initAnnoteaRDFModel();
    for (Element element : elements) {
        String nodeXPath = element.getUniquePath();
        SemanticTag bestSemanticTag = bestSemanticTags.get(nodeXPath);
        if (bestSemanticTag != null) {
            int uniqueID = bestSemanticTag.hashCode();
            // create the resource
            String bodyText = bodyTextPrefix + bestSemanticTag.getCorrectedTag() + bodyTextSuffix;
            Resource body = m.createResource("urn:body" + uniqueID).addProperty(pBodyText, bodyText);
            Resource annotation = m.createResource("urn:annot" + uniqueID).addProperty(RDF.type, new ResourceImpl(ns2URI + "Comment"));
            // add properties
            annotation.addProperty(pCreator, "Consolidate4IE");
            SimpleDateFormat sdfmt = new SimpleDateFormat();
            sdfmt.applyPattern("yyyy'-'MM'-'d'T'H':'m':'sZ");
            String now = sdfmt.format(new Date());
            annotation.addProperty(pCreated, now);
            annotation.addProperty(pDate, now);
            int contentLength = element.getTextTrim().length();
            String xpointer;
            if (contentLength == 0) {
                xpointer = sourceURI + "#xpointer(" + nodeXPath.toLowerCase() + ")";
            } else {
                xpointer = sourceURI + "#xpointer(string-range(" + nodeXPath.toLowerCase() + ", \"\", 1, " + contentLength + "))";
            }
            annotation.addProperty(pContext, xpointer);
            annotation.addProperty(pLanguage, "de");
            // create statements
            Statement sAnnotatedBy = m.createStatement(source, pAnnotatedBy, annotation);
            Statement sAnnotates = m.createStatement(annotation, pAnnotates, source);
            Statement sBody = m.createStatement(annotation, pBody, body);
            // add statements
            Statement[] statements = { sAnnotatedBy, sAnnotates, sBody };
            m.add(statements);
        }
    }
    m.write(out, "RDF/XML");
}
