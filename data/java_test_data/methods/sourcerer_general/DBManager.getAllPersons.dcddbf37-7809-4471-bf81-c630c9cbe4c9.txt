public Map<String, Integer> getAllPersons(int topLimit, int bottomLimit) {
    ResultSet set = null;
    PreparedStatement pstmt = null;
    Connection conn = null;
    // creating the generic statement that contains the table and field
    // names
    String fields = DBFieldsEnum.PERSONS_PERSON_ID + "," + DBFieldsEnum.PERSONS_PERSON_NAME;
    String genericStr = String.format(SELECT_GENERIC_ORDERED_STMT, fields, DBTablesEnum.PERSONS, DBFieldsEnum.PERSONS_PERSON_NAME);
    // creating the prepared statement template including the ROWNUM limits
    // for the SELECT
    String pstmtStr = String.format(LIMIT_RESULTS_PSTMT, genericStr, bottomLimit, topLimit);
    int tempPersonId = 0;
    String tempPersonName = null;
    Map<String, Integer> personsMap = null;
    System.out.println(pstmtStr);
    try {
        conn = pool.getConnection();
        if (conn == null)
            return null;
        pstmt = conn.prepareStatement(pstmtStr);
        set = pstmt.executeQuery();
        set.setFetchSize(1000);
        personsMap = new HashMap<String, Integer>();
        // adding the persons retrieved to the map
        while (set.next()) {
            // retrieving the different fields
            tempPersonId = set.getInt(DBFieldsEnum.PERSONS_PERSON_ID.getFieldName());
            tempPersonName = set.getString(DBFieldsEnum.PERSONS_PERSON_NAME.getFieldName());
            // inserting the full movie name into the moviesMap
            personsMap.put(tempPersonName, tempPersonId);
        }
        set.close();
        pstmt.close();
    } catch (SQLException e) {
        System.out.println("Error in searchMovies");
        System.out.println("stopped on this record - " + tempPersonId + " / " + tempPersonName);
    } catch (NullPointerException e) {
        System.out.println("Null pointer in searchMovies");
    }
    pool.returnConnection(conn);
    return personsMap;
}
