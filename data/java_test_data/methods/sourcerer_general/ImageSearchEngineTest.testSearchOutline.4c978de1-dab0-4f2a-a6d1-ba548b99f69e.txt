public void testSearchOutline() {
    ImageSearchEngine engine = new ImageSearchEngine();
    FileImageDatabase db = new FileImageDatabase("dahon.dat");
    String inputURL = "http://localhost/leaf/mango1807.jpg";
    RGBImage input = null;
    OutlineDescriptor inputDescriptor;
    try {
        URL ul = new URL(inputURL);
        input = new RGBImage(ImageIO.read(ul));
    } catch (MalformedURLException e) {
        System.out.println("Error in URL!");
    } catch (IOException ioe) {
        System.out.println("Error reading image!");
    }
    inputDescriptor = new OutlineDescriptor(input);
    db.initialize();
    ImageDatabaseEntry entry;
    RGBImage img;
    OutlineDescriptor outline = null;
    String url1;
    url1 = "http://localhost/leaf/banaba1779.jpg";
    entry = new ImageDatabaseEntry();
    entry.setUrl(url1);
    try {
        URL ul = new URL(url1);
        img = new RGBImage(ImageIO.read(ul));
        outline = new OutlineDescriptor(img);
    } catch (MalformedURLException e) {
        System.out.println("Error in URL!");
    } catch (IOException ioe) {
        System.out.println("Error reading image!");
    }
    entry.setDescriptor(outline);
    db.add(entry);
    url1 = "http://localhost/leaf/banaba1776.jpg";
    entry = new ImageDatabaseEntry();
    entry.setUrl(url1);
    try {
        URL ul = new URL(url1);
        img = new RGBImage(ImageIO.read(ul));
        outline = new OutlineDescriptor(img);
    } catch (MalformedURLException e) {
        System.out.println("Error in URL!");
    } catch (IOException ioe) {
        System.out.println("Error reading image!");
    }
    entry.setDescriptor(outline);
    db.add(entry);
    url1 = "http://localhost/leaf/banaba1782.jpg";
    entry = new ImageDatabaseEntry();
    entry.setUrl(url1);
    try {
        URL ul = new URL(url1);
        img = new RGBImage(ImageIO.read(ul));
        outline = new OutlineDescriptor(img);
    } catch (MalformedURLException e) {
        System.out.println("Error in URL!");
    } catch (IOException ioe) {
        System.out.println("Error reading image!");
    }
    entry.setDescriptor(outline);
    db.add(entry);
    url1 = "http://localhost/leaf/mango1808.jpg";
    entry = new ImageDatabaseEntry();
    entry.setUrl(url1);
    try {
        URL ul = new URL(url1);
        img = new RGBImage(ImageIO.read(ul));
        outline = new OutlineDescriptor(img);
    } catch (MalformedURLException e) {
        System.out.println("Error in URL!");
    } catch (IOException ioe) {
        System.out.println("Error reading image!");
    }
    entry.setDescriptor(outline);
    db.add(entry);
    url1 = "http://localhost/leaf/mango1811.jpg";
    entry = new ImageDatabaseEntry();
    entry.setUrl(url1);
    try {
        URL ul = new URL(url1);
        img = new RGBImage(ImageIO.read(ul));
        outline = new OutlineDescriptor(img);
    } catch (MalformedURLException e) {
        System.out.println("Error in URL!");
    } catch (IOException ioe) {
        System.out.println("Error reading image!");
    }
    entry.setDescriptor(outline);
    db.add(entry);
    url1 = "http://localhost/leaf/mango1806.jpg";
    entry = new ImageDatabaseEntry();
    entry.setUrl(url1);
    try {
        URL ul = new URL(url1);
        img = new RGBImage(ImageIO.read(ul));
        outline = new OutlineDescriptor(img);
    } catch (MalformedURLException e) {
        System.out.println("Error in URL!");
    } catch (IOException ioe) {
        System.out.println("Error reading image!");
    }
    entry.setDescriptor(outline);
    db.add(entry);
    db.save();
    engine.setImageDatabase(db);
    List results = engine.search(inputDescriptor);
    Iterator ite = results.iterator();
    while (ite.hasNext()) {
        SearchResult result = (SearchResult) ite.next();
        System.out.println(result.getUrl() + ":" + result.getDistanceFromInput());
    }
}
