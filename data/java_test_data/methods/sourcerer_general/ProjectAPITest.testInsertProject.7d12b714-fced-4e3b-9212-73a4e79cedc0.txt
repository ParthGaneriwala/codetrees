public void testInsertProject() throws Exception {
    String title = "API Test Project";
    // Add Meta Info with fields required
    ArrayList<String> meta = new ArrayList<String>();
    meta.add("id");
    meta.add("title");
    api.setTransactionMeta(meta);
    // The minimum number of fields for a successful project insert
    DataRecord record = new DataRecord();
    record.setName("project");
    record.setAction(DataRecord.INSERT);
    record.addField("title", title);
    record.addField("shortDescription", "API Test Project short description");
    record.addField("requestDate", new Date());
    record.addField("enteredBy", USER_ID);
    record.addField("modifiedBy", USER_ID);
    record.addField("groupId", GROUP_ID);
    // Other fields
    record.addField("requestedBy", "Project Manager");
    record.addField("showCalendar", "true");
    record.addField("showTickets", "false");
    record.addField("showDiscussion", "true");
    record.addField("showPlan", "true");
    record.addField("showLists", "true");
    record.addField("showDocuments", "true");
    api.save(record);
    // Process the complete transaction
    processTheTransactions(api, packetContext);
    assertFalse("API reported a transaction error: " + api.getLastResponse(), api.hasError());
    // When supplying meta, the API will return the record inserted
    int newProjectId = Integer.parseInt(api.getResponseValue("id"));
    assertTrue(newProjectId > 0);
    // Record-level things can be done too
    assertTrue(api.getRecordCount() == 1);
    ArrayList<DataRecord> records = api.getRecords();
    for (DataRecord thisRecord : records) {
        assertTrue(Integer.parseInt(thisRecord.getValue("id")) == newProjectId);
        assertTrue(title.equals(thisRecord.getValue("title")));
    }
    Project thisProject = new Project(db, newProjectId);
    assertTrue(thisProject.getFeatures().getShowCalendar());
    assertFalse(thisProject.getFeatures().getShowTickets());
    assertTrue(thisProject.getFeatures().getShowDiscussion());
    assertTrue(thisProject.getFeatures().getShowPlan());
    assertTrue(thisProject.getFeatures().getShowLists());
    assertTrue(thisProject.getFeatures().getShowDocuments());
    assertTrue(thisProject.delete(db, null));
}
