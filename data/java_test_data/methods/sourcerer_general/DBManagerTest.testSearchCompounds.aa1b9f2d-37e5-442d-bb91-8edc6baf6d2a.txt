@Test
public void testSearchCompounds() throws ClassNotFoundException, SQLException {
    DatabaseTests.setupTestDatabase();
    DatabaseTests.populateDatabase();
    DBManager dbm = new DBManager();
    dbm.openDatabaseConnection();
    List<ColumnField> cols = dbm.getCompoundTableColumns();
    // Setup search filters
    SearchOption so1 = SearchOption.createSearchContains(cols.get(2), "gs");
    SearchOption so2 = SearchOption.createSearchRange(cols.get(0), 2, 4);
    List<SearchOption> sos = new ArrayList<SearchOption>();
    sos.add(so1);
    sos.add(so2);
    // Perform search
    QueryReader rdr = dbm.searchCompounds(sos);
    assertTrue(rdr.getCompoundCount() == 3);
    // Check results
    List<Compound> comps = rdr.getCompounds(1, 25);
    assertTrue(comps.size() == 3);
    assertTrue(comps.get(0).getGUID() == 2);
    assertTrue(comps.get(0).getOwnerID() == 2);
    assertTrue(comps.get(0).getNames().size() == 2);
    assertTrue(comps.get(0).getNames().get(0).equals("comp21"));
    assertTrue(comps.get(0).getNames().get(1).equals("comp22"));
    assertTrue(comps.get(0).getProperty("tags").equals("tags2"));
    assertTrue(comps.get(1).getGUID() == 3);
    assertTrue(comps.get(1).getOwnerID() == 3);
    assertTrue(comps.get(1).getNames().size() == 1);
    assertTrue(comps.get(1).getNames().get(0).equals("comp31"));
    assertTrue(comps.get(1).getProperty("tags").equals("tags3"));
    assertTrue(comps.get(2).getGUID() == 4);
    assertTrue(comps.get(2).getOwnerID() == 4);
    assertTrue(comps.get(2).getNames().size() == 3);
    assertTrue(comps.get(2).getNames().get(0).equals("comp41"));
    assertTrue(comps.get(2).getNames().get(1).equals("comp42"));
    assertTrue(comps.get(2).getProperty("tags").equals("tags4"));
    // Check fails on no search filters
    sos.clear();
    try {
        dbm.searchCompounds(sos);
        fail("Should not search with no filters");
    } catch (IllegalArgumentException exc) {
    }
}
