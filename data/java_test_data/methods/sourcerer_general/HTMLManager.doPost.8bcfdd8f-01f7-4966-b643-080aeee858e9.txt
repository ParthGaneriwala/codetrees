protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    PrintWriter out = resp.getWriter();
    String cmd = req.getParameter("cmd");
    s = req.getSession();
    user_name = (String) s.getAttribute("userName");
    if (null == user_name) {
        LoggedIn = false;
    } else {
        LoggedIn = true;
    }
    if (cmd.equals("recent")) {
        try {
            DefaultHomePageRecent(out, 0);
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (InstantiationException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
    if (cmd.equals("popular")) {
        System.out.println("POPULAR was CLICKED");
        try {
            DefaultHomePagePopular(out, 0);
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (InstantiationException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    } else if (cmd.equals("nextpage")) {
        String Request_Type = req.getParameter("requesttype");
        String pagenum = req.getParameter("nextpagenum");
        try {
            if (Request_Type.equalsIgnoreCase("recent")) {
                DefaultHomePageRecent(out, (Integer.parseInt(pagenum)));
            } else {
                DefaultHomePagePopular(out, (Integer.parseInt(pagenum)));
            }
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (InstantiationException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    } else if (cmd.equals("previouspage")) {
        String Request_Type = req.getParameter("requesttype");
        String pagenum = req.getParameter("nextpagenum");
        try {
            if (Request_Type.equalsIgnoreCase("recent")) {
                DefaultHomePageRecent(out, (Integer.parseInt(pagenum)) - 10);
            } else {
                DefaultHomePagePopular(out, (Integer.parseInt(pagenum)) - 10);
            }
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (InstantiationException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    } else if (cmd.equals("postURL")) {
        if (postURL(req)) {
            String Result = "<h1>Successfully POSTED...</h1>";
            out.println(Result);
        } else {
            out.println("<h1>POSTING FAILED</h1>");
            if (db.exceptionMessage.contentEquals("duplicate_entries")) {
                out.println("<p>This Link has alredy been posted by someone else</p>");
            }
        }
    } else if (cmd.equals("fillup")) {
        fillupHtml(out);
    }
    // Added later to check the closure properly
    out.close();
}
