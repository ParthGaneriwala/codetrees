@Override
public void insert(ObjectContainer value) throws ContrabaseDatastoreException {
    try {
        // ObjectContainer에 저장되어 있는 key를 가져오고.
        String key = value.getKey();
        // ObjectContainer에 저장되어 있는 각 field(ObjectContainerField)를 Iterator에 담아서.
        Iterator<ObjectContainerField> fields = value.iterator();
        Statement stat = conn.createStatement();
        try {
            // ObjectContainer에 저장되어 있는 Class와 Key를 저장하고.
            stat.execute("insert into TABLET_KEYS values('" + key + "', '" + value.getClassName() + "')");
        } catch (Exception e) {
            throw new ContrabaseDatastoreException("Exist Key value = " + key, e);
        }
        while (fields.hasNext()) {
            ObjectContainerField field = fields.next();
            Object objv = field.getValue();
            String sql = "insert into TABLET_";
            // 각각의 알맞는 Tablet에 field를 저장한다.
            if (objv instanceof Number) {
                sql += "NUMBER values('" + key + "', '" + field.getTypeName() + "', '" + field.getFieldName() + "', " + objv.toString();
            } else if (objv instanceof Character || objv instanceof String) {
                sql += "TEXT values('" + key + "', '" + field.getTypeName() + "', '" + field.getFieldName() + "', '" + objv.toString() + "'";
            } else if (objv instanceof Boolean) {
                // boolean의 경우 true/false를 직접 저장하지 않고
                // true일 경우 1로 false일 경우 0으로 저장한다.
                int bool = SQLiteUtil.boolStringToInt(objv.toString());
                sql += "BOOLEAN values('" + key + "', '" + field.getTypeName() + "', '" + field.getFieldName() + "', " + bool;
            } else {
                // Blob의 경우 value를 byte로 저장한다.
                PreparedStatement pstat = conn.prepareStatement("insert into tablet_BLOB values(?, ?, ?, ?)");
                pstat.setString(1, key);
                pstat.setString(2, field.getTypeName());
                pstat.setString(3, field.getFieldName());
                pstat.setBytes(4, (byte[]) field.getValue());
                pstat.execute();
                continue;
            }
            sql += ")";
            stat.execute(sql);
            stat.close();
        }
    // end of while
    } catch (SQLException e) {
        throw new ContrabaseDatastoreException("SQL Exception Insert Error", e);
    }
// return true;
}
