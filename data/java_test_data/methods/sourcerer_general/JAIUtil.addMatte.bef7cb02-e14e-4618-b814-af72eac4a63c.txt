public static void addMatte(File inImgFile, int inMatteWidth, Color inMatteColor) {
    long startTime = System.currentTimeMillis();
    try {
        // PlanarImage image = JAI.create("fileload", inImgFile.getPath());
        FileSeekableStream fss = new FileSeekableStream(inImgFile);
        // PlanarImage image = JAI.create("stream", fss);
        BufferedImage image = ImageIO.read(fss);
        fss.close();
        long readTime = System.currentTimeMillis();
        // Retrieve the value of the "FormatName" property.
        // System.out.println("Format: " + image.getProperty("formatname")); /////////////////
        ParameterBlock params = new ParameterBlock();
        params.addSource(image);
        // left pad
        params.add(inMatteWidth - 1);
        // right pad
        params.add(inMatteWidth - 1);
        // top pad
        params.add(inMatteWidth - 1);
        // bottom pad
        params.add(inMatteWidth - 1);
        // double fill[] = {1};
        double[] fillColorArray = { inMatteColor.getRed(), inMatteColor.getGreen(), inMatteColor.getBlue() };
        // type
        params.add(new BorderExtenderConstant(fillColorArray));
        // params.add(1);//fill color
        RenderedOp image2 = JAI.create("border", params);
        // Add 1-pixel gray edge
        params = new ParameterBlock();
        params.addSource(image2);
        // left pad
        params.add(1);
        // right pad
        params.add(1);
        // top pad
        params.add(1);
        // bottom pad
        params.add(1);
        // type
        params.add(new BorderExtenderConstant(GRAY_FILL));
        image2 = JAI.create("border", params);
        long opTime = System.currentTimeMillis();
        ImageIO.write(image2, ImageFormat.guessFormatFromName(inImgFile.getName()).getFileExtension(), inImgFile);
        long writeTime = System.currentTimeMillis();
    // System.out.println("Matte timing [read,op,write,total] (ms): "
    // + (readTime - startTime) + ", " + (opTime - readTime)
    // + ", " + (writeTime - opTime) + ", " + (System.currentTimeMillis() - startTime));
    } catch (Exception e) {
        throw new RuntimeException(e);
    }
}
