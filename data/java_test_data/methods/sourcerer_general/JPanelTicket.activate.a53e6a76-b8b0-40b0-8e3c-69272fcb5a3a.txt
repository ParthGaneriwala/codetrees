public void activate() throws BasicException {
    paymentdialogreceipt = JPaymentSelectReceipt.getDialog(this);
    paymentdialogreceipt.init(m_App);
    paymentdialogrefund = JPaymentSelectRefund.getDialog(this);
    paymentdialogrefund.init(m_App);
    // impuestos incluidos seleccionado ?
    m_jaddtax.setSelected("true".equals(m_jbtnconfig.getProperty("taxesincluded")));
    // Inicializamos el combo de los impuestos.
    java.util.List<TaxInfo> taxlist = senttax.list();
    taxcollection = new ListKeyed<TaxInfo>(taxlist);
    java.util.List<TaxCategoryInfo> taxcategorieslist = senttaxcategories.list();
    taxcategoriescollection = new ListKeyed<TaxCategoryInfo>(taxcategorieslist);
    taxcategoriesmodel = new ComboBoxValModel(taxcategorieslist);
    m_jTax.setModel(taxcategoriesmodel);
    String taxesid = m_jbtnconfig.getProperty("taxcategoryid");
    if (taxesid == null) {
        if (m_jTax.getItemCount() > 0) {
            m_jTax.setSelectedIndex(0);
        }
    } else {
        taxcategoriesmodel.setSelectedKey(taxesid);
    }
    taxeslogic = new TaxesLogic(taxlist);
    // Show taxes options
    if (m_App.getAppUserView().getUser().hasPermission("sales.ChangeTaxOptions")) {
        m_jTax.setVisible(true);
        m_jaddtax.setVisible(true);
    } else {
        m_jTax.setVisible(false);
        m_jaddtax.setVisible(false);
    }
    // Authorization for buttons
    btnSplit.setEnabled(m_App.getAppUserView().getUser().hasPermission("sales.Total"));
    m_jDelete.setEnabled(m_App.getAppUserView().getUser().hasPermission("sales.EditLines"));
    m_jNumberKeys.setMinusEnabled(m_App.getAppUserView().getUser().hasPermission("sales.EditLines"));
    m_jNumberKeys.setEqualsEnabled(m_App.getAppUserView().getUser().hasPermission("sales.Total"));
    m_jbtnconfig.setPermissions(m_App.getAppUserView().getUser());
    m_ticketsbag.activate();
}
