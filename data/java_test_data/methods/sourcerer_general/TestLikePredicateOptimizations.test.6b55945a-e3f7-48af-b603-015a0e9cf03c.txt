public void test() throws Exception {
    Connection conn = newConnection();
    Statement stmt = conn.createStatement();
    PreparedStatement pstmt;
    ResultSet rs;
    String sql;
    int expectedCount;
    int actualCount;
    stmt.execute("drop table test if exists");
    sql = "create table test(name varchar(255))";
    stmt.execute(sql);
    sql = "insert into test values(?)";
    pstmt = conn.prepareStatement(sql);
    for (int i = 0; i < 10000; i++) {
        pstmt.setString(1, "name" + i);
        pstmt.addBatch();
    }
    pstmt.executeBatch();
    sql = "select count(*) from test where name = null";
    rs = stmt.executeQuery(sql);
    rs.next();
    expectedCount = rs.getInt(1);
    sql = "select count(*) from test where name like null";
    pstmt = conn.prepareStatement(sql);
    rs = pstmt.executeQuery();
    rs.next();
    actualCount = rs.getInt(1);
    assertEquals("\"" + sql + "\"", expectedCount, actualCount);
    // --
    sql = "select count(*) from test where name = ''";
    rs = stmt.executeQuery(sql);
    rs.next();
    expectedCount = rs.getInt(1);
    sql = "select count(*) from test where name like ''";
    pstmt = conn.prepareStatement(sql);
    rs = pstmt.executeQuery();
    rs.next();
    actualCount = rs.getInt(1);
    assertEquals("\"" + sql + "\"", expectedCount, actualCount);
    // --
    sql = "select count(*) from test where name is not null";
    rs = stmt.executeQuery(sql);
    rs.next();
    expectedCount = rs.getInt(1);
    sql = "select count(*) from test where name like '%'";
    pstmt = conn.prepareStatement(sql);
    rs = pstmt.executeQuery();
    rs.next();
    actualCount = rs.getInt(1);
    assertEquals("\"" + sql + "\"", expectedCount, actualCount);
    // --
    sql = "select count(*) from test where left(name, 6) = 'name44'";
    rs = stmt.executeQuery(sql);
    rs.next();
    expectedCount = rs.getInt(1);
    sql = "select count(*) from test where name like 'name44%'";
    pstmt = conn.prepareStatement(sql);
    rs = pstmt.executeQuery();
    rs.next();
    actualCount = rs.getInt(1);
    assertEquals("\"" + sql + "\"", expectedCount, actualCount);
    // --
    sql = "select count(*) from test where left(name,5) = 'name4' and right(name,1) = 5";
    rs = stmt.executeQuery(sql);
    rs.next();
    expectedCount = rs.getInt(1);
    sql = "select count(*) from test where name like 'name4%5'";
    pstmt = conn.prepareStatement(sql);
    rs = pstmt.executeQuery();
    rs.next();
    actualCount = rs.getInt(1);
    assertEquals("\"" + sql + "\"", expectedCount, actualCount);
    // --
    stmt.execute("drop table test1 if exists");
    sql = "CREATE TABLE test1 (col VARCHAR(30))";
    pstmt = conn.prepareStatement(sql);
    pstmt.execute();
    sql = "INSERT INTO test1 (col) VALUES ('one')";
    pstmt = conn.prepareStatement(sql);
    pstmt.execute();
    sql = "SELECT * FROM test1 WHERE ( col LIKE ? )";
    pstmt = conn.prepareStatement(sql);
    pstmt.setString(1, "one");
    rs = pstmt.executeQuery();
    rs.next();
    String presult = rs.getString("COL");
    sql = "SELECT * FROM test1 WHERE ( col LIKE 'one' )";
    pstmt = conn.prepareStatement(sql);
    rs = pstmt.executeQuery();
    rs.next();
    String result = rs.getString("COL");
    assertEquals("\"" + sql + "\"", result, presult);
}
