public ActionResult execute(DataHandler dh) {
    Vector<Position> positionsAffected = new Vector<Position>();
    Vector<Unit> unitsAffected = new Vector<Unit>();
    Position p = dh.positionQuery(thisItem);
    positionsAffected.add(p);
    positionsAffected.add(new Position(p.getX() - 1, p.getY() - 1));
    positionsAffected.add(new Position(p.getX(), p.getY() - 1));
    positionsAffected.add(new Position(p.getX() + 1, p.getY() - 1));
    positionsAffected.add(new Position(p.getX() - 1, p.getY()));
    positionsAffected.add(new Position(p.getX() + 1, p.getY()));
    positionsAffected.add(new Position(p.getX() - 1, p.getY() + 1));
    positionsAffected.add(new Position(p.getX(), p.getY() + 1));
    positionsAffected.add(new Position(p.getX() + 1, p.getY() + 1));
    for (Position pos : positionsAffected) {
        if (!pos.isValid())
            continue;
        GameObject[] go = dh.positionQuery(pos, GameObjectType.UNIT);
        Unit[] u = new Unit[go.length];
        for (int i = 0; i < u.length; i++) u[i] = (Unit) go[i];
        for (int i = 0; i < u.length; i++) unitsAffected.add(u[i]);
    }
    if (unitsAffected.size() > 0) {
        for (Unit u : unitsAffected) {
            u.modHealth(-20);
        }
    }
    MainScreen.writeToConsole("Item blew up!!!");
    ObjectID itemThatBlewUp = thisItem;
    GameObject itbu = dh.objectQuery(itemThatBlewUp);
    itbu.invalidate();
    dh.returnObject(itbu);
    // This is for testing purposes to see if item blew up
    if (dh.objectQuery(itemThatBlewUp) == null) {
        MainScreen.writeToConsole("SUCCESS!!!");
    }
    return ActionResult.SUCCESS;
}
