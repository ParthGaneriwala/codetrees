public static final String encode(byte[] array) {
    // last byte
    int last;
    // character count
    int count;
    // line separator count
    int separators;
    // length of returned string
    int length;
    // encoded characters
    char[] encoded;
    // bytes left
    int left;
    int end;
    // encoding buffer
    int block;
    // shift count
    int r;
    // byte to encode
    int n;
    // index into output array
    int index;
    String ret;
    if ((null != array) && (0 != array.length)) {
        last = array.length - 1;
        count = (last / 3 + 1) << 2;
        separators = (count - 1) / 76;
        length = count + separators;
        encoded = new char[length];
        index = 0;
        separators = 0;
        for (int i = 0; i <= last; i += 3) {
            left = last - i;
            end = (left > 1 ? 2 : left);
            // collect 1 to 3 bytes to encode
            block = 0;
            r = 16;
            for (int j = 0; j <= end; j++) {
                n = array[i + j];
                block += (n < 0 ? n + 256 : n) << r;
                r -= 8;
            }
            // encode into 2-4 chars padding with '=' if no data left
            encoded[index++] = BASE64_CHAR_TABLE[(block >>> 18) & 0x3f];
            encoded[index++] = BASE64_CHAR_TABLE[(block >>> 12) & 0x3f];
            encoded[index++] = left > 0 ? BASE64_CHAR_TABLE[(block >>> 6) & 0x3f] : '=';
            encoded[index++] = left > 1 ? BASE64_CHAR_TABLE[block & 0x3f] : '=';
            if ((0 == (index - separators) % 76) && (index < length)) {
                encoded[index++] = '\n';
                separators += 1;
            }
        }
        ret = new String(encoded);
    } else
        ret = "";
    return (ret);
}
