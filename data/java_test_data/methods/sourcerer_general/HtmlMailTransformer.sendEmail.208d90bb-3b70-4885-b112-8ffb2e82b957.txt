protected void sendEmail(String body) throws Exception {
    Properties props = new Properties();
    props.setProperty("mail.transport.protocol", "smtp");
    props.setProperty("mail.smtp.host", smtpHost);
    props.setProperty("mail.smtp.port", smtpPort);
    props.setProperty("mail.smtp.localhost", "localhost");
    Authenticator auth = null;
    if (smtpUser.length() > 0) {
        props.put("mail.smtp.auth", "true");
        auth = new Authenticator() {

            public PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(smtpUser, smtpPassword);
            }
        };
        props.setProperty("mail.smtp.user", smtpUser);
    // props.setProperty("mail.password", smtpPassword);
    }
    Session session = Session.getDefaultInstance(props, auth);
    // session.setDebug(true);
    Message message = new MimeMessage(session);
    /* Fill the headers */
    message.setSubject(subject);
    message.setFrom(new InternetAddress(this.fromAddress));
    message.addRecipient(Message.RecipientType.TO, new InternetAddress(toAddress));
    /* Create new message part. */
    BodyPart messageBodyPart = new MimeBodyPart();
    messageBodyPart.setContent(body, "text/html");
    MimeMultipart multipart = new MimeMultipart("related");
    multipart.addBodyPart(messageBodyPart);
    /* Add the images. */
    for (int i = 0; i < images.size(); i++) {
        BodyPart imageBodyPart = new MimeBodyPart();
        String imageFile = images.get(i).substring(images.get(i).lastIndexOf("/") + 1);
        String mimeType = new MimetypesFileTypeMap().getContentType(imageFile);
        Source img = null;
        try {
            img = resolver.resolveURI(images.get(i));
            DataSource ds = new SourceDataSource(img, mimeType, images.get(i));
            imageBodyPart.setDataHandler(new DataHandler(ds));
            imageBodyPart.setHeader("Content-ID", "<" + String.valueOf(i) + ">");
            multipart.addBodyPart(imageBodyPart);
        } finally {
            if (img != null) {
                resolver.release(img);
            }
        }
    }
    message.setContent(multipart);
    Transport.send(message);
// Transport transport = session.getTransport("smtp");
// transport.connect();
// transport.sendMessage(message, message.getRecipients(Message.RecipientType.TO));
// transport.close();
}
