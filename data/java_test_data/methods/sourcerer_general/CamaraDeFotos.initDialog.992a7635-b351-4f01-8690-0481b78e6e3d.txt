private void initDialog() {
    this.setBodyStyle("background: url('imagenes/CamaraFotos.png')");
    this.setSize(800, 516);
    this.setModal(true);
    this.setBodyBorder(false);
    this.setFrame(false);
    this.setBorders(false);
    this.setHeaderVisible(false);
    this.setHideOnButtonClick(true);
    this.setButtons("");
    this.setResizable(false);
    TableLayout layout = new TableLayout(2);
    layout.setCellPadding(0);
    layout.setCellSpacing(0);
    this.setLayout(layout);
    cardLayout = new CardLayout();
    this.visor = new LayoutContainer(cardLayout);
    TableData layoutDataVisor = new TableData();
    layoutDataVisor.setStyle("paddingLeft: 69px; paddingTop: 76px;");
    visor.setSize(ANCHO_VISOR, ALTO_VISOR);
    visor.setScrollMode(Scroll.AUTOY);
    this.add(visor, layoutDataVisor);
    Image imgCargando = new Image("imagenes/cargandoRojo.gif");
    TableLayout layoutCargando = new TableLayout(1);
    layoutCargando.setCellHorizontalAlign(HorizontalAlignment.CENTER);
    layoutCargando.setCellVerticalAlign(VerticalAlignment.MIDDLE);
    contenedorCargando = new LayoutContainer(layoutCargando);
    contenedorCargando.add(imgCargando);
    visor.add(contenedorCargando);
    LayoutContainer botonera = new LayoutContainer(new AbsoluteLayout());
    botonera.setSize(140, 295);
    TableData layoutDataBotonera = new TableData();
    layoutDataBotonera.setRowspan(2);
    layoutDataBotonera.setStyle("paddingLeft: 80px; paddingTop: 184px;");
    this.add(botonera, layoutDataBotonera);
    ImagenMenu btnCerrar = new ImagenMenu("botonCamaraCerrar.png");
    ImagenMenu btnSiguiente = new ImagenMenu("botonCamaraSiguiente.png");
    ImagenMenu btnAnterior = new ImagenMenu("botonCamaraAnterior.png");
    ImagenMenu btnVerTodas = new ImagenMenu("subirNivel.png");
    ImagenMenu btnMiniaturas = new ImagenMenu("thumbnails.png");
    final int LEFT_X = 610;
    final int TOP_Y = 185;
    botonera.add(btnCerrar, new AbsoluteData(LEFT_X + 95, TOP_Y + 240));
    botonera.add(btnAnterior, new AbsoluteData(LEFT_X + 2, TOP_Y + 134));
    botonera.add(btnSiguiente, new AbsoluteData(LEFT_X + 96, TOP_Y + 134));
    botonera.add(btnVerTodas, new AbsoluteData(LEFT_X + 49, TOP_Y + 80));
    botonera.add(btnMiniaturas, new AbsoluteData(LEFT_X + 49, TOP_Y + 184));
    botonera.getItem(0).setToolTip("Salir y guardar la cámara nel bolsillo");
    botonera.getItem(1).setToolTip("Pa' trás");
    botonera.getItem(2).setToolTip("Pa' lante");
    botonera.getItem(3).setToolTip("Ver todas");
    botonera.getItem(4).setToolTip("Ver miniaturas");
    btnCerrar.addClickHandler(new ClickHandler() {

        @Override
        public void onClick(ClickEvent event) {
            hide();
        }
    });
    btnAnterior.addClickHandler(new ClickHandler() {

        @Override
        public void onClick(ClickEvent event) {
            anteriorFoto();
        }
    });
    btnSiguiente.addClickHandler(new ClickHandler() {

        @Override
        public void onClick(ClickEvent event) {
            siguienteFoto();
        }
    });
    btnMiniaturas.addClickHandler(new ClickHandler() {

        @Override
        public void onClick(ClickEvent event) {
            if (visorMiniaturas != null) {
                cardLayout.setActiveItem(visorMiniaturas);
            }
        }
    });
    btnVerTodas.addClickHandler(new ClickHandler() {

        @Override
        public void onClick(ClickEvent event) {
            verIndice();
        }
    });
    htmlTitulo = new Html();
    TableData layoutDataTitulo = new TableData(HorizontalAlignment.CENTER, VerticalAlignment.TOP);
    layoutDataTitulo.setHeight("44px");
    htmlTitulo.setWidth("80%");
    this.add(htmlTitulo, layoutDataTitulo);
}
