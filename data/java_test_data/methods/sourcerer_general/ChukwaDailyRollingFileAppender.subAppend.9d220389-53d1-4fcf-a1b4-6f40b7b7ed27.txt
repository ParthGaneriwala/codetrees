protected void subAppend(LoggingEvent event) {
    // needed to give setCukwaClientPortNum() and -Hostname() a shot
    if (chukwaClient == null) {
        if (getChukwaClientHostname() != null && getChukwaClientPortNum() != 0) {
            chukwaClient = new ChukwaAgentController(getChukwaClientHostname(), getChukwaClientPortNum());
            System.out.println("setup adaptor with hostname " + getChukwaClientHostname() + " and portnum " + getChukwaClientPortNum());
        } else {
            chukwaClient = new ChukwaAgentController();
            System.out.println("setup adaptor with no args, which means it used its defaults");
        }
        // if they haven't specified, default to retrying every 10 seconds for 5 minutes
        long retryInterval = chukwaClientConnectRetryInterval;
        if (retryInterval == 0)
            retryInterval = 1000;
        long numRetries = chukwaClientConnectNumRetry;
        if (numRetries == 0)
            numRetries = 30;
        long adaptorID = chukwaClient.addFile(getRecordType(), getFile(), numRetries, retryInterval);
        if (adaptorID > 0) {
            System.out.println("Added file tailing adaptor to chukwa agent for file " + getFile());
        } else {
            System.out.println("Chukwa adaptor not added, addFile(" + getFile() + ") returned " + adaptorID);
        }
    }
    long n = System.currentTimeMillis();
    if (n >= nextCheck) {
        now.setTime(n);
        nextCheck = rc.getNextCheckMillis(now);
        try {
            rollOver();
        } catch (IOException ioe) {
            LogLog.error("rollOver() failed.", ioe);
        }
    }
    // escape the newlines from record bodies and then write this record to the log file
    this.qw.write(RecordConstants.escapeAllButLastRecordSeparator("\n", this.layout.format(event)));
    if (layout.ignoresThrowable()) {
        String[] s = event.getThrowableStrRep();
        if (s != null) {
            int len = s.length;
            for (int i = 0; i < len; i++) {
                this.qw.write(s[i]);
                this.qw.write(Layout.LINE_SEP);
            }
        }
    }
    if (this.immediateFlush) {
        this.qw.flush();
    }
}
