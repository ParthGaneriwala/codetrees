private static Map<String, Material> parseMtlFile(File mtlFileName, GraphicModel model) {
    Scanner mtlFile = getScannerFromFile(mtlFileName);
    Map<String, Material> materials = new HashMap<String, Material>();
    Material currentMaterial = null;
    // used for debugging
    int lineNum = 0;
    String line;
    while (mtlFile.hasNextLine()) {
        lineNum++;
        line = mtlFile.nextLine();
        line = line.trim();
        // Uses possessive quantifiers so it doesn't backtrack if it finds it.
        String floatExp = "[-+]?+\\d*+\\.?+\\d*+";
        // Vertex data
        if (line.matches("^newmtl\\s++\\S++")) {
            currentMaterial = getNewMaterial(line);
            materials.put(currentMaterial.getName(), currentMaterial);
        } else if (line.matches("^K[ads](?:\\s++" + floatExp + "){1,3}+")) {
            float[] rgbValue = parseLineReflectivity3f(line);
            switch(line.charAt(1)) {
                case 'a':
                    currentMaterial.setAmbientReflectivity(rgbValue);
                    break;
                case 'd':
                    currentMaterial.setDifuseReflectivity(rgbValue);
                    break;
                case 's':
                    currentMaterial.setSpectralReflectivity(rgbValue);
                    break;
            }
        } else if (line.matches("^Ns\\s++" + floatExp)) {
            currentMaterial.setSpectralExponent(parseLine1f(line));
        } else if (line.matches("^map_Kd\\s++[-\\w\\s]*?\\s*+\\S++")) {
            File colorMap = new File(mtlFileName.getParentFile(), getColorMapName(line));
            if (!colorMap.exists() || !colorMap.canRead())
                throw new RuntimeException("[Error] ObjFileParser.parseMtlFile(): " + "file either not valid or not readable: " + colorMap.getPath());
            currentMaterial.setColorMapFile(colorMap);
        } else // Other common stuff to prevent throwing a lot of debug warnings
        if (line.startsWith("Ni ")) {
        // Ignore optical density
        } else if (line.startsWith("d ")) {
        // Ignore dissolve
        } else if (line.startsWith("illum ")) {
        // Ignore illumination model
        } else if (line.startsWith("Tf ")) {
        // Ignore transmission filter
        } else if (line.startsWith("#")) {
        // Ignore comments
        } else if (line.equals("")) {
        // Ignore blank lines
        } else {
            System.out.println("[Debug] Warning: line either not supported or malformed:");
            System.out.println("line " + lineNum + ": " + line);
        }
    }
    mtlFile.close();
    return materials;
}
