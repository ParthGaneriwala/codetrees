public static void main(String[] args) {
    for (int x = 0; x < GameState.mapDimension; x++) {
        for (int y = 0; y < GameState.mapDimension; y++) {
            new Position(x, y, new Terrain(TerrainType.GRASS));
        }
    }
    Item i = new Pizza();
    Player p = new Player(1);
    UnitFactory uf = new UnitFactory(p);
    Position start = Position.getPosition(1, 1);
    start.setItem(i);
    Army a1 = uf.createBuilder();
    Location.bind(a1, start);
    Army a2 = uf.createBuilder();
    Location.bind(a2, start);
    Army a3 = uf.createBuilder();
    Location.bind(a3, start);
    GameFlowControl.initialize(p);
    AcceptableActionBuffer aab = AcceptableActionBuffer.getInstance();
    ControllerProducer cp = ControllerProducer.getInstance();
    cp.produceAction(ActionType.SELECTNEXTUNIT);
    cp.produceAction(ActionType.PICKUPITEM);
    cp.produceAction(ActionType.USEITEM);
    cp.produceAction(ActionType.USEITEM);
    cp.produceAction(ActionType.USEITEM);
    cp.produceAction(ActionType.USEITEM);
    cp.produceAction(ActionType.DROPITEM);
    cp.produceAction(ActionType.SELECTNEXTUNIT);
    cp.produceAction(ActionType.PICKUPITEM);
    cp.produceAction(ActionType.USEITEM);
    cp.produceAction(ActionType.USEITEM);
    cp.produceAction(ActionType.USEITEM);
    cp.produceAction(ActionType.USEITEM);
    cp.produceAction(ActionType.USEITEM);
    ModelConsumer.initialize();
    System.out.println(aab);
}
