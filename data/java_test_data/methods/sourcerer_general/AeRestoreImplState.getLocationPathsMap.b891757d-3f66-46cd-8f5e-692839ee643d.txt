protected Map getLocationPathsMap() throws AeBusinessProcessException {
    if (mLocationPathsMap == null) {
        Map pathsToElements = new HashMap();
        Map elementsToPaths = new HashMap();
        // Get all nodes that have a locationId attribute.
        List nodes;
        try {
            // $NON-NLS-1$
            nodes = selectNodes(getDocument(), "//@" + STATE_LOCATIONID);
        } catch (AeException e) {
            // $NON-NLS-1$
            throw new AeBusinessProcessException(AeMessages.getString("AeRestoreImplState.ERROR_6"), e);
        }
        // Map location ids to elements in the state document.
        for (Iterator i = nodes.iterator(); i.hasNext(); ) {
            Attr attr = (Attr) i.next();
            Element element = attr.getOwnerElement();
            // elsewhere.
            if (isStateElement(element)) {
                int locationId = Integer.parseInt(attr.getValue());
                String locationPath = getProcess().getLocationPath(locationId);
                // nodes again for location paths
                if (locationPath != null) {
                    pathsToElements.put(locationPath, element);
                    elementsToPaths.put(element, locationPath);
                }
            }
        }
        // Get all nodes that have a locationPath attribute.
        try {
            // $NON-NLS-1$
            nodes = selectNodes(getDocument(), "//@" + STATE_LOC);
        } catch (AeException e) {
            // $NON-NLS-1$
            throw new AeBusinessProcessException(AeMessages.getString("AeRestoreImplState.ERROR_1"), e);
        }
        // Map location paths to elements in the state document.
        for (Iterator i = nodes.iterator(); i.hasNext(); ) {
            Attr attr = (Attr) i.next();
            Element element = attr.getOwnerElement();
            // appear elsewhere.
            if (isStateElement(element)) {
                String locationPath = attr.getValue();
                // parent node.
                if (// $NON-NLS-1$
                !locationPath.startsWith("/")) {
                    Element parent = (Element) element.getParentNode();
                    String parentPath = (String) elementsToPaths.get(parent);
                    // $NON-NLS-1$
                    locationPath = parentPath + "/" + locationPath;
                }
                pathsToElements.put(locationPath, element);
                elementsToPaths.put(element, locationPath);
            }
        }
        mLocationPathsMap = pathsToElements;
    }
    return mLocationPathsMap;
}
