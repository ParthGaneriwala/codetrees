public static void scaleDownImage(File inImgFile, int inMaxDimension, File inDestFile, ImageFormat inDestFormat, float inCompressionQuality) {
    long startTime = System.currentTimeMillis();
    try {
        FileSeekableStream stream = null;
        try {
            // PlanarImage image = JAI.create("fileload", inImgFile.getPath());
            stream = new FileSeekableStream(inImgFile);
            // BufferedImage image = ImageIO.read(fss);
            PlanarImage image = JAI.create("stream", stream);
            long readTime = System.currentTimeMillis();
            double scale = (float) inMaxDimension / Math.max(image.getWidth(), image.getHeight());
            if (scale < 1.0) {
                // ParameterBlock scale_pb = new ParameterBlock();
                // scale_pb.addSource(pi).add(scale);//.add(scale);
                // RenderedOp thumbImage = JAI.create("SubsampleAverage", scale_pb);
                image = SubsampleAverageDescriptor.create(image, scale, scale, null);
                // Interpolation interpolation = Interpolation.getInstance(Interpolation.INTERP_NEAREST);
                // thumbImage = ScaleDescriptor.create(thumbImage, (float)scale * 10, (float)scale * 10, 0f, 0f, interpolation, null);
                // String[] formatNames = ImageIO.getWriterFormatNames();
                long opTime = System.currentTimeMillis();
            }
            // ImageIO.write(thumbImage, inDestFormat.getFileExtension(), inDestFile);
            if (inDestFormat == ImageFormat.JPEG) {
                Iterator<ImageWriter> writerIter = ImageIO.getImageWritersBySuffix(inDestFormat.getFileExtension());
                ImageWriteParam param = new JPEGImageWriteParam(Locale.getDefault());
                param.setCompressionMode(ImageWriteParam.MODE_EXPLICIT);
                param.setCompressionQuality(inCompressionQuality);
                ImageWriter writer = writerIter.next();
                IIOMetadata metadata = writer.getDefaultImageMetadata(new ImageTypeSpecifier(image), param);
                ImageOutputStream outputStream = new FileImageOutputStream(inDestFile);
                writer.setOutput(outputStream);
                writer.write(metadata, new IIOImage(image, null, metadata), param);
                writer.dispose();
                outputStream.close();
            } else {
                ImageIO.write(image, inDestFormat.getFileExtension(), inDestFile);
            }
            long writeTime = System.currentTimeMillis();
        // System.out.println("Scale timing [read,op,write,total] (ms): "
        // + (readTime - startTime) + ", " + (opTime - readTime)
        // + ", " + (writeTime - opTime) + ", " + (System.currentTimeMillis() - startTime));
        } finally {
            if (stream != null)
                stream.close();
        }
    } catch (IOException e) {
        throw new RuntimeException(e);
    }
}
