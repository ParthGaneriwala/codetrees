public void endTransformingElement(String uri, String name, String raw) throws SAXException, ProcessingException {
    if (name.equals(ELEMENT_SENDMAIL)) {
        if (this.getLogger().isInfoEnabled()) {
            this.getLogger().info("Mail contents- Subject: " + this.subject + "\n" + "Body: " + this.body);
        }
        this.sendMail();
    } else if (name.equals(ELEMENT_SMTPHOST)) {
        this.mailHost = this.endTextRecording();
        this.mode = MODE_NONE;
    } else if (name.equals(ELEMENT_MAILFROM)) {
        this.fromAddress = this.endTextRecording();
        this.mode = MODE_NONE;
    } else if (name.equals(ELEMENT_MAILTO)) {
        this.toAddresses.add(this.endTextRecording());
        this.mode = MODE_NONE;
    } else if (name.equals(ELEMENT_MAILSUBJECT)) {
        String strSubject = this.endTextRecording();
        if (strSubject != null) {
            this.subject = strSubject;
        } else {
            this.getLogger().debug("Mail-Subject not available");
        }
        this.mode = MODE_NONE;
    } else if (name.equals(ELEMENT_ATTACHMENT)) {
        this.attachments.add(this.attachmentDescriptor.copy());
        this.attachmentDescriptor = null;
        this.mode = MODE_NONE;
    } else if (name.equals(ELEMENT_ATTACHMENT_CONTENT)) {
        this.attachmentDescriptor.setContent(this.endSerializedXMLRecording());
        this.mode = MODE_NONE;
    } else if (name.equals(ELEMENT_MAILBODY)) {
        String strB = null;
        try {
            if (this.bodyMimeType.equals("text/xml")) {
                strB = this.endSerializedXMLRecording();
            } else {
                strB = this.endTextRecording();
            }
        } catch (Exception e) {
            if (this.getLogger().isDebugEnabled()) {
                this.getLogger().debug("No Body as String in config-file available");
            }
        }
        if (strB != null) {
            this.body = strB;
        }
        this.mode = MODE_NONE;
    } else {
        throw new SAXException("Unknown element " + name);
    }
}
