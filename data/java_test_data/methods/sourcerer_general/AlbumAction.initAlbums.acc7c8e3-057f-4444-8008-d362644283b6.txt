public ActionForward initAlbums(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse resqonse) {
    if (!isLoggedIn(request)) {
        return mapping.findForward(ForwardConstants.INDEX);
    }
    SessionContainer sessionContainer = getSessionContainer(request);
    Customer customer = sessionContainer.getCustomer();
    Customer customer1 = customerService.findByEmail(customer.getEmail());
    List<Album> allAlbums = customer1.getAlbums();
    // Customer customer = existingContainer.getCustomer();
    // Customer customer1 = customerService.findByEmail(customer.getEmail());
    // int count = addressService.findAddressesCountByCustomerId(customer.getId());
    String srcImg = request.getParameter("srcImg");
    String productNo = request.getParameter("productNo");
    request.setAttribute("srcImg", srcImg);
    request.setAttribute("productNo", productNo);
    request.setAttribute("allAlbums", allAlbums);
    // List<Address> allAddress = addressService.findAddresssesByStartRowAndEndRow(customer.getId(),
    // pager.getOffset(), pager.getPageRecordSize());
    // request.setAttribute("allAddress", allAddress);
    String type = request.getParameter("type");
    if ("01".equals(type)) {
        // 抱枕
        Product product = productService.findById(Integer.parseInt(productNo));
        request.setAttribute("product", product);
        return mapping.findForward(ForwardConstants.CREATION1);
    } else if ("02".equals(type)) {
        // 拼图
        Product product = productService.findById(Integer.parseInt(productNo));
        request.setAttribute("product", product);
        return mapping.findForward(ForwardConstants.CREATION2);
    } else if ("03".equals(type)) {
        // 水晶/娜米拉
        Product product = productService.findById(Integer.parseInt(productNo));
        request.setAttribute("product", product);
        return mapping.findForward(ForwardConstants.CREATION3);
    } else if ("04".equals(type)) {
        // 魔方
        Product product = productService.findById(Integer.parseInt(productNo));
        request.setAttribute("product", product);
        return mapping.findForward(ForwardConstants.CREATION4);
    } else if ("05".equals(type)) {
        // 绚彩水晶
        Product product = productService.findById(Integer.parseInt(productNo));
        request.setAttribute("product", product);
        if ("33".equals(productNo) || "34".equals(productNo)) {
            return mapping.findForward("shuijing3");
        }
        return mapping.findForward(ForwardConstants.CREATION5);
    } else if ("06".equals(type)) {
        // 绚彩水晶——艺术钢琴
        Product product = productService.findById(Integer.parseInt(productNo));
        request.setAttribute("product", product);
        return mapping.findForward(ForwardConstants.CREATION6);
    } else if ("hzj".equals(type)) {
        // 化状镜
        Product product = productService.findById(Integer.parseInt(productNo));
        request.setAttribute("product", product);
        if ("42".equals(productNo)) {
            return mapping.findForward("hzj2");
        }
        return mapping.findForward(ForwardConstants.CREATION_HZJ);
    } else if ("shubiao".equals(type)) {
        // 鼠标垫
        Product product = productService.findById(Integer.parseInt(productNo));
        request.setAttribute("product", product);
        return mapping.findForward(ForwardConstants.CREATION_SB);
    } else if ("yundsh".equals(type)) {
        // 运动水壶
        Product product = productService.findById(Integer.parseInt(productNo));
        request.setAttribute("product", product);
        return mapping.findForward(ForwardConstants.CREATION_YUNDSH);
    } else if ("gxhbd".equals(type)) {
        // 个性环保袋
        Product product = productService.findById(Integer.parseInt(productNo));
        request.setAttribute("product", product);
        if ("49".equals(productNo)) {
            return mapping.findForward(ForwardConstants.CREATION_GXHBD1);
        }
        if ("52".equals(productNo)) {
            return mapping.findForward(ForwardConstants.CREATION_GXHBD2);
        }
        if ("50".equals(productNo)) {
            return mapping.findForward(ForwardConstants.CREATION_GXHBD4);
        }
        if ("53".equals(productNo)) {
            return mapping.findForward(ForwardConstants.CREATION_GXHBD8);
        }
        if ("51".equals(productNo)) {
            return mapping.findForward(ForwardConstants.CREATION_GXHBD9);
        }
        if ("54".equals(productNo)) {
            return mapping.findForward(ForwardConstants.CREATION_GXHBD18);
        }
    } else if ("bxtie".equals(type)) {
        Product product = productService.findById(Integer.parseInt(productNo));
        request.setAttribute("product", product);
        return mapping.findForward(ForwardConstants.CREATION_BXTIE);
    }
    return mapping.findForward(ForwardConstants.SUCCESS);
}
