protected void initComponents() {
    LocalListener listener = new LocalListener(this);
    TableLayout layout = new TableLayout(new double[][] { { 5, TableLayout.PREFERRED, 5, TableLayout.PREFERRED, 5, TableLayout.PREFERRED, 5 }, { 0, TableLayout.FILL, 5 } });
    player1Panel = new JPanel(layout);
    player1Panel.setOpaque(false);
    TitledBorder slot1_border = new TitledBorder("Slot1");
    slot1_border.setTitleColor(Color.WHITE);
    player1Panel.setBorder(slot1_border);
    player1TypeBoxModel = new DefaultComboBoxModel(new String[] { "Human", "Computer" });
    player1TypeBox = new JComboBox(player1TypeBoxModel);
    player1TypeBox.setEnabled(false);
    player1Panel.add(player1TypeBox, "1,1");
    player1NameBoxModel = new DefaultComboBoxModel(new String[] { Core.pref.get("player.name", "Player1") });
    player1NameBox = new JComboBox(player1NameBoxModel);
    player1NameBox.setEditable(true);
    player1NameBox.addItemListener(listener);
    player1Panel.add(player1NameBox, "3,1");
    player1ColorButton = new JButton();
    player1ColorButton.setBackground(new Color(Core.pref.getInt("player.color", 255)));
    player1ColorButton.setActionCommand("$b_color1");
    player1ColorButton.addActionListener(listener);
    player1Panel.add(player1ColorButton, "5,1");
    add(player1Panel, "1,1 , 5,1");
    player2Panel = new JPanel(layout);
    player2Panel.setOpaque(false);
    TitledBorder slot2_border = new TitledBorder("Slot2");
    slot2_border.setTitleColor(Color.WHITE);
    player2Panel.setBorder(slot2_border);
    player2TypeBoxModel = new DefaultComboBoxModel(new String[] { "Human", "Computer" });
    player2TypeBoxModel.setSelectedItem("Computer");
    player2TypeBox = new JComboBox(player2TypeBoxModel);
    player2TypeBox.setEnabled(false);
    player2Panel.add(player2TypeBox, "1,1");
    player2NameBoxModel = new DefaultComboBoxModel();
    for (Player p : PlayerManager.getPlayers(PlayerType.COMPUTER)) {
        player2NameBoxModel.addElement(p.getName());
    }
    player2NameBox = new JComboBox(player2NameBoxModel);
    player2NameBox.addItemListener(listener);
    player2Panel.add(player2NameBox, "3,1");
    player2ColorButton = new JButton();
    player2ColorButton.setBackground(new Color(Core.pref.getInt("computer.color", -65536)));
    player2ColorButton.setActionCommand("$b_color2");
    player2ColorButton.addActionListener(listener);
    player2Panel.add(player2ColorButton, "5,1");
    add(player2Panel, "1,3 , 5,3");
    gamePanel = new JPanel(new TableLayout(new double[][] { { 5, TableLayout.PREFERRED, 5 }, { 0, TableLayout.PREFERRED, 5 } }));
    gamePanel.setOpaque(false);
    TitledBorder game_border = new TitledBorder("Game");
    game_border.setTitleColor(Color.WHITE);
    gamePanel.setBorder(game_border);
    JLabel infoLabel = new JLabel("<html><font color=#ffffff>comming soon...</font></html>");
    gamePanel.add(infoLabel, "1,1");
    add(gamePanel, "1,5 , 5,5");
    Core.pref.addPreferenceChangeListener(new PreferenceChangeListener() {

        @Override
        public void preferenceChange(PreferenceChangeEvent evt) {
            if ("player.color".equals(evt.getKey().toString())) {
                player1ColorButton.setBackground(new Color(Core.pref.getInt("player.color", 255)));
            } else if ("computer.color".equals(evt.getKey().toString())) {
                player2ColorButton.setBackground(new Color(Core.pref.getInt("computer.color", -65536)));
            }
        }
    });
    backButton = new JButton("Back");
    backButton.setActionCommand("$b_back");
    backButton.addActionListener(listener);
    add(backButton, "3,7");
    startButton = new JButton("Start");
    startButton.setActionCommand("$b_start");
    startButton.addActionListener(listener);
    add(startButton, "5,7");
}
