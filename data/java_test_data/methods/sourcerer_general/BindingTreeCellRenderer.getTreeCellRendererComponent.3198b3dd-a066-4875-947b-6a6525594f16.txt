public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) {
    Object nodeUserObject = ((DefaultMutableTreeNode) value).getUserObject();
    Component toReturn = this.defaultTreeCellRenderer.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);
    if (nodeUserObject instanceof PropertyChainModel) {
        PropertyChainModel propertyChainModel = (PropertyChainModel) nodeUserObject;
        String propertyRendering = this.owlEditorKit.getModelManager().getRendering(propertyChainModel.getProperty());
        String facetRendering = propertyChainModel.getFacet() == null ? "" : "[" + this.owlEditorKit.getModelManager().getRendering(propertyChainModel.getFacet()) + "]";
        String iconName = propertyChainModel.getProperty() instanceof OWLObjectProperty ? "property.object.png" : "property.data.png";
        this.defaultTreeCellRenderer.setOpenIcon(new ImageIcon(this.getClass().getClassLoader().getResource(iconName)));
        this.defaultTreeCellRenderer.setClosedIcon(new ImageIcon(this.getClass().getClassLoader().getResource(iconName)));
        this.defaultTreeCellRenderer.setLeafIcon(new ImageIcon(this.getClass().getClassLoader().getResource(iconName)));
        toReturn = this.defaultTreeCellRenderer.getTreeCellRendererComponent(tree, propertyRendering + facetRendering, selected, expanded, leaf, row, hasFocus);
        this.defaultTreeCellRenderer.setOpenIcon(this.defaultTreeCellRenderer.getDefaultOpenIcon());
        this.defaultTreeCellRenderer.setClosedIcon(this.defaultTreeCellRenderer.getDefaultClosedIcon());
        this.defaultTreeCellRenderer.setLeafIcon(this.defaultTreeCellRenderer.getDefaultLeafIcon());
    } else if (((DefaultMutableTreeNode) value).isRoot()) {
        String iconName = "binding.jpg";
        this.defaultTreeCellRenderer.setOpenIcon(new ImageIcon(this.getClass().getClassLoader().getResource(iconName)));
        this.defaultTreeCellRenderer.setClosedIcon(new ImageIcon(this.getClass().getClassLoader().getResource(iconName)));
        this.defaultTreeCellRenderer.setLeafIcon(new ImageIcon(this.getClass().getClassLoader().getResource(iconName)));
        toReturn = this.defaultTreeCellRenderer.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);
        this.defaultTreeCellRenderer.setOpenIcon(this.defaultTreeCellRenderer.getDefaultOpenIcon());
        this.defaultTreeCellRenderer.setClosedIcon(this.defaultTreeCellRenderer.getDefaultClosedIcon());
        this.defaultTreeCellRenderer.setLeafIcon(this.defaultTreeCellRenderer.getDefaultLeafIcon());
    } else {
        // Variable
        String iconName = "variable.jpg";
        this.defaultTreeCellRenderer.setOpenIcon(new ImageIcon(this.getClass().getClassLoader().getResource(iconName)));
        this.defaultTreeCellRenderer.setClosedIcon(new ImageIcon(this.getClass().getClassLoader().getResource(iconName)));
        this.defaultTreeCellRenderer.setLeafIcon(new ImageIcon(this.getClass().getClassLoader().getResource(iconName)));
        toReturn = this.defaultTreeCellRenderer.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus);
        this.defaultTreeCellRenderer.setOpenIcon(this.defaultTreeCellRenderer.getDefaultOpenIcon());
        this.defaultTreeCellRenderer.setClosedIcon(this.defaultTreeCellRenderer.getDefaultClosedIcon());
        this.defaultTreeCellRenderer.setLeafIcon(this.defaultTreeCellRenderer.getDefaultLeafIcon());
    }
    return toReturn;
}
