public void actionPerformed(ActionEvent e) {
    if (e.getSource() == quickstart || e.getSource() == quickstart2) {
        logics.startBrowser("http://www.twingate.nl");
    } else if (e.getSource() == submit) {
        try {
            model.login(username.getText(), password.getText());
        } catch (AuthenticationException ex) {
            username.setText("Wrong username");
            password.setText("or Wrong password");
        }
        // Generate a new computerID since there was no config file
        Random random = new Random();
        long r1 = random.nextLong();
        long r2 = random.nextLong();
        String hash1 = Long.toHexString(r1);
        String hash2 = Long.toHexString(r2);
        String hash = hash1 + hash2;
        model.setComputerID(hash);
        model.saveConfigfile();
        System.out.println("submit");
    } else if (e.getSource() == gocal) {
        logics.startBrowser("http://calendar.google.com");
    } else if (e.getSource() == makenew) {
        try {
            model.makeNewBackupCal();
            // If succeeded:
            if (model.existgBackupCal()) {
                // Update jLabel, remove button.
                accountstatus.setText("Success! gBackup ComputerID:" + model.getComputerID());
                accountstatus.setForeground(Color.GREEN);
                makenew.setVisible(false);
            }
        } catch (Exception ex) {
            accountstatus.setText("Failed to connect.");
        }
        System.out.println("makenew");
    }
}
