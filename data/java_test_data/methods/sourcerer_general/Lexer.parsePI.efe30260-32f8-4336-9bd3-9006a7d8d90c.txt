protected Node parsePI(int start) throws ParserException {
    boolean done;
    char ch;
    int state;
    Vector attributes;
    int code;
    done = false;
    state = 0;
    code = 0;
    attributes = new Vector();
    // 011112d
    while (!done) {
        ch = mPage.getCharacter(mCursor);
        switch(state) {
            case // prior to the question mark
            0:
                switch(ch) {
                    case // <?
                    '?':
                        code = mCursor.getPosition();
                        attributes.addElement(new PageAttribute(mPage, start + 1, code, -1, -1, (char) 0));
                        state = 1;
                        break;
                    // case '>': // <>
                    default:
                        done = true;
                        break;
                }
                break;
            case // prior to the closing question mark
            1:
                switch(ch) {
                    // <?x\0
                    case Page.EOF:
                    case // <?x>
                    '>':
                        done = true;
                        break;
                    case '\'':
                    case // <?..."
                    '"':
                        state = ch;
                        break;
                    case // <?...?
                    '?':
                        state = 2;
                        break;
                    default:
                        // <?...x
                        break;
                }
                break;
            case 2:
                switch(ch) {
                    case // <?x..?\0
                    Page.EOF:
                        done = true;
                        break;
                    case '>':
                        state = 3;
                        done = true;
                        break;
                    default:
                        // <?...?x
                        state = 1;
                        break;
                }
                break;
            case '"':
                switch(ch) {
                    case // <?x.."\0
                    Page.EOF:
                        done = true;
                        break;
                    case '"':
                        state = 1;
                        break;
                    default:
                        // <?...'.x
                        break;
                }
                break;
            case '\'':
                switch(ch) {
                    case // <?x..'\0
                    Page.EOF:
                        done = true;
                        break;
                    case '\'':
                        state = 1;
                        break;
                    default:
                        // <?..."..x
                        break;
                }
                break;
            default:
                throw new IllegalStateException("how the fuck did we get in state " + state);
        }
    }
    if (// normal exit
    3 == state) {
        if (0 != code) {
            // reuse state
            state = mCursor.getPosition() - 2;
            attributes.addElement(new PageAttribute(mPage, code, state, -1, -1, (char) 0));
            attributes.addElement(new PageAttribute(mPage, state, state + 1, -1, -1, (char) 0));
        } else
            throw new IllegalStateException("processing instruction with no content");
    } else
        // hmmm, true?
        return (parseString(start, true));
    return (makeTag(start, mCursor.getPosition(), attributes));
}
