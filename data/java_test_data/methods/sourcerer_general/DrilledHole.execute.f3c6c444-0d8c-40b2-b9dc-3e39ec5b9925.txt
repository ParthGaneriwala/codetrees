public void execute(MillingMachine mill) throws MillingException {
    if (displayOnly)
        return;
    boolean drillWasOn = true;
    try {
        // Make sure the vacuum is on
        if (!mill.isVacuumRelay()) {
            mill.setVacuumRelay(true);
        }
        // Drill the hole
        // Raise Z and Move to hole location
        mill.moveTo(xpos, ypos, mill.getZSafe());
        mill.setXHold(true);
        mill.setYHold(true);
        if (!mill.isDrillRelay()) {
            drillWasOn = false;
            // turn on drill
            mill.setDrillRelay(true);
        }
        // Position the drill
        mill.moveTo(xpos, ypos, 0);
        try {
            // let it settle
            Thread.sleep(50);
        } catch (InterruptedException e) {
        // ignore the exception
        }
        int passDepth = tool.getMaxDepth();
        if (passDepth == 0 || passDepth > depth) {
            passDepth = depth;
        }
        int total = 0;
        do {
            total += passDepth;
            // max it at the depth
            total = total > depth ? depth : total;
            // Drill it
            mill.moveOffset(0, 0, total);
            // remove drill
            mill.moveOffset(0, 0, 0 - total);
        } while (total < depth);
        mill.setXHold(false);
        mill.setYHold(false);
        if (!drillWasOn) {
            // turn off drill
            mill.setDrillRelay(false);
        }
        complete = true;
    } catch (MillingException e) {
        // Fail safe by turning the motors off for an error
        mill.setDrillRelay(false);
        mill.setVacuumRelay(false);
        // let the caller deal with the issues.
        throw e;
    }
}
