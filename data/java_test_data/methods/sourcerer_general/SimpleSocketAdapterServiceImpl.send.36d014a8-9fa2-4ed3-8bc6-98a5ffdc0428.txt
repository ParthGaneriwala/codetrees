public String send(String inputMessage) throws Exception {
    Socket socket = null;
    InputStream inputStream = null;
    OutputStream outputStream = null;
    ByteArrayOutputStream byteArrayOutputStream = null;
    BufferedOutputStream bufferedOutputStream = null;
    String receivedMessage = null;
    try {
        // connect to server
        socket = new Socket(host, port);
        // setup stream
        inputStream = socket.getInputStream();
        outputStream = socket.getOutputStream();
        // send message
        outputStream.write(inputMessage.getBytes(charsetName));
        outputStream.flush();
        if (log.isDebugEnabled()) {
            StringBuilder sb = new StringBuilder();
            sb.append("sent message: [").append(inputMessage).append("]");
            log.debug(sb.toString());
        }
        int readSize = 0;
        int totalReadSize = 0;
        byte[] messageLengthBytes = new byte[MESSAGE_LENGTH_FIELD_LENGTH];
        inputStream.read(messageLengthBytes, 0, MESSAGE_LENGTH_FIELD_LENGTH);
        String messageLengthString = new String(messageLengthBytes, charsetName);
        totalReadSize += MESSAGE_LENGTH_FIELD_LENGTH;
        int messageLength = Integer.parseInt(messageLengthString);
        // read input stream
        byte[] buffer = new byte[8 * 1024];
        byteArrayOutputStream = new ByteArrayOutputStream();
        bufferedOutputStream = new BufferedOutputStream(byteArrayOutputStream);
        while (messageLength > totalReadSize && (readSize = inputStream.read(buffer)) != -1) {
            bufferedOutputStream.write(buffer, 0, readSize);
            bufferedOutputStream.flush();
            totalReadSize += readSize;
            if (log.isDebugEnabled()) {
                StringBuilder sb = new StringBuilder();
                sb.append("read size: ").append(readSize);
                sb.append(", ");
                sb.append("total read size: ").append(totalReadSize);
                sb.append(", ");
                sb.append("message length: ").append(messageLength);
                log.debug(sb.toString());
            }
        }
        byte[] remainsMessageBytes = byteArrayOutputStream.toByteArray();
        byte[] receivedMessageBytes = new byte[messageLengthBytes.length + remainsMessageBytes.length];
        System.arraycopy(messageLengthBytes, 0, receivedMessageBytes, 0, messageLengthBytes.length);
        System.arraycopy(remainsMessageBytes, 0, receivedMessageBytes, messageLengthBytes.length, remainsMessageBytes.length);
        receivedMessage = new String(receivedMessageBytes, charsetName);
        if (log.isDebugEnabled()) {
            StringBuilder sb = new StringBuilder();
            sb.append("received message: [").append(receivedMessage).append("]");
            log.debug(sb.toString());
        }
    } catch (UnknownHostException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    } finally {
        if (byteArrayOutputStream != null)
            byteArrayOutputStream.close();
        if (bufferedOutputStream != null)
            bufferedOutputStream.close();
        if (inputStream != null)
            inputStream.close();
        if (outputStream != null)
            outputStream.close();
        if (socket != null)
            socket.close();
    }
    return receivedMessage;
}
