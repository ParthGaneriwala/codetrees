private void displayNextToScreen(int n, Animation animation) {
    String tag = "displayNextToScreen";
    // �ж� mCurrentLine����ʲôλ�ã�������ʾ�᲻�ᳬ��mMyLines��������
    // ��ʱ���浱ǰ��
    int tempCurrentLine = mCurrentLine;
    // ����ж����ڼ����е�����
    int lastLineIndex = mMyLines.size() - 1;
    // δ����ʼ��
    int futureLine = tempCurrentLine + n;
    // 2�����mCurrentLineԽ��mMyLines��������,�����ĵ����������һҳ����ȡ�¸�����
    if (futureLine + mLinesOfOneScreen > lastLineIndex) {
        if (!mEndOfDoc) {
            // �����ĵ������
            // ��Ҫ�����ĵ�
            Log.d(tag, "read new buffer when skip...");
            readNextBuffer();
            analysisDisplayBuffer();
            // �ӵ�N�п�ʼ��ʾ
            mCurrentLine = n;
            lastLineIndex = mMyLines.size() - 1;
            // ��Ļ�����ʼƫ����
            mStartOffset = mMyLines.get(mCurrentLine - 1).offset;
            // ��Ļ�������ʾ�����е�����
            mDataStartLocation = mMyLines.get(mCurrentLine - 1).beforeLineLength;
            if (lastLineIndex + 1 < mLinesOfOneScreen) {
                // 
                mEndOffset = mMyLines.get(lastLineIndex).offset;
                mDataEndLocation = mMyLines.get(lastLineIndex).beforeLineLength;
            } else {
                int i = mCurrentLine + mLinesOfOneScreen;
                if (i >= mMyLines.size()) {
                    i = mMyLines.size() - 1;
                }
                mEndOffset = mMyLines.get(i).offset;
                mDataEndLocation = mMyLines.get(i).beforeLineLength;
            }
            Log.d(tag, "futureLine+mLinesOfOneScreen > lastLineIndex !mEndOfDoc ");
            Log.d(tag, "mDataStartLocation is :" + mDataStartLocation);
            Log.d(tag, "mDataEndLocation is :" + mDataEndLocation);
            setData(mDataStartLocation, mDataEndLocation, animation);
            return;
        }
        if (mEndOfDoc) {
            // �������һ���ĵ�
            if (lastLineIndex <= mLinesOfOneScreen) {
                if (mCurrentLine == 0) {
                    mStartOffset = mMyLines.get(mCurrentLine).offset;
                } else {
                    mStartOffset = mMyLines.get(mCurrentLine).offset;
                    mDataStartLocation = mMyLines.get(mCurrentLine).beforeLineLength;
                }
                mEndOffset = mMyLines.get(lastLineIndex).offset;
                mDataEndLocation = mMyLines.get(lastLineIndex).beforeLineLength;
                Log.d(tag, "lastLineIndex<=mLinesOfOneScreen mEndOfDoc ");
                Log.d(tag, "mDataStartLocation is :" + mDataStartLocation);
                Log.d(tag, "mDataEndLocation is :" + mDataEndLocation);
                setData(mDataStartLocation, mDataEndLocation, animation);
                return;
            } else {
                mStartOffset = mMyLines.get(mCurrentLine).offset;
                mDataStartLocation = mMyLines.get(mCurrentLine).beforeLineLength;
                mEndOffset = mMyLines.get(lastLineIndex).offset;
                mDataEndLocation = mMyLines.get(lastLineIndex).beforeLineLength;
                mCurrentLine = lastLineIndex - mLinesOfOneScreen;
                Log.d(tag, "  !(lastLineIndex<=mLinesOfOneScreen) mEndOfDoc ");
                Log.d(tag, "mDataStartLocation is :" + mDataStartLocation);
                Log.d(tag, "mDataEndLocation is :" + mDataEndLocation);
                setData(mDataStartLocation, mDataEndLocation, animation);
                return;
            }
        }
    }
    if (futureLine + mLinesOfOneScreen <= lastLineIndex) {
        mCurrentLine = futureLine;
        if (mCurrentLine == 0) {
            mStartOffset = mMyLines.get(mCurrentLine).offset;
            mDataStartLocation = mMyLines.get(mCurrentLine).beforeLineLength;
        } else {
            mStartOffset = mMyLines.get(mCurrentLine - 1).offset;
            mDataStartLocation = mMyLines.get(mCurrentLine - 1).beforeLineLength;
        }
        mEndOffset = mMyLines.get(futureLine + mLinesOfOneScreen).offset;
        mDataEndLocation = mMyLines.get(futureLine + mLinesOfOneScreen).beforeLineLength;
        Log.d(tag, "futureLine+mLinesOfOneScreen <= lastLineIndex ");
        Log.d(tag, "mDataStartLocation is :" + mDataStartLocation);
        Log.d(tag, "mDataEndLocation is :" + mDataEndLocation);
        setData(mDataStartLocation, mDataEndLocation, animation);
        return;
    }
// ��mMyLines������ȡ����ʼ�ж���ͽ�β�ж���
// ͨ����ʼ�ж���ͽ�β�ж����е�offsetȡ�������mDisplayBuffer��λ��
// ������ݵ�mScreenData������
}
