public void play() throws IOException {
    Scanner scan = new Scanner(System.in);
    System.out.println("-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-");
    System.out.println("      Welcome to the Knight's Tour Game");
    System.out.println("-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-");
    // print original empty grid
    b.print();
    System.out.println("Press q anytime you want to exit the game");
    System.out.println("Please enter where do you want to place the Knight. Ex: A4");
    String input = scan.next();
    firstPlay(input);
    printBoard();
    System.out.println("Please enter where you would like to move Knight");
    System.out.println("For possible moves type p\n");
    input = scan.next();
    // asks user for his next move and prints an update of grid every time a move is made
    while (!input.equals("q")) {
        if (input.equals("q")) {
            break;
        } else {
            if (input.equals("p")) {
                printPossMoves(n);
            } else {
                int x = Board.convertX(input);
                int y = Board.convertY(input);
                if (n.checkIfLegal(x, y) && grid[x][y] != true) {
                    // makes sure move is legal
                    grid[n.getX()][n.getY()] = true;
                    // b.placePiece(n.getX(), n.getY(), "X"); //mark the original cell with X
                    // move knight
                    n.move(x, y);
                    count += 1;
                // b.placePiece(x, y, "N"); //place knight at that cell
                } else {
                    System.out.println("Illegal Move try again!\n");
                }
                printBoard();
                if (count == 64) {
                    System.out.println("You won =*=");
                    break;
                }
                if (checkIfLost()) {
                    System.out.println("You Lost the game :@:@\nNo more possible moves");
                    break;
                }
            }
            System.out.println("Where do you want to move the Knight?\n");
            input = scan.next();
        }
    }
    // promotes the user to play again
    System.out.println("Would you like to play again?(y/n)");
    String input2 = scan.next();
    if (input2.equals("y")) {
        KnightGame game = new KnightGame();
        game.play();
    }
}
