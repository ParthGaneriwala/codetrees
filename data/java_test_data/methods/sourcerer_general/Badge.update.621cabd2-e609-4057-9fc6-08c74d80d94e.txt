public int update(Connection db, boolean override) throws SQLException {
    if (this.getId() == -1) {
        throw new SQLException("ID was not specified");
    }
    if (!isValid()) {
        return -1;
    }
    int resultCount = 0;
    StringBuffer sql = new StringBuffer();
    sql.append("UPDATE badge " + "SET " + "badge_category_id = ?,  " + "title = ?, " + "description = ?, " + "logo_id = ?, " + "email1 = ?, " + "email2 = ?, " + "email3 = ?, " + "business_phone = ?, " + "business_phone_ext = ?, " + "web_page = ?, " + "addrline1 = ?, " + "addrline2 = ?, " + "addrline3 = ?, " + "city = ?, " + "state = ?, " + "country = ?, " + "postalcode = ?, " + "latitude = ?, " + "longitude = ?, " + "enabled = ?, " + "modifiedby = ?, " + "modified = CURRENT_TIMESTAMP, " + "system_assigned = ?, " + "system_constant = ? " + "WHERE badge_id = ? ");
    if (!override) {
        sql.append("AND modified = ? ");
    }
    int i = 0;
    PreparedStatement pst = db.prepareStatement(sql.toString());
    DatabaseUtils.setInt(pst, ++i, categoryId);
    pst.setString(++i, title);
    pst.setString(++i, description);
    DatabaseUtils.setInt(pst, ++i, logoId);
    pst.setString(++i, email1);
    pst.setString(++i, email2);
    pst.setString(++i, email3);
    pst.setString(++i, businessPhone);
    pst.setString(++i, businessPhoneExt);
    pst.setString(++i, webPage);
    pst.setString(++i, addrline1);
    pst.setString(++i, addrline2);
    pst.setString(++i, addrline3);
    pst.setString(++i, city);
    pst.setString(++i, state);
    pst.setString(++i, country);
    pst.setString(++i, postalCode);
    DatabaseUtils.setDouble(pst, ++i, latitude);
    DatabaseUtils.setDouble(pst, ++i, longitude);
    pst.setBoolean(++i, enabled);
    pst.setInt(++i, this.getModifiedBy());
    pst.setBoolean(++i, systemAssigned);
    DatabaseUtils.setInt(pst, ++i, systemConstant);
    pst.setInt(++i, this.getId());
    if (!override) {
        pst.setTimestamp(++i, modified);
    }
    resultCount = pst.executeUpdate();
    pst.close();
    CacheUtils.invalidateValue(Constants.SYSTEM_BADGE_LIST_CACHE, id);
    return resultCount;
}
