public static CustomForm processForm(Node formNode) {
    // Each table in the form node is a "Group"
    Element formElement = (Element) formNode;
    // Populate the form object
    CustomForm form = new CustomForm();
    form.setName(formElement.getAttribute("name"));
    // Parse the tables which represent a group of fields
    NodeList tableNodes = formNode.getChildNodes();
    for (int tableI = 0; tableI < tableNodes.getLength(); tableI++) {
        // For each table, parse the rows
        Node tableNode = tableNodes.item(tableI);
        // There will be 1 group per table
        CustomFormGroup group = null;
        // Split the rows into groups and fields...
        NodeList rowNodes = tableNode.getChildNodes();
        for (int rowI = 0; rowI < rowNodes.getLength(); rowI++) {
            // For each row, parse the groups and fields
            Node rowNode = rowNodes.item(rowI);
            NodeList cellNodes = rowNode.getChildNodes();
            // Any number of fields should be found...
            CustomFormField field = null;
            for (int cellI = 0; cellI < cellNodes.getLength(); cellI++) {
                Node cellNode = cellNodes.item(cellI);
                Element cellElement = (Element) cellNode;
                String tag = cellElement.getTagName();
                // Check to see if there is a group row, represented by th
                if ("th".equals(tag)) {
                    group = new CustomFormGroup();
                    group.setName(cellNode.getTextContent());
                }
                // Construct a field object from each row's tds
                if ("td".equals(tag)) {
                    if (field == null) {
                        field = new CustomFormField();
                        field.setLabel(cellNode.getTextContent());
                    } else {
                    // TODO: parse the td
                    /*
              field.setName();
              field.setType();
              field.setRequired();
              field.setParameters();
              field.setAdditionalText();
              */
                    }
                }
            }
            if (field != null) {
                if (group == null) {
                    group = new CustomFormGroup();
                }
                group.add(field);
            }
        }
        if (group != null) {
            form.add(group);
        }
    }
    return form;
}
