private void fillHighscoreTable() {
    final TableLayout highscoreTable = (TableLayout) findViewById(R.id.highscore_table);
    final int numberOfRows = highscoreTable.getChildCount();
    // the first row is the header
    for (int entry = 1; entry < numberOfRows; entry++) {
        final String name = this.prefs.getString(PREFERENCES_NAME + entry, defaultName(entry));
        final int score = this.prefs.getInt(PREFERENCES_SCORE + entry, defaultScore(entry));
        final int platform = this.prefs.getInt(PREFERENCES_PLATFORM + entry, 0);
        final TableRow row = (TableRow) highscoreTable.getChildAt(entry);
        final EditText nameView = (EditText) row.getChildAt(1);
        final TextView scoreView = (TextView) row.getChildAt(2);
        final TextView platformView = (TextView) row.getChildAt(3);
        nameView.setText(name);
        scoreView.setText(Integer.toString(score));
        platformView.setText(Integer.toString(platform));
        nameView.setMaxEms(15);
        if (this.newScoreAt == entry) {
            nameView.setText("enter name");
            nameView.setSingleLine();
            nameView.requestFocus();
            nameView.setSelection(0, 10);
            this.newScoreInput = nameView;
        } else {
            nameView.setBackgroundColor(Color.rgb(255, 255, 255));
            nameView.setCursorVisible(false);
            nameView.setInputMethod(null);
        }
    }
}
