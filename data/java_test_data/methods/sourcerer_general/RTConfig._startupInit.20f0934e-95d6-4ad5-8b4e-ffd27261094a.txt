protected static synchronized void _startupInit(boolean allowChangeSystemProperties) {
    /* check init */
    if (_didStartupInit == 2) {
        // already initialized
        return;
    } else if (_didStartupInit == 1) {
        Print.logError("_startupInit' is already initializing!");
        return;
    }
    _didStartupInit = 1;
    /* System properties */
    Properties propMap = null;
    if (allowChangeSystemProperties) {
        try {
            propMap = System.getProperties();
        } catch (SecurityException se) {
            // SecurityException, AccessControlException
            Print.sysPrintln("ERROR: Attempting to call 'System.getProperties()': " + se);
        }
    } else {
        propMap = new Properties();
        for (Iterator i = RTKey.getRuntimeKeyIterator(); i.hasNext(); ) {
            String key = (String) i.next();
            try {
                String val = System.getProperty(key, null);
                if (val != null) {
                    propMap.setProperty(key, val);
                }
            } catch (SecurityException se) {
                // SecurityException, AccessControlException
                Print.sysPrintln("Attempting to get System property '" + key + "': " + se);
            }
        }
    }
    CFG_PROPERTIES[SYSTEM] = new RTProperties(propMap);
    /* environment variables */
    if (ENABLE_ENVIRONMENT_VARIABLES) {
        try {
            CFG_PROPERTIES[ENVIRONMENT] = new RTProperties(System.getenv());
        } catch (Throwable th) {
            // security error?
            CFG_PROPERTIES[ENVIRONMENT] = null;
        }
    }
    /* verbose? */
    if (hasProperty(RTKey.RT_VERBOSE, false)) {
        RTConfig.verbose = RTConfig.getBoolean(RTKey.RT_VERBOSE, false);
    } else if (hasProperty(RTKey.RT_QUIET, false)) {
        RTConfig.verbose = RTConfig.getBoolean(RTKey.RT_QUIET, false);
    }
    /* config file */
    _foundConfigFile = null;
    _foundConfigURL = RTConfig.getConfigURL();
    if (_foundConfigURL != null) {
        CFG_PROPERTIES[CONFIG_FILE] = new RTProperties(_foundConfigURL);
        if (RTConfig.verbose) {
            Print.logInfo("Found config file at " + _foundConfigURL);
        }
    } else {
        // String cfgDir = RTConfig.getFile(RTKey.CONFIG_FILE_DIR);
        // String cfgFile = RTConfig.getFile(RTKey.CONFIG_FILE);
        // must be non-null
        CFG_PROPERTIES[CONFIG_FILE] = new RTProperties();
        if (RTConfig.verbose) {
            Print.logWarn("No config file was found");
        }
    }
    CFG_PROPERTIES[CONFIG_FILE].setKeyReplacementMode(RTProperties.KEY_REPLACEMENT_GLOBAL);
    /* initialize http proxy */
    // http.proxyHost
    // http.proxyPort
    // http.nonProxyHosts
    String proxyHost = RTConfig.getString(RTKey.HTTP_PROXY_HOST);
    int proxyPort = RTConfig.getInt(RTKey.HTTP_PROXY_PORT);
    if ((proxyHost != null) && (proxyPort > 1024)) {
        String port = String.valueOf(proxyPort);
        // Properties sysProp = System.getProperties();
        // sysProp.put("proxySet" , "true");           // <  jdk 1.3
        // sysProp.put("proxyHost", proxyHost);        // <  jdk 1.3
        // sysProp.put("proxyPort", port);             // <  jdk 1.3
        // sysProp.put("http.proxyHost", proxyHost);   // >= jdk 1.3
        // sysProp.put("http.proxyPort", port);        // >= jdk 1.3
        // sysProp.put("firewallSet", "true");         // MS JVM
        // sysProp.put("firewallHost", proxyHost);     // MS JVM
        // sysProp.put("firewallPort", port);          // MS JVM
        // <  jdk 1.3
        System.setProperty("proxySet", "true");
        // <  jdk 1.3
        System.setProperty("proxyHost", proxyHost);
        // <  jdk 1.3
        System.setProperty("proxyPort", port);
        // >= jdk 1.3
        System.setProperty("http.proxyHost", proxyHost);
        // >= jdk 1.3
        System.setProperty("http.proxyPort", port);
        // MS JVM
        System.setProperty("firewallSet", "true");
        // MS JVM
        System.setProperty("firewallHost", proxyHost);
        // MS JVM
        System.setProperty("firewallPort", port);
    }
    /* URLConnection timeouts */
    // sun.net.client.defaultConnectTimeout
    // sun.net.client.defaultReadTimeout
    long urlConnectTimeout = RTConfig.getLong(RTKey.URL_CONNECT_TIMEOUT);
    if (urlConnectTimeout > 0) {
        String timeout = String.valueOf(urlConnectTimeout);
        // System.getProperties().put("sun.net.client.defaultConnectTimeout", timeout);
        System.setProperty("sun.net.client.defaultConnectTimeout", timeout);
    }
    long urlReadTimeout = RTConfig.getLong(RTKey.URL_READ_TIMEOUT);
    if (urlReadTimeout > 0) {
        String timeout = String.valueOf(urlReadTimeout);
        // System.getProperties().put("sun.net.client.defaultReadTimeout", timeout);
        System.setProperty("sun.net.client.defaultReadTimeout", timeout);
    }
    /* now initialized */
    _didStartupInit = 2;
    /* set all of the Print configuration */
    Print.initRTConfig();
}
