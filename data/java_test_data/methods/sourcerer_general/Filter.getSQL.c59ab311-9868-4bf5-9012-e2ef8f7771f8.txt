public String getSQL() {
    String seperator = " ";
    StringBuffer buffer = new StringBuffer();
    if (isRoot) {
        buffer.append("select * from posts ");
        if (!parents.isEmpty()) {
            buffer.append("where ");
        }
    } else {
        buffer.append("select ").append(output).append(" from posts where ");
        if (getID() != null) {
            buffer.append(seperator).append("id ").append(id);
            seperator = " and ";
        }
        if (getAuthor_post_id() != null) {
            buffer.append(seperator).append("author_post_id ").append(author_post_id);
            seperator = " and ";
        }
        if (getRefers_to_id() != null) {
            buffer.append(seperator).append("refers_to_id ").append(refers_to_id);
            seperator = " and ";
        }
        if (getType() != null) {
            buffer.append(seperator).append("type ").append(type);
            seperator = " and ";
        }
        if (getContent() != null) {
            buffer.append(seperator).append("content ").append(content.replace("=", "LIKE"));
            seperator = " and ";
        }
        if (getCreated_at() != null) {
            buffer.append(seperator).append("created_at ").append(created_at);
            seperator = " and ";
        }
    }
    for (Filter filter : parents) {
        String usedAs = filter.getUsed_as();
        if (usedAs == null) {
            usedAs = "id";
        }
        buffer.append(seperator).append(usedAs);
        buffer.append(" in (").append(filter.getSQL()).append(")");
        seperator = " and ";
    }
    if (getHaving() != null) {
        buffer.append(" group by ").append(output).append(" having ").append(having);
    }
    return buffer.toString();
}
