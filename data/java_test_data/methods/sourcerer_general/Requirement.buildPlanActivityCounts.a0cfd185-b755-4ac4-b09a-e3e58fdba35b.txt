public void buildPlanActivityCounts(Connection db) throws SQLException {
    planActivityCount = 0;
    planClosedCount = 0;
    planUpcomingCount = 0;
    planOverdueCount = 0;
    // Total count
    PreparedStatement pst = db.prepareStatement("SELECT COUNT(*) AS plan_count " + "FROM project_assignments " + "WHERE requirement_id = ? ");
    pst.setInt(1, id);
    ResultSet rs = pst.executeQuery();
    if (rs.next()) {
        planActivityCount = rs.getInt("plan_count");
    }
    rs.close();
    pst.close();
    // Complete-Closed count
    pst = db.prepareStatement("SELECT COUNT(*) AS plan_count " + "FROM project_assignments " + "WHERE requirement_id = ? " + "AND complete_date IS NOT NULL ");
    pst.setInt(1, id);
    rs = pst.executeQuery();
    if (rs.next()) {
        planClosedCount = rs.getInt("plan_count");
    }
    rs.close();
    pst.close();
    // Overdue count
    pst = db.prepareStatement("SELECT COUNT(*) AS reccount " + "FROM project_assignments " + "WHERE requirement_id = ? " + "AND complete_date IS NULL " + "AND due_date IS NOT NULL AND due_date < CURRENT_TIMESTAMP ");
    pst.setInt(1, id);
    rs = pst.executeQuery();
    if (rs.next()) {
        planOverdueCount = rs.getInt("reccount");
    }
    rs.close();
    pst.close();
    // Upcoming count
    pst = db.prepareStatement("SELECT count(*) AS reccount " + "FROM project_assignments " + "WHERE requirement_id = ? " + "AND complete_date IS NULL " + "AND ((due_date IS NOT NULL AND due_date >= CURRENT_TIMESTAMP) " + "     OR (due_date IS NULL)) ");
    pst.setInt(1, id);
    rs = pst.executeQuery();
    if (rs.next()) {
        planUpcomingCount = rs.getInt("reccount");
    }
    rs.close();
    pst.close();
}
