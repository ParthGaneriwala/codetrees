private void mapTree(Node currentGuiNode, QueryNode currentQueryNode) {
    if (currentQueryNode.isRelation()) {
        RelationNode relationNode = (RelationNode) currentQueryNode;
        GuiTreeNodeInfo nodeInfo = new GuiTreeNodeInfo(TreeImageResources.RELATION_IMAGE, relationNode.getRelationName() + " " + relationNode.getRelationAlias());
        // Seteo la info al nodo
        currentGuiNode.setInfo(nodeInfo);
    // Como es una relaci�n, no hay que seguir y termina la recursi�n (�nico caso base)
    } else if (currentQueryNode.isProjection()) {
        ProjectionNode projectionNode = (ProjectionNode) currentQueryNode;
        GuiTreeNodeInfo nodeInfo = new GuiTreeNodeInfo(TreeImageResources.PROJECTION_IMAGE, projectionNode.getProjectedFields().toString());
        // Seteo la info al nodo
        currentGuiNode.setInfo(nodeInfo);
        // Recursi�n con el nodo de abajo
        mapTree(currentGuiNode.addCenter(), projectionNode.getLowerNode());
    } else if (currentQueryNode.isSelection()) {
        SelectionNode selectionNode = (SelectionNode) currentQueryNode;
        GuiTreeNodeInfo nodeInfo = new GuiTreeNodeInfo(TreeImageResources.SELECTION_IMAGE, selectionNode.getCondition().toString());
        // Seteo la info al nodo
        currentGuiNode.setInfo(nodeInfo);
        // Recursi�n con el nodo de abajo
        mapTree(currentGuiNode.addCenter(), selectionNode.getLowerNode());
    } else if (currentQueryNode.isProduct()) {
        ProductNode productNode = (ProductNode) currentQueryNode;
        GuiTreeNodeInfo nodeInfo = new GuiTreeNodeInfo(TreeImageResources.PRODUCT_IMAGE, "");
        // Seteo la info al nodo
        currentGuiNode.setInfo(nodeInfo);
        // Recursi�n con el nodo de abajo a la izquierda
        mapTree(currentGuiNode.addLeft(), productNode.getLeftLowerNode());
        // Recursi�n con el nodo de abajo a la derecha
        mapTree(currentGuiNode.addRight(), productNode.getRightLowerNode());
    } else if (currentQueryNode.isNaturalJoin()) {
        NaturalJoinNode naturalJoinNode = (NaturalJoinNode) currentQueryNode;
        GuiTreeNodeInfo nodeInfo = new GuiTreeNodeInfo(TreeImageResources.JOIN_IMAGE, "");
        // Seteo la info al nodo
        currentGuiNode.setInfo(nodeInfo);
        // Recursi�n con el nodo de abajo a la izquierda
        mapTree(currentGuiNode.addLeft(), naturalJoinNode.getLeftLowerNode());
        // Recursi�n con el nodo de abajo a la derecha
        mapTree(currentGuiNode.addRight(), naturalJoinNode.getRightLowerNode());
    } else if (currentQueryNode.isJoin()) {
        JoinNode joinNode = (JoinNode) currentQueryNode;
        GuiTreeNodeInfo nodeInfo = new GuiTreeNodeInfo(TreeImageResources.JOIN_IMAGE, joinNode.getCondition().toString());
        // Seteo la info al nodo
        currentGuiNode.setInfo(nodeInfo);
        // Recursi�n con el nodo de abajo a la izquierda
        mapTree(currentGuiNode.addLeft(), joinNode.getLeftLowerNode());
        // Recursi�n con el nodo de abajo a la derecha
        mapTree(currentGuiNode.addRight(), joinNode.getRightLowerNode());
    }
}
