Table SYSTEM_SESSIONINFO(Session session) {
    Table t = sysTables[SYSTEM_SESSIONINFO];
    if (t == null) {
        t = createBlankTable(sysTableHsqlNames[SYSTEM_SESSIONINFO]);
        // not null
        addColumn(t, "KEY", CHARACTER_DATA);
        // not null
        addColumn(t, "VALUE", CHARACTER_DATA);
        HsqlName name = HsqlNameManager.newInfoSchemaObjectName(sysTableHsqlNames[SYSTEM_SESSIONINFO].name, false, SchemaObject.INDEX);
        t.createPrimaryKeyConstraint(name, new int[] { 0 }, true);
        return t;
    }
    PersistentStore store = session.sessionData.getRowStore(t);
    Object[] row;
    row = t.getEmptyRowData();
    row[0] = "SESSION ID";
    row[1] = String.valueOf(session.getId());
    t.insertSys(store, row);
    row = t.getEmptyRowData();
    row[0] = "AUTOCOMMIT";
    row[1] = session.isAutoCommit() ? Tokens.T_TRUE : Tokens.T_FALSE;
    t.insertSys(store, row);
    row = t.getEmptyRowData();
    row[0] = "USER";
    row[1] = session.getUsername();
    t.insertSys(store, row);
    row = t.getEmptyRowData();
    row[0] = "SESSION READONLY";
    row[1] = session.isReadOnlyDefault() ? Tokens.T_TRUE : Tokens.T_FALSE;
    t.insertSys(store, row);
    row = t.getEmptyRowData();
    row[0] = "DATABASE READONLY";
    row[1] = database.isReadOnly() ? Tokens.T_TRUE : Tokens.T_FALSE;
    t.insertSys(store, row);
    row = t.getEmptyRowData();
    row[0] = "DATABASE";
    row[1] = database.getURI();
    t.insertSys(store, row);
    row = t.getEmptyRowData();
    row[0] = "IDENTITY";
    row[1] = String.valueOf(session.getLastIdentity());
    t.insertSys(store, row);
    row = t.getEmptyRowData();
    row[0] = "CURRENT SCHEMA";
    row[1] = String.valueOf(session.getSchemaName(null));
    t.insertSys(store, row);
    return t;
}
