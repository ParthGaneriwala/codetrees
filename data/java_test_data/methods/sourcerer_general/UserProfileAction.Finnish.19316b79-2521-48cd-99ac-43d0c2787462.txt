public ActionForward Finnish(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    UserProfileDAO userDAO = new UserProfileDAO();
    DynaValidatorForm accountForm = (DynaValidatorForm) form;
    String id = (String) accountForm.get("username");
    if (userDAO.readById(id) != null) {
        request.setAttribute("message", "Username existed !");
        return mapping.findForward(EXIST);
    } else {
        try {
            UserProfileDTO userDTO = new UserProfileDTO();
            // copy from accountForm  into userDTO
            BeanUtils.copyProperties(userDTO, accountForm);
            userDTO.setDescription("");
            SubscriptionDTO subDTO = new SubscriptionDTO();
            subDTO.setSubscriptionID(Util.generateUUID());
            String SubscriptionType = accountForm.getString("cost");
            Calendar fromDate = Calendar.getInstance();
            Calendar toDate = (Calendar) fromDate.clone();
            if (SubscriptionType.equalsIgnoreCase("yearly")) {
                toDate.add(Calendar.YEAR, 1);
                subDTO.setCost(100);
            } else {
                toDate.add(Calendar.MONTH, 1);
                subDTO.setCost(10);
            }
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            subDTO.setFromDate(dateFormat.format(fromDate.getTime()));
            subDTO.setToDate(dateFormat.format(toDate.getTime()));
            subDTO.setCreditCard(accountForm.getString("cardNumber"));
            subDTO.setCreditCardType(accountForm.getString("cardType"));
            subDTO.setUser(userDTO);
            if (userDAO.registerTrans(userDTO, subDTO)) {
                return mapping.findForward(SUCCESS);
            } else {
                return mapping.findForward(ERROR);
            }
        } catch (Exception e) {
            return mapping.findForward(ERROR);
        }
    }
}
