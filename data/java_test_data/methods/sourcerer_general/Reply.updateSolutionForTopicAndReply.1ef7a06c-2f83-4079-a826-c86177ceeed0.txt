public void updateSolutionForTopicAndReply(Connection db, boolean isQuestion) throws SQLException {
    if (this.getId() == -1 || this.projectId == -1 || this.issueId == -1) {
        throw new SQLException("ID was not specified");
    }
    boolean commit = db.getAutoCommit();
    try {
        if (commit) {
            db.setAutoCommit(false);
        }
        int i = 0;
        PreparedStatement pst = null;
        if (getSolution()) {
            // Remove the flag for other replies
            i = 0;
            pst = db.prepareStatement("UPDATE project_issue_replies " + "SET solution = ? , " + "solution_date = ? " + "WHERE issue_id = ? AND reply_id <> ? ");
            pst.setBoolean(++i, false);
            pst.setTimestamp(++i, null);
            pst.setInt(++i, issueId);
            pst.setInt(++i, id);
            pst.executeUpdate();
            pst.close();
            // Update the issue
            i = 0;
            pst = db.prepareStatement("UPDATE project_issues " + "SET solution_reply_id = ? " + "WHERE issue_id = ? ");
            pst.setInt(++i, id);
            pst.setInt(++i, issueId);
            pst.executeUpdate();
            pst.close();
        } else {
            // Make sure the issue doesn't have this set as the solution if it isn't
            i = 0;
            pst = db.prepareStatement("UPDATE project_issues " + "SET solution_reply_id = ? " + "WHERE issue_id = ? AND solution_reply_id = ?");
            DatabaseUtils.setInt(pst, ++i, -1);
            pst.setInt(++i, issueId);
            pst.setInt(++i, id);
            pst.executeUpdate();
            pst.close();
        }
        // Update the reply
        i = 0;
        pst = db.prepareStatement("UPDATE project_issue_replies " + "SET helpful = ?, solution = ? , " + (this.getSolution() ? " solution_date = " + DatabaseUtils.getCurrentTimestamp(db) + " " : " solution_date = ? ") + "WHERE reply_id = ? ");
        pst.setBoolean(++i, this.getHelpful());
        pst.setBoolean(++i, this.getSolution());
        if (this.getSolution()) {
        // Do nothing
        } else {
            pst.setTimestamp(++i, null);
        }
        pst.setInt(++i, id);
        pst.execute();
        pst.close();
        // Update the issue question state
        i = 0;
        pst = db.prepareStatement("UPDATE project_issues " + "SET question = ? " + "WHERE issue_id = ? ");
        pst.setBoolean(++i, isQuestion);
        pst.setInt(++i, issueId);
        pst.executeUpdate();
        pst.close();
        if (commit) {
            db.commit();
        }
    } catch (Exception e) {
        if (commit) {
            db.rollback();
        }
        throw new SQLException(e.getMessage());
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
}
