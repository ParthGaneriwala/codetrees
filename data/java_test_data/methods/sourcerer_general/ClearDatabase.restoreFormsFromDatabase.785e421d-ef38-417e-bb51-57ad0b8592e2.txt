public ArrayList<DataCollectionPlanInfo> restoreFormsFromDatabase() {
    ArrayList<DataCollectionPlanInfo> results = new ArrayList<DataCollectionPlanInfo>();
    SQLiteDatabase db = databaseOpenHelper_.getReadableDatabase();
    // query for forms row
    String[] columns = { COL_FORMS };
    Cursor cur = db.query(TABLE_NAME, columns, null, null, null, null, null);
    if (cur != null) {
        // if query successful, note the amount of rows
        Log.i(TAG, "Query returned results: " + cur.getCount());
        // iterate though all the returned rows, should only be one
        cur.moveToFirst();
        while (cur.isAfterLast() == false) {
            // convert blob back to an ArrayList
            byte[] buff = cur.getBlob(cur.getColumnIndex(COL_FORMS));
            ByteArrayInputStream bis = new ByteArrayInputStream(buff);
            ObjectInputStream ois = null;
            try {
                ois = new ObjectInputStream(bis);
            } catch (StreamCorruptedException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
            // read blob bytes and rebuild object
            try {
                results = (ArrayList<DataCollectionPlanInfo>) ois.readObject();
            } catch (OptionalDataException e) {
                e.printStackTrace();
            } catch (ClassNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
            // close input streams
            try {
                bis.close();
                ois.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
            cur.moveToNext();
        }
        cur.close();
    }
    db.close();
    return results;
}
