public void testAddPersistent() throws Exception {
    ChromatticSessionImpl session = login();
    Node rootNode = session.getRoot();
    Node aNode1 = rootNode.addNode("totmr_a_1", oneNT);
    Node aNode2 = rootNode.addNode("totmr_a_2", oneNT);
    Node bNode = rootNode.addNode("totmr_b", manyNT);
    // 
    O a1 = session.findByNode(oneClass, aNode1);
    O a2 = session.findByNode(oneClass, aNode2);
    M b = session.findByNode(manyClass, bNode);
    // 
    setOne(b, a1);
    assertSame(a1, getOne(b));
    assertEquals(1, getMany(a1).size());
    assertTrue(getMany(a1).contains(b));
    assertEquals(0, getMany(a2).size());
    assertFalse(getMany(a2).contains(b));
    // 
    setOne(b, a2);
    assertSame(a2, getOne(b));
    assertEquals(0, getMany(a1).size());
    assertFalse(getMany(a1).contains(b));
    assertEquals(1, getMany(a2).size());
    assertTrue(getMany(a2).contains(b));
    // 
    getMany(a1).add(b);
    assertSame(a1, getOne(b));
    assertEquals(1, getMany(a1).size());
    assertTrue(getMany(a1).contains(b));
    assertEquals(0, getMany(a2).size());
    assertFalse(getMany(a2).contains(b));
    // 
    getMany(a2).add(b);
    assertSame(a2, getOne(b));
    assertEquals(0, getMany(a1).size());
    assertFalse(getMany(a1).contains(b));
    assertEquals(1, getMany(a2).size());
    assertTrue(getMany(a2).contains(b));
}
