public int doStartTag() throws JspException {
    try {
        Project thisProject = null;
        String projectId = pageContext.getRequest().getParameter("pid");
        if (projectId != null) {
            thisProject = ProjectUtils.loadProject(Integer.parseInt(projectId));
        }
        if (thisProject == null) {
            PortletRequest renderRequest = (PortletRequest) pageContext.getRequest().getAttribute(org.apache.pluto.tags.Constants.PORTLET_REQUEST);
            RenderResponse renderResponse = (RenderResponse) pageContext.getRequest().getAttribute(org.apache.pluto.tags.Constants.PORTLET_RESPONSE);
            thisProject = (Project) renderRequest.getAttribute("project");
            projectId = String.valueOf(thisProject.getId());
        }
        String ctx = ((HttpServletRequest) pageContext.getRequest()).getContextPath();
        if (ctx == null) {
        }
        // Show the open folder image
        this.pageContext.getOut().write("<img border=\"0\" src=\"" + RequestUtils.getAbsoluteServerUrl((HttpServletRequest) pageContext.getRequest()) + "/images/icons/stock_home-16.gif\" align=\"absmiddle\"> ");
        // Generate the folder path
        LinkedHashMap folderLevels = (LinkedHashMap) pageContext.getRequest().getAttribute("folderLevels");
        if (folderLevels == null) {
            if (showLastLink) {
                this.pageContext.getOut().write("<a href=\"" + ctx + "/show/" + thisProject.getUniqueId() + "/documents\">");
            }
            this.pageContext.getOut().write("Top Folder");
            if (showLastLink) {
                this.pageContext.getOut().write("</a>");
            }
        } else {
            Object[] hierarchy = folderLevels.keySet().toArray();
            if (hierarchy.length > 0) {
                // Show a Home link
                this.pageContext.getOut().write("<a href=\"" + ctx + "/show/" + thisProject.getUniqueId() + "/documents\">");
                final ApplicationPrefs prefs = (ApplicationPrefs) pageContext.getServletContext().getAttribute("applicationPrefs");
                final User user = (User) pageContext.getSession().getAttribute(Constants.SESSION_USER);
                final String language = (null != user.getLanguage()) ? user.getLanguage() : prefs.get(ApplicationPrefs.LANGUAGE);
                final String topFolderName = prefs.getLabel("folderHierarchyHandler.topFolder", language);
                this.pageContext.getOut().write(((null != topFolderName) ? topFolderName : "Top Folder"));
                this.pageContext.getOut().write("</a>");
                // Show the rest of the links, except the last, unless specified
                this.pageContext.getOut().write(" > ");
                for (int i = hierarchy.length - 1; i >= 0; i--) {
                    Integer thisId = (Integer) hierarchy[i];
                    String[] sa = (String[]) folderLevels.get(thisId);
                    String subject = sa[0];
                    String display = sa[1];
                    if (i > 0 || showLastLink) {
                        if ("-1".equals(display)) {
                            this.pageContext.getOut().write("<a href=\"" + ctx + "/show/" + thisProject.getUniqueId() + "/folder/" + thisId + "\">");
                        } else {
                            this.pageContext.getOut().write("<a href=\"" + ctx + "/ProjectManagement.do?command=ProjectCenter&section=File_Gallery&pid=" + projectId + "&folderId=" + thisId.intValue() + ("2".equals(display) ? "&details=true" : "") + "\">");
                        }
                    }
                    this.pageContext.getOut().write(StringUtils.toHtml(subject));
                    if (i > 0 || showLastLink) {
                        this.pageContext.getOut().write("</a>");
                    }
                    if (i > 0) {
                        this.pageContext.getOut().write(" > ");
                    }
                }
            } else {
                // Show home link
                if (showLastLink) {
                    this.pageContext.getOut().write("<a href=\"" + ctx + "/show/" + thisProject.getUniqueId() + "/documents\">");
                }
                this.pageContext.getOut().write("Top Folder");
                if (showLastLink) {
                    this.pageContext.getOut().write("</a>");
                }
            }
        }
    } catch (Exception e) {
        throw new JspException("FolderHierarchyHandler Error: " + e.getMessage());
    }
    return SKIP_BODY;
}
