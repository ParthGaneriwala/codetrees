@RequestMapping("/admin/links.html")
public String links(@RequestParam(value = "ln", required = false) String name, @RequestParam(value = "lu", required = false) String url, @RequestParam(value = "lc", required = false) String comment, @RequestParam(value = "lv", required = false) String isValid, @RequestParam(value = "sd", required = false) String startDate, @RequestParam(value = "ed", required = false) String endDate, @RequestParam(value = "ob", required = false) String orderBy, @RequestParam(value = "os", required = false) String orderSort, @RequestParam(value = "pn", required = false) String pageNo, ModelMap model) {
    Date start = null;
    Date end = null;
    if (StringUtils.isNotEmpty(startDate)) {
        try {
            start = new SimpleDateFormat(DateFormat_yyyy_MM_dd).parse(startDate);
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }
    if (StringUtils.isNotEmpty(endDate)) {
        try {
            end = new SimpleDateFormat(DateFormat_yyyy_MM_dd).parse(endDate);
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }
    if (StringUtils.isEmpty(pageNo) || !NumberUtils.isDigits(pageNo)) {
        pageNo = "1";
    }
    Page page = PageUtils.createPage(Integer.valueOf(pageNo), Page.EVERY_PAGE_30, searchService.countLinks(name, url, comment, isValid, start, end));
    page.setOrderBy(orderBy);
    page.setOrderSort(orderSort);
    StringBuffer _url = new StringBuffer("links.html?ln=").append(StringUtils.trimToEmpty(name)).append("&lu=").append(StringUtils.trimToEmpty(url)).append("&lc=").append(StringUtils.trimToEmpty(comment)).append("&lv=").append(StringUtils.trimToEmpty(isValid)).append("&sd=").append(StringUtils.trimToEmpty(startDate)).append("&ed=").append(StringUtils.trimToEmpty(endDate)).append("&ob=").append(StringUtils.trimToEmpty(orderBy)).append("&os=").append(StringUtils.trimToEmpty(orderSort)).append("&pn=");
    page.setUrl(_url.toString());
    model.addAttribute("page", page);
    model.addAttribute("links", searchService.getLinks(name, url, comment, isValid, start, end, orderBy, orderSort, page));
    model.addAttribute("ln", name);
    model.addAttribute("lu", url);
    model.addAttribute("lc", comment);
    model.addAttribute("lv", isValid);
    model.addAttribute("sd", startDate);
    model.addAttribute("ed", endDate);
    model.addAttribute("ob", orderBy);
    model.addAttribute("os", orderSort);
    return "admin/links";
}
