public boolean process(Request req, ResponseGroup rg) throws ItemPersistenceException, StaleDataException, InvalidOperationException {
    if (!checkRequest(req)) {
        throw new InvalidOperationException("Invalid add_entity_type operation.");
    }
    EditAddEntityTypeRequest r = (EditAddEntityTypeRequest) req;
    Model m = DaoUtil.getModelDao().getById(r.getModelId(), true);
    if (m == null) {
        throw new InvalidOperationException("Invalid model ID: " + r.getModelId());
    }
    EntityType entp = null;
    if (r.getTypeId() != null && (entp = DaoUtil.getEntityTypeDao().getById(r.getTypeId(), false)) != null) {
        entp.setTypeName(r.getTypeName());
        entp.setLastModifier(r.getRequesterId());
        entp = DaoUtil.getEntityTypeDao().save(entp);
    } else {
        EntityType sup = null;
        for (EntityType et : m.getEntityTypes()) {
            if (et.getTypeName().equals(r.getTypeName())) {
                throw new InvalidOperationException("Entity type has already existed: " + r.getTypeName());
            }
            if (et.getId().equals(r.getSuperTypeId())) {
                sup = et;
            }
        }
        entp = new EntityType();
        DataItemUtil.setNewDataItemByUserId(entp, r.getRequesterId());
        entp.setTypeName(r.getTypeName());
        entp.setSuperType(sup);
        entp.setModel(m);
        m.addEntityType(entp);
        DaoUtil.getModelDao().save(m);
        entp = DaoUtil.getEntityTypeDao().save(entp);
        r.setTypeId(entp.getId());
    }
    DefaultResponse rsp = new DefaultResponse(r);
    rsp.setExecTime(DataItemUtil.formatDate(entp.getLastModifyTime()));
    rsp.setName(Resources.RSP_SUCCESS);
    rg.setBack(rsp);
    DefaultResponse rsp2 = new DefaultResponse(r);
    rsp.setExecTime(DataItemUtil.formatDate(entp.getLastModifyTime()));
    rsp2.setName(Resources.RSP_FORWARD);
    rg.setBroadcast(rsp2);
    return true;
}
