private XmppError parseError(XmlPullParser parser) throws XmlPullParserException, IOException {
    XmppError error = new XmppError();
    String code = parser.getAttributeValue("", "code");
    if (code != null && !code.isEmpty()) {
        error.setCode(Integer.parseInt(code));
    }
    XmppError.Type type = null;
    String strType = parser.getAttributeValue("", "type");
    if (strType != null && !strType.isEmpty()) {
        type = XmppError.Type.valueOf(strType.toUpperCase());
        error.setType(type);
    }
    boolean done = false;
    while (!done) {
        int eventType = parser.next();
        String elementName = parser.getName();
        String namespace = parser.getNamespace(null);
        if (eventType == XmlPullParser.START_TAG) {
            if (XmppError.Condition.bad_request.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.bad_request);
            } else if (XmppError.Condition.conflict.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.conflict);
            } else if (XmppError.Condition.feature_not_implemented.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.feature_not_implemented);
            } else if (XmppError.Condition.forbidden.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.forbidden);
            } else if (XmppError.Condition.gone.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.gone);
            } else if (XmppError.Condition.internal_server_error.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.internal_server_error);
            } else if (XmppError.Condition.item_not_found.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.item_not_found);
            } else if (XmppError.Condition.jid_malformed.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.jid_malformed);
            } else if (XmppError.Condition.no_acceptable.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.no_acceptable);
            } else if (XmppError.Condition.not_allowed.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.not_allowed);
            } else if (XmppError.Condition.not_authorized.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.not_authorized);
            } else if (XmppError.Condition.payment_required.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.payment_required);
            } else if (XmppError.Condition.recipient_unavailable.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.recipient_unavailable);
            } else if (XmppError.Condition.redirect.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.redirect);
            } else if (XmppError.Condition.registration_required.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.registration_required);
            } else if (XmppError.Condition.remote_server_error.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.remote_server_error);
            } else if (XmppError.Condition.remote_server_not_found.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.remote_server_not_found);
            } else if (XmppError.Condition.remote_server_timeout.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.remote_server_timeout);
            } else if (XmppError.Condition.request_timeout.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.request_timeout);
            } else if (XmppError.Condition.resource_constraint.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.resource_constraint);
            } else if (XmppError.Condition.service_unavailable.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.service_unavailable);
            } else if (XmppError.Condition.subscription_required.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.subscription_required);
            } else if (XmppError.Condition.undefined_condition.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.undefined_condition);
            } else if (XmppError.Condition.unexpected_condition.toString().equals(parser.getName())) {
                error = new XmppError(XmppError.Condition.unexpected_condition);
            } else if ("text".equals(parser.getName())) {
                if (error != null)
                    error.setMessage(parser.nextText());
            } else {
                error.addOtherCondition(elementName, namespace);
            }
        } else if (eventType == XmlPullParser.END_TAG) {
            if ("error".equals(parser.getName())) {
                done = true;
            }
        }
    }
    return error;
}
