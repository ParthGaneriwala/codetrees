private void nextLifeVictoryFrame(int[] tmpPixels, int red, int green, int blue, int margin) {
    int pix, nPix;
    // int alphaLife;
    int redLife, greenLife, blueLife;
    int r, g, b, r1, g1, b1;
    for (int y = ANI_HEIGHT - 2; y > 0; y--) for (int x = 1; x < ANI_WIDTH - 1; x++) {
        pix = x + (y * ANI_WIDTH);
        // a = (animationPixels[pix] >> 24) & 0xff;
        r = (animationPixels[pix] >> 16) & 0xff;
        g = (animationPixels[pix] >> 8) & 0xff;
        b = (animationPixels[pix]) & 0xff;
        redLife = greenLife = blueLife = 0;
        for (int ny = -1; ny <= 1; ny++) for (int nx = -1; nx <= 1; nx++) {
            if (nx != 0 || ny != 0) {
                nPix = (x + nx) + ((y + ny) * ANI_WIDTH);
                // a1 = (animationPixels[nPix] >> 24) & 0xff;
                r1 = (animationPixels[nPix] >> 16) & 0xff;
                g1 = (animationPixels[nPix] >> 8) & 0xff;
                b1 = (animationPixels[nPix]) & 0xff;
                if (r1 < red + margin && r1 > red - margin)
                    redLife++;
                if (g1 < green + margin && g1 > green - margin)
                    greenLife++;
                if (b1 < blue + margin && b1 > blue - margin)
                    blueLife++;
            }
        }
        if (r == red) {
            if (redLife < 2 || redLife > 3) {
                // (int)(Math.random() * 255);
                r = 0;
            }
        } else if (redLife == 3)
            r = red;
        if (g == green) {
            if (greenLife < 2 || greenLife > 3) {
                // (int)(Math.random() * 255);
                g = 0;
            }
        } else if (greenLife == 3)
            g = green;
        if (b == blue) {
            if (blueLife < 2 || blueLife > 3) {
                // (int)(Math.random() * 255);
                b = 0;
            }
        } else if (blueLife == 3)
            b = blue;
        tmpPixels[pix] = new Color(r, g, b).getRGB();
    }
    for (int y = ANI_HEIGHT - 2; y > 0; y--) for (int x = 1; x < ANI_WIDTH - 1; x++) {
        pix = x + (y * ANI_WIDTH);
        animationPixels[pix] = tmpPixels[pix];
    }
}
