protected String go() throws HibernateException {
    if ("save".equals(flag)) {
        nextpage = "positionViewDepartments.action?positionid=" + positionid;
        TsysDepartmentPosition depposition = new TsysDepartmentPosition();
        TsysDepartmentPositionPK comp_id = new TsysDepartmentPositionPK();
        TsysDepartment department = new TsysDepartment();
        TsysUser user = new TsysUser();
        department.setDepartmentid(departmentid);
        user.setUserid(userid);
        position = new TsysPosition();
        position.setPositionid(positionid);
        comp_id.setTsysDepartment(department);
        comp_id.setTsysPosition(position);
        depposition.setComp_id(comp_id);
        depposition.setTsysUser(user);
        getSession().save(depposition);
        message = "设定职务人员成功！";
        return "message";
    } else {
        TsysDepartmentPosition positiondepartment = null;
        List departmentidlist = new ArrayList();
        departmentidlist.add(-1);
        position = (TsysPosition) getSession().get(TsysPosition.class, Integer.valueOf(positionid));
        Set positiondepartments = position.getTsysDepartmentPositions();
        for (Object obj : positiondepartments.toArray()) {
            positiondepartment = (TsysDepartmentPosition) obj;
            departmentidlist.add(positiondepartment.getComp_id().getTsysDepartment().getDepartmentid());
        }
        TsysDepartment corp = (TsysDepartment) getSession().get(TsysDepartment.class, Integer.valueOf(1));
        if (corp != null) {
            selectSet(corp);
        } else {
            message = "部门缺少根，请与管理员联系！";
            return "message";
        }
        userlist = getQuery2().list();
        return "input";
    }
}
