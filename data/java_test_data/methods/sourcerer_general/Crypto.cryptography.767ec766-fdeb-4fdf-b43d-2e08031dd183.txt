public Message cryptography(Message msg) {
    try {
        PublicKey pub = carregaChavePublica(new File("chave.publica"));
        byte[] criptText;
        byte[] chaveCifrada;
        // Gerando uma chave simetrica de 128 bits
        KeyGenerator kg = KeyGenerator.getInstance("AES");
        kg.init(128);
        SecretKey sk = kg.generateKey();
        byte[] chave = sk.getEncoded();
        // Criptografando bMethos e inserindo na mensagem
        byte[] bMethod = msg.getBMethod();
        criptText = cifra(pub, bMethod, chave);
        msg.setBMethod(criptText);
        bMethod = null;
        // Criptografando cada bParam e inserindo-os na mensagem
        byte[][] bParam = msg.getBParam();
        for (int i = 0; i < bParam.length; i++) {
            criptText = cifra(pub, bParam[i], chave);
            bParam[i] = criptText;
        }
        msg.setBParam(bParam);
        // Criptografando cada bSig e inserindo-os na mensagem
        byte[][] bSig = msg.getBSig();
        for (int i = 0; i < bSig.length; i++) {
            criptText = cifra(pub, bSig[i], chave);
            bSig[i] = criptText;
        }
        msg.setBSig(bSig);
        // Cifrando a chave com a chave pï¿½blica
        Cipher rsacf = Cipher.getInstance("RSA");
        rsacf.init(Cipher.ENCRYPT_MODE, pub);
        chaveCifrada = rsacf.doFinal(chave);
        msg.setKey(chaveCifrada);
        return msg;
    } catch (Exception e) {
        e.printStackTrace();
        return null;
    }
}
