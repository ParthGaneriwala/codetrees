@Test
public void testClearParser() throws Exception {
    this.assumeBigMemoryTestsEnabled();
    this.logger.info(BIG_MEMORY_TEST_MESSAGE);
    AnalysisEngine lemmatizer = AnalysisEngineFactory.createPrimitive(LemmaAnnotator.class, typeSystemDescription);
    AnalysisEngine parser = AnalysisEngineFactory.createPrimitive(ClearParser.class, typeSystemDescription);
    tokenBuilder.buildTokens(jCas, "This is a test.", "This is a test .", "DT VB DT NN .");
    lemmatizer.process(jCas);
    parser.process(jCas);
    Sentence sentence = JCasUtil.selectByIndex(jCas, Sentence.class, 0);
    DependencyNode topNode = JCasUtil.selectCovered(jCas, DependencyNode.class, sentence).iterator().next();
    assertTrue(topNode instanceof TopDependencyNode);
    assertEquals("This is a test.", topNode.getCoveredText());
    DependencyRelation isRel = topNode.getChildRelations(0);
    testRelationChild(isRel, "is", "ROOT");
    DependencyRelation thisRel = isRel.getChild().getChildRelations(0);
    testRelationChild(thisRel, "This", "SBJ");
    DependencyRelation testRel = isRel.getChild().getChildRelations(1);
    testRelationChild(testRel, "test", "PRD");
    DependencyRelation dotRel = isRel.getChild().getChildRelations(2);
    testRelationChild(dotRel, ".", "P");
    DependencyRelation aRel = testRel.getChild().getChildRelations(0);
    testRelationChild(aRel, "a", "NMOD");
    jCas.reset();
    tokenBuilder.buildTokens(jCas, "The epicenter was 90 kilometres (55 miles) west-northwest of Chengdu, the capital of Sichuan, with a depth of 19 kilometres (12 mi).", "The epicenter was 90 kilometres ( 55 miles ) west-northwest of Chengdu , the capital of Sichuan , with a depth of 19 kilometres ( 12 mi ) .", "DT NN VBD VBN IN ( NN NNS ) NN IN NN , DT NN IN NN , IN DT NN IN CD NNS ( CD JJ ) .");
    lemmatizer.process(jCas);
    parser.process(jCas);
    sentence = JCasUtil.selectByIndex(jCas, Sentence.class, 0);
    topNode = JCasUtil.selectCovered(jCas, DependencyNode.class, sentence).iterator().next();
    assertTrue(topNode instanceof TopDependencyNode);
    assertEquals("The epicenter was 90 kilometres (55 miles) west-northwest of Chengdu, the capital of Sichuan, with a depth of 19 kilometres (12 mi).", topNode.getCoveredText());
    DependencyRelation wasRel = topNode.getChildRelations(0);
    testRelationChild(wasRel, "was", "ROOT");
    testRelationChild(wasRel.getChild().getChildRelations(0), "epicenter", "SBJ");
    testRelationChild(wasRel.getChild().getChildRelations(0).getChild().getChildRelations(0), "The", "NMOD");
    testRelationChild(wasRel.getChild().getChildRelations(0).getChild().getChildRelations(1), "capital", "APPO");
    testRelationChild(wasRel.getChild().getChildRelations(1), "90", "VC");
    testRelationChild(wasRel.getChild().getChildRelations(1).getChild().getChildRelations(0), "kilometres", "ADV");
    testRelationChild(wasRel.getChild().getChildRelations(2), ")", "P");
    testRelationChild(wasRel.getChild().getChildRelations(2).getChild().getChildRelations(0), ",", "P");
    testRelationChild(wasRel.getChild().getChildRelations(2).getChild().getChildRelations(1), "(", "P");
    testRelationChild(wasRel.getChild().getChildRelations(2).getChild().getChildRelations(2), "12", "NMOD");
    testRelationChild(wasRel.getChild().getChildRelations(2).getChild().getChildRelations(3), "mi", "NMOD");
    testRelationChild(wasRel.getChild().getChildRelations(3), ".", "P");
}
