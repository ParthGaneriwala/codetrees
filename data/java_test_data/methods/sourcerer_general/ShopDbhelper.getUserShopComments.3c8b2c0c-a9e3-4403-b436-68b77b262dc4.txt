public Object[] getUserShopComments(String username, int page, int count, boolean getTotal) throws Exception {
    Connection connection = null;
    Object[] returnValue = new Object[2];
    try {
        connection = connectionPool.getConnection();
        PreparedStatement preStat = connection.prepareStatement(GETUSERSHOPCOOMENTS_SQL);
        preStat.setString(1, username);
        preStat.setInt(2, (page - 1) * count);
        preStat.setInt(3, count);
        ResultSet commentsResSet = preStat.executeQuery();
        if (loggerServiceTracker.isDebugEnabled()) {
            loggerServiceTracker.debug("SQL:" + preStat.toString());
            loggerServiceTracker.debug("Result:" + commentsResSet.toString());
        }
        List<ShopComment> comments = new ArrayList<ShopComment>();
        while (commentsResSet.next()) {
            ShopComment comment = new ShopComment();
            comment.setShopId(commentsResSet.getLong("shopId"));
            comment.setContent(commentsResSet.getString("content"));
            comment.setUsername(username);
            comment.setScore(commentsResSet.getInt("score"));
            Timestamp timestamp = commentsResSet.getTimestamp("modificationDate");
            comment.setLasModitDate(timestamp.getTime());
            comment.setProperty("shopTitle", commentsResSet.getString("title"));
            comments.add(comment);
        }
        returnValue[1] = comments.toArray(new ShopComment[] {});
        if (getTotal) {
            PreparedStatement preStat2 = connection.prepareStatement(GETUSERSHOPCOOMENTSCOUNT_SQL);
            preStat2.setString(1, username);
            ResultSet shopResSet2 = preStat2.executeQuery();
            if (loggerServiceTracker.isDebugEnabled()) {
                loggerServiceTracker.debug("SQL:" + preStat2.toString());
                loggerServiceTracker.debug("Result:" + shopResSet2.toString());
            }
            if (shopResSet2.next()) {
                int countResult = shopResSet2.getInt("COUNT(*)");
                returnValue[0] = countResult;
            }
        }
        return returnValue;
    } finally {
        if (connection != null) {
            connectionPool.returnConnection(connection);
        }
    }
}
