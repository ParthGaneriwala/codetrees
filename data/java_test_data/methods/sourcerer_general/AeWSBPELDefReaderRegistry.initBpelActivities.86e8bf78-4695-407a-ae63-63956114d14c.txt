protected void initBpelActivities() {
    super.initBpelActivities();
    // Remove some 1.1 mappings.
    removeActivityReader(TAG_TERMINATE);
    removeActivityReader(TAG_COMPENSATE);
    removeActivityReader(new QName(IAeBPELConstants.ABX_2_0_NAMESPACE_URI, TAG_FOREACH));
    removeActivityReader(new QName(IAeBPELConstants.ABX_2_0_NAMESPACE_URI, TAG_CONTINUE));
    removeActivityReader(new QName(IAeBPELConstants.ABX_2_0_NAMESPACE_URI, TAG_BREAK));
    removeActivityReader(new QName(IAeBPELConstants.ABX_2_0_NAMESPACE_URI, TAG_FOREACH));
    removeActivityReader(new QName(IAeBPELConstants.ABX_2_0_NAMESPACE_URI, TAG_SUSPEND));
    addActivityReader(new QName(IAeBPELConstants.AE_EXTENSION_NAMESPACE_URI_ACTIVITY, TAG_CONTINUE), AeActivityContinueDef.class);
    addActivityReader(new QName(IAeBPELConstants.AE_EXTENSION_NAMESPACE_URI_ACTIVITY, TAG_BREAK), AeActivityBreakDef.class);
    addActivityReader(new QName(IAeBPELConstants.AE_EXTENSION_NAMESPACE_URI_ACTIVITY, TAG_FOREACH), AeActivityForEachDef.class);
    addActivityReader(new QName(IAeBPELConstants.AE_EXTENSION_NAMESPACE_URI_ACTIVITY, TAG_SUSPEND), AeActivitySuspendDef.class);
    // Add some 2.0 mappings.
    addActivityReader(TAG_VALIDATE, ACTIVITY_VALIDATE_CLASS);
    addActivityReader(TAG_EXIT, ACTIVITY_EXIT_CLASS);
    addActivityReader(TAG_EXTENSION_ACTIVITY, EXTENSION_ACTIVITY_CLASS);
    addActivityReader(TAG_IF, ACTIVITY_IF_CLASS);
    addActivityReader(TAG_REPEAT_UNTIL, ACTIVITY_REPEAT_UNTIL_CLASS);
    addActivityReader(TAG_RETHROW, ACTIVITY_RETHROW_CLASS);
    addActivityReader(TAG_FOREACH, ACTIVITY_FOREACH_CLASS);
    addActivityReader(TAG_COMPENSATE, ACTIVITY_COMPENSATE_CLASS);
    addActivityReader(TAG_COMPENSATE_SCOPE, ACTIVITY_COMPENSATE_SCOPE_CLASS);
    // Opaque activity for bpel 2.0 abstract processes.
    // (note: this reader is registered in this 'bpel executable process' namespace to allow users to load executable processes that may have opaque activities (from AbxProcess->Save-As)
    addActivityReader(new QName(IAeBPELConstants.WSBPEL_2_0_ABSTRACT_NAMESPACE_URI, TAG_OPAQUE_ACTIVITY), AeActivityOpaqueDef.class);
}
