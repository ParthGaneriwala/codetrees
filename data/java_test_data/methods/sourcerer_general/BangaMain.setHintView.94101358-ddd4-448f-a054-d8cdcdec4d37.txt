private void setHintView() {
    setContentView(R.layout.hintstats);
    Button deckStatsButton = (Button) findViewById(R.id.hintstats_deckStats);
    deckStatsButton.setOnClickListener(onClickListener);
    Button mainView = (Button) findViewById(R.id.hintstats_doneButton);
    mainView.setOnClickListener(onClickListener);
    Button clearButton = (Button) findViewById(R.id.hintstats_clearStats);
    clearButton.setOnClickListener(onClickListener);
    // establishes table info
    TableLayout statTable = (TableLayout) findViewById(R.id.hintstats_tableLayout);
    // create table header
    String[][] headers = new String[3][2];
    headers[0] = new String[] { "Card", "Hint", "Date" };
    headers[1] = new String[] { "Name", "Usage", "Played" };
    for (String[] curHeaderRow : headers) {
        TableRow headerRow = new TableRow(this);
        headerRow.setLayoutParams(new TableLayout.LayoutParams());
        for (int i = 0; i < curHeaderRow.length; i++) {
            TextView text = new TextView(this);
            text.setText(curHeaderRow[i]);
            TableRow.LayoutParams lp = new TableRow.LayoutParams(i);
            lp.setMargins(PADDING_LEFT, 0, PADDING_RIGHT, 0);
            text.setLayoutParams(lp);
            headerRow.addView(text);
        }
        statTable.addView(headerRow);
    }
    // now fill the table with content
    Log.d(TAG, "reached possibly orphaned new dbhelper");
    DBHelper db = new DBHelper(this);
    List<GameStat> gameStatList = db.getAllGameStats();
    for (GameStat gs : gameStatList) {
        List<CardStat> cardStatList = gs.getCardStatList();
        if (cardStatList.size() > 0) {
            CardStat card = new CardStat();
            List<Deck> deckList = DeckManager.getInstance().loadDecks();
            for (int i = 0; i <= gs.getCardStatList().size(); i++) {
                // create a row for each game stat
                TableRow currentRow = new TableRow(this);
                currentRow.setLayoutParams(new TableLayout.LayoutParams());
                // TODO add the name of the Card
                {
                    // change the variable within cardStatList.get()
                    // changed "0) to numHintsNeeded
                    // changed cardStatList.get(numHintsNeeded).getCardName();
                    String cardName = cardStatList.get(numHintsNeeded).getCardName();
                    TextView cardNameTextView = new TextView(this);
                    cardNameTextView.setText(cardName);
                    TableRow.LayoutParams lp = new TableRow.LayoutParams(0);
                    lp.setMargins(PADDING_LEFT, 0, PADDING_RIGHT, 0);
                    cardNameTextView.setLayoutParams(lp);
                    currentRow.addView(cardNameTextView);
                }
                // add the number of right answers
                /* TODO Need to change so it take the hintIndex and display it as numbers*/
                {
                    TextView numHintsTextView = new TextView(this);
                    numHintsTextView.setText(Integer.toString(gs.getNumHints()));
                    TableRow.LayoutParams numHintsLayoutParms = new TableRow.LayoutParams(0);
                    numHintsLayoutParms.setMargins(PADDING_LEFT, 0, PADDING_RIGHT, 0);
                    numHintsTextView.setLayoutParams(numHintsLayoutParms);
                    currentRow.addView(numHintsTextView);
                }
                // fill in the date played
                {
                    // CharSequence datePlayed = DateFormat.format("MM/dd/yy", new Date(gs.getCompletionTimestamp()));
                    CharSequence datePlayed = DateFormat.getDateInstance().format(new Date(gs.getCompletionTimestamp()));
                    TextView datePlayedTextView = new TextView(this);
                    datePlayedTextView.setText(datePlayed);
                    TableRow.LayoutParams datePlayedLayoutParams = new TableRow.LayoutParams(2);
                    datePlayedLayoutParams.setMargins(PADDING_LEFT, 0, PADDING_RIGHT, 0);
                    datePlayedTextView.setLayoutParams(datePlayedLayoutParams);
                    currentRow.addView(datePlayedTextView);
                }
                // add the row to the table
                statTable.addView(currentRow);
            // brace needed for the previous for statement
            // }
            }
        } else {
            Log.d(TAG, "CardStatList was empty for GameStat: " + gs.getId());
        }
    }
// need this last brace
}
