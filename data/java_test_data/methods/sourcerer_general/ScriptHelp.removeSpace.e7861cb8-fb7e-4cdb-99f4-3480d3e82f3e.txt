public static String removeSpace(String content) {
    if ("".equals(content)) {
        return "";
    }
    StringBuilder s = new StringBuilder();
    int sz = content.length();
    for (int i = 0; i < sz; i++) {
        switch(content.charAt(i)) {
            case ' ':
                if (stats2 == model2.COMMENCODES) {
                    // 如果当前位普通代码模式则转到空格模式
                    stats2 = model2.SPACE;
                    s.append(" ");
                } else if (stats2 == model2.STRINGMODEL) {
                    // 如果为字符串模式则直接添加
                    s.append(" ");
                } else if (stats2 == model2.TRANSFERMODEL) {
                    // 如果为字符串转义模式则直接添加
                    s.append(" ");
                }
                break;
            case '"':
                if (stats2 == model2.COMMENCODES) {
                    // 如果当前为普通代码模式则转到字符串模式
                    stats2 = model2.STRINGMODEL;
                    s.append("\"");
                } else if (stats2 == model2.TRANSFERMODEL) {
                    // 如果为字符串转义模式则转到字符串模式
                    stats2 = model2.STRINGMODEL;
                    s.append("\"");
                } else {
                    stats2 = model2.STRINGMODEL;
                    s.append("\"");
                }
                break;
            case '\'':
                if (stats2 == model2.COMMENCODES) {
                    stats2 = model2.STRINGMODEL;
                    s.append("'");
                } else if (stats2 == model2.TRANSFERMODEL) {
                    // 如果为字符串转义模式则转到字符串模式
                    stats2 = model2.STRINGMODEL;
                    s.append("'");
                } else {
                    stats2 = model2.STRINGMODEL;
                    s.append("'");
                }
                break;
            case '\\':
                if (stats2 == model2.COMMENCODES) {
                    s.append("\\");
                } else if (stats2 == model2.STRINGMODEL) {
                    // 如果当前为字符串模式则转到字符串转移模式
                    stats2 = model2.TRANSFERMODEL;
                    s.append("\\");
                } else {
                    s.append("\\");
                }
                break;
            case '\n':
                // \n直接替换，转到普通模式
                stats2 = model2.COMMENCODES;
                break;
            case // tab键
            '\t':
                if (stats2 == model2.STRINGMODEL) {
                    // 如果当前为字符串模式则转到字符串转移模式
                    s.append("\t");
                }
                // \n直接替换，转到普通模式
                stats2 = model2.COMMENCODES;
                break;
            case '=':
                if (stats2 == model2.STRINGMODEL) {
                    s.append("=");
                } else if (stats2 == model2.COMMENCODES) {
                    stats2 = model2.DELETE;
                    s.append("=");
                } else if (stats2 == model2.SPACE) {
                    stats2 = model2.DELETE;
                    s.deleteCharAt(s.length() - 1);
                    s.append("=");
                } else {
                    stats2 = model2.DELETE;
                    s.append("=");
                }
                break;
            case '{':
                if (stats2 == model2.STRINGMODEL) {
                    s.append("{");
                } else if (stats2 == model2.COMMENCODES) {
                    stats2 = model2.DELETE;
                    s.append("{");
                } else if (stats2 == model2.SPACE) {
                    stats2 = model2.DELETE;
                    s.deleteCharAt(s.length() - 1);
                    s.append("{");
                } else {
                    stats2 = model2.DELETE;
                    s.append("{");
                }
                break;
            case '}':
                if (stats2 == model2.STRINGMODEL) {
                    s.append("}");
                } else if (stats2 == model2.COMMENCODES) {
                    stats2 = model2.DELETE;
                    s.append("}");
                } else if (stats2 == model2.SPACE) {
                    stats2 = model2.DELETE;
                    s.deleteCharAt(s.length() - 1);
                    s.append("}");
                } else {
                    stats2 = model2.DELETE;
                    s.append("}");
                }
                break;
            default:
                if (stats2 == model2.COMMENCODES) {
                    s.append(content.charAt(i));
                } else if (stats2 == model2.STRINGMODEL) {
                    s.append(content.charAt(i));
                } else if (stats2 == model2.TRANSFERMODEL) {
                    // 如果当前为字符串转义模式则转到字符串模式
                    stats2 = model2.STRINGMODEL;
                    s.append(content.charAt(i));
                } else {
                    stats2 = model2.COMMENCODES;
                    s.append(content.charAt(i));
                }
                break;
        }
    }
    // 重新设置状态，避免下次保持到最后的状态
    stats2 = model2.COMMENCODES;
    return s.toString();
}
