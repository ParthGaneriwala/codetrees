@Test
public void test6812() {
    String source = "wsj/01/wsj_0125.mrg 2 15 gold price.01 p---p 15:0-rel 17:1-ARG2-at 19:2-ARGM-PNC 5:2,9:1*16:0-ARG1";
    Propbank propbank = Propbank.fromString(source);
    assertEquals(source, propbank.toString());
    assertEquals("wsj/01/wsj_0125.mrg", propbank.getFilename());
    assertEquals(2, propbank.getSentenceNumber());
    assertEquals(15, ((PropbankTerminalRelation) propbank.getTerminal()).getTerminalNumber());
    assertEquals("gold", propbank.getTaggerName());
    assertEquals("price", propbank.getBaseForm());
    assertEquals("01", propbank.getFrameSet());
    assertEquals("p---p", propbank.getInflectionValue());
    // 15:0-rel
    Proplabel proplabel = propbank.getPropLabels().get(0);
    assertEquals("rel", proplabel.getLabel());
    assertEquals(null, proplabel.getFeature());
    assertEquals(null, proplabel.getPreposition());
    assertEquals(PropbankNodeRelation.class, proplabel.getRelation().getClass());
    PropbankNodeRelation nodeRelation = (PropbankNodeRelation) proplabel.getRelation();
    assertEquals("15:0", nodeRelation.toString());
    assertEquals(15, nodeRelation.getTerminalNumber());
    assertEquals(0, nodeRelation.getHeight());
    // 17:1-ARG2-at
    proplabel = propbank.getPropLabels().get(1);
    assertEquals("ARG2", proplabel.getLabel());
    assertEquals(null, proplabel.getFeature());
    assertEquals("at", proplabel.getPreposition());
    assertEquals(PropbankNodeRelation.class, proplabel.getRelation().getClass());
    nodeRelation = (PropbankNodeRelation) proplabel.getRelation();
    assertEquals("17:1", nodeRelation.toString());
    assertEquals(17, nodeRelation.getTerminalNumber());
    assertEquals(1, nodeRelation.getHeight());
    // 19:2-ARGM-PNC
    proplabel = propbank.getPropLabels().get(2);
    assertEquals("ARGM", proplabel.getLabel());
    assertEquals("PNC", proplabel.getFeature());
    assertEquals(null, proplabel.getPreposition());
    assertEquals(PropbankNodeRelation.class, proplabel.getRelation().getClass());
    nodeRelation = (PropbankNodeRelation) proplabel.getRelation();
    assertEquals("19:2", nodeRelation.toString());
    assertEquals(19, nodeRelation.getTerminalNumber());
    assertEquals(2, nodeRelation.getHeight());
    // 5:2,9:1*16:0-ARG1
    proplabel = propbank.getPropLabels().get(3);
    assertEquals("ARG1", proplabel.getLabel());
    assertEquals(null, proplabel.getFeature());
    assertEquals(null, proplabel.getPreposition());
    assertEquals(PropbankCorefRelation.class, proplabel.getRelation().getClass());
    PropbankCorefRelation corefRelation = (PropbankCorefRelation) proplabel.getRelation();
    List<PropbankRelation> corefRelations = corefRelation.getCorefRelations();
    PropbankSplitRelation splitRelation = (PropbankSplitRelation) corefRelations.get(0);
    List<PropbankRelation> splitRelations = splitRelation.getRelations();
    nodeRelation = (PropbankNodeRelation) splitRelations.get(0);
    assertEquals(5, nodeRelation.getTerminalNumber());
    assertEquals(2, nodeRelation.getHeight());
    nodeRelation = (PropbankNodeRelation) splitRelations.get(1);
    assertEquals(9, nodeRelation.getTerminalNumber());
    assertEquals(1, nodeRelation.getHeight());
    nodeRelation = (PropbankNodeRelation) corefRelations.get(1);
    assertEquals(16, nodeRelation.getTerminalNumber());
    assertEquals(0, nodeRelation.getHeight());
}
