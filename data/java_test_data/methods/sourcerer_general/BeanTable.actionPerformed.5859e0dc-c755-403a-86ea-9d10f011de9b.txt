public void actionPerformed(ActionEvent e) {
    Component c = (Component) e.getSource();
    if (c.getName() != null) {
        if (c.getName().equals("New")) {
            try {
                Constructor constructor = bean.getConstructor(new Class[0]);
                add(constructor.newInstance(new Object[0]));
            } catch (NoSuchMethodException exc) {
                exc.printStackTrace();
            } catch (IllegalAccessException exc) {
                exc.printStackTrace();
            } catch (InvocationTargetException exc) {
                exc.printStackTrace();
            } catch (InstantiationException exc) {
                exc.printStackTrace();
            }
        } else if (c.getName().equals("Remove")) {
            beanRemoved(getSelectedRow());
            remove(getSelectedRow());
        } else if (c.getName().equals("CopyCell")) {
            Clipboard clipboard = getToolkit().getSystemClipboard();
            Object o = table.getValueAt(table.getSelectedRow(), clickedColumn);
            if (o != null) {
                StringSelection data = new StringSelection(o.toString());
                clipboard.setContents(data, data);
            }
        } else if (c.getName().equals("CopyRow")) {
            Clipboard clipboard = getToolkit().getSystemClipboard();
            Object o;
            StringBuffer tsv = new StringBuffer();
            for (int i = 0; i < table.getColumnCount(); i++) {
                o = table.getValueAt(table.getSelectedRow(), i);
                if (i != 0) {
                    tsv.append("\t");
                }
                tsv.append("\"");
                if (o != null) {
                    if (o instanceof Calendar) {
                        tsv.append(StringUtilities.format(((Calendar) o), "%EEE%, %d% %MMM% %yyyy% %hh%:%mm%:%ss%%amPM% %Z%"));
                    } else {
                        tsv.append(StringUtilities.replaceAll(o.toString(), "\"", "\\\""));
                    }
                }
                tsv.append("\"");
            }
            StringSelection data = new StringSelection(tsv.toString());
            clipboard.setContents(data, data);
        } else if (c.getName().equals("ExportTable")) {
            try {
                System.out.println("ExportTable");
                String[][] data = new String[table.getRowCount()][names.length];
                Object o;
                for (int i = 0; i < table.getRowCount(); i++) {
                    for (int j = 0; j < names.length; j++) {
                        o = table.getValueAt(i, j);
                        if (o != null) {
                            if (o instanceof Calendar) {
                                data[i][j] = StringUtilities.format(((Calendar) o), "%EEE%, %d% %MMM% %yyyy% %hh%:%mm%:%ss%%amPM% %Z%");
                            } else {
                                data[i][j] = o.toString();
                            }
                        }
                    }
                }
                String title = this.getName();
                if (title == null)
                    title = "Table Export";
                FileExportManager.exportFile(this, title, names, data);
            } catch (Exception exc) {
                exc.printStackTrace();
            }
        }
    }
}
