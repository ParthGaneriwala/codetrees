private static void writeConfusionMatrices() {
    int[] kValues = { 5, 25, 50, 100, 150, 200, 250, 300 };
    // File DWBaseCertMatrices = new File("D:/synthLandscan/momentData/fiveClassPACorrected/summaries/confMatrices/DWBaseCertainty.csv");
    // File DWBaseConfMatrices = new File("D:/synthLandscan/momentData/fiveClassPACorrected/summaries/confMatrices/DWBaseConfusion.csv");
    File DWGAMCertMatrices = new File("D:/synthLandscan/randomStarts/momentData/summaries/confMatrices/DWGAMCertainty.csv");
    File DWGAMConfMatrices = new File("D:/synthLandscan/randomStarts/momentData/summaries/confMatrices/DWGAMConfusion.csv");
    // File DWFZCertMatrices = new File("D:/synthLandscan/momentData/fiveClassPACorrected/summaries/confMatrices/DWFZCertainty.csv");
    // File DWFZConfMatrices = new File("D:/synthLandscan/momentData/fiveClassPACorrected/summaries/confMatrices/DWVZConfusion.csv");
    // File simpleBaseCertMatrices = new File("D:/synthLandscan/momentData/fiveClassPACorrected/summaries/confMatrices/simpleBaseCertainty.csv");
    // File simpleBaseConfMatrices = new File("D:/synthLandscan/momentData/fiveClassPACorrected/summaries/confMatrices/simpleBaseConfusion.csv");
    File simpleGAMCertMatrices = new File("D:/synthLandscan/randomStarts/momentData/summaries/confMatrices/simpleGAMCertainty.csv");
    File simpleGAMConfMatrices = new File("D:/synthLandscan/randomStarts/momentData/summaries/confMatrices/simpleGAMConfusion.csv");
    try {
        // FileWriter DWBaseCertMatricesWriter = new FileWriter(DWBaseCertMatrices);
        // FileWriter DWBaseConfMatricesWriter = new FileWriter(DWBaseConfMatrices);
        FileWriter DWGAMCertMatricesWriter = new FileWriter(DWGAMCertMatrices);
        FileWriter DWGAMConfMatricesWriter = new FileWriter(DWGAMConfMatrices);
        // FileWriter DWFZCertMatricesWriter = new FileWriter(DWFZCertMatrices);
        // FileWriter DWFZConfMatricesWriter = new FileWriter(DWFZConfMatrices);
        // FileWriter simpleBaseCertMatricesWriter = new FileWriter(simpleBaseCertMatrices);
        // FileWriter simpleBaseConfMatricesWriter = new FileWriter(simpleBaseConfMatrices);
        FileWriter simpleGAMCertMatricesWriter = new FileWriter(simpleGAMCertMatrices);
        FileWriter simpleGAMConfMatricesWriter = new FileWriter(simpleGAMConfMatrices);
        for (int op = 0; op < operators.length; op++) {
            for (int kValue = 0; kValue < kValues.length; kValue++) {
                // DWBaseCertMatricesWriter.write(kValues[kValue] + "_" + operators[op]);
                // DWBaseConfMatricesWriter.write(kValues[kValue] + "_" + operators[op]);
                DWGAMCertMatricesWriter.write(kValues[kValue] + "_" + operators[op]);
                DWGAMConfMatricesWriter.write(kValues[kValue] + "_" + operators[op]);
                // DWFZCertMatricesWriter.write(kValues[kValue] + "_" + operators[op]);
                // DWFZConfMatricesWriter.write(kValues[kValue] + "_" + operators[op]);
                // simpleBaseCertMatricesWriter.write(kValues[kValue] + "_" + operators[op]);
                // simpleBaseConfMatricesWriter.write(kValues[kValue] + "_" + operators[op]);
                simpleGAMCertMatricesWriter.write(kValues[kValue] + "_" + operators[op]);
                simpleGAMConfMatricesWriter.write(kValues[kValue] + "_" + operators[op]);
                for (int klass = 0; klass < 6; klass++) {
                    // DWBaseCertMatricesWriter.write("," + classNames[klass+1]);
                    // DWBaseConfMatricesWriter.write("," + classNames[klass+1]);
                    DWGAMCertMatricesWriter.write("," + classNames[klass + 1]);
                    DWGAMConfMatricesWriter.write("," + classNames[klass + 1]);
                    // DWFZCertMatricesWriter.write("," + classNames[klass+1]);
                    // DWFZConfMatricesWriter.write("," + classNames[klass+1]);
                    // simpleBaseCertMatricesWriter.write("," + classNames[klass+1]);
                    // simpleBaseConfMatricesWriter.write("," + classNames[klass+1]);
                    simpleGAMCertMatricesWriter.write("," + classNames[klass + 1]);
                    simpleGAMConfMatricesWriter.write("," + classNames[klass + 1]);
                // simpleFZCertMatricesWriter.write("," + classNames[klass+1]);
                // simpleFZConfMatricesWriter.write("," + classNames[klass+1]);
                }
                // DWBaseCertMatricesWriter.write('\n');
                // DWBaseConfMatricesWriter.write('\n');
                DWGAMCertMatricesWriter.write('\n');
                DWGAMConfMatricesWriter.write('\n');
                // DWFZCertMatricesWriter.write('\n');
                // DWFZConfMatricesWriter.write('\n');
                // simpleBaseCertMatricesWriter.write('\n');
                // simpleBaseConfMatricesWriter.write('\n');
                simpleGAMCertMatricesWriter.write('\n');
                simpleGAMConfMatricesWriter.write('\n');
                for (int actual = 0; actual < 6; actual++) {
                    // DWBaseCertMatricesWriter.write(classNames[actual+1]);
                    // DWBaseConfMatricesWriter.write(classNames[actual+1]);
                    DWGAMCertMatricesWriter.write(classNames[actual + 1]);
                    DWGAMConfMatricesWriter.write(classNames[actual + 1]);
                    // DWFZCertMatricesWriter.write(classNames[actual+1]);
                    // DWFZConfMatricesWriter.write(classNames[actual+1]);
                    // simpleBaseCertMatricesWriter.write(classNames[actual+1]);
                    // simpleBaseConfMatricesWriter.write(classNames[actual+1]);
                    simpleGAMCertMatricesWriter.write(classNames[actual + 1]);
                    simpleGAMConfMatricesWriter.write(classNames[actual + 1]);
                    for (int hypo = 0; hypo < 6; hypo++) {
                        // DWBaseCertMatricesWriter.write("," + DWBaseMasses[kValues[kValue]-2][op][actual][hypo]);
                        // DWBaseConfMatricesWriter.write("," + DWBaseClasses[kValues[kValue]-2][op][actual][hypo]);
                        DWGAMCertMatricesWriter.write("," + DWGAMMasses[kValues[kValue] - 2][op][actual][hypo]);
                        DWGAMConfMatricesWriter.write("," + DWGAMClasses[kValues[kValue] - 2][op][actual][hypo]);
                        // DWFZCertMatricesWriter.write("," + DWFZMasses[kValues[kValue]-2][op][actual][hypo]);
                        // DWFZConfMatricesWriter.write("," + DWFZClasses[kValues[kValue]-2][op][actual][hypo]);
                        // simpleBaseCertMatricesWriter.write("," + simpleBaseMasses[kValues[kValue]-2][op][actual][hypo]);
                        // simpleBaseConfMatricesWriter.write("," + simpleBaseClasses[kValues[kValue]-2][op][actual][hypo]);
                        simpleGAMCertMatricesWriter.write("," + simpleGAMMasses[kValues[kValue] - 2][op][actual][hypo]);
                        simpleGAMConfMatricesWriter.write("," + simpleGAMClasses[kValues[kValue] - 2][op][actual][hypo]);
                    // simpleFZCertMatricesWriter.write("," + simpleFZMasses[kValues[kValue]-2][op][actual][hypo]);
                    // simpleFZConfMatricesWriter.write("," + simpleFZClasses[kValues[kValue]-2][op][actual][hypo]);
                    }
                    // DWBaseCertMatricesWriter.write('\n');
                    // DWBaseConfMatricesWriter.write('\n');
                    DWGAMCertMatricesWriter.write('\n');
                    DWGAMConfMatricesWriter.write('\n');
                    // DWFZCertMatricesWriter.write('\n');
                    // DWFZConfMatricesWriter.write('\n');
                    // simpleBaseCertMatricesWriter.write('\n');
                    // simpleBaseConfMatricesWriter.write('\n');
                    simpleGAMCertMatricesWriter.write('\n');
                    simpleGAMConfMatricesWriter.write('\n');
                // simpleFZCertMatricesWriter.write('\n');
                // simpleFZConfMatricesWriter.write('\n');
                }
                // DWBaseCertMatricesWriter.write('\n');
                // DWBaseConfMatricesWriter.write('\n');
                DWGAMCertMatricesWriter.write('\n');
                DWGAMConfMatricesWriter.write('\n');
                // DWFZCertMatricesWriter.write('\n');
                // DWFZConfMatricesWriter.write('\n');
                // simpleBaseCertMatricesWriter.write('\n');
                // simpleBaseConfMatricesWriter.write('\n');
                simpleGAMCertMatricesWriter.write('\n');
                simpleGAMConfMatricesWriter.write('\n');
            // simpleFZCertMatricesWriter.write('\n');
            // simpleFZConfMatricesWriter.write('\n');
            }
        // end for kValue
        }
        // end for op
        // DWBaseCertMatricesWriter.close();
        // DWBaseConfMatricesWriter.close();
        DWGAMCertMatricesWriter.close();
        DWGAMConfMatricesWriter.close();
        // DWFZCertMatricesWriter.close();
        // DWFZConfMatricesWriter.close();
        // simpleBaseCertMatricesWriter.close();
        // simpleBaseConfMatricesWriter.close();
        simpleGAMCertMatricesWriter.close();
        simpleGAMConfMatricesWriter.close();
    // simpleFZCertMatricesWriter.close();
    // simpleFZConfMatricesWriter.close();
    } catch (IOException ioe) {
        System.out.println("ioexception: " + ioe.getMessage());
    }
}
