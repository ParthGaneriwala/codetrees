private int getDigitType(char ch, boolean dot) {
    int type = JavaTokenTypes.NUM_INT;
    int rval = 0;
    boolean complete = false;
    boolean isDecimal = dot;
    boolean hexDecimalNumber = false;
    append(ch);
    while (!complete) {
        rval = readNextChar();
        // eof
        if (rval == -1) {
            return type;
        }
        ch = (char) rval;
        if (!Character.isDigit(ch)) {
            if (ch == '.') {
                if (isDecimal) {
                    return JavaTokenTypes.NUM_DOUBLE;
                } else {
                    isDecimal = true;
                    append(ch);
                }
            } else if (Character.isLetter(ch)) {
                if (ch == 'f' || ch == 'F') {
                    append(ch);
                    type = JavaTokenTypes.NUM_FLOAT;
                    isDecimal = false;
                } else if (ch == 'd' || ch == 'D') {
                    append(ch);
                    type = JavaTokenTypes.NUM_DOUBLE;
                } else if (ch == 'l' || ch == 'L') {
                    append(ch);
                    type = JavaTokenTypes.NUM_LONG;
                    isDecimal = false;
                } else if (ch == 'e' || ch == 'E') {
                    append(ch);
                    type = JavaTokenTypes.NUM_DOUBLE;
                } else if (ch == 'x') {
                    hexDecimalNumber = true;
                    append(ch);
                } else if (hexDecimalNumber && (ch == 'a' || ch == 'A' || ch == 'b' || ch == 'B' || ch == 'c' || ch == 'C' || ch == 'e' || ch == 'E')) {
                    append(ch);
                    type = JavaTokenTypes.NUM_INT;
                } else {
                    complete = true;
                }
            } else if (Character.isWhitespace(ch) || (!Character.isLetterOrDigit(ch))) {
                complete = true;
            } else {
                complete = true;
            }
        } else {
            append(ch);
            type = JavaTokenTypes.NUM_INT;
        }
    }
    if (isDecimal)
        return JavaTokenTypes.NUM_DOUBLE;
    return type;
}
