// }}}
// {{{ getScreenBounds() method
public static final Rectangle getScreenBounds(Rectangle window) {
    GraphicsDevice[] gd = GraphicsEnvironment.getLocalGraphicsEnvironment().getScreenDevices();
    Vector intersects = new Vector();
    // many items it should be fine
    for (int i = 0; i < gd.length; i++) {
        GraphicsConfiguration gc = gd[i].getDefaultConfiguration();
        // Don't add duplicates
        if (window.intersects(gc.getBounds())) {
            for (Enumeration e = intersects.elements(); e.hasMoreElements(); ) {
                GraphicsConfiguration gcc = (GraphicsConfiguration) e.nextElement();
                if (gcc.getBounds().equals(gc.getBounds()))
                    break;
            }
            intersects.add(gc);
        }
    }
    GraphicsConfiguration choice = null;
    if (intersects.size() > 0) {
        // Pick screen with largest intersection
        for (Enumeration e = intersects.elements(); e.hasMoreElements(); ) {
            GraphicsConfiguration gcc = (GraphicsConfiguration) e.nextElement();
            if (choice == null)
                choice = gcc;
            else {
                Rectangle int1 = choice.getBounds().intersection(window);
                Rectangle int2 = gcc.getBounds().intersection(window);
                int area1 = int1.width * int1.height;
                int area2 = int2.width * int2.height;
                if (area2 > area1)
                    choice = gcc;
            }
        }
    } else
        choice = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration();
    // Make adjustments for some OS's
    int screenX = choice.getBounds().x;
    int screenY = choice.getBounds().y;
    int screenW = choice.getBounds().width;
    int screenH = choice.getBounds().height;
    int x, y, w, h;
    if (isMacOS()) {
        x = screenX;
        y = screenY + 22;
        w = screenW;
        // shadow size
        h = screenH - y - 4;
    } else {
        x = screenX;
        y = screenY;
        w = screenW;
        h = screenH;
    }
    // Yay, we're finally there
    return new Rectangle(x, y, w, h);
}
