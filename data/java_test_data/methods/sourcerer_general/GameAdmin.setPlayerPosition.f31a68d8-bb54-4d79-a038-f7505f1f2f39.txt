public void setPlayerPosition(int scene, int gate) {
    switch(scene) {
        case Map.FISHBOWL:
            switch(gate) {
                case Map.WOLVES_LOWER_LEFT:
                    mainPlayer.setPosition(xPosition, MAP_HEIGHT - (TILE_SIZE * 2));
                    break;
                case Map.OUTER_FISHBOWL:
                    mainPlayer.setPosition(xPosition, Map.TILE_SIZE * 2);
                    break;
                case Map.DISTILLERY:
                    mainPlayer.setPosition(Map.TILE_SIZE, MAP_HEIGHT - (TILE_SIZE * 2));
                    break;
                default:
                    System.out.println("Bad exit");
            }
            break;
        case Map.OUTER_FISHBOWL:
            switch(gate) {
                case Map.FISHBOWL:
                    mainPlayer.setPosition(TILE_SIZE, MAP_HEIGHT - (TILE_SIZE * 2));
                    break;
                case Map.OUTER_DISTILLERY:
                    mainPlayer.setPosition(Map.TILE_SIZE * 2, yPosition);
                    break;
                default:
                    System.out.println("UNKNOWN GATE");
            }
            break;
        case Map.DISTILLERY:
            switch(gate) {
                case Map.FISHBOWL:
                    mainPlayer.setPosition(MAP_WIDTH - (TILE_SIZE * 2), MAP_HEIGHT - (TILE_SIZE * 2));
                    break;
                case Map.OUTER_DISTILLERY:
                    mainPlayer.setPosition(xPosition, Map.TILE_SIZE * 2);
                    break;
                case Map.WOLVES_LOWER_RIGHT:
                    mainPlayer.setPosition(xPosition, Map.MAP_HEIGHT - (Map.TILE_SIZE * 2));
                    break;
                default:
                    System.out.println("UNKNOWN GATE");
            }
            break;
        case Map.OUTER_DISTILLERY:
            switch(gate) {
                case Map.DISTILLERY:
                    mainPlayer.setPosition(xPosition, Map.MAP_HEIGHT - (Map.TILE_SIZE * 2));
                    break;
                case Map.OUTER_FISHBOWL:
                    mainPlayer.setPosition(Map.MAP_WIDTH - (Map.TILE_SIZE * 2), yPosition);
                    break;
                case Map.OUTSIDES:
                    mainPlayer.setPosition(xPosition, Map.TILE_SIZE * 2);
                    break;
            }
            break;
        case Map.WOLVES_LOWER_LEFT:
            switch(gate) {
                case Map.FISHBOWL:
                    mainPlayer.setPosition(xPosition, Map.TILE_SIZE * 2);
                    break;
                case Map.WOLVES_LOWER_RIGHT:
                    mainPlayer.setPosition(Map.TILE_SIZE * 2, yPosition);
                    break;
                case Map.WOLVES_UPPER_LEFT:
                    mainPlayer.setPosition(xPosition, Map.MAP_HEIGHT - (Map.TILE_SIZE * 2));
                    break;
            }
            break;
        case Map.WOLVES_UPPER_LEFT:
            switch(gate) {
                case Map.WOLVES_UPPER_RIGHT:
                    mainPlayer.setPosition(Map.TILE_SIZE * 2, yPosition);
                    break;
                case Map.WOLVES_LOWER_LEFT:
                    mainPlayer.setPosition(xPosition, Map.TILE_SIZE * 2);
                    break;
            }
            break;
        case Map.WOLVES_LOWER_RIGHT:
            switch(gate) {
                case Map.WOLVES_LOWER_LEFT:
                    mainPlayer.setPosition(Map.MAP_WIDTH - (Map.TILE_SIZE * 2), yPosition);
                    break;
                case Map.WOLVES_UPPER_RIGHT:
                    mainPlayer.setPosition(xPosition, Map.MAP_HEIGHT - (Map.TILE_SIZE * 2));
                    break;
                case Map.DISTILLERY:
                    mainPlayer.setPosition(xPosition, Map.TILE_SIZE * 2);
                    break;
            }
            break;
        case Map.WOLVES_UPPER_RIGHT:
            switch(gate) {
                case Map.WOLVES_UPPER_LEFT:
                    mainPlayer.setPosition(Map.MAP_WIDTH - (Map.TILE_SIZE * 2), yPosition);
                    break;
                case Map.WOLVES_LOWER_RIGHT:
                    mainPlayer.setPosition(xPosition, Map.TILE_SIZE * 2);
                    break;
                case Map.CCI_RECEIVER:
                    mainPlayer.setPosition(Map.TILE_SIZE * 4, Map.MAP_HEIGHT - Map.TILE_SIZE);
                    break;
                case Map.CCI_RECEIVER_2:
                    mainPlayer.setPosition(Map.TILE_SIZE * 10, Map.MAP_HEIGHT - Map.TILE_SIZE);
                    break;
            }
            break;
        case Map.CCI_COMPUTERS:
            switch(gate) {
                case Map.CCI_RECEIVER:
                    mainPlayer.setPosition(Map.TILE_SIZE * 2, yPosition - Map.TILE_SIZE);
                    break;
            }
            break;
        case Map.CCI_RECEIVER:
            switch(gate) {
                case Map.CCI_COMPUTERS:
                    mainPlayer.setPosition(Map.MAP_WIDTH - (Map.TILE_SIZE * 2), yPosition + Map.TILE_SIZE);
                    break;
                case Map.WOLVES_UPPER_RIGHT:
                    mainPlayer.setPosition(Map.MAP_WIDTH - (Map.TILE_SIZE * 2), 0);
                    break;
                case Map.WOLVES_UPPER_RIGHT_2:
                    mainPlayer.setPosition(Map.MAP_WIDTH - (Map.TILE_SIZE * 2), Map.TILE_SIZE * 4);
                    break;
            }
        case Map.OUTSIDES:
            switch(gate) {
                case Map.OUTER_DISTILLERY:
                    mainPlayer.setPosition(xPosition, Map.MAP_HEIGHT - (Map.TILE_SIZE * 2));
                    break;
            }
    }
}
