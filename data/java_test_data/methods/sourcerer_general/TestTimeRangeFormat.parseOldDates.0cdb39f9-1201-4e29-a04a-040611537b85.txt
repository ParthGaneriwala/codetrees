@Test
public void parseOldDates() throws ParseException {
    // back and forth
    SimpleTimeRange tr = parseTimeRange("941 BC");
    assertEquals("941 BC", TimeRangeFormat.format(tr));
    // Test date formats
    assertEquals(makeDate(1, 1, -2007), getBegin("2007BC"));
    assertEquals(makeDate(1, 1, -2007), getBegin("2007 BC"));
    // TSM-159
    assertEquals(makeDate(1, 1, -2007), getBegin("2007 B.C."));
    // TSM-159
    assertEquals(makeDate(1, 1, -2007), getBegin("2007 BCE"));
    // TSM-159
    assertEquals(makeDate(1, 1, 900), getBegin("900 CE"));
    // TSM-159
    assertEquals(makeDate(1, 1, -2007), getBegin("2007 bce"));
    // TSM-159
    assertEquals(makeDate(1, 1, 900), getBegin("900 ce"));
    // TSM-159
    assertEquals(makeDate(1, 1, -2007), getBegin("2007 B.C.E."));
    // TSM-159
    assertEquals(makeDate(1, 1, 900), getBegin("900 C.E."));
    // TSM-159
    assertEquivalent(makeDayRange(12, 7, -1941, 12, 8, -1941), parseTimeRange("DECEMBER 7, 1941 BC"));
    assertEquals(makeDate(3, 1, -2007), getBegin("2007 BC, March"));
    assertEquals(makeDate(3, 1, -2007), getBegin("March, 2007 BC"));
    assertEquals(makeDate(3, 1, -69), getBegin("March, 69 BC"));
    assertEquals(makeDate(5, 22, -69), getBegin("5/22/69 BC"));
    // test date ranges
    // full year fanciness
    assertEquivalent(makeDayRange(1, 1, -941, 1, 1, -940), parseTimeRange("941 BC"));
    assertEquivalent(makeDayRange(12, 7, -1941, 12, 8, -1941), parseTimeRange("December 7, 1941 BC"));
    assertEquivalent(makeDayRange(12, 7, -1941, 10, 1, 0, 12, 7, -1941, 10, 2, 0), parseTimeRange("Dec 7, 1941 BC, 10:01AM"));
    assertEquivalent(makeDayRange(12, 7, -1941, 10, 1, 1, 12, 7, -1941, 10, 1, 2), parseTimeRange("Dec 7, 1941 BC, 10:01:01AM"));
    assertEquivalent(makeDayRange(1, 1, -1941, 1, 1, -1939), parseTimeRange("1941 BC - 1940 BC"));
    assertEquivalent(makeDayRange(12, 7, -1941, 12, 8, -1940), parseTimeRange("Dec 7, 1941 BC - 12/7/1940 BC"));
}
