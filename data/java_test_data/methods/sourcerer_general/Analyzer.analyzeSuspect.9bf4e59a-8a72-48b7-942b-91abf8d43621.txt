public void analyzeSuspect(Suspect s) {
    s.numNormalFiles = 0;
    for (myFile f : s.allfiles) {
        if (f.filetype != f.filetype.NOT_SET) {
            continue;
        }
        List<String> _NFE = getStringArrayAsList(_FILEENDINGS);
        String e = f.getEnding().toLowerCase();
        // wenn typische fileendung f�r Mediadatei und kein sampleavi oder
        if (_NFE.contains(e) && !f.getAbsolutePath().toLowerCase().contains("sample")) {
            int position = _NORMALFILEENDINGS.indexOf(e);
            switch(position) {
                case 0:
                case 1:
                case 2:
                case 3:
                case 4:
                case 5:
                    f.filetype = myFile.FileType.MOVIEFILE;
                    break;
                case 6:
                    f.filetype = myFile.FileType.AUDIOFILE;
                    break;
                case 7:
                case 8:
                case 9:
                case 10:
                    f.filetype = myFile.FileType.EXEFILE;
                    break;
                case 11:
                case 12:
                    f.filetype = myFile.FileType.IMAGEFILE;
                    break;
                default:
                    break;
            }
        // sonst wenn RARDATEI oder so
        } else if ((!e.isEmpty()) && e.replaceAll("(.r[0-9][0-9])|(.rar)|(.[0-9][0-9][0-9])|(.zip)", "").equals("")) {
            f.filetype = myFile.FileType.ARCHIVEFILE;
        // wenn VERZEICHNIS
        } else if (f.isDirectory()) {
            f.filetype = myFile.FileType.DIRECTORY;
        } else if (f.getAbsolutePath().toLowerCase().contains("sample")) {
            f.filetype = myFile.FileType.SAMPLEFILE;
        } else {
            f.filetype = myFile.FileType.OTHERFILE;
        }
    }
    // ende for f:myfile
    int n;
    // f�r den suspect den endg�ltigen typ bestimmen:
    if ((n = s.getNumberOf(Suspect.FileType.MOVIEFILE)) > 0) {
        // typstring feststellen bei serie/film
        if (containsRegExp(s.mainpath.toUpperCase(), "S[0-9][0-9]E[0-9][0-9]")) {
            s.typstring = "tv show";
            s.filetype = Suspect.FileType.TVSHOWFILE;
        } else {
            s.filetype = Suspect.FileType.MOVIEFILE;
            s.typstring = "movie";
        }
    } else if ((n = s.getNumberOf(Suspect.FileType.AUDIOFILE)) > 0) {
        s.filetype = Suspect.FileType.AUDIOFILE;
        s.typstring = "audio";
    } else if ((n = s.getNumberOf(Suspect.FileType.EXEFILE)) > 0) {
        s.typstring = "program";
        s.filetype = Suspect.FileType.EXEFILE;
    } else if ((n = s.getNumberOf(Suspect.FileType.IMAGEFILE)) > 0) {
        s.typstring = "images";
        s.filetype = Suspect.FileType.IMAGEFILE;
    } else if ((n = s.getNumberOf(Suspect.FileType.ARCHIVEFILE)) > 0) {
        if (containsRegExp(s.mainpath.toUpperCase(), "S[0-9][0-9]E[0-9][0-9]")) {
            s.typstring = "tv show";
        }
    } else if ((n = s.getNumberOf(Suspect.FileType.OTHERFILE)) > 0) {
        s.typstring = "???";
    }
    s.numNormalFiles = n;
    // rating abholen
    if (ratings.containsKey(s.getFolderName())) {
        s.rating = ratings.get(s.getFolderName());
    }
}
