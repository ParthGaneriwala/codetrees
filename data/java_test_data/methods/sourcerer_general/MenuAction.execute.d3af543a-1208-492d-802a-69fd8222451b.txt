@Override
public String execute() {
    User u = userManager.getUserByUsername(getRequest().getRemoteUser());
    if (u.isUserAdminPayment()) {
        for (Employee e : employeeManager.findByRole("ROLE_EMPLOYEE_FIXED")) {
            if (!e.getFinishSalaries()) {
                List<Salary> ss = salaryManager.findByEmployee(e);
                if (ss.size() > 0) {
                    Salary s = ss.get(ss.size() - 1);
                    Date currentDate = new Date(System.currentTimeMillis());
                    Date endDate = new Date(s.getEndDate().getTime());
                    int aCLSize = asistanceControlManager.sizeByEmployeePeriod(e, s.getInitDate(), endDate);
                    int difACLSize = aCLSize;
                    int lastACLSize = aCLSize;
                    while (difACLSize > 0) {
                        endDate.setTime(endDate.getTime() + (86400000 * difACLSize));
                        aCLSize = asistanceControlManager.sizeByEmployeePeriod(e, s.getInitDate(), endDate);
                        difACLSize = aCLSize - lastACLSize;
                        lastACLSize = aCLSize;
                    }
                    if (endDate.before(currentDate)) {
                        Date iD = new Date(endDate.getTime() + 86400000);
                        Date eD = new Date(iD.getTime());
                        int m = eD.getMonth() + 1;
                        if (m == 12) {
                            m = 0;
                        }
                        eD.setMonth(m);
                        if (eD.getMonth() > m) {
                            while (eD.getMonth() > m) {
                                eD.setTime(eD.getTime() - 86400000);
                            }
                        } else {
                            eD.setTime(eD.getTime() - 86400000);
                        }
                        Salary newS = new Salary(false, false, iD, eD, e.getSalarieFixed(), e);
                        salaryManager.save(newS);
                        if (asistanceControlManager.sizeByHalfEmployeePeriod(e, s.getInitDate(), endDate)) {
                            asistanceControlManager.save(new AsistanceControl(iD, true, e));
                        }
                    }
                } else {
                    Date currentDate = new Date(System.currentTimeMillis());
                    if (e.getEntryDate().equals(currentDate) || e.getEntryDate().before(currentDate)) {
                        Date eD = new Date(e.getEntryDate().getTime());
                        int m = eD.getMonth() + 1;
                        if (m == 12) {
                            m = 0;
                        }
                        eD.setMonth(m);
                        if (eD.getMonth() > m) {
                            while (eD.getMonth() > m) {
                                eD.setTime(eD.getTime() - 86400000);
                            }
                        } else {
                            eD.setTime(eD.getTime() - 86400000);
                        }
                        Salary newS = new Salary(false, false, e.getEntryDate(), eD, e.getSalarieFixed(), e);
                        salaryManager.save(newS);
                    }
                }
            }
        }
    }
    return SUCCESS;
}
