@Test
public void testTempEval2010CollectionReader() throws Exception {
    CollectionReader reader = TempEval2010CollectionReader.getCollectionReader(this.outputDirectory.getPath());
    Assert.assertTrue(reader.hasNext());
    reader.getNext(this.jCas.getCas());
    assertViewText(WSJ_0032_BASE_SEGMENTATION, TimeMLViewName.TEMPEVAL_BASE_SEGMENTATION);
    assertViewText(EVENT_ATTRIBUTES, TimeMLViewName.TEMPEVAL_EVENT_ATTRIBUTES);
    assertViewText(EVENT_EXTENTS, TimeMLViewName.TEMPEVAL_EVENT_EXTENTS);
    assertViewText(TIMEX_ATTRIBUTES, TimeMLViewName.TEMPEVAL_TIMEX_ATTRIBUTES);
    assertViewText(TIMEX_EXTENTS, TimeMLViewName.TEMPEVAL_TIMEX_EXTENTS);
    assertViewText(TLINKS_DCT_EVENT, TimeMLViewName.TEMPEVAL_TLINK_DCT_EVENT);
    assertViewText(TLINKS_MAIN_EVENTS, TimeMLViewName.TEMPEVAL_TLINK_MAIN_EVENTS);
    assertViewText(TLINKS_SUBORDINATED_EVENTS, TimeMLViewName.TEMPEVAL_TLINK_SUBORDINATED_EVENTS);
    assertViewText(TLINKS_TIMEX_EVENT, TimeMLViewName.TEMPEVAL_TLINK_TIMEX_EVENT);
    assertViewText(DCT, TimeMLViewName.TEMPEVAL_DCT);
    Assert.assertTrue(reader.hasNext());
    this.jCas.reset();
    reader.getNext(this.jCas.getCas());
    assertViewText(SJMN91_BASE_SEGMENTATION, TimeMLViewName.TEMPEVAL_BASE_SEGMENTATION);
    assertViewText("", TimeMLViewName.TEMPEVAL_EVENT_ATTRIBUTES);
    assertViewText("", TimeMLViewName.TEMPEVAL_EVENT_EXTENTS);
    assertViewText("", TimeMLViewName.TEMPEVAL_TIMEX_ATTRIBUTES);
    assertViewText("", TimeMLViewName.TEMPEVAL_TIMEX_EXTENTS);
    assertViewText("", TimeMLViewName.TEMPEVAL_TLINK_DCT_EVENT);
    assertViewText("", TimeMLViewName.TEMPEVAL_TLINK_MAIN_EVENTS);
    assertViewText("", TimeMLViewName.TEMPEVAL_TLINK_SUBORDINATED_EVENTS);
    assertViewText("", TimeMLViewName.TEMPEVAL_TLINK_TIMEX_EVENT);
    assertViewText("", TimeMLViewName.TEMPEVAL_DCT);
}
