@Test
@DirtiesContext
public void testNewMail() throws Exception {
    setupNewMailTest();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    userService.createUser("U2", "test", "test", "");
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Verify
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    userService.createUser("U1", "test", "test", "");
    userService.login("U1", "test");
    tester.startPage(CmsPage.class);
    tester.assertVisible("form:content:container:1:button");
    tester.newFormTester("form").submit("content:container:1:button");
    tester.assertVisible("form:content:listView:0:field");
    tester.assertVisible("form:content:listView:1:field");
    tester.assertVisible("form:content:listView:2:textArea");
    FormTester formTester = tester.newFormTester("form");
    formTester.setValue("content:listView:0:field", "U2");
    formTester.setValue("content:listView:1:field", "subject2");
    formTester.setValue("content:listView:2:textArea", "message message");
    formTester.submit("content:invoke");
    tester.assertVisible("form:content:container:1:button");
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Verify U2 got mail
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    userService.login("U2", "test");
    Assert.assertEquals(1, messengerService.getMails().size());
    Assert.assertEquals("U1", messengerService.getMails().get(0).getFromUser());
    Assert.assertEquals("subject2", messengerService.getMails().get(0).getSubject());
    Assert.assertEquals("message message", messengerService.getMails().get(0).getBody());
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
