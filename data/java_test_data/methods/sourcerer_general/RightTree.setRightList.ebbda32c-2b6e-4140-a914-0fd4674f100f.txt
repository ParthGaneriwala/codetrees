public static void setRightList(List rights) {
    // if (node == null || allRights == null) {
    // 此处仅仅获得最大的maxgrade;
    rightMap.clear();
    rightNameMap.clear();
    menuIdMap.clear();
    for (int i = 0; i < rights.size(); i++) {
        SysRight right = (SysRight) rights.get(i);
        if (right.getGrade() > maxGrade)
            maxGrade = right.getGrade();
        // LOG.debug("code==" + menu.getRightcode() + ",==" +
        // menu.getRightname());
        // 上下级关系
        menuIdMap.put(right.getRightcode(), right.getParentcode());
        // 根据rightcode能得到menu
        rightMap.put(right.getRightcode(), right);
        rightNameMap.put(right.getRightcode(), right.getRightname());
    }
    node = new TreeNode(menuIdMap);
    for (int i = 0; i < rights.size(); i++) {
        SysRight right = (SysRight) rights.get(i);
        // 得到的数据已经包括了他自己了
        List<SysRight> parent = RightTree.getParentRights(right.getRightcode());
        // LOG.debug("===="+right.getRightcode());
        long compareid = 0L;
        for (int ii = 0; ii < parent.size(); ii++) {
            SysRight _right = parent.get(ii);
            // LOG.debug("========"+_right.getRightcode());
            compareid += _right.getOrderid() * tenn((maxGrade - _right.getGrade()) * 2);
        }
        right.setCompareid(compareid);
    // LOG.info(right.getRightcode() + "之compareid=" + compareid);
    }
    // 这里最来判断是否有子节点,根据ALL_PARENTCODE里的数据来
    for (int i = 0; i < rights.size(); i++) {
        SysRight right = (SysRight) rights.get(i);
        if (ALL_PARENTCODE.contains(right.getRightcode()))
            right.setHasChild(true);
    }
    allRights = rights;
    Collections.sort(allRights, new RightComparator());
    for (int i = 0; i < rights.size(); i++) {
        SysRight right = (SysRight) rights.get(i);
        LOG.debug(right.getRightcode() + "=>" + right.getRightname() + "=>" + right.getCompareid() + "=>" + right.getHasChild());
    }
    // for(int i=0;i<allRights.size();i++){
    // 
    // SysRight right = (SysRight) allRights.get(i);
    // LOG.debug("compareid="+right.getCompareid()+"=="+right.getRightcode());
    // 
    // }
    LOG.info("系统启动初始化权限树成功...");
// }
}
