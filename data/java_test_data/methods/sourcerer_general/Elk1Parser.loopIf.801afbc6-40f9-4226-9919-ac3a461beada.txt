private ParseNode loopIf() {
    // special for the Block deal with it separately
    IfStatementNode ifParent;
    ParseNode exprChildLeft;
    IfStatementNode thenChildMid;
    IfStatementNode elseChildRight;
    // nowReadingsymbol must be if
    ifParent = new IfStatementNode(IF);
    readToken();
    if (!(nowReadingsymbol.isOperator(Operator.LBRACKET)))
        error("the if keyword must be followed by a brace express");
    // nowReadingsymbol is (
    exprChildLeft = braceExpr();
    // nowReadingsymbol is the first token after if(expr)
    if (nowReadingsymbol.isKeyword(Keyword.THEN)) {
        // if(expr) then ......
        thenChildMid = new IfStatementNode(THEN);
        // make the nowReadingsymbol the first token in bIfStmt
        readToken();
        thenChildMid.appendChild(loopBIfStmt());
        if (nowReadingsymbol.isKeyword(Keyword.ELSE)) {
            elseChildRight = new IfStatementNode(ELSE);
            // make the nowReadingsymbol the first token in bIfStmt
            readToken();
            elseChildRight.appendChild(loopBIfStmt());
            ifParent.appendChild(exprChildLeft);
            ifParent.appendChild(thenChildMid);
            ifParent.appendChild(elseChildRight);
            // if(expr) then else block���Լ��ж��ǲ���EOF
            return ifParent;
        } else {
            ifParent.appendChild(exprChildLeft);
            ifParent.appendChild(thenChildMid);
            return ifParent;
        }
    } else if (nowReadingsymbol.isKeyword(Keyword.ELSE)) {
        // if(expr) else ......
        elseChildRight = new IfStatementNode(ELSE);
        // make the nowReadingsymbol the first token in bIfStmt
        readToken();
        elseChildRight.appendChild(loopBIfStmt());
        if (nowReadingsymbol.isKeyword(Keyword.THEN)) {
            thenChildMid = new IfStatementNode(THEN);
            // make the nowReadingsymbol the first token in bIfStmt
            readToken();
            thenChildMid.appendChild(loopBIfStmt());
            ifParent.appendChild(exprChildLeft);
            ifParent.appendChild(thenChildMid);
            ifParent.appendChild(elseChildRight);
            return ifParent;
        } else {
            ifParent.appendChild(exprChildLeft);
            ifParent.appendChild(elseChildRight);
            return ifParent;
        }
    } else {
        // only if(expr) Ҫ���Լ��ж�EOF!!!!!!!!!!!
        isEndOfCurrentBlock();
        isEndOfCurrentLoop();
        ifParent.appendChild(exprChildLeft);
        return ifParent;
    }
}
