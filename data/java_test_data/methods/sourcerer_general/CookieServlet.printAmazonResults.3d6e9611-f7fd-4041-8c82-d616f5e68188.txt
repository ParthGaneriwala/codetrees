private void printAmazonResults(PrintWriter out, String keyword, XMLParser parser) {
    SignedRequestsHelper helper;
    try {
        helper = SignedRequestsHelper.getInstance(ENDPOINT, AWS_ACCESS_KEY_ID, AWS_SECRET_KEY);
    } catch (Exception e) {
        e.printStackTrace();
        return;
    }
    String amazonRequest = null;
    Map<String, String> params = new HashMap<String, String>();
    params.put("Service", "AWSECommerceService");
    params.put("Operation", "ItemSearch");
    params.put("SearchIndex", "All");
    params.put("Keywords", keyword);
    amazonRequest = helper.sign(params);
    ArrayList<AmazonResult> amazonResults = new ArrayList<AmazonResult>();
    boolean hasResults = true;
    try {
        Document amazonDoc = null;
        try {
            amazonDoc = parser.parseXML(amazonRequest.trim());
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (amazonDoc != null) {
            NodeList resultNodes = amazonDoc.getDocumentElement().getElementsByTagName("Item");
            int lastResult = 10;
            if (resultNodes.getLength() < 10) {
                lastResult = resultNodes.getLength();
            }
            if (resultNodes.getLength() == 0) {
                hasResults = false;
            }
            for (int i = 0; i < lastResult; i++) {
                NodeList data = resultNodes.item(i).getChildNodes();
                String amazonURLString = null;
                String amazonTitleString = null;
                for (int j = 0; j < data.getLength(); j++) {
                    if (data.item(j).getNodeName().startsWith("DetailPageURL")) {
                        amazonURLString = data.item(j).getTextContent();
                        if (amazonURLString.length() > 100) {
                            amazonURLString = amazonURLString.substring(0, 100) + "...";
                        }
                    } else if (data.item(j).getNodeName().startsWith("ItemAttributes")) {
                        NodeList itemData = data.item(j).getChildNodes();
                        for (int k = 0; k < itemData.getLength(); k++) {
                            if (itemData.item(k).getNodeName().startsWith("Title")) {
                                amazonTitleString = itemData.item(k).getTextContent();
                            }
                        }
                    }
                }
                amazonResults.add(new AmazonResult(amazonURLString, amazonTitleString));
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
    if (hasResults) {
        out.println("<div id=\"amazonResults\">");
        out.println("<h2>Amazon Results <strong>1-10</strong> for <strong><span class=\"keyword\">" + keyword + "</span></strong></h2>");
        out.println("<ul>");
        for (int i = 0; i < amazonResults.size(); i++) {
            out.println("<li>");
            out.println("<a href=\"" + amazonResults.get(i).getURL() + "\">");
            out.println(amazonResults.get(i).getTitle());
            out.println("</a>");
            out.println("<p class=\"link\">" + amazonResults.get(i).getURL() + "</p>");
            out.println("</li>");
        }
        out.println("</ul>");
        out.println("</div>");
    }
}
