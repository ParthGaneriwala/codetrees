private static Rectangle findBiggestRectangle(int startX, int startY, Collection<Index> tiles) {
    Index index = new Index(startX, startY);
    if (!tiles.contains(index)) {
        throw new IllegalArgumentException("Invalid start point");
    }
    Rectangle rectangle = new Rectangle(index, index);
    boolean canGrowNorth = true;
    boolean canGrowEast = true;
    boolean canGrowSouth = true;
    boolean canGrowWest = true;
    while (canGrowNorth || canGrowEast || canGrowSouth || canGrowWest) {
        if (rectangle.getStart().getY() == 0) {
            canGrowNorth = false;
        }
        if (rectangle.getStart().getX() == 0) {
            canGrowWest = false;
        }
        if (canGrowNorth) {
            Rectangle newRectangle = rectangle.copy();
            newRectangle.growNorth(1);
            int size = Math.abs(newRectangle.getStart().getX() - newRectangle.getEnd().getX());
            if (checkPassableAtomsHorizontal(newRectangle.getStart().getX(), newRectangle.getStart().getY(), size, tiles)) {
                rectangle = newRectangle;
            } else {
                canGrowNorth = false;
            }
        }
        if (canGrowEast) {
            Rectangle newRectangle = rectangle.copy();
            newRectangle.growEast(1);
            int size = Math.abs(newRectangle.getStart().getY() - newRectangle.getEnd().getY());
            if (checkPassableAtomsVertial(newRectangle.getEnd().getX(), newRectangle.getStart().getY(), size, tiles)) {
                rectangle = newRectangle;
            } else {
                canGrowEast = false;
            }
        }
        if (canGrowSouth) {
            Rectangle newRectangle = rectangle.copy();
            newRectangle.growSouth(1);
            int size = Math.abs(newRectangle.getStart().getX() - newRectangle.getEnd().getX());
            if (checkPassableAtomsHorizontal(newRectangle.getStart().getX(), newRectangle.getEnd().getY(), size, tiles)) {
                rectangle = newRectangle;
            } else {
                canGrowSouth = false;
            }
        }
        if (canGrowWest) {
            Rectangle newRectangle = rectangle.copy();
            newRectangle.growWest(1);
            int size = Math.abs(newRectangle.getStart().getY() - newRectangle.getEnd().getY());
            if (checkPassableAtomsVertial(newRectangle.getStart().getX(), newRectangle.getStart().getY(), size, tiles)) {
                rectangle = newRectangle;
            } else {
                canGrowWest = false;
            }
        }
    }
    return rectangle;
}
