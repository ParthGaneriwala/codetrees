public static void main(String[] args) {
    ListaValor entrada = new ListaValor();
    Imp1Parser parser;
    if (args.length == 0) {
        System.out.println("Imperativa 1 PLP Parser Version 0.0.2:  Reading from standard input . . .");
        parser = new Imp1Parser(System.in);
    } else {
        System.out.println("Imperativa 1 PLP Parser Version 0.0.2:  Reading from file " + args[0] + " . . .");
        try {
            parser = new Imp1Parser(new java.io.FileInputStream(args[0]));
        } catch (java.io.FileNotFoundException e) {
            System.out.println("Java Parser Version 1.0.2:  File " + args[0] + " not found.");
            return;
        }
        List valores = new LinkedList();
        for (int i = 1; i < args.length; i++) {
            String parametro = args[i];
            try {
                Integer inteiro = Integer.valueOf(parametro);
                valores.add(new ValorInteiro(inteiro.intValue()));
                continue;
            } catch (NumberFormatException e) {
            }
            if (parametro.equalsIgnoreCase("true") || parametro.equalsIgnoreCase("false")) {
                Boolean booleano = Boolean.valueOf(parametro);
                valores.add(new ValorBooleano(booleano.booleanValue()));
            } else {
                valores.add(new ValorString(parametro));
            }
        }
        entrada = criaListaValor(valores);
    }
    try {
        Programa programa = parser.Input();
        System.out.println("Imperativa 1 PLP Parser Version 0.0.2:  Imperativa2 program parsed successfully.");
        if (programa.checaTipo(new ContextoCompilacaoImperativa(entrada))) {
            ListaValor saida = programa.executar(new ContextoExecucaoImperativa(entrada));
            System.out.println(saida);
        } else {
            System.out.println("Erro de tipo");
        }
    } catch (Exception e) {
        System.out.println("Imperativa 1 PLP Parser Version 0.0.2:  Encountered errors during parse.");
        e.printStackTrace();
    }
}
