public String edit() throws IOException {
    listCatalog();
    HttpServletRequest request = getRequest();
    boolean editProfile = (request.getRequestURI().indexOf("editProfile") > -1);
    // if URL is "editProfile" - make sure it's the current user
    if (editProfile) {
        // but it's a legitimate bug, so I'll fix it. ;-)
        if ((request.getParameter("id") != null) || (request.getParameter("from") != null)) {
            ServletActionContext.getResponse().sendError(HttpServletResponse.SC_FORBIDDEN);
            log.warn("User '" + request.getRemoteUser() + "' is trying to edit user '" + request.getParameter("id") + "'");
            return null;
        }
    }
    // if a user's id is passed in
    if (id != null) {
        try {
            Long.parseLong(id);
            System.out.println("parsed: " + Long.parseLong(id));
            user = userManager.getUser(id);
        } catch (Exception e) {
            user = userManager.getUserByUsername(id);
        }
        // lookup the user using that id
        user = userManager.getUser(id);
    } else if (editProfile) {
        user = userManager.getUserByUsername(request.getRemoteUser());
    } else {
        user = new User();
    // user.addRole(new Role(Constants.USER_ROLE));
    }
    if (user.getUsername() != null) {
        user.setConfirmPassword(user.getPassword());
        // if user logged in with remember me, display a warning that they can't change passwords
        log.debug("checking for remember me login...");
        AuthenticationTrustResolver resolver = new AuthenticationTrustResolverImpl();
        SecurityContext ctx = SecurityContextHolder.getContext();
        if (ctx != null) {
            Authentication auth = ctx.getAuthentication();
            if (resolver.isRememberMe(auth)) {
                getSession().setAttribute("cookieLogin", "true");
                saveMessage(getText("userProfile.cookieLogin"));
            }
        }
    }
    System.out.println(user.getUsername());
    return SUCCESS;
}
