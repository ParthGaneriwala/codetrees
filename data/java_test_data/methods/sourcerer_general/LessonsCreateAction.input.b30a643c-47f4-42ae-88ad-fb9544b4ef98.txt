@Override
public String input() throws Exception {
    SysGroupService groupservice = (SysGroupService) this.getBean("sysGroupService");
    SysGroup mygroup = this.getLoginUser().getSysGroup();
    // 要共享给哪些个课程
    shouldsharedgroupids = groupservice.getAllsharedunion();
    if (shouldsharedgroupids != null && shouldsharedgroupids.size() != 0) {
        // 课程共享的时候，去掉自己
        if (mygroup != null) {
            for (Object obj : shouldsharedgroupids) {
                SysGroup group = (SysGroup) obj;
                if (group.getGroupid() == mygroup.getGroupid()) {
                    shouldsharedgroupids.remove(group);
                    break;
                }
            }
        }
    }
    if (mygroup == null || mygroup.getGrouptype() > 3) {
        this.datavisible.getVisibleDatas(this.getLoginUser(), false);
        shouldview = true;
    } else {
        shouldview = false;
    }
    this.lesson.setFenshuoff("100");
    this.lesson.setXuefen(new Float(0.0));
    datestart = new SimpleDateFormat("yyyy-MM-dd").format(new java.util.Date());
    hmstart = "14:00";
    dateend = datestart;
    hmend = "15:00";
    if (onlyonline == 0) {
        return "local";
    }
    if (onlyonline == 2 || onlyonline == 1) {
        // 新增授课律师的课程
        SysUser loginuser = this.getLoginUser();
        SysRole loginrole = loginuser.getSysRole();
        // System.out.println("==============================="+loginrole);
        if (loginrole != null && loginrole.getRoleid() == 100) {
            // 授课律师登录
            listall = false;
            lesson.setTeacherid(loginuser.getUserid());
        } else {
            BasicService basicservice = (BasicService) this.getBean("basicService");
            DetachedCriteria dc = DetachedCriteria.forClass(Teacher.class);
            if (teachername != null && !teachername.equals("")) {
                dc.add(Restrictions.like("username", teachername, MatchMode.ANYWHERE));
            }
            teacherList = basicservice.findAllByCriteria(dc);
        }
    }
    return "online";
}
