public boolean writeFile(ContactManager conM, String filename) {
    try {
        WritableWorkbook book = Workbook.createWorkbook(new File(filename));
        WritableSheet sheet = book.createSheet("Sheet_1", 0);
        // add title
        Label label = null;
        label = new Label(0, 0, "name");
        sheet.addCell(label);
        label = new Label(1, 0, "phoneNumber");
        sheet.addCell(label);
        label = new Label(2, 0, "fixedTel");
        sheet.addCell(label);
        label = new Label(3, 0, "email");
        sheet.addCell(label);
        label = new Label(4, 0, "qq");
        sheet.addCell(label);
        label = new Label(5, 0, "nick");
        sheet.addCell(label);
        label = new Label(6, 0, "sex");
        sheet.addCell(label);
        label = new Label(7, 0, "birthday");
        sheet.addCell(label);
        label = new Label(8, 0, "icon");
        sheet.addCell(label);
        label = new Label(9, 0, "address");
        sheet.addCell(label);
        label = new Label(10, 0, "workspace");
        sheet.addCell(label);
        label = new Label(11, 0, "zipCode");
        sheet.addCell(label);
        label = new Label(12, 0, "homePage");
        sheet.addCell(label);
        label = new Label(13, 0, "otherWay");
        sheet.addCell(label);
        label = new Label(14, 0, "normal");
        sheet.addCell(label);
        label = new Label(15, 0, "relation");
        sheet.addCell(label);
        // add contact
        ArrayList<Contact> contacts = conM.getContacts();
        for (int i = 0; i < contacts.size(); i++) {
            Contact contact = contacts.get(i);
            label = new Label(0, i + 1, contact.getName());
            sheet.addCell(label);
            label = new Label(1, i + 1, contact.getPhoneNumber());
            sheet.addCell(label);
            label = new Label(2, i + 1, contact.getFixedTel());
            sheet.addCell(label);
            label = new Label(3, i + 1, contact.getEmail());
            sheet.addCell(label);
            label = new Label(4, i + 1, contact.getQq());
            sheet.addCell(label);
            label = new Label(5, i + 1, contact.getNick());
            sheet.addCell(label);
            switch(contact.getSex()) {
                case 1:
                    label = new Label(6, i + 1, "M");
                    break;
                case 2:
                    label = new Label(6, i + 1, "F");
                    break;
                default:
                    label = new Label(6, i + 1, "");
                    break;
            }
            sheet.addCell(label);
            String birthday = contact.getBirthday().toString();
            label = new Label(7, i + 1, birthday);
            ;
            sheet.addCell(label);
            label = new Label(8, i + 1, contact.getIcon());
            sheet.addCell(label);
            label = new Label(9, i + 1, contact.getAddress());
            sheet.addCell(label);
            label = new Label(10, i + 1, contact.getWorkplace());
            sheet.addCell(label);
            label = new Label(11, i + 1, contact.getZipCode());
            sheet.addCell(label);
            label = new Label(12, i + 1, contact.getHomepage());
            sheet.addCell(label);
            // add otherWays
            ArrayList<String> otherWays = contact.getOtherWay();
            String otherWayStr = "";
            if (otherWays.size() > 0) {
                for (int j = 0; j < otherWays.size() - 1; j++) {
                    otherWayStr += otherWays.get(j);
                    otherWayStr += ";";
                }
                otherWayStr += otherWays.get(otherWays.size() - 1);
            }
            label = new Label(13, i + 1, otherWayStr);
            sheet.addCell(label);
            // add NormalTag
            ArrayList<NormalTag> normals = contact.getNormal();
            String normalStr = "";
            if (normals.size() > 0) {
                for (int j = 0; j < normals.size() - 1; j++) {
                    normalStr += normals.get(j).getName();
                    normalStr += ";";
                }
                normalStr += normals.get(normals.size() - 1).getName();
            }
            label = new Label(14, i + 1, normalStr);
            sheet.addCell(label);
            // add relation
            ArrayList<RelationTag> relations = contact.getRelation();
            String relationStr = "";
            for (int j = 0; j < relations.size(); j++) {
                RelationTag relationTag = relations.get(j);
                ArrayList<Contact> cons = relationTag.getContacts(contact);
                for (int k = 0; k < cons.size(); k++) {
                    relationStr = relationStr + "<" + relationTag.getName() + "," + contact.getName() + "," + cons.get(k).getName() + ">" + ";";
                }
            }
            if (!relationStr.isEmpty())
                relationStr = relationStr.substring(0, relationStr.length() - 1);
            label = new Label(15, i + 1, relationStr);
            sheet.addCell(label);
        }
        book.write();
        book.close();
    } catch (Exception e) {
        e.printStackTrace();
        return false;
    }
    return true;
}
