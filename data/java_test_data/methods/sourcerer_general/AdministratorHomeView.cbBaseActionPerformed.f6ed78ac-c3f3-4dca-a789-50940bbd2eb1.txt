private void cbBaseActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    if (this.cbBase.getSelectedItem().equals("Event")) {
        this.cbFrequency.removeAllItems();
        this.cbFrequency.addItem("");
        this.cbFrequency.addItem("Daily");
        this.cbFrequency.addItem("Monthly");
        this.cbFrequency.addItem("Yearly");
        this.cbFrequency.addItem("Custom");
        this.cbFrequency.addItem("All");
    } else {
        this.cbFrequency.removeAllItems();
        this.cbFrequency.addItem("");
        this.cbFrequency.addItem("Daily");
        this.cbFrequency.addItem("Monthly");
        this.cbFrequency.addItem("Yearly");
        this.cbFrequency.addItem("Custom");
    }
    if (this.cbBase.getSelectedItem().equals("Venue")) {
        this.cbSelect.removeAllItems();
        // this.cbSelect.addItem("");
        this.lbSelect.setText("VENUE LIST");
        VenueController vc = new VenueController();
        Collection<Venue> venues = vc.getAllVenues();
        for (Venue venue : venues) {
            this.cbSelect.addItem(venue);
        }
    } else if (this.cbBase.getSelectedItem().equals("Event")) {
        this.cbSelect.removeAllItems();
        // this.cbSelect.addItem("");
        this.lbSelect.setText("EVENT LIST");
        EventController ec = new EventController();
        Collection<Event> events = ec.getAllEvents();
        for (Event event : events) {
            this.cbSelect.addItem(event);
        }
    } else if (this.cbBase.getSelectedItem().equals("Customer")) {
        this.cbSelect.removeAllItems();
        this.lbSelect.setText("CUSTOMER LIST");
        // this.cbSelect.addItem("");
        CustomerController cc = new CustomerController();
        Collection<Customer> customers = cc.getAllCustomers();
        for (Customer cust : customers) {
            this.cbSelect.addItem(cust);
        }
    } else if (this.cbBase.getSelectedItem().equals("Location")) {
        this.cbSelect.removeAllItems();
        this.lbSelect.setText("LOCATION LIST");
        // this.cbSelect.addItem("");
        BookedTicketViewController bkcon = new BookedTicketViewController();
        RowSet rs = bkcon.getLocation();
        try {
            while (rs.next()) {
                this.cbSelect.addItem(rs.getString(1));
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdministratorHomeView.class.getName()).log(Level.SEVERE, null, ex);
        }
    } else {
        this.cbSelect.removeAllItems();
        this.lbSelect.setText("");
        this.lbReport.setText("");
    }
}
