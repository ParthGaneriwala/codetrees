private void handleCreateStates() {
    for (ESMFComponentConnection conn : getComposition().getConnection()) {
        ESMFState state;
        String stateName;
        if (conn.getDirection().isAtoB()) {
            // export state
            state = conn.getEndpointA().getExportState();
            stateName = stateToName.get(state);
            FunctionReference fr = fomFactory.createFunctionReference("ESMF_StateCreate");
            fr.addActualArgumentWithNamedConstant(null, "\"" + stateName + "\"");
            fr.addActualArgumentWithNamedConstant(null, "ESMF_STATE_EXPORT");
            fr.addActualArgumentWithNamedConstant("rc", VAR_LOCAL_RC);
            AssignmentStatement as = fomFactory.createAssignmentStatement(stateName, fr);
            mp.addExecutionPartConstruct(as);
            // import state
            state = conn.getEndpointB().getImportState();
            stateName = stateToName.get(state);
            fr = fomFactory.createFunctionReference("ESMF_StateCreate");
            fr.addActualArgumentWithNamedConstant(null, "\"" + stateName + "\"");
            fr.addActualArgumentWithNamedConstant(null, "ESMF_STATE_IMPORT");
            fr.addActualArgumentWithNamedConstant("rc", VAR_LOCAL_RC);
            as = fomFactory.createAssignmentStatement(stateName, fr);
            mp.addExecutionPartConstruct(as);
        }
        if (conn.getDirection().isBtoA()) {
            // import state
            state = conn.getEndpointA().getImportState();
            stateName = stateToName.get(state);
            FunctionReference fr = fomFactory.createFunctionReference("ESMF_StateCreate");
            fr.addActualArgumentWithNamedConstant(null, "\"" + stateName + "\"");
            fr.addActualArgumentWithNamedConstant(null, "ESMF_STATE_IMPORT");
            fr.addActualArgumentWithNamedConstant("rc", VAR_LOCAL_RC);
            AssignmentStatement as = fomFactory.createAssignmentStatement(stateName, fr);
            mp.addExecutionPartConstruct(as);
            // export state
            state = conn.getEndpointB().getExportState();
            stateName = stateToName.get(state);
            fr = fomFactory.createFunctionReference("ESMF_StateCreate");
            fr.addActualArgumentWithNamedConstant(null, "\"" + stateName + "\"");
            fr.addActualArgumentWithNamedConstant(null, "ESMF_STATE_EXPORT");
            fr.addActualArgumentWithNamedConstant("rc", VAR_LOCAL_RC);
            as = fomFactory.createAssignmentStatement(stateName, fr);
            mp.addExecutionPartConstruct(as);
        }
    }
    mp.addExecutionPartSpacer();
}
