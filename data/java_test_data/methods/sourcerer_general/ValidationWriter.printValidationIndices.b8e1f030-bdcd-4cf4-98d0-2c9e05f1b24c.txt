public static void printValidationIndices(String title, Map<String, String> params, Dataset dataset) {
    int dim = dataset.get(0).getDimension();
    Map<Integer, Cluster> clustermap = dataset.getClustermap();
    String unclassified = (clustermap.get(FeatureVector.UNCLASSIFIED) == null) ? "none" : String.valueOf(clustermap.get(FeatureVector.UNCLASSIFIED).size());
    System.out.println();
    System.out.println("*******************" + title + "************************");
    System.out.println("Feature Vector Dimension: " + dim);
    System.out.println("Number of Feature Vectors: " + dataset.size());
    for (String name : params.keySet()) {
        System.out.println(name + ": " + params.get(name));
    }
    System.out.println("Number Of Clusters calculated: " + dataset.getClustermap().size());
    System.out.println("Unclassified FeatureVectors: " + unclassified);
    System.out.println("--------------------------------------");
    CIndex ci = new CIndex();
    float cindex = ci.calculateIndex(dataset);
    System.out.println("CIndex: " + cindex);
    DBIndex dbindex = new DBIndex();
    float db = dbindex.calculateIndex(dataset);
    System.out.println("DBIndex: " + db);
    DunnIndex di = new DunnIndex();
    float dunnIndex = di.calculateIndex(dataset);
    System.out.println("DunnIndex: " + dunnIndex);
    FowlkesMallowsIndex fmiIndex = new FowlkesMallowsIndex();
    float fowlkesMallows = fmiIndex.calculateIndex(dataset);
    System.out.println("FowlkesMallowsIndex: " + fowlkesMallows);
    JaccardIndex jaccardIndex = new JaccardIndex();
    float ji = jaccardIndex.calculateIndex(dataset);
    System.out.println("JaccardIndex: " + ji);
    RandIndex randIndex = new RandIndex();
    float ri = randIndex.calculateIndex(dataset);
    System.out.println("RandIndex: " + ri);
    SilhouetteIndex siIndex = new SilhouetteIndex();
    float si = siIndex.calculateIndex(dataset);
    System.out.println("Silhouette-Index: " + si);
    BPIndex bpIndex = new BPIndex();
    float bipartiteIndex = bpIndex.calculateIndex(dataset);
    System.out.println("Bipartite-Index: " + bipartiteIndex);
    CalinskiHarabasz chIndex = new CalinskiHarabasz();
    float ch = chIndex.calculateIndex(dataset);
    System.out.println("Calinski-Harabasz: " + ch);
    // GoodmanKruskal gkIndex = new GoodmanKruskal();
    // float gki = gkIndex.calculateIndex(dataset);
    // System.out.println("RandIndex: "+ gki);
    System.out.println("----------------------------------------------------");
}
