private void initGUI() {
    try {
        {
            this.setTitle("cSQL - Trabalho de Compilador 2007 - 02 - Eldo, Jefferson e Leonardo");
            {
                jPanel1 = new JPanel();
                AnchorLayout jPanel1Layout = new AnchorLayout();
                getContentPane().add(jPanel1, BorderLayout.CENTER);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1.setPreferredSize(new java.awt.Dimension(465, 377));
                {
                    bancoTestejButton = new JButton();
                    jPanel1.add(bancoTestejButton, new AnchorConstraint(423, 814, 486, 574, AnchorConstraint.ANCHOR_REL, AnchorConstraint.ANCHOR_REL, AnchorConstraint.ANCHOR_REL, AnchorConstraint.ANCHOR_REL));
                    bancoTestejButton.setText("Traduzir e executar");
                    bancoTestejButton.setPreferredSize(new java.awt.Dimension(112, 24));
                    bancoTestejButton.setToolTipText("Executar o comando SQL gerado no Banco Exemplo");
                    bancoTestejButton.addActionListener(new ActionListener() {

                        public void actionPerformed(ActionEvent evt) {
                            // System.out.println("bancoTestejButton.actionPerformed, event="+evt);
                            lexico = new Lexico(algebrajTextArea.getText());
                            semantico = new Semantico();
                            sintatico = new Sintatico();
                            try {
                                sintatico.parse(lexico, semantico);
                                String saida = sintatico.getPilhaSql().pop();
                                saidajTextArea.setForeground(new Color(0.0f, 0.0f, 0.0f));
                                saidajTextArea.setText(saida);
                                ArrayList<String[]> resultadoConsulta = null;
                                try {
                                    resultadoConsulta = ConexaoBanco.fazQuery(saida);
                                    String[][] resultadoMostra = new String[resultadoConsulta.size()][resultadoConsulta.get(0).length];
                                    for (int i = 0; i < resultadoConsulta.size(); i++) {
                                        for (int j = 0; j < resultadoConsulta.get(0).length; j++) {
                                            resultadoMostra[i][j] = resultadoConsulta.get(i)[j];
                                        }
                                    }
                                    String[] campos = new String[resultadoConsulta.get(0).length];
                                    for (int j = 0; j < campos.length; j++) {
                                        campos[j] = "Campo " + String.valueOf(j);
                                    }
                                    DefaultTableModel novoModel = new DefaultTableModel(resultadoMostra, campos);
                                    resultadojTable.setModel(novoModel);
                                } catch (SQLException e) {
                                    // TODO Auto-generated catch block
                                    e.printStackTrace();
                                }
                            } catch (LexicalError e) {
                                rotinaErroLexico(e);
                                e.printStackTrace();
                            } catch (SyntaticError e) {
                                // TODO Auto-generated catch block
                                rotinaErroLSintatico(e);
                                e.printStackTrace();
                            } catch (SemanticError e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                        // TODO add your code for bancoTestejButton.actionPerformed
                        }
                    });
                }
                {
                    iniciajButton = new JButton();
                    jPanel1.add(iniciajButton, new AnchorConstraint(423, 975, 486, 825, AnchorConstraint.ANCHOR_REL, AnchorConstraint.ANCHOR_REL, AnchorConstraint.ANCHOR_REL, AnchorConstraint.ANCHOR_REL));
                    iniciajButton.setText("Traduzir");
                    iniciajButton.setPreferredSize(new java.awt.Dimension(70, 24));
                    iniciajButton.setToolTipText("Apenas traduzir para SQL");
                    iniciajButton.addActionListener(new ActionListener() {

                        public void actionPerformed(ActionEvent evt) {
                            // System.out.println("iniciajButton.actionPerformed, event="+evt);
                            lexico = new Lexico(algebrajTextArea.getText());
                            semantico = new Semantico();
                            sintatico = new Sintatico();
                            try {
                                sintatico.parse(lexico, semantico);
                                saidajTextArea.setForeground(new Color(0.0f, 0.0f, 0.0f));
                                saidajTextArea.setText(sintatico.getPilhaSql().pop());
                            } catch (LexicalError e) {
                                rotinaErroLexico(e);
                                e.printStackTrace();
                            } catch (SyntaticError e) {
                                rotinaErroLSintatico(e);
                                e.printStackTrace();
                            } catch (SemanticError e) {
                                // TODO Auto-generated catch block
                                e.printStackTrace();
                            }
                        }
                    });
                }
                {
                    jTabbedPane1 = new JTabbedPane();
                    jPanel1.add(jTabbedPane1, new AnchorConstraint(484, 975, 964, 20, AnchorConstraint.ANCHOR_REL, AnchorConstraint.ANCHOR_REL, AnchorConstraint.ANCHOR_REL, AnchorConstraint.ANCHOR_REL));
                    jTabbedPane1.setPreferredSize(new java.awt.Dimension(445, 181));
                    {
                        saidajTextArea = new JTextArea();
                        jTabbedPane1.addTab("C�digo SQL", null, saidajTextArea, null);
                        saidajTextArea.setPreferredSize(new java.awt.Dimension(440, 155));
                        saidajTextArea.setBorder(BorderFactory.createTitledBorder("Saida em SQL"));
                    }
                    {
                        jScrollPane1 = new JScrollPane();
                        jTabbedPane1.addTab("Resultado da Consulta", null, jScrollPane1, null);
                        {
                            TableModel resultadojTableModel = new DefaultTableModel(new String[][] { { "", "" }, { "", "" } }, new String[] { "Campo 0", "Campo 1" });
                            resultadojTable = new JTable();
                            jScrollPane1.setViewportView(resultadojTable);
                            resultadojTable.setModel(resultadojTableModel);
                        }
                    }
                }
                {
                    algebrajTextArea = new JTextArea();
                    jPanel1.add(algebrajTextArea, new AnchorConstraint(51, 975, 409, 20, AnchorConstraint.ANCHOR_REL, AnchorConstraint.ANCHOR_REL, AnchorConstraint.ANCHOR_REL, AnchorConstraint.ANCHOR_REL));
                    algebrajTextArea.setPreferredSize(new java.awt.Dimension(445, 135));
                    algebrajTextArea.setBorder(BorderFactory.createTitledBorder("Insira os comandos em �lgebra relacional"));
                }
            }
        }
        this.setSize(474, 454);
        {
            jMenuBar1 = new JMenuBar();
            setJMenuBar(jMenuBar1);
            {
                jMenu3 = new JMenu();
                jMenuBar1.add(jMenu3);
                jMenu3.setText("Op��es");
                {
                    newFileMenuItem = new JMenuItem();
                    jMenu3.add(newFileMenuItem);
                    newFileMenuItem.setText("Ajuda");
                }
                {
                    jSeparator1 = new JSeparator();
                    jMenu3.add(jSeparator1);
                }
                {
                    openFileMenuItem = new JMenuItem();
                    jMenu3.add(openFileMenuItem);
                    openFileMenuItem.setText("Sobre");
                }
                {
                    jSeparator2 = new JSeparator();
                    jMenu3.add(jSeparator2);
                }
                {
                    povoaBancojMenuItem = new JMenuItem();
                    jMenu3.add(povoaBancojMenuItem);
                    povoaBancojMenuItem.setText("Carregar Banco Exemplo");
                    povoaBancojMenuItem.addActionListener(new ActionListener() {

                        public void actionPerformed(ActionEvent evt) {
                            // System.out.println("povoaBancojMenuItem.actionPerformed, event="+evt);
                            ConexaoBanco.povoarBanco();
                            JOptionPane.showMessageDialog(null, "Um banco de dados foi gerado e povoado para testes\n S�o duas tabelas:\n pessoa( nome, idade, carro) \ncarro(marca, nome, preco)", "Informa��es sobre o banco", JOptionPane.INFORMATION_MESSAGE);
                        // TODO add your code for povoaBancojMenuItem.actionPerformed
                        }
                    });
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
