public void doPost(HttpServletRequest req, HttpServletResponse resp) throws IOException {
    UserService userService = UserServiceFactory.getUserService();
    User user = userService.getCurrentUser();
    String content = req.getParameter("content");
    Date date = new Date();
    Vendor vendor = new Vendor(user, content, date);
    PersistenceManager pm = PMF.get().getPersistenceManager();
    try {
        pm.makePersistent(vendor);
    } finally {
        pm.close();
    }
    String requestURL = null;
    String error = null;
    try {
        String accessKeyId = PropertyBundle.getProperty(PropertyKeys.AWS_ACCESS_KEY);
        String secretAccessKey = PropertyBundle.getProperty(PropertyKeys.AWS_SECRET_KEY);
        String CHECKOUT_SERVER = CheckoutPropertyBundle.getProperty(CheckoutPropertyKeys.CHECKOUT_SERVER_NAME);
        System.out.println("XXX: " + PropertyBundle.getProperty(PropertyKeys.MAX_ERROR_RETRY));
        // String CHECKOUT_SERVER = PropertyBundle.getProperty("CHECKOUT_SERVER");
        // AmazonFPSCBUIUtils obj = new AmazonFPSCBUIUtils(AwsAccessKey, AwsSecretKey);
        AmazonFPSCBUIUtils obj = new AmazonFPSCBUIUtils(accessKeyId, secretAccessKey);
        // GET Recipient Token for CALLER
        obj.setMandatoryParams("Recipient", CHECKOUT_SERVER + "/VendorRecipientToken");
        obj.setCallerReference("AppengineVendorRecipientToken" + vendor.getId());
        obj.setPaymentReason("<payment reason>");
        obj.add("paymentMethod", "CC, ACH, ABT");
        // //////////////////////////////////////////////
        // for installing recipient token on your own account.
        // obj.add("recipientPaysFee","True");
        // for installing recipient token for a vendor.
        obj.add("recipientPaysFee", "False");
        obj.add("maxFixedFee", "0.30");
        obj.add("maxVariableFee", "4.0");
        // //////////////////////////////////////////////
        requestURL = obj.getURL();
        System.out.println("Request URL is ::  " + requestURL);
    } catch (Exception e) {
        error = e.getMessage();
    }
    if (requestURL != null)
        resp.sendRedirect(requestURL);
    else
        resp.sendRedirect("/message.jsp?msg=" + error);
}
