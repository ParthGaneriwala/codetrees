public void sanitize() {
    if ((this.poolAvailabilityThreshold < 0) || (this.poolAvailabilityThreshold > 100)) {
        this.poolAvailabilityThreshold = 20;
    }
    if (this.maxConnectionsPerPartition < 2) {
        logger.warn("Max Connections < 2. Setting to 50");
        this.maxConnectionsPerPartition = 50;
    }
    if (this.minConnectionsPerPartition < 2) {
        logger.warn("Min Connections < 2. Setting to 10");
        this.minConnectionsPerPartition = 10;
    }
    if (this.minConnectionsPerPartition > this.maxConnectionsPerPartition) {
        logger.warn("Min Connections > max connections");
        this.minConnectionsPerPartition = this.maxConnectionsPerPartition;
    }
    if (this.acquireIncrement <= 0) {
        logger.warn("acquireIncrement <= 0. Setting to 1.");
        this.acquireIncrement = 1;
    }
    if (this.partitionCount < 1) {
        logger.warn("partitions < 1! Setting to 1");
        this.partitionCount = 1;
    }
    if (this.releaseHelperThreads < 0) {
        logger.warn("releaseHelperThreads < 0! Setting to 3");
        this.releaseHelperThreads = 3;
    }
    if (this.statementsCacheSize < 0) {
        logger.warn("preparedStatementsCacheSize < 0! Setting to 0");
        this.statementsCacheSize = 0;
    }
    if (this.acquireRetryDelay <= 0) {
        this.acquireRetryDelay = 1000;
    }
    if (this.jdbcUrl == null || this.jdbcUrl.trim().equals("")) {
        logger.warn("JDBC url was not set in config!");
    }
    if (this.datasourceBean == null && this.driverProperties == null && (this.username == null || this.username.trim().equals(""))) {
        logger.warn("JDBC username was not set in config!");
    }
    if ((this.datasourceBean == null) && (this.driverProperties == null) && (this.password == null)) {
        logger.warn("JDBC password was not set in config!");
    }
    // if no datasource and we have driver properties set...
    if (this.datasourceBean == null && this.driverProperties != null) {
        if ((this.driverProperties.get("user") == null) && this.username == null) {
            logger.warn("JDBC username not set in driver properties and not set in pool config either");
        } else if ((this.driverProperties.get("user") == null) && this.username != null) {
            logger.warn("JDBC username not set in driver properties, copying it from pool config");
            this.driverProperties.setProperty("user", this.username);
        } else if (this.username != null && !this.driverProperties.get("user").equals(this.username)) {
            logger.warn("JDBC username set in driver properties does not match the one set in the pool config.  Overriding it with pool config.");
            this.driverProperties.setProperty("user", this.username);
        }
    }
    // if no datasource and we have driver properties set...
    if (this.datasourceBean == null && this.driverProperties != null) {
        if ((this.driverProperties.get("password") == null) && this.password == null) {
            logger.warn("JDBC password not set in driver properties and not set in pool config either");
        } else if ((this.driverProperties.get("password") == null) && this.password != null) {
            logger.warn("JDBC password not set in driver properties, copying it from pool config");
            this.driverProperties.setProperty("password", this.password);
        } else if (this.password != null && !this.driverProperties.get("password").equals(this.password)) {
            logger.warn("JDBC password set in driver properties does not match the one set in the pool config. Overriding it with pool config.");
            this.driverProperties.setProperty("password", this.password);
        }
        // maintain sanity between the two states
        this.username = this.driverProperties.getProperty("user");
        this.password = this.driverProperties.getProperty("password");
    }
    this.username = this.username == null ? "" : this.username.trim();
    this.jdbcUrl = this.jdbcUrl == null ? "" : this.jdbcUrl.trim();
    this.password = this.password == null ? "" : this.password.trim();
    if (this.connectionTestStatement != null) {
        this.connectionTestStatement = this.connectionTestStatement.trim();
    }
}
