public void initialize(World w, Logger myLogger) {
    // set the Applet's layout
    setLayout(new BorderLayout());
    // how does SimpleUniverse want to draw stuff?
    GraphicsConfiguration config = SimpleUniverse.getPreferredConfiguration();
    // make a new canvas, as SimpleUniverse likes it
    canvas3D = new Canvas3D(config);
    // add the canvas to the Applet
    add("Center", canvas3D);
    // a Viewer to go with the canvas
    Viewer viewer = new Viewer(canvas3D);
    // the ultimate root of the entire scene. Created here so we can add stuff later
    BranchGroup superRoot = new BranchGroup();
    scene = new BranchGroup();
    // let us modify the children at runtime
    scene.setCapability(Group.ALLOW_CHILDREN_WRITE);
    // allow us to add more Elements to the scene during runtime
    scene.setCapability(Group.ALLOW_CHILDREN_EXTEND);
    // get the Elements to start building the tree
    elementStart = w.getFirstElement();
    // mark the first element as the Client (Representation-dependent attribute)
    elementStart.attribute("isClient", true);
    // build the camera FIRST
    veb = createCamera(elementStart, scene, viewMode);
    ViewingPlatform vp = veb.getViewingPlatform();
    TransformGroup vpt = vp.getMultiTransformGroup().getTransformGroup(0);
    // cameraRoot = new BranchGroup(); //do we need this reference?
    // vpt.addChild(cameraRoot);
    /*tie the lighting to the camera, so that objects are always lit as if from the front.*/
    BranchGroup candleStick = new BranchGroup();
    addDefaultLights(candleStick);
    vpt.addChild(candleStick);
    // addDefaultLights(superRoot); //add default lighting to world--doesn't move
    /*create the bulletin board*/
    bbroot = new BranchGroup();
    bbroot.setCapability(Group.ALLOW_CHILDREN_WRITE);
    bbroot.setCapability(Group.ALLOW_CHILDREN_EXTEND);
    Transform3D bbt = new Transform3D();
    // bbt.setTranslation(new Vector3f(-.3f,.25f,-.75f)); //sized for 300x300
    // sized for fullscreen
    bbt.setTranslation(new Vector3f(-.3f, .15f, -.75f));
    TransformGroup bbtg = new TransformGroup(bbt);
    bbtg.addChild(bbroot);
    vpt.addChild(bbtg);
    // a placeholder, containing nothing
    BranchGroup wrapper = new BranchGroup();
    wrapper.setCapability(BranchGroup.ALLOW_DETACH);
    bbroot.addChild(wrapper);
    // initialize the scene based on the Client's world
    createSceneGraph(elementStart, scene);
    // add the scene to the tree
    superRoot.addChild(scene);
    SimpleUniverse simpleU = new SimpleUniverse(vp, viewer);
    // simpleU.getViewingPlatform().setNominalViewingTransform(); //set default eye's locathe Eye's location
    // set the background
    simpleU.addBranchGraph(createBackground());
    // let Java3D optimize the tree
    superRoot.compile();
    // add the scene to the tree. THIS ALSO TELLS IT TO BEGIN RENDERING!
    simpleU.addBranchGraph(superRoot);
}
