public List<GameStat> getAllGameStats() {
    final ArrayList<GameStat> list = new ArrayList<GameStat>();
    SQLiteDatabase db;
    try {
        db = getDB();
    } catch (FileNotFoundException e) {
        Log.e(TAG, "Unable to connect to the database", e);
        // just return the empty list to the app
        return list;
    }
    Cursor deckCursor = db.query(GAME_STAT_TABLE_NAME, new String[] { "id", "completionTimestamp" }, null, null, null, null, "completionTimestamp DESC");
    if (deckCursor.count() > 0) {
        deckCursor.next();
        while (!deckCursor.isAfterLast()) {
            GameStat g = new GameStat();
            g.setId(deckCursor.getInt(0));
            g.setCompletionTimestamp(deckCursor.getLong(1));
            // see if this game has any cards
            Cursor cardCursor = db.query(CARD_STAT_TABLE_NAME, new String[] { "id", "deckName", "cardName", "numHintsNeeded", "score" }, "gameStatId=?", new String[] { Integer.toString(g.getId()) }, null, null, "deckName");
            if (cardCursor.count() > 0) {
                cardCursor.next();
                while (!cardCursor.isAfterLast()) {
                    CardStat cardStat = new CardStat();
                    cardStat.setId(cardCursor.getInt(0));
                    cardStat.setDeckName(cardCursor.getString(1));
                    cardStat.setCardName(cardCursor.getString(2));
                    cardStat.setNumHintsNeeded(cardCursor.getInt(3));
                    cardStat.setScore(cardCursor.getInt(4));
                    // set the current GameStat for this card
                    cardStat.setGameStat(g);
                    g.addCardStat(cardStat);
                    cardCursor.next();
                }
            }
            list.add(g);
            // move on to the next card
            deckCursor.next();
        }
    }
    return list;
}
