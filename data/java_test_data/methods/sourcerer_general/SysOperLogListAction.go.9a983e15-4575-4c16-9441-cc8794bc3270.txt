@Override
protected String go() throws Exception {
    // TODO Auto-generated method stub
    DetachedCriteria detachedCriteria = DetachedCriteria.forClass(SysLog.class);
    if (userid != 0) {
        detachedCriteria.add(Restrictions.eq("userid", userid));
    }
    if (loginid != 0) {
        detachedCriteria.add(Restrictions.eq("loginid", loginid));
    }
    if (opTime != null && !opTime.equals("")) {
        java.sql.Timestamp begin = new Timestamp(df.parse(opTime + " 00:00:00").getTime());
        java.sql.Timestamp end = new Timestamp(df.parse(opTime + " 23:59:59").getTime());
        detachedCriteria.add(Restrictions.between("opTime", begin, end));
    }
    if (!grade3.equals("0")) {
        // 最小的菜单
        _LOG.debug("...最小的菜单:::" + grade3);
        detachedCriteria.add(Restrictions.eq("rightCode", grade3));
    } else if (!grade2.equals("0")) {
        // 顶层的菜单
        _LOG.debug("...菜单grade2:::" + grade2);
        List list = new ArrayList();
        List<SysRight> rights = RightTree.getChildRights(grade2);
        for (int i = 0; i < rights.size(); i++) {
            SysRight right = rights.get(i);
            list.add(right.getRightcode());
        }
        detachedCriteria.add(Restrictions.in("rightCode", list));
    } else if (!grade1.equals("0")) {
        // 最顶层的菜单
        _LOG.debug("...菜单grade1:::" + grade1);
        List list = new ArrayList();
        List<SysRight> rights = RightTree.getChildRights(grade1);
        for (int i = 0; i < rights.size(); i++) {
            SysRight right = rights.get(i);
            list.add(right.getRightcode());
        }
        detachedCriteria.add(Restrictions.in("rightCode", list));
    }
    // 对rightcode进行处理.模块->功能->具体的rightcode
    detachedCriteria.addOrder(Order.desc("logid"));
    SysLogService service = (SysLogService) getBean("sysLogService");
    this.page = service.findPageByCriteria(detachedCriteria, pageSize, pageNo);
    if (!grade1.equals("0")) {
        List<SysRight> rights = RightTree.getChildRights(grade1);
        for (int i = 0; i < rights.size(); i++) {
            SysRight right = rights.get(i);
            if (right.getGrade() == 2)
                grade2Map.put(right.getRightcode(), right.getRightname());
        }
    }
    if (!grade2.equals("0")) {
        List<SysRight> rights = RightTree.getChildRights(grade2);
        for (int i = 0; i < rights.size(); i++) {
            SysRight right = rights.get(i);
            if (right.getGrade() == 3)
                grade3Map.put(right.getRightcode(), right.getRightname());
        }
    }
    return SUCCESS;
}
