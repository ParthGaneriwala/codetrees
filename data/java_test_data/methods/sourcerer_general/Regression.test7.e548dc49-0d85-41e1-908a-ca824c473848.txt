public void test7(Model m1, Model m2) {
    String test = "Test7";
    int n = 0;
    try {
        StmtIterator iter;
        try {
            n = 100;
            n++;
            iter = m1.listStatements();
            n++;
            m2.add(iter);
            iter.close();
            n++;
            if (!(m1.size() == m2.size()))
                error(test, n);
            n++;
            iter = m1.listStatements();
            n = 110;
            while (iter.hasNext()) {
                n++;
                if (!m2.contains(iter.nextStatement()))
                    error(test, n);
            }
            n = 200;
            iter = m2.listStatements();
            while (iter.hasNext()) {
                n++;
                if (!m1.contains(iter.nextStatement()))
                    error(test, n);
            }
        } catch (Exception e) {
            error(test, n, e);
        }
        try {
            n = 300;
            m1.add(m1.createResource(), RDF.value, m1.createResource());
            m1.add(m1.createResource(), RDF.value, m1.createResource());
            m1.add(m1.createResource(), RDF.value, m1.createResource());
            n++;
            iter = m1.listStatements();
            n++;
            m2.remove(iter.nextStatement());
            n++;
            m2.remove(iter);
            iter.close();
            n++;
            if (!(m2.size() == 0))
                error(test, n);
        } catch (Exception e) {
            error(test, n, e);
        }
        try {
            n = 400;
            n++;
            m2.add(m1);
            n++;
            if (!(m1.size() == m2.size()))
                error(test, n);
            n++;
            iter = m1.listStatements();
            n = 410;
            while (iter.hasNext()) {
                n++;
                if (!m2.contains(iter.nextStatement()))
                    error(test, n);
            }
            n = 500;
            iter = m2.listStatements();
            while (iter.hasNext()) {
                n++;
                if (!m1.contains(iter.nextStatement()))
                    error(test, n);
            }
        } catch (Exception e) {
            error(test, n, e);
        }
        try {
            n = 600;
            // System.err.println( "| m2.size() = " + m2.size() );
            n++;
            m2.remove(m1);
            n++;
            if (!(m2.size() == 0))
                error(test, n);
        // System.err.println( "| after: m2.size = " + m2.size() );
        } catch (Exception e) {
            error(test, n, e);
        }
    } catch (Exception e) {
        logger.error("test " + test + "[" + n + "]", e);
        errors = true;
    }
// System.out.println("End of " + test);
}
