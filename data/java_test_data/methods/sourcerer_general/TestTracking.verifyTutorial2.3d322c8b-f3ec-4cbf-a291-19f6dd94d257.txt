private void verifyTutorial2() {
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    List<SessionOverviewDto> sessionOverviewDtos = userTrackingService.getSessionOverviewDtos(UserTrackingFilter.newDefaultFilter());
    Assert.assertEquals(1, sessionOverviewDtos.size());
    SessionOverviewDto sessionOverviewDto = sessionOverviewDtos.get(0);
    SessionDetailDto sessionDetailDto = userTrackingService.getSessionDetailDto(sessionOverviewDto.getSessionId());
    // Life cycle
    List<LifecycleTrackingInfo> lifecycleTrackingInfos = sessionDetailDto.getLifecycleTrackingInfos();
    Assert.assertEquals(3, lifecycleTrackingInfos.size());
    // Start ups
    List<DbStartupTask> dbStartupTasks = lifecycleTrackingInfos.get(1).getGameStartups();
    Assert.assertEquals(4, dbStartupTasks.size());
    Assert.assertEquals(ColdRealGameStartupTaskEnum.LOAD_JAVA_SCRIPT.getStartupTaskEnumHtmlHelper().getNiceText(), dbStartupTasks.get(0).getTask());
    Assert.assertEquals(ColdRealGameStartupTaskEnum.INIT_GAME.getStartupTaskEnumHtmlHelper().getNiceText(), dbStartupTasks.get(1).getTask());
    Assert.assertEquals(ColdRealGameStartupTaskEnum.INIT_GUI.getStartupTaskEnumHtmlHelper().getNiceText(), dbStartupTasks.get(2).getTask());
    Assert.assertEquals(ColdRealGameStartupTaskEnum.LOAD_MAP.getStartupTaskEnumHtmlHelper().getNiceText(), dbStartupTasks.get(3).getTask());
    // Tutorial progress
    TutorialTrackingInfo tutorialTrackingInfo = userTrackingService.getTutorialTrackingInfo(lifecycleTrackingInfos.get(1));
    Assert.assertEquals(3, tutorialTrackingInfo.getDbTutorialProgresss().size());
    Assert.assertEquals("step2", tutorialTrackingInfo.getDbTutorialProgresss().get(0).getName());
    Assert.assertEquals("task2", tutorialTrackingInfo.getDbTutorialProgresss().get(1).getName());
    Assert.assertEquals("tutorial2", tutorialTrackingInfo.getDbTutorialProgresss().get(2).getName());
    Assert.assertEquals(201, tutorialTrackingInfo.getDbEventTrackingStart().getClientWidth());
    Assert.assertEquals(202, tutorialTrackingInfo.getDbEventTrackingStart().getClientHeight());
    // Playback
    PlaybackInfo playbackInfo = playbackService.getPlaybackInfo(sessionOverviewDto.getSessionId(), lifecycleTrackingInfos.get(1).getStartServer(), lifecycleTrackingInfos.get(1).getLevel());
    // Tracking start
    Assert.assertEquals(201, playbackInfo.getEventTrackingStart().getClientWidth());
    Assert.assertEquals(202, playbackInfo.getEventTrackingStart().getClientHeight());
    Assert.assertEquals(1900, playbackInfo.getEventTrackingStart().getClientTimeStamp());
    Assert.assertEquals(203, playbackInfo.getEventTrackingStart().getScrollLeft());
    Assert.assertEquals(204, playbackInfo.getEventTrackingStart().getScrollTop());
    Assert.assertEquals(205, playbackInfo.getEventTrackingStart().getScrollWidth());
    Assert.assertEquals(206, playbackInfo.getEventTrackingStart().getScrollHeight());
    // Mouse
    Assert.assertEquals(5, playbackInfo.getEventTrackingItems().size());
    Assert.assertEquals(1, playbackInfo.getEventTrackingItems().get(0).getXPos());
    Assert.assertEquals(2, playbackInfo.getEventTrackingItems().get(1).getXPos());
    Assert.assertEquals(3, playbackInfo.getEventTrackingItems().get(2).getXPos());
    Assert.assertEquals(4, playbackInfo.getEventTrackingItems().get(3).getXPos());
    Assert.assertEquals(5, playbackInfo.getEventTrackingItems().get(4).getXPos());
    // Commands
    Assert.assertEquals(1, playbackInfo.getBaseCommands().size());
    Assert.assertTrue(playbackInfo.getBaseCommands().get(0) instanceof AttackCommand);
    // Selection
    Assert.assertEquals(2, playbackInfo.getSelectionTrackingItems().size());
    Assert.assertNull(playbackInfo.getSelectionTrackingItems().get(0).isOwn());
    Assert.assertNull(playbackInfo.getSelectionTrackingItems().get(1).isOwn());
    // Terrain scrolling
    Assert.assertEquals(2, playbackInfo.getScrollTrackingItems().size());
    Assert.assertEquals(1, playbackInfo.getScrollTrackingItems().get(0).getTop());
    Assert.assertEquals(2, playbackInfo.getScrollTrackingItems().get(1).getTop());
    // Browser Window Tracking
    Assert.assertEquals(5, playbackInfo.getBrowserWindowTrackings().size());
    Assert.assertEquals(1, playbackInfo.getBrowserWindowTrackings().get(0).getClientHeight());
    Assert.assertEquals(2, playbackInfo.getBrowserWindowTrackings().get(1).getClientHeight());
    Assert.assertEquals(3, playbackInfo.getBrowserWindowTrackings().get(2).getClientHeight());
    Assert.assertEquals(4, playbackInfo.getBrowserWindowTrackings().get(3).getClientHeight());
    Assert.assertEquals(5, playbackInfo.getBrowserWindowTrackings().get(4).getClientHeight());
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
