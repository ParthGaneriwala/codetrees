@Test
public void parseDefaultPlugin() throws Throwable {
    XmlPullParserFactory factory = XmlPullParserFactory.newInstance();
    factory.setNamespaceAware(true);
    XmlPullParser xpp = factory.newPullParser();
    xpp.setInput(new FileReader("/home/sa4zet/diplomamunka/conclusion/res/raw/plugin.xml"));
    Assert.assertNotNull(xpp);
    PluginDescriptor desc = Parser.getInstance().parsePluginXML(xpp);
    Assert.assertNotNull(desc);
    System.out.println(desc.toString());
    ZipFile zf = new ZipFile("/home/sa4zet/diplomamunka/conclusion/res/raw/default_plugin.zip");
    Enumeration<? extends ZipEntry> entries = zf.entries();
    Assert.assertNotNull(entries);
    Assert.assertTrue(entries.hasMoreElements());
    while (entries.hasMoreElements()) {
        ZipEntry ze = (ZipEntry) entries.nextElement();
        String entryName = ze.getName();
        System.out.println(entryName);
        if (ze.isDirectory()) {
            Log.d("UZ", "Making a directory" + entryName);
            // act.getFileStreamPath(ze.getName()).mkdirs();
            Log.d("UZ", "DONE");
        } else {
            xpp.setInput(zf.getInputStream(ze), null);
            if (desc.getQuestionsFile().equals(entryName)) {
                Parser.getInstance().parseQuestionXML(xpp);
                System.out.println(Parser.getInstance().getAllQuestions());
                System.out.println(Parser.getInstance().getAllAnswers());
            } else if (desc.getConclusionsFile().equals(entryName)) {
                Parser.getInstance().parseConclusionXML(xpp);
                System.out.println(Parser.getInstance().getAllConclusions());
            }
        }
    }
}
