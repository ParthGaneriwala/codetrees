public void buildPanel() {
    final JScrollBar horizontalSB = hvScroll.getHorizontalSB();
    final JScrollBar verticalSB = hvScroll.getVerticalSB();
    final JScrollBar zoomSB = zoomScroll.getZoomSB();
    final JScrollBar rotateSB = rotateScroll.getRotateSB();
    final JScrollBar localitySB = localityScroll.getLocalitySB();
    setLayout(new BorderLayout());
    JPanel scrollPanel = new JPanel();
    scrollPanel.setBackground(defaultColor);
    scrollPanel.setLayout(new GridBagLayout());
    GridBagConstraints c = new GridBagConstraints();
    JPanel modeSelectPanel = new JPanel();
    modeSelectPanel.setBackground(defaultColor);
    modeSelectPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 0, 0));
    AbstractAction navigateAction = new AbstractAction("Navigate") {

        public void actionPerformed(ActionEvent e) {
            tgUIManager.activate("Navigate");
        }
    };
    AbstractAction editAction = new AbstractAction("Edit") {

        public void actionPerformed(ActionEvent e) {
            tgUIManager.activate("Edit");
        }
    };
    JRadioButton rbNavigate = new JRadioButton(navigateAction);
    rbNavigate.setBackground(defaultColor);
    rbNavigate.setSelected(true);
    JRadioButton rbEdit = new JRadioButton(editAction);
    rbEdit.setBackground(defaultColor);
    ButtonGroup bg = new ButtonGroup();
    bg.add(rbNavigate);
    bg.add(rbEdit);
    modeSelectPanel.add(rbNavigate);
    modeSelectPanel.add(rbEdit);
    final JPanel topPanel = new JPanel();
    topPanel.setBackground(defaultColor);
    topPanel.setLayout(new GridBagLayout());
    c.gridy = 0;
    c.fill = GridBagConstraints.HORIZONTAL;
    /*
        c.gridx=0;c.weightx=0;
        topPanel.add(new Label("Zoom",Label.RIGHT), c);
        c.gridx=1;c.weightx=0.5;
        topPanel.add(zoomSB,c);
        c.gridx=2;c.weightx=0;
        topPanel.add(new Label("Locality",Label.RIGHT), c);
        c.gridx=3;c.weightx=0.5;
        topPanel.add(localitySB,c);
        */
    c.gridx = 0;
    c.weightx = 0;
    c.insets = new Insets(0, 10, 0, 10);
    topPanel.add(modeSelectPanel, c);
    c.insets = new Insets(0, 0, 0, 0);
    c.gridx = 1;
    c.weightx = 1;
    scrollBarHash.put(zoomLabel, zoomSB);
    scrollBarHash.put(rotateLabel, rotateSB);
    scrollBarHash.put(localityLabel, localitySB);
    JPanel scrollselect = scrollSelectPanel(new String[] { zoomLabel, rotateLabel, localityLabel });
    scrollselect.setBackground(defaultColor);
    topPanel.add(scrollselect, c);
    add(topPanel, BorderLayout.NORTH);
    c.fill = GridBagConstraints.BOTH;
    c.gridwidth = 1;
    c.gridx = 0;
    c.gridy = 1;
    c.weightx = 1;
    c.weighty = 1;
    scrollPanel.add(tgPanel, c);
    c.gridx = 1;
    c.gridy = 1;
    c.weightx = 0;
    c.weighty = 0;
    scrollPanel.add(verticalSB, c);
    c.gridx = 0;
    c.gridy = 2;
    scrollPanel.add(horizontalSB, c);
    add(scrollPanel, BorderLayout.CENTER);
    glPopup = new JPopupMenu();
    glPopup.setBackground(defaultColor);
    JMenuItem menuItem = new JMenuItem("Toggle Controls");
    ActionListener toggleControlsAction = new ActionListener() {

        boolean controlsVisible = true;

        public void actionPerformed(ActionEvent e) {
            controlsVisible = !controlsVisible;
            horizontalSB.setVisible(controlsVisible);
            verticalSB.setVisible(controlsVisible);
            topPanel.setVisible(controlsVisible);
        }
    };
    menuItem.addActionListener(toggleControlsAction);
    glPopup.add(menuItem);
}
