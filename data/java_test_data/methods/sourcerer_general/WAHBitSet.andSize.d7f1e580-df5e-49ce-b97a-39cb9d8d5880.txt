public int andSize(WAHBitSet other) {
    int size = 0;
    // ensure that they have the same bit length.
    if (this.numBits() < other.numBits()) {
        this.setBit(other.numBits() - 1, 0);
    } else if (this.numBits() > other.numBits()) {
        other.setBit(numBits() - 1, 0);
    }
    if (vec.size() > 0) {
        run xrun = new run(vec), yrun = new run(other.vec);
        xrun.decode();
        yrun.decode();
        do {
            if (xrun.nWords == 0) {
                xrun.inc();
                xrun.decode();
            }
            if (yrun.nWords == 0) {
                yrun.inc();
                yrun.decode();
            }
            if (xrun.isFill()) {
                if (yrun.isFill()) {
                    int nWords = Math.min(xrun.nWords, yrun.nWords);
                    if ((xrun.fillWord & yrun.fillWord) == 1) {
                        size += nWords * MAXBITS;
                    }
                    xrun.nWords -= nWords;
                    yrun.nWords -= nWords;
                } else {
                    size += countInRun(xrun, yrun);
                }
            } else if (yrun.isFill()) {
                size += countInRun(yrun, xrun);
            } else {
                int val = xrun.get() & yrun.get();
                if (val > 0)
                    size += Integer.bitCount(val);
                yrun.nWords = 0;
                xrun.nWords = 0;
            }
        } while (!(xrun.end() && yrun.end()));
    }
    size += Integer.bitCount(this.active.val & other.active.val);
    return size;
}
