protected static void readUIPreferences(AeUiPrefs aPrefs) {
    AeGraphProperties props = AeGraphProperties.getInstance();
    Color c = null;
    c = props.getPropertyColor(AeGraphProperties.LINK_NORMAL_COLOR, Color.GRAY);
    aPrefs.setLinkNormalColor(c);
    c = props.getPropertyColor(AeGraphProperties.LINK_ACTIVE_COLOR, Color.DARK_GRAY);
    aPrefs.setLinkActiveColor(c);
    c = props.getPropertyColor(AeGraphProperties.LINK_INACTIVE_COLOR, Color.LIGHT_GRAY);
    aPrefs.setLinkInActiveColor(c);
    c = props.getPropertyColor(AeGraphProperties.BORDER_COLOR, Color.GRAY);
    aPrefs.setBorderColor(c);
    c = props.getPropertyColor(AeGraphProperties.BACKGROUND_COLOR, new Color(230, 230, 230));
    aPrefs.setBackgroundColor(c);
    c = props.getPropertyColor(AeGraphProperties.TEXT_COLOR, Color.BLACK);
    aPrefs.setTextColor(c);
    try {
        // $NON-NLS-1$
        String fontName = props.getProperty(AeGraphProperties.FONT_NAME, "Dialog");
        int fontSize = props.getPropertyInt(AeGraphProperties.FONT_SIZE, 12);
        if (fontSize < 9) {
            fontSize = 9;
        } else if (fontSize > 20) {
            fontSize = 20;
        }
        Font font = new Font(fontName, Font.PLAIN, fontSize);
        aPrefs.setFont(font);
    } catch (Exception e) {
    // ignore error.
    }
    boolean adornments = props.getPropertyBoolean(AeGraphProperties.SHOW_ADORMENTS, true);
    AeUiPrefs.setShowStateAdornments(adornments);
    boolean debug = props.getPropertyBoolean(AeGraphProperties.ENABLE_DEBUG_DRAW, false);
    AeUiPrefs.setDrawDebugLines(debug);
    AeUiPrefs.setDrawDebugAnchorPoints(debug);
}
