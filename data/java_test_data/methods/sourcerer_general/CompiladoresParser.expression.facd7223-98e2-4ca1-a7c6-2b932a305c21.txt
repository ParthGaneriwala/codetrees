// $ANTLR start "expression"
public final CompiladoresParser.expression_return expression() throws RecognitionException {
    CompiladoresParser.expression_return retval = new CompiladoresParser.expression_return();
    retval.start = input.LT(1);
    CommonTree root_0 = null;
    Token OR116 = null;
    CompiladoresParser.expression1_return expression1115 = null;
    CompiladoresParser.expression1_return expression1117 = null;
    CommonTree OR116_tree = null;
    try {
        dbg.enterRule(getGrammarFileName(), "expression");
        if (getRuleLevel() == 0) {
            dbg.commence();
        }
        incRuleLevel();
        dbg.location(164, 1);
        try {
            // /home/CIN/fmm/Desktop/grammar/Compiladores.g:164:14: ( expression1 ( OR expression1 )* )
            dbg.enterAlt(1);
            // /home/CIN/fmm/Desktop/grammar/Compiladores.g:164:16: expression1 ( OR expression1 )*
            {
                root_0 = (CommonTree) adaptor.nil();
                dbg.location(164, 16);
                pushFollow(FOLLOW_expression1_in_expression1325);
                expression1115 = expression1();
                state._fsp--;
                adaptor.addChild(root_0, expression1115.getTree());
                dbg.location(164, 28);
                // /home/CIN/fmm/Desktop/grammar/Compiladores.g:164:28: ( OR expression1 )*
                try {
                    dbg.enterSubRule(27);
                    loop27: do {
                        int alt27 = 2;
                        try {
                            dbg.enterDecision(27);
                            int LA27_0 = input.LA(1);
                            if ((LA27_0 == OR)) {
                                alt27 = 1;
                            }
                        } finally {
                            dbg.exitDecision(27);
                        }
                        switch(alt27) {
                            case 1:
                                dbg.enterAlt(1);
                                // /home/CIN/fmm/Desktop/grammar/Compiladores.g:164:29: OR expression1
                                {
                                    dbg.location(164, 31);
                                    OR116 = (Token) match(input, OR, FOLLOW_OR_in_expression1328);
                                    OR116_tree = (CommonTree) adaptor.create(OR116);
                                    root_0 = (CommonTree) adaptor.becomeRoot(OR116_tree, root_0);
                                    dbg.location(164, 33);
                                    pushFollow(FOLLOW_expression1_in_expression1331);
                                    expression1117 = expression1();
                                    state._fsp--;
                                    adaptor.addChild(root_0, expression1117.getTree());
                                }
                                break;
                            default:
                                break loop27;
                        }
                    } while (true);
                } finally {
                    dbg.exitSubRule(27);
                }
            }
            retval.stop = input.LT(-1);
            retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
            retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);
        } finally {
        }
        dbg.location(164, 46);
    } finally {
        dbg.exitRule(getGrammarFileName(), "expression");
        decRuleLevel();
        if (getRuleLevel() == 0) {
            dbg.terminate();
        }
    }
    return retval;
}
