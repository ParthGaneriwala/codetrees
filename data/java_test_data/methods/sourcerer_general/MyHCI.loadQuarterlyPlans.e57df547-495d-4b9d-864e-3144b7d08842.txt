private void loadQuarterlyPlans() {
    String quarter = "Fall";
    int year = 2009;
    String[] course;
    // Schedule Listing #1
    course = quarterlyPlan1();
    if (course[0].equals("")) {
        String[] empty_title = { "All courses chosen conflicts with your available time. Please try again." };
        String[][] empty_body = { { "" } };
        jTableQuarterly1.setModel(new javax.swing.table.DefaultTableModel(empty_body, empty_title));
    } else {
        String[] plan1title = { "Course ID", "Course Title", "Room", "Day", "Time", "Instructor" };
        String[][] plan1data = new String[course.length][6];
        for (int i = 0; i < course.length; ++i) {
            plan1data[i][0] = course[i];
            ObjCourse objC = db.getCourse(course[i]);
            plan1data[i][1] = objC.getName();
            ObjOffering objOff = db.getOfferingCondition(quarter, year, course[i]);
            plan1data[i][2] = objOff.room;
            String start = "", end = "", day = "";
            for (int k = 1; k < objOff.days.length; ++k) {
                if (objOff.days[k][0] != 2400) {
                    switch(k) {
                        case 0:
                            day += "Sun";
                            break;
                        case 1:
                            day += "M";
                            break;
                        case 2:
                            day += "Tu";
                            break;
                        case 3:
                            day += "W";
                            break;
                        case 4:
                            day += "Th";
                            break;
                        case 5:
                            day += "F";
                            break;
                        case 6:
                            day += "Sat";
                            break;
                        default:
                            break;
                    }
                    start = matchInt2Time(objOff.days[k][0]);
                    end = matchInt2Time(objOff.days[k][1]);
                }
            }
            plan1data[i][3] = day;
            plan1data[i][4] = start + "-" + end;
            plan1data[i][5] = objOff.instructor;
        }
        jTableQuarterly1.setModel(new javax.swing.table.DefaultTableModel(plan1data, plan1title));
    }
    // Schedule Listing #1
    // Schedule Listing #2
    course = quarterlyPlan2();
    if (course[0].equals("")) {
        String[] empty_title = { "All courses chosen conflicts with your available time. Please try again." };
        String[][] empty_body = { { "" } };
        jTableQuarterly2.setModel(new javax.swing.table.DefaultTableModel(empty_body, empty_title));
    } else {
        String[] plan2title = { "Course ID", "Course Title", "Room", "Day", "Time", "Instructor" };
        String[][] plan2data = new String[course.length][6];
        for (int i = 0; i < course.length; ++i) {
            plan2data[i][0] = course[i];
            ObjCourse objC = db.getCourse(course[i]);
            plan2data[i][1] = objC.getName();
            ObjOffering objOff = db.getOfferingCondition(quarter, year, course[i]);
            plan2data[i][2] = objOff.room;
            String start = "", end = "", day = "";
            for (int k = 1; k < objOff.days.length; ++k) {
                if (objOff.days[k][0] != 2400) {
                    switch(k) {
                        case 0:
                            day += "Sun";
                            break;
                        case 1:
                            day += "M";
                            break;
                        case 2:
                            day += "Tu";
                            break;
                        case 3:
                            day += "W";
                            break;
                        case 4:
                            day += "Th";
                            break;
                        case 5:
                            day += "F";
                            break;
                        case 6:
                            day += "Sat";
                            break;
                        default:
                            break;
                    }
                    start = matchInt2Time(objOff.days[k][0]);
                    end = matchInt2Time(objOff.days[k][1]);
                }
            }
            plan2data[i][3] = day;
            plan2data[i][4] = start + "-" + end;
            plan2data[i][5] = objOff.instructor;
        }
        jTableQuarterly2.setModel(new javax.swing.table.DefaultTableModel(plan2data, plan2title));
    }
    // Schedule Listing #2
    // Schedule Listing #3
    course = quarterlyPlan3();
    if (course[0].equals("")) {
        String[] empty_title = { "All courses chosen conflicts with your available time. Please try again." };
        String[][] empty_body = { { "" } };
        jTableQuarterly3.setModel(new javax.swing.table.DefaultTableModel(empty_body, empty_title));
    } else {
        String[] plan3title = { "Course ID", "Course Title", "Room", "Day", "Time", "Instructor" };
        String[][] plan3data = new String[course.length][6];
        for (int i = 0; i < course.length; ++i) {
            plan3data[i][0] = course[i];
            ObjCourse objC = db.getCourse(course[i]);
            plan3data[i][1] = objC.getName();
            ObjOffering objOff = db.getOfferingCondition(quarter, year, course[i]);
            plan3data[i][2] = objOff.room;
            String start = "", end = "", day = "";
            for (int k = 1; k < objOff.days.length; ++k) {
                if (objOff.days[k][0] != 2400) {
                    switch(k) {
                        case 0:
                            day += "Sun";
                            break;
                        case 1:
                            day += "M";
                            break;
                        case 2:
                            day += "Tu";
                            break;
                        case 3:
                            day += "W";
                            break;
                        case 4:
                            day += "Th";
                            break;
                        case 5:
                            day += "F";
                            break;
                        case 6:
                            day += "Sat";
                            break;
                        default:
                            break;
                    }
                    start = matchInt2Time(objOff.days[k][0]);
                    end = matchInt2Time(objOff.days[k][1]);
                }
            }
            plan3data[i][3] = day;
            plan3data[i][4] = start + "-" + end;
            plan3data[i][5] = objOff.instructor;
        }
        jTableQuarterly3.setModel(new javax.swing.table.DefaultTableModel(plan3data, plan3title));
    }
// Schedule Listing #38
/*                
        //Schedule Listing #2
        String plan2title[] = {"Course ID", "Course Title", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday"};
        String plan2data[][] = new String[course.length][8];
        for(int i=0; i<course.length; ++i){
            plan2data[i][0] = course[i];
            ObjCourse objC = db.getCourse(course[i]);
            plan2data[i][1] = objC.getName();

            ObjOffering objOff = db.getOfferingCondition(quarter, year, course[i]);
            for(int k=1; k<objOff.days.length-1; ++k){
                if(objOff.days[k][0]!=2400){
                    plan2data[i][k+1] = matchInt2Time(objOff.days[k][0])+"-"+matchInt2Time(objOff.days[k][1]);
                }
            }
        }
        jTableQuarterly2.setModel(new javax.swing.table.DefaultTableModel(plan2data,plan2title));
        //Schedule Listing #2
*/
}
