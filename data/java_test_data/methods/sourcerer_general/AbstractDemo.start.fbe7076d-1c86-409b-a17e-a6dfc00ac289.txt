public void start() {
    initGUI();
    initDemo();
    float target = 1000 / 60.0f;
    float frameAverage = target;
    long lastFrame = System.currentTimeMillis();
    float yield = 10000f;
    float damping = 0.1f;
    long renderTime = 0;
    long logicTime = 0;
    while (running) {
        // adaptive timing loop from Master Onyx
        long timeNow = System.currentTimeMillis();
        frameAverage = (frameAverage * 10 + (timeNow - lastFrame)) / 11;
        lastFrame = timeNow;
        yield += yield * ((target / frameAverage) - 1) * damping + 0.05f;
        for (int i = 0; i < yield; i++) {
            Thread.yield();
        }
        // render
        long beforeRender = System.currentTimeMillis();
        Graphics2D g = (Graphics2D) strategy.getDrawGraphics();
        g.setColor(Color.white);
        g.fillRect(0, 0, 500, 500);
        draw(g);
        renderGUI(g);
        g.setColor(Color.black);
        g.drawString("FAv: " + frameAverage, 10, 50);
        g.drawString("FPS: " + (int) (1000 / frameAverage), 10, 70);
        g.drawString("Yield: " + yield, 10, 90);
        g.drawString("Arbiters: " + world.getArbiters().size(), 10, 110);
        g.drawString("Bodies: " + world.getBodies().size(), 10, 130);
        g.drawString("R: " + renderTime, 10, 150);
        g.drawString("L: " + logicTime, 10, 170);
        g.drawString("Energy: " + world.getTotalEnergy(), 10, 190);
        g.dispose();
        strategy.show();
        renderTime = System.currentTimeMillis() - beforeRender;
        // update data model
        long beforeLogic = System.currentTimeMillis();
        for (int i = 0; i < 5; i++) {
            world.step();
        }
        logicTime = System.currentTimeMillis() - beforeLogic;
        if (needsReset) {
            world.clear();
            initDemo();
            needsReset = false;
            frameAverage = target;
            yield = 10000f;
        }
        update();
    }
}
