public UserDTO save(UserDTO userDTO) {
    String sql = "INSERT INTO c4j_users   " + "(user_name, user_pass, email_address,firstname," + "lastname,cell_phone,country_id,creation_date,user_guid, active)  " + "values (?,?,?,?,?,?,?,?,?,?)";
    // build the SQL Update parameters
    Object[] params = { userDTO.getUserName(), userDTO.getUserPass(), userDTO.getEmailAddress(), userDTO.getFirstName(), userDTO.getLastName(), userDTO.getCellPhone(), userDTO.getCountry().getCountryId(), new Date(), // added guid
    userDTO.getGuid(), userDTO.getActive() };
    // we're going to use a SqlUpdate helper in order
    // to retrieve the populated last insert id after
    // the sql update.
    SqlUpdate su = new SqlUpdate();
    su.setDataSource(getDataSource());
    su.setSql(sql);
    su.declareParameter(new SqlParameter(Types.VARCHAR));
    su.declareParameter(new SqlParameter(Types.VARCHAR));
    su.declareParameter(new SqlParameter(Types.VARCHAR));
    su.declareParameter(new SqlParameter(Types.VARCHAR));
    su.declareParameter(new SqlParameter(Types.VARCHAR));
    su.declareParameter(new SqlParameter(Types.VARCHAR));
    su.declareParameter(new SqlParameter(Types.INTEGER));
    su.declareParameter(new SqlParameter(Types.TIMESTAMP));
    su.declareParameter(new SqlParameter(Types.VARCHAR));
    su.declareParameter(new SqlParameter(Types.SMALLINT));
    su.setReturnGeneratedKeys(true);
    su.compile();
    // get the generated key
    KeyHolder keyHolder = new GeneratedKeyHolder();
    su.update(params, keyHolder);
    long userId = keyHolder.getKey().longValue();
    if (userId > 0) {
        userDTO = findById(userId);
    }
    return userDTO;
}
