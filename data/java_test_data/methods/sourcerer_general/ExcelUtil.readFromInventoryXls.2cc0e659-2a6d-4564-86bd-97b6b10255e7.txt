public static ArrayList<Inventory> readFromInventoryXls() throws FileNotFoundException, IOException, AppException {
    ArrayList<Inventory> ins = null;
    FileInputStream fis = null;
    fis = new FileInputStream(Config.INVENTORY_DATA_FILE);
    try {
        HSSFWorkbook workBook = new HSSFWorkbook(fis);
        // ��ȡInventory����
        HSSFSheet inventorySheet = workBook.getSheet(INVENTORY_SHEET_NAME);
        int lastRowNum = inventorySheet.getLastRowNum();
        if (lastRowNum > 1) {
            ins = new ArrayList<Inventory>();
            HSSFRow row = null;
            HSSFCell cell = null;
            int cellNum = inventorySheet.getRow(0).getLastCellNum();
            String cellValue = null;
            for (int i = 1; i <= lastRowNum; i++) {
                row = inventorySheet.getRow(i);
                Inventory inv = new Inventory();
                for (int j = 0; j < cellNum; j++) {
                    cell = row.getCell(j);
                    cellValue = cell.getRichStringCellValue().getString();
                    switch(j) {
                        /*case 0:
                                inv.setNo(Integer.parseInt(cellValue));
                                break;*/
                        case 0:
                            inv.setId(cellValue);
                            break;
                        case 1:
                            inv.setName(cellValue);
                            break;
                        case 2:
                            inv.setStandard(cellValue);
                            break;
                        case 3:
                            inv.setPacking(Integer.parseInt(cellValue));
                            break;
                        case 4:
                            inv.getCompGroup().setiGroupType(Byte.parseByte(cellValue));
                            break;
                        case 5:
                            inv.getCompGroup().setcGroupCode(cellValue);
                            break;
                        case 6:
                            inv.setCompUnitCode(cellValue);
                            break;
                        case 7:
                            inv.setSAComUnitCode(cellValue);
                            break;
                        case // ��ȡ���������
                        8:
                            inv.setcInvCCode(cellValue);
                            break;
                    }
                }
                ins.add(inv);
            }
        } else {
            throw new AppException("û�д������!");
        }
    } finally {
        if (fis != null) {
            fis.close();
            fis = null;
        }
    }
    return ins;
}
