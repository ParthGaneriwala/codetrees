// documentation inherited
@Override
public void mousePressed(MouseEvent event) {
    if (_editor.isSpecialDown()) {
        return;
    }
    int button = event.getButton();
    if (_entry != null) {
        if (button == MouseEvent.BUTTON1) {
            // continue placing
            insertVertex(_entry, (_idx == 0) ? 0 : _idx + 1);
        } else if (button == MouseEvent.BUTTON3) {
            // remove the vertex
            release();
        }
        return;
    }
    if (_editor.getMouseRay(_pick)) {
        Model model = (Model) _editor.getView().getScene().getIntersection(_pick, _isect, PATH_FILTER);
        if (model != null) {
            PathSprite sprite = (PathSprite) model.getUserObject();
            PathEntry entry = (PathEntry) sprite.getEntry();
            int idx = sprite.getVertexIndex(model);
            if (idx != -1) {
                if (button == MouseEvent.BUTTON1) {
                    if (idx == 0) {
                        // insert at start
                        insertVertex(entry, 0);
                    } else if (idx == entry.vertices.length - 1) {
                        // insert at end
                        insertVertex(entry, entry.vertices.length);
                    } else {
                        // start moving the vertex
                        _entry = entry;
                        _idx = idx;
                    }
                } else if (button == MouseEvent.BUTTON3) {
                    removeVertices(entry, idx, 1);
                }
                return;
            }
            idx = sprite.getEdgeIndex(model);
            if (button == MouseEvent.BUTTON1) {
                // insert in between
                insertVertex(entry, idx + 1);
            } else if (button == MouseEvent.BUTTON3) {
                if (idx == 0) {
                    // first edge
                    removeVertices(entry, 0, 1);
                } else if (idx == entry.vertices.length - 2) {
                    // last edge
                    removeVertices(entry, entry.vertices.length - 1, 1);
                } else {
                    // middle edge
                    removeVertices(entry, idx, 2);
                }
            }
            return;
        }
    }
    ConfigReference<PathConfig> path = _eref.getReference();
    if (button == MouseEvent.BUTTON1 && path != null && getMousePlaneIntersection(_isect)) {
        // start a new path
        _entry = new PathEntry();
        _idx = 1;
        _entry.path = path;
        _entry.vertices = new Vertex[] { new Vertex(), new Vertex() };
        setMouseLocation(_entry.vertices[0]);
        _editor.addEntries(_entry);
    }
}
