// 
// MouseListener interface
// 
public void mouseClicked(MouseEvent event) {
    Object component;
    Filter filter;
    SubFilterList list;
    int modifiers;
    boolean contained;
    Filter[] filters;
    component = event.getSource();
    if (component instanceof Filter) {
        filter = (Filter) component;
        modifiers = event.getModifiers();
        contained = selectionContains(filter);
        if (0 != (modifiers & InputEvent.SHIFT_MASK)) {
            // add everything from last selected to this command
            list = getEnclosed(filter);
            if (null != list)
                filters = list.getFilters();
            else
                filters = getFilters();
            Filter last = lastSelected();
            if (null == last)
                addSelection(filter);
            else {
                int current = -1;
                int recent = -1;
                for (int i = 0; i < filters.length; i++) {
                    if (filters[i] == filter)
                        current = i;
                    if (filters[i] == last)
                        recent = i;
                }
                if ((current != -1) && (recent != -1))
                    for (int i = Math.min(current, recent); i <= Math.max(current, recent); i++) addSelection(filters[i]);
            }
        } else if (0 != (modifiers & InputEvent.CTRL_MASK)) {
            // add just the new command
            if (contained)
                removeSelection(filter);
            else
                addSelection(filter);
        } else if (0 != (modifiers & InputEvent.BUTTON3_MASK)) {
            if (!selectionContains(filter)) {
                clearSelection();
                addSelection(filter);
            }
            showContextMenu(event);
        } else {
            clearSelection();
            addSelection(filter);
        }
    } else
        clearSelection();
}
