public static void printPage(PrintStream out) {
    HashMap<String, Long> bytesFromHost = new HashMap<String, Long>();
    long timeWindowOfSample = Long.MAX_VALUE;
    long now = System.currentTimeMillis();
    out.println("<ul>");
    synchronized (lastPosts) {
        if (!lastPosts.isEmpty())
            timeWindowOfSample = now - lastPosts.peek().receivedTs;
        for (PostStats stats : lastPosts) {
            out.print("<li>");
            out.print(stats.dataSize + " bytes from " + stats.src + " at timestamp " + stats.receivedTs);
            out.println(" which was " + ((now - stats.receivedTs) / 1000) + " seconds ago");
            Long oldBytes = bytesFromHost.get(stats.src);
            long newBytes = stats.dataSize;
            if (oldBytes != null)
                newBytes += oldBytes;
            bytesFromHost.put(stats.src, newBytes);
            out.println("<ol>");
            for (int i = 0; i < stats.count; ++i) out.println("<li> " + stats.lengths[i] + " bytes of type " + stats.types[i] + ".  Adaptor name =" + stats.names[i] + " </li>");
            out.println("</ol></li>");
        }
    }
    out.println("</ul>");
    out.println("<ul>");
    for (Map.Entry<String, Long> h : bytesFromHost.entrySet()) {
        out.print("<li>rate from " + h.getKey() + " was " + (1000 * h.getValue() / timeWindowOfSample));
        out.println(" bytes/second in last " + timeWindowOfSample / 1000 + " seconds.</li>");
    }
    out.println("</ul>");
    out.println("total of " + bytesFromHost.size() + " unique hosts seen");
    out.println("<p>current time is " + System.currentTimeMillis() + " </p>");
}
