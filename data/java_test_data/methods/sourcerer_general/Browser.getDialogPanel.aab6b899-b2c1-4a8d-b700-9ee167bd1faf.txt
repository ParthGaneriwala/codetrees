public static JPanel getDialogPanel(Window parent) {
    dialogParent = parent;
    if (dialogPanel == null) {
        commandLinesArea = new JTextArea("", 8, 40);
        JScrollPane scrollpane = new JScrollPane(commandLinesArea);
        resetButton = new JButton(labels.getString("dialog.reset"));
        browseButton = new JButton(labels.getString("dialog.browse"));
        commandLinesLabel = new JLabel(labels.getString("dialog.commandLines"));
        description = new JTextArea(labels.getString("dialog.description"));
        description.setEditable(false);
        description.setOpaque(false);
        ActionListener actionListener = new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                Object source = e.getSource();
                if (source == resetButton) {
                    setCommands(Browser.defaultCommands());
                } else if (source == browseButton) {
                    if (fileChooser == null) {
                        fileChooser = new JFileChooser();
                    }
                    if (fileChooser.showOpenDialog(dialogParent) == JFileChooser.APPROVE_OPTION) {
                        String app = fileChooser.getSelectedFile().getPath();
                        StringBuffer sb = new StringBuffer(2 * app.length());
                        for (int i = 0; i < app.length(); i++) {
                            char c = app.charAt(i);
                            // escape these two characters so that we can later parse the stuff
                            if (c == '\"' || c == '\\') {
                                sb.append('\\');
                            }
                            sb.append(c);
                        }
                        app = sb.toString();
                        if (app.indexOf(" ") != -1) {
                            app = '"' + app + '"';
                        }
                        String commands = commandLinesArea.getText();
                        if (commands.length() != 0 && !commands.endsWith("\n") && !commands.endsWith("\r")) {
                            commands += "\n";
                        }
                        commandLinesArea.setText(commands + app + " {0}");
                    }
                }
            }
        };
        GridBagLayout gridbag = new GridBagLayout();
        GridBagConstraints c = new GridBagConstraints();
        c.insets.top = 5;
        c.insets.bottom = 5;
        dialogPanel = new JPanel(gridbag);
        dialogPanel.setBorder(BorderFactory.createEmptyBorder(10, 20, 5, 20));
        JLabel label;
        c.gridwidth = GridBagConstraints.REMAINDER;
        c.anchor = GridBagConstraints.WEST;
        gridbag.setConstraints(description, c);
        dialogPanel.add(description);
        c.gridy = 1;
        c.gridwidth = GridBagConstraints.RELATIVE;
        gridbag.setConstraints(commandLinesLabel, c);
        dialogPanel.add(commandLinesLabel);
        JPanel buttonPanel = new JPanel();
        c.anchor = GridBagConstraints.EAST;
        browseButton.addActionListener(actionListener);
        buttonPanel.add(browseButton);
        resetButton.addActionListener(actionListener);
        buttonPanel.add(resetButton);
        gridbag.setConstraints(buttonPanel, c);
        dialogPanel.add(buttonPanel);
        c.gridy = 2;
        c.gridwidth = GridBagConstraints.REMAINDER;
        c.anchor = GridBagConstraints.WEST;
        gridbag.setConstraints(scrollpane, c);
        dialogPanel.add(scrollpane);
    }
    return dialogPanel;
}
