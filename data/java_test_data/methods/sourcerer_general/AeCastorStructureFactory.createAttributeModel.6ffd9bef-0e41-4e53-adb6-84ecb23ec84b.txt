public static AeAttribute createAttributeModel(AttributeDecl aAttrDecl) {
    AeAttribute aeAttr = new AeAttribute();
    // Set the type.
    SimpleType type;
    if (aAttrDecl.getReference() != null)
        type = aAttrDecl.getReference().getSimpleType();
    else
        type = aAttrDecl.getSimpleType();
    SimpleType baseType;
    if (type instanceof Union) {
        Union union = (Union) type;
        baseType = (SimpleType) union.getMemberTypes().nextElement();
    } else
        baseType = type.getBuiltInBaseType();
    aeAttr.setDataType(new QName(baseType.getSchema().getSchemaNamespace(), baseType.getName()));
    String namespace = AeSchemaUtil.getNamespaceURI(aAttrDecl);
    aeAttr.setName(new QName(namespace, aAttrDecl.getName()));
    aeAttr.setRequired(aAttrDecl.isRequired());
    aeAttr.setOptional(aAttrDecl.isOptional());
    aeAttr.setDefaultValue(aAttrDecl.getDefaultValue());
    aeAttr.setFixedValue(aAttrDecl.getFixedValue());
    // process enumerations.
    List enumerations = new ArrayList();
    if (type instanceof SimpleType) {
        SimpleType simpleType = (SimpleType) type;
        Enumeration enumer = simpleType.getLocalFacets();
        if (enumer != null) {
            while (enumer.hasMoreElements()) {
                Facet facet = (Facet) enumer.nextElement();
                if (facet.getName().equals(Facet.ENUMERATION))
                    enumerations.add(facet.getValue());
            }
        }
    }
    aeAttr.setEnumRestrictions(enumerations);
    return aeAttr;
}
