public void doView(RenderRequest request, RenderResponse response) throws PortletException, IOException {
    try {
        String defaultView = EDIT_PAGE;
        String viewType = request.getParameter("viewType");
        if (viewType == null) {
            viewType = (String) request.getPortletSession().getAttribute("viewType");
        }
        // Set global preferences
        request.setAttribute(TITLE, request.getPreferences().getValue(PREF_TITLE, null));
        request.setAttribute(USER, PortalUtils.getUser(request));
        // Test if the user has access to the project
        if (!ProjectUtils.hasAccess(PortalUtils.getProject(request).getId(), PortalUtils.getUser(request), "project-profile-admin")) {
            request.setAttribute(HAS_PROJECT_ACCESS, "false");
        } else if (CLOSE.equals(viewType)) {
            Project project = (Project) request.getPortletSession().getAttribute(PROJECT);
            request.setAttribute(PROJECT, project);
            // Cleanup other session attributes
            request.getPortletSession().removeAttribute(PROJECT);
            request.getPortletSession().removeAttribute(PROJECT_BEAN);
            request.getPortletSession().removeAttribute(VIEW_TYPE);
            defaultView = CLOSE_PAGE;
        } else if (SAVE_FAILURE.equals(viewType)) {
            Connection db = PortalUtils.useConnection(request);
            // Build country list
            CountrySelect countrySelect = new CountrySelect();
            request.setAttribute(COUNTRY_LIST, countrySelect);
            // Show the form with any errors provided
            request.setAttribute(ERROR_MESSAGE, request.getPreferences().getValue(PREF_FAILURE_MESSAGE, null));
            ProjectFormBean projectBean = (ProjectFormBean) request.getPortletSession().getAttribute(PROJECT_BEAN);
            request.setAttribute(PROJECT_BEAN, projectBean);
            request.getPortletSession().removeAttribute(PROJECT_BEAN);
            Project project = (Project) request.getPortletSession().getAttribute(PROJECT);
            if (project != null) {
                PortalUtils.processErrors(request, project.getErrors());
                request.setAttribute(PROJECT, project);
                request.getPortletSession().removeAttribute(PROJECT);
                // Build display preferences for editing
                String categoryName = getProjectCategoryName(db, project);
                if (StringUtils.hasText(categoryName)) {
                    request.setAttribute("preferenceMap", getDisplayPreferences(request, categoryName));
                }
                // Build sub category list for the category
                if (project.getCategoryId() != -1) {
                    ProjectCategoryList projectSubCategoryList = getSubCategoryList(db, project);
                    request.setAttribute(SUB_CATEGORY_LIST, projectSubCategoryList);
                }
            }
            request.getPortletSession().removeAttribute(VIEW_TYPE);
        } else {
            Project project = PortalUtils.getProject(request);
            request.setAttribute(PROJECT, project);
            int projectId = project == null ? -1 : project.getId();
            if (projectId <= 0) {
                request.setAttribute(ERROR_MESSAGE, "No project was specified");
            } else {
                ProjectFormBean projectBean = new ProjectFormBean();
                projectBean.buildBeanFromProject(project);
                request.setAttribute(PROJECT_BEAN, projectBean);
                Connection db = PortalUtils.useConnection(request);
                // Build display preferences for editing
                String categoryName = getProjectCategoryName(db, project);
                if (StringUtils.hasText(categoryName)) {
                    HashMap<String, String> preferenceMap = getDisplayPreferences(request, categoryName);
                    request.setAttribute(PREFERENCE_MAP, preferenceMap);
                }
                // Build sub category list for the category
                if (project.getCategoryId() != -1) {
                    ProjectCategoryList projectSubCategoryList = getSubCategoryList(db, project);
                    request.setAttribute(SUB_CATEGORY_LIST, projectSubCategoryList);
                }
                // Build country list
                CountrySelect countrySelect = new CountrySelect();
                request.setAttribute(COUNTRY_LIST, countrySelect);
                // Get default country
                request.setAttribute(DEFAULT_COUNTRY, "UNITED STATES");
            }
        }
        PortletContext context = getPortletContext();
        PortletRequestDispatcher requestDispatcher = context.getRequestDispatcher(defaultView);
        requestDispatcher.include(request, response);
    } catch (Exception e) {
        e.printStackTrace();
        throw new PortletException(e);
    }
}
