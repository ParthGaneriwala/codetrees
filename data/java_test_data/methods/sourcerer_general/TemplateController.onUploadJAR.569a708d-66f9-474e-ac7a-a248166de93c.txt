public void onUploadJAR(Event e) {
    try {
        Media jar = Fileupload.get("Upload your JAR containing annotated JAVA Classes: ", "Annotated JAR");
        List<CtClass> classFiles = new ArrayList<CtClass>();
        if (jar.getName().endsWith(".jar")) {
            File tempJar = File.createTempFile("anno", ".jar");
            FileOutputStream writer = new FileOutputStream(tempJar);
            writer.write(jar.getByteData());
            writer.close();
            JarFile jarFile = new JarFile(tempJar);
            Enumeration<JarEntry> entries = jarFile.entries();
            ClassPool tempPool = new ClassPool();
            tempPool.appendClassPath(tempJar.getAbsolutePath());
            while (entries.hasMoreElements()) {
                JarEntry entry = entries.nextElement();
                String classFile = entry.getName();
                if (entry.getName().endsWith(".class")) {
                    String className = classFile.substring(0, classFile.indexOf(".class"));
                    CtClass clazz = tempPool.get(className);
                    if (clazz.getAnnotation(PersistenceTemplate.class) != null) {
                        classFiles.add(clazz);
                    }
                }
            }
        } else {
            Messagebox.show("You must upload a JAR!", "Error", Messagebox.OK, Messagebox.ERROR);
            return;
        }
        for (CtClass clazz : classFiles) {
            Template template = templateModel.addTemplate(clazz.getName());
            template.setDefault(clazz.getAnnotation(NeverNull.class) != null);
            for (CtField field : clazz.getFields()) {
                boolean nullable = true;
                boolean neverNull = field.getAnnotation(NeverNull.class) != null;
                boolean nullAllowed = field.getAnnotation(NullAllowed.class) != null;
                if (nullAllowed && neverNull) {
                    Messagebox.show("You cannot mark a field as nullable and not nullable!", "Error", Messagebox.OK, Messagebox.ERROR);
                    return;
                }
                if (neverNull) {
                    nullable = false;
                }
                if (nullAllowed) {
                    nullable = true;
                }
                template.addField(field.getName(), nullable);
            }
        }
    } catch (Exception e1) {
        e1.printStackTrace();
    // Do nothing? just have the user click the button again.
    }
    this.refreshTemplateList();
}
