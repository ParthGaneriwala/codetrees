private void sendMail() throws SAXException {
    try {
        Properties props = new Properties();
        props.put("mail.smtp.host", this.mailHost);
        if (this.subject == null) {
            this.ignoreHooksCount++;
            super.sendStartElementEventNS(ELEMENT_ERROR);
            super.sendTextEvent("Subject not available - sending mail aborted");
            super.sendEndElementEventNS(ELEMENT_ERROR);
            this.ignoreHooksCount--;
            return;
        }
        if (this.body == null && this.bodyURI == null) {
            this.ignoreHooksCount++;
            super.sendStartElementEventNS(ELEMENT_ERROR);
            super.sendTextEvent("Mailbody not available - sending mail aborted");
            super.sendEndElementEventNS(ELEMENT_ERROR);
            this.ignoreHooksCount--;
            return;
        }
        Session session = Session.getDefaultInstance(props, null);
        Transport trans = null;
        trans = session.getTransport("smtp");
        trans.connect();
        this.smtpMessage = setUpMessage(session);
        this.ignoreHooksCount++;
        super.sendStartElementEventNS(ELEMENT_RESULT);
        try {
            if (this.sendPartial) {
                for (int i = 0; i < this.toAddresses.size(); i++) {
                    List v = new ArrayList(1);
                    v.add(this.toAddresses.get(i));
                    this.sendMail(v, trans);
                }
            } else {
                this.sendMail(this.toAddresses, trans);
            }
        } catch (Exception sE) {
            this.getLogger().error("sendMail-Error", sE);
            this.sendExceptionElement(sE);
        }
        trans.close();
        super.sendEndElementEventNS(ELEMENT_RESULT);
        this.ignoreHooksCount--;
    } catch (Exception sE) {
        this.getLogger().error("sendMail-Error", sE);
        this.sendExceptionElement(sE);
    }
}
