protected synchronized void deleteFinalizedObjects() {
    if (_finalizedBufferObjects != null) {
        int[] compacted = IntListUtil.compact(_finalizedBufferObjects);
        IntBuffer idbuf = BufferUtils.createIntBuffer(compacted.length);
        idbuf.put(compacted).rewind();
        ARBBufferObject.glDeleteBuffersARB(idbuf);
        _bufferObjectCount -= compacted.length;
        _bufferObjectBytes -= _finalizedBufferObjectBytes;
        _finalizedBufferObjects = null;
        _finalizedBufferObjectBytes = 0;
    }
    if (_finalizedDisplayLists != null) {
        for (int id : _finalizedDisplayLists) {
            if (id != 0) {
                GL11.glDeleteLists(id, 1);
                _displayListCount--;
            }
        }
        _finalizedDisplayLists = null;
    }
    if (_finalizedFramebuffers != null) {
        IntBuffer idbuf = BufferUtils.createIntBuffer(_finalizedFramebuffers.length);
        idbuf.put(_finalizedFramebuffers).rewind();
        EXTFramebufferObject.glDeleteFramebuffersEXT(idbuf);
        _finalizedFramebuffers = null;
    }
    if (_finalizedPbuffers != null) {
        for (Object buf : _finalizedPbuffers) {
            if (buf != null) {
                ((Pbuffer) buf).destroy();
            }
        }
        _finalizedPbuffers = null;
    }
    if (_finalizedQueries != null) {
        IntBuffer idbuf = BufferUtils.createIntBuffer(_finalizedQueries.length);
        idbuf.put(_finalizedQueries).rewind();
        ARBOcclusionQuery.glDeleteQueriesARB(idbuf);
        _finalizedQueries = null;
    }
    if (_finalizedRenderbuffers != null) {
        IntBuffer idbuf = BufferUtils.createIntBuffer(_finalizedRenderbuffers.length);
        idbuf.put(_finalizedRenderbuffers).rewind();
        EXTFramebufferObject.glDeleteRenderbuffersEXT(idbuf);
        _finalizedRenderbuffers = null;
    }
    if (_finalizedShaderObjects != null) {
        for (int id : _finalizedShaderObjects) {
            // instead, at least on some systems, it raises an invalid value error
            if (id != 0) {
                ARBShaderObjects.glDeleteObjectARB(id);
                _shaderObjectCount--;
            }
        }
        _finalizedShaderObjects = null;
    }
    if (_finalizedTextures != null) {
        int[] compacted = IntListUtil.compact(_finalizedTextures);
        IntBuffer idbuf = BufferUtils.createIntBuffer(compacted.length);
        idbuf.put(compacted).rewind();
        GL11.glDeleteTextures(idbuf);
        _textureCount -= compacted.length;
        _textureBytes -= _finalizedTextureBytes;
        _finalizedTextures = null;
        _finalizedTextureBytes = 0;
    }
}
