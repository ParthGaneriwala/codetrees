public void testCopyOnWrite() throws IOException {
    Configuration conf = new Configuration();
    if (simulatedStorage) {
        conf.setBoolean(SimulatedFSDataset.CONFIG_PROPERTY_SIMULATED, true);
    }
    MiniDFSCluster cluster = new MiniDFSCluster(conf, 1, true, null);
    FileSystem fs = cluster.getFileSystem();
    InetSocketAddress addr = new InetSocketAddress("localhost", cluster.getNameNodePort());
    DFSClient client = new DFSClient(addr, conf);
    try {
        // create a new file, write to it and close it.
        // 
        Path file1 = new Path("/filestatus.dat");
        FSDataOutputStream stm = createFile(fs, file1, 1);
        writeFile(stm);
        stm.close();
        // Get a handle to the datanode
        DataNode[] dn = cluster.listDataNodes();
        assertTrue("There should be only one datanode but found " + dn.length, dn.length == 1);
        LocatedBlocks locations = client.namenode.getBlockLocations(file1.toString(), 0, Long.MAX_VALUE);
        List<LocatedBlock> blocks = locations.getLocatedBlocks();
        FSDataset dataset = (FSDataset) dn[0].data;
        // 
        for (int i = 0; i < blocks.size(); i = i + 2) {
            Block b = (Block) blocks.get(i).getBlock();
            FSDataset fsd = (FSDataset) dataset;
            File f = fsd.getFile(b);
            File link = new File(f.toString() + ".link");
            System.out.println("Creating hardlink for File " + f + " to " + link);
            HardLink.createHardLink(f, link);
        }
        // 
        for (int i = 0; i < blocks.size(); i++) {
            Block b = (Block) blocks.get(i).getBlock();
            System.out.println("testCopyOnWrite detaching block " + b);
            assertTrue("Detaching block " + b + " should have returned true", dataset.detachBlock(b, 1) == true);
        }
        // 
        for (int i = 0; i < blocks.size(); i++) {
            Block b = (Block) blocks.get(i).getBlock();
            System.out.println("testCopyOnWrite detaching block " + b);
            assertTrue("Detaching block " + b + " should have returned false", dataset.detachBlock(b, 1) == false);
        }
    } finally {
        fs.close();
        cluster.shutdown();
    }
}
