public Charset detectCodepage(final InputStream in, final int length) throws IOException {
    // dumbest pragmatic code ever written (nearly a code generator would have
    // been faster). But it's proven fast.
    Charset result = UnknownCharset.getInstance();
    int readByte = 0;
    readByte = in.read();
    switch(readByte) {
        case (0x00):
            {
                // 0x 00
                readByte = in.read();
                switch(readByte) {
                    case (0x00):
                        {
                            // 0x 00 00
                            readByte = in.read();
                            switch(readByte) {
                                case (0xFE):
                                    {
                                        // UCS-4, big-endian machine (1234 order)
                                        try {
                                            result = Charset.forName("UCS-4BE");
                                        } catch (UnsupportedCharsetException uce) {
                                            result = UnsupportedCharset.forName("UCS-4BE");
                                        }
                                        return result;
                                    }
                                case (0xFF):
                                    {
                                        // UCS-4, unusual octet order (2143)
                                        try {
                                            result = Charset.forName("UCS-4");
                                        } catch (UnsupportedCharsetException uce) {
                                            result = UnsupportedCharset.forName("UCS-4");
                                        }
                                        return result;
                                    }
                                default:
                                    return result;
                            }
                        }
                    default:
                        return result;
                }
            }
        case (0xFE):
            {
                // 0x FE
                readByte = in.read();
                switch(readByte) {
                    case (0xFF):
                        {
                            // 0x FE FF
                            // from here on default to UTF-16, big-endian
                            readByte = in.read();
                            switch(readByte) {
                                case (0x00):
                                    {
                                        // 0x FE FF 00
                                        readByte = in.read();
                                        switch(readByte) {
                                            case (0x00):
                                                {
                                                    // UCS-4, unusual octet order (3412)
                                                    try {
                                                        result = Charset.forName("UCS-4");
                                                    } catch (UnsupportedCharsetException uce) {
                                                        result = UnsupportedCharset.forName("UCS-4");
                                                    }
                                                    return result;
                                                }
                                            default:
                                                {
                                                    try {
                                                        result = Charset.forName("UTF-16BE");
                                                    } catch (UnsupportedCharsetException uce) {
                                                        result = UnsupportedCharset.forName("UTF-16BE");
                                                    }
                                                    return result;
                                                }
                                        }
                                    }
                                default:
                                    {
                                        try {
                                            result = Charset.forName("UTF-16BE");
                                        } catch (UnsupportedCharsetException uce) {
                                            result = UnsupportedCharset.forName("UTF-16BE");
                                        }
                                        return result;
                                    }
                            }
                        }
                    default:
                        {
                            return result;
                        }
                }
            }
        case (0xFF):
            {
                // 0x FF
                readByte = in.read();
                switch(readByte) {
                    case (0xFE):
                        {
                            // 0x FF FE
                            // from here on default to UTF-16, little-endian
                            readByte = in.read();
                            switch(readByte) {
                                case (0x00):
                                    {
                                        // 0x FF FE 00
                                        readByte = in.read();
                                        switch(readByte) {
                                            case (0x00):
                                                {
                                                    // UCS-4, little-endian machine (4321 order)
                                                    try {
                                                        result = Charset.forName("UCS-4LE");
                                                    } catch (UnsupportedCharsetException uce) {
                                                        result = UnsupportedCharset.forName("UCS-4LE");
                                                    }
                                                    return result;
                                                }
                                            default:
                                                {
                                                    try {
                                                        result = Charset.forName("UTF-16LE");
                                                    } catch (UnsupportedCharsetException uce) {
                                                        result = UnsupportedCharset.forName("UTF-16LE");
                                                    }
                                                    return result;
                                                }
                                        }
                                    }
                                default:
                                    {
                                        try {
                                            result = Charset.forName("UTF-16LE");
                                        } catch (UnsupportedCharsetException uce) {
                                            result = UnsupportedCharset.forName("UTF-16LE");
                                        }
                                        return result;
                                    }
                            }
                        }
                    default:
                        {
                            return result;
                        }
                }
            }
        case (0xEF):
            {
                // 0x EF
                readByte = in.read();
                switch(readByte) {
                    case (0xBB):
                        {
                            // 0x EF BB
                            readByte = in.read();
                            switch(readByte) {
                                case (0xBF):
                                    {
                                        try {
                                            result = Charset.forName("utf-8");
                                        } catch (UnsupportedCharsetException uce) {
                                            result = UnsupportedCharset.forName("utf-8");
                                        }
                                        return result;
                                    }
                                default:
                                    {
                                        return result;
                                    }
                            }
                        }
                    default:
                        {
                            return result;
                        }
                }
            }
        default:
            return result;
    }
}
