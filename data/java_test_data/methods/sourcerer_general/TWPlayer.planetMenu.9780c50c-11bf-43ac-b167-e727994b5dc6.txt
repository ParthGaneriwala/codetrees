private void planetMenu(int sector, int shipid) {
    Vector<TWTable> PVec = TWTable.getRows("Planets WHERE Sector = " + sector);
    if (PVec == null) {
        say("There's no planets in this sector.");
        return;
    }
    TWTable P = selectVec(PVec, Planets.NAME, 1);
    if (P == null)
        return;
    TWTable S = new TWTable(Ships.sqlStr(shipid));
    TWTable STab = new TWTable(ShipTab.sqlStr(S.IntRow[Ships.CLASS]));
    TWTable SCols = new TWTable(Cols.sqlStr(S.IntRow[Ships.SHIPCOLS]));
    say("Attempting to land on " + P.Row[Planets.NAME]);
    // TODO: check for defenses here
    String menu = "(C)laim Planet" + CR + "(T)ake/(D)ump Colonists" + CR + "Change (P)roduction Levels" + CR + "Beam Products (F)rom/(O)nto Ship" + CR + "(A)dd Weapons/(R)emove Weapons" + CR + "(E)nter Citadel" + CR + "(B)last off into space" + CR;
    String repstr = "";
    while (!repstr.equalsIgnoreCase("B")) {
        qSay(Planets.showPlan(P.IntRow[Planets.ID]));
        repstr = ask(menu, "B").toUpperCase();
        if (repstr.equals("C")) {
            SQLConn.editTab("Planets", "Owner", pid, "id = " + P.IntRow[Planets.ID]);
        } else if (repstr.equals("P")) {
            changeProd(P.IntRow[Planets.ID]);
        } else if (repstr.equals("A")) {
            int wid = getWeapon("SHIP", S.IntRow[Ships.ID]);
            if (wid > 0) {
                int n = SQLConn.getInt("Number FROM Weapons WHERE id = " + wid);
                int a = ask("Amount?", n);
                if (a > 0 && n <= n && Weapons.transferWeapons(a, wid, "PLANET", P.IntRow[Planets.ID]))
                    say("Weapons Transferred.");
                else
                    say("Couldn't Transfer.");
            }
        } else if (repstr.equals("R")) {
            int wid = getWeapon("PLANET", P.IntRow[Planets.ID]);
            if (wid > 0) {
                int n = SQLConn.getInt("Number FROM Weapons WHERE id = " + wid);
                int a = ask("Amount?", n);
                if (a > 0 && n <= n && Weapons.transferWeapons(a, wid, "SHIP", S.IntRow[Ships.ID]))
                    say("Weapons Transferred.");
                else
                    say("Couldn't Transfer.");
            }
        } else if (repstr.equals("F")) {
            moveGoods(S.IntRow[Ships.CARGO], P.IntRow[Planets.PRODUCTS], 10000);
        } else if (repstr.equals("O")) {
            int freeholds = S.IntRow[Ships.HOLDS] - Goods.countGoods(S.IntRow[Ships.CARGO]);
            moveGoods(P.IntRow[Planets.PRODUCTS], S.IntRow[Ships.CARGO], freeholds);
        } else if (repstr.equals("T")) {
            int i = SCols.IntRow[Cols.IDLE];
            int m = STab.IntRow[ShipTab.MAXHOLDS] - i;
            int c = ask("How many? (Max: " + m + ")", m);
            if (c < 0)
                c = 0;
            if (c > m)
                c = m;
            c = Planets.colonize(P.IntRow[Planets.ID], -c);
            SQLConn.editTab("Cols", "Idle", i - c, "id = " + SCols.IntRow[Cols.ID]);
            SCols = new TWTable(Cols.sqlStr(S.IntRow[Ships.SHIPCOLS]));
        } else if (repstr.equals("D")) {
            int i = SCols.IntRow[Cols.IDLE];
            int c = ask("How many? (Max: " + i + ")", i);
            if (c < 0)
                c = 0;
            if (c > i)
                c = i;
            Planets.colonize(P.IntRow[Planets.ID], c);
            SQLConn.editTab("Cols", "Idle", i - c, "id = " + SCols.IntRow[Cols.ID]);
            SCols = new TWTable(Cols.sqlStr(S.IntRow[Ships.SHIPCOLS]));
        }
    }
}
