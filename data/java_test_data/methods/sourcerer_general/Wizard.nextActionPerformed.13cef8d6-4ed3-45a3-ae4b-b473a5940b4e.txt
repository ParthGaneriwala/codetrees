// </editor-fold>//GEN-END:initComponents
private void nextActionPerformed(java.awt.event.ActionEvent evt) {
    // GEN-FIRST:event_nextActionPerformed
    File destination;
    int selectedOption;
    String[] directoryContents;
    NoParentOrSelfFileFilter fileFilter;
    switch(currentState) {
        case Welcome:
            backPanel.removeAll();
            if (setupData.getLicence() != null) {
                backPanel.add(licence);
                next.setText("Acepto");
                currentState = WizardState.Licence;
            } else {
                backPanel.add(location);
                currentState = WizardState.Location;
            }
            backPanel.updateUI();
            back.setVisible(true);
            break;
        case Licence:
            backPanel.removeAll();
            backPanel.add(location);
            next.setText("Siguiente");
            backPanel.updateUI();
            currentState = WizardState.Location;
            break;
        case Location:
            if (location.getDestinationFolder().trim().length() == 0) {
                JOptionPane.showMessageDialog(this, "Por favor seleccione una ubicación para la instalación", "¡Hay un problema!", JOptionPane.WARNING_MESSAGE);
                return;
            }
            destination = new File(location.getDestinationFolder());
            if (destination.exists() == false) {
                selectedOption = JOptionPane.showConfirmDialog(this, "El directorio de destino no existe. ¿Desea crearlo?", "Directorio de Destino Inexistente", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (selectedOption == JOptionPane.NO_OPTION)
                    return;
            } else {
                if (destination.isDirectory()) {
                    fileFilter = new NoParentOrSelfFileFilter();
                    directoryContents = destination.list(fileFilter);
                    if (directoryContents.length > 0) {
                        selectedOption = JOptionPane.showConfirmDialog(this, "El directorio de destino no está vacio. ¿Desea crearlo?", "Directorio de Destino no Vacio", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                        if (selectedOption == JOptionPane.NO_OPTION)
                            return;
                    }
                }
            }
            backPanel.removeAll();
            if (setupData.getShortcut()) {
                backPanel.add(shortcut);
                currentState = WizardState.Shortcut;
                backPanel.updateUI();
            } else {
                backPanel.add(copying);
                currentState = WizardState.Copying;
                back.setVisible(false);
                next.setVisible(false);
                backPanel.updateUI();
                startSetup();
            }
            break;
        case Shortcut:
            backPanel.removeAll();
            backPanel.add(copying);
            backPanel.updateUI();
            currentState = WizardState.Copying;
            back.setVisible(false);
            next.setVisible(false);
            backPanel.updateUI();
            startSetup();
            break;
        case Copying:
            backPanel.removeAll();
            backPanel.add(finished);
            backPanel.updateUI();
            if (errorOcurred) {
                finished.setText("No se ha podido completar la instalación " + "debido a un Error. Por favor contacte al proveedor del Software.");
            }
            if (canceled) {
                finished.setText("Ha cancelado la instalación. El programa no ha sido instalado en su computadora.");
            }
            back.setVisible(false);
            next.setVisible(true);
            next.setText("Finalizar");
            cancel.setVisible(false);
            currentState = WizardState.Finished;
            break;
        case Finished:
            this.dispose();
    }
}
