private void removeObject(GameObject g) {
    /*
		 * In addition to removing an object from the list, we should probably do
		 * something to update the view since this object no longer 'exists'.
		 */
    GameObject selected = getCurrentSelection();
    if (playerUnits.getLength() > 1) {
        ObjectID nextUnit = this.playerUnits.getNext();
        boolean successful = false;
        for (int i = 0; i < playerUnits.getLength(); i++) {
            if (objectQuery(nextUnit) != null) {
                successful = true;
                break;
            }
            nextUnit = this.playerUnits.getNext();
        }
        if (successful) {
            this.setPlayerIterators(this.playerIDQuery(nextUnit));
            boolean checkBases = true;
            for (int j = 0; j < playerUnits.getLength(); j++) {
                ObjectID oid = playerUnits.getNext();
                Unit u = (Unit) objectQuery(oid);
                if (!u.getMissionFlag()) {
                    setCurrentSelection(nextUnit);
                    checkBases = false;
                    break;
                }
            }
            if (checkBases && playerBases.getLength() > 0) {
                setCurrentSelection(playerBases.getNext());
            }
        } else {
            ObjectID nextBase = this.playerBases.getNext();
            if (nextBase == null || objectQuery(nextBase) == null) {
                System.out.println("YOU LOSE!!!");
                System.exit(0);
            }
            this.setPlayerIterators(this.playerIDQuery(nextBase));
            setCurrentSelection(nextBase);
        }
    }
    for (GameData gd : dataList) {
        if (gd.removeObject(g)) {
            ViewObjectEvent voe = new ViewObjectEvent(-1, ViewEventType.REMOVE_VIEW_OBJECT, g, null);
            viewHandler.fireEventNow(voe);
            break;
        }
    }
    pMap.removeObject(g);
    oMap.removeObject(g);
}
