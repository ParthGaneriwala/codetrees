private void writeValidationFunctions(ResponseWriter writer, FacesContext context) throws IOException {
    StringBuffer buff = new StringBuffer();
    buff.append("var bCancel = false;\n").append("function ").append(getAttributes().get("functionName").toString()).append("(form) {\n").append("\tvar bValid = true;\n").append("\tvar sFormName = jcv_retrieveFormName(form);\n");
    Map formValidators = getValidatorsGroupByFormName();
    Iterator formIter = formValidators.entrySet().iterator();
    while (formIter.hasNext()) {
        Map.Entry typeEntry = (Map.Entry) formIter.next();
        String formName = (String) typeEntry.getKey();
        Map formTypeValidators = (Map) typeEntry.getValue();
        // for each validator type, write callback
        buff.append("\tif ((bValid && !bCancel && (\"").append(formName).append("\" == sFormName))) {\n").append("\t\tbValid = (");
        Iterator iter = getTypesOrderedByDependencies(formTypeValidators.keySet()).iterator();
        boolean first = true;
        while (iter.hasNext()) {
            String type = (String) iter.next();
            ValidatorAction a = CommonsValidator.getValidatorAction(type);
            buff.append((!first ? " && " : "")).append(a.getJsFunctionName()).append("(form)");
            first = false;
            writer.write("function ");
            StringBuffer callback = new StringBuffer();
            // most of the type the callback function is based on the form name and
            // type but for some rules require special names
            String fnameMnemonic = CommonsValidator.getJsCallbackMnemonic(type);
            callback.append(formName).append('_').append(fnameMnemonic);
            writer.write(callback.toString());
            writer.write("() { \n");
            // for each field validated by this type, add configuration object
            Map map = (Map) formTypeValidators.get(type);
            Iterator iter2 = map.keySet().iterator();
            int k = 0;
            while (iter2.hasNext()) {
                String id = (String) iter2.next();
                CommonsValidator v = (CommonsValidator) map.get(id);
                writer.write("this[" + k + "] = ");
                k++;
                writeJavaScriptParams(writer, context, id, v);
                writer.write(";\n");
            }
            writer.write("\t}\n");
        }
        buff.append(");\n\t\n}");
    }
    formValidators.clear();
    // write out the form function
    buff.append("\n\treturn bValid;\n").append("}\n");
    writer.write(buff.toString());
    // resolve dependencies for a complete types list
    List types = new ArrayList(validators.keySet());
    types.add("includeJavaScriptUtilities");
    Iterator iter = types.iterator();
    while (iter.hasNext()) {
        String type = (String) iter.next();
        ValidatorAction a = CommonsValidator.getValidatorAction(type);
        writer.write(a.getJavascript());
        writer.write("\n");
    }
    types.clear();
}
