public static List getxf() throws Exception {
    Connection mssqlcon = null;
    java.sql.PreparedStatement stmt = null;
    ResultSet rs = null;
    List list = new ArrayList();
    try {
        mssqlcon = DriverManager.getConnection(url, username, password);
        stmt = mssqlcon.prepareStatement("select * from lx_lawyerlessonxf where learnmode!='其他计分'");
        rs = stmt.executeQuery();
        stmt.setFetchSize(100);
        java.io.PrintWriter log = new java.io.PrintWriter("c:\\xuefen.sql");
        java.io.PrintWriter uesrid0 = new java.io.PrintWriter("c:\\useridis0.sql");
        int i = 1;
        while (rs.next()) {
            String lawyerid = rs.getString("lawyerid");
            String lessonid = rs.getString("lessonid");
            java.sql.Timestamp pxdate = rs.getTimestamp("pxdate");
            String learnmode = rs.getString("learnmode").trim();
            float reqminutes = rs.getFloat("pxreqminutes");
            float pxminutes = rs.getFloat("pxminutes");
            float pxxf = rs.getFloat("pxxf");
            // String xftype = rs.getString("xftype");
            // String isfull = rs.getString("isfull");
            Lawyerlessonxf lessons = new Lawyerlessonxf();
            lessons.setLastupdate(pxdate);
            // 现场培训，在线视频，文本课件，积分补登
            if (learnmode.equals("网上培训")) {
                lessons.setLearnmode("在线视频");
            } else if (learnmode.equals("其他计分")) {
                lessons.setLearnmode("补登积分");
            } else if (learnmode.equals("现场培训")) {
                lessons.setLearnmode("现场培训");
            } else if (learnmode.equals("现场,网上")) {
                lessons.setLearnmode("在线视频");
            }
            lessons.setLessonid(Integer.parseInt(lessonid));
            lessons.setPxdate(dfff.format(pxdate));
            lessons.setPxminutes(pxminutes);
            lessons.setPxreqminutes(reqminutes);
            lessons.setPxxf(pxxf);
            lessons.setTitle(LessonIdNameMap.LessonIdName.get(lessons.getLessonid()));
            lessons.setRemarks("从老系统同步");
            int userid = UserLawerMap.getLawid(lawyerid);
            if (userid == 0)
                uesrid0.println("在系统中的userid=0:::" + lawyerid);
            if ((i++) % 10000 == 0) {
                log.flush();
                log.close();
                log = new java.io.PrintWriter("c:\\xuefen" + i + ".sql");
            }
            String sql = "insert into lawyerlessonxf(userid,learnmode,pxdate,pxxf,lessonid,title,pxreqminutes,pxminutes,lastupdate) values(";
            sql += userid + ",'" + lessons.getLearnmode() + "','" + lessons.getPxdate() + "'," + pxxf + "," + lessonid + ",'" + lessons.getTitle() + "'," + reqminutes + "," + pxminutes + ",'" + dfff.format(pxdate) + "'";
            sql += ");";
            if (userid != 0)
                log.println(sql);
            System.out.println(i);
        }
        log.flush();
        log.close();
        uesrid0.flush();
        uesrid0.close();
    } catch (Exception e) {
        LOG.error("获取SqlServer的同步数据失败:" + e);
    } finally {
        if (rs != null)
            rs.close();
        if (stmt != null)
            stmt.close();
        if (mssqlcon != null)
            mssqlcon.close();
    }
    return list;
}
