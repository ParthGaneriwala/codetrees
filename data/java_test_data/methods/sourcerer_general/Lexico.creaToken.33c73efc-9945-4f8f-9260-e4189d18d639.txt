private Token creaToken(TipoToken type, Object value) {
    ArrayList<Object> atributos = new ArrayList<Object>();
    if (type == TipoToken.SEPARADOR) {
        atributos.add((TipoSeparadores) value);
    } else if (type == TipoToken.ABREPAREN || type == TipoToken.CIERRAPAREN || type == TipoToken.ABRECORCHETE || type == TipoToken.CIERRACORCHETE) {
    // No tiene atributos
    } else if (type == TipoToken.OPERADOR_SUMADOR) {
        atributos.add((TipoOperadoresAditivos) value);
    } else if (type == TipoToken.OPERADOR_COMPARADOR) {
        atributos.add((TipoOperadoresComparadores) value);
    } else if (type == TipoToken.OPERADOR_MULTIPLICADOR) {
        atributos.add((TipoOperadoresMultiplicativos) value);
    } else if (type == TipoToken.IDENTIFICADOR) {
        if (tablaSimbolos.esReservada((String) value)) {
            type = TipoToken.PAL_RES;
        }
        boolean esFunPred = false;
        boolean esProcPred = false;
        try {
            atributos.add(funcionesPredef.valueOf((String) value));
            esFunPred = true;
            type = TipoToken.FUNCPRED;
        } catch (Exception e) {
            esFunPred = false;
        }
        try {
            atributos.add(procPredef.valueOf((String) value));
            esProcPred = true;
            type = TipoToken.PROCPRED;
        } catch (Exception e2) {
            esProcPred = false;
        }
        if (!esProcPred && !esFunPred)
            atributos = tablaSimbolos.insertaIdentificador((String) value);
    } else if (type == TipoToken.PUNTERO) {
        atributos = tablaSimbolos.insertaIdentificador((String) value);
    } else if (type == TipoToken.LITERAL_ENTERO) {
        atributos.add(new Integer((Integer) value));
    } else if (type == TipoToken.LITERAL_REAL) {
        atributos.add(new Double((Double) value));
    } else if (type == TipoToken.LITERAL_CARACTER) {
        atributos.add(new Character((Character) value));
    } else if (type == TipoToken.LITERAL_CADENA) {
        atributos.add(new String((String) value));
    }
    return new Token(type.ordinal(), yyline, yycolumn, atributos);
}
