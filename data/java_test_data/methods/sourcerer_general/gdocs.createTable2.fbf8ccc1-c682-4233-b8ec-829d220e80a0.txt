public void createTable2(String worksheetname) {
    try {
        System.out.println("---------listFeedUrl-------");
        /*
			 * URL listFeedUrl = wentry.getListFeedUrl();
			 * System.out.println(listFeedUrl.toString()); ListFeed feed =
			 * spreadsheetservice.getFeed(listFeedUrl, ListFeed.class); for
			 * (ListEntry entry : feed.getEntries()) {
			 * System.out.println(entry.getTitle().getPlainText()); for (String
			 * tag : entry.getCustomElements().getTags()) {
			 * System.out.println("  <gsx:" + tag + ">" +
			 * entry.getCustomElements().getValue(tag) + "</gsx:" + tag + ">");
			 * } }
			 */
        System.out.println("---------A1-------");
        URL tableFeedUrl = new URL("http://spreadsheets.google.com/feeds/" + sheetEntry.getKey() + "/tables");
        System.out.println("---------print tables-------");
        TableFeed tablefeed = spreadsheetservice.getFeed(tableFeedUrl, TableFeed.class);
        boolean isTable = false;
        TableEntry currTable = null;
        for (TableEntry entry : tablefeed.getEntries()) {
            if (entry.getTitle().getPlainText().equals("notepad")) {
                isTable = true;
                entry.getData().setInsertionMode(Data.InsertionMode.INSERT);
                currTable = entry;
                break;
            }
        }
        if (!isTable) {
            TableEntry tableEntry = new TableEntry();
            tableEntry.setTitle(new PlainTextConstruct("notepad"));
            tableEntry.setWorksheet(new Worksheet(worksheetname));
            tableEntry.setHeader(new Header(1));
            // Specify columns in the table, start row, number of rows.
            Data tableData = new Data();
            tableData.setNumberOfRows(0);
            tableData.setStartIndex(2);
            tableData.setInsertionMode(Data.InsertionMode.INSERT);
            // This table has only one column.
            tableData.addColumn(new Column("A", "ID"));
            tableData.addColumn(new Column("B", "Content"));
            tableData.addColumn(new Column("C", "Type"));
            tableData.addColumn(new Column("D", "Time"));
            tableEntry.setData(tableData);
            currTable = spreadsheetservice.insert(tableFeedUrl, tableEntry);
            log.warning("createTable ok ");
        }
        URL recordsFeedUrl = new URL("http://spreadsheets.google.com/feeds/" + sheetEntry.getKey() + "/records/" + currTable.getId().substring(currTable.getId().lastIndexOf('/') + 1));
        // sheetEntry.getWorksheetFeedUrl()
        // /workEntry.getr
        System.out.println("---------recordsFeedUrl-------" + recordsFeedUrl.toString());
        /*
			 * for (int i=0;i<=100;i++){ 
			 * RecordEntry newEntry = new RecordEntry();
			 * 
			 * newEntry.addField(new Field(null, "ID", i+""));
			 * newEntry.addField(new Field(null, "Content", i+"content"));
			 * newEntry.addField(new Field(null, "Type", i+"type"));
			 * newEntry.addField(new Field(null, "Time", i+"time"));
			 * spreadsheetservice.insert(recordsFeedUrl, newEntry); }
			 */
        RecordFeed feed = spreadsheetservice.getFeed(recordsFeedUrl, RecordFeed.class);
        int ContentIdx = 0, IdIdx = 0, TypeIdx = 0, TimeIdx = 0;
        for (RecordEntry entry : feed.getEntries()) {
            int icounter = 0;
            for (Field field : entry.getFields()) {
                if (field.getName().equals("ID")) {
                    IdIdx = icounter;
                } else if (field.getName().equals("Content")) {
                    ContentIdx = icounter;
                } else if (field.getName().equals("Type")) {
                    TypeIdx = icounter;
                } else if (field.getName().equals("Time")) {
                    TimeIdx = icounter;
                }
                icounter++;
            }
            break;
        }
        for (RecordEntry entry : feed.getEntries()) {
            if (entry.getFields().get(IdIdx).getValue().equals("1")) {
                entry.getFields().get(ContentIdx).setValue("new content");
                entry.getFields().get(TypeIdx).setValue("new type");
                entry.getFields().get(TimeIdx).setValue("new time");
                entry.update();
                break;
            }
        }
    } catch (Exception e) {
        log.info("createTable error " + e.getMessage());
    }
}
