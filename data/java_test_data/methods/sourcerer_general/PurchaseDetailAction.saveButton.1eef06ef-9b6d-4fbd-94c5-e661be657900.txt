public String saveButton() throws Exception {
    System.out.println("PurhcseDetailAction -> saveButton()");
    if (cancel != null) {
        return CANCEL;
    }
    if (delete != null) {
        return delete();
    }
    if (material == null && material.getId() < 1) {
        saveMessage("Material field wasn't selected");
        return "reload";
    }
    if (purchaseDetail.getQuantity() == null) {
        saveMessage(getText("purchaseDetailRequired.quantity"));
        return "reload";
    }
    if (purchaseDetail.getUnitPrice() == null) {
        saveMessage(getText("purchaseDetailRequired.unitPrice"));
        return "reload";
    }
    Enumeration<String> en = getRequest().getParameterNames();
    while (en.hasMoreElements()) {
        en.nextElement();
    }
    boolean isNew = false;
    isNew = (purchaseDetail.getId() == null);
    if (!isNew) {
        // update storageMaterial if material or purchaseDetail quantity had been changeds
        PurchaseDetail purchaseDetailOld = purchaseDetailManager.get(purchaseDetail.getId());
        StorageMaterial storageOld = materialManager.get(purchaseDetailOld.getMaterial().getId()).getStorageMaterial();
        Double quantityOld = purchaseDetailOld.getQuantity();
        storageOld.decrementStok(quantityOld);
        storageOld = storageMaterialManager.save(storageOld);
    }
    material = materialManager.get(material.getId());
    purchaseDetail.setMaterial(material);
    purchase = (Purchase) getSession().getAttribute("purchase");
    purchaseDetail.setPurchase(purchase);
    purchaseDetail.setQuantity(Double.parseDouble(getRequest().getParameter("purchaseDetail.quantity")));
    purchaseDetail.setUnitPrice(Double.parseDouble(getRequest().getParameter("purchaseDetail.unitPrice")));
    purchaseDetail.setDiscountXfail(0.0D);
    purchaseDetail.setCurrentQuantity(purchaseDetail.getQuantity());
    purchaseDetail.setQuantityFail(0.0D);
    purchaseDetail.setDeleted(true);
    purchaseDetail.setTotalPrice(purchaseDetail.getQuantity() * purchaseDetail.getUnitPrice());
    // update purchase
    purchase.setTotalPrice(purchase.getTotalPrice() + purchaseDetail.getTotalPrice());
    purchase.setRestPrice(purchase.getRestPrice() + purchaseDetail.getTotalPrice());
    purchase = purchaseManager.save(purchase);
    purchaseDetail = purchaseDetailManager.save(purchaseDetail);
    // update storageMaterial
    StorageMaterial storageMaterial = material.getStorageMaterial();
    storageMaterial.incrementStok(purchaseDetail.getQuantity());
    storageMaterial = storageMaterialManager.save(storageMaterial);
    // clean
    getSession().setAttribute("purchaseDetail", null);
    getSession().setAttribute("material", null);
    if (isNew) {
        saveMessage(getText("purchaseDetail.added"));
        return SUCCESS;
    } else {
        saveMessage(getText("purchaseDetail.updated"));
        return INPUT;
    }
}
