public static final GeneralClass createSWFServiceNew(Page page, String defaultEntityPackage) {
    String id = page.getId();
    String className = page.getName() + "Service";
    GeneralClass swf = new GeneralClass(className);
    boolean hasDynamicInput = false;
    // form level logic
    for (Form form : page.getForms()) {
        // by default, entity class object matching form fields.
        String entityClass = form.getName();
        swf.getImports().add(defaultEntityPackage + "." + entityClass);
        // method to initialize entity in Spring Web Flow.
        String initMethod = "start" + entityClass + "Flow";
        List<String> initLines = new ArrayList<String>(1);
        initLines.add("return new " + entityClass + "();");
        swf.getMethods().add(new SimpleMethod(entityClass, initMethod, initLines));
        for (Action action : form.getActions()) {
            String methodName = action.getId();
            List<String> lines = new ArrayList<String>(1);
            Field args = new Field(entityClass);
            lines.add("logger.debug(\"Edit " + className + "." + methodName + " to have this action do something useful.\");");
            swf.getMethods().add(new SimpleMethod("void", methodName, lines, args));
        }
        for (SingleUserInput input : form.getInputsByType(InputTypeEnum.RADIO)) {
            swf.getMethods().add(createDynamicInputMethod(page, form, input));
            hasDynamicInput = true;
        }
        for (SingleUserInput input : form.getInputsByType(InputTypeEnum.DROPDOWN)) {
            swf.getMethods().add(createDynamicInputMethod(page, form, input));
            hasDynamicInput = true;
        }
        for (SingleUserInput input : form.getInputsByType(InputTypeEnum.CHECKBOX)) {
            swf.getMethods().add(createDynamicInputMethod(page, form, input));
            hasDynamicInput = true;
        }
    }
    if (page.isEmailUsed()) {
        swf.getImports().add("javax.annotation.Resource");
        swf.getImports().add("java.util.Map");
        swf.getImports().add("java.util.HashMap");
        Field mailService = new Field("@Resource", "SpringEmailService", "mail");
        swf.getFields().add(mailService);
    }
    if (hasDynamicInput) {
        swf.getImports().add("javax.annotation.Resource");
        swf.getImports().add("java.util.List");
        swf.getImports().add("javax.faces.model.SelectItem");
        Field formService = new Field("@Resource", "DynamicFormService", "formService");
        swf.getFields().add(formService);
    }
    return swf;
}
