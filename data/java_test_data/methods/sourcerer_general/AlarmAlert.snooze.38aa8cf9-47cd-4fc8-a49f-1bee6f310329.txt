private void snooze() {
    final String snooze = PreferenceManager.getDefaultSharedPreferences(this).getString(SettingsActivity.KEY_ALARM_SNOOZE, DEFAULT_SNOOZE);
    int snoozeMinutes = Integer.parseInt(snooze);
    final long snoozeTime = System.currentTimeMillis() + (1000 * 60 * snoozeMinutes);
    Alarms.saveSnoozeAlert(AlarmAlert.this, mAlarm.id, snoozeTime);
    // Get the display time for the snooze and update the notification.
    final Calendar c = Calendar.getInstance();
    c.setTimeInMillis(snoozeTime);
    // Append (snoozed) to the label.
    String label = mAlarm.getLabelOrDefault(this);
    label = getString(R.string.alarm_notify_snooze_label, label);
    // Notify the user that the alarm has been snoozed.
    Intent cancelSnooze = new Intent(this, AlarmReceiver.class);
    cancelSnooze.setAction(Alarms.CANCEL_SNOOZE);
    cancelSnooze.putExtra(Alarms.ALARM_ID, mAlarm.id);
    PendingIntent broadcast = PendingIntent.getBroadcast(this, mAlarm.id, cancelSnooze, 0);
    NotificationManager nm = getNotificationManager();
    Notification n = new Notification(R.drawable.stat_notify_alarm, label, 0);
    n.setLatestEventInfo(this, label, getString(R.string.alarm_notify_snooze_text, Alarms.formatTime(this, c)), broadcast);
    n.flags |= Notification.FLAG_AUTO_CANCEL | Notification.FLAG_ONGOING_EVENT;
    nm.notify(mAlarm.id, n);
    String displayTime = getString(R.string.alarm_alert_snooze_set, snoozeMinutes);
    // Intentionally log the snooze time for debugging.
    Log.v(displayTime);
    // Display the snooze minutes in a toast.
    Toast.makeText(AlarmAlert.this, displayTime, Toast.LENGTH_LONG).show();
    stopService(new Intent(Alarms.ALARM_ALERT_ACTION));
    finish();
}
