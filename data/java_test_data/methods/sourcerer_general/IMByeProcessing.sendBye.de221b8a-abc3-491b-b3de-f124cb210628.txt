public void sendBye(String localSipURL, String remoteSipURL, ChatSession chatSession, String byetype) {
    // Send a Bye only if there were exchanged messages!!!
    if (chatSession.isEstablishedSession()) {
        try {
            DebugIM.println();
            DebugIM.println("Sending a BYE in progress to " + remoteSipURL);
            int proxyPort = imUA.getProxyPort();
            String proxyAddress = imUA.getProxyAddress();
            String imProtocol = imUA.getIMProtocol();
            SipStack sipStack = imUA.getSipStack();
            SipProvider sipProvider = imUA.getSipProvider();
            MessageFactory messageFactory = imUA.getMessageFactory();
            HeaderFactory headerFactory = imUA.getHeaderFactory();
            AddressFactory addressFactory = imUA.getAddressFactory();
            // Request-URI:
            SipURI requestURI = addressFactory.createSipURI(null, chatSession.getToIMaddress());
            requestURI.setPort(Integer.valueOf(chatSession.getToIMport()));
            requestURI.setTransportParam(imProtocol);
            javax.sip.Dialog dialog = chatSession.getDialog();
            // Call-ID:
            CallIdHeader callIdHeader = dialog.getCallId();
            // CSeq:
            cseq++;
            CSeqHeader cseqHeader = headerFactory.createCSeqHeader(cseq, Request.BYE);
            // To header:
            String schemeData = "NOT SET";
            // =IMUserAgent.getBuddyParsedMinusSIP("");
            Address toAddress = addressFactory.createAddress(remoteSipURL);
            ToHeader toHeader = headerFactory.createToHeader(toAddress, null);
            // From Header:
            Address fromAddress = addressFactory.createAddress(localSipURL);
            FromHeader fromHeader = headerFactory.createFromHeader(fromAddress, null);
            // Via header
            String branchId = Utils.generateBranchId();
            ViaHeader viaHeader = headerFactory.createViaHeader(imUA.getIMAddress(), imUA.getIMPort(), imProtocol, branchId);
            Vector viaList = new Vector();
            viaList.addElement(viaHeader);
            // MaxForwards header:
            MaxForwardsHeader maxForwardsHeader = headerFactory.createMaxForwardsHeader(10);
            // Request request = messageFactory.createRequest(requestURI,
            // Request.BYE, callIdHeader, cseqHeader, fromHeader, toHeader,
            // viaList, maxForwardsHeader);
            Request request = dialog.createRequest(Request.BYE);
            // Contact header:
            SipURI sipURI = addressFactory.createSipURI(null, imUA.getIMAddress());
            sipURI.setPort(imUA.getIMPort());
            sipURI.setTransportParam(imUA.getIMProtocol());
            Address contactAddress = addressFactory.createAddress(sipURI);
            ContactHeader contactHeader = headerFactory.createContactHeader(contactAddress);
            request.setHeader(contactHeader);
            /**
             * ���bye��������ݣ������ǻỰ����������������
             */
            ContentTypeHeader contentTypeHeader = headerFactory.createContentTypeHeader("text", "plain");
            contentTypeHeader.setParameter("charset", "gb2312");
            request.setContent(byetype, contentTypeHeader);
            // ProxyAuthorization header if not null:
            ProxyAuthorizationHeader proxyAuthHeader = imUA.getProxyAuthorizationHeader();
            if (proxyAuthHeader != null)
                request.setHeader(proxyAuthHeader);
            ClientTransaction clientTransaction = sipProvider.getNewClientTransaction(request);
            dialog.sendRequest(clientTransaction);
            DebugIM.println("BYE sent:\n" + request);
            DebugIM.println();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    } else {
        DebugIM.println("BYE not sent because of no exchanged messages!!!");
    }
}
