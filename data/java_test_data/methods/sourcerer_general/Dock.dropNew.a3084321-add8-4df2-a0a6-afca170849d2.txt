public void dropNew(JComponent s, JComponent d, int x, int y) {
    DockNode src, dst, dparent, gparent;
    int region, index;
    boolean c1, c2, c3, c4;
    src = new DockNode(this, s);
    dst = this.findComponent(d);
    /*
         * Drop point could be at a splitter in which case the dst node would be
         * null. Bail.
         */
    if (dst == null)
        return;
    dparent = dst.getParent();
    if (dst != null && dparent != null) {
        region = dst.getPointRegion(x - dst.x, y - dst.y);
        if (dparent.orientation == Dock.DOCK_H) {
            if (region == DockNode.DOCKNODE_RIGHT) {
                this.insert(src, dst, 0, 1, true);
            } else if (region == DockNode.DOCKNODE_LEFT) {
                this.insert(src, dst, 0, 0, true);
            } else if (region == DockNode.DOCKNODE_TOP) {
                index = dparent.children.indexOf(dst);
                this.insert(src, dparent, index, 0, true);
            } else if (region == DockNode.DOCKNODE_BOTTOM) {
                index = dparent.children.indexOf(dst);
                this.insert(src, dparent, index, 1, true);
            }
        } else if (dparent.orientation == Dock.DOCK_V) {
            if (region == DockNode.DOCKNODE_TOP) {
                this.insert(src, dst, 0, 0, true);
            } else if (region == DockNode.DOCKNODE_BOTTOM) {
                this.insert(src, dst, 0, 1, true);
            } else if (region == DockNode.DOCKNODE_LEFT) {
                index = dparent.children.indexOf(dst);
                this.insert(src, dparent, index, 0, true);
            } else if (region == DockNode.DOCKNODE_RIGHT) {
                index = dparent.children.indexOf(dst);
                this.insert(src, dparent, index, 1, true);
            }
        }
    }
    this.preview.paint = false;
    this.sync();
    this.repaint();
}
