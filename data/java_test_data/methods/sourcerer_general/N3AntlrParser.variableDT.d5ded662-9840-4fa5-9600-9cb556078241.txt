public final void variableDT() throws RecognitionException, TokenStreamException {
    returnAST = null;
    ASTPair currentAST = new ASTPair();
    AST variableDT_AST = null;
    Token v = null;
    AST v_AST = null;
    AST dt_AST = null;
    v = LT(1);
    v_AST = astFactory.create(v);
    astFactory.addASTChild(currentAST, v_AST);
    match(UVAR);
    {
        switch(LA(1)) {
            case DATATYPE:
                {
                    AST tmp25_AST = null;
                    tmp25_AST = astFactory.create(LT(1));
                    astFactory.addASTChild(currentAST, tmp25_AST);
                    match(DATATYPE);
                    datatype();
                    dt_AST = (AST) returnAST;
                    astFactory.addASTChild(currentAST, returnAST);
                    break;
                }
            case EOF:
            case QNAME:
            case SEP:
            case NAME_OP:
            case KW_THIS:
            case KW_OF:
            case KW_HAS:
            case KW_A:
            case KW_IS:
            case STRING:
            case SEMI:
            case COMMA:
            case PATH:
            case RPATH:
            case EQUAL:
            case ARROW_R:
            case ARROW_L:
            case ARROW_PATH_L:
            case ARROW_PATH_R:
            case LBRACK:
            case RBRACK:
            case LCURLY:
            case RCURLY:
            case LPAREN:
            case RPAREN:
            case NUMBER:
            case URIREF:
            case UVAR:
                {
                    break;
                }
            default:
                {
                    throw new NoViableAltException(LT(1), getFilename());
                }
        }
    }
    if (inputState.guessing == 0) {
        variableDT_AST = (AST) currentAST.root;
        variableDT_AST = (AST) astFactory.make((new ASTArray(2)).add(astFactory.create(UVAR, v.getText())).add(dt_AST));
        currentAST.root = variableDT_AST;
        currentAST.child = variableDT_AST != null && variableDT_AST.getFirstChild() != null ? variableDT_AST.getFirstChild() : variableDT_AST;
        currentAST.advanceChildToEnd();
    }
    variableDT_AST = (AST) currentAST.root;
    returnAST = variableDT_AST;
}
