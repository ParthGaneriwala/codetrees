protected void initCellEditor() {
    List control = getCellEditor().getControl();
    control.addMouseListener(new MouseListener() {

        public void mouseDoubleClick(MouseEvent e) {
            setDirty(true);
            commit();
            LeafFigureNavigator.navigateTo((GraphicalEditPart) getEditPart());
        }

        public void mouseDown(MouseEvent e) {
        }

        public void mouseUp(MouseEvent e) {
        }
    });
    control.addKeyListener(new KeyListener() {

        public void keyPressed(KeyEvent e) {
        }

        public void keyReleased(KeyEvent e) {
            if (// return key
            e.keyCode == 13) {
                setDirty(true);
                commit();
                LeafFigureNavigator.navigateTo((GraphicalEditPart) getEditPart());
            }
        }
    });
    getCellEditor().addListener(new ICellEditorListener() {

        public void applyEditorValue() {
        }

        public void cancelEditor() {
            LeafFigureNavigator.navigateTo((GraphicalEditPart) getEditPart());
        }

        public void editorValueChanged(boolean oldValidState, boolean newValidState) {
        }
    });
    try {
        originalValue = this.label.getText();
        getCellEditor().setValue(0);
        /*
			 * Give the editor it's list items
			 */
        getCellEditor().setItems(items);
        // calculate the font size of the underlying
        IFigure figure = ((GraphicalEditPart) getEditPart()).getFigure();
        figureFont = figure.getFont();
        FontData data = figureFont.getFontData()[0];
        Dimension fontSize = new Dimension(0, data.getHeight());
        // set the font to be used
        this.label.translateToAbsolute(fontSize);
        data.setHeight(fontSize.height);
        figureFont = new Font(null, data);
        // set the validator for the CellEditor
        getCellEditor().setValidator(validator);
        control.setFont(figureFont);
        control.setSelection(0);
        control.setFocus();
        LeafFigureNavigator.deselect((GraphicalEditPart) getEditPart());
    } catch (Exception e) {
        e.printStackTrace();
    }
}
