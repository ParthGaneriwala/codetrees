// Calculate new Scrollbar values, maximums, and sizes, and adjust the
// offset of the OffsetCanvas if necessary.
private void configure() {
    double hmax, vmax, pageh, pagew;
    Dimension tmpD = offsetCanvas_.size();
    win_size = new Dimension(tmpD.width, tmpD.height);
    img_size = offsetCanvas_.contentsSize();
    // offsetCanvas_ controls the new offset as well as the size, so it
    // can remain stationary in an OffsetCanvas-dependent way.
    DPoint tmpdim = offsetCanvas_.getOffset();
    xoffset_ = tmpdim.x;
    yoffset_ = tmpdim.y;
    // Scrolls can move an amount of image size - window size (so the whole
    // image
    // can be seen by scrolling). If window is larger than image, no
    // scrolling
    // is allowed.
    hmax = Math.max(img_size.width - win_size.width, 0.0);
    vmax = Math.max(img_size.height - win_size.height, 0.0);
    // Scroll positions remain the same unless they are now out of range.
    if (xoffset_ > (double) hmax)
        xoffset_ = (double) hmax;
    if (yoffset_ > (double) vmax)
        yoffset_ = (double) vmax;
    // Meaning of these values is different on SPARC and PC. Only way to
    // make them close
    // to the same is to make visible equal to one.
    // On a SPARC, maximum is the maximum value of a Scrollbar.
    // On a PC, maximum - slider size is the maximum value.
    // With this setup, we can scroll one extra pixel on a SPARC (but
    // feedback from
    // offsetCanvas_.setOffsets() can correct this), and the right amount on
    // a PC.
    // hscroll_.setValues(xoffset_, Math.min(win_size.width,
    // img_size.width), 0, hmax);
    // vscroll_.setValues(yoffset_, Math.min(win_size.height,
    // img_size.height), 0, vmax);
    hscroll_.setValues((int) xoffset_, 1, 0, (int) hmax + 1);
    vscroll_.setValues((int) yoffset_, 1, 0, (int) vmax + 1);
    // page increment is pageFraction_ of screen size but at least one
    pageh = Math.max((win_size.width * pageFraction_), 1.0);
    pagew = Math.max((win_size.height * pageFraction_), 1.0);
    hscroll_.setUnitIncrement((int) pageh);
    vscroll_.setUnitIncrement((int) pagew);
    // image, in which case the image is centered in the window.
    if (win_size.width > img_size.width || win_size.height > img_size.height) {
        if (win_size.width > img_size.width)
            xoffset_ = -(win_size.width - img_size.width + 1.0) / 2.0;
        if (win_size.height > img_size.height)
            yoffset_ = -(win_size.height - img_size.height + 1.0) / 2.0;
    }
    // For some reason, a redraw here will cause an infinite loop. the size
    // of
    // offsetCanvas_ must be unstable during a resize.
    offsetCanvas_.setOffsets(xoffset_, yoffset_, false);
}
