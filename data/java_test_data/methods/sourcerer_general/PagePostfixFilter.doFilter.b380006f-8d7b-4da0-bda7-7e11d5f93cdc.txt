@Override
public void doFilter(final ServletRequest request, final ServletResponse response, final FilterChain chain) throws IOException, ServletException {
    final HttpServletRequest httpServletRequest = (HttpServletRequest) request;
    final HttpServletResponse httpServletResponse = (HttpServletResponse) response;
    final String requestURI = httpServletRequest.getRequestURI();
    final String requestLocalName = httpServletRequest.getLocalName();
    LOGGER.trace("Request[URI=" + requestURI + ", localName=" + requestLocalName + "]");
    final Set<String> postfixExceptionPaths = AbstractServletListener.getPostfixExceptionPaths();
    if (postfixExceptionPaths.contains(requestURI)) {
        LOGGER.trace("Excepts request[URI=" + requestURI + "] from " + getClass().getSimpleName());
        chain.doFilter(request, response);
        return;
    }
    final String welcomePage = AbstractServletListener.getWelcomePage();
    Exception problem = null;
    final String uri = requestURI.toLowerCase();
    final boolean isDo = uri.endsWith(".do");
    final boolean isCSS = uri.endsWith(".css");
    final boolean isJPG = uri.endsWith(".jpg");
    final boolean isGIF = uri.endsWith(".gif");
    final boolean isPNG = uri.endsWith(".png");
    final boolean isJS = uri.endsWith(".js");
    final int idx = uri.lastIndexOf(".");
    String postfix = null;
    if (idx != -1) {
        postfix = requestURI.substring(idx, requestURI.length());
    } else {
        httpServletResponse.sendRedirect(welcomePage);
        return;
    }
    if (!isDo && !isCSS && !isJPG && !isGIF && !isPNG && !isJS) {
        problem = new Exception("The resource[postfix=" + postfix + "] you requested is " + "illegal.");
        // sendProcessingError(problem, response);
        LOGGER.trace(problem.getMessage());
        httpServletResponse.sendRedirect(welcomePage);
        return;
    }
    // TODO: error-page in web.xml [404] has no effect
    chain.doFilter(request, response);
}
