private ArrayList<SchedulerCourse> createSemester(int maxCredits) {
    int creditC = 0;
    ArrayList<SchedulerCourse> newSemester = new ArrayList<SchedulerCourse>();
    SchedulerCourse myCourseReq = null;
    SchedulerCourse myCourseGfr;
    ArrayList<SchedulerCourse> gfrAddBackToQueue = new ArrayList<SchedulerCourse>();
    ArrayList<SchedulerCourse> requiredAddBackToQueue = new ArrayList<SchedulerCourse>();
    ArrayList<SchedulerCourse> coursesCurrentlyAdded = new ArrayList<SchedulerCourse>();
    boolean addReqB = false;
    boolean addGfrB = false;
    while (creditC < maxCredits && !(required.isEmpty() && gfrs.isEmpty())) {
        addReqB = true;
        addGfrB = true;
        if (!required.isEmpty())
            myCourseReq = required.remove();
        else
            myCourseReq = null;
        if (meetsPrereq(myCourseReq) && (creditC + myCourseReq.credit) <= maxCredits) {
            addReqB = false;
            newSemester.add(myCourseReq);
            coursesCurrentlyAdded.add(myCourseReq);
            creditC = creditC + myCourseReq.credit;
        }
        if (!gfrs.isEmpty())
            myCourseGfr = gfrs.remove();
        else
            myCourseGfr = null;
        if (meetsPrereq(myCourseGfr) && (creditC + myCourseGfr.credit) <= maxCredits) {
            addGfrB = false;
            newSemester.add(myCourseGfr);
            coursesCurrentlyAdded.add(myCourseGfr);
            creditC = creditC + myCourseGfr.credit;
        }
        if (addReqB && myCourseReq != null)
            requiredAddBackToQueue.add(myCourseReq);
        if (addGfrB && myCourseGfr != null)
            gfrAddBackToQueue.add(myCourseGfr);
    }
    // add all required courses back to the queue
    for (int x = 0; x < requiredAddBackToQueue.size(); x++) required.add(requiredAddBackToQueue.get(x));
    // add all the gfr courses back to the queue
    for (int x = 0; x < gfrAddBackToQueue.size(); x++) gfrs.add(gfrAddBackToQueue.get(x));
    // add all the courses currently enrolled in to courses added to the schedule
    for (int x = 0; x < coursesCurrentlyAdded.size(); x++) coursesAddedtoSchedule.add(coursesCurrentlyAdded.get(x));
    return newSemester;
}
