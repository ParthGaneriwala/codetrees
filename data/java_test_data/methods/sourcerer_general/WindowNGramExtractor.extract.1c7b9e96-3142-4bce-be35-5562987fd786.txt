public Feature extract(JCas jCas, Annotation focusAnnotation, Annotation ngramAnnotation) throws CleartkExtractorException {
    if (this.featureType == null)
        this.featureType = UIMAUtil.getCasType(jCas, this.featureClass);
    List<String> ngramValues = new ArrayList<String>();
    Annotation startAnnotation = getStartAnnotation(jCas, focusAnnotation);
    FSIterator<Annotation> featureAnnotationIterator = jCas.getAnnotationIndex(featureType).iterator();
    if (startAnnotation != null) {
        featureAnnotationIterator.moveTo(startAnnotation);
    }
    int outOfBoundsDistance = 0;
    List<Feature> windowedFeatures = new ArrayList<Feature>();
    for (int i = 0; i < end; i++) {
        // here.
        if (outOfBoundsDistance == 0 && startAnnotation != null && featureAnnotationIterator.isValid()) {
            Annotation featureAnnotation = featureAnnotationIterator.get();
            if (isWithinBoundaries(featureAnnotation, focusAnnotation, ngramAnnotation)) {
                if (i >= start) {
                    Feature ngrammedFeature = extactNGrammedFeature(jCas, i, featureAnnotation);
                    if (ngrammedFeature != null) {
                        ngramValues.add(ngrammedFeature.getValue().toString());
                        windowedFeatures.add(ngrammedFeature);
                    } else
                        ngramValues.add("NULL");
                }
                moveIterator(featureAnnotationIterator);
                continue;
            }
        }
        outOfBoundsDistance++;
        if (i >= start) {
            ngramValues.add("OOB" + outOfBoundsDistance);
        }
    }
    StringBuffer featureValue = new StringBuffer();
    if ((direction.equals(WindowNGramFeature.DIRECTION_LEFT_TO_RIGHT) && orientation.equals(WindowNGramFeature.ORIENTATION_RIGHT)) || (direction.equals(WindowNGramFeature.DIRECTION_RIGHT_TO_LEFT) && orientation.equals(WindowNGramFeature.ORIENTATION_LEFT))) {
        for (int i = 0; i < ngramValues.size(); i++) {
            featureValue.append(ngramValues.get(i));
            if (i < ngramValues.size() - 1)
                featureValue.append(separator);
        }
    } else if ((direction.equals(WindowNGramFeature.DIRECTION_RIGHT_TO_LEFT) && orientation.equals(WindowNGramFeature.ORIENTATION_RIGHT)) || (direction.equals(WindowNGramFeature.DIRECTION_LEFT_TO_RIGHT) && orientation.equals(WindowNGramFeature.ORIENTATION_LEFT))) {
        for (int i = ngramValues.size() - 1; i >= 0; i--) {
            featureValue.append(ngramValues.get(i));
            if (i > 0)
                featureValue.append(separator);
        }
    }
    WindowNGramFeature windowNGramFeature = new WindowNGramFeature(null, featureValue.toString(), orientation, direction, separator, end - start, start, windowedFeatures);
    return windowNGramFeature;
}
