@Test
public void test1() throws Exception {
    AnalysisEngine engine = AnalysisEngineFactory.createPrimitive(LineWriter.class, typeSystemDescription, LineWriter.PARAM_OUTPUT_DIRECTORY_NAME, this.outputDirectory.getPath(), LineWriter.PARAM_OUTPUT_ANNOTATION_CLASS_NAME, Token.class.getName(), LineWriter.PARAM_BLOCK_ANNOTATION_CLASS_NAME, Sentence.class.getName(), LineWriter.PARAM_ANNOTATION_WRITER_CLASS_NAME, CoveredTextAnnotationWriter.class.getName(), LineWriter.PARAM_FILE_SUFFIX, ".txt");
    String text = "What if we built a rocket ship made of cheese?" + newline + "We could fly it to the moon for repairs.";
    tokenBuilder.buildTokens(jCas, text, "What if we built a rocket ship made of cheese ?\nWe could fly it to the moon for repairs .", "A B C D E F G H I J K L M N O P Q R S T U");
    ViewURIUtil.setURI(jCas, new File("1234").toURI());
    engine.process(jCas);
    engine.collectionProcessComplete();
    String expectedText = newline + "What" + newline + "if" + newline + "we" + newline + "built" + newline + "a" + newline + "rocket" + newline + "ship" + newline + "made" + newline + "of" + newline + "cheese" + newline + "?" + newline + "" + newline + "We" + newline + "could" + newline + "fly" + newline + "it" + newline + "to" + newline + "the" + newline + "moon" + newline + "for" + newline + "repairs" + newline + "." + newline;
    File outputFile = new File(this.outputDirectory, "1234.txt");
    assertTrue(outputFile.exists());
    String actualText = FileUtils.file2String(outputFile);
    Assert.assertEquals(expectedText, actualText);
    jCas.reset();
    tokenBuilder.buildTokens(jCas, text, "What if we \n built a rocket \n ship made of cheese ?\nWe could fly it \nto the moon for repairs .", "A B C D E F G H I J K L M N O P Q R S T U");
    ViewURIUtil.setURI(jCas, new File("1234").toURI());
    engine.process(jCas);
    engine.collectionProcessComplete();
    expectedText = newline + "What" + newline + "if" + newline + "we" + newline + "" + newline + "built" + newline + "a" + newline + "rocket" + newline + "" + newline + "ship" + newline + "made" + newline + "of" + newline + "cheese" + newline + "?" + newline + "" + newline + "We" + newline + "could" + newline + "fly" + newline + "it" + newline + "" + newline + "to" + newline + "the" + newline + "moon" + newline + "for" + newline + "repairs" + newline + "." + newline;
    outputFile = new File(this.outputDirectory, "1234.txt");
    assertTrue(outputFile.exists());
    actualText = FileUtils.file2String(outputFile);
    Assert.assertEquals(expectedText, actualText);
}
