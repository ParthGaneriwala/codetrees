public String executeCommandUpdate(ActionContext context) {
    Connection db = null;
    try {
        db = this.getConnection(context);
        LanguageDictionaryList dictionaryList = new LanguageDictionaryList();
        Enumeration e = context.getRequest().getParameterNames();
        boolean valid = true;
        while (e.hasMoreElements()) {
            String param = (String) e.nextElement();
            if (param.startsWith("paramId")) {
                String id = context.getRequest().getParameter(param);
                String value = context.getRequest().getParameter("paramValue" + id);
                // System.out.println("ID: " + id + ", VALUE: " + value);
                String approved = context.getRequest().getParameter("approved" + id);
                LanguageDictionary dictionaryItem = new LanguageDictionary();
                dictionaryItem.setBuildDefaultValue(true);
                dictionaryItem.queryRecord(db, Integer.parseInt(id));
                dictionaryItem.setParamValue1(value);
                if ("Approve".equals(context.getRequest().getParameter("source"))) {
                    dictionaryItem.setApproved(approved);
                }
                // dictionaryList.put(dictionaryItem.getParamName(), dictionaryItem);
                dictionaryList.add(dictionaryItem);
                if (!dictionaryItem.isValid()) {
                    valid = false;
                }
            }
        }
        if (!valid) {
            context.getRequest().setAttribute("languageDictionaryList", dictionaryList);
            return (executeCommandTranslate(context));
        } else {
            String languageId = context.getRequest().getParameter("languageId");
            dictionaryList.setLanguagePackId(languageId);
            dictionaryList.setModifiedBy(getUserId(context));
            dictionaryList.update(db);
        }
    } catch (Exception e) {
        e.printStackTrace(System.out);
        context.getRequest().setAttribute("Error", e);
        return "SystemError";
    } finally {
        this.freeConnection(context, db);
    }
    return (executeCommandTranslate(context));
}
