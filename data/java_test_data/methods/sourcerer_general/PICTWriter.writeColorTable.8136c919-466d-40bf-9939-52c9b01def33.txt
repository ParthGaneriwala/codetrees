void writeColorTable(ColorModel cm) throws IOException {
    int i;
    if (cm instanceof IndexColorModel) {
        IndexColorModel icm = (IndexColorModel) cm;
        int numColors = icm.getMapSize();
        // color table ID 0
        out_.writeInt(0);
        // color table flags 0
        out_.writeShort(0);
        // # of entires
        out_.writeShort((short) numColors - 1);
        byte[] red = new byte[numColors];
        byte[] green = new byte[numColors];
        byte[] blue = new byte[numColors];
        icm.getReds(red);
        icm.getGreens(green);
        icm.getBlues(blue);
        for (i = 0; i < numColors; ++i) {
            // color index
            out_.writeShort(i);
            out_.writeShort((short) (((red[i] & 0xFF) << 8) | (red[i] & 0xFF)));
            out_.writeShort((short) (((green[i] & 0xFF) << 8) | (green[i] & 0xFF)));
            out_.writeShort((short) (((blue[i] & 0xFF) << 8) | (blue[i] & 0xFF)));
        }
    } else // DirectColorModel
    {
        int pixelSize = cm.getPixelSize();
        int numColors = 1 << pixelSize;
        int red;
        int green;
        int blue;
        // color table ID 0
        out_.writeInt(0);
        // color table flags 0
        out_.writeShort(0);
        // # of entires
        out_.writeShort((short) numColors - 1);
        for (i = 0; i < numColors; ++i) {
            out_.writeShort(i);
            red = cm.getRed(i);
            green = cm.getGreen(i);
            blue = cm.getBlue(i);
            out_.writeShort((short) ((red << 8) | red));
            out_.writeShort((short) ((green << 8) | green));
            out_.writeShort((short) ((blue << 8) | blue));
        }
    }
}
