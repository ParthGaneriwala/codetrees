public String delete() {
    Recipes rec = (Recipes) Contexts.getSession().getAttribute("recipe");
    Users user = (Users) Contexts.getSession().getAttribute("user");
    if (!user.getRole().equals("admin"))
        return "loginFailure";
    Session session = HibernateUtil.getSession();
    Transaction transaction = session.beginTransaction();
    Query query = session.createQuery("delete from Favorites where recipe.id = :recipe");
    query.setParameter("recipe", rec.getRecipeId());
    query.executeUpdate();
    query = session.createQuery("delete from Comments where recipe.id = :recipe");
    query.setParameter("recipe", rec.getRecipeId());
    query.executeUpdate();
    query = session.createQuery("delete from RecentlyViewed where recipe.id = :recipe");
    query.setParameter("recipe", rec.getRecipeId());
    query.executeUpdate();
    query = session.createQuery("delete from RecipeCategories where recipe.id = :recipe");
    query.setParameter("recipe", rec.getRecipeId());
    query.executeUpdate();
    query = session.createQuery("delete from RecipeIngredients where recipe.id = :recipe");
    query.setParameter("recipe", rec.getRecipeId());
    query.executeUpdate();
    query = session.createQuery("delete from RecipeInstructions where recipe.id = :recipe");
    query.setParameter("recipe", rec.getRecipeId());
    query.executeUpdate();
    query = session.createQuery("delete from Recipes where id = :recipe");
    query.setParameter("recipe", rec.getRecipeId());
    query.executeUpdate();
    transaction.commit();
    session.flush();
    session.close();
    Contexts.getSession().removeAttribute("recipe");
    return "logout";
}
