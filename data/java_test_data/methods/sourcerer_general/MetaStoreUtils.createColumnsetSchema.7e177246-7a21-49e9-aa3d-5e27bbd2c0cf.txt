public static Table createColumnsetSchema(String name, List<String> columns, List<String> partCols, Configuration conf) throws MetaException {
    if (columns == null) {
        throw new MetaException("columns not specified for table " + name);
    }
    Table tTable = new Table();
    tTable.setTableName(name);
    tTable.setSd(new StorageDescriptor());
    StorageDescriptor sd = tTable.getSd();
    sd.setSerdeInfo(new SerDeInfo());
    SerDeInfo serdeInfo = sd.getSerdeInfo();
    serdeInfo.setSerializationLib(MetadataTypedColumnsetSerDe.class.getName());
    serdeInfo.setParameters(new HashMap<String, String>());
    serdeInfo.getParameters().put(org.apache.org.fit.hiai.hadoop.hive.serde.Constants.SERIALIZATION_FORMAT, "1");
    List<FieldSchema> fields = new ArrayList<FieldSchema>();
    sd.setCols(fields);
    for (String col : columns) {
        FieldSchema field = new FieldSchema(col, org.apache.org.fit.hiai.hadoop.hive.serde.Constants.STRING_TYPE_NAME, "'default'");
        fields.add(field);
    }
    tTable.setPartitionKeys(new ArrayList<FieldSchema>());
    for (String partCol : partCols) {
        FieldSchema part = new FieldSchema();
        part.setName(partCol);
        // default partition key
        part.setType(org.apache.org.fit.hiai.hadoop.hive.serde.Constants.STRING_TYPE_NAME);
        tTable.getPartitionKeys().add(part);
    }
    // not sure why these are needed
    serdeInfo.setSerializationLib(MetadataTypedColumnsetSerDe.shortName());
    sd.setNumBuckets(-1);
    return tTable;
}
