private static int getSize(Object[] data, int l, int[] type) {
    int s = 0;
    for (int i = 0; i < l; i++) {
        Object o = data[i];
        // type or null
        s += 1;
        if (o != null) {
            switch(type[i]) {
                case Types.NULL:
                case Types.CHAR:
                case Types.VARCHAR:
                case Types.VARCHAR_IGNORECASE:
                case Types.LONGVARCHAR:
                    s += 4;
                    s += StringConverter.getUTFSize((String) o);
                    break;
                case Types.TINYINT:
                case Types.SMALLINT:
                    s += 2;
                    break;
                case Types.INTEGER:
                    s += 4;
                    break;
                case Types.BIGINT:
                case Types.REAL:
                case Types.FLOAT:
                case Types.DOUBLE:
                    s += 8;
                    break;
                case Types.NUMERIC:
                case Types.DECIMAL:
                    s += 8;
                    BigDecimal bigdecimal = (BigDecimal) o;
                    BigInteger bigint = JavaSystem.getUnscaledValue(bigdecimal);
                    s += bigint.toByteArray().length;
                    break;
                case Types.BOOLEAN:
                    s += 1;
                    break;
                case Types.DATE:
                case Types.TIME:
                    s += 8;
                    break;
                case Types.TIMESTAMP:
                    s += 12;
                    break;
                case Types.BINARY:
                case Types.VARBINARY:
                case Types.LONGVARBINARY:
                    s += 4;
                    s += ((Binary) o).getBytesLength();
                    break;
                case Types.OTHER:
                    JavaObject jo = (JavaObject) o;
                    s += 4;
                    s += jo.getBytesLength();
                    break;
                default:
                    Trace.printSystemOut(Trace.FUNCTION_NOT_SUPPORTED + " " + Types.getTypeString(type[i]));
            }
        }
    }
    return s;
}
