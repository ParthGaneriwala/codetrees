private String pagination(String baseUrl, int count) {
    HttpServletRequest request = (HttpServletRequest) this.pageContext.getRequest();
    Pagination pagination = WikiUtil.buildPagination(request);
    String offset = request.getParameter("offset");
    StringBuffer requestPath = new StringBuffer(request.getContextPath() + "/en/" + baseUrl);
    if (baseUrl.indexOf('?', 1) != -1)
        requestPath.append("&");
    else
        requestPath.append("?");
    requestPath.append("num=" + WikiUtil.percount);
    int allCount = 1;
    if (null != offset && !"null".equalsIgnoreCase(offset) && !"".equals(offset)) {
        allCount = Integer.parseInt(offset) / WikiUtil.percount + 1;
    }
    int lastPageBegin = 0;
    if (count > WikiUtil.percount)
        if (count % WikiUtil.percount == 0)
            lastPageBegin = count - WikiUtil.percount;
        else
            lastPageBegin = count - count % WikiUtil.percount;
    StringBuffer output = new StringBuffer();
    output.append("����<font color=red>").append(count).append("</font>��&#160;&#160;").append("&#160;��&#160;").append("<strong>").append(allCount).append("</strong>").append("&#160;ҳ&#160;").append("&#160;<a href='");
    output.append(requestPath + "&offset=0'>").append("��ҳ</a>&#160;&#160;");
    output.append(this.nextPage(pagination, baseUrl, count, true));
    output.append("&#160;&#160;|&#160;&#160;");
    output.append(this.nextPage(pagination, baseUrl, count, false));
    output.append("&#160;&#160;&#160;&#160;");
    output.append("<a href='" + requestPath);
    output.append("&offset=" + lastPageBegin + "'>");
    output.append("βҳ");
    output.append("</a>&#160;&#160;&#160;&#160;ת��&#160;&#160;");
    output.append(this.numResults(pagination, count, requestPath.toString()));
    return output.toString();
}
