public ActionForward Send(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String username = (String) request.getSession().getAttribute("username");
    if (username != null) {
        DynaValidatorForm recipeContestForm = (DynaValidatorForm) form;
        String contestId = recipeContestForm.getString("contestID");
        String title = recipeContestForm.getString("title");
        String ingredient = recipeContestForm.getString("ingredient");
        String cookingProcedure = recipeContestForm.getString("cookingProcedure");
        boolean free = (Boolean) recipeContestForm.get("free");
        String categoryID = recipeContestForm.getString("categoryID");
        String imageUrl = recipeContestForm.getString("imageUrl");
        // user profile object
        UserProfileDTO user = new UserProfileDTO();
        user.setUsername(username);
        // contest object
        ContestDTO contestDTO = new ContestDTO();
        contestDTO.setContestID(contestId);
        // Post object
        PostDTO postDTO = new PostDTO();
        postDTO.setPostID(Util.generateUUID());
        postDTO.setPostTitle(title);
        postDTO.setFree(free);
        postDTO.setPostType("Recipe");
        postDTO.setUploadDate(Util.getDateTimeNow());
        postDTO.setUserProfile(user);
        // Contest Post object
        ContestPostDTO contestPost = new ContestPostDTO();
        contestPost.setContestPostID(Util.generateUUID());
        contestPost.setContest(contestDTO);
        contestPost.setPost(postDTO);
        contestPost.setReviewed(true);
        // Category
        CategoryRecipeDTO category = new CategoryRecipeDTO();
        category.setCategoryID(categoryID);
        // recipe object
        RecipeDTO recipeDTO = new RecipeDTO();
        recipeDTO.setRecipeID(Util.generateUUID());
        recipeDTO.setPost(postDTO);
        recipeDTO.setIngredient(ingredient);
        recipeDTO.setCookingProcedure(cookingProcedure);
        recipeDTO.setImagePath("recipeimages/" + imageUrl);
        recipeDTO.setCategory(category);
        // execute
        RecipeDAO recipeDAO = new RecipeDAO();
        if (recipeDAO.createRecipeInContest(postDTO, contestPost, recipeDTO)) {
            request.setAttribute("message", "Sended Recipe In contest Successfuly");
            return mapping.findForward(SUCCESS);
        } else {
            request.setAttribute("message", "Sended Recipe In contest error!");
            return mapping.findForward(ERROR);
        }
    } else {
        request.setAttribute("message", "Please Login!");
        return mapping.findForward(LOGIN);
    }
}
