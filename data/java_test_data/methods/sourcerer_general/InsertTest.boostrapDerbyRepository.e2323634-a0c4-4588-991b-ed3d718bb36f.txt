private void boostrapDerbyRepository() throws IOException, InterruptedException {
    String derbDatabaseLocation = ToolBox.getProperty(DerbyRepository.DATABASE_LOCATION_PROPERTY, DerbyRepository.DEFAULT_DATABASE_LOCATION);
    File dir = new File(derbDatabaseLocation);
    if (dir.exists()) {
        Assert.assertTrue("Unable to delete derby database location " + derbDatabaseLocation, deleteDirectory(dir));
    }
    String javaClass = "org.apache.derby.tools.ij";
    String derbyDatabaseConnection = "-Dij.database=jdbc:derby:" + derbDatabaseLocation;
    String databaseDir = "db" + File.separator;
    String classPath = System.getProperty("java.class.path");
    String[] commands = new String[] { "java", "-cp", classPath, derbyDatabaseConnection + ";create=true", javaClass, databaseDir + "schema.sql" };
    Process process = Runtime.getRuntime().exec(commands);
    StreamSniffer stdOutSniffer = new StreamSniffer(process.getInputStream());
    stdOutSniffer.sniff();
    StreamSniffer errorSniffer = new StreamSniffer(process.getErrorStream());
    errorSniffer.sniff();
    Assert.assertEquals("Encountered problem while waiting for process to boostrap db.", 0, process.waitFor());
    commands[3] = derbyDatabaseConnection;
    commands[5] = databaseDir + "default_users.sql";
    process = Runtime.getRuntime().exec(commands);
    stdOutSniffer = new StreamSniffer(process.getInputStream());
    stdOutSniffer.sniff();
    errorSniffer = new StreamSniffer(process.getErrorStream());
    errorSniffer.sniff();
    Assert.assertEquals("Encountered problem while waiting for process to boostrap db.", 0, process.waitFor());
    commands[5] = databaseDir + "test.sql";
    process = Runtime.getRuntime().exec(commands);
    stdOutSniffer = new StreamSniffer(process.getInputStream());
    stdOutSniffer.sniff();
    errorSniffer = new StreamSniffer(process.getErrorStream());
    errorSniffer.sniff();
    Assert.assertEquals("Encountered problem while waiting for process to boostrap db.", 0, process.waitFor());
}
