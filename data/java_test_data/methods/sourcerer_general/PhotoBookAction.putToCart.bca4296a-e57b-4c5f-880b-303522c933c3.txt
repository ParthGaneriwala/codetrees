@SuppressWarnings("unchecked")
public ActionForward putToCart(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse resqonse) {
    if (!isLoggedIn(request)) {
        return mapping.findForward(ForwardConstants.INDEX);
    }
    SessionContainer sessionContainer = setAlbum(request);
    ShoppingCart cart = sessionContainer.getCart();
    DynaActionForm data = (DynaActionForm) form;
    String photoIds = data.getString("ids");
    Integer count = (Integer) data.get("count");
    Integer productId = (Integer) data.get("productId");
    String photoBookCurrentTemplate = data.getString("photoBookCurrentTemplate");
    String currentPageArea = data.getString("currentPageArea");
    String cover = data.getString("cover");
    Map<String, Map<String, String[]>> photoBooks = cart.getPhotoBooks();
    if (photoIds != null && !"".equals(photoIds)) {
        Map<String, String[]> templates = new HashMap<String, String[]>();
        String[] photoPaths = photoService.findByIds(photoIds);
        templates.put(photoBookCurrentTemplate, photoPaths);
        photoBooks.put(currentPageArea, templates);
        cart.getPhotoIds().append(photoIds + ",");
    }
    setCompletedTemplate(request, currentPageArea, photoBookCurrentTemplate, photoBooks);
    if (!hasCompletedMakePhotoBook(productId, photoBooks)) {
        ActionMessages errors = new ActionMessages();
        ActionMessage msg = new ActionMessage("还没有完成照片书所有模板的制作！", false);
        errors.add("nocompleted", msg);
        saveMessages(request, errors);
        Integer pageCount = (Integer) data.get("pageCount");
        request.setAttribute("count", count);
        request.setAttribute("pageCount", pageCount);
        request.setAttribute("productId", productId);
        request.setAttribute("photoBookCurrentTemplate", photoBookCurrentTemplate);
        request.setAttribute("currentPageArea", currentPageArea);
        request.setAttribute("cover", cover);
        return lookupPhotoBookTemplate(mapping, photoBookCurrentTemplate);
    }
    assembledItem(productId, count, photoBooks, cart);
    cart.setPhotoIds(new StringBuffer());
    cart.getPhotoBooks().clear();
    request.setAttribute("type", "1");
    return mapping.findForward("GWC");
}
