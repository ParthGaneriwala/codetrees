@Override
public void createPartControl(Composite parent) {
    GridLayout layout = new GridLayout(1, false);
    parent.setLayout(layout);
    FilteredTree filteredTree = new FilteredTree(parent, SWT.MULTI | SWT.V_SCROLL, new PatternFilter(), true) {

        @Override
        protected void updateToolbar(boolean visible) {
            ClipsView.this.getViewer().setSelection(ClipsView.this.getViewer().getSelection());
            super.updateToolbar(visible);
        }
    };
    GridData viewergridData = new GridData(GridData.FILL_BOTH);
    filteredTree.setLayoutData(viewergridData);
    viewer = filteredTree.getViewer();
    viewer.setContentProvider(ClipsModel.getINSTANCE());
    viewer.setLabelProvider(new ClipLabelProvider());
    viewer.setInput(getViewSite());
    getSite().setSelectionProvider(viewer);
    MenuManager menuMgr = new MenuManager("#PopupMenu");
    menuMgr.setRemoveAllWhenShown(false);
    menuMgr.add(new Separator(IWorkbenchActionConstants.MB_ADDITIONS));
    Menu menu = menuMgr.createContextMenu(viewer.getControl());
    viewer.getControl().setMenu(menu);
    getSite().registerContextMenu("popup", menuMgr, viewer);
    viewer.addDoubleClickListener(new IDoubleClickListener() {

        public void doubleClick(DoubleClickEvent event) {
            ISelection selection = event.getSelection();
            String selectionToInsert = null;
            if (selection instanceof ITreeSelection && ((ITreeSelection) selection).size() > 0) {
                ITreeSelection treeSelection = (ITreeSelection) selection;
                selectionToInsert = (String) treeSelection.getFirstElement();
            } else {
                selectionToInsert = ClipsModel.getINSTANCE().peek();
            }
            if (selectionToInsert != null) {
                insertSelection(selectionToInsert);
            }
        }
    });
    final Text text = new Text(parent, SWT.MULTI | SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL | SWT.READ_ONLY);
    GridData gridData = new GridData(GridData.FILL_BOTH);
    gridData.heightHint = 60;
    text.setLayoutData(gridData);
    viewer.addSelectionChangedListener(new ISelectionChangedListener() {

        public void selectionChanged(SelectionChangedEvent event) {
            ISelection selection = event.getSelection();
            if (selection instanceof IStructuredSelection) {
                IStructuredSelection structuredSelection = (IStructuredSelection) selection;
                if (structuredSelection.size() > 0) {
                    text.setText(structuredSelection.getFirstElement().toString());
                    return;
                }
            }
            text.setText("");
        }
    });
}
