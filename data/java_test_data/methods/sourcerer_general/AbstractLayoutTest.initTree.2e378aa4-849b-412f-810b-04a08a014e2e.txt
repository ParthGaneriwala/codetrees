protected void initTree() {
    tree = new Tree();
    // the binding root
    root = tree.addRoot();
    root.getTable().addColumn(NAME, String.class);
    root.getTable().addColumn(TreeMapLayout.AREA, double.class);
    root.getTable().addColumn(SourceData.WIRE_FRAME, int.class);
    root.getTable().addColumn(VisualItem.DOI, double.class);
    root.getTable().addColumn(TreeMapLayout.LAYOUT_ORDER, int.class);
    root.set(NAME, "root");
    // root.getRow();
    rootTuple = root.getTable().getTuple(root.getRow());
    // web
    Node webNode = createChildNode(tree, root, WEB);
    // service
    Node serviceNode = createChildNode(tree, root, SERVICE);
    // domain
    Node domainNode = createChildNode(tree, root, DOMAIN);
    // integration
    Node integrationNode = createChildNode(tree, root, INTEGRATION);
    webNode.setDouble(VisualItem.DOI, 2);
    serviceNode.setDouble(VisualItem.DOI, 3);
    domainNode.setDouble(VisualItem.DOI, 4);
    integrationNode.setDouble(VisualItem.DOI, 5);
    visualTree = visualization.addTree(Constant.TREE, tree);
    TupleSet tupleSet = visualization.getVisualGroup(Constant.TREE);
    Iterator<Tuple> iter = tupleSet.tuples();
    while (iter.hasNext()) {
        Tuple tuple = (Tuple) iter.next();
        if (tuple instanceof TableNodeItem && tuple.get(NAME).equals(ROOT)) {
            rootTuple = tuple;
            continue;
        } else if (tuple instanceof TableNodeItem && tuple.get(NAME).equals(WEB)) {
            webTuple = tuple;
            continue;
        } else if (tuple instanceof TableNodeItem && tuple.get(NAME).equals(SERVICE)) {
            serviceTuple = tuple;
            continue;
        } else if (tuple instanceof TableNodeItem && tuple.get(NAME).equals(DOMAIN)) {
            domainTuple = tuple;
            continue;
        } else if (tuple instanceof TableNodeItem && tuple.get(NAME).equals(INTEGRATION)) {
            integrationTuple = tuple;
            continue;
        }
    }
    visualRoot = (VisualItem) visualization.getVisualItem(Constant.TREE, rootTuple);
    visualNodeWeb = (VisualItem) visualization.getVisualItem(Constant.TREE, webTuple);
    visualNodeService = (VisualItem) visualization.getVisualItem(Constant.TREE, serviceTuple);
    visualNodeDomain = (VisualItem) visualization.getVisualItem(Constant.TREE, domainTuple);
    visualNodeIntegration = (VisualItem) visualization.getVisualItem(Constant.TREE, integrationTuple);
}
