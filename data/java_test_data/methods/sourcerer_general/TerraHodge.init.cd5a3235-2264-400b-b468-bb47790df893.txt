public void init() {
    initVars();
    setLayout(new BorderLayout());
    canvas = new Canvas3D(SimpleUniverse.getPreferredConfiguration());
    add(canvas, BorderLayout.CENTER);
    TxtPanel = new Panel();
    TxtPanel.setLayout(new BorderLayout());
    BlurbTxt = new TextArea(WELCOME_MSG, 8, 25, TextArea.SCROLLBARS_VERTICAL_ONLY);
    BlurbTxt.setEditable(false);
    BlurbTxt.setBackground(Color.BLACK);
    BlurbTxt.setForeground(Color.WHITE);
    setBlurbFont();
    TxtPanel.add(BlurbTxt, BorderLayout.CENTER);
    ViewField = new TextField();
    ViewField.setEditable(false);
    TxtPanel.add(ViewField, BorderLayout.SOUTH);
    add(TxtPanel, BorderLayout.EAST);
    CmdPanel = new Panel();
    Panel flightPanel = new Panel();
    flightPanel.setLayout(new BorderLayout());
    Button stabButt = new Button(BUTT_CMDS[CMD_STAB]);
    Button leftButt = new Button(BUTT_CMDS[CMD_LEFT]);
    Button rightButt = new Button(BUTT_CMDS[CMD_RIGHT]);
    Button upButt = new Button(BUTT_CMDS[CMD_UP]);
    Button downButt = new Button(BUTT_CMDS[CMD_DOWN]);
    stabButt.addActionListener(this);
    leftButt.addActionListener(this);
    rightButt.addActionListener(this);
    upButt.addActionListener(this);
    downButt.addActionListener(this);
    flightPanel.add(stabButt, BorderLayout.CENTER);
    flightPanel.add(leftButt, BorderLayout.WEST);
    flightPanel.add(rightButt, BorderLayout.EAST);
    flightPanel.add(upButt, BorderLayout.NORTH);
    flightPanel.add(downButt, BorderLayout.SOUTH);
    CmdPanel.add(flightPanel);
    for (int i = 0; i < NUM_BUTT; i++) {
        Button cmdButt = new Button(BUTT_CMDS[i]);
        cmdButt.addActionListener(this);
        CmdPanel.add(cmdButt);
    }
    CmdPanel.setBackground(Color.BLACK);
    add(CmdPanel, BorderLayout.SOUTH);
    class KeyCmdListener extends KeyAdapter {

        public void keyPressed(KeyEvent e) {
            handleKey(e.getKeyCode(), e.getKeyChar());
        }
    }
    canvas.addKeyListener(new KeyCmdListener());
    buffCan = new Canvas3D(SimpleUniverse.getPreferredConfiguration(), true);
    buffCan.getScreen3D().setSize(DEF_WIDTH, DEF_HEIGHT);
    buffCan.getScreen3D().setPhysicalScreenWidth(DEF_WIDTH);
    buffCan.getScreen3D().setPhysicalScreenHeight(DEF_HEIGHT);
    // NOTE: height and width may not match applet (shrug)
    engine = new HodgeEngine(HODGE_DIM);
    engine.setG(INI_G);
    engine.setK1(INI_K1);
    engine.setK2(INI_K2);
    engine.setWrap(INI_WRAP);
    engine.addHodgeListener(this);
    engine.initMatrix();
    resetColorMap(CLASSIC);
    initUniverse();
    // why not
    setVisible(true);
    INITIALIZED = true;
}
