public void onEnter() {
    super.onEnter();
    CCSize s = Director.sharedDirector().winSize();
    // 
    // startPosition can be any coordinate, but since the movement
    // is relative to the Bezier curve, item it (0,0)
    // 
    // sprite 1
    CCBezierConfig bezier = new CCBezierConfig();
    bezier.startPosition = CCPoint.ccp(0, 0);
    bezier.controlPoint_1 = CCPoint.ccp(0, s.height / 2);
    bezier.controlPoint_2 = CCPoint.ccp(300, -s.height / 2);
    bezier.endPosition = CCPoint.ccp(300, 100);
    IntervalAction bezierForward = BezierBy.action(3, bezier);
    IntervalAction bezierBack = bezierForward.reverse();
    IntervalAction seq = Sequence.actions(bezierForward, bezierBack);
    Action rep = RepeatForever.action(seq);
    // sprite 2
    CCBezierConfig bezier2 = new CCBezierConfig();
    bezier2.startPosition = CCPoint.ccp(0, 0);
    bezier2.controlPoint_1 = CCPoint.ccp(100, s.height / 2);
    bezier2.controlPoint_2 = CCPoint.ccp(200, -s.height / 2);
    bezier2.endPosition = CCPoint.ccp(300, 0);
    IntervalAction bezierForward2 = BezierBy.action(3, bezier2);
    IntervalAction bezierBack2 = bezierForward2.reverse();
    IntervalAction seq2 = Sequence.actions(bezierForward2, bezierBack2);
    Action rep2 = RepeatForever.action(seq2);
    grossini.runAction(rep);
    tamara.runAction(rep2);
}
