public void initGame() {
    StringBuffer offbuff = new StringBuffer();
    for (int i = 0; i < offplays.length; i++) {
        if (i < 9)
            offbuff.append(" ");
        offbuff.append((i + 1) + ")" + offplays[i].name + MiscUtil.txtPad(OffPlay.MAXNAME - offplays[i].name.length()));
        if ((i + 1) % 4 == 0)
            offbuff.append(CR);
    }
    offmenu = offbuff.toString();
    StringBuffer defbuff = new StringBuffer();
    for (int i = 0; i < defplays.length; i++) {
        if (i < 9)
            defbuff.append(" ");
        defbuff.append((i + 1) + ")" + defplays[i].name + MiscUtil.txtPad(DefPlay.MAXNAME - defplays[i].name.length()));
        if ((i + 1) % 4 == 0)
            defbuff.append(CR);
    }
    defmenu = defbuff.toString();
    switch(PERIODS) {
        case 2:
            PERSTR = "half";
            break;
        case 4:
            PERSTR = "quarter";
            break;
    }
    teams = new Team[2];
    for (int t = 0; t < players.size(); t++) {
        teams[t] = (Team) players.elementAt(t);
        teams[t].city = teams[t].ask("City?", deftowns[t]);
        teams[t].teamname = teams[t].ask("Name?", defnames[t]);
        if (!Team.AUTOSKI) {
            for (int s = 0; s < Team.NUMSKI; s++) teams[t].setSkill(s);
        }
    }
    kickoff(coinFlip(HOME));
    period = 1;
    time = 15 * 60;
}
