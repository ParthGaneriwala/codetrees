private void putBranchBack(BranchRepresentation br) {
    byte optcode = br.getOptcode();
    int index = br.getIndex();
    long target = br.getTarget();
    CLInstruction instruction = null;
    if (optcode == CLOptcode.LEAVE)
        instruction = new Leave((int) target);
    else if (optcode == CLOptcode.LEAVES)
        instruction = new Leaves((byte) target);
    else if (optcode == CLOptcode.BR)
        instruction = new Br((int) target);
    else if (optcode == CLOptcode.BRS)
        instruction = new Brs((byte) target);
    else if (optcode == CLOptcode.BRFALSE)
        instruction = new Brfalse((int) target);
    else if (optcode == CLOptcode.BRFALSES)
        instruction = new Brfalses((byte) target);
    else if (optcode == CLOptcode.BRTRUE)
        instruction = new Brtrue((int) target);
    else if (optcode == CLOptcode.BRTRUES)
        instruction = new Brtrues((byte) target);
    else if (optcode == CLOptcode.BEQ)
        instruction = new Beq((int) target);
    else if (optcode == CLOptcode.BEQS)
        instruction = new Beqs((byte) target);
    else if (optcode == CLOptcode.BGE)
        instruction = new Bge((int) target);
    else if (optcode == CLOptcode.BGES)
        instruction = new Bges((byte) target);
    else if (optcode == CLOptcode.BGT)
        instruction = new Bgt((int) target);
    else if (optcode == CLOptcode.BGTS)
        instruction = new Bgts((byte) target);
    else if (optcode == CLOptcode.BLE)
        instruction = new Ble((int) target);
    else if (optcode == CLOptcode.BLES)
        instruction = new Bles((byte) target);
    else if (optcode == CLOptcode.BLT)
        instruction = new Blt((int) target);
    else if (optcode == CLOptcode.BLTS)
        instruction = new Blts((byte) target);
    else if (optcode == CLOptcode.BNEUN)
        instruction = new Bneun(target);
    else if (optcode == CLOptcode.BNEUNS)
        instruction = new Bneuns((short) target);
    else if (optcode == CLOptcode.BGEUN)
        instruction = new Bgeun(target);
    else if (optcode == CLOptcode.BGEUNS)
        instruction = new Bgeuns((short) target);
    else if (optcode == CLOptcode.BGTUN)
        instruction = new Bgtun(target);
    else if (optcode == CLOptcode.BGTUNS)
        instruction = new Bgtuns((short) target);
    else if (optcode == CLOptcode.BLEUN)
        instruction = new Bleun(target);
    else if (optcode == CLOptcode.BLEUNS)
        instruction = new Bleuns((short) target);
    else if (optcode == CLOptcode.BLTUN)
        instruction = new Bltun(target);
    else if (optcode == CLOptcode.BLTUNS)
        instruction = new Bltuns((short) target);
    else if (optcode == CLOptcode.BRINST)
        instruction = new Brinst((int) target);
    else if (optcode == CLOptcode.BRINSTS)
        instruction = new Brinsts((byte) target);
    else if (optcode == CLOptcode.BRNULL)
        instruction = new Brnull((int) target);
    else if (optcode == CLOptcode.BRNULLS)
        instruction = new Brnulls((byte) target);
    else if (optcode == CLOptcode.BRZERO)
        instruction = new Brzero((int) target);
    else if (optcode == CLOptcode.BRZEROS)
        instruction = new Brzeros((byte) target);
    new_code.set(index, instruction);
}
