public Pager getGame(int pageSize, int pageNo, String title) throws SQLException {
    List<Game> list = new ArrayList<Game>();
    int rownum = 0;
    try {
        String sql1 = "select count(*) from game ";
        // String sql2 = "select * from(select u.*,rownum rn from(select * from game  where gametitle like ? order by uploaddate desc) u where rownum<=?)where rn>?";
        String sql2 = "select * from (select game.*, row_number() over(order by gameid desc) rn from game ";
        boolean flag = StringUtils.isNotBlank(title);
        String ctitle = null;
        if (flag) {
            ctitle = "%" + title + "%";
            sql1 += " where gametitle like ? ";
            sql2 += " where gametitle like ? ";
        }
        sql2 += " ) u where u.rn > ? and u.rn <= ?";
        pstmt = con.prepareStatement(sql1);
        if (flag) {
            pstmt.setString(1, ctitle);
        }
        rs = pstmt.executeQuery();
        if (rs.next()) {
            rownum = rs.getInt(1);
        }
        pstmt = con.prepareStatement(sql2);
        if (flag) {
            pstmt.setString(1, ctitle);
            pstmt.setInt(2, (pageNo - 1) * pageSize);
            pstmt.setInt(3, pageNo * pageSize);
        } else {
            pstmt.setInt(1, (pageNo - 1) * pageSize);
            pstmt.setInt(2, pageNo * pageSize);
        }
        rs = pstmt.executeQuery();
        while (rs.next()) {
            Game game = new Game();
            game.setGameid(rs.getLong("gameid"));
            game.setGametitle(rs.getString("gametitle"));
            game.setGamepath(rs.getString("gamepath"));
            game.setGamedesc(rs.getString("gamedesc"));
            game.setUploaddate(rs.getDate("uploaddate"));
            game.setGamepic(rs.getString("gamepic"));
            list.add(game);
        }
    } catch (Exception ex) {
        ex.printStackTrace();
    } finally {
        closeAll(rs, pstmt);
    }
    Pager pager = new Pager(pageSize, pageNo, rownum, list);
    return pager;
}
