public ActionForward save(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    if (log.isDebugEnabled()) {
        log.debug("Entering 'save' method");
    }
    ActionMessages errors = form.validate(mapping, request);
    if (!errors.isEmpty()) {
        saveErrors(request, errors);
        return mapping.findForward("failure");
    }
    // Extract attributes and parameters we will need
    ActionMessages messages = new ActionMessages();
    EPCStandardStructureForm epcStandardStructureForm = (EPCStandardStructureForm) form;
    EPCStandardManager epcMgr = (EPCStandardManager) getBean("epcStandardManager");
    EPCStandard epcStandard = epcMgr.getEpcStandard(Long.parseLong(epcStandardStructureForm.getEpcStandardId()));
    int length = epcStandard.getEpcStandardLength();
    int seekTo = Integer.parseInt(epcStandardStructureForm.getEpcStandardStructureSeekTo());
    int seekFrom = Integer.parseInt(epcStandardStructureForm.getEpcStandardStructureSeekFrom());
    if (seekTo < 0 || seekFrom < 0 || seekTo <= seekFrom) {
        errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("errors.epc.length2"));
        saveErrors(request, errors);
        updateFormBean(mapping, request, epcStandardStructureForm);
        return mapping.findForward("failure");
    }
    if (length < seekTo || length < seekFrom) {
        errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("errors.epc.length", length));
        saveErrors(request, errors);
        updateFormBean(mapping, request, epcStandardStructureForm);
        return mapping.findForward("failure");
    }
    EPCStandardStructureManager epcStructureMgr = (EPCStandardStructureManager) getBean("epcStandardStructureManager");
    EPCStandardStructure epcStandardStructure = null;
    String epcStandardStructureId = epcStandardStructureForm.getEpcStandardStructureId();
    if (epcStandardStructureId == null || epcStandardStructureId.trim().equals("")) {
        epcStandardStructure = new EPCStandardStructure();
    } else {
        epcStandardStructure = epcStructureMgr.getEpcStandardStructure(Long.parseLong(epcStandardStructureId));
    }
    // Exceptions are caught by ActionExceptionHandler
    // all we need to persist is the parent object
    BeanUtils.copyProperties(epcStandardStructure, epcStandardStructureForm);
    epcStandardStructure.initAudit(this.getLoginUser());
    try {
        epcStructureMgr.saveEpcStandardStructure(epcStandardStructure);
    } catch (Exception e) {
        log.warn(e.getMessage());
        errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("errors.epc.save", e.getMessage()));
        saveErrors(request, errors);
        BeanUtils.copyProperties(epcStandardStructureForm, convert(epcStandardStructure));
        updateFormBean(mapping, request, epcStandardStructureForm);
        return mapping.findForward("failure");
    }
    messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("epcStructure.added", epcStandardStructure.getEpcStandardStructureName()));
    saveMessages(request.getSession(), messages);
    String url = mapping.findForward("success").getPath();
    ActionForward forward = new ActionForward(url + "?method=edit&epcStandardId=" + epcStandardStructure.getEpcStandardId(), true);
    return forward;
}
