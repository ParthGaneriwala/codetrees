public ActionForward PlanDeEstudiosI(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    // Salidas
    final String SALIDA_0 = "planDeEstudios";
    String salida = SALIDA_0;
    Session s = HibernateUtil.getSessionFactory().getCurrentSession();
    Transaction tr = s.beginTransaction();
    try {
        String id = request.getParameter("idPlan");
        Long idPlan = (id == null) ? (Long) request.getSession().getAttribute("idPlan") : new Long(id);
        HttpSession sess = request.getSession();
        FPlanDeEstudios fFPlanDeEstudios = (FPlanDeEstudios) sess.getAttribute("FPlanDeEstudios");
        if (fFPlanDeEstudios == null) {
            fFPlanDeEstudios = new FPlanDeEstudios();
            sess.setAttribute("FPlanDeEstudios", fFPlanDeEstudios);
        } else {
            fFPlanDeEstudios.reset(mapping, request);
        }
        PlanDeEstudios planDeEstudios = (PlanDeEstudios) s.load(PlanDeEstudios.class, idPlan);
        fFPlanDeEstudios.setIdPlan(planDeEstudios.getIdPlan());
        fFPlanDeEstudios.setCoordinacion(planDeEstudios.getCoordinacion().getIdCoordinacion());
        fFPlanDeEstudios.setCarrera(planDeEstudios.getCarrera());
        fFPlanDeEstudios.setNivel(planDeEstudios.getNivel());
        // Feed for combo listCoordinacion.
        /*{java.util.List<ve.usb.cohesion.runtime.Pair> list = 
               (java.util.List<ve.usb.cohesion.runtime.Pair>)s.createQuery(
               "select new ve.usb.cohesion.runtime.Pair(nombre, idCoordinacion) " + 
               "from Coordinacion").list();
             list.add(0,new ve.usb.cohesion.runtime.Pair("Ninguna", 0));
             fFPlanDeEstudios.setListCoordinacion(list);
            }
             */
        Hibernate.initialize(planDeEstudios.getGrupos());
        request.setAttribute("L_Grupo", planDeEstudios.getGrupos());
        Hibernate.initialize(planDeEstudios.getModalidades());
        request.setAttribute("L_Modalidad", planDeEstudios.getModalidades());
        request.getSession().setAttribute("idCoordinacion", fFPlanDeEstudios.getCoordinacion());
        request.getSession().setAttribute("idPlan", idPlan);
        tr.commit();
    } catch (Exception ex) {
        tr.rollback();
        throw ex;
    }
    return mapping.findForward(salida);
}
