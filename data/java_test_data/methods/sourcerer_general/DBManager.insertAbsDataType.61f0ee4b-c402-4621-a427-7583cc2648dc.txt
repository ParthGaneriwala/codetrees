private int insertAbsDataType(EntityEnum entity, List<AbsSingleFilter> filterList) {
    Connection conn = null;
    Statement stmt = null;
    StringBuffer stbQuery = new StringBuffer();
    int i = 0;
    StringBuffer strFields = new StringBuffer();
    StringBuffer strValues = new StringBuffer();
    String strTable = "";
    ResultSet resultSet = null;
    int returnValue = 0;
    // Trying to get a connection statement
    try {
        conn = pool.getConnection();
        if (conn == null)
            return -2;
        stmt = conn.createStatement();
    } catch (SQLException e) {
        e.printStackTrace();
        return -2;
    }
    // Executing the query and building the movies array
    try {
        stbQuery.append("INSERT INTO ");
        for (AbsSingleFilter filter : filterList) {
            ++i;
            strFields.append(filter.getColumn());
            strValues.append(filter.getValue());
            if (i < filterList.size()) {
                strFields.append(", ");
                strValues.append(", ");
            } else {
                strTable = filter.getTable();
            }
        }
        stbQuery.append(strTable);
        stbQuery.append("(").append(strFields).append(")");
        stbQuery.append(" VALUES ");
        stbQuery.append("(").append(strValues).append(")");
        stmt.executeUpdate(stbQuery.toString(), new String[] { filterList.get(0).getColumn() });
        resultSet = stmt.getGeneratedKeys();
        resultSet.next();
        returnValue = resultSet.getInt(1);
        resultSet.close();
        stmt.close();
    } catch (SQLException e) {
        try {
            // If the return of the key failed, send the statement without
            // return value and return 0
            stmt.executeUpdate(stbQuery.toString());
            stmt.close();
        } catch (SQLException e2) {
            returnValue = -1;
        }
    }
    pool.returnConnection(conn);
    return returnValue;
}
