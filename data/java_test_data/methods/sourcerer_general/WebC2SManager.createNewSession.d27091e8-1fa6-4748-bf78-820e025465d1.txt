private void createNewSession(HttpServletRequest request, HttpServletResponse response, Body body) throws IOException {
    if (!body.containsProperty("rid")) {
        response.setContentType("text/html;charset=UTF-8");
        response.sendError(HttpServletResponse.SC_NOT_FOUND, "need rid attribute");
        return;
    }
    String domain = (String) body.getProperty("to");
    if (domain == null || !domain.equals(getDomain())) {
        response.setContentType("text/html;charset=UTF-8");
        response.sendError(HttpServletResponse.SC_BAD_REQUEST, "domain error");
        return;
    }
    String ver = (String) body.getProperty("ver");
    if (ver == null || !"1.6".equals(ver)) {
        response.setContentType("text/html;charset=UTF-8");
        response.sendError(HttpServletResponse.SC_BAD_REQUEST, "ver must be 1.6");
        return;
    }
    String hold = (String) body.getProperty("hold");
    if (hold == null || !"1".equals(hold)) {
        response.setContentType("text/html;charset=UTF-8");
        response.sendError(HttpServletResponse.SC_BAD_REQUEST, "hold must be 1");
        return;
    }
    String waitStr = (String) body.getProperty("wait");
    if (waitStr == null) {
        response.setContentType("text/html;charset=UTF-8");
        response.sendError(HttpServletResponse.SC_BAD_REQUEST, "wait can not be null");
        return;
    }
    int wait = Integer.valueOf(waitStr);
    if (wait < getMinWait() || wait > getMaxWait()) {
        response.setContentType("text/html;charset=UTF-8");
        response.sendError(HttpServletResponse.SC_BAD_REQUEST, "wait must be between " + getMinWait() + " to " + getMaxWait());
        return;
    }
    String streamId = nextStreamId();
    WebClientSession webClientSession = new WebClientSession(streamId, WebC2SManager.this, wait);
    webClientSession.setStatus(WebClientSession.Status.connected);
    webClientSession.setAck("1".equals(body.getProperty("ack")));
    if (body.containsProperty("newkey")) {
        webClientSession.setLastKey((String) body.getProperty("newkey"));
    }
    sendFeature(request, response, webClientSession, (String) body.getProperty("rid"), SupportedType.afterConnected);
}
