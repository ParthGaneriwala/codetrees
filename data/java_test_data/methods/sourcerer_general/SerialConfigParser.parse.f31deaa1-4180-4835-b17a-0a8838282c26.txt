public void parse(BufferedReader reader) {
    try {
        StringBuilder item = new StringBuilder();
        char[] buff = new char[256];
        int n;
        boolean commented = false;
        while ((n = reader.read(buff)) >= 0) {
            int i = 0;
            while (i < n) {
                // is continued at the next line.
                if (commented) {
                    while (i < n && buff[i] != '\n') i++;
                    commented = (i >= n);
                    i++;
                    continue;
                }
                // not commented
                int k = i;
                while (k < n && buff[k] != '\n' && buff[k] != '#') k++;
                if (k == n) {
                    // Terminate chars are not found. Add a buffer to
                    // item and read buffer again.
                    item.append(buff, i, k - i);
                    i = n;
                    continue;
                }
                // Some terminate char is found.
                commented = (buff[k] == '#');
                int j = k - 1;
                while (j >= i && Character.isWhitespace(buff[j])) j--;
                if (j >= i && buff[j] == '\\') {
                    item.append(buff, i, j - i);
                    i = k + 1;
                    continue;
                }
                // An item is not continued to a next line.
                item.append(buff, i, k - i);
                if (item.length() > 0) {
                    String s = item.toString().trim();
                    if (s.length() > 0)
                        fireConfigItemParsed(s);
                }
                item.setLength(0);
                i = k + 1;
            }
        }
        if (item.length() > 0) {
            String s = item.toString().trim();
            if (s.length() > 0)
                fireConfigItemParsed(s);
        }
    } catch (IOException error) {
        throw new RuntimeException(error);
    }
}
