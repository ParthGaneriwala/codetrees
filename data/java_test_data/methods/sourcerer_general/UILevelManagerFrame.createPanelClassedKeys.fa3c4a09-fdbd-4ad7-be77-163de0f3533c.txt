protected void createPanelClassedKeys() {
    // Ajout des composants au panel
    panelClassedKeys.add(panelGroups);
    panelClassedKeys.add(panelLists);
    panelClassedKeys.add(panelKeys);
    // Par défaut tout est deselectionné, sauf le panel de groupes
    panelGroups.setEnabled(true);
    panelLists.setEnabled(false);
    panelClassedKeys.setEnabled(false);
    // Ajout des bordures
    panelGroups.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.BLACK), UIString.getUIString("FR_LEVEL_EDITOR_CLASSED_GROUPS_BORDER")));
    panelLists.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.BLACK), UIString.getUIString("FR_LEVEL_EDITOR_CLASSED_LISTS_BORDER")));
    panelKeys.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.BLACK), UIString.getUIString("FR_LEVEL_EDITOR_CLASSED_KEYS_BORDER")));
    panelClassedKeys.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.BLACK), UIString.getUIString("FR_LEVEL_EDITOR_CLASSED_BORDER")));
    // Mise en place des layouts
    GridBagLayout gbLayoutPanelClassedKey = new GridBagLayout();
    panelClassedKeys.setLayout(gbLayoutPanelClassedKey);
    // Contraintes du panel de groupes
    GridBagConstraints gbConstPanelGroups = new GridBagConstraints(// Numéro de colonne
    0, // Numéro de ligne
    0, // Nombre de colonnes occupées
    1, // Nombre de lignes occupées
    1, // Taille horizontale relative
    33, // Taille verticale relative
    100, // Ou placer le composant en cas de redimension
    GridBagConstraints.CENTER, // Manière de rétrécir le composant
    GridBagConstraints.BOTH, // Espace autours (haut, gauche, bas, droite)
    new Insets(SPACE, SPACE, SPACE, SPACE), // Espace intérieur en X
    0, // Espace intérieur en Y
    0);
    gbLayoutPanelClassedKey.setConstraints(panelGroups, gbConstPanelGroups);
    // Contraintes du panel de groupes
    GridBagConstraints gbConstPanelLists = new GridBagConstraints(// Numéro de colonne
    1, // Numéro de ligne
    0, // Nombre de colonnes occupées
    1, // Nombre de lignes occupées
    1, // Taille horizontale relative
    33, // Taille verticale relative
    100, // Ou placer le composant en cas de redimension
    GridBagConstraints.CENTER, // Manière de rétrécir le composant
    GridBagConstraints.BOTH, // Espace autours (haut, gauche, bas, droite)
    new Insets(SPACE, SPACE, SPACE, SPACE), // Espace intérieur en X
    0, // Espace intérieur en Y
    0);
    gbLayoutPanelClassedKey.setConstraints(panelLists, gbConstPanelLists);
    // Contraintes du panel de groupes
    GridBagConstraints gbConstPanelKeys = new GridBagConstraints(// Numéro de colonne
    2, // Numéro de ligne
    0, // Nombre de colonnes occupées
    1, // Nombre de lignes occupées
    1, // Taille horizontale relative
    33, // Taille verticale relative
    100, // Ou placer le composant en cas de redimension
    GridBagConstraints.CENTER, // Manière de rétrécir le composant
    GridBagConstraints.BOTH, // Espace autours (haut, gauche, bas, droite)
    new Insets(SPACE, SPACE, SPACE, SPACE), // Espace intérieur en X
    0, // Espace intérieur en Y
    0);
    gbLayoutPanelClassedKey.setConstraints(panelKeys, gbConstPanelKeys);
    // Mise en place des listeners de clic sur un élement
    panelGroups.getList().addListSelectionListener(new ListSelectionListener() {

        public void valueChanged(ListSelectionEvent arg0) {
            onGroupSelected(arg0);
        }
    });
    panelLists.getList().addListSelectionListener(new ListSelectionListener() {

        public void valueChanged(ListSelectionEvent arg0) {
            onListSelected(arg0);
        }
    });
    panelKeys.getList().addListSelectionListener(new ListSelectionListener() {

        public void valueChanged(ListSelectionEvent arg0) {
            onKeySelected(arg0);
        }
    });
    // TODO : compléter
    panelGroups.getList().addMouseListener(new MouseAdapter() {

        @Override
        public void mouseClicked(MouseEvent arg0) {
            onListGroupClicked();
        }
    });
    panelLists.getList().addMouseListener(new MouseAdapter() {

        @Override
        public void mouseClicked(MouseEvent arg0) {
            onListListClicked();
        }
    });
    panelKeys.getList().addMouseListener(new MouseAdapter() {

        @Override
        public void mouseClicked(MouseEvent arg0) {
            onListKeyClicked();
        }
    });
    // Mise en place des listeners de clic sur un bouton up
    panelGroups.getBtUp().addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent arg0) {
            onGroupBtUpClicked();
        }
    });
    panelLists.getBtUp().addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent arg0) {
            onListBtUpClicked();
        }
    });
    panelKeys.getBtUp().addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent arg0) {
            onKeyBtUpClicked();
        }
    });
    // Mise en place des listeners de clic sur un bouton down
    panelGroups.getBtDown().addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent arg0) {
            onGroupBtDownClicked();
        }
    });
    panelLists.getBtDown().addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent arg0) {
            onListBtDownClicked();
        }
    });
    panelKeys.getBtDown().addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent arg0) {
            onKeyBtDownClicked();
        }
    });
    // Mise en place des listeners de clic sur un bouton add
    panelGroups.getBtAddElement().addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent arg0) {
            onGroupBtAddClicked();
        }
    });
    panelLists.getBtAddElement().addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent arg0) {
            onListBtAddClicked();
        }
    });
    // Mise en place des listeners de clic sur un bouton remove
    panelGroups.getBtRemoveElement().addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent arg0) {
            onGroupBtRemoveClicked();
        }
    });
    panelLists.getBtRemoveElement().addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent arg0) {
            onListBtRemoveClicked();
        }
    });
    panelKeys.getBtRemoveElement().addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent arg0) {
            onKeyBtRemoveClicked();
        }
    });
    // Mise en place des listeners d'entrée de texte
    panelGroups.getTextElement().addKeyListener(new KeyListener() {

        public void keyPressed(KeyEvent arg0) {
        }

        public void keyTyped(KeyEvent arg0) {
        }

        public void keyReleased(KeyEvent arg0) {
            onGroupTextTyped();
        }
    });
    panelLists.getTextElement().addKeyListener(new KeyListener() {

        public void keyPressed(KeyEvent arg0) {
        }

        public void keyTyped(KeyEvent arg0) {
        }

        public void keyReleased(KeyEvent arg0) {
            onListTextTyped();
        }
    });
}
