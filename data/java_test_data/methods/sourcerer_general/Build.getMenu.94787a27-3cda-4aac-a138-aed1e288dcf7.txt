public Menu getMenu(final Control parent) {
    parent.setData("Control");
    if (buildMenu == null) {
        buildMenu = new Menu(parent);
        MenuItem localItems = new MenuItem(buildMenu, SWT.CASCADE);
        localItems.setText("Local..");
        local = new Menu(buildMenu);
        localItems.setMenu(local);
        List buildItems = Activator.getDefault().localBuildItems;
        for (Iterator iterator = buildItems.iterator(); iterator.hasNext(); ) {
            String object = (String) iterator.next();
            MenuItem item = new MenuItem(local, SWT.PUSH);
            item.setText(object);
            item.setData(object);
            item.addSelectionListener(new SelectionAdapter() {

                public void widgetSelected(SelectionEvent e) {
                    MenuItem item = (MenuItem) e.getSource();
                    final BuildJob bj = new LocalBuildJob(item.getText());
                    bj.addJobChangeListener(new JobChangeAdapter() {

                        public void done(IJobChangeEvent event) {
                            if (event.getResult().isOK())
                                bj.showMessage();
                            else
                                bj.showErrorMessage();
                        }
                    });
                    bj.schedule(Job.BUILD);
                }
            });
        }
        MenuItem remoteItems = new MenuItem(buildMenu, SWT.CASCADE);
        remoteItems.setText("Remote..");
        remote = new Menu(buildMenu);
        remoteItems.setMenu(remote);
        buildItems = Activator.getDefault().remoteBuildItems;
        for (Iterator iterator = buildItems.iterator(); iterator.hasNext(); ) {
            String object = (String) iterator.next();
            MenuItem item = new MenuItem(remote, SWT.PUSH);
            item.setText(object);
            item.setData(object);
            item.addSelectionListener(new SelectionAdapter() {

                public void widgetSelected(SelectionEvent e) {
                    MenuItem item = (MenuItem) e.getSource();
                }
            });
        }
        Separator separator = new Separator();
        separator.fill(buildMenu, 2);
        MenuItem configuration = new MenuItem(buildMenu, SWT.PUSH);
        configuration.setText("Build Configuration..");
        configuration.setImage(Activator.getImageDescriptor("icons/build.gif").createImage());
        configuration.addSelectionListener(new SelectionListener() {

            public void widgetDefaultSelected(SelectionEvent e) {
            }

            public void widgetSelected(SelectionEvent e) {
                LaunchConfigurationForm.launchForm(null, parent.getShell(), Activator.getImageDescriptor("icons/build.gif").createImage());
            }
        });
    }
    return buildMenu;
}
