public Point[] validPoints() {
    String line = "";
    String[] div;
    try {
        /*
			 * Open the .out file for reading
			 */
        BufferedReader b = new BufferedReader(new InputStreamReader(new DataInputStream(new FileInputStream(bFile_))));
        line = b.readLine();
        debug.println(line);
        line = b.readLine();
        debug.println(line);
        div = line.split(" ");
        /*
			 * Extract the camera data for the last camera added to a bundle,
			 * i.e. the newest image added.
			 */
        int camIndex = Integer.valueOf(div[0]);
        debug.println("index: " + camIndex);
        for (int i = 1; i < camIndex; i++) {
            for (int j = 0; j < 5; j++) {
                b.readLine();
            }
        }
        line = b.readLine();
        div = line.split(" ");
        double focal = Double.valueOf(div[0]);
        debug.println("focal: " + focal);
        double dist1 = Double.valueOf(div[1]);
        double dist2 = Double.valueOf(div[2]);
        debug.println("distortions: " + dist1 + " " + dist2);
        double[][] rotation = new double[3][3];
        for (int i = 0; i < 3; i++) {
            line = b.readLine();
            div = line.split(" ");
            rotation[i][0] = Double.valueOf(div[0]);
            rotation[i][1] = Double.valueOf(div[1]);
            rotation[i][2] = Double.valueOf(div[2]);
        }
        debug.println("rotation: ");
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                debug.print(rotation[i][j] + " ");
            }
            debug.println();
        }
        double[] translation = new double[3];
        line = b.readLine();
        div = line.split(" ");
        for (int i = 0; i < 3; i++) {
            translation[i] = Double.valueOf(div[i]);
        }
        debug.println("translation: ");
        for (int i = 0; i < 3; i++) {
            debug.print(translation[i] + " ");
        }
        debug.println();
        debug.println();
        /*
			 * Generate a new Camera object based on the data
			 */
        Camera c = new Camera(camIndex, focal, dist1, dist2, rotation, translation);
        b.close();
        /*
			 * Open the list of points for reading
			 */
        b = new BufferedReader(new InputStreamReader(new DataInputStream(new FileInputStream(pFile_))));
        ArrayList<Point> v = new ArrayList<Point>();
        // For every point entry...
        int count = 0;
        line = b.readLine();
        int numPts = Integer.valueOf(line);
        System.out.println("There are " + numPts + " points");
        for (int loop = 0; loop < numPts; loop++) {
            // Get Index
            line = b.readLine();
            int index = Integer.valueOf(line);
            System.out.println(line);
            // Get 3D position
            line = b.readLine();
            System.out.println(line);
            String[] pos = line.split(" ");
            System.out.println(pos.length);
            // Get ViewList
            /*line = b.readLine();
				String[] vL = line.split(" ");
				*/
            // Get data
            line = b.readLine();
            System.out.println(line);
            String data = line;
            // R/T static implementation
            Point p = new Point(pos, data, index);
            double[] VW = c.point3Dto2D(p.getPos());
            p.setXY(String.valueOf(VW[0]), String.valueOf(VW[1]));
            debug.print(VW[0] + ", " + VW[1]);
            int x = maxX - Math.abs((int) VW[0]);
            int y = maxY - Math.abs((int) VW[1]);
            if (x > 0 && y > 0) {
                v.add(p);
                debug.println(" Adding point");
                count++;
            } else {
                debug.println();
            }
        // ViewList-based implementation
        // Find the new 3D position of the point
        /*String f = findPoint(vL);
				if(f != null){
					// Create a new Point object with the returned 3D position
					Point p = new Point(f.split(" "),data,index);
					// Find the 2D position of the point in the new camera

					double[] VW = c.point3Dto2D(p.getPos());
					p.setXY(String.valueOf(VW[0]), String.valueOf(VW[1]));
					
					 // If it is within the bounds of the image, add it to
					 // the list of valid points
					 
					debug.print(VW[0] + ", " + VW[1]);
					int x = maxX - Math.abs((int)VW[0]);
					int y = maxY - Math.abs((int)VW[1]);
					if(x > 0 && y > 0){
						v.add(p);
						debug.println(" Adding point");
						count++;
					}else{
						debug.println();
					}
				}*/
        }
        // Convert ArrayList to String array
        Object[] thev = v.toArray();
        Point[] valids = new Point[thev.length];
        for (int i = 0; i < thev.length; i++) {
            valids[i] = (Point) thev[i];
        }
        return valids;
    } catch (FileNotFoundException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
    return new Point[0];
}
