public List<ModelObject> getListObj(String modelName, Criteria criteria) {
    Manager manager = getManager(modelName);
    List<ModelObject> list = new ArrayList<ModelObject>();
    if (criteria != null) {
        System.out.println("getList(" + modelName + ") with criteria");
        String methodName = config.getListMethod(modelName);
        try {
            Class[] params = new Class[1];
            params[0] = criteria.getClass();
            Method method = manager.getClass().getMethod(methodName, params);
            if (method == null) {
                System.out.println("Method not found: " + methodName);
            }
            Object[] objs = new Object[1];
            objs[0] = criteria;
            System.out.println("invoke manager begin");
            List ret = (List) method.invoke(manager, objs);
            System.out.println("invoke manager end " + ret.size());
            for (Iterator it = ret.iterator(); it.hasNext(); ) {
                ModelObject model = (ModelObject) it.next();
                list.add(model);
            }
        } catch (SecurityException e) {
            e.printStackTrace();
        } catch (IllegalArgumentException e) {
            e.printStackTrace();
        } catch (NoSuchMethodException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (InvocationTargetException e) {
            e.printStackTrace();
        }
    }
    return list;
}
