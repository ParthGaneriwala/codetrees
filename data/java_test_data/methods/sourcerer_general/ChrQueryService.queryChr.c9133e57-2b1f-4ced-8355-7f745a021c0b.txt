public PaginationSupport queryChr(Date date, String msisdn, String imei, String flowid, String _cellid, String _lac, int pageNo, int pageSize) {
    String table = getChrTable(date);
    int totalCount = 0;
    String cellid = Integer.toHexString(Integer.parseInt(_cellid)).toUpperCase();
    String lac = Integer.toHexString(Integer.parseInt(_lac)).toUpperCase();
    int startIndex = (pageNo - 1) * pageSize;
    String cntsql = "select count(*) as cnt from " + table + " where 1=1 ";
    String search = " where 1=1";
    if (msisdn != null && !msisdn.equals("")) {
        cntsql += " and msisdn = '" + msisdn + "'";
        search += " and msisdn = '" + msisdn + "'";
    }
    if (imei != null && !imei.equals("")) {
        cntsql += " and imei='" + cellid + "'";
        search += " and imei='" + cellid + "'";
    }
    if (flowid != null && !flowid.equals("")) {
        cntsql += " and flowid='" + flowid + "'";
        search += " and flowid='" + flowid + "'";
    }
    if (lac != null && !lac.equals("") && !lac.equals("0")) {
        cntsql += " and cellid like '%" + lac + ":%'";
        search += " and cellid like '%" + lac + ":%'";
    }
    if (cellid != null && !cellid.equals("") && !cellid.equals("0")) {
        cntsql += " and cellid like '%:" + cellid + "%'";
        search += " and cellid like '%:" + cellid + "%'";
    }
    System.out.println("查询SQL:" + cntsql);
    if (pageSize != Integer.MAX_VALUE) {
        totalCount = jdbcTemplate.queryForInt(cntsql);
    }
    String sql = "SELECT * FROM (SELECT A.*, ROWNUM RN FROM (select * from  " + table + search + " ) A WHERE ROWNUM <= " + (startIndex + pageSize) + " )  WHERE RN > " + startIndex;
    System.out.println("查询SQL:" + sql);
    // String sql = "select * from(select APNNI,STATTIME,USERCOUNT,ALLVOLUME
    // from STAT_APN where STATTIME="+_date+" and dayflag=1)";
    Object object = jdbcTemplate.query(sql, new ResultSetExtractor() {

        public Object extractData(ResultSet rs) throws SQLException, DataAccessException {
            List list = new ArrayList();
            while (rs.next()) {
                HWChrLog model = new HWChrLog();
                model.setTime(rs.getLong("ttime"));
                model.setAllowapn(rs.getString("allowapn"));
                model.setApn(rs.getString("apn"));
                model.setCao(rs.getString("cao"));
                model.setCellid(rs.getString("cellid"));
                model.setFilesgsn(rs.getString("filesgsn"));
                model.setFlowid(rs.getString("flowid"));
                model.setGgsn(rs.getString("ggsn"));
                model.setImei(rs.getString("imei"));
                model.setImsi(rs.getString("imsi"));
                model.setInnerreason(rs.getString("innerreason"));
                model.setKuang(rs.getString("kuang"));
                model.setLazytime(rs.getString("lazytime"));
                // model.setMobiletype(rs.getString("mobiletype");
                model.setMsisdn(rs.getString("msisdn"));
                model.setOldcellid(rs.getString("oldcellid"));
                model.setOldsgsnid(rs.getString("oldsgsnid"));
                model.setOutreason(rs.getString("outreason"));
                model.setSgsnid(rs.getString("sgsnid"));
                model.setTrigreason(rs.getString("trigreason"));
                list.add(model);
            }
            return list;
        }
    });
    List list = (List) object;
    if (pageSize == Integer.MAX_VALUE) {
        totalCount = list.size();
    }
    // PaginationSupport ps=new PaginationSupport();
    PaginationSupport ps = new PaginationSupport(list, totalCount, pageSize, startIndex);
    return ps;
}
