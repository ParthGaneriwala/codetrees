public void doView(RenderRequest request, RenderResponse response) throws PortletException, IOException {
    // For content links
    String ctx = request.getContextPath();
    // Get the rules
    String rule = request.getPreferences().getValue(PREF_RULE, null);
    // Get the content and replace any parameters
    String content = request.getPreferences().getValue(CONTENT, DEFAULT_CONTENT);
    content = StringUtils.replace(content, "${ctx}", ctx);
    request.setAttribute(CONTENT, content);
    // This portlet can retrieve state data from other portlets
    boolean showThisPortlet = true;
    for (String event : PortalUtils.getDashboardPortlet(request).getConsumeDataEvents()) {
        // Detects if values are true
        if (event.equals("hideIfEmpty")) {
            String value = (String) PortalUtils.getGeneratedData(request, event);
            if (StringUtils.hasText(value) && "false".equals(value)) {
                showThisPortlet = false;
            }
        }
    }
    // Check any rules
    String styleImage = request.getPreferences().getValue(STYLE_IMAGE, null);
    if (styleImage != null) {
        // Determine the database connection
        Connection db = PortalUtils.useConnection(request);
        // Use the project for this rule
        Project project = PortalUtils.findProject(request);
        if (project != null) {
            try {
                // Check if the specified file exists, otherwise hide this portlet
                FileItemList imageList = new FileItemList();
                imageList.setLinkModuleId(Constants.PROJECT_STYLE_FILES);
                imageList.setLinkItemId(project.getId());
                imageList.setFilename(styleImage);
                imageList.buildList(db);
                if (imageList.size() < 1) {
                    showThisPortlet = false;
                }
            } catch (Exception e) {
            // LOG.error("unexpected styleImage error", e);
            }
        }
    }
    // Hide the portlet if the portlet is for sensitive mode and sensitive is off
    if ("hideWhenNotSensitiveMode".equals(rule)) {
        ApplicationPrefs prefs = PortalUtils.getApplicationPrefs(request);
        if (!"true".equals(prefs.get(ApplicationPrefs.INFORMATION_IS_SENSITIVE))) {
            showThisPortlet = false;
        }
    }
    if (showThisPortlet) {
        // Show the content
        PortletContext context = getPortletContext();
        PortletRequestDispatcher requestDispatcher = context.getRequestDispatcher(VIEW_PAGE);
        requestDispatcher.include(request, response);
    } else {
        LOG.debug("Not showing the content.");
    }
}
