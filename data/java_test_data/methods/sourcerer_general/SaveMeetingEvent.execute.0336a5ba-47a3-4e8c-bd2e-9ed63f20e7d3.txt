public boolean execute(ComponentContext context) {
    boolean result = false;
    Connection db = null;
    try {
        db = getConnection(context);
        Meeting thisMeeting = (Meeting) context.getThisObject();
        Meeting previousMeeting = (Meeting) context.getPreviousObject();
        // load the user that submitted the meeting event
        User user = UserUtils.loadUser(thisMeeting.getEnteredBy());
        Project userProfile = ProjectUtils.loadProject(user.getProfileProjectId());
        // load the project profile
        Project projectProfile = ProjectUtils.loadProject(thisMeeting.getProjectId());
        if (previousMeeting == null) {
            // A new meeting was added
            // Prepare the wiki links
            context.setParameter("user", WikiLink.generateLink(userProfile));
            context.setParameter("event", WikiLink.generateLink(thisMeeting));
            context.setParameter("profile", WikiLink.generateLink(projectProfile));
            // Insert the history
            ProjectHistory history = new ProjectHistory();
            history.setEnteredBy(user.getId());
            history.setProjectId(thisMeeting.getProjectId());
            history.setLinkObject(ProjectHistoryList.MEETING_OBJECT);
            history.setEventType(ProjectHistoryList.SETUP_PROFILE_MEETING_EVENT);
            history.setLinkItemId(thisMeeting.getId());
            if (userProfile.getId() == projectProfile.getId()) {
                // User updated own profile's event
                history.setDescription(context.getParameter(HISTORY_USER_ADD_EVENT_TEXT));
            } else {
                // User updated another's event
                history.setDescription(context.getParameter(HISTORY_ADD_EVENT_TEXT));
            }
            history.insert(db);
        } else {
            // A meeting's date or time was updated
            if (previousMeeting.getStartDate() != thisMeeting.getStartDate() || previousMeeting.getEndDate() != thisMeeting.getEndDate()) {
                // Prepare the wiki links
                context.setParameter("user", WikiLink.generateLink(userProfile));
                context.setParameter("event", WikiLink.generateLink(thisMeeting));
                context.setParameter("profile", WikiLink.generateLink(projectProfile));
                // Insert the history
                ProjectHistory history = new ProjectHistory();
                history.setEnteredBy(user.getId());
                history.setProjectId(thisMeeting.getProjectId());
                history.setLinkObject(ProjectHistoryList.MEETING_OBJECT);
                history.setEventType(ProjectHistoryList.UPDATE_PROFILE_MEETING_EVENT);
                history.setLinkItemId(thisMeeting.getId());
                if (userProfile.getId() == projectProfile.getId()) {
                    // User updated own event
                    history.setDescription(context.getParameter(HISTORY_USER_UPDATE_EVENT_TEXT));
                } else {
                    // User updated another's event
                    history.setDescription(context.getParameter(HISTORY_UPDATE_EVENT_TEXT));
                }
                history.insert(db);
            }
        }
        result = true;
    } catch (Exception e) {
        e.printStackTrace(System.out);
    } finally {
        freeConnection(context, db);
    }
    return result;
}
