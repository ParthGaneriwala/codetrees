private String[] filterOutReqNeeded(String major, String degree, String[] category) {
    ListModel cmodel = jListUpdateCompletedCourses.getModel();
    String[] completed = new String[cmodel.getSize()];
    for (int i = 0; i < completed.length; ++i) {
        completed[i] = (String) cmodel.getElementAt(i);
    }
    ObjPrereq[] pre = db.getPrereq(major, degree);
    int cnt = 0;
    for (int i = 0; i < pre.length; ++i) {
        for (int j = 0; j < completed.length; ++j) {
            if (pre[i].getBefore().equals(completed[j])) {
                pre[i] = null;
                ++cnt;
                break;
            }
        }
    }
    ObjPrereq[] filtered = new ObjPrereq[pre.length - cnt];
    for (int i = 0, j = 0; i < filtered.length && j < pre.length; ++j) {
        if (pre[j] != null) {
            filtered[i] = pre[j];
            ++i;
        }
    }
    String[] omit = new String[filtered.length];
    for (int i = 0; i < omit.length; ++i) {
        omit[i] = (String) filtered[i].getAfter();
    }
    String[] cat = new String[category.length];
    for (int i = 0; i < cat.length && i < category.length; ++i) {
        cat[i] = category[i];
    }
    cnt = 0;
    for (int i = 0; i < cat.length; ++i) {
        for (int j = 0; j < omit.length; ++j) {
            if (omit[j].equals(cat[i])) {
                cat[i] = null;
                ++cnt;
                break;
            }
        }
    }
    String[] result = new String[cat.length - cnt];
    for (int i = 0, j = 0; i < result.length && j < cat.length; ++j) {
        if (cat[j] != null) {
            result[i] = cat[j];
            ++i;
        }
    }
    return result;
}
