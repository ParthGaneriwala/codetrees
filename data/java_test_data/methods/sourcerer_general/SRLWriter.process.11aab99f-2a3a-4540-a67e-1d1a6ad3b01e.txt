@Override
public void process(JCas jCas) throws AnalysisEngineProcessException {
    DocumentAnnotation doc = JCasUtil.selectSingle(jCas, DocumentAnnotation.class);
    List<Sentence> sentences = JCasUtil.selectCovered(jCas, Sentence.class, doc);
    int sentenceIndex = 0;
    for (Sentence sentence : sentences) {
        sentenceIndex += 1;
        List<Token> sentenceTokens = JCasUtil.selectCovered(jCas, Token.class, sentence);
        List<Predicate> predicates = JCasUtil.selectCovered(jCas, Predicate.class, sentence);
        for (Predicate predicate : predicates) {
            ListSpecification predicateTokenList = tokenList(JCasUtil.selectCovered(jCas, Token.class, predicate.getAnnotation()), sentenceTokens);
            StringBuffer line = new StringBuffer();
            line.append(ViewURIUtil.getURI(jCas));
            line.append(" ");
            line.append(sentenceIndex);
            line.append(" ");
            line.append(predicateTokenList);
            List<Argument> args = predicate.getArguments() == null ? new ArrayList<Argument>() : UIMAUtil.toList(predicate.getArguments(), Argument.class);
            for (Argument arg : args) {
                SemanticArgument sArg;
                try {
                    sArg = (SemanticArgument) arg;
                } catch (ClassCastException e) {
                    continue;
                }
                if (sArg.getLabel().equals("rel"))
                    continue;
                line.append(" " + sArg.getLabel());
                if (sArg.getFeature() != null)
                    line.append("-" + sArg.getFeature());
                line.append(":");
                if (sArg.getAnnotation() != null) {
                    List<Token> argTokens = JCasUtil.selectCovered(jCas, Token.class, sArg.getAnnotation());
                    if (argTokens.size() > 0)
                        line.append(tokenList(argTokens, sentenceTokens));
                } else {
                    List<Annotation> corefAnnotations = UIMAUtil.toList(sArg.getCoreferenceAnnotations(), Annotation.class);
                    boolean first = true;
                    for (Annotation corefAnnotation : corefAnnotations) {
                        List<Token> argTokens = JCasUtil.selectCovered(jCas, Token.class, corefAnnotation);
                        if (argTokens.size() > 0) {
                            if (!first)
                                line.append("*");
                            line.append(tokenList(argTokens, sentenceTokens));
                            first = false;
                        }
                    }
                }
            }
            output.println(line);
        }
    }
    output.flush();
}
