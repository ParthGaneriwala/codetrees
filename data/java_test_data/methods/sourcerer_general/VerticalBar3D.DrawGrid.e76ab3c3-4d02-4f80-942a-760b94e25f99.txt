public void DrawGrid(Graphics backg) {
    DrawGridBackground(backg);
    int i = 0;
    g2b.setFont(font1);
    g2b.setColor(grid_color);
    // divisions_numerical grid
    AffineTransform old_at;
    AffineTransform transformer;
    for (int k = 0; k <= numBars; k++) {
        if (vert_grid_off == 0 || k == 0 || k == numBars)
            g2b.drawLine((int) (k * hor_step + frame.x + oblic), (int) (frame.y), (int) (frame.x + k * hor_step + oblic), (int) (frame.height + frame.y - oblic));
        g2b.drawLine((int) (k * hor_step + frame.x), (int) (frame.height + frame.y), (int) (frame.x + k * hor_step + oblic), (int) (frame.height + frame.y - oblic));
        g2b.drawLine((int) (k * hor_step + frame.x), (int) (frame.height + frame.y), (int) (frame.x), (int) (frame.height + frame.y));
        g2b.drawLine((int) (k * hor_step + frame.x), (int) (frame.height + frame.y), (int) (k * hor_step + frame.x), (int) (frame.height + frame.y + 10));
        if (show_description_on_x_axis == 1) {
            if (k < numBars) {
                if (oblique_values == 1) {
                    old_at = g2b.getTransform();
                    transformer = AffineTransform.getTranslateInstance((int) (frame.x + k * hor_step), (int) (frame.height + frame.y + 20));
                    transformer.rotate(Math.toRadians(angle));
                    g2b.setTransform(transformer);
                    g2b.drawString(desc[k], 0, 0);
                    g2b.setTransform(old_at);
                } else {
                    int d = g2b.getFontMetrics().stringWidth(desc[k]);
                    double d2 = (hor_step - d) / 2;
                    g2b.drawString(desc[k], (int) (frame.x + k * hor_step + d2), (int) (frame.height + frame.y + 20));
                }
            }
        } else if (oblique_values == 1) {
            old_at = g2b.getTransform();
            transformer = AffineTransform.getTranslateInstance((int) (frame.x + k * hor_step), (int) (frame.height + frame.y + 20));
            transformer.rotate(Math.toRadians(angle));
            g2b.setTransform(transformer);
            g2b.drawString("" + k, 0, 0);
            g2b.setTransform(old_at);
        } else
            g2b.drawString("" + (int) k, (int) (frame.x + k * hor_step), (int) (frame.height + frame.y + 20));
    }
    // horizontal grid
    for (int k = 0; k <= divisions_number; k++) {
        g2b.drawLine((int) (frame.x + oblic), (int) (k * vert_step + frame.y), (int) (frame.x + frame.width), (int) (k * vert_step + frame.y));
        g2b.drawLine((int) (frame.x), (int) (k * vert_step + frame.y + oblic), (int) (frame.x + oblic), (int) (k * vert_step + frame.y));
        g2b.drawLine((int) (frame.x), (int) (k * vert_step + frame.y + oblic), (int) (frame.x - hor_step / 3), (int) (k * vert_step + frame.y + oblic));
        int gr = (int) (max - i * (max / divisions_number));
        String str = "" + gr;
        int d = g2b.getFontMetrics().stringWidth(str);
        double x_str_at = frame.x - d - 5;
        double y_str_at = k * vert_step + frame.y + oblic - 2;
        g2b.drawString("" + gr, (int) x_str_at, (int) y_str_at);
        i++;
    }
    g2b.drawLine((int) (frame.x), (int) (frame.y + oblic), (int) (frame.x), (int) (frame.y + frame.height));
    g2b.setFont(font3);
    g2b.setPaint(axis_descr_color);
    if (x_axis_description != null) {
        float f_size = font3.getSize2D();
        double l = (int) (x_axis_description.length() * f_size / 2);
        double start_at = frame.x + frame.width / 2 - l / 2;
        double y_start_at;
        if (show_legend_on_right == 0)
            y_start_at = screen_h - legend_h - 25;
        else
            y_start_at = screen_h - 15;
        g2b.drawString(x_axis_description, (int) start_at, (int) y_start_at);
    }
    if (y_axis_description != null) {
        float f_size = font3.getSize2D();
        double l = (int) (y_axis_description.length() * f_size / 2);
        double start_at = frame.y + frame.height / 2 + l / 2;
        old_at = g2b.getTransform();
        // ,(frame.y+frame.height+40));
        transformer = AffineTransform.getTranslateInstance(20, start_at);
        transformer.rotate(Math.toRadians(-90));
        g2b.setTransform(transformer);
        g2b.drawString(y_axis_description, 0, 0);
        g2b.setTransform(old_at);
    }
}
