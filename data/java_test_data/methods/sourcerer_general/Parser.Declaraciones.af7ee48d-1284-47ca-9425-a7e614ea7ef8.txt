// Declaraciones = ["public" | "private"] TiposSimples (ident | "main") [";" | "["enteros"]" [";"] | "(" ["void" |ArgumentosDeclaracion] ")""{"Miembros"}"]
void Declaraciones() {
    Inicializa_aux();
    if (la.kind == 34 || la.kind == 35) {
        if (la.kind == 34) {
            simbolo_aux.setPublico(true);
            Get();
        } else {
            Get();
        }
    }
    TiposSimples();
    if (la.kind == 1) {
        simbolo_aux.setId(la.val);
        simbolo_aux.setCol(la.col);
        simbolo_aux.setPos(la.pos);
        simbolo_aux.setLinea(la.line);
        Get();
    } else if (la.kind == 36) {
        simbolo_aux.setId(la.val);
        simbolo_aux.setCol(la.col);
        simbolo_aux.setPos(la.pos);
        simbolo_aux.setLinea(la.line);
        if (!simbolo_aux.getPublico())
            SemErr("Falta modificador \"public\" en metodo main");
        tablasimbolos.setExisteMain(true);
        Get();
    } else
        SynErr(43);
    if (la.kind == 18 || la.kind == 19 || la.kind == 31) {
        if (la.kind == 31) {
            simbolo_aux.setTipoEnVector('-');
            simbolo_aux.setTipoRetorno('-');
            if (simbolo_aux.getId() == "main")
                SynErr(25);
            Simbolo simb = new Simbolo();
            simb = Copia(simbolo_aux);
            int existe = tablasimbolos.InsertarSimbolo(simb, simb.getId());
            if (existe != 0)
                SemErr("Ya existe el identificador");
            Get();
        } else if (la.kind == 18) {
            simbolo_aux.setTipoRetorno('-');
            simbolo_aux.setTipo('v');
            if (simbolo_aux.getId() == "main")
                SynErr(25);
            Get();
            Esperado(2);
            if (!token.val.equals("[")) {
                int entero = Integer.valueOf(token.val).intValue();
                if (entero < 0)
                    SemError("Imposible crear vector de tamaño negativo");
                simbolo_aux.setNumArgMetodo(entero);
                simbolo_aux.setTamano(entero * simbolo_aux.getTamano());
            }
            Esperado(24);
            Esperado(31);
            Simbolo simb = new Simbolo();
            simb = Copia(simbolo_aux);
            int existe = tablasimbolos.InsertarSimbolo(simb, simb.getId());
            if (existe != 0)
                SemErr("Ya existe el identitificador");
        } else {
            Get();
            simbolo_aux.setTipo('m');
            simbolo_aux.setTipoEnVector('-');
            if (StartOf(1)) {
                if (la.kind == 13) {
                    if (simbolo_aux.getId() != "main")
                        SynErr(36);
                    Get();
                } else if (la.kind == 25)
                    simbolo_aux.setNumArgMetodo(0);
                else {
                    Simbolo simbolo_aux3 = new Simbolo();
                    simbolo_aux3.setId(simbolo_aux.getId());
                    simbolo_aux3.setTipo(simbolo_aux.getTipo());
                    simbolo_aux3.setCol(simbolo_aux.getColumna());
                    simbolo_aux3.setLinea(simbolo_aux.getLinea());
                    simbolo_aux3.setTipoRetorno(simbolo_aux.getTipoRetorno());
                    simbolo_aux3.setPublico(simbolo_aux.getPublico());
                    simbolo_aux.setNumArgMetodo(0);
                    colaArgumento.clear();
                    numargmetodo = 0;
                    ArgumentosDeclaracion();
                    simbolo_aux.setId(simbolo_aux3.getId());
                    simbolo_aux.setTipo(simbolo_aux3.getTipo());
                    simbolo_aux.setCol(simbolo_aux3.getColumna());
                    simbolo_aux.setLinea(simbolo_aux3.getLinea());
                    simbolo_aux.setTipoRetorno(simbolo_aux3.getTipoRetorno());
                    simbolo_aux.setPublico(simbolo_aux3.getPublico());
                    simbolo_aux.setTipo('m');
                }
            }
            Simbolo simb = new Simbolo();
            simb = Copia(simbolo_aux);
            int existe1 = tablasimbolos.InsertarSimbolo(simb, simb.getId());
            if (existe1 != 0)
                SemErr("Ya existe un metodo con ese identificador en esta clase");
            tablasimbolos.CrearTablaHijo(simbolo_aux.getId());
            int args = simbolo_aux.getNumArgMetodo();
            Queue colaArgumento = simbolo_aux.getColaArgumentos();
            Argumento arg;
            while (args > 0) {
                arg = (Argumento) colaArgumento.poll();
                Inicializa_aux();
                simbolo_aux.setTipo(arg.getTipo());
                simbolo_aux.setId(arg.getNombre());
                Simbolo simb2 = new Simbolo();
                simb2 = Copia(simbolo_aux);
                int existe = tablasimbolos.InsertarSimbolo(simb2, simb2.getId());
                if (existe != 0)
                    SemErr("Existen dos parámetros con el mismo identificador");
                args = args - 1;
            }
            Esperado(25);
            Esperado(17);
            Miembros();
            Esperado(23);
            tablasimbolos.t_actual = tablasimbolos.t_actual.getSuperior();
        // Aqui deberia destruir esta tabla
        }
    }
}
