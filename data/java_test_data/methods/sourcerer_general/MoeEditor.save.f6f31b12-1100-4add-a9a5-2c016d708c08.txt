public // inherited from Editor, redefined
void save() throws IOException {
    IOException failureException = null;
    if (saveState.isChanged()) {
        BufferedWriter writer = null;
        try {
            // The crash file is used during writing and will remain in
            // case of a crash during the write operation. The backup
            // file always contains the last version.
            String crashFilename = filename + CRASHFILE_SUFFIX;
            String backupFilename = filename + BACKUP_SUFFIX;
            // make a backup to the crash file
            FileUtility.copyFile(filename, crashFilename);
            writer = new BufferedWriter(new FileWriter(filename));
            sourcePane.write(writer);
            writer.close();
            setSaved();
            File file = new File(filename);
            lastModified = file.lastModified();
            if (PrefMgr.getFlag(PrefMgr.MAKE_BACKUP)) {
                // if all went well, rename the crash file as a normal
                // backup
                File crashFile = new File(crashFilename);
                File backupFile = new File(backupFilename);
                backupFile.delete();
                crashFile.renameTo(backupFile);
            } else {
                File crashFile = new File(crashFilename);
                crashFile.delete();
            }
        } catch (IOException ex) {
            failureException = ex;
            info.warning(Config.getString("editor.info.errorSaving") + " - " + ex.getLocalizedMessage());
        } finally {
            try {
                if (writer != null)
                    writer.close();
            } catch (IOException ex) {
                failureException = ex;
            }
        }
    }
    // re-throw the exception.
    if (failureException != null) {
        info.warning(Config.getString("editor.info.errorSaving") + " - " + failureException.getLocalizedMessage());
        throw failureException;
    }
}
