public String savePurchDetProcessDresssmakerRe() {
    System.out.println("PurchaseDetailAction -> savePurchDetProcessDresssmakerRe()");
    if ((processDressmakerPurchaseDetail.getQuantityFail() == 0 && processDressmakerPurchaseDetail.getPriceQuantityFail() == 0) || (processDressmakerPurchaseDetail.getQuantityFail() > 0 && processDressmakerPurchaseDetail.getPriceQuantityFail() > 0)) {
        ProcessDressmakerPurchaseDetail proDressPurcDetailAux = processDressmakerPurchaseDetailManager.get(processDressmakerPurchaseDetail.getId());
        Double diffAmountFail = (processDressmakerPurchaseDetail.getQuantityFail() * processDressmakerPurchaseDetail.getPriceQuantityFail()) - proDressPurcDetailAux.getTotalAmountQuantityFail();
        Double diffQuantFail = processDressmakerPurchaseDetail.getQuantityFail() - proDressPurcDetailAux.getQuantityFail();
        proDressPurcDetailAux.setQuantityFail(processDressmakerPurchaseDetail.getQuantityFail());
        proDressPurcDetailAux.setPriceQuantityFail(processDressmakerPurchaseDetail.getPriceQuantityFail());
        proDressPurcDetailAux.setTotalAmountQuantityFail(processDressmakerPurchaseDetail.getQuantityFail() * processDressmakerPurchaseDetail.getPriceQuantityFail());
        proDressPurcDetailAux = processDressmakerPurchaseDetailManager.save(proDressPurcDetailAux);
        ProcessDressmaker processDressmakerAux = proDressPurcDetailAux.getProcessDressmaker();
        processDressmakerAux.setTotalAmountFail(processDressmakerAux.getTotalAmountFail() + diffAmountFail);
        processDressmakerAux.setTotalCurrentAmount(processDressmakerAux.getTotalCurrentAmount() - diffAmountFail);
        processDressmakerAux = processDressmakerManager.save(processDressmakerAux);
        BalanceEmployee balanceEmployeeAux = processDressmakerAux.getBalanceEmployee();
        // balanceEmployeeAux.setAmountWon(balanceEmployeeAux.getAmountWon() - diffAmountFail);
        balanceEmployeeAux.setTypeBalance(1);
        balanceEmployeeAux.setAmountPaid(balanceEmployeeAux.getAmountPaid() + diffAmountFail);
        balanceEmployeeAux.setObservation(balanceEmployeeAux.getAmountPaid() + " DESC POR MAL USO DE MATERIAL");
        balanceEmployeeAux.setBalance(balanceEmployeeAux.getBalance() - diffAmountFail);
        balanceEmployeeManager.save(balanceEmployeeAux);
        // ------------------------------------------
        PeriodPaymentEmployee perPayEmpl = balanceEmployeeAux.getPeriodPaymentEmployee();
        perPayEmpl.setDiscount(perPayEmpl.getDiscount() + diffAmountFail);
        perPayEmpl.setCurrentAmount(perPayEmpl.getCurrentAmount() - diffAmountFail);
        periodPaymentEmployeeManager.save(perPayEmpl);
        // -------------------------------------------
        PurchaseDetail purchaseDetailAux = proDressPurcDetailAux.getPurchaseDetail();
        purchaseDetailAux.setQuantityFail(purchaseDetailAux.getQuantityFail() + diffQuantFail);
        purchaseDetailAux.setDiscountXfail(purchaseDetailAux.getDiscountXfail() + diffAmountFail);
        purchaseDetailAux.setCurrentQuantity(purchaseDetailAux.getCurrentQuantity() - diffAmountFail);
        purchaseDetail = purchaseDetailManager.save(purchaseDetailAux);
    }
    System.out.println("PurchaseDetailAction -> end savePurchDetProcessDresssmakerRe()");
    return SUCCESS;
}
