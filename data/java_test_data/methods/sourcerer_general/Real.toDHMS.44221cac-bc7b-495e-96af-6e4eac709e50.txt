public void toDHMS() {
    if (!(this.exponent >= 0 && this.mantissa != 0))
        return;
    boolean negative = (this.sign != 0);
    abs();
    int D, m;
    long h;
    h = toLong();
    frac();
    tmp1.assign(60);
    mul(tmp1);
    m = toInteger();
    frac();
    mul(tmp1);
    // MAGIC ROUNDING: Check if we are 2**-16 sec short of a whole minute
    // i.e. "seconds" > 59.999985
    {
        tmp2.mantissa = ONE.mantissa;
        tmp2.exponent = ONE.exponent;
        tmp2.sign = ONE.sign;
    }
    ;
    tmp2.scalbn(-16);
    add(tmp2);
    if (this.compare(tmp1) >= 0) {
        // Yes. So set zero secs instead and carry over to mins and hours
        {
            this.mantissa = ZERO.mantissa;
            this.exponent = ZERO.exponent;
            this.sign = ZERO.sign;
        }
        ;
        m++;
        if (m >= 60) {
            m -= 60;
            h++;
        }
    // Phew! That was close. From now on it is integer arithmetic...
    } else {
        // Nope. So try to undo the damage...
        sub(tmp2);
    }
    D = (int) (h / 24);
    h %= 24;
    if (D >= 366)
        D = jd_to_gregorian(D);
    add(m * 100);
    div(10000);
    tmp1.assign(D * 100L + h);
    add(tmp1);
    if (negative)
        neg();
}
