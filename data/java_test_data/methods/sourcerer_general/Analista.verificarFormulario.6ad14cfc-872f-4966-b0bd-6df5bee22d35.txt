public void verificarFormulario(PaginaPro pagina, JobPro job) throws Exception {
    if (pagina.getCodOriginal() == null) {
        System.err.println("AVISO: Analista: O codigo da pagina " + pagina.getUrl() + " esta nulo.");
        return;
    }
    Matcher mat = patForm.matcher(pagina.getCodOriginal());
    boolean achouFormulario = false;
    while (mat.find()) {
        achouFormulario = true;
        String tagForm = mat.group();
        String action = regras.getAtributo(tagForm, "action");
        // encontrar o fim da tag
        if (pagina.getCodOriginal() == null) {
            System.err.println("AVISO: Analista: O codigo da pagina " + pagina.getUrl() + " esta nulo.");
            return;
        }
        if (mat == null) {
            System.err.println("AVISO: Analista: O objeto 'mat' esta nulo.");
            return;
        }
        int f = pagina.getCodOriginal().indexOf("</form>", mat.end());
        int f2 = pagina.getCodOriginal().indexOf("</FORM>", mat.end());
        if (f == -1)
            f = f2;
        if (f != -1 && f2 != -1)
            f = f < f2 ? f : f2;
        if (f == -1)
            continue;
        String conteudoForm = pagina.getCodOriginal().substring(mat.end(), f);
        ArrayList<String> campoNome = new ArrayList<String>();
        FormularioPro formulario;
        // extrair os campos
        Matcher matCampo = patInput.matcher(conteudoForm);
        while (matCampo.find()) {
            String name = regras.getAtributo(matCampo.group(), "name");
            campoNome.add(name);
        }
        matCampo = patSelect.matcher(conteudoForm);
        while (matCampo.find()) {
            String name = regras.getAtributo(matCampo.group(), "name");
            campoNome.add(name);
        }
        matCampo = patTextArea.matcher(conteudoForm);
        while (matCampo.find()) {
            String name = regras.getAtributo(matCampo.group(), "name");
            campoNome.add(name);
        }
        // ordenar os campos por nome
        Collections.sort(campoNome);
        logger.info("campos encontrados...");
        String campos = "";
        for (String c : campoNome) {
            campos += c + "|";
        }
        try {
            URL url = new URL(new URL(pagina.getUrl()), action);
            action = url.toString();
            formulario = formularioDao.find(action, campos);
            if (formulario == null) {
                formulario = new FormularioPro();
                formulario.setAction(action);
                formulario.setCampos(campos);
                logger.info("Salvando o formulario no banco...");
                formularioDao.create(formulario);
            }
            pagina = paginaDao.loadFormularios(pagina);
            if (!pagina.getListaFormulario().contains(formulario)) {
                pagina.getListaFormulario().add(formulario);
            }
        } catch (Exception e) {
            logger.error("Erro ao trabalhar com os daos", e);
        }
    }
    if (achouFormulario) {
        logger.info("Achou formulario(s) em... " + pagina.getUrl());
        paginaDao.update(pagina);
    } else {
        logger.info("Nao achou formulario(s) em... " + pagina.getUrl());
    }
}
