private void loadLandmarks() {
    // load all the lois networks
    String[] nets = Property.getProperty("map.nets").split(" ");
    for (int i = 0; i < nets.length; i++) {
        String key = "map.net." + nets[i];
        String value = Property.takeProperty(key);
        if (value == null)
            continue;
        String[] nodes = value.split(" ");
        if (!nodes[0].equals("lois"))
            continue;
        // First, load all landmarks (and get watches in second pass)
        for (int j = 1; j < nodes.length; j++) {
            String label = nodes[j];
            if (Character.isLetter(label.charAt(0))) {
                // Get the primary landmark reference
                // map.net.lois.L-2829.E 513 888 73.93381676278355 41.72250825396825 Cannavino%20Library
                String landKey = "map.net.lois." + nets[i] + "." + label;
                String[] values = Property.takeProperty(landKey).split(" ");
                Landmark landmark = new Landmark();
                landmark.setKey(landKey);
                landmark.setX(Integer.parseInt(values[0]));
                landmark.setY(Integer.parseInt(values[1]));
                landmark.setDescr(values[4].replaceAll("%20", " "));
                // this.AddSlideShows(landKey,landmark);
                this.addVideos(nets[i], label, landmark);
                landmarks.add(landmark);
                landmarkTable.put(landKey, landmark);
            }
        }
        // Now load the watches linked to landmarks on the tour
        for (int j = 1; j < nodes.length; j++) {
            String label = nodes[j];
            if (Character.isDigit(label.charAt(0))) {
                // map.net.lois.L-2829.1 631 714 73.93284581313131 41.72327457415254 N/A 75.0
                Watch watch = new Watch();
                String akey = "map.net.lois." + nets[i] + "." + label;
                String[] values = Property.takeProperty(akey).split(" ");
                watch.setX(Integer.parseInt(values[0]));
                watch.setY(Integer.parseInt(values[1]));
                // Get radius in meters and convert to pixels
                double radius = Double.parseDouble(values[5]);
                watch.setRadius(GeodeticHelper.metersToPixels(radius, watch.getX(), watch.getY()));
                watch.setLabel(label + "->" + nets[i]);
                // Get the watches extent which is necessarily a landmark
                String extent = "map.net.lois." + nets[i] + "." + label + ".extent";
                String extentName = Property.takeProperty(extent);
                // to a landmark
                if (extentName == null)
                    continue;
                // to is not on the tour, then we won't use this watch
                if (!TourManager.getInstance().currentTour.inPackage(extentName))
                    continue;
                // Point the watch to its landmark
                watch.mLandMark = landmarkTable.get(extentName);
                // Point the landmark to its watch
                watch.mLandMark.mWatches.add(watch);
            }
        }
    }
}
