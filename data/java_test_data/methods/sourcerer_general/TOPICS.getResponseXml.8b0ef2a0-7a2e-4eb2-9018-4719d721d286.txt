// TOPICS
// TOPICS/<bible.xml>/<topic_name>
public String getResponseXml() throws Exception {
    StringBuffer data = new StringBuffer();
    if (m_parameters.length == 1) {
        Connection conn = DBUtils.getConnection();
        PreparedStatement ps = conn.prepareStatement("SELECT TOPIC_NAME FROM BIBLE_TOPICS_MASTER");
        ResultSet rs = ps.executeQuery();
        data.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");
        data.append("<topics>");
        while (rs.next()) {
            data.append("	<topic>" + rs.getString(1) + "</topic>");
        }
        data.append("</topics>");
        rs.close();
        ps.close();
    } else if (m_parameters.length == 3) {
        Bible bible = new Bible();
        bible.loadBible(m_parameters[1]);
        Connection conn = DBUtils.getConnection();
        PreparedStatement ps = conn.prepareStatement("SELECT B.BOOK,B.CHAPTER,B.VERSE_START,B.VERSE_END " + " FROM BIBLE_TOPICS_MASTER A, BIBLE_TOPICS_LIST B " + " WHERE A.TOPIC_ID=B.TOPIC_ID AND A.TOPIC_NAME=?");
        ps.setString(1, m_parameters[2]);
        ResultSet rs = ps.executeQuery();
        data.append("<h1>" + m_parameters[2] + "</h1>");
        while (rs.next()) {
            data.append(bible.getVerseText(rs.getInt(1), rs.getInt(2), rs.getInt(3)));
            data.append(" <span>(" + bible.getLongBookName(rs.getInt(1)) + " " + rs.getInt(2) + ":" + rs.getInt(3) + ")</span>");
            data.append("<br><br>");
        }
        rs.close();
        ps.close();
    }
    return data.toString();
}
