public ActionForward edit(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String username = (String) request.getSession().getAttribute("username");
    if (username != null) {
        RecipeDAO recipeDAO = new RecipeDAO();
        RecipeDTO recipeDTO = recipeDAO.readRecipePostById(request.getParameter("id"));
        DynaValidatorForm recipeForm = (DynaValidatorForm) form;
        recipeForm.set("postID", recipeDTO.getPost().getPostID());
        recipeForm.set("recipeID", recipeDTO.getRecipeID());
        recipeForm.set("title", recipeDTO.getPost().getPostTitle());
        recipeForm.set("free", recipeDTO.getPost().isFree());
        recipeForm.set("ingredient", recipeDTO.getIngredient());
        recipeForm.set("cookingProcedure", recipeDTO.getCookingProcedure());
        recipeForm.set("uploadDate", recipeDTO.getPost().getUploadDate());
        recipeForm.set("postType", recipeDTO.getPost().getPostType());
        recipeForm.set("categoryID", recipeDTO.getCategory().getCategoryID());
        recipeForm.set("imageUrl", recipeDTO.getImagePath());
        CategoryRecipeDAO categoryRecipeDAO = new CategoryRecipeDAO();
        Collection listCategoryRecipe = categoryRecipeDAO.readByAll();
        request.setAttribute("listCategoryRecipe", listCategoryRecipe);
        request.setAttribute("imageUrl", recipeDTO.getImagePath());
        // current menu
        request.setAttribute("from", "recipe");
        return mapping.findForward(SUCCESS);
    } else {
        request.setAttribute("message", "Please Login!");
        return mapping.findForward(LOGIN);
    }
}
