// expressão atribuição
// <expAtribuicao> ::=  * <nome> ( = <termoAtribuicao> |  ++ | - - ) ; |
public boolean expatribuicao(TabelaSimbolos tabelasimbolos) {
    // verifica se é * <nome>
    if (tabelasimbolos.getLookahead().equals("*")) {
        // se for é porque é do tipo
        // * <nome> ( = <termoAtribuicao> |  ++ | - - ) ;
        // 
        // Consome o simbolo *
        tabelasimbolos.reconhecer("*");
        // verifica se é um identificador
        if (tabelasimbolos.getTipo().equals("identificador")) {
            // se for um identificador é da forma
            // * <nome>
            // apenas consome o nome <nome>
            tabelasimbolos.soConsome();
            // verifica se é um ;
            if (tabelasimbolos.getLookahead().equals(";")) {
                // se for logo é da forma
                // Consome o simbolo ;
                tabelasimbolos.reconhecer(";");
                // logo é da forma errada * <nome> ;
                return false;
            // verufica se é um =
            } else if (tabelasimbolos.getLookahead().equals("=")) {
                // daí seria da forma
                // * <nome> = <termoAtribuicao>
                // logo reconhece =
                tabelasimbolos.reconhecer("=");
                // metodo abaixo       "public boolean termoAtribuicao (TabelaSimbolos tabelasimbolos)"
                if (termoAtribuicao(tabelasimbolos)) {
                    // verifica se o proximo é um ;
                    if (tabelasimbolos.getLookahead().equals(";")) {
                        // se for é da forma
                        // * <nome> = <termoAtribuicao> ;
                        // Consome o simbolo ;
                        tabelasimbolos.reconhecer(";");
                        // retorna verdadeiro
                        return true;
                    // não encontrou um ;
                    } else {
                        // logo é erro retorna false ERRO
                        ErroTabela erro = new ErroTabela(tabelasimbolos.getLinha(), "Erro na linha " + tabelasimbolos.getLinha());
                        // Tabela de Erros ja contem o erro. Isso que será impresso na tela.
                        TabelaErros.getInstance().getTabelaErros().add(erro);
                        // se nao achar }
                        return false;
                    }
                // se termoAtribuicao retornar false é porque teve erro em seu nivel - isto é não encontrou um <termoAtribuicao> correto
                } else {
                    // se não é um erro
                    ErroTabela erro = new ErroTabela(tabelasimbolos.getLinha(), "Erro na linha " + tabelasimbolos.getLinha());
                    // Tabela de Erros ja contem o erro. Isso que será impresso na tela.
                    TabelaErros.getInstance().getTabelaErros().add(erro);
                    // se nao achar }
                    return false;
                }
            // verufica se é um ++ ou se é um --
            } else if (tabelasimbolos.getLookahead().equals("++") || tabelasimbolos.getLookahead().equals("--")) {
                // se for então é da forma
                // * <nome> ++ ou da forma * <nome> --
                // logo apenas reconhece o ++ ou --
                tabelasimbolos.soConsome();
                // verifica se o proximo é um ;
                if (tabelasimbolos.getLookahead().equals(";")) {
                    // se for é da forma
                    // <nome> ++ ; ou da forma <nome> -- ;
                    // Consome o simbolo ;
                    tabelasimbolos.reconhecer(";");
                    // retorna verdadeiro
                    return true;
                // aqui é um erro caso não encontre ;
                } else {
                    // logo é erro retorna false ERRO
                    ErroTabela erro = new ErroTabela(tabelasimbolos.getLinha(), "Erro na linha " + tabelasimbolos.getLinha());
                    // Tabela de Erros ja contem o erro. Isso que será impresso na tela.
                    TabelaErros.getInstance().getTabelaErros().add(erro);
                    // se nao achar }
                    return false;
                }
            // nesse ponto verifica se encontrou um <nome> mas depois não encontrou um  = <termoAtribuicao> ou  ++ ou -- ou ;
            } else {
                // se não é um erro
                ErroTabela erro = new ErroTabela(tabelasimbolos.getLinha(), "Erro na linha " + tabelasimbolos.getLinha());
                // Tabela de Erros ja contem o erro. Isso que será impresso na tela.
                TabelaErros.getInstance().getTabelaErros().add(erro);
                // se nao achar }
                return false;
            }
        // esse erro é para caso de depois de um * não vim o nome
        } else {
            // se não é um erro
            ErroTabela erro = new ErroTabela(tabelasimbolos.getLinha(), "Erro na linha " + tabelasimbolos.getLinha());
            // Tabela de Erros ja contem o erro. Isso que será impresso na tela.
            TabelaErros.getInstance().getTabelaErros().add(erro);
            // se nao achar }
            return false;
        }
    // 
    // <nome> ( = <termoAtribuicao2> |  ++ | - - | <acessoStruct> ) ;
    } else {
        // verifica se é um identificador
        if (tabelasimbolos.getTipo().equals("identificador")) {
            // se for um identificador é da forma
            // * <nome>
            // apenas consome o nome <nome>
            tabelasimbolos.soConsome();
            if (tabelasimbolos.getLookahead().equals("[")) {
                while (tabelasimbolos.getLookahead().equals("[")) {
                    if (tabelasimbolos.reconhecer("[")) {
                        if (tabelasimbolos.getTipo().equals("identificador") || tabelasimbolos.getTipo().equals("numero")) {
                            tabelasimbolos.soConsome();
                            if (!tabelasimbolos.reconhecer("]"))
                                return false;
                        } else {
                            ErroTabela erro = new ErroTabela(tabelasimbolos.getLinha(), "Erro na linha " + tabelasimbolos.getLinha());
                            // Tabela de Erros ja contem o erro. Isso que será impresso na tela.
                            TabelaErros.getInstance().getTabelaErros().add(erro);
                            // se nao achar }
                            return false;
                        }
                    } else
                        return false;
                }
            }
            if (tabelasimbolos.getLookahead().equals("->") || tabelasimbolos.getLookahead().equals(".")) {
                tabelasimbolos.soConsome();
                if (tabelasimbolos.getTipo().equals("identificador")) {
                    tabelasimbolos.soConsome();
                } else {
                    ErroTabela erro = new ErroTabela(tabelasimbolos.getLinha(), "Erro na linha " + tabelasimbolos.getLinha());
                    // Tabela de Erros ja contem o erro. Isso que será impresso na tela.
                    TabelaErros.getInstance().getTabelaErros().add(erro);
                    // se nao achar }
                    return false;
                }
            }
            // verifica se é um ;
            if (tabelasimbolos.getLookahead().equals(";")) {
                // se for logo é da forma
                // Consome o simbolo ;
                tabelasimbolos.reconhecer(";");
                // logo é da forma errada  <nome> ;
                return false;
            // verufica se é um =
            } else if (tabelasimbolos.getLookahead().equals("=")) {
                // daí seria da forma
                // <nome> = <termoAtribuicao2>
                // logo reconhece =
                tabelasimbolos.reconhecer("=");
                // metodo abaixo       "public boolean termoAtribuicao (TabelaSimbolos tabelasimbolos)"
                if (termoAtribuicao2(tabelasimbolos)) {
                    // verifica se o proximo é um ;
                    if (tabelasimbolos.getLookahead().equals(";")) {
                        // se for é da forma
                        // <nome> = <termoAtribuicao2> ;
                        // Consome o simbolo ;
                        tabelasimbolos.reconhecer(";");
                        // retorna verdadeiro
                        return true;
                    // não encontrou um ;
                    } else {
                        // logo é erro retorna false ERRO
                        ErroTabela erro = new ErroTabela(tabelasimbolos.getLinha(), "Erro na linha " + tabelasimbolos.getLinha());
                        // Tabela de Erros ja contem o erro. Isso que será impresso na tela.
                        TabelaErros.getInstance().getTabelaErros().add(erro);
                        // se nao achar }
                        return false;
                    }
                // se termoAtribuicao retornar false é porque teve erro em seu nivel - isto é não encontrou um <termoAtribuicao2> correto
                } else {
                    // se não é um erro
                    return false;
                }
            // verufica se é um ++ ou se é um --
            } else if (tabelasimbolos.getLookahead().equals("++") || tabelasimbolos.getLookahead().equals("--")) {
                // se for então é da forma
                // <nome> = <termoAtribuicao2> ++ ou da forma * <nome> = <termoAtribuicao2> --
                // logo apenas reconhece o ++ ou --
                tabelasimbolos.soConsome();
                // verifica se o proximo é um ;
                if (tabelasimbolos.getLookahead().equals(";")) {
                    // se for é da forma
                    // * <nome> = <termoAtribuicao> ;
                    // Consome o simbolo ;
                    tabelasimbolos.reconhecer(";");
                    // retorna verdadeiro
                    return true;
                // aqui é um erro caso não encontre ;
                } else {
                    // logo é erro retorna false ERRO
                    ErroTabela erro = new ErroTabela(tabelasimbolos.getLinha(), "Erro na linha " + tabelasimbolos.getLinha());
                    // Tabela de Erros ja contem o erro. Isso que será impresso na tela.
                    TabelaErros.getInstance().getTabelaErros().add(erro);
                    // se nao achar }
                    return false;
                }
            // 
            // verufica se é um -> ou um .
            } else if (tabelasimbolos.getLookahead().equals("->") || tabelasimbolos.getLookahead().equals(".")) {
                // se for é do tipo
                // <nome> <acessoStruct>  isto é nome->nome ou nome.nome
                // logo so consome -> ou .
                tabelasimbolos.soConsome();
                // cria o obejto struct
                acessoStruct acessoStr = new acessoStruct();
                // daí vai para o método acessoStruct
                if (acessoStr.acessoStruct(tabelasimbolos)) {
                    // verifica se o proximo é um ;
                    if (tabelasimbolos.getLookahead().equals(";")) {
                        // se for é da forma
                        // * <nome> = <termoAtribuicao> ;
                        // Consome o simbolo ;
                        tabelasimbolos.reconhecer(";");
                        // retorna verdadeiro
                        return true;
                    // aqui é um erro caso não encontre ;
                    } else {
                        // logo é erro retorna false ERRO
                        ErroTabela erro = new ErroTabela(tabelasimbolos.getLinha(), "Erro na linha " + tabelasimbolos.getLinha());
                        // Tabela de Erros ja contem o erro. Isso que será impresso na tela.
                        TabelaErros.getInstance().getTabelaErros().add(erro);
                        // se nao achar }
                        return false;
                    }
                // 
                // se não é um erro de acessoStruct isto é acessoStruct mal formado
                } else {
                    // logo é erro retorna false ERRO
                    return false;
                }
            // nesse ponto verifica se encontrou um <nome> mas depois não encontrou um  = <termoAtribuicao> ou  ++ ou -- ou ;
            } else {
                // se não é um erro
                ErroTabela erro = new ErroTabela(tabelasimbolos.getLinha(), "Erro na linha " + tabelasimbolos.getLinha());
                // Tabela de Erros ja contem o erro. Isso que será impresso na tela.
                TabelaErros.getInstance().getTabelaErros().add(erro);
                // se nao achar }
                return false;
            }
        // 
        // esse erro é para caso de depois de um * não vim o nome
        } else {
            // se não é um erro
            ErroTabela erro = new ErroTabela(tabelasimbolos.getLinha(), "Erro na linha " + tabelasimbolos.getLinha());
            // Tabela de Erros ja contem o erro. Isso que será impresso na tela.
            TabelaErros.getInstance().getTabelaErros().add(erro);
            // se nao achar }
            return false;
        }
    // 
    }
// 
}
