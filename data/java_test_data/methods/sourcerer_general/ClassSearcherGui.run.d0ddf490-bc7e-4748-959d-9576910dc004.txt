public void run() {
    wholeProgressBar.setValue(0);
    currentProgressBar.setValue(0);
    wholeProgressLabel.setText("Initializing...");
    try {
        editorKit.insertHTML(document, document.getLength(), "<br>", 0, 0, javax.swing.text.html.HTML.Tag.BR);
        editorKit.insertHTML(document, document.getLength(), "<hr>", 0, 0, javax.swing.text.html.HTML.Tag.HR);
    } catch (BadLocationException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
    int processFileCount = 0;
    for (int i = 0; i < fileList.size(); i++) {
        FileCount fc = new FileCount(fileList.get(i));
        fc.setFilter(new MyFilter());
        processFileCount += fc.getFileCount();
        if (jobCanceled == true) {
            searchJobCanceled();
            return;
        }
    }
    wholeProgressBar.setMaximum(processFileCount);
    for (int i = 0; i < fileList.size(); i++) {
        ClassSearcherGui.this.process(fileList.get(i));
        if (jobCanceled == true) {
            searchJobCanceled();
            return;
        }
    }
    try {
        document.insertString(document.getLength(), "Totally ", null);
        editorKit.insertHTML(document, document.getLength(), "<font color=red>" + matchedCount + "</font> entries were matched.", 0, 0, javax.swing.text.html.HTML.Tag.FONT);
        editorKit.insertHTML(document, document.getLength(), "<br>", 0, 0, javax.swing.text.html.HTML.Tag.BR);
        editorKit.insertHTML(document, document.getLength(), "<hr>", 0, 0, javax.swing.text.html.HTML.Tag.HR);
    } catch (BadLocationException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
    wholeProgressLabel.setText("Job completed!");
    currentProgressLabel.setText("Zip Search Complete.");
    wholeProgressBar.setValue(processFileCount);
    currentProgressBar.setValue(currentProgressBar.getMaximum());
    searchJobCompleted();
}
