private void buildMenu() {
    menuBar = new Menu(sShell, SWT.BAR);
    sShell.setMenuBar(menuBar);
    fileMenuItem = new MenuItem(menuBar, SWT.CASCADE);
    fileMenuItem.setText("File");
    fileMenu = new Menu(sShell, SWT.DROP_DOWN);
    fileMenuItem.setMenu(fileMenu);
    newMenuItem = new MenuItem(fileMenu, SWT.CASCADE);
    newMenuItem.setText("New Conference");
    newMenuItem.addSelectionListener(new ConfAnnounceWindowItemListener());
    entryPaneMenuItem = new MenuItem(fileMenu, SWT.CASCADE);
    entryPaneMenuItem.setText("EasyConf...");
    entryPaneMenuItem.addSelectionListener(new ConfAnnounceWindowItemListener());
    sep = new MenuItem(fileMenu, SWT.SEPARATOR);
    proxyMenuItem = new MenuItem(fileMenu, SWT.CASCADE);
    proxyMenuItem.setText("Internet Proxy Settings...");
    proxyMenuItem.addSelectionListener(new ConfAnnounceWindowItemListener());
    proxyEditorItem = new MenuItem(fileMenu, SWT.CASCADE);
    proxyEditorItem.setText("Edit URL/Local File Mappings...");
    proxyEditorItem.addSelectionListener(new ConfAnnounceWindowItemListener());
    chkDownloadImportsMenuItem = new MenuItem(fileMenu, SWT.CHECK);
    chkDownloadImportsMenuItem.setText("Save Imported Ontologies to Disk");
    chkDownloadImportsMenuItem.addSelectionListener(new ConfAnnounceWindowItemListener());
    if (SettingsManager.getInstance().getDownloadImports()) {
        chkDownloadImportsMenuItem.setSelection(true);
    }
    sep = new MenuItem(fileMenu, SWT.SEPARATOR);
    openOntItem = new MenuItem(fileMenu, SWT.CASCADE);
    openOntItem.setText("Open Conference File...");
    openOntItem.addSelectionListener(new ConfAnnounceWindowItemListener());
    publishItem = new MenuItem(fileMenu, SWT.CASCADE);
    publishItem.setText("Save Conference To File...");
    publishItem.addSelectionListener(new ConfAnnounceWindowItemListener());
    sep = new MenuItem(fileMenu, SWT.SEPARATOR);
    exitMenuItem = new MenuItem(fileMenu, SWT.CASCADE);
    exitMenuItem.setText("E&xit");
    exitMenuItem.addSelectionListener(new ConfAnnounceWindowItemListener());
}
