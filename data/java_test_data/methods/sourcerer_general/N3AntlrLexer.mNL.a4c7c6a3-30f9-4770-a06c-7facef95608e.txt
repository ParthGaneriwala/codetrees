protected final void mNL(boolean _createToken) throws RecognitionException, CharStreamException, TokenStreamException {
    int _ttype;
    Token _token = null;
    int _begin = text.length();
    _ttype = NL;
    int _saveIndex;
    boolean synPredMatched169 = false;
    if (((LA(1) == '\r') && (LA(2) == '\n') && (true))) {
        int _m169 = mark();
        synPredMatched169 = true;
        inputState.guessing++;
        try {
            {
                mNL1(false);
            }
        } catch (RecognitionException pe) {
            synPredMatched169 = false;
        }
        rewind(_m169);
        inputState.guessing--;
    }
    if (synPredMatched169) {
        mNL1(false);
    } else {
        boolean synPredMatched171 = false;
        if (((LA(1) == '\n'))) {
            int _m171 = mark();
            synPredMatched171 = true;
            inputState.guessing++;
            try {
                {
                    mNL2(false);
                }
            } catch (RecognitionException pe) {
                synPredMatched171 = false;
            }
            rewind(_m171);
            inputState.guessing--;
        }
        if (synPredMatched171) {
            mNL2(false);
        } else {
            boolean synPredMatched173 = false;
            if (((LA(1) == '\r') && (true) && (true))) {
                int _m173 = mark();
                synPredMatched173 = true;
                inputState.guessing++;
                try {
                    {
                        mNL3(false);
                    }
                } catch (RecognitionException pe) {
                    synPredMatched173 = false;
                }
                rewind(_m173);
                inputState.guessing--;
            }
            if (synPredMatched173) {
                mNL3(false);
            } else {
                throw new NoViableAltForCharException((char) LA(1), getFilename(), getLine(), getColumn());
            }
        }
    }
    if (_createToken && _token == null && _ttype != Token.SKIP) {
        _token = makeToken(_ttype);
        _token.setText(new String(text.getBuffer(), _begin, text.length() - _begin));
    }
    _returnToken = _token;
}
