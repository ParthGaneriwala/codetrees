void reopen() {
    boolean isNew = false;
    setState(DATABASE_OPENING);
    try {
        nameManager = new HsqlNameManager(this);
        granteeManager = new GranteeManager(this);
        userManager = new UserManager(this);
        schemaManager = new SchemaManager(this);
        persistentStoreCollection = new PersistentStoreCollectionDatabase();
        isReferentialIntegrity = true;
        sessionManager = new SessionManager(this);
        collation = collation.getDefaultInstance();
        dbInfo = DatabaseInformation.newDatabaseInformation(this);
        txManager = new TransactionManager2PL(this);
        lobManager.createSchema();
        sessionManager.getSysLobSession().setSchema(SqlInvariants.LOBS_SCHEMA);
        schemaManager.setSchemaChangeTimestamp();
        // completed metadata
        logger.openPersistence();
        isNew = logger.isNewDatabase;
        if (isNew) {
            String username = urlProperties.getProperty("user", "SA");
            String password = urlProperties.getProperty("password", "");
            userManager.createFirstUser(username, password);
            schemaManager.createPublicSchema();
            lobManager.initialiseLobSpace();
            logger.checkpoint(false);
        }
        lobManager.open();
        dbInfo.setWithContent(true);
    } catch (Throwable e) {
        logger.closePersistence(Database.CLOSEMODE_IMMEDIATELY);
        logger.releaseLock();
        setState(DATABASE_SHUTDOWN);
        clearStructures();
        DatabaseManager.removeDatabase(this);
        if (!(e instanceof HsqlException)) {
            e = Error.error(ErrorCode.GENERAL_ERROR, e);
        }
        logger.logSevereEvent("could not reopen database", e);
        throw (HsqlException) e;
    }
    setState(DATABASE_ONLINE);
}
