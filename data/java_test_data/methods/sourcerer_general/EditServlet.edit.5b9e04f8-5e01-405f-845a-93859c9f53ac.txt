private void edit(HttpServletRequest request, ModelAndView next, WikiPageInfo pageInfo) throws Exception {
    String topicName = WikiUtil.getTopicFromRequest(request);
    String virtualWiki = WikiUtil.getVirtualWikiFromURI(request);
    Topic topic = loadTopic(virtualWiki, topicName);
    // topic name might be updated by loadTopic
    topicName = topic.getName();
    // add by shangchm 20080702
    String categoryId = request.getParameter("categoryId");
    logger.info("edit(HttpServletRequest request, ModelAndView next, WikiPageInfo pageInfo)----categoryId: " + categoryId);
    if (categoryId != null) {
        next.addObject("categoryId", categoryId);
    } else {
        next.addObject("categoryId", "1");
    }
    Integer lastTopicVersionId = retrieveLastTopicVersionId(request, topic);
    next.addObject("lastTopicVersionId", lastTopicVersionId);
    loadEdit(request, next, pageInfo, virtualWiki, topicName, true);
    String contents = null;
    if (isPreview(request)) {
        preview(request, next, pageInfo);
        return;
    }
    if (!StringUtils.isBlank(request.getParameter("topicVersionId"))) {
        pageInfo.setContentJsp(JSP_EDIT);
        // editing an older version
        Integer topicVersionId = new Integer(request.getParameter("topicVersionId"));
        TopicVersion topicVersion = WikiBase.getDataHandler().lookupTopicVersion(topicVersionId.intValue(), null);
        if (topicVersion == null) {
            throw new WikiException(new WikiMessage("common.exception.notopic"));
        }
        contents = topicVersion.getVersionContent();
        if (!lastTopicVersionId.equals(topicVersionId)) {
            next.addObject("topicVersionId", topicVersionId);
        }
    } else if (!StringUtils.isBlank(request.getParameter("section"))) {
        pageInfo.setContentJsp(JSP_EDIT);
        // editing a section of a topic
        int section = (new Integer(request.getParameter("section"))).intValue();
        contents = ParserUtil.parseSlice(request.getContextPath(), request.getLocale(), virtualWiki, topicName, section);
    } else if (topicName.indexOf("Comments:") != -1 || topicName.indexOf("Image comments:") != -1) {
        // scm
        String name = topicName.substring(topicName.indexOf(":") + 1);
        int id = WikiBase.getDataHandler().getTopicIdByName(name);
        List list = WikiBase.getDataHandler().getCommentByTopicId(id);
        request.setAttribute("topicId", String.valueOf(id));
        request.setAttribute("list", list);
        pageInfo.setContentJsp("view-comments.jsp");
    } else {
        // editing a full new or existing topic
        pageInfo.setContentJsp(JSP_EDIT);
        contents = (topic == null) ? "" : topic.getTopicContent();
        request.getSession().setAttribute("title", "δ��������");
        request.getSession().setAttribute("jump", "en/Special:Allpages?type=nonpublic&categoryId=" + categoryId);
    }
    if (contents != null)
        contents = contents.replaceAll("&nbsp;&nbsp;", " ");
    next.addObject("contents", contents);
}
