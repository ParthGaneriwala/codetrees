public void testDelete() throws Exception {
    final Configuration conf = new Configuration();
    MiniDFSCluster cluster = null;
    try {
        cluster = new MiniDFSCluster(conf, 2, true, null);
        final URI nnURI = FileSystem.getDefaultUri(conf);
        final String nnUri = nnURI.toString();
        final FileSystem fs = FileSystem.get(URI.create(nnUri), conf);
        final DistCp distcp = new DistCp(conf);
        final FsShell shell = new FsShell(conf);
        final String srcrootdir = "/src_root";
        final String dstrootdir = "/dst_root";
        {
            // test -delete
            createFiles(nnURI, srcrootdir);
            createFiles(nnURI, dstrootdir);
            create(fs, new Path(dstrootdir, "foo"));
            create(fs, new Path(dstrootdir, "foobar"));
            System.out.println("srcrootdir=" + srcrootdir);
            shell.run(new String[] { "-lsr", srcrootdir });
            System.out.println("dstrootdir=" + dstrootdir);
            shell.run(new String[] { "-lsr", dstrootdir });
            ToolRunner.run(distcp, new String[] { "-delete", "-update", "-log", "/log", nnUri + srcrootdir, nnUri + dstrootdir });
            String srcresults = execCmd(shell, "-lsr", srcrootdir);
            srcresults = removePrefix(srcresults, srcrootdir);
            System.out.println("srcresults=" + srcresults);
            String dstresults = execCmd(shell, "-lsr", dstrootdir);
            dstresults = removePrefix(dstresults, dstrootdir);
            System.out.println("dstresults=" + dstresults);
            assertEquals(srcresults, dstresults);
            deldir(fs, dstrootdir);
            deldir(fs, srcrootdir);
        }
    } finally {
        if (cluster != null) {
            cluster.shutdown();
        }
    }
}
