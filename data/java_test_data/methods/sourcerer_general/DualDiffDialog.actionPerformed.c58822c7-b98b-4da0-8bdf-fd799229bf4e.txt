public void actionPerformed(ActionEvent ae) {
    String basePath = DualDiffDialog.this.baseFileField.getText();
    String newPath = DualDiffDialog.this.newFileField.getText();
    if (basePath.length() == 0 || newPath.length() == 0) {
        GUIUtilities.message(DualDiffDialog.this, "jdiff.two-files-needed", null);
        return;
    }
    VFS vfs = DualDiffDialog.this.view.getBuffer().getVFS();
    String currentDir = vfs.getParentOfPath(DualDiffDialog.this.view.getBuffer().getPath());
    VFS baseVFS = VFSManager.getVFSForPath(basePath);
    VFSFile baseEntry = null;
    try {
        baseEntry = baseVFS._getFile(null, basePath, null);
    } catch (IOException ioe) {
    }
    if (baseEntry == null || baseEntry.getType() != VFSFile.FILE) {
        System.out.println("here!");
        if (!MiscUtilities.isURL(basePath)) {
            basePath = vfs.constructPath(currentDir, basePath);
            try {
                baseEntry = vfs._getFile(null, basePath, null);
            } catch (IOException ioe) {
            }
        }
    }
    VFS newVFS = VFSManager.getVFSForPath(newPath);
    VFSFile newEntry = null;
    try {
        newEntry = newVFS._getFile(null, newPath, null);
    } catch (IOException ioe) {
    }
    if (newEntry == null || newEntry.getType() != VFSFile.FILE) {
        System.out.println("here!");
        if (!MiscUtilities.isURL(newPath)) {
            newPath = vfs.constructPath(currentDir, newPath);
            try {
                newEntry = vfs._getFile(null, newPath, null);
            } catch (IOException ioe) {
            }
        }
    }
    int errCount = 0;
    if (baseEntry == null || baseEntry.getType() != VFSFile.FILE) {
        errCount |= 1;
    }
    if (newEntry == null || newEntry.getType() != VFSFile.FILE) {
        errCount |= 2;
    }
    if (errCount > 0) {
        GUIUtilities.error(view, "jdiff.file-not-found", new Object[] { new Integer(errCount) });
        return;
    }
    DualDiffDialog.this.baseFileField.getModel().addItem(basePath);
    DualDiffDialog.this.newFileField.getModel().addItem(newPath);
    DualDiffDialog.this.dispose();
    // here is where JDiff gets activated
    Buffer baseBuffer = jEdit.openFile(DualDiffDialog.this.view, basePath);
    Buffer newBuffer = jEdit.openFile(DualDiffDialog.this.view, newPath);
    if (baseBuffer == null) {
        GUIUtilities.error(view, "jdiff.file-not-opened", new Object[] { new Integer(0) });
        return;
    }
    if (newBuffer == null) {
        GUIUtilities.error(view, "jdiff.file-not-opened", new Object[] { new Integer(1) });
        return;
    }
    EditPane[] editPanes = DualDiffDialog.this.view.getEditPanes();
    if (editPanes.length != 2) {
        if (editPanes.length > 2) {
            DualDiffDialog.this.view.unsplit();
        }
        DualDiffDialog.this.view.splitVertically();
        editPanes = DualDiffDialog.this.view.getEditPanes();
    }
    editPanes[0].setBuffer(baseBuffer);
    editPanes[1].setBuffer(newBuffer);
    if (!DualDiff.isEnabledFor(DualDiffDialog.this.view)) {
        DualDiff.toggleFor(DualDiffDialog.this.view);
    }
}
