public void testDoubleComplex() {
    PreparedStatement ps = null;
    ResultSet rs = null;
    try {
        ps = netConn.prepareStatement("INSERT INTO alltypes(id, r) VALUES(?, ?)");
        ps.setInt(1, 3);
        ps.setDouble(2, 876.54D);
        assertEquals(1, ps.executeUpdate());
        ps.setInt(1, 4);
        assertEquals(1, ps.executeUpdate());
        ps.close();
        netConn.commit();
        ps = netConn.prepareStatement("SELECT * FROM alltypes WHERE r = ?");
        ps.setDouble(1, 876.54D);
        rs = ps.executeQuery();
        assertTrue("Got no rows with r = 876.54D", rs.next());
        assertEquals(Double.class, rs.getObject("r").getClass());
        assertTrue("Got only one row with r = 876.54D", rs.next());
        assertEquals(876.54D, rs.getDouble("r"), 0D);
        assertFalse("Got too many rows with r = 876.54D", rs.next());
    } catch (SQLException se) {
        junit.framework.AssertionFailedError ase = new junit.framework.AssertionFailedError(se.getMessage());
        ase.initCause(se);
        throw ase;
    } finally {
        try {
            if (rs != null) {
                rs.close();
            }
            if (ps != null) {
                ps.close();
            }
        } catch (Exception e) {
        }
    }
}
