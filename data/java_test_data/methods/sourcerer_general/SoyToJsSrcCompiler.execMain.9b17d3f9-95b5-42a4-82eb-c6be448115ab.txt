private void execMain(String[] args) throws IOException, SoySyntaxException {
    CmdLineParser cmdLineParser = MainClassUtils.parseFlags(this, args, USAGE_PREFIX);
    if (arguments.size() == 0) {
        MainClassUtils.exitWithError("Must provide list of Soy files.", cmdLineParser, USAGE_PREFIX);
    }
    if (outputPathFormat.length() == 0) {
        MainClassUtils.exitWithError("Must provide the output path format.", cmdLineParser, USAGE_PREFIX);
    }
    Injector injector = MainClassUtils.createInjector(messagePluginModule, pluginModules);
    // Create SoyJsSrcOptions.
    SoyJsSrcOptions jsSrcOptions = new SoyJsSrcOptions();
    jsSrcOptions.setCodeStyle(codeStyle);
    jsSrcOptions.setShouldGenerateJsdoc(shouldGenerateJsdoc);
    jsSrcOptions.setShouldProvideRequireSoyNamespaces(shouldProvideRequireSoyNamespaces);
    jsSrcOptions.setShouldDeclareTopLevelNamespaces(shouldDeclareTopLevelNamespaces);
    jsSrcOptions.setBidiGlobalDir(bidiGlobalDir);
    // Create SoyFileSet.
    SoyFileSet.Builder sfsBuilder = injector.getInstance(SoyFileSet.Builder.class);
    String inputPrefixStr = inputPrefix;
    for (String arg : arguments) {
        sfsBuilder.add(new File(inputPrefixStr + arg));
    }
    String cssHandlingSchemeUc = cssHandlingScheme.toUpperCase();
    sfsBuilder.setCssHandlingScheme(cssHandlingSchemeUc.equals("GOOG") ? CssHandlingScheme.BACKEND_SPECIFIC : CssHandlingScheme.valueOf(cssHandlingSchemeUc));
    sfsBuilder.setSafePrintTagsInferenceLevel(SafePrintTagsInferenceLevel.valueOf(safePrintTagsInferenceLevel.toUpperCase()));
    if (compileTimeGlobalsFile.length() > 0) {
        sfsBuilder.setCompileTimeGlobals(new File(compileTimeGlobalsFile));
    }
    SoyFileSet sfs = sfsBuilder.build();
    // Compile.
    if (locales.size() == 0) {
        // Not generating localized JS.
        sfs.compileToJsSrcFiles(outputPathFormat, inputPrefix, jsSrcOptions, locales, null);
    } else {
        // Generating localized JS.
        sfs.compileToJsSrcFiles(outputPathFormat, inputPrefix, jsSrcOptions, locales, messageFilePathFormat);
    }
}
