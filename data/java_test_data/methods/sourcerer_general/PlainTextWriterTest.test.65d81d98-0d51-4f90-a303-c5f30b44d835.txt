@Test
public void test() throws Exception {
    try {
        AnalysisEngineFactory.createPrimitive(PlainTextWriter.class, typeSystemDescription);
        Assert.fail("expected exception with output directory not specified");
    } catch (ResourceInitializationException e) {
    }
    AnalysisEngine engine = AnalysisEngineFactory.createPrimitive(PlainTextWriter.class, typeSystemDescription, PlainTextWriter.PARAM_OUTPUT_DIRECTORY_NAME, this.outputDirectory.getPath());
    String text = "What if we built a large\r\n, wooden badger?";
    tokenBuilder.buildTokens(jCas, text, "What if we built a large \n, wooden badger ?", "WDT TO PRP VBN DT JJ , JJ NN .");
    ViewURIUtil.setURI(jCas, new File("identifier").toURI());
    engine.process(jCas);
    engine.collectionProcessComplete();
    File outputFile = new File(this.outputDirectory, "identifier.txt");
    String actualText = FileUtils.file2String(outputFile);
    Assert.assertEquals(text, actualText);
    jCas.reset();
    text = "What if we built a large\n, wooden badger?";
    tokenBuilder.buildTokens(jCas, text, "What if we built a large \n, wooden badger ?", "WDT TO PRP VBN DT JJ , JJ NN .");
    ViewURIUtil.setURI(jCas, new File("1234").toURI());
    engine.process(jCas);
    engine.collectionProcessComplete();
    outputFile = new File(this.outputDirectory, "1234.txt");
    actualText = FileUtils.file2String(outputFile);
    Assert.assertEquals(text, actualText);
}
