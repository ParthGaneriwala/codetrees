protected void dragTo(Point position, Point origin) {
    if (panel.isFloatable() == true) {
        try {
            if (dragWindow == null)
                dragWindow = createDragWindow(panel);
            Point offset = dragWindow.getOffset();
            if (offset == null) {
                Dimension size = panel.getPreferredSize();
                offset = new Point(size.width / 2, size.height / 2);
                dragWindow.setOffset(offset);
            }
            Point global = new Point(origin.x + position.x, origin.y + position.y);
            Point dragPoint = new Point(global.x - offset.x, global.y - offset.y);
            if (dockingSource == null)
                dockingSource = panel.getParent();
            constraintBeforeFloating = calculateConstraint();
            Point dockingPosition = dockingSource.getLocationOnScreen();
            Point comparisonPoint = new Point(global.x - dockingPosition.x, global.y - dockingPosition.y);
            if (canDock(dockingSource, comparisonPoint)) {
                dragWindow.setBackground(getDockingColor());
                String constraint = getDockingConstraint(dockingSource, comparisonPoint);
                dragWindow.setBorderColor(dockingBorderColor);
            } else {
                dragWindow.setBackground(getFloatingColor());
                dragWindow.setBorderColor(floatingBorderColor);
            }
            dragWindow.setLocation(dragPoint.x, dragPoint.y);
            if (dragWindow.isVisible() == false) {
                Dimension size = panel.getPreferredSize();
                dragWindow.setSize(size.width, size.height);
                dragWindow.setVisible(true);
            }
        } catch (IllegalComponentStateException e) {
        }
    }
}
