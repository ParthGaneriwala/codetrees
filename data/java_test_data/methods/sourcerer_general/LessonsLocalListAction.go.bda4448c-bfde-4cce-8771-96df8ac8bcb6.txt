@Override
protected String go() throws Exception {
    String nianshen = CommonDatas.SysParameter.get("nianshen").toString();
    // 起始时间是现在的时间基础上加1
    Date temp = dfdate.parse(nowselectyear + "-" + nianshen);
    // 年审时间的基础上加1的毫秒值
    long time = temp.getTime() + 24 * 60 * 60 * 1000;
    // 得到这个时间
    temp.setTime(time);
    this.from = dfdate.format(temp);
    this.end = (nowselectyear + 1) + "-" + nianshen;
    // Date _from = dftime.parse(from + " 0:0:0");
    // Date _from = temp;
    // Date _end = dftime.parse(end + " 23:59:59");
    BasicService service = (BasicService) this.getBean("basicService");
    DetachedCriteria detachedCriteria = DetachedCriteria.forClass(Lessons.class).add(Restrictions.isNotNull("lessoncontent"));
    ;
    // detachedCriteria.add(Restrictions.isNull("onlinefile"));
    if (year != -1)
        detachedCriteria.add(Restrictions.between("lessondate", from + " 00:00", end + " 23:59"));
    detachedCriteria.addOrder(Order.desc("lessonid"));
    this.page = service.findPageByCriteria(detachedCriteria, pageSize, pageNo);
    detachedCriteria = DetachedCriteria.forClass(Lessonbaoming.class).createAlias("lessons", "lessons").add(Restrictions.eq("userid", this.getLoginUser().getUserid()));
    detachedCriteria.setResultTransformer(CriteriaSpecification.ALIAS_TO_ENTITY_MAP);
    List _baominglist = service.findAllByCriteria(detachedCriteria);
    List baominglist = new ArrayList();
    for (int i = 0; i < _baominglist.size(); i++) {
        Map map = (Map) _baominglist.get(i);
        // debug("=======map"+map);
        Lessons lessons = (Lessons) map.get("lessons");
        // 这个人所有已经报名了的课程
        baominglist.add(lessons.getLessonid());
    }
    List _list = page.getItems();
    for (int i = 0; i < _list.size(); i++) {
        Lessons lessons = (Lessons) _list.get(i);
        if (baominglist.contains(lessons.getLessonid())) {
            // 已经报名了
            lessons.setBaominguser(1);
        }
        this.lessonList.add(lessons);
    }
    return SUCCESS;
}
