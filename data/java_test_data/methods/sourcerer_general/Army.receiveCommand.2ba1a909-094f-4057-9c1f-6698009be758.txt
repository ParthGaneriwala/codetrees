public void receiveCommand(ActionType at) {
    if (mission == null) {
        if (at.getMissionToggle()) {
            mission = new Mission(this);
            inMission = false;
        } else {
            Direction d = MoveDirectionUtility.getDirection(at);
            if (d != null)
                move(d);
            else if (at == ActionType.ATTACK) {
                Position myPos = Location.getPosition(this);
                GameFlowControl gfc = GameFlowControl.getInstance();
                Position target = gfc.getCursorPosition();
                Arena.mortalKombat(this, target, myPos);
            } else {
                System.out.println(at + " action requested...");
                RequestListener r = getRL(at);
                if (r != null)
                    r.execute();
            }
            updateStats();
        }
    } else if (!inMission) {
        if (at.getMissionToggle()) {
            if (mission.isEmpty())
                mission = null;
            else
                mission.finalize();
        } else {
            mission.pushCommand(at);
        }
    } else {
        ActionResult ares = ActionResult.IMPOSSIBLE;
        Direction d = MoveDirectionUtility.getDirection(at);
        if (d != null) {
            ares = move(d);
        } else if (at == ActionType.ATTACK) {
            Position myPos = Location.getPosition(this);
            GameFlowControl gfc = GameFlowControl.getInstance();
            Position target = gfc.getCursorPosition();
            Arena.mortalKombat(this, target, myPos);
        } else {
            System.out.println(at + " action requested...");
            RequestListener r = getRL(at);
            if (r != null)
                ares = r.execute();
            updateStats();
        }
        if (ares == ActionResult.SUCCESS) {
            if (!mission.isEmpty()) {
                mission.popCommand();
            } else {
                mission = null;
                inMission = false;
            }
        } else if (ares == ActionResult.FAILED) {
            mission.rewind();
        } else {
            mission = null;
            inMission = false;
        }
    }
}
