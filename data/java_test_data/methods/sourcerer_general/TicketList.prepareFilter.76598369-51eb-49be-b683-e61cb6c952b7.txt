private int prepareFilter(PreparedStatement pst) throws SQLException {
    int i = 0;
    if (enteredBy > -1) {
        pst.setInt(++i, enteredBy);
    }
    if (description != null) {
        pst.setString(++i, description);
    }
    if (forReview == Constants.TRUE) {
        pst.setBoolean(++i, true);
    }
    if (orgId > -1) {
        pst.setInt(++i, orgId);
    }
    if (department > -1) {
        pst.setInt(++i, department);
    }
    if (assignedTo > -1) {
        pst.setInt(++i, assignedTo);
    }
    if (excludeAssignedTo > -1) {
        pst.setInt(++i, excludeAssignedTo);
    }
    if (severity > 0) {
        pst.setInt(++i, severity);
    }
    if (priority > 0) {
        pst.setInt(++i, priority);
    }
    if (projectId > 0) {
        pst.setInt(++i, projectId);
    }
    if (linkProjectId > 0) {
        pst.setInt(++i, linkProjectId);
    }
    if (forProjectUser > -1) {
        pst.setInt(++i, forProjectUser);
    }
    if (ownTickets != -1) {
        pst.setInt(++i, ownTickets);
        pst.setInt(++i, ownTickets);
    }
    if (catCode != -1) {
        pst.setInt(++i, catCode);
    }
    if (alertRangeStart != null) {
        pst.setTimestamp(++i, alertRangeStart);
    }
    if (alertRangeEnd != null) {
        pst.setTimestamp(++i, alertRangeEnd);
    }
    // No sync, but still need to factor in age
    if (minutesOlderThan > 0) {
        Calendar now = Calendar.getInstance();
        now.add(Calendar.MINUTE, minutesOlderThan - (2 * minutesOlderThan));
        java.sql.Timestamp adjustedDate = new java.sql.Timestamp(now.getTimeInMillis());
        pst.setTimestamp(++i, adjustedDate);
    }
    if (searchText != null && !(searchText.equals(""))) {
        pst.setString(++i, searchText);
        pst.setString(++i, searchText);
        pst.setString(++i, searchText);
    }
    return i;
}
