@SuppressWarnings("unchecked")
private void switchToGroupDetailPane() {
    GrantedAuthority group = (GrantedAuthority) groupList.getSelectedItem().getValue();
    groupNameLabel.setValue(group.getAuthority());
    groupMembersListbox.getItems().clear();
    List<String> members = PermissionsManager.getInstance().getGroupMembers(group);
    for (String member : members) {
        Listitem item = new Listitem();
        item.setLabel(member);
        groupMembersListbox.getItems().add(item);
    }
    groupPermissionsListbox.getItems().clear();
    Map<CSPath, PermissionToken> permissions = PermissionsManager.getInstance().getGroupPermissions(group);
    for (CSPath path : permissions.keySet()) {
        PermissionToken permission = permissions.get(path);
        Listitem item = new Listitem();
        item.setValue(permission);
        Listcell pathCell = new Listcell();
        pathCell.setLabel(path.getQualifiedPath());
        item.appendChild(pathCell);
        Listcell readCell = new Listcell();
        item.appendChild(readCell);
        Checkbox checkbox = new Checkbox();
        checkbox.setName("read_" + path);
        checkbox.setChecked(permission.allowsRead());
        checkbox.addEventListener("onCheck", permissionEventListener);
        readCell.appendChild(checkbox);
        Listcell writeCell = new Listcell();
        item.appendChild(writeCell);
        checkbox = new Checkbox();
        checkbox.setName("write_" + path);
        checkbox.setChecked(permission.allowsWrite());
        checkbox.addEventListener("onCheck", permissionEventListener);
        writeCell.appendChild(checkbox);
        groupPermissionsListbox.getItems().add(item);
    }
    userDetailPane.setVisible(false);
    groupDetailPane.setVisible(true);
}
