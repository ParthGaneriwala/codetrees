@SuppressWarnings({ "unchecked" })
public void contextInitialized(ServletContextEvent event) {
    log.debug("initializing context...");
    ServletContext context = event.getServletContext();
    // Orion starts Servlets before Listeners, so check if the config
    // object already exists
    Map<String, Object> config = (HashMap<String, Object>) context.getAttribute(Constants.CONFIG);
    if (config == null) {
        config = new HashMap<String, Object>();
    }
    if (context.getInitParameter(Constants.CSS_THEME) != null) {
        config.put(Constants.CSS_THEME, context.getInitParameter(Constants.CSS_THEME));
    }
    ApplicationContext ctx = WebApplicationContextUtils.getRequiredWebApplicationContext(context);
    boolean encryptPassword = false;
    try {
        ProviderManager provider = (ProviderManager) ctx.getBean("authenticationManager");
        for (Object o : provider.getProviders()) {
            AuthenticationProvider p = (AuthenticationProvider) o;
            if (p instanceof RememberMeAuthenticationProvider) {
                config.put("rememberMeEnabled", Boolean.TRUE);
            }
        }
        if (ctx.containsBean("passwordEncoder")) {
            encryptPassword = true;
            config.put(Constants.ENCRYPT_PASSWORD, Boolean.TRUE);
            String algorithm = "SHA";
            if (ctx.getBean("passwordEncoder") instanceof Md5PasswordEncoder) {
                algorithm = "MD5";
            }
            config.put(Constants.ENC_ALGORITHM, algorithm);
        }
    } catch (NoSuchBeanDefinitionException n) {
        log.debug("authenticationManager bean not found, assuming test and ignoring...");
    // ignore, should only happen when testing
    }
    context.setAttribute(Constants.CONFIG, config);
    // output the retrieved values for the Init and Context Parameters
    if (log.isDebugEnabled()) {
        log.debug("Remember Me Enabled? " + config.get("rememberMeEnabled"));
        log.debug("Encrypt Passwords? " + encryptPassword);
        if (encryptPassword) {
            log.debug("Encryption Algorithm: " + config.get(Constants.ENC_ALGORITHM));
        }
        log.debug("Populating drop-downs...");
    }
    setupContext(context);
}
