@Override
public Uri insert(Uri url, ContentValues initialValues) {
    long rowID;
    ContentValues values;
    if (initialValues != null) {
        values = new ContentValues(initialValues);
    } else {
        values = new ContentValues();
    }
    Long now;
    Resources r;
    int matchedUrl = URL_MATCHER.match(url);
    switch(matchedUrl) {
        case ZONES:
            now = Long.valueOf(System.currentTimeMillis());
            r = Resources.getSystem();
            validateZone(values, now, r);
            rowID = mDB.insert("zones", "zone", values);
            if (rowID > 0) {
                Uri uri = ContentUris.withAppendedId(ZeusDB.Zones.CONTENT_URI, rowID);
                getContext().getContentResolver().notifyChange(uri, null);
                return uri;
            }
            break;
        case MESSAGES:
            now = Long.valueOf(System.currentTimeMillis());
            r = Resources.getSystem();
            validateMessage(values, now, r);
            rowID = mDB.insert("messages", "message", values);
            if (rowID > 0) {
                Uri uri = ContentUris.withAppendedId(ZeusDB.Messages.CONTENT_URI, rowID);
                getContext().getContentResolver().notifyChange(uri, null);
                return uri;
            }
            break;
        case PROMPTS:
            now = Long.valueOf(System.currentTimeMillis());
            r = Resources.getSystem();
            validatePrompt(values, now, r);
            rowID = mDB.insert("prompts", "prompt", values);
            if (rowID > 0) {
                Uri uri = ContentUris.withAppendedId(ZeusDB.Prompts.CONTENT_URI, rowID);
                getContext().getContentResolver().notifyChange(uri, null);
                return uri;
            }
            break;
        case LISTS:
            now = Long.valueOf(System.currentTimeMillis());
            r = Resources.getSystem();
            validateList(values, now, r);
            rowID = mDB.insert("lists", "list", values);
            if (rowID > 0) {
                Uri uri = ContentUris.withAppendedId(ZeusDB.Lists.CONTENT_URI, rowID);
                getContext().getContentResolver().notifyChange(uri, null);
                return uri;
            }
            break;
        default:
            throw new IllegalArgumentException("Unknown URL " + url);
    }
    throw new SQLException("Failed to insert row into " + url);
}
