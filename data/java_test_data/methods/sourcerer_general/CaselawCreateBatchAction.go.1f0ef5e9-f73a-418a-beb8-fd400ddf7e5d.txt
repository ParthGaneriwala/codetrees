@Override
protected String go() throws JDBCException, HibernateException {
    // TODO Auto-generated method stub
    System.out.println(fileName);
    System.out.println(file);
    if (fileName != null && !"".equals(fileName)) {
        String extendPath = "/uploads/";
        String name = new java.text.SimpleDateFormat("yyyyMMddHHmmss").format(new java.util.Date());
        String toPath = ServletActionContext.getServletContext().getRealPath("") + extendPath;
        String ext = getExtention(fileName);
        String filename = name + ext;
        try {
            // 创建目录
            FileUtils.forceMkdir(new File(toPath));
            File dest = new File(toPath + filename);
            // 移动文件
            FileUtils.copyFile(file, dest);
            if (!ext.equalsIgnoreCase(".xls")) {
                message = "上次的文件必须为.xls格式文件";
                FileUtils.forceDelete(dest);
                return ERROR;
            } else {
                // 将上传的文件保存
                TlawFiles file = new TlawFiles();
                file.setFilename(filename);
                file.setPath(toPath + filename);
                file.setRemarks("批量上传的诉讼案件");
                file.setUploadtime(new java.sql.Timestamp(System.currentTimeMillis()));
                file.setUploaduserid(this.curuser.getUserid());
                file.setUploadusername(this.curuser.getUsername());
                file.setType(1);
                file.setNodeid(21001);
                file.setActionid(0);
                getSession().save(file);
                long fileid = file.getFileid();
                try {
                    List list = LawcaseCreateBatch.save(dest, this.curuser, fileid, getSession());
                    if (list != null && list.size() > 0) {
                        message = "下列案件导入错误，如需继续，请手动录入：<br>";
                        for (Object obj : list) {
                            message = message + obj.toString() + "<br>";
                        }
                    } else {
                        message = "批量案件导入成功,请返回";
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    this.message = "文件解析错误,请重试:" + e.getMessage();
                    FileUtils.forceDelete(dest);
                    return "message";
                }
            }
        } catch (IOException e) {
            message = "上传委托文件错误：" + e.getMessage();
            return ERROR;
        }
    } else {
        message = "上传文件不能为空";
        return ERROR;
    }
    this.message = "案件上传保存处理成功";
    this.nextpage = "newcaseList.action";
    return SUCCESS;
}
