public void processaArquivo(File arquivo) throws Exception {
    FileReader reader = new FileReader(arquivo);
    BufferedReader leitor = new BufferedReader(reader);
    String linha = "";
    boolean enconctrouIncricao = false;
    Concurso concurso = (Concurso) getObjDados();
    int quantidadeProvas = 0;
    while ((linha = leitor.readLine()) != null) {
        String numeroInscricao = linha.substring(0, 7);
        String questoesProva = linha.substring(7, 47);
        /* Procura pelo candidato */
        for (Candidato candidatoCadastrado : concurso.getCandidato()) {
            if (candidatoCadastrado.getNumeroInscricao().equals(numeroInscricao)) {
                Candidato candidatoProva = new Candidato();
                candidatoProva.setNumeroInscricao(candidatoCadastrado.getNumeroInscricao());
                candidatoProva.setNome(candidatoCadastrado.getNome());
                candidatoProva.setCargo(candidatoCadastrado.getCargo());
                for (int i = 0; i < questoesProva.length(); i++) {
                    /* 
						 * Se a quest�o n�o foi preenchida, registra a resposta
						 * 
						 *  'Z' -> Quest�o n�o preenchida pelo candidato
						 */
                    QuestaoProvaObjetiva questao = new QuestaoProvaObjetiva();
                    if (i < 9) {
                        questao.setNumeroQuestao("0" + (i + 1));
                    } else {
                        questao.setNumeroQuestao(String.valueOf(i + 1));
                    }
                    if ((questoesProva.charAt(i) == 'A') || (questoesProva.charAt(i) == 'B') || (questoesProva.charAt(i) == 'C') || (questoesProva.charAt(i) == 'D') || (questoesProva.charAt(i) == 'E')) {
                        questao.setResposta(String.valueOf(questoesProva.charAt(i)));
                    } else {
                        questao.setResposta(String.valueOf('N'));
                    }
                    candidatoProva.getProvaObjetiva().addQuestaoProvaObjetiva(questao);
                }
                quantidadeProvas++;
                enconctrouIncricao = true;
                getListaCandidatos().add(candidatoProva);
                break;
            }
        }
        if (enconctrouIncricao) {
            // getLblArquivoRegistro().setText("Quantidade " + quantidadeProvas);
            enconctrouIncricao = false;
        } else {
            throw new Exception("Inscri��o n�o encontrada : " + numeroInscricao);
        }
    }
    preencheGridProvaObjetiva();
    leitor.close();
    reader.close();
    pack();
}
