public String edit() {
    System.out.println("LaundryRequestItemAction -> edit()");
    laundryRequest = ((LaundryRequest) getSession().getAttribute("laundryRequest"));
    listTradeMark = seamStorageManager.findEnablesTradeMark();
    pantDesignWithoutMSs = new HashSet<PantDesignWithoutModelSize>();
    if (getSession().getAttribute("tradeMarkId") != null) {
        tradeMark = tradeMarkManager.get((Long) getSession().getAttribute("tradeMarkId"));
        pantDesigns = seamStorageManager.findByTradeMark(tradeMark.getId());
        for (Iterator<PantDesign> it = pantDesigns.iterator(); it.hasNext(); ) {
            PantDesign pd = it.next();
            PantDesignWithoutModelSize pdwmsAux = new PantDesignWithoutModelSize();
            pdwmsAux.setId(pd.getMaterial().getId() + "-" + pd.getModel().getId());
            pdwmsAux.setMaterial(pd.getMaterial());
            pdwmsAux.setModel(pd.getModel());
            pantDesignWithoutMSs.add(pdwmsAux);
        }
    }
    if (getSession().getAttribute("pdwms") != null) {
        pdwms = (PantDesignWithoutModelSize) getSession().getAttribute("pdwms");
    }
    modelSizes = ((Set<ModelSize>) getSession().getAttribute("modelSizes"));
    laundryTypes = laundryTypeManager.getAll();
    if (id != null) {
        laundryRequestItem = laundryRequestItemManager.get(id);
        pantDesign = laundryRequestItem.getLaundryItems().get(0).getPantDesign();
        // Verificacion si existe prendas creadas en almacen de costura
        if (existNull(seamStoragesAvailable)) {
            errorMessage("No existe prendas creadas en el almacen de costura");
            return "error";
        }
        laundryItems = laundryItemManager.findByOrderSize(laundryRequestItem.getId());
        quantities = new String[modelSizes.size()];
        for (int i = 0; i < modelSizes.size(); i++) {
            quantities[i] = laundryItems.get(i).getQuantity() + "";
        }
        getSession().setAttribute("pantDesign", pantDesign);
        getSession().setAttribute("seamStoragesAvailable", seamStoragesAvailable);
    } else {
        laundryRequestItem = ((LaundryRequestItem) getSession().getAttribute("laundryRequestItem"));
        // verify if was sended to reload
        if (laundryRequestItem != null) {
            // pantDesign = (PantDesign) getSession().getAttribute("pantDesign");
            seamStoragesAvailable = ((List<SeamStorage>) getSession().getAttribute("seamStoragesAvailable"));
            if (seamStoragesAvailable != null) {
                // Verificacion si existe prendas creadas en almacen de costura
                if (existNull(seamStoragesAvailable)) {
                    errorMessage("No existe prendas creadas en el almacen de costura");
                    return "error";
                }
                quantitiesIndex = new ArrayList<Integer>();
                quantities = new String[modelSizes.size()];
                int i = 0;
                for (Iterator it = modelSizes.iterator(); it.hasNext(); i++) {
                    ModelSize mSizes = (ModelSize) it.next();
                    int index = 0;
                    for (SeamStorage seamStorage : seamStoragesAvailable) {
                        if (seamStorage.getPantDesign().getModelSize().equals(mSizes)) {
                            break;
                        }
                        index++;
                    }
                    if (seamStoragesAvailable.size() == index) {
                        quantities[i] = 0 + "";
                    } else {
                        quantities[i] = seamStoragesAvailable.get(index).getStock() + "";
                        quantitiesIndex.add(i);
                    }
                    quantitiesUser = quantities;
                }
                getSession().setAttribute("quantities", quantities);
                getSession().setAttribute("quantitiesIndex", quantitiesIndex);
            }
        } else {
            laundryRequestItem = new LaundryRequestItem();
            laundryRequestItem.setQuantity(0);
            laundryRequestItem.setFailQuantity(0);
            laundryRequestItem.setUnitTotalPrice(0D);
            laundryRequestItem.setFailUnitPrice(0D);
            getSession().setAttribute("laundryRequestItem", laundryRequestItem);
        }
    }
    System.out.println("LaundryRequestItemAction -> end edit()");
    return SUCCESS;
}
