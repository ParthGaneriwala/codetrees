private BeliefFunction processThisNode(DefaultMutableTreeNode node, ClassifiedRaster cr) {
    BeliefFunction bf = cr.getBeliefFunction();
    String s = cr.getTempString().substring(0, 1);
    int depth = 0;
    boolean isRoot = false;
    if (s.equalsIgnoreCase("r")) {
        // the "r" comes from the word "root", so this is the root node of the tree.
        depth = -1;
        isRoot = true;
    } else {
        depth = Integer.parseInt(s);
    }
    // System.out.println(cr.getTempString() + " is supposedly at a depth of " + depth);
    float[][] myRaster = cr.getRaster();
    for (int i = depth + 1; i < binaries.length; i++) {
        float[][] prime = generatePrimeRaster(myRaster, binaryRasters[i], isRoot);
        if (prime != null) {
            classifier.setRaster(prime);
            String[] names = classifier.getClassNames();
            double[] classes = classifier.classifyProb();
            BeliefFunction bf2 = new BeliefFunction(names);
            bf2.addSingletons(classes, names);
            try {
                bf = combine.combineShafer(bf, bf2);
            } catch (DSTotalConflictException dtce) {
                bf = new BeliefFunction(names);
                double[] nans = new double[names.length];
                Arrays.fill(nans, Double.NaN);
                bf.addSingletons(nans, names);
            }
            cr.setBeliefFunction(bf);
        }
    }
    return bf;
}
