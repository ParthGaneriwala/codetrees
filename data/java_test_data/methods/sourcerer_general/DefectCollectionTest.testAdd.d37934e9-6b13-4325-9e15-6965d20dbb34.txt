public void testAdd() throws Exception {
    // Black box testing of the add(Defect) and add(String, User) methods.
    // Set up a defect and user for use in cases.
    User user = new User("bob", "");
    Defect defect = new Defect("title", user);
    int defectId = defect.getID().toInt();
    /* 
		 * NOTE!
		 * For these testAdd() cases, Boundary Value Analysis will be a subset of Equivalence Partitioning,
		 * as the only meaningful BVA I can do is with a String that is empty, 1 char long, or many chars long.
		 */
    /*
			1. add(Defect) Equivalence Partitions:
				Defect can be: a) null
				               b) not present in the collection
				               c) present in the collection
		*/
    // 1a. null - violates precondition so action is unpredictable, but at least it shouldn't die.
    defects.add(null);
    assertNull(defects.find(defectId));
    // 1b. a Defect _not_ in the Collection - add should be successful and find should locate it.
    assertTrue(defects.add(defect));
    assertNotNull(defects.find(defectId));
    // 1c. a Defect _in_ the collection - add should be successful and find should locate it.
    assertFalse(defects.add(defect));
    assertNotNull(defects.find(defectId));
    // 2a. Null Title (violates precondition)
    try {
        defects.add(null, user);
        fail();
    } catch (ConstraintViolationException e) {
    }
    // Covers BVA: String with 0 chars
    try {
        defects.add("", user);
        fail();
    } catch (ConstraintViolationException e) {
    }
    // 2c. null User (violates precondition)
    try {
        defects.add("title", null);
        fail();
    } catch (ConstraintViolationException e) {
    }
    // 2d. NullUser Object (violates precondition)
    try {
        defects.add("title", new NullUser());
        fail();
    } catch (ConstraintViolationException e) {
    }
    // 2e. Title with 1 character and valid user.
    // Covers BVA: Title with 1 char
    assertNotNull(defects.add("a", user));
    // 2f. Title with many characters covering multiple partitions (well, every char in extended ascii)
    // Covers BVA: Title with many chars
    StringBuilder str = new StringBuilder();
    for (int i = 1; i < 255; i++) {
        str.append((char) i);
    }
    String title = str.toString();
    assertNotNull(defects.add(title, user));
}
