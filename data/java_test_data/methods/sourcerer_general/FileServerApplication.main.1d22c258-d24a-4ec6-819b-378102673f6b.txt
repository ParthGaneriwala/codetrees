public static void main(String[] args) {
    FileServerApplication myRef;
    Short ProxyPort = 4096;
    Short ServerPort = 2048;
    boolean Interactive;
    if (args.length < 6) {
        System.out.println("ERROR: Invalid number of command-line parameters");
        System.out.println("Usage: cmd <DNS IP-addr> <Proxy-IP> <yes/no> \"<Network Connection Name>\" <Default Gateway> <Network Mask> [Proxy-port] [Server-port]");
        System.out.println("yes/no selects wether to do training sessions in interactive mode");
        return;
    }
    String DNSServer = new String(args[0]);
    System.out.println("DNS Server is " + DNSServer);
    String ProxyIP = new String(args[1]);
    System.out.println("proxy server IP is " + ProxyIP);
    if (args[2].equalsIgnoreCase("yes")) {
        Interactive = true;
    } else {
        if (args[2].equalsIgnoreCase("no"))
            Interactive = false;
        else {
            System.out.println("third argument in command line should be either yes or no");
            return;
        }
    }
    NetworkConnName = args[3];
    System.out.println("Network Connection Name is: " + NetworkConnName);
    String DefaultGateway = new String(args[4]);
    System.out.println("Default gateway is " + DefaultGateway);
    String NetMask = new String(args[5]);
    System.out.println("Network mask is " + NetMask);
    if (args.length > 6) {
        ProxyPort = new Short(args[6]);
        System.out.println("proxy port is set from command line to " + ProxyPort);
    }
    System.out.println("proxy port is " + ProxyPort);
    if (args.length > 7) {
        ServerPort = new Short(args[7]);
    }
    System.out.println("server port is " + ServerPort);
    try {
        myRef = new FileServerApplication(ProxyPort, ServerPort, DNSServer, ProxyIP, Interactive, DefaultGateway, NetMask);
    } catch (Exception E) {
        E.printStackTrace();
        System.out.println("FileServerApplication c'tor failed");
        return;
    }
    try {
        ServerThread.join();
    } catch (InterruptedException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
        System.out.println("Server Thread was terminated");
        return;
    }
    System.out.println("Server exited");
    return;
}
