public void Init() {
    // Creamos una fuente para la puntuaci�n
    fuentePuntuacion = Font.getFont(Font.FACE_MONOSPACE, Font.STYLE_PLAIN, Font.SIZE_SMALL);
    // Inicializamos los posibles movimientos
    movimientos = new MovimientosJuego();
    // Creamos la imagen para el backbuffer y obtenemos su objeto gr�fico
    try {
        backBuffer = Image.createImage(screenHeight, screenWidth);
        backBufferGraphics = backBuffer.getGraphics();
    } catch (Exception e) {
    }
    // Cargamos las imagenes
    try {
        // imagen del tablero
        imgPantallaJuego = Image.createImage("/res/pantalla.png");
        // imagen para borrar la puntuacion
        imgFondoPuntuacion = Image.createImage("/res/fondo_punt.png");
        // Textos de pausa y game over
        imgTextos = Image.createImage("/res/textos.png");
        // botones menu pausa
        imgMenuPausa = Image.createImage("/res/menu_pausa_juego.png");
        // menu confirmacion de salid
        imgMenuConfirmaSalir = Image.createImage("/res/menu_confirma_salir.png");
    } catch (Exception e) {
    }
    // Establecemos la fuente de la puntuacion y su color
    backBufferGraphics.setFont(fuentePuntuacion);
    // color negro
    backBufferGraphics.setColor(0, 0, 0);
    // Creamos las gemas
    gemas = new CGemas();
    // Creamos el tablero
    tablero = new CTablero(gemas);
    // Creamos los bloques de piezas
    bloqueJugador = new CBloquePieza(gemas);
    bloqueJugador.initPlayerPos();
    bloqueNext = new CBloquePieza(gemas);
    // inicializamos puntuacion
    score = 0;
    scoreMultiplier = 1;
    // Pantalla inicial no mostrada a�n
    pantallaInicialDibujada = false;
    // pantalla de pausa no disponible
    imagenTextoDibujada = false;
    // Comienza el juego
    state = CGameStates.EnJuego;
    pausado = confirmaSalir = false;
}
