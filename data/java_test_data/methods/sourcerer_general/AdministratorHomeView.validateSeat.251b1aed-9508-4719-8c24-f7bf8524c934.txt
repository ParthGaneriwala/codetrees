// GEN-LAST:event_cbVenueActionPerformed
// add venue part
// PART B
private boolean validateSeat() {
    boolean theReturn;
    // for tracing how many seat category is choosen
    int t = 1;
    // label for A,B,C,D,E,check empty number
    // start of validate seat ,empty part
    theReturn = true;
    // the end of validate seat ,empty part
    if ((theReturn == true) && (this.ffA1.isVisible()) && (!this.ffA1.getText().isEmpty())) {
        try {
            int temp = Integer.parseInt(this.ffA1.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Must be a number ! Invalid seat number for A");
            ffA1.setText("");
            ffA1.requestFocus();
            theReturn = false;
        }
    }
    if ((theReturn == true) && (this.ffB1.isVisible()) && (!this.ffB1.getText().isEmpty())) {
        try {
            int temp = Integer.parseInt(this.ffB1.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Invalid seat number for B");
            ffB1.setText("");
            ffB1.requestFocus();
            theReturn = false;
        }
    }
    if ((theReturn == true) && (this.ffC1.isVisible()) && (!this.ffC1.getText().isEmpty())) {
        try {
            int temp = Integer.parseInt(this.ffC1.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Invalid seat number for C");
            ffC1.setText("");
            ffC1.requestFocus();
            theReturn = false;
        }
    }
    if ((theReturn == true) && (this.ffD1.isVisible()) && (!this.ffD1.getText().isEmpty())) {
        try {
            int temp = Integer.parseInt(this.ffD1.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Invalid seat number for D");
            ffD1.setText("");
            ffD1.requestFocus();
            theReturn = false;
        }
    }
    if ((theReturn == true) && (this.ffE1.isVisible()) && (!this.ffE1.getText().isEmpty())) {
        try {
            int temp = Integer.parseInt(this.ffE1.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Invalid seat number for E");
            ffE1.setText("");
            ffE1.requestFocus();
            theReturn = false;
        }
    }
    // }
    if (theReturn == true) {
        // check valid length
        if ((theReturn == true) && (this.ffA1.isVisible()) && (!this.ffA1.getText().isEmpty())) {
            if (ffA1.getText().length() > 11) {
                JOptionPane.showMessageDialog(this, "Invalid length for A");
                ffA1.requestFocus();
                ffA1.setText("");
            }
        }
        // check valid length
        if ((theReturn == true) && (this.ffB1.isVisible()) && (!this.ffB1.getText().isEmpty())) {
            if (ffB1.getText().length() > 11) {
                JOptionPane.showMessageDialog(this, "Invalid length for B");
                ffB1.requestFocus();
                ffB1.setText("");
            }
        }
        // check valid length
        if ((theReturn == true) && (this.ffC1.isVisible()) && (!this.ffC1.getText().isEmpty())) {
            if (ffC1.getText().length() > 11) {
                JOptionPane.showMessageDialog(this, "Invalid length for C");
                ffC1.requestFocus();
                ffC1.setText("");
            }
        }
        if ((theReturn == true) && (this.ffD1.isVisible()) && (!this.ffD1.getText().isEmpty())) {
            if (ffD1.getText().length() > 11) {
                JOptionPane.showMessageDialog(this, "Invalid length for D");
                ffD1.requestFocus();
                ffD1.setText("");
            }
        }
        if ((theReturn == true) && (this.ffE1.isVisible()) && (!this.ffE1.getText().isEmpty())) {
            if (ffE1.getText().length() > 11) {
                JOptionPane.showMessageDialog(this, "Invalid length for E");
                ffE1.requestFocus();
                ffE1.setText("");
            }
        }
    }
    if ((ffA1.getText().isEmpty()) && (ffB1.getText().isEmpty()) && (ffC1.getText().isEmpty()) && (ffD1.getText().isEmpty()) && (ffE1.getText().isEmpty())) {
        JOptionPane.showMessageDialog(this, "You must enter at least one seatcategory!");
        ffA1.requestFocus();
        theReturn = false;
    }
    return theReturn;
}
