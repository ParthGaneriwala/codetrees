@Test
public void testConvertJavaBeanToDataSetRow() {
    TestDTO testDTO = new TestDTO();
    testDTO.setField1("value1");
    testDTO.setField2(Integer.MAX_VALUE);
    testDTO.setField3(false);
    testDTO.setField4(Long.MAX_VALUE);
    testDTO.setField5(Float.MAX_VALUE);
    testDTO.setField6(Double.MAX_VALUE);
    testDTO.setField7(BigDecimal.valueOf(Double.MAX_VALUE));
    testDTO.setField8(Calendar.getInstance().getTime());
    testDTO.setField9(Calendar.getInstance().getTime());
    testDTO.setField10(Calendar.getInstance().getTime());
    testDTO.setField11((new String("field11")).getBytes());
    try {
        // set data set header
        DataSet dataSet = new DataSet("testDataSet");
        XplatformUtils.setColumnHeaderByJavaBeanClass(TestDTO.class, dataSet);
        int columnCount = dataSet.getColumnCount();
        for (int columnIndex = 0; columnIndex < columnCount; columnIndex++) {
            ColumnHeader columnHeader = dataSet.getColumn(columnIndex);
            logger.debug("name: {}, type: {}", columnHeader.getName(), columnHeader.getDataType());
        }
        // add data set row
        XplatformUtils.convertJavaBeanToDataSetRow(testDTO, dataSet, 0);
        XplatformUtils.convertJavaBeanToDataSetRow(testDTO, dataSet, 1);
        // check data set
        int rowCount = dataSet.getRowCount();
        logger.debug("rowCount: {}", rowCount);
        for (int rowIndex = 0; rowIndex < rowCount; rowIndex++) {
            columnCount = dataSet.getColumnCount();
            for (int columnIndex = 0; columnIndex < columnCount; columnIndex++) {
                ColumnHeader columnHeader = dataSet.getColumn(columnIndex);
                logger.debug("name: {}, value: {}", columnHeader.getName(), dataSet.getObject(rowIndex, columnIndex));
            }
        }
    } catch (Exception e) {
        e.printStackTrace();
        fail();
    }
}
