@Test
public void testSaveAndGetByValue() {
    try {
        type1 = new EntityType();
        type1.setTypeName("TYPE_ONE");
        type1.setCreator(1L);
        AttributeType a1 = new AttributeType();
        a1.setCreator(10L);
        a1.setEnableGlobalDupValues(false);
        a1.setMultipleSupport(true);
        a1.setTypeName(AttributeType.TYPE_STR);
        a1 = ad.save(a1);
        NumericAttributeType a2 = new NumericAttributeType();
        a2.setCreator(2L);
        a2.setEnableGlobalDupValues(false);
        a2.setMultipleSupport(true);
        a2.setMax(99.99f);
        a2.setMin(1.1f);
        a2.setUnit("RMB");
        a2 = (NumericAttributeType) ad.save(a2);
        EnumAttributeType a3 = new EnumAttributeType();
        a3.setCreator(3L);
        a3.setEnableGlobalDupValues(true);
        a3.setMultipleSupport(true);
        a3.setValidValues(Arrays.asList(new String[] { "High", "Medium", "Low" }));
        a3 = (EnumAttributeType) ad.save(a3);
        type1.getAttrDefs().add(a1);
        type1.getAttrDefs().add(a2);
        type1.getAttrDefs().add(a3);
        m.addEntityType(type1);
        m = md.save(m);
        type1 = td.save(type1);
        Entity e = new Entity();
        e.setCreator(1L);
        e.vote(true, 1L);
        e.setType(type1);
        e.voteOrAddValue(a1.getId(), "中文名字", true, 1L);
        e.voteOrAddValue(a2.getId(), Float.valueOf(33.33f).toString(), true, 2L);
        e.voteOrAddValue(a3.getId(), "High", true, 3L);
        m.addEntity(e);
        // ---------- Save ---------
        e = ed.save(e);
        md.save(m);
        assertNotNull(e.getId());
        // ---------- Get by value ------------
        Entity e2 = ed.getByAttrValue(m.getId(), a1.getId(), "中文名字", false).get(0);
        assertNotNull(e2);
        assertEquals(e2.getId(), e.getId());
    } catch (ItemPersistenceException ex) {
        logger.error(ex);
        assertEquals("Shouldn't reach here", "");
    } catch (StaleDataException ex) {
        logger.error(ex);
        assertEquals("Shouldn't reach here", "");
    }
}
