public String createNode(String ticket, String objectType, String objectName, String linkPath, InputStream in, String mimeType) throws Exception {
    logger.debug("BEGIN - " + new Exception().getStackTrace()[0].getMethodName());
    String strResult = null;
    IDfSysObject sysObj = null;
    IDfSysObject folderObj = null;
    // have to transform it to fit to technology
    if (objectType.equals("folder")) {
        objectType = TYPE_FOLDER;
    } else {
    // do nothing
    }
    linkPath = getFullPath(linkPath);
    logger.debug(" objectType = " + objectType);
    logger.debug(" objectName = " + objectName);
    logger.debug(" linkPath   = " + linkPath);
    folderObj = (IDfSysObject) session.getObjectByPath(linkPath);
    if (folderObj != null) {
        // create new object and set the name
        sysObj = (IDfSysObject) session.newObject(objectType);
        sysObj.setObjectName(objectName);
        // Link to parent folder
        logger.debug(" will link to " + linkPath);
        sysObj.link(linkPath);
        // content & content type handling
        if (in != null) {
            // To set the content type, get the "name" from dm_format where mime_type = mimeType
            // Find another solution: this will send back "msw" instead of "msw8" for "application/msword" mimetype
            String strFormat = getFormatFromMimeType(mimeType);
            if (strFormat != null) {
                // Set the content
                ByteArrayOutputStream baos = new ByteArrayOutputStream();
                // Byte counter
                int iByte;
                while ((iByte = in.read()) != -1) baos.write(iByte);
                sysObj.setContentEx(baos, strFormat, 0);
            }
        }
        sysObj.save();
        strResult = sysObj.getObjectId().getId();
    } else {
        logger.debug(" Cannot create object, link path does not exist: " + linkPath);
    }
    logger.debug("END   - " + new Exception().getStackTrace()[0].getMethodName());
    return strResult;
}
