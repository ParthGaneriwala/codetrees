protected BindingOperation createBindingOperation(ServiceDesc aServiceDesc, Definition aDef, PortType aPortType, Operation aOperation) {
    boolean isRPCStyle = Style.RPC_STR.equals(aServiceDesc.getStyle().getName());
    // Create the operation to be added to the binding
    BindingOperation bindingOp = aDef.createBindingOperation();
    bindingOp.setOperation(aOperation);
    bindingOp.setName(aOperation.getName());
    // Create the DOM element which represents the SOAP operation ext element and add to binding
    // $NON-NLS-1$
    Element element = getDocument().createElementNS(IAeBPELExtendedWSDLConst.SOAP_NAMESPACE, "operation");
    element.setPrefix(aDef.getPrefix(IAeBPELExtendedWSDLConst.SOAP_NAMESPACE));
    // $NON-NLS-1$ //$NON-NLS-2$
    element.setAttributeNS(IAeBPELExtendedWSDLConst.SOAP_NAMESPACE, "soapAction", "");
    // $NON-NLS-1$
    element.setAttributeNS(IAeBPELExtendedWSDLConst.SOAP_NAMESPACE, "style", aServiceDesc.getStyle().getName());
    // $NON-NLS-1$
    bindingOp.addExtensibilityElement(createSoapExtElement("operation", element));
    if (aOperation.getInput() != null) {
        // Create the SOAP body ext element and add it to the operation
        Element bodyElement = createBodyElement(aServiceDesc, aDef, getDocument(), aPortType, isRPCStyle);
        BindingInput bindingInput = aDef.createBindingInput();
        // $NON-NLS-1$
        bindingInput.addExtensibilityElement(createSoapExtElement("body", bodyElement));
        bindingOp.setBindingInput(bindingInput);
    }
    if (aOperation.getOutput() != null) {
        // Create the SOAP body ext element and add it to the operation
        Element bodyElement = createBodyElement(aServiceDesc, aDef, getDocument(), aPortType, isRPCStyle);
        BindingOutput bindingOutput = aDef.createBindingOutput();
        // $NON-NLS-1$
        bindingOutput.addExtensibilityElement(createSoapExtElement("body", bodyElement));
        bindingOp.setBindingOutput(bindingOutput);
    }
    for (Iterator faultIter = aOperation.getFaults().values().iterator(); faultIter.hasNext(); ) {
        Fault fault = (Fault) faultIter.next();
        BindingFault bindingFault = aDef.createBindingFault();
        bindingFault.setName(fault.getName());
        // Create the DOM element which represents the SOAP fault operation ext element
        // $NON-NLS-1$
        Element faultElement = getDocument().createElementNS(IAeBPELExtendedWSDLConst.SOAP_NAMESPACE, "fault");
        faultElement.setPrefix(aDef.getPrefix(IAeBPELExtendedWSDLConst.SOAP_NAMESPACE));
        // $NON-NLS-1$
        faultElement.setAttributeNS(IAeBPELExtendedWSDLConst.SOAP_NAMESPACE, "use", aServiceDesc.getUse().getName());
        // $NON-NLS-1$
        faultElement.setAttributeNS(IAeBPELExtendedWSDLConst.SOAP_NAMESPACE, "name", fault.getName());
        // RPC style bindings should declare encoding specifications
        if (isRPCStyle)
            // $NON-NLS-1$
            faultElement.setAttributeNS(IAeBPELExtendedWSDLConst.SOAP_NAMESPACE, "encodingStyle", aServiceDesc.getUse().getEncoding());
        // Create the SOAP fault ext element and add it to the operation
        // $NON-NLS-1$
        bindingFault.addExtensibilityElement(createSoapExtElement("fault", faultElement));
        bindingOp.addBindingFault(bindingFault);
    }
    return bindingOp;
}
