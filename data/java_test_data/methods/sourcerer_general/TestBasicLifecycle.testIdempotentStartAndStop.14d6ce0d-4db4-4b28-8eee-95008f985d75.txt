public void testIdempotentStartAndStop() {
    final Lifecycle mock = EasyMock.createStrictMock(Lifecycle.class);
    final Lifecycle stub = new TestLifecycle(mock);
    mock.start();
    mock.stop();
    mock.start();
    mock.stop();
    EasyMock.replay(mock);
    assertFalse(stub.isRunning());
    // no-op
    stub.stop();
    assertFalse(stub.isRunning());
    // start
    stub.start();
    assertTrue(stub.isRunning());
    // no-op
    stub.start();
    assertTrue(stub.isRunning());
    // no-op
    stub.start();
    assertTrue(stub.isRunning());
    // stop
    stub.stop();
    assertFalse(stub.isRunning());
    // no-op
    stub.stop();
    assertFalse(stub.isRunning());
    // no-op
    stub.stop();
    assertFalse(stub.isRunning());
    // start
    stub.start();
    assertTrue(stub.isRunning());
    // no-op
    stub.start();
    assertTrue(stub.isRunning());
    // stop
    stub.stop();
    assertFalse(stub.isRunning());
    // no-op
    stub.stop();
    assertFalse(stub.isRunning());
    EasyMock.verify(mock);
}
