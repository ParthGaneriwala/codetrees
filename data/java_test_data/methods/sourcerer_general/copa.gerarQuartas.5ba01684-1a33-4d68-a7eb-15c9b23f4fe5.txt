private void gerarQuartas() {
    nomeFiltro = "Oitavas finais";
    filtro = new FiltroGrupo(nomeFiltro);
    listarJogos(filtro, null);
    Vector jogosOitavas = new Vector();
    for (int j = 0; j <= 7; j++) {
        jogosOitavas.addElement(vecJogos.elementAt(j));
    }
    nomeFiltro = "Quartas finais";
    filtro = new FiltroGrupo(nomeFiltro);
    listarJogos(filtro, null);
    for (int j = 0; j <= 3; j++) {
        Jogos jogo = (Jogos) vecJogos.elementAt(j);
        String grupo = jogo.getGrupo();
        String data = jogo.getData();
        String time1 = jogo.getTime1();
        String time2 = jogo.getTime2();
        int golsTime1 = jogo.getGolsTime1();
        int golsTime2 = jogo.getGolsTime2();
        int golsPenalti1 = jogo.getGolsPenalti1();
        int golsPenalti2 = jogo.getGolsPenalti2();
        int recordId = jogo.getRecordId();
        if (golsTime1 == 100) {
            if (recordId == 57) {
                Jogos jogoOitava = (Jogos) jogosOitavas.elementAt(0);
                time1 = ganhou(jogoOitava);
                jogoOitava = (Jogos) jogosOitavas.elementAt(1);
                time2 = ganhou(jogoOitava);
            } else if (recordId == 58) {
                Jogos jogoOitava = (Jogos) jogosOitavas.elementAt(4);
                time1 = ganhou(jogoOitava);
                jogoOitava = (Jogos) jogosOitavas.elementAt(5);
                time2 = ganhou(jogoOitava);
            } else if (recordId == 59) {
                Jogos jogoOitava = (Jogos) jogosOitavas.elementAt(2);
                time1 = ganhou(jogoOitava);
                jogoOitava = (Jogos) jogosOitavas.elementAt(3);
                time2 = ganhou(jogoOitava);
            } else if (recordId == 60) {
                Jogos jogoOitava = (Jogos) jogosOitavas.elementAt(6);
                time1 = ganhou(jogoOitava);
                jogoOitava = (Jogos) jogosOitavas.elementAt(7);
                time2 = ganhou(jogoOitava);
            }
            try {
                ByteArrayOutputStream BAOS = new ByteArrayOutputStream();
                DataOutputStream DOS = new DataOutputStream(BAOS);
                DOS.writeUTF(grupo);
                DOS.writeUTF(data);
                DOS.writeUTF(time1);
                DOS.writeUTF(time2);
                DOS.writeInt(golsTime1);
                DOS.writeInt(golsTime2);
                DOS.writeInt(golsPenalti1);
                DOS.writeInt(golsPenalti2);
                DOS.writeInt(recordId);
                byte[] bRec = BAOS.toByteArray();
                rsJogos.setRecord(jogo.getRecordId(), bRec, 0, bRec.length);
            } catch (Exception exc) {
                mostrarAlerta("Erro na listagem", exc.toString());
            }
        }
    }
}
