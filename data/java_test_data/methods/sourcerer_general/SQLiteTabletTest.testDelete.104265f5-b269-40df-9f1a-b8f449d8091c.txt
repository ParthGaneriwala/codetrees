@Test
public void testDelete() {
    Tablet sds = null;
    ObjectContainer oc = null;
    Condition cond = null;
    try {
        // ID : shiva83
        // TableName : test
        // SQLiteTablet 객체를 생성하고.
        // sds = new SQLiteTablet("shiva83", "test");
        // sds.open();
        Datastore ds = new Datastore("data_test");
        String id = "shiva83";
        String tabletName = "test";
        ds.createTablet(id, tabletName);
        // Tablet을 create하고.
        // sds.createTablet();
        // Insert를 세개 정도 해주고.
        Student beforeSt1 = new Student("20063188", "최종열", 26, "Seoul", true);
        Student beforeSt2 = new Student("20063187", "최욱환", 26, "Seoul", false);
        Student beforeSt3 = new Student("20053494", "한강", 26, "Seoul", false);
        try {
            oc = new ObjectContainer(beforeSt1.getId(), beforeSt1);
            ds.insert(id, tabletName, oc);
            oc = new ObjectContainer(beforeSt2.getId(), beforeSt2);
            ds.insert(id, tabletName, oc);
            oc = new ObjectContainer(beforeSt3.getId(), beforeSt3);
            ds.insert(id, tabletName, oc);
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (ContrabaseDatastoreException e) {
            e.printStackTrace();
        }
    // // 조건에 맞는 객체 한개만 Delete 하게 한뒤에
    // cond = TERM("name", "==", "최종열");
    // ds.delete(id, tabletName, cond);
    // 
    // // Select 했을때 두개만 select 되는지 확인해보자.
    // try {
    // cond = TERM("address", "==", "Seoul");
    // SelectIterator ic = ds.select(id, tabletName, cond);
    // oc = ic.next();
    // Student afterSt2 = (Student)oc.toObject();
    // assertEquals(beforeSt2.getName(), afterSt2.getName());
    // 
    // oc = ic.next();
    // Student afterSt3 = (Student)oc.toObject();
    // assertEquals(beforeSt3.getName(), afterSt3.getName());
    // } catch (ClassNotFoundException e) {
    // e.printStackTrace();
    // } catch (IOException e) {
    // e.printStackTrace();
    // }
    // 
    // // 더 이상 Tablet이 필요 없으니. 삭제.
    // //			sds.deleteTablet();
    } catch (ContrabaseException e) {
        e.printStackTrace();
    } finally {
    // try {
    // // SQLiteTablet에 대한 작업이 모두 끝났으니 연결을 끊고.
    // sds.close();
    // } catch (ContrabaseDatastoreException e) {
    // e.printStackTrace();
    // }
    }
}
