public void testClassifiedCRUD() throws SQLException {
    LookupContribution lookupContribution = new LookupContribution();
    lookupContribution.setConstant("200901101230");
    lookupContribution.setDescription("Test Description");
    assertNotNull(lookupContribution);
    boolean result = lookupContribution.insert(db);
    assertTrue("LookupContribution record was not inserted", result);
    assertTrue("LookupContribution record did not have an id", lookupContribution.getId() > -1);
    // Reload the user contribution log record, then update
    LookupContribution newLookupContribution = new LookupContribution(db, lookupContribution.getId());
    assertTrue("Query lookup contribution failed", "Test Description".equals(newLookupContribution.getDescription()));
    int updateCount = -1;
    newLookupContribution.setConstant("200901101231");
    updateCount = newLookupContribution.update(db);
    assertTrue("The LookupContribution was not updated by the database", updateCount == 1);
    // Find the user contribution log record
    int contributionCode = newLookupContribution.getId();
    newLookupContribution = null;
    LookupContributionList lookupContributionList = new LookupContributionList();
    lookupContributionList.buildList(db);
    assertTrue(lookupContributionList.size() > 0);
    Iterator<LookupContribution> i = lookupContributionList.iterator();
    while (i.hasNext()) {
        LookupContribution thisLookupContribution = i.next();
        if (thisLookupContribution.getId() == contributionCode) {
            newLookupContribution = thisLookupContribution;
            break;
        }
    }
    assertNotNull(newLookupContribution);
    newLookupContribution.delete(db);
    contributionCode = newLookupContribution.getId();
    newLookupContribution = null;
    // Try to find the previously deleted user contribution log record
    lookupContributionList = new LookupContributionList();
    lookupContributionList.buildList(db);
    Iterator<LookupContribution> ij = lookupContributionList.iterator();
    while (ij.hasNext()) {
        LookupContribution thisLookupContribution = ij.next();
        if (thisLookupContribution.getId() == contributionCode) {
            assertNull("lookup contribution record exists when it shouldn't", thisLookupContribution);
        }
    }
}
