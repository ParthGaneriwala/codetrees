private void readExportedType(ArrayList<Byte> file, int off, ArrayList<Integer> all_rows, ArrayList<Integer> heapRows) {
    int flags = 0, typedefid = 0, typename = 0, typenamespace = 0, implementation = 0;
    StreamTableRow str;
    int i;
    size = 0;
    for (i = 0; i < numrows; i++) {
        flags = (int) Tools.MakeShort(file, off + size);
        size += 2;
        typedefid = (int) Tools.MakeShort(file, off + size);
        size += 2;
        if (heapRows.get(CLELConstants.STRINGS_INDEX) < 0xffff) {
            typename = (int) Tools.MakeShort(file, off + size);
            size += 2;
            typenamespace = (int) Tools.MakeShort(file, off + size);
            size += 2;
        } else {
            typename = Tools.MakeInt(file, off + size);
            size += 4;
            typenamespace = Tools.MakeInt(file, off + size);
            size += 4;
        }
        // FIX??? P. 362
        implementation = (int) Tools.MakeShort(file, off + size);
        size += 2;
        str = new StreamTableRow(CLELConstants.EXPORTEDTYPE_TABLE, flags, typedefid, typename, typenamespace, implementation);
        rows.add(str);
    }
}
