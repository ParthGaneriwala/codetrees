private XmlStanza parsePresence(XmlPullParser parser) throws Exception {
    Presence.Type type = Presence.Type.available;
    String strType = parser.getAttributeValue("", "type");
    if (strType != null && !strType.isEmpty()) {
        type = Presence.Type.valueOf(strType);
    }
    Presence presence = new Presence(type);
    String id = parser.getAttributeValue("", "id");
    String to = parser.getAttributeValue("", "to");
    String from = parser.getAttributeValue("", "from");
    String language = getLanguageAttribute(parser);
    presence.setStanzaId(id == null ? Packet.ID_NOT_AVAILABLE : id);
    if (to != null && !to.isEmpty()) {
        presence.setTo(new JID(to));
    }
    if (from != null && !from.isEmpty()) {
        presence.setFrom(new JID(from));
    }
    presence.setLanguage(language);
    boolean done = false;
    while (!done) {
        int eventType = parser.next();
        String elementName = parser.getName();
        if (eventType == XmlPullParser.START_TAG) {
            String namespace = parser.getNamespace(null);
            if ("status".equals(elementName)) {
                presence.setStatus(parser.nextText());
            } else if ("show".equals(elementName)) {
                presence.setShow(Presence.Show.valueOf(parser.nextText()));
            } else if ("priority".equals(elementName)) {
                presence.setPriority(Integer.parseInt(parser.nextText()));
            } else if ("error".equals(elementName)) {
                XmppError error = parseError(parser);
                presence.setError(error);
            } else {
                processExtension(parser, elementName, namespace, presence);
            }
        } else if (eventType == XmlPullParser.END_TAG) {
            if ("presence".equals(elementName)) {
                done = true;
            }
        }
    }
    return presence;
}
