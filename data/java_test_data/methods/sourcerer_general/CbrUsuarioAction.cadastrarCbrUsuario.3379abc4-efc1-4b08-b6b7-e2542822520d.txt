public String cadastrarCbrUsuario() {
    /*//feita para apagar os usu�rios quando estamos fazendo os testes
		List<CbrUsuario> l = cbrUsuarioDao.list();
		for(CbrUsuario u:l){
			cbrUsuarioDao.delete(u);
		}
		System.out.println("cadastrarCbrUsuario()");
		//*/
    if (cbrUsuario != null) {
        try {
            boolean erro = false;
            // Validar dados do cadastro do usuario
            if (cbrUsuario.getNome() == null || cbrUsuario.getNome().equals("") || cbrUsuario.getNome().equals("Digite o seu nome")) {
                addActionError(getText("invalid.fieldvalue.cbrUsuario.nome"));
                erro = true;
            }
            if (cbrUsuario.getEmail() == null || cbrUsuario.getEmail().indexOf("@") == -1) {
                addActionError(getText("invalid.fieldvalue.cbrUsuario.email"));
                erro = true;
            }
            if (cbrUsuario.getSenha() == null || cbrUsuario.getSenha().equals("") || cbrUsuario.getSenha().equals("*") || cbrUsuario.getSenha().length() < 5) {
                addActionError(getText("invalid.fieldvalue.cbrUsuario.senhaObrigatoria"));
                erro = true;
            }
            if (confpass == null || confpass.equals("") || !confpass.equals(cbrUsuario.getSenha())) {
                addActionError(getText("invalid.fieldvalue.cbrUsuario.senhaDiferente"));
                erro = true;
            }
            if (cbrUsuario.getEndereco().getRua() == null || cbrUsuario.getEndereco().getRua().equals("") || cbrUsuario.getEndereco().getRua().equals("Digite a rua")) {
                addActionError(getText("invalid.fieldvalue.cbrUsuario.endereco.rua"));
                erro = true;
            }
            if (cbrUsuario.getEndereco().getNumero() == null || cbrUsuario.getEndereco().getNumero().equals("") || cbrUsuario.getEndereco().getNumero().equals("Digite o n�mero")) {
                addActionError(getText("invalid.fieldvalue.cbrUsuario.endereco.numero"));
                erro = true;
            }
            if (cbrUsuario.getEndereco().getComplemento() == null || cbrUsuario.getEndereco().getComplemento().equals("") || cbrUsuario.getEndereco().getComplemento().equals("Digite o complemento")) {
                addActionError(getText("invalid.fieldvalue.cbrUsuario.endereco.complemento"));
                erro = true;
            }
            if (cbrUsuario.getEndereco().getBairro() == null || cbrUsuario.getEndereco().getBairro().equals("") || cbrUsuario.getEndereco().getBairro().equals("Digite o bairro")) {
                addActionError(getText("invalid.fieldvalue.cbrUsuario.endereco.bairro"));
                erro = true;
            }
            if (cbrUsuario.getEndereco().getCidade() == null || cbrUsuario.getEndereco().getCidade().equals("") || cbrUsuario.getEndereco().getCidade().equals("Digite a cidade")) {
                addActionError(getText("invalid.fieldvalue.cbrUsuario.endereco.cidade"));
                erro = true;
            }
            if (cbrUsuario.getEndereco().getUf() == null || cbrUsuario.getEndereco().getUf().equals("") || cbrUsuario.getEndereco().getUf().equals("Estado")) {
                addActionError(getText("invalid.fieldvalue.cbrUsuario.endereco.uf"));
                erro = true;
            }
            if (cbrUsuario.getEndereco().getCep() == null || cbrUsuario.getEndereco().getCep().equals("") || cbrUsuario.getEndereco().getCep().equals("Digite o CEP") || validaCEP(cbrUsuario.getEndereco().getCep())) {
                addActionError(getText("invalid.fieldvalue.cbrUsuario.endereco.cep"));
                erro = true;
            }
            if (erro)
                return INPUT;
            // Verificar se o e-mail j� existe
            CbrUsuario cbrUsuarioDB = cbrUsuarioDao.selectByEmail(cbrUsuario);
            if (cbrUsuarioDB == null) {
                // gera c�digo de valida��o
                String cod_validacao;
                do {
                    cod_validacao = "";
                    Random rd = new Random();
                    for (int i = 0; i < 20; i++) {
                        cod_validacao += (char) (65 + rd.nextInt(23));
                    }
                } while (cbrUsuarioDao.selectByCod(cod_validacao) != null);
                // seta o numero gerado, sendo este �nico
                cbrUsuario.setCodValidacao(cod_validacao);
                cbrUsuario.setAtivo(false);
                cbrUsuario.setSenha(MD5.toPassword(cbrUsuario.getSenha()));
                // adiciona usu�rio no banco
                cbrUsuarioDao.create(cbrUsuario);
                addActionMessage(getText("sucesso.usuario.cadastrado"));
                // Envia email para o usuario
                String[] args = { cbrUsuario.getCodValidacao() };
                String mensagem = getText("correiobraille.email.cadastro", args);
                try {
                    G_Email.enviarHtmlEmail(getText("correiobraille.email.cadastro.assunto"), mensagem, cbrUsuario.getEmail(), cbrUsuario.getNome(), getText("correiobraille.email"), getText("correiobraille.email.nome"));
                } catch (Exception e) {
                    e.printStackTrace();
                }
            } else {
                // retorna mensagem de erro(email existente)
                addActionError(getText("erro.cbrMail.existente"));
                return INPUT;
            }
            /*l = cbrUsuarioDao.list();
				for(CbrUsuario u:l){
					System.out.println(u);
				}*/
            return SUCCESS;
        } catch (Exception e) {
            addActionError(e.getMessage());
            return INPUT;
        }
    } else {
        return NONE;
    }
}
