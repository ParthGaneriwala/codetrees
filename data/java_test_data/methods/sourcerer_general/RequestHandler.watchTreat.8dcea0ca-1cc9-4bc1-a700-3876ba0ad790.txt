private String watchTreat(int watcherPort, String gameId, String watcherName, String password) {
    String response = ClientServerProtocol.DENIED;
    try {
        if (!authenticateUser(watcherName, password)) {
            return response;
        }
    } catch (Exception e1) {
        response = ClientServerProtocol.SERVPROB;
        return response;
    }
    OnlineClient viewer = server.clients.getClient(watcherName);
    if (viewer != null) {
        Random random = new Random();
        int num = random.nextInt(2);
        Color r = (num == 0) ? Color.RED : Color.BLUE;
        Game theGame = server.games.getGame(gameId);
        server.printer.print_info("Looking for game: " + gameId);
        if (theGame != null) {
            server.printer.print_info("Game is found!");
            String playerName = theGame.getPlayer(r).getName();
            Player thePlayer = theGame.addWatcher(watcherName, playerName);
            // if the watcher is already watching the game from another player
            if (thePlayer.getName().equals(playerName)) {
                playerName = thePlayer.getName();
            }
            OnlineClient client = server.clients.getClient(playerName);
            InetAddress clientAddr = client.getAddress();
            int clientPort = client.getTransmitPort();
            InetAddress viewerAddr = viewer.getAddress();
            server.printer.print_info("Sending transmit command to: " + client.getName());
            try {
                SendToClient(clientAddr, clientPort, viewerAddr, watcherPort, watcherName);
            } catch (IOException e) {
                response = ClientServerProtocol.DENIED;
                return response;
            }
            response = ClientServerProtocol.ENJOYWATCH;
        } else {
            server.printer.print_error("No game found with id: " + gameId);
            response = ClientServerProtocol.DENIED;
        }
    } else {
        server.printer.print_error("No such user: '" + watcherName + "'");
    }
    return response;
}
