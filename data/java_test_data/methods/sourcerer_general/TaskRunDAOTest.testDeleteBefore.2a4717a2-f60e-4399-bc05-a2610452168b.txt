@Test
public void testDeleteBefore() {
    DateTime now = new DateTime();
    DateTime threeDaysAgo = now.minusDays(3);
    DateTime tenDaysAgo = now.minusDays(10);
    DateTime twentyDaysAgo = now.minusDays(20);
    DateTime thirtyDaysAgo = now.minusDays(30);
    int taskId = 1;
    TaskRun taskRun1 = new TaskRun(Status.SUCCESS, now.toDate(), now.toDate(), "out", "err", "stack", taskId);
    TaskRun taskRun2 = new TaskRun(Status.SUCCESS, threeDaysAgo.toDate(), now.toDate(), "out", "err", "stack", taskId);
    TaskRun taskRun3 = new TaskRun(Status.SUCCESS, tenDaysAgo.toDate(), threeDaysAgo.toDate(), "out", "err", "stack", taskId);
    TaskRun taskRun4 = new TaskRun(Status.SUCCESS, twentyDaysAgo.toDate(), tenDaysAgo.toDate(), "out", "err", "stack", taskId);
    taskRunDAO.save(taskRun1);
    taskRunDAO.save(taskRun2);
    taskRunDAO.save(taskRun3);
    taskRunDAO.save(taskRun4);
    assertEquals(4, taskRunDAO.findByTaskId(taskId).size());
    // delete before a date that matches no task runs
    taskRunDAO.deleteBefore(thirtyDaysAgo);
    assertEquals(4, taskRunDAO.findByTaskId(taskId).size());
    // delete before a date that matches no task run end date (and only task run 4's start date)
    taskRunDAO.deleteBefore(twentyDaysAgo);
    assertEquals(4, taskRunDAO.findByTaskId(taskId).size());
    // delete before a date that matches taskRun4 end date
    taskRunDAO.deleteBefore(tenDaysAgo);
    List<TaskRun> retrieved = taskRunDAO.findByTaskId(taskId);
    assertEquals(3, retrieved.size());
    assertTrue(retrieved.contains(taskRun1));
    assertTrue(retrieved.contains(taskRun2));
    assertTrue(retrieved.contains(taskRun3));
    // delete before a date that matches the rest
    taskRunDAO.deleteBefore(now);
    retrieved = taskRunDAO.findByTaskId(taskId);
    assertEquals(0, retrieved.size());
}
