@Test
public void testTimes() throws UIMAException, IOException {
    String text = FileUtils.readFileToString(new File("src/test/resources/token/times.txt"));
    jCas.setDocumentText(text);
    new Sentence(jCas, 0, 17).addToIndexes();
    new Sentence(jCas, 19, 59).addToIndexes();
    SimplePipeline.runPipeline(jCas, tokenizer);
    FSIndex<Annotation> tokenIndex = jCas.getAnnotationIndex(Token.type);
    assertEquals(16, tokenIndex.size());
    int index = 0;
    assertEquals("I", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals("said", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals("at", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals("4:45", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals("pm", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals(".", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals("I", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals("was", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals("born", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals("in", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals("'80", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals(",", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals("not", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals("the", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals("'70s", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
    assertEquals(".", JCasUtil.selectByIndex(jCas, Token.class, index++).getCoveredText());
}
