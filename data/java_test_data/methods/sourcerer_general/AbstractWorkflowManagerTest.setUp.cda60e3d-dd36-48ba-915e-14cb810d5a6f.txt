protected void setUp() throws Exception {
    super.setUp();
    // Add a new user
    workflowUser = new User();
    workflowUser.setGroupId(1);
    workflowUser.setDepartmentId(1);
    workflowUser.setFirstName("John");
    workflowUser.setLastName("Doe");
    workflowUser.setCompany("John Doe's Company");
    workflowUser.setEmail("jdoe" + System.currentTimeMillis() + "@concursive.com");
    workflowUser.setUsername(workflowUser.getEmail());
    workflowUser.setPassword("xxx");
    workflowUser.setEnteredBy(0);
    workflowUser.setModifiedBy(0);
    workflowUser.setEnabled(true);
    workflowUser.setStartPage(1);
    workflowUser.setRegistered(true);
    workflowUser.insert(db, "127.0.0.1", mockPrefs);
    assertTrue("Unable to add a user..", workflowUser.getId() != -1);
    assertTrue("User does not have a profile..", workflowUser.getProfileProjectId() != -1);
    USER_ID = workflowUser.getId();
    workflowManager = new WorkflowManager();
    globalParameters = new ConcurrentHashMap<String, Object>();
    context = new ComponentContext();
    context.setParameter(ComponentContext.FILE_LIBRARY_PATH, fileLibraryPath);
    context.setAttribute(ComponentContext.CONNECTION_POOL, connectionPool);
    context.setAttribute(ComponentContext.CONNECTION_ELEMENT, ce);
    context.setAttribute(ComponentContext.APPLICATION_MAIL_SERVER, mockPrefs.get("MAILSERVER"));
    context.setAttribute(ComponentContext.APPLICATION_EMAIL_ADDRESS, mockPrefs.get("EMAILADDRESS"));
    context.setAttribute(ComponentContext.TEAM_KEY, key);
    context.setApplicationPrefs(mockPrefs.getPrefs());
    context.setGlobalParameters(globalParameters);
    context.setAttribute(ComponentContext.FREEMARKER_CONFIGURATION, freemarkerConfiguration);
    // Let the test find the application.xml
    processList = new BusinessProcessList();
    processList.buildList(WorkflowManager.class.getResourceAsStream("/application.xml"));
}
