public static String getCustomizationLevelId(XMLDocument xmldocument, String s, String s1, int i, Connection connection) throws MDSException {
    PreparedStatement preparedstatement = null;
    String s2 = null;
    String s3 = null;
    String s4 = null;
    String s5 = null;
    if (connection == null)
        throw new MDSException("REPOS_CONN_ERROR");
    try {
        if (i == 1) {
            XMLElement xmlelement = (XMLElement) xmldocument.getDocumentElement();
            if (s1.indexOf("responsibility") != -1) {
                s4 = xmlelement.getAttribute("user:responsibilityKey");
                s5 = xmlelement.getAttribute("user:responsibilityAppId");
            } else if (s1.indexOf("user") != -1)
                s4 = xmlelement.getAttribute("user:username");
        } else if (i == 2) {
            XMLElement xmlelement1 = (XMLElement) xmldocument.getDocumentElement();
            if (xmlelement1 != null) {
                NodeList nodelist = xmlelement1.getElementsByTagName("trans-unit");
                for (int j = 0; j < nodelist.getLength(); j++) {
                    XMLElement xmlelement2 = (XMLElement) nodelist.item(j);
                    NodeList nodelist1 = xmlelement2.getElementsByTagName("prop-group");
                    for (int k = 0; k < nodelist1.getLength(); k++) {
                        XMLElement xmlelement3 = (XMLElement) nodelist1.item(k);
                        if (xmlelement3.getAttribute("name").equals("ora_reconstruction")) {
                            NodeList nodelist2 = xmlelement2.getElementsByTagName("prop");
                            for (int l = 0; l < nodelist2.getLength(); l++) {
                                XMLElement xmlelement4 = (XMLElement) nodelist2.item(l);
                                if (s1.indexOf("responsibility") != -1) {
                                    if (xmlelement4.getAttribute("prop-type").equals("responsibilityKey"))
                                        s4 = xmlelement4.getText();
                                    else if (xmlelement4.getAttribute("prop-type").equals("responsibilityAppId"))
                                        s5 = xmlelement4.getText();
                                    if (s5 != null && s4 != null)
                                        break;
                                    continue;
                                }
                                if (s1.indexOf("user") == -1 || !xmlelement4.getAttribute("prop-type").equals("username"))
                                    continue;
                                s4 = xmlelement4.getText();
                                if (s5 != null && s4 != null)
                                    break;
                            }
                        }
                    }
                }
            }
        }
        if (s1.indexOf("responsibility") != -1) {
            if (s4 != null && !s4.equals("")) {
                s2 = "SELECT RESPONSIBILITY_ID  FROM fnd_responsibility WHERE RESPONSIBILITY_KEY = '" + s4.toUpperCase() + "'";
                if (s5 != null && !s5.equals(""))
                    s2 = s2 + " and APPLICATION_ID = " + s5;
            }
        } else if (s1.indexOf("user") != -1 && s4 != null && !s4.equals(""))
            s2 = "SELECT USER_ID  FROM fnd_user WHERE user_name = '" + s4.toUpperCase() + "'";
        if (s2 != null) {
            preparedstatement = connection.prepareStatement(s2);
            ResultSet resultset = preparedstatement.executeQuery();
            if (resultset.next())
                s3 = resultset.getString(1);
        }
        String s6 = s3;
        return s6;
    } catch (SQLException sqlexception) {
        throw new MDSException(sqlexception);
    } finally {
        if (preparedstatement != null)
            doCloseStatement(preparedstatement);
    }
}
