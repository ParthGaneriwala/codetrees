public JSONObject getLabels(final Locale locale) throws ServiceException {
    final JSONObject ret = new JSONObject();
    ResourceBundle langBundle = null;
    ResourceBundle messageBundle = null;
    try {
        messageBundle = ResourceBundle.getBundle(Keys.MESSAGES, locale);
    } catch (final MissingResourceException e) {
        messageBundle = ResourceBundle.getBundle(Keys.MESSAGES, Keys.getDefaultLocale());
    }
    try {
        langBundle = ResourceBundle.getBundle(Keys.LANGUAGE, locale);
    } catch (final MissingResourceException e) {
        LOGGER.warn(e.getMessage() + ", using default locale[" + Keys.getDefaultLocale() + "]  instead");
        langBundle = ResourceBundle.getBundle(Keys.LANGUAGE, Keys.getDefaultLocale());
        try {
            ret.put(Keys.STATUS_CODE, FwkStatusCodes.CHANGE_LOCALE_FAIL_NOT_FOUND);
            final JSONObject localeNotFound = new JSONObject();
            localeNotFound.put(AbstractMessage.LOCALE_NOT_FOUND, messageBundle.getString(AbstractMessage.LOCALE_NOT_FOUND));
            ret.put(Keys.MESSAGES, localeNotFound);
        } catch (final JSONException ex) {
            LOGGER.error(ex.getMessage(), e);
        }
    }
    final Enumeration<String> keys = langBundle.getKeys();
    final JSONArray labels = new JSONArray();
    try {
        ret.put(Label.LABELS, labels);
        while (keys.hasMoreElements()) {
            final JSONObject label = new JSONObject();
            final String key = keys.nextElement();
            label.put(Label.LABEL_ID, key);
            label.put(Label.LABEL_TEXT, langBundle.getString(key));
            labels.put(label);
        }
        ret.put(Label.HTML_TITLE, langBundle.getString(AbstractLang.HTML_TITLE));
        ret.put(Keys.STATUS_CODE, FwkStatusCodes.CHANGE_LOCALE_SUCC);
    } catch (final JSONException e) {
        LOGGER.error(e.getMessage(), e);
        throw new ServiceException(e);
    }
    return ret;
}
