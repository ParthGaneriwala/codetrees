// $ANTLR end "ESC_SEQ"
public final void mOCTAL_ESC() throws RecognitionException {
    try {
        // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:12: ( '\\\\' ( '0' .. '3' ) ( '0' .. '7' ) ( '0' .. '7' ) | '\\\\' ( '0' .. '7' ) ( '0' .. '7' ) | '\\\\' ( '0' .. '7' ) )
        int alt9 = 3;
        int LA9_0 = input.LA(1);
        if ((LA9_0 == '\\')) {
            int LA9_1 = input.LA(2);
            if (((LA9_1 >= '0' && LA9_1 <= '3'))) {
                int LA9_2 = input.LA(3);
                if (((LA9_2 >= '0' && LA9_2 <= '7'))) {
                    int LA9_4 = input.LA(4);
                    if (((LA9_4 >= '0' && LA9_4 <= '7'))) {
                        alt9 = 1;
                    } else {
                        alt9 = 2;
                    }
                } else {
                    alt9 = 3;
                }
            } else if (((LA9_1 >= '4' && LA9_1 <= '7'))) {
                int LA9_3 = input.LA(3);
                if (((LA9_3 >= '0' && LA9_3 <= '7'))) {
                    alt9 = 2;
                } else {
                    alt9 = 3;
                }
            } else {
                NoViableAltException nvae = new NoViableAltException("", 9, 1, input);
                throw nvae;
            }
        } else {
            NoViableAltException nvae = new NoViableAltException("", 9, 0, input);
            throw nvae;
        }
        switch(alt9) {
            case 1:
                // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:14: '\\\\' ( '0' .. '3' ) ( '0' .. '7' ) ( '0' .. '7' )
                {
                    match('\\');
                    // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:19: ( '0' .. '3' )
                    // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:20: '0' .. '3'
                    {
                        matchRange('0', '3');
                    }
                    // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:30: ( '0' .. '7' )
                    // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:31: '0' .. '7'
                    {
                        matchRange('0', '7');
                    }
                    // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:41: ( '0' .. '7' )
                    // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:42: '0' .. '7'
                    {
                        matchRange('0', '7');
                    }
                }
                break;
            case 2:
                // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:59: '\\\\' ( '0' .. '7' ) ( '0' .. '7' )
                {
                    match('\\');
                    // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:64: ( '0' .. '7' )
                    // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:65: '0' .. '7'
                    {
                        matchRange('0', '7');
                    }
                    // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:75: ( '0' .. '7' )
                    // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:76: '0' .. '7'
                    {
                        matchRange('0', '7');
                    }
                }
                break;
            case 3:
                // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:93: '\\\\' ( '0' .. '7' )
                {
                    match('\\');
                    // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:98: ( '0' .. '7' )
                    // /home/CIN/fmm/Desktop/grammar/Compiladores.g:219:99: '0' .. '7'
                    {
                        matchRange('0', '7');
                    }
                }
                break;
        }
    } finally {
    }
}
