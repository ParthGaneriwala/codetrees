@Test
public void testEntity() {
    terrains = new ArrayList<TerrainRegion>();
    TerrainRegion tr = new TerrainRegion(new RectangularRegion(new Angle((float) Math.PI / 2), 0f, 2f, 2f, 2f), Terrain.SPACE);
    terrains.add(tr);
    tr = new TerrainRegion(new RectangularRegion(new Angle(0), 0f, 4f, 7f, 7f), Terrain.STRUCTURE);
    terrains.add(tr);
    map = new GameMap(new GameMapID("Room 1"));
    for (TerrainRegion terrainregion : terrains) {
        map.addTerrain(terrainregion);
    }
    Brute brute = new Brute(new RectangularRegion(new Angle(0), 0f, 4f, 7f, 7f), 100, new GraphicID("brute"), new SoundID("brute"), false, 500);
    Sneak sneak = new Sneak(new RectangularRegion(new Angle(0), 0f, 4f, 7f, 7f), 100, new GraphicID("sneak"), new SoundID("sneak"), false, 500);
    Technician technician = new Technician(new RectangularRegion(new Angle(0), 0f, 4f, 7f, 7f), 100, new GraphicID("technician"), new SoundID("technician"), false, 500);
    System.out.println("Brute");
    System.out.println("Action: " + brute.getStatAmount(StatType.ACTION));
    System.out.println("Agility: " + brute.getStatAmount(StatType.AGILITY));
    System.out.println("Armor: " + brute.getStatAmount(StatType.ARMORRATE));
    System.out.println("Defense: " + brute.getStatAmount(StatType.DEFENSERATE));
    System.out.println("Experience: " + brute.getStatAmount(StatType.EXPERIENCE));
    System.out.println("Hardiness: " + brute.getStatAmount(StatType.HARDINESS));
    System.out.println("Health: " + brute.getStatAmount(StatType.HEALTH));
    System.out.println("Intellect: " + brute.getStatAmount(StatType.INTELLECT));
    System.out.println("Level: " + brute.getStatAmount(StatType.LEVEL));
    System.out.println("Lives left: " + brute.getStatAmount(StatType.LIVESLEFT));
    System.out.println("Max Action: " + brute.getStatAmount(StatType.MAX_ACTION));
    System.out.println("Max Health: " + brute.getStatAmount(StatType.MAX_HEALTH));
    System.out.println("Movement: " + brute.getStatAmount(StatType.MOVEMENT));
    System.out.println("Offense Rate: " + brute.getStatAmount(StatType.OFFENSERATE));
    System.out.println("Strength: " + brute.getStatAmount(StatType.STRENGTH));
    System.out.println("");
    System.out.println("Sneak");
    // brute.addStatAdjustment(new StatAdjustment(StatType.ACTION, 1));
    // brute.addStatAdjustment(new StatAdjustment(StatType.HEALTH, -2));
    System.out.println("Action: " + sneak.getStatAmount(StatType.ACTION));
    System.out.println("Agility: " + sneak.getStatAmount(StatType.AGILITY));
    System.out.println("Armor: " + sneak.getStatAmount(StatType.ARMORRATE));
    System.out.println("Defense: " + sneak.getStatAmount(StatType.DEFENSERATE));
    System.out.println("Experience: " + sneak.getStatAmount(StatType.EXPERIENCE));
    System.out.println("Hardiness: " + sneak.getStatAmount(StatType.HARDINESS));
    System.out.println("Health: " + sneak.getStatAmount(StatType.HEALTH));
    System.out.println("Intellect: " + sneak.getStatAmount(StatType.INTELLECT));
    System.out.println("Level: " + sneak.getStatAmount(StatType.LEVEL));
    System.out.println("Lives left: " + sneak.getStatAmount(StatType.LIVESLEFT));
    System.out.println("Max Action: " + sneak.getStatAmount(StatType.MAX_ACTION));
    System.out.println("Max Health: " + sneak.getStatAmount(StatType.MAX_HEALTH));
    System.out.println("Movement: " + sneak.getStatAmount(StatType.MOVEMENT));
    System.out.println("Offense Rate: " + sneak.getStatAmount(StatType.OFFENSERATE));
    System.out.println("Strength: " + sneak.getStatAmount(StatType.STRENGTH));
    System.out.println("");
    System.out.println("Tecnician");
    System.out.println("Action: " + technician.getStatAmount(StatType.ACTION));
    System.out.println("Agility: " + technician.getStatAmount(StatType.AGILITY));
    System.out.println("Armor: " + technician.getStatAmount(StatType.ARMORRATE));
    System.out.println("Defense: " + technician.getStatAmount(StatType.DEFENSERATE));
    System.out.println("Experience: " + technician.getStatAmount(StatType.EXPERIENCE));
    System.out.println("Hardiness: " + technician.getStatAmount(StatType.HARDINESS));
    System.out.println("Health: " + technician.getStatAmount(StatType.HEALTH));
    System.out.println("Intellect: " + technician.getStatAmount(StatType.INTELLECT));
    System.out.println("Level: " + technician.getStatAmount(StatType.LEVEL));
    System.out.println("Lives left: " + technician.getStatAmount(StatType.LIVESLEFT));
    System.out.println("Max Action: " + technician.getStatAmount(StatType.MAX_ACTION));
    System.out.println("Max Health: " + technician.getStatAmount(StatType.MAX_HEALTH));
    System.out.println("Movement: " + technician.getStatAmount(StatType.MOVEMENT));
    System.out.println("Offense Rate: " + technician.getStatAmount(StatType.OFFENSERATE));
    System.out.println("Strength: " + technician.getStatAmount(StatType.STRENGTH));
    // brute.addStatAdjustment(new StatAdjustment(StatType.ACTION, 1));
    // brute.addStatAdjustment(new StatAdjustment(StatType.HEALTH, -2));
    /*
		brute.setTarget(sneak);
		sneak.setTarget(brute);
		Collection<Action<SpatialParams>> actions = brute.getSpatialActions();
		Iterator<Action<SpatialParams>> iterator = actions.iterator();
		int i = 0;
		while(iterator.hasNext()){
			System.out.println(++i);
			Action<SpatialParams> action = iterator.next();
			action.onPerform(new SpatialParams(map));
		}
		brute.setTarget(technician);

		System.out.println("Action: " + sneak.getStatAmount(StatType.ACTION));
    	System.out.println("Agility: " + sneak.getStatAmount(StatType.AGILITY));
    	System.out.println("Armor: " + sneak.getStatAmount(StatType.ARMORRATE));
    	System.out.println("Defense: " + sneak.getStatAmount(StatType.DEFENSERATE));
    	System.out.println("Experience: " + sneak.getStatAmount(StatType.EXPERIENCE));
    	System.out.println("Hardiness: " + sneak.getStatAmount(StatType.HARDINESS));
    	System.out.println("Health: " + sneak.getStatAmount(StatType.HEALTH));
    	System.out.println("Intellect: " + sneak.getStatAmount(StatType.INTELLECT));
    	System.out.println("Level: " + sneak.getStatAmount(StatType.LEVEL));
    	System.out.println("Lives left: " + sneak.getStatAmount(StatType.LIVESLEFT));
    	System.out.println("Max Action: " + sneak.getStatAmount(StatType.MAX_ACTION));
    	System.out.println("Max Health: " + sneak.getStatAmount(StatType.MAX_HEALTH));
    	System.out.println("Movement: " + sneak.getStatAmount(StatType.MOVEMENT));
    	System.out.println("Offense Rate: " + sneak.getStatAmount(StatType.OFFENSERATE));
    	System.out.println("Strength: " + sneak.getStatAmount(StatType.STRENGTH));
    	System.out.println("");
    	System.out.println("");
		actions = sneak.getSpatialActions();
		iterator = actions.iterator();
		i = 0;
		while(iterator.hasNext()){
			System.out.println(++i);
			Action<SpatialParams> action = iterator.next();
			action.onPerform(new SpatialParams(map));
		}
    	System.out.println("Action: " + brute.getStatAmount(StatType.ACTION));
    	System.out.println("Agility: " + brute.getStatAmount(StatType.AGILITY));
    	System.out.println("Armor: " + brute.getStatAmount(StatType.ARMORRATE));
    	System.out.println("Defense: " + brute.getStatAmount(StatType.DEFENSERATE));
    	System.out.println("Experience: " + brute.getStatAmount(StatType.EXPERIENCE));
    	System.out.println("Hardiness: " + brute.getStatAmount(StatType.HARDINESS));
    	System.out.println("Health: " + brute.getStatAmount(StatType.HEALTH));
    	System.out.println("Intellect: " + brute.getStatAmount(StatType.INTELLECT));
    	System.out.println("Level: " + brute.getStatAmount(StatType.LEVEL));
    	System.out.println("Lives left: " + brute.getStatAmount(StatType.LIVESLEFT));
    	System.out.println("Max Action: " + brute.getStatAmount(StatType.MAX_ACTION));
    	System.out.println("Max Health: " + brute.getStatAmount(StatType.MAX_HEALTH));
    	System.out.println("Movement: " + brute.getStatAmount(StatType.MOVEMENT));
    	System.out.println("Offense Rate: " + brute.getStatAmount(StatType.OFFENSERATE));
    	System.out.println("Strength: " + brute.getStatAmount(StatType.STRENGTH));
    	*/
    brute.setTarget(null);
    if (brute.getTarget() instanceof Sneak) {
        System.out.println("Huh?");
    } else {
        System.out.println("Cool");
    }
}
