public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int yy_lookahead;
    int yy_anchor = YY_NO_ANCHOR;
    int yy_state = yy_state_dtrans[yy_lexical_state];
    int yy_next_state = YY_NO_STATE;
    int yy_last_accept_state = YY_NO_STATE;
    boolean yy_initial = true;
    int yy_this_accept;
    yy_mark_start();
    yy_this_accept = yy_acpt[yy_state];
    if (YY_NOT_ACCEPT != yy_this_accept) {
        yy_last_accept_state = yy_state;
        yy_mark_end();
    }
    while (true) {
        if (yy_initial && yy_at_bol)
            yy_lookahead = YY_BOL;
        else
            yy_lookahead = yy_advance();
        yy_next_state = YY_F;
        yy_next_state = yy_nxt[yy_rmap[yy_state]][yy_cmap[yy_lookahead]];
        if (YY_EOF == yy_lookahead && true == yy_initial) {
            return null;
        }
        if (YY_F != yy_next_state) {
            yy_state = yy_next_state;
            yy_initial = false;
            yy_this_accept = yy_acpt[yy_state];
            if (YY_NOT_ACCEPT != yy_this_accept) {
                yy_last_accept_state = yy_state;
                yy_mark_end();
            }
        } else {
            if (YY_NO_STATE == yy_last_accept_state) {
                throw (new Error("Lexical Error: Unmatched Input."));
            } else {
                yy_anchor = yy_acpt[yy_last_accept_state];
                if (0 != (YY_END & yy_anchor)) {
                    yy_move_end();
                }
                yy_to_mark();
                switch(yy_last_accept_state) {
                    case 1:
                    case -2:
                        break;
                    case 2:
                        {
                        /* skip each whitespace */
                        }
                    case -3:
                        break;
                    case 3:
                        {
                            return new Symbol(sym.LPAREN);
                        }
                    case -4:
                        break;
                    case 4:
                        {
                            return new Symbol(sym.RPAREN);
                        }
                    case -5:
                        break;
                    case 5:
                        {
                            return new Symbol(sym.G, String.valueOf(sym.G));
                        }
                    case -6:
                        break;
                    case 6:
                        {
                            System.out.println("Unmatched input: " + yytext());
                        }
                    case -7:
                        break;
                    case 7:
                        {
                            return new Symbol(sym.L, String.valueOf(sym.L));
                        }
                    case -8:
                        break;
                    case 8:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -9:
                        break;
                    case 9:
                        {
                            return new Symbol(sym.MINUS, String.valueOf(sym.MINUS));
                        }
                    case -10:
                        break;
                    case 10:
                        {
                            return new Symbol(sym.PLUS, String.valueOf(sym.PLUS));
                        }
                    case -11:
                        break;
                    case 11:
                        {
                            return new Symbol(sym.STAR, String.valueOf(sym.STAR));
                        }
                    case -12:
                        break;
                    case 12:
                        {
                            return new Symbol(sym.SLASH, String.valueOf(sym.SLASH));
                        }
                    case -13:
                        break;
                    case 13:
                        {
                            return new Symbol(sym.POSINT, yytext());
                        }
                    case -14:
                        break;
                    case 14:
                        {
                            return new Symbol(sym.GEQ, String.valueOf(sym.GEQ));
                        }
                    case -15:
                        break;
                    case 15:
                        {
                            return new Symbol(sym.LEQ, String.valueOf(sym.LEQ));
                        }
                    case -16:
                        break;
                    case 16:
                        {
                            /*Backpred.saySubType*/
                            return new Symbol(sym.LESSCOLON);
                        }
                    case -17:
                        break;
                    case 17:
                        {
                            return new Symbol(sym.EQ, String.valueOf(sym.EQ));
                        }
                    case -18:
                        break;
                    case 18:
                        {
                            return new Symbol(sym.IS, yytext());
                        }
                    case -19:
                        break;
                    case 19:
                        {
                            return new Symbol(sym.NEGINT, yytext());
                        }
                    case -20:
                        break;
                    case 20:
                        {
                            /*UniqName.type*/
                            return new Symbol(sym.TYPEIDENT, ParseFct.stripBarFromType(yytext()));
                        }
                    case -21:
                        break;
                    case 21:
                        {
                            return new Symbol(sym.NEQ, String.valueOf(sym.NEQ));
                        }
                    case -22:
                        break;
                    case 22:
                        {
                            return new Symbol(sym.NOT);
                        }
                    case -23:
                        break;
                    case 23:
                        {
                            return new Symbol(sym.IDENTESC, yytext().substring(1, yytext().length() - 1));
                        }
                    case -24:
                        break;
                    case 24:
                        {
                            return new Symbol(sym.TRUE, yytext());
                        }
                    case -25:
                        break;
                    case 25:
                        {
                            return new Symbol(sym.NULL);
                        }
                    case -26:
                        break;
                    case 26:
                        {
                            return new Symbol(sym.NEGINT, "-" + yytext().substring(3, yytext().length()));
                        }
                    case -27:
                        break;
                    case 27:
                        {
                            /*GC.thisvar*/
                            return new Symbol(sym.THIS);
                        }
                    case -28:
                        break;
                    case 28:
                        {
                            return new Symbol(sym.POSINT, yytext().substring(3, yytext().length()));
                        }
                    case -29:
                        break;
                    case 29:
                        {
                            /*GC.elemsvar*/
                            return new Symbol(sym.ELEMS, yytext());
                        }
                    case -30:
                        break;
                    case 30:
                        {
                            return new Symbol(sym.FLOATNAN, yytext());
                        }
                    case -31:
                        break;
                    case 31:
                        {
                            return new Symbol(sym.SELECT, yytext());
                        }
                    case -32:
                        break;
                    case 32:
                        {
                            return new Symbol(sym.TYPEOF, yytext());
                        }
                    case -33:
                        break;
                    case 33:
                        {
                            return new Symbol(sym.ARRAY, yytext());
                        }
                    case -34:
                        break;
                    case 34:
                        {
                            return new Symbol(sym.ATTRUE);
                        }
                    case -35:
                        break;
                    case 35:
                        {
                            return new Symbol(sym.POSFLOAT, yytext().substring(3, yytext().length() - 1));
                        }
                    case -36:
                        break;
                    case 36:
                        {
                            /*GC.blockL*/
                            return new Symbol(sym.LABEL, yytext().substring(1, yytext().length() - 1));
                        }
                    case -37:
                        break;
                    case 37:
                        {
                            /*Translate.continueLabel*/
                            return new Symbol(sym.LABEL, yytext().substring(1, yytext().length() - 1));
                        }
                    case -38:
                        break;
                    case 38:
                        {
                            return new Symbol(sym.STRINGLIT, yytext().substring(1, yytext().length() - 1));
                        }
                    case -39:
                        break;
                    case 39:
                        {
                            return new Symbol(sym.BOOLNOT);
                        }
                    case -40:
                        break;
                    case 40:
                        {
                            return new Symbol(sym.ELEMTYPE, yytext());
                        }
                    case -41:
                        break;
                    case 41:
                        {
                            return new Symbol(sym.FLOATINF, yytext());
                        }
                    case -42:
                        break;
                    case 42:
                        {
                            return new Symbol(sym.TYPEOF, yytext());
                        }
                    case -43:
                        break;
                    case 43:
                        {
                            return new Symbol(sym.ARRAYLENGTH, yytext());
                        }
                    case -44:
                        break;
                    case 44:
                        {
                            return new Symbol(sym.BOOLFALSE);
                        }
                    case -45:
                        break;
                    case 45:
                        {
                            return new Symbol(sym.FLOATNEGINF, yytext());
                        }
                    case -46:
                        break;
                    case 46:
                        {
                            return new Symbol(sym.TYPEOF, yytext());
                        }
                    case -47:
                        break;
                    case 48:
                        {
                            System.out.println("Unmatched input: " + yytext());
                        }
                    case -48:
                        break;
                    case 49:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -49:
                        break;
                    case 50:
                        {
                            /*UniqName.type*/
                            return new Symbol(sym.TYPEIDENT, ParseFct.stripBarFromType(yytext()));
                        }
                    case -50:
                        break;
                    case 51:
                        {
                            /*GC.elemsvar*/
                            return new Symbol(sym.ELEMS, yytext());
                        }
                    case -51:
                        break;
                    case 53:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -52:
                        break;
                    case 54:
                        {
                            /*UniqName.type*/
                            return new Symbol(sym.TYPEIDENT, ParseFct.stripBarFromType(yytext()));
                        }
                    case -53:
                        break;
                    case 56:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -54:
                        break;
                    case 58:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -55:
                        break;
                    case 60:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -56:
                        break;
                    case 62:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -57:
                        break;
                    case 64:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -58:
                        break;
                    case 66:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -59:
                        break;
                    case 68:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -60:
                        break;
                    case 70:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -61:
                        break;
                    case 72:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -62:
                        break;
                    case 74:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -63:
                        break;
                    case 76:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -64:
                        break;
                    case 78:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -65:
                        break;
                    case 80:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -66:
                        break;
                    case 82:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -67:
                        break;
                    case 84:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -68:
                        break;
                    case 86:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -69:
                        break;
                    case 88:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -70:
                        break;
                    case 121:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -71:
                        break;
                    case 130:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -72:
                        break;
                    case 133:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -73:
                        break;
                    case 136:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -74:
                        break;
                    case 139:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -75:
                        break;
                    case 141:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -76:
                        break;
                    case 143:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -77:
                        break;
                    case 145:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -78:
                        break;
                    case 147:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -79:
                        break;
                    case 149:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -80:
                        break;
                    case 151:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -81:
                        break;
                    case 153:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -82:
                        break;
                    case 155:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -83:
                        break;
                    case 157:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -84:
                        break;
                    case 159:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -85:
                        break;
                    case 165:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -86:
                        break;
                    case 169:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -87:
                        break;
                    case 171:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -88:
                        break;
                    case 173:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -89:
                        break;
                    case 175:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -90:
                        break;
                    case 177:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -91:
                        break;
                    case 179:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -92:
                        break;
                    case 181:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -93:
                        break;
                    case 183:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -94:
                        break;
                    case 184:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -95:
                        break;
                    case 185:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -96:
                        break;
                    case 186:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -97:
                        break;
                    case 188:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -98:
                        break;
                    case 190:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -99:
                        break;
                    case 192:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -100:
                        break;
                    case 194:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -101:
                        break;
                    case 196:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -102:
                        break;
                    case 198:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -103:
                        break;
                    case 200:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -104:
                        break;
                    case 202:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -105:
                        break;
                    case 204:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -106:
                        break;
                    case 206:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -107:
                        break;
                    case 208:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -108:
                        break;
                    case 210:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -109:
                        break;
                    case 212:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -110:
                        break;
                    case 217:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -111:
                        break;
                    case 219:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -112:
                        break;
                    case 221:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -113:
                        break;
                    case 224:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -114:
                        break;
                    case 226:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -115:
                        break;
                    case 230:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -116:
                        break;
                    case 234:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -117:
                        break;
                    case 238:
                        {
                            return new Symbol(sym.IDENT, yytext());
                        }
                    case -118:
                        break;
                    default:
                        yy_error(YY_E_INTERNAL, false);
                    case -1:
                }
                yy_initial = true;
                yy_state = yy_state_dtrans[yy_lexical_state];
                yy_next_state = YY_NO_STATE;
                yy_last_accept_state = YY_NO_STATE;
                yy_mark_start();
                yy_this_accept = yy_acpt[yy_state];
                if (YY_NOT_ACCEPT != yy_this_accept) {
                    yy_last_accept_state = yy_state;
                    yy_mark_end();
                }
            }
        }
    }
}
