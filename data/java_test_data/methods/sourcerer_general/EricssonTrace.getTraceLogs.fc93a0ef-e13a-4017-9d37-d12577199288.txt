public MobileTraceState getTraceLogs(String sgsnid, String msisdn, String random) {
    MobileTraceState trace = new MobileTraceState();
    trace.setSgsnid(sgsnid);
    trace.setMobile(msisdn);
    trace.setRandom(random);
    trace.setStatus(1);
    List<String> lines = new ArrayList<String>();
    SHQueryService.QUERY_RESULT.put(msisdn + "," + random, lines);
    Sgsn sgsn = com.sxit.netquality.service.BasicSetService.ALL_SGSNS.get(sgsnid);
    String params = sgsn.getSgsnip() + " " + sgsn.getLoginname() + " " + sgsn.getLoginpwd() + " " + msisdn;
    String cmd = ERICSSON_TRACE_LOGS_CMD + " " + params;
    try {
        _LOG.debug("准备启动对号码" + msisdn + "的追踪记录查询........");
        Runtime runtime = Runtime.getRuntime();
        Process p = runtime.exec(cmd);
        _LOG.debug("开始执行命令::::" + cmd);
        BufferedReader br = new BufferedReader(new InputStreamReader(p.getInputStream()));
        String line = null;
        int i = 0;
        List<String> list = new ArrayList<String>();
        while ((line = br.readLine()) != null) {
            i++;
            // System.out.println(line);
            lines.add(line);
            // }
            if (com.sxit.query.util.RauUtil.containsDatetime(line))
                list.add(line);
        }
        lines.add("isover");
        br.close();
        for (String resultLine : list) {
            // System.out.println(resultLine);
            try {
                EricssonTraceLog log = parseLine(resultLine);
                trace.addTraceLogs(log);
            } catch (Exception e) {
                _LOG.error("分析执行结果有误:" + resultLine, e);
            }
        }
    // 分析数据
    } catch (Exception e) {
        _LOG.error("爱立信的号码追踪有误", e);
        java.io.Writer sw = new java.io.StringWriter();
        trace.setHasexception(true);
        try {
            java.io.PrintWriter pw = new java.io.PrintWriter(sw, true);
            e.printStackTrace(pw);
            pw.flush();
            pw.close();
            sw.flush();
            sw.close();
            String s = sw.toString();
            if (s.length() > 2000)
                trace.setException(s.substring(0, 2000));
            else
                trace.setException(sw.toString());
        } catch (Exception ee) {
            _LOG.error("关闭StringWriter有误", ee);
        }
    }
    return trace;
}
