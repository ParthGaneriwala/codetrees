@Override
public void actionPerformed(ActionEvent arg0) {
    // TODO Auto-generated method stub
    System.out.println("��ϵ�˵���");
    JFileChooser playerHeadChooser = new JFileChooser();
    playerHeadChooser.setDialogTitle("Contact Export Chooser");
    File dir = new File("./");
    StringBuffer url = null;
    if (dir.isDirectory())
        playerHeadChooser.setCurrentDirectory(dir);
    FileFilter playerHeadFileFilter;
    if (csv.isSelected()) {
        playerHeadFileFilter = new ExtensionFileFilter("Support Files (*.csv)", new String[] { ".csv" });
        playerHeadChooser.addChoosableFileFilter(playerHeadFileFilter);
    }
    if (xls.isSelected()) {
        playerHeadFileFilter = new ExtensionFileFilter("Support Files (*.xls)", new String[] { ".xls" });
        playerHeadChooser.addChoosableFileFilter(playerHeadFileFilter);
    }
    int result = playerHeadChooser.showOpenDialog(localFrame);
    if (result == JFileChooser.CANCEL_OPTION)
        return;
    File selectedFile = playerHeadChooser.getSelectedFile();
    try {
        url = new StringBuffer(selectedFile.getAbsolutePath());
        if (url.length() == 0)
            return;
        System.out.println("EXPORT\n" + url);
    } catch (Exception error) {
        error.printStackTrace();
    }
    // TODO url == null
    StringBuffer tempMessage = new StringBuffer();
    if (csv.isSelected()) {
        tempMessage.append(MyXMLMaker.addTag("Type", "csv"));
        if (!url.toString().endsWith(".csv"))
            url = url.append(".csv");
    }
    if (xls.isSelected()) {
        tempMessage.append(MyXMLMaker.addTag("Type", "xls"));
        if (!url.toString().endsWith(".xls"))
            url = url.append(".xls");
    }
    tempMessage.append(MyXMLMaker.addTag("Url", url.toString()));
    String xml = MyXMLMaker.addTag("ExportContact", tempMessage.toString());
    xml = MyXMLMaker.addTag("com", xml);
    System.out.println("EXPORT_CONTACT\n" + xml);
    CommandVisitor exportContactCommandVisitor = new CommandVisitor(CommandType.EXPORT_CONTACT, xml);
    ExportContactMessageHandler exportContactMessageHandler = new ExportContactMessageHandler();
    exportContactMessageHandler.executeCommand(exportContactCommandVisitor);
}
