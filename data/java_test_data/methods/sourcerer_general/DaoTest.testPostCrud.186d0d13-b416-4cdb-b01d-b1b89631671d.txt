public void testPostCrud() throws Exception {
    PostDao postDao = getPostDao();
    // Create
    City city = createCity("Test City", "Test Url");
    Category category = createCategory("Category Name");
    Post createPost = createPost(city, category, new Long(639475860), "Post Title", "Post Age", "Post Content", "Post loc", "Post replyAddress");
    assertNotNull(createPost.getId());
    Long id = createPost.getId();
    restartSession();
    // Read
    Post foundPost = postDao.read(id);
    assertEquals(createPost.getClId(), foundPost.getClId());
    assertEquals(createPost.getTitle(), foundPost.getTitle());
    assertEquals(createPost.getAge(), foundPost.getAge());
    assertEquals(createPost.getContent(), foundPost.getContent());
    assertEquals(createPost.getLocation(), foundPost.getLocation());
    assertEquals(createPost.getReplyAddress(), foundPost.getReplyAddress());
    restartSession();
    // Update
    String updateTitle = "Update Title";
    String updateAge = "Update Age";
    String updateContent = "Update Content";
    String updateLocation = "Update Location";
    String updateReplyAddress = "Update ReplyAddresss";
    foundPost.setTitle(updateTitle);
    foundPost.setAge(updateAge);
    foundPost.setContent(updateContent);
    foundPost.setLocation(updateLocation);
    foundPost.setReplyAddress(updateReplyAddress);
    postDao.update(foundPost);
    Post updatedPost = postDao.read(id);
    assertEquals(updateTitle, updatedPost.getTitle());
    assertEquals(updateAge, updatedPost.getAge());
    assertEquals(updateContent, updatedPost.getContent());
    assertEquals(updateLocation, updatedPost.getLocation());
    assertEquals(updateReplyAddress, updatedPost.getReplyAddress());
    restartSession();
    // Delete
    postDao.delete(updatedPost);
    restartSession();
    assertNull(postDao.read(id));
    getCityDao().delete(city);
    getCategoryDao().delete(category);
}
