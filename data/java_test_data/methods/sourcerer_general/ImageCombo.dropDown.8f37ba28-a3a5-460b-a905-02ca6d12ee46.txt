void dropDown(boolean drop) {
    if (drop == isDropped())
        return;
    if (!drop) {
        popup.setVisible(false);
        if (!isDisposed() && arrow.isFocusControl()) {
            text.setFocus();
        }
        return;
    }
    if (getShell() != popup.getParent()) {
        int selectionIndex = table.getSelectionIndex();
        table.removeListener(SWT.Dispose, listener);
        popup.dispose();
        popup = null;
        table = null;
        createPopup(selectionIndex);
    }
    Point size = getSize();
    int itemCount = table.getItemCount();
    itemCount = (itemCount == 0) ? visibleItemCount : Math.min(visibleItemCount, itemCount);
    int itemHeight = table.getItemHeight() * itemCount;
    Point listSize = table.computeSize(SWT.DEFAULT, itemHeight, false);
    if (table.getVerticalBar().isVisible() == false) {
        listSize.x -= table.getVerticalBar().getSize().x;
    }
    table.setBounds(1, 1, Math.max(size.x - 2, listSize.x), listSize.y);
    int index = table.getSelectionIndex();
    if (index != -1)
        table.setTopIndex(index);
    Display display = getDisplay();
    Rectangle listRect = table.getBounds();
    Rectangle parentRect = display.map(getParent(), null, getBounds());
    Point comboSize = getSize();
    Rectangle displayRect = getMonitor().getClientArea();
    int width = Math.max(comboSize.x, listRect.width + 2);
    int height = listRect.height + 2;
    int x = parentRect.x;
    int y = parentRect.y + comboSize.y;
    if (y + height > displayRect.y + displayRect.height)
        y = parentRect.y - height;
    popup.setBounds(x, y, width, height);
    popup.setVisible(true);
    table.setFocus();
}
