private void refreshDetails() {
    fieldConfig.getChildren().clear();
    Listhead head = new Listhead();
    Listheader header1 = new Listheader("Field Name");
    Listheader header2 = new Listheader("Can Be Null?");
    header1.setParent(head);
    header2.setParent(head);
    head.setParent(fieldConfig);
    if (selected != null) {
        Checkbox defaultNullable = (Checkbox) templateDetails.getFellow("defaultNullable");
        defaultNullable.setChecked(selected.getDefault().isNullable());
        defaultNullable.addEventListener("onCheck", new EventListener() {

            public void onEvent(Event event) throws Exception {
                selected.setDefault(!selected.getDefault().isNullable());
                selected.persistTemplate();
            }
        });
        Label tempName = (Label) templateDetails.getFellow("templateNameLabel");
        tempName.setValue(selected.getName());
        EventListener nullCheckboxListener = new EventListener() {

            public void onEvent(Event event) throws Exception {
                Checkbox box = (Checkbox) event.getTarget();
                Listitem fullItem = (Listitem) box.getParent().getParent();
                Field changedField = (Field) fullItem.getValue();
                changedField.setNullable(box.isChecked());
                selected.persistTemplate();
            }
        };
        for (Field toConfig : selected.getFields()) {
            Listitem tempItem = new Listitem();
            tempItem.setValue(toConfig);
            Listcell fieldName = new Listcell();
            Listcell nullBox = new Listcell();
            Label name = new Label(toConfig.getName());
            name.setValue(toConfig.getName());
            Checkbox nullable = new Checkbox();
            nullable.setChecked(toConfig.isNullable());
            nullable.addEventListener("onCheck", nullCheckboxListener);
            name.setParent(fieldName);
            nullable.setParent(nullBox);
            fieldName.setParent(tempItem);
            nullBox.setParent(tempItem);
            tempItem.setParent(fieldConfig);
        }
    } else {
        templateDetails.setVisible(false);
    }
}
