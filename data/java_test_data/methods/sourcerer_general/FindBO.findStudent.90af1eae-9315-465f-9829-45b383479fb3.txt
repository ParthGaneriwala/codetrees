public ArrayList<StudentVO> findStudent(StudentSearchCriteria searchCriteria) throws SjsuUniversiryException {
    ArrayList<StudentVO> studentList = null;
    StringBuilder sql = new StringBuilder();
    sql.append(" SELECT * FROM PERSON WHERE PERSONTYPE='Student'  ");
    boolean[] isWhr = new boolean[1];
    isWhr[0] = true;
    sql.append(getPersonClause(searchCriteria, isWhr));
    // searchByStudentId
    if (searchCriteria.isSearchByStudentId()) {
        if (isWhr[0])
            sql.append(" and ");
        sql.append(" Pid= '" + searchCriteria.getStudent().getStudentId() + "'");
        isWhr[0] = true;
    }
    // searchByStudentType
    if (searchCriteria.isSearchByStudentType()) {
        if (isWhr[0])
            sql.append(" and ");
        sql.append(" StuType= '" + searchCriteria.getStudent().getStudentType() + "'");
        isWhr[0] = true;
    }
    try {
        System.out.println("SQL > " + sql);
        MyDBConnection db = new MyDBConnection();
        Connection con = db.getMyConnection();
        Statement smt = con.createStatement();
        ResultSet rs = smt.executeQuery(sql.toString());
        studentList = new ArrayList<StudentVO>();
        while (rs.next()) {
            StudentVO student = new StudentVO();
            student.setFisrtName(rs.getString("firstname"));
            student.setLastName(rs.getString("lastname"));
            student.setAddress(rs.getString("address"));
            student.setCity(rs.getString("city"));
            student.setState(rs.getString("state"));
            student.setZip(rs.getInt("zip"));
            student.setStudentId(rs.getString("pid"));
            student.setStudentType(rs.getString("StuType"));
            studentList.add(student);
        }
        MyDBConnection.close(smt);
        MyDBConnection.close(rs);
    } catch (Exception e) {
        e.printStackTrace();
        SjsuUniversiryException.raiseException("Unable to Search the Person : " + e.getMessage(), e);
    }
    return studentList;
}
