@Override
public double[] calculate(double a, double b, double c, double d) {
    double e;
    double f;
    double ab = Math.max(Math.abs(a), Math.abs(b));
    double cd = Math.max(Math.abs(c), Math.abs(d));
    double overflow = Double.MAX_VALUE;
    double underflow = Double.MIN_NORMAL;
    double epsilon = 1.0 - Math.nextAfter(1.0, 0.0);
    double small = 2.0;
    double scale = 1.0;
    if (ab > overflow / 16.0) {
        double scaleFactor = 16.0;
        a = a / scaleFactor;
        b = b / scaleFactor;
        scale = scale * scaleFactor;
    }
    if (cd > overflow / 16.0) {
        double scaleFactor = 16.0;
        c = c / scaleFactor;
        d = d / scaleFactor;
        scale = scale / scaleFactor;
    }
    if (ab < underflow * small / epsilon) {
        double scaleFactor = small / (epsilon * epsilon);
        a = a * scaleFactor;
        b = b * scaleFactor;
        scale = scale / scaleFactor;
    }
    if (cd < underflow * small / epsilon) {
        double scaleFactor = small / (epsilon * epsilon);
        c = c * scaleFactor;
        d = d * scaleFactor;
        scale = scale * scaleFactor;
    }
    if (Math.abs(c) > Math.abs(d)) {
        double r = d / c;
        double denominator = c + d * r;
        e = (a + b * r) / denominator;
        f = (b - a * r) / denominator;
    } else {
        double r = c / d;
        double denominator = c * r + d;
        e = (a * r + b) / denominator;
        f = (b * r - a) / denominator;
    }
    e = e * scale;
    f = f * scale;
    return new double[] { e, f };
}
