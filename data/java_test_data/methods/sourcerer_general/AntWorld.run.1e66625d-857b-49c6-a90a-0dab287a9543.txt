public void run() {
    try {
        int cpt = 0;
        while (!stop_thread) {
            mutex.acquire();
            // Do all actions decided by individuals
            getAndDoDecision();
            // Remove dead individuals
            removeDeadIndividuals();
            // Check and administer all battles
            checkAndAdministerBattles();
            // Ask to all colonies to create or not new individuals
            askIndividualToColony();
            // Remove all individuals returned to their colony
            removeReturnedIndividuals();
            // Remove dead colonies
            Iterator<Pair<Colony, List<Position>>> it = colonies.iterator();
            while (it.hasNext()) {
                Pair<Colony, List<Position>> next = it.next();
                if (next.getFirst().isADeadColony()) {
                    for (Vector<Cell> l : cells) {
                        for (Cell c : l) {
                            c.removeCellColony(next.getFirst());
                        }
                    }
                    it.remove();
                }
            }
            // refresh the world : reduce lifetime of all pheromones
            cpt++;
            if (cpt == TIME_FILL_SOURCES) {
                refreshWorld(true);
                cpt = 0;
            } else {
                refreshWorld(false);
            }
            for (Display d : displays) {
                d.display();
            }
            mutex.release();
            Thread.sleep(1000);
        }
    } catch (InterruptedException e) {
        System.err.println("Pause and/or resume system failed");
        e.printStackTrace();
    }
}
