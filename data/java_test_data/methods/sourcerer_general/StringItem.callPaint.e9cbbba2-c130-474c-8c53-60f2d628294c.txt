protected void callPaint(Graphics g) {
    int tmpY = getY();
    String tmpTitle = strTitle;
    // Escreve o t√≠tulo
    if (tmpTitle != null) {
        g.setFont(fontTitle);
        if (focus)
            g.setColor(colorFocusTitle);
        else
            g.setColor(colorTitle);
        if (hasOpen)
            tmpTitle += " -";
        else
            tmpTitle += " +";
        if (fontTitle.stringWidth(tmpTitle) < textW && tmpTitle.indexOf("\n") < 0) {
            g.drawString(tmpTitle, textX, tmpY, anchor);
            tmpY += fontTitle.getHeight();
        } else {
            int indexSpace = -1;
            int indexStarLine = 0;
            for (int j = 0; j < tmpTitle.length(); j++) {
                if (tmpTitle.charAt(j) == '\n') {
                    indexSpace = j;
                    if (indexSpace < 0) {
                        indexSpace = j - 1;
                    }
                    g.drawSubstring(tmpTitle, indexStarLine, indexSpace - indexStarLine, textX, tmpY, Graphics.TOP | Graphics.LEFT);
                    indexStarLine = indexSpace;
                    indexSpace = -1;
                    tmpY += fontTitle.getHeight();
                } else {
                    if (fontTitle.stringWidth(tmpTitle.substring(indexStarLine, j)) > textW) {
                        if (indexSpace < 0) {
                            indexSpace = j - 1;
                        }
                        g.drawSubstring(tmpTitle, indexStarLine, indexSpace - indexStarLine, textX, tmpY, Graphics.TOP | Graphics.LEFT);
                        indexStarLine = indexSpace;
                        indexSpace = -1;
                        tmpY += fontTitle.getHeight();
                    } else {
                        if (j == tmpTitle.length() - 1) {
                            g.drawSubstring(tmpTitle, indexStarLine, tmpTitle.length() - indexStarLine, textX, tmpY, Graphics.TOP | Graphics.LEFT);
                            tmpY += fontTitle.getHeight();
                        } else if (tmpTitle.charAt(j) == ' ') {
                            indexSpace = j + 1;
                        }
                    }
                }
            }
        }
    }
    // Escreve o texto
    if (strText != null && hasOpen) {
        g.setFont(fontText);
        if (focus)
            g.setColor(colorFocusText);
        else
            g.setColor(colorText);
        if (fontText.stringWidth(strText) < textW && strText.indexOf("\n") < 0) {
            g.drawString(strText, textX, tmpY, anchor);
            tmpY += fontText.getHeight();
        } else {
            int indexSpace = -1;
            int indexStarLine = 0;
            for (int j = 0; j < strText.length(); j++) {
                if (strText.charAt(j) == '\n') {
                    indexSpace = j;
                    if (indexSpace < 0) {
                        indexSpace = j - 1;
                    }
                    g.drawSubstring(strText, indexStarLine, indexSpace - indexStarLine, textX, tmpY, Graphics.TOP | Graphics.LEFT);
                    indexStarLine = indexSpace;
                    indexSpace = -1;
                    tmpY += fontText.getHeight();
                } else {
                    if (fontText.stringWidth(strText.substring(indexStarLine, j)) > textW) {
                        if (indexSpace < 0) {
                            indexSpace = j - 1;
                        }
                        g.drawSubstring(strText, indexStarLine, indexSpace - indexStarLine, textX, tmpY, Graphics.TOP | Graphics.LEFT);
                        indexStarLine = indexSpace;
                        indexSpace = -1;
                        tmpY += fontText.getHeight();
                    } else {
                        if (j == strText.length() - 1) {
                            g.drawSubstring(strText, indexStarLine, strText.length() - indexStarLine, textX, tmpY, Graphics.TOP | Graphics.LEFT);
                            tmpY += fontText.getHeight();
                        } else if (strText.charAt(j) == ' ') {
                            indexSpace = j + 1;
                        }
                    }
                }
            }
        }
    }
    // Desenha a borda
    if (hasBorder) {
        if (focus)
            g.setColor(colorFocusBorder);
        else
            g.setColor(colorBorder);
        if (hasOpen) {
            if (tmpTitle == null) {
                // Borda esquerda
                g.drawLine(getX(), getY(), getX(), getY() + getHeight() - 1);
                // Borda direita
                g.drawLine(getX() + getWidth() - 1, getY(), getX() + getWidth() - 1, getY() + getHeight() - 1);
                // Borda Superior
                g.drawLine(getX(), getY(), getX() + getWidth() - 1, getY());
            } else {
                // Borda esquerda
                g.drawLine(getX(), getY() + fontTitle.getHeight() / 2, getX(), getY() + getHeight() - 1);
                // Borda direita
                g.drawLine(getX() + getWidth() - 1, getY() + fontTitle.getHeight() / 2, getX() + getWidth() - 1, getY() + getHeight() - 1);
                // Borda Superior
                if (fontTitle.stringWidth(tmpTitle) < getWidth())
                    g.drawLine(getX() + textX + fontTitle.stringWidth(tmpTitle), getY() + fontTitle.getHeight() / 2, getX() + getWidth() - 1, getY() + fontTitle.getHeight() / 2);
            }
            // Borda Inferior
            g.drawLine(getX(), getY() + getHeight() - 1, getX() + getWidth() - 1, getY() + getHeight() - 1);
        } else {
            // Borda Superior
            if (tmpTitle == null)
                g.drawLine(getX(), getY(), getX() + getWidth() - 1, getY());
            else if (fontTitle.stringWidth(tmpTitle) < getWidth())
                g.drawLine(getX() + textX + fontTitle.stringWidth(tmpTitle), getY() + fontTitle.getHeight() / 2, getX() + getWidth() - 1, getY() + fontTitle.getHeight() / 2);
        }
    }
}
