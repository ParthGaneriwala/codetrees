protected void processListStack(String wikiSyntax) {
    int previousDepth = this.currentListDepth();
    int currentDepth = wikiSyntax.length();
    String tagType;
    // if list was previously open to a greater depth, close the old list down to the
    // current depth.
    int tagsToPop = (previousDepth - currentDepth);
    if (tagsToPop > 0) {
        this.popListTags(tagsToPop);
        previousDepth -= tagsToPop;
    }
    // some lists that must be closed.
    for (int i = 0; i < previousDepth; i++) {
        // get the tagType for the root list ("ul", "dl", etc, NOT "li")
        int tagPos = this.tagStack.size() - ((previousDepth - i) * 2);
        tagType = ((JFlexTagItem) this.tagStack.get(tagPos)).getTagType();
        if (tagType.equals(this.calculateListType(wikiSyntax.charAt(i)))) {
            continue;
        }
        // if the above test did not match, then the stack needs to be popped
        // to this point.
        tagsToPop = (previousDepth - i);
        this.popListTags(tagsToPop);
        previousDepth -= tagsToPop;
        break;
    }
    if (previousDepth == 0) {
        // if no list is open, open one
        this.pushTag(this.calculateListType(wikiSyntax.charAt(0)), null);
        // add the new list item to the stack
        this.pushTag(this.calculateListItemType(wikiSyntax.charAt(0)), null);
    } else if (previousDepth == currentDepth) {
        // pop the previous list item
        tagType = ((JFlexTagItem) this.tagStack.peek()).getTagType();
        popTag(tagType);
        // add the new list item to the stack
        this.pushTag(this.calculateListItemType(wikiSyntax.charAt(previousDepth - 1)), null);
    }
    // if the new list has additional elements, push them onto the stack
    int counterStart = (previousDepth > 1) ? previousDepth : 1;
    for (int i = counterStart; i < wikiSyntax.length(); i++) {
        String previousTagType = ((JFlexTagItem) this.tagStack.peek()).getTagType();
        // sub-lists, close the dt and open a "dd" for the sub-list
        if (previousTagType.equals("dt")) {
            this.popTag("dt");
            if (!this.calculateListType(wikiSyntax.charAt(i)).equals("dl")) {
                this.popTag("dl");
                this.pushTag("dl", null);
            }
            this.pushTag("dd", null);
        }
        this.pushTag(this.calculateListType(wikiSyntax.charAt(i)), null);
        this.pushTag(this.calculateListItemType(wikiSyntax.charAt(i)), null);
    }
}
