private boolean buildInvitationList(ActionRequest request) {
    boolean hasError = false;
    String[] matches = request.getParameterValues("matches");
    String[] accessToTools = request.getParameterValues("accessToTools");
    // build invitation list from the chosen ids
    if (matches != null) {
        request.getPortletSession().setAttribute("matches", matches);
        if (accessToTools != null) {
            request.getPortletSession().setAttribute("accessToTools", accessToTools);
        }
        for (String chosenId : matches) {
            request.getPortletSession().setAttribute("matchUserId-" + chosenId, request.getParameter("matchUserId-" + chosenId));
            request.getPortletSession().setAttribute("matchedRole-" + chosenId, request.getParameter("matchedRole-" + chosenId));
        }
    }
    String[] mismatches = request.getParameterValues("mismatches");
    String[] notMatchedAccessToTools = request.getParameterValues("notMatchedAccessToTools");
    if (mismatches != null) {
        request.getPortletSession().setAttribute("mismatches", mismatches);
        if (notMatchedAccessToTools != null) {
            request.getPortletSession().setAttribute("notMatchedAccessToTools", notMatchedAccessToTools);
        }
        for (String unmatchedId : mismatches) {
            String firstName = request.getParameter("firstName-" + unmatchedId);
            String lastName = request.getParameter("lastName-" + unmatchedId);
            String email = request.getParameter("email-" + unmatchedId);
            String notMatchedRole = request.getParameter("notMatchedRole-" + unmatchedId);
            request.getPortletSession().setAttribute("firstName-" + unmatchedId, firstName);
            request.getPortletSession().setAttribute("lastName-" + unmatchedId, lastName);
            request.getPortletSession().setAttribute("email-" + unmatchedId, email);
            request.getPortletSession().setAttribute("notMatchedRole-" + unmatchedId, notMatchedRole);
            if (!StringUtils.hasText(email) || !StringUtils.hasText(firstName) || !StringUtils.hasText(lastName)) {
                hasError = true;
            }
        }
    }
    if (matches == null && mismatches == null) {
        request.getPortletSession().setAttribute(ACTION_ERROR, "Please choose at least one entry before preparing the invitation message.");
    } else if (hasError) {
        request.getPortletSession().setAttribute(ACTION_ERROR, "Name and email is required for every checked entry.");
    }
    return (matches == null) && (mismatches == null) || hasError;
}
