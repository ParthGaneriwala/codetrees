public void testWaitingState() throws Exception {
    PublishSession publishSession = new PublishSession(getAlicePhone());
    // 1
    Request publish = publishSession.newPublish(getClass().getResourceAsStream("publish1.xml"), 60);
    // 2
    publishSession.sendRequest(publish, SipResponse.OK);
    SubscribeSession presenceSession = new SubscribeSession(getBobPhone(), "presence");
    // 3
    Request subscribe = presenceSession.newInitialSubscribe(0, getAliceUri());
    // 4
    presenceSession.sendRequest(subscribe, Response.OK);
    // 5
    ServerTransaction tx = presenceSession.waitForNotify();
    System.out.println("5:\n" + tx.getRequest());
    // 6
    presenceSession.sendResponse(Response.OK, tx);
    Presence presence = getPresence(tx.getRequest());
    assertEquals(Basic.CLOSED, presence.getTupleArray()[0].getStatus().getBasic());
    // 7
    SubscribeSession winfoSession = new SubscribeSession(getAlicePhone(), "presence.winfo");
    subscribe = winfoSession.newInitialSubscribe(60, getAliceUri());
    // 8
    winfoSession.sendRequest(subscribe, Response.OK);
    // 9
    tx = winfoSession.waitForNotify();
    Request notify = tx.getRequest();
    System.out.println("9:\n" + notify);
    // 10
    winfoSession.sendResponse(Response.OK, tx);
    SubscriptionStateHeader subState = (SubscriptionStateHeader) notify.getHeader(SubscriptionStateHeader.NAME);
    assertEquals(SubscriptionStateHeader.ACTIVE.toLowerCase(), subState.getState().toLowerCase());
    assertEquals(WatcherInfoEventPackage.NAME, ((EventHeader) notify.getHeader(EventHeader.NAME)).getEventType());
    Watcherinfo watcherinfo = getWatcherinfo(notify);
    assertEquals(0, watcherinfo.getVersion().intValue());
    assertEquals(Watcherinfo.State.FULL, watcherinfo.getState());
    assertEquals(1, watcherinfo.getWatcherListArray().length);
    WatcherList watcherList = watcherinfo.getWatcherListArray(0);
    assertEquals(getAliceUri(), watcherList.getResource());
    assertEquals(PresenceEventPackage.NAME, watcherList.getPackage());
    assertEquals(1, watcherList.getWatcherArray().length);
    Watcher watcher = watcherList.getWatcherArray(0);
    assertEquals(Event.TIMEOUT, watcher.getEvent());
    assertEquals(getBobUri(), watcher.getStringValue());
    assertEquals(Status.WAITING, watcher.getStatus());
    HttpClient httpClient = new HttpClient();
    // 11
    PutMethod put = new PutMethod(getHttpXcapUri() + ALICE_PRES_RULES_URI);
    InputStream is = WatcherInfoTest.class.getResourceAsStream("/xcap-root/pres-rules/users/put/elementCondAliceBob.xml");
    RequestEntity entity = new InputStreamRequestEntity(is, "application/xcap-el+xml");
    put.setRequestEntity(entity);
    int result = httpClient.executeMethod(put);
    // 12
    assertEquals(200, result);
    put.releaseConnection();
    presenceSession = new SubscribeSession(getBobPhone(), "presence");
    // 13
    subscribe = presenceSession.newInitialSubscribe(0, getAliceUri());
    // 14
    presenceSession.sendRequest(subscribe, Response.OK);
    // 15
    tx = presenceSession.waitForNotify();
    System.out.println("15:\n" + tx.getRequest());
    // 16
    presenceSession.sendResponse(Response.OK, tx);
    presence = getPresence(tx.getRequest());
    assertEquals(Basic.OPEN, presence.getTupleArray()[0].getStatus().getBasic());
    // 25
    publish = publishSession.newUnpublish();
    // 26
    publishSession.sendRequest(publish, Response.OK);
}
