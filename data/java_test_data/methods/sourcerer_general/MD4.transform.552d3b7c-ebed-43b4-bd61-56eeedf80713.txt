// own methods
// ...........................................................................
private void transform(byte[] block, int offset) {
    // entities. Use A as a temp var.
    for (int i = 0; i < 16; i++) X[i] = (block[offset++] & 0xFF) | (block[offset++] & 0xFF) << 8 | (block[offset++] & 0xFF) << 16 | (block[offset++] & 0xFF) << 24;
    int A = context[0];
    int B = context[1];
    int C = context[2];
    int D = context[3];
    A = FF(A, B, C, D, X[0], 3);
    D = FF(D, A, B, C, X[1], 7);
    C = FF(C, D, A, B, X[2], 11);
    B = FF(B, C, D, A, X[3], 19);
    A = FF(A, B, C, D, X[4], 3);
    D = FF(D, A, B, C, X[5], 7);
    C = FF(C, D, A, B, X[6], 11);
    B = FF(B, C, D, A, X[7], 19);
    A = FF(A, B, C, D, X[8], 3);
    D = FF(D, A, B, C, X[9], 7);
    C = FF(C, D, A, B, X[10], 11);
    B = FF(B, C, D, A, X[11], 19);
    A = FF(A, B, C, D, X[12], 3);
    D = FF(D, A, B, C, X[13], 7);
    C = FF(C, D, A, B, X[14], 11);
    B = FF(B, C, D, A, X[15], 19);
    A = GG(A, B, C, D, X[0], 3);
    D = GG(D, A, B, C, X[4], 5);
    C = GG(C, D, A, B, X[8], 9);
    B = GG(B, C, D, A, X[12], 13);
    A = GG(A, B, C, D, X[1], 3);
    D = GG(D, A, B, C, X[5], 5);
    C = GG(C, D, A, B, X[9], 9);
    B = GG(B, C, D, A, X[13], 13);
    A = GG(A, B, C, D, X[2], 3);
    D = GG(D, A, B, C, X[6], 5);
    C = GG(C, D, A, B, X[10], 9);
    B = GG(B, C, D, A, X[14], 13);
    A = GG(A, B, C, D, X[3], 3);
    D = GG(D, A, B, C, X[7], 5);
    C = GG(C, D, A, B, X[11], 9);
    B = GG(B, C, D, A, X[15], 13);
    A = HH(A, B, C, D, X[0], 3);
    D = HH(D, A, B, C, X[8], 9);
    C = HH(C, D, A, B, X[4], 11);
    B = HH(B, C, D, A, X[12], 15);
    A = HH(A, B, C, D, X[2], 3);
    D = HH(D, A, B, C, X[10], 9);
    C = HH(C, D, A, B, X[6], 11);
    B = HH(B, C, D, A, X[14], 15);
    A = HH(A, B, C, D, X[1], 3);
    D = HH(D, A, B, C, X[9], 9);
    C = HH(C, D, A, B, X[5], 11);
    B = HH(B, C, D, A, X[13], 15);
    A = HH(A, B, C, D, X[3], 3);
    D = HH(D, A, B, C, X[11], 9);
    C = HH(C, D, A, B, X[7], 11);
    B = HH(B, C, D, A, X[15], 15);
    context[0] += A;
    context[1] += B;
    context[2] += C;
    context[3] += D;
}
