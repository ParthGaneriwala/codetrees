public void AddUser(Integer porId, String pesNm, String pesNmEmail, Short pesTpPessoa, BigInteger pesNoCpfCnpj, String usuNmUsername, String usuNmSenha, String endereco, String complemento, String bairro, String cidade, String estado, String pais, Integer cep, Short tipoTelefone1, Integer ddd1, Integer telefone1, Integer ramal1, Short tipoTelefone2, Integer ddd2, Integer telefone2, Integer ramal2, String empresa, String provincia, /*ArrayList newsletterIds,*/
Integer usuarioAudit) {
    Date timestamp = new Date();
    try {
        // Verifica se j� existe um usuario com esse username
        String hqlSelect = "select tbusuario from TbUsuario as tbusuario" + " join tbusuario.tbRelUsuarioPortalCollection tbrelusuarioportal" + " join tbusuario.tbecPessoa tbecpessoa" + " where tbusuario.usuNmUsername = :userName" + " and tbrelusuarioportal.tbPortal.porId = :portalId" + " and tbecpessoa.pesTpStatus = 1";
        TbUsuario tbUsuarioByUserName = null;
        try {
            tbUsuarioByUserName = (TbUsuario) em.createQuery(hqlSelect).setParameter("userName", usuNmUsername).setParameter("portalId", porId.intValue()).getSingleResult();
        } catch (NoResultException ex) {
        }
        if (tbUsuarioByUserName != null) {
            throw new RuntimeException("J� existe um usu�rio cadastrado com esse username.");
        }
        // verificando se j� existe um usuario com esse email
        hqlSelect = "select tbecpessoa from TbecPessoa as tbecpessoa" + " join tbecpessoa.tbUsuario tbusuario" + " join tbusuario.tbRelUsuarioPortalCollection tbrelusuarioportal" + " where tbecpessoa.pesNmEmail = :email" + " and tbecpessoa.pesTpStatus = 1" + " and tbrelusuarioportal.tbPortal.porId = :portalId";
        TbUsuario tbUsuarioByEmail = null;
        try {
            tbUsuarioByEmail = (TbUsuario) em.createQuery(hqlSelect).setParameter("email", pesNmEmail).setParameter("portalId", porId.intValue()).getSingleResult();
        } catch (NoResultException ex) {
        }
        if (tbUsuarioByEmail != null) {
            throw new RuntimeException("J� existe um usu�rio cadastrado com esse e-mail.");
        }
        // Inserindo dados na tabela TbecPessoa
        TbecPessoa tbecPessoa = new TbecPessoa();
        tbecPessoa.setPesNmEmail(pesNmEmail);
        tbecPessoa.setPesNm(pesNm);
        tbecPessoa.setPesNoCpfCnpj(pesNoCpfCnpj);
        tbecPessoa.setPesTpPessoa(pesTpPessoa);
        // ATIVO
        tbecPessoa.setPesTpStatus(new Byte((byte) 1));
        tbecPessoa.setPesDtInclusaoAudit(timestamp);
        tbecPessoa.setPesIdInclusaoAudit(usuarioAudit);
        tbecPessoa.setPesDtManutAudit(timestamp);
        tbecPessoa.setPesIdManutAudit(usuarioAudit);
        em.persist(tbecPessoa);
        em.flush();
        // inserindo dados na tbPessoaCadastro
        TbPessoaCadastro tbPessoaCadastro = new TbPessoaCadastro();
        tbPessoaCadastro.setTpcPesId(tbecPessoa.getPesId());
        tbPessoaCadastro.setTbecPessoa(tbecPessoa);
        tbPessoaCadastro.setTpcNmBairro(bairro);
        tbPessoaCadastro.setTpcNmCidade(cidade);
        tbPessoaCadastro.setTpcNmComplemento(complemento);
        tbPessoaCadastro.setTpcNmEmpresa(empresa);
        tbPessoaCadastro.setTpcNmEndereco(endereco);
        tbPessoaCadastro.setTpcNmEstado(estado);
        tbPessoaCadastro.setTpcNmPais(pais);
        tbPessoaCadastro.setTpcNmProvincia(provincia);
        tbPessoaCadastro.setTpcNoCep(cep);
        tbPessoaCadastro.setTpcTpTelefone1(tipoTelefone1);
        tbPessoaCadastro.setTpcNoDdd1(ddd1);
        tbPessoaCadastro.setTpcNoTelefone1(telefone1);
        tbPessoaCadastro.setTpcNoRamal1(ramal1);
        tbPessoaCadastro.setTpcTpTelefone2(tipoTelefone2);
        tbPessoaCadastro.setTpcNoDdd2(ddd2);
        tbPessoaCadastro.setTpcNoTelefone2(telefone2);
        tbPessoaCadastro.setTpcNoRamal2(ramal2);
        tbPessoaCadastro.setTpcDtInclusaoAudit(timestamp);
        tbPessoaCadastro.setTpcDtManutAudit(timestamp);
        tbPessoaCadastro.setTpcIdInclusaoAudit(usuarioAudit);
        tbPessoaCadastro.setTpcIdManutAudit(usuarioAudit);
        em.persist(tbPessoaCadastro);
        em.flush();
        // inserindo dados na tbUsuario
        TbUsuario tbUsuario = new TbUsuario();
        tbUsuario.setUsuNmUsername(usuNmUsername);
        tbUsuario.setUsuNmSenha(usuNmSenha);
        tbUsuario.setTbecPessoa(tbecPessoa);
        tbUsuario.setUsuPesId(tbecPessoa.getPesId());
        tbUsuario.setUsuDtInclusaoAudit(timestamp);
        tbUsuario.setUsuDtManutAudit(timestamp);
        tbUsuario.setUsuIdInclusaoAudit(usuarioAudit);
        tbUsuario.setUsuIdManutAudit(usuarioAudit);
        em.persist(tbUsuario);
        em.flush();
        // Busca objeto Portal
        TbPortal tbPortal = em.find(TbPortal.class, porId);
        // criando relacionamento de usuario com portal (admin ou public)
        TbRelUsuarioPortal tbRelUsuarioPortal = new TbRelUsuarioPortal();
        tbRelUsuarioPortal.setTbUsuario(tbUsuario);
        tbRelUsuarioPortal.setTbPortal(tbPortal);
        tbRelUsuarioPortal.setRupIcAdmin(new Boolean(false));
        tbRelUsuarioPortal.setRupIcParceiro(new Boolean(false));
        tbRelUsuarioPortal.setRupDtInclusaoAudit(timestamp);
        tbRelUsuarioPortal.setRupDtManutAudit(timestamp);
        tbRelUsuarioPortal.setRupIdInclusaoAudit(usuarioAudit);
        tbRelUsuarioPortal.setRupIdManutAudit(usuarioAudit);
        em.persist(tbRelUsuarioPortal);
        // Obt�m o outro portal
        JpaUtilsDAO utilsDAO = new JpaUtilsDAO(em);
        int outroPortalId = utilsDAO.getIdPortalPublicacao(porId.intValue());
        if (outroPortalId == porId.intValue()) {
            outroPortalId = utilsDAO.getIdPortalDesenvolvimento(porId.intValue());
        }
        // Busca objeto Portal (outro)
        TbPortal tbPortalOutro = em.find(TbPortal.class, outroPortalId);
        // criando relacionamento de usuario com portal (o outro portal)
        tbRelUsuarioPortal = new TbRelUsuarioPortal();
        tbRelUsuarioPortal.setTbUsuario(tbUsuario);
        tbRelUsuarioPortal.setTbPortal(tbPortalOutro);
        tbRelUsuarioPortal.setRupIcAdmin(new Boolean(false));
        tbRelUsuarioPortal.setRupIcParceiro(new Boolean(true));
        tbRelUsuarioPortal.setRupDtInclusaoAudit(timestamp);
        tbRelUsuarioPortal.setRupDtManutAudit(timestamp);
        tbRelUsuarioPortal.setRupIdInclusaoAudit(usuarioAudit);
        tbRelUsuarioPortal.setRupIdManutAudit(usuarioAudit);
        em.persist(tbRelUsuarioPortal);
        // Adiciona o novo usu�rio a todos os grupos que estejam configurados
        // para auto-associa��o
        hqlSelect = "select distinct tbgrupo from TbGrupo as tbgrupo" + " join tbgrupo.tbRelGrupoPortalCollection tbrelgrupoportal" + " join tbrelgrupoportal.tbPortal tbportal" + " where tbgrupo.gruIcAutoAssociacao = 1" + " and tbportal.porId in (:portalId, :portalOutro)";
        List resultList = em.createQuery(hqlSelect).setParameter("portalId", porId).setParameter("portalOutro", tbPortalOutro.getPorId()).getResultList();
        // Adiciona o relacionamento do usu�rio com os grupos
        for (Iterator iter = resultList.iterator(); iter.hasNext(); ) {
            TbGrupo tbGrupo = (TbGrupo) iter.next();
            // criando relacionamento de usuario com grupo
            TbRelGrupoUsuario tbRelGrupoUsuario = new TbRelGrupoUsuario();
            tbRelGrupoUsuario.setTbUsuario(tbUsuario);
            tbRelGrupoUsuario.setTbGrupo(tbGrupo);
            tbRelGrupoUsuario.setRguDtInclusaoAudit(timestamp);
            tbRelGrupoUsuario.setRguDtManutAudit(timestamp);
            tbRelGrupoUsuario.setRguIdInclusaoAudit(usuarioAudit);
            tbRelGrupoUsuario.setRguIdManutAudit(usuarioAudit);
            em.persist(tbRelGrupoUsuario);
        }
    } catch (Exception e) {
        throw new EJBException(e);
    }
}
