public static String[] splitChars(String input, String charsToBeRemoved) {
    ArrayList output = new ArrayList();
    int minCapacity = 0;
    StringBuffer str = new StringBuffer();
    boolean charFound = false;
    boolean toBeAdd = false;
    for (int index = 0; index < input.length(); index++) {
        charFound = false;
        for (int charsCount = 0; charsCount < charsToBeRemoved.length(); charsCount++) if (charsToBeRemoved.charAt(charsCount) == input.charAt(index))
            charFound = true;
        if (!(charFound)) {
            str.append(input.charAt(index));
            toBeAdd = false;
        } else if (!toBeAdd)
            toBeAdd = true;
        // finished to parse one string
        if (toBeAdd && (str.length() != 0)) {
            minCapacity++;
            output.ensureCapacity(minCapacity);
            if (output.add(str.toString()))
                str = new StringBuffer();
            else
                minCapacity--;
        }
    }
    // add the last string
    if (str.length() != 0) {
        minCapacity++;
        output.ensureCapacity(minCapacity);
        if (output.add(str.toString()))
            str = new StringBuffer();
        else
            minCapacity--;
    }
    output.trimToSize();
    Object[] outputObj = output.toArray();
    String[] outputStr = new String[output.size()];
    for (int i = 0; i < output.size(); i++) outputStr[i] = new String((String) outputObj[i]);
    return outputStr;
}
