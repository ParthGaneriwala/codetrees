private Map<Integer, PrintPhotoItemDto[]> changePrintPhotoItemDtos(String type, SessionContainer sessionContainer, List<Item> printItems, Map<Integer, PrintPhotoItemDto[]> printPhotosItemsDtos) {
    PrintPhotoItemDto[] itemsArray;
    int j = 0;
    if ("1".equals(type)) {
        for (Item item : printItems) {
            int productId = item.getProduct().getId().intValue();
            if (productId == 300) {
                j = 0;
            } else if (productId == 301) {
                j = 1;
            } else if (productId == 302) {
                j = 2;
            } else if (productId == 303) {
                j = 3;
            } else {
                j = 4;
            }
            if (!printPhotosItemsDtos.containsKey(item.getPhoto().getId())) {
                itemsArray = new PrintPhotoItemDto[5];
                for (int i = 0; i < 5; i++) {
                    // 初始化
                    PrintPhotoItemDto printPhotosItemsDto = new PrintPhotoItemDto();
                    if (i < 4) {
                        printPhotosItemsDto.setProductId(0);
                    } else {
                        printPhotosItemsDto.setProductId(304);
                        printPhotosItemsDto.setUnitPrice(1.20f);
                    }
                    printPhotosItemsDto.setPrice(0f);
                    printPhotosItemsDto.setQuantity(0);
                    printPhotosItemsDto.setPhotoId(item.getPhoto().getId());
                    if (!"".equals(item.getPhoto().getDescription())) {
                        printPhotosItemsDto.setPhotoPath(item.getPhoto().getDescription());
                    } else {
                        printPhotosItemsDto.setPhotoPath(item.getPhoto().getPath());
                    }
                    itemsArray[i] = printPhotosItemsDto;
                }
                printPhotosItemsDtos.put(item.getPhoto().getId(), itemsArray);
                if (j == 4) {
                    itemsArray[j].setUnitPrice(item.getProduct().getPrice());
                }
                itemsArray[j].setItem(item);
                itemsArray[j].setPrice(item.getPrice());
                itemsArray[j].setProductId(productId);
                itemsArray[j].setQuantity(item.getQuantity());
            } else {
                itemsArray = printPhotosItemsDtos.get(item.getPhoto().getId());
                if (j == 4) {
                    itemsArray[j].setUnitPrice(item.getProduct().getPrice());
                }
                itemsArray[j].setItem(item);
                itemsArray[j].setPrice(item.getPrice());
                itemsArray[j].setProductId(productId);
                itemsArray[j].setQuantity(item.getQuantity());
            }
        }
    } else if ("2".equals(type)) {
        for (Item item : printItems) {
            int productId = item.getProduct().getId().intValue();
            if (productId == 330) {
                j = 0;
            } else if (productId == 331) {
                j = 1;
            } else {
                j = 2;
            }
            if (!printPhotosItemsDtos.containsKey(item.getPhoto().getId())) {
                itemsArray = new PrintPhotoItemDto[3];
                for (int i = 0; i < 3; i++) {
                    // 初始化
                    PrintPhotoItemDto printPhotosItemsDto = new PrintPhotoItemDto();
                    if (i < 2) {
                        printPhotosItemsDto.setProductId(0);
                    } else {
                        printPhotosItemsDto.setProductId(304);
                        printPhotosItemsDto.setUnitPrice(1.20f);
                    }
                    printPhotosItemsDto.setPrice(0f);
                    printPhotosItemsDto.setQuantity(0);
                    printPhotosItemsDto.setPhotoId(item.getPhoto().getId());
                    printPhotosItemsDto.setPhotoPath(item.getPhoto().getPath());
                    itemsArray[i] = printPhotosItemsDto;
                }
                printPhotosItemsDtos.put(item.getPhoto().getId(), itemsArray);
                if (j == 2) {
                    itemsArray[j].setUnitPrice(item.getProduct().getPrice());
                }
                itemsArray[j].setPrice(item.getPrice());
                itemsArray[j].setProductId(productId);
                itemsArray[j].setQuantity(item.getQuantity());
                itemsArray[j].setItem(item);
            } else {
                itemsArray = printPhotosItemsDtos.get(item.getPhoto().getId());
                if (j == 2) {
                    itemsArray[j].setUnitPrice(item.getProduct().getPrice());
                }
                itemsArray[j].setItem(item);
                itemsArray[j].setPrice(item.getPrice());
                itemsArray[j].setProductId(productId);
                itemsArray[j].setQuantity(item.getQuantity());
            }
        }
    } else if ("3".equals(type)) {
        for (Item item : printItems) {
            int productId = item.getProduct().getId().intValue();
            if (productId == 360) {
                j = 0;
            } else if (productId == 361) {
                j = 1;
            } else {
                j = 2;
            }
            if (!printPhotosItemsDtos.containsKey(item.getPhoto().getId())) {
                itemsArray = new PrintPhotoItemDto[3];
                for (int i = 0; i < 3; i++) {
                    // 初始化
                    PrintPhotoItemDto printPhotosItemsDto = new PrintPhotoItemDto();
                    if (i < 2) {
                        printPhotosItemsDto.setProductId(0);
                    } else {
                        printPhotosItemsDto.setProductId(304);
                        printPhotosItemsDto.setUnitPrice(1.20f);
                    }
                    printPhotosItemsDto.setPrice(0f);
                    printPhotosItemsDto.setQuantity(0);
                    printPhotosItemsDto.setPhotoId(item.getPhoto().getId());
                    printPhotosItemsDto.setPhotoPath(item.getPhoto().getPath());
                    itemsArray[i] = printPhotosItemsDto;
                }
                printPhotosItemsDtos.put(item.getPhoto().getId(), itemsArray);
                if (j == 2) {
                    itemsArray[j].setUnitPrice(item.getProduct().getPrice());
                }
                itemsArray[j].setPrice(item.getPrice());
                itemsArray[j].setProductId(productId);
                itemsArray[j].setQuantity(item.getQuantity());
                itemsArray[j].setItem(item);
            } else {
                itemsArray = printPhotosItemsDtos.get(item.getPhoto().getId());
                if (j == 2) {
                    itemsArray[j].setUnitPrice(item.getProduct().getPrice());
                }
                itemsArray[j].setItem(item);
                itemsArray[j].setPrice(item.getPrice());
                itemsArray[j].setProductId(productId);
                itemsArray[j].setQuantity(item.getQuantity());
            }
        }
    }
    return printPhotosItemsDtos;
}
