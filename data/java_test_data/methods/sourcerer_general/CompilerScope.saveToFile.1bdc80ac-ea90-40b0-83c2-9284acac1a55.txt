protected void saveToFile() {
    JFileChooser fd = null;
    postStatusMessage("Save As...");
    try {
        fd = new JFileChooser(previousLocation);
        fd.setFileFilter(new FileFilter() {

            @Override
            public boolean accept(File f) {
                if (f.isDirectory() || f.getName().endsWith(".xml") || f.getName().endsWith(".tig")) {
                    return true;
                }
                return false;
            }

            @Override
            public String getDescription() {
                return "XML, tig files";
            }
        });
        fd.setDialogTitle("Save As...");
        if (fd.showSaveDialog(mainFrame) != JFileChooser.APPROVE_OPTION) {
            postStatusMessage("");
            return;
        }
    } catch (Throwable e) {
        JOptionPane.showMessageDialog(mainFrame, "It appears your VM does not allow file saving.");
        postStatusMessage("");
        return;
    }
    File file = fd.getSelectedFile();
    if (file != null)
        try {
            String filePath = file.getPath();
            if (filePath.indexOf('.') == -1)
                filePath += ".xml";
            File createFile = new File(filePath);
            if (!createFile.createNewFile()) {
                int result = JOptionPane.showConfirmDialog(mainFrame, "Do you want to replace the existing file ?.", "Overwrite", JOptionPane.YES_NO_OPTION);
                if (result != JOptionPane.YES_OPTION)
                    return;
            }
            previousLocation = createFile.getParent();
            BufferedWriter bw = new BufferedWriter(new FileWriter(createFile));
            String text = codeTextPane.getText();
            bw.write(text);
            bw.close();
            openedFile = file;
            setFileModified(false);
            generateCFG = true;
        } catch (IOException e) {
            e.printStackTrace();
        }
}
