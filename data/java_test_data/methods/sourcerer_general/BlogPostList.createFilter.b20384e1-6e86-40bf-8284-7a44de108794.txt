protected void createFilter(StringBuffer sqlFilter) {
    if (instanceId > -1) {
        sqlFilter.append("AND n.project_id IN (SELECT project_id FROM projects WHERE instance_id = ?) ");
    }
    if (projectId > 0) {
        sqlFilter.append("AND n.project_id = ? ");
    }
    if (currentNews == Constants.TRUE) {
        sqlFilter.append("AND n.start_date <= CURRENT_TIMESTAMP " + "AND (CURRENT_TIMESTAMP <= n.end_date OR n.end_date IS NULL) " + "AND status = ? ");
    }
    if (archivedNews == Constants.TRUE) {
        sqlFilter.append("AND CURRENT_TIMESTAMP > n.end_date " + "AND n.end_date IS NOT NULL " + "AND n.start_date IS NOT NULL " + "AND status = ? ");
    }
    if (unreleasedNews == Constants.TRUE) {
        sqlFilter.append("AND (CURRENT_TIMESTAMP < n.start_date OR n.start_date IS NULL) " + "AND status = ? ");
    }
    if (incompleteNews == Constants.TRUE) {
        sqlFilter.append("AND (status = ? OR status IS NULL) ");
    }
    if (publicProjectPosts == Constants.TRUE) {
        sqlFilter.append("AND n.project_id IN (SELECT project_id FROM projects WHERE allow_guests = ? AND approvaldate IS NOT NULL) ");
    }
    if (forParticipant == Constants.TRUE) {
        sqlFilter.append("AND n.project_id IN (SELECT project_id FROM projects WHERE (allows_user_observers = ? OR allow_guests = ?) AND approvaldate IS NOT NULL) ");
    }
    if (alertRangeStart != null) {
        sqlFilter.append("AND n.start_date >= ? ");
    }
    if (alertRangeEnd != null) {
        sqlFilter.append("AND n.start_date < ? ");
    }
    if (forUser > -1) {
        sqlFilter.append("AND (n.project_id IN (SELECT DISTINCT project_id FROM project_team WHERE user_id = ? " + "AND status IS NULL) OR n.project_id IN (SELECT project_id FROM projects WHERE allow_guests = ? AND approvaldate IS NOT NULL)) ");
    }
    if (classificationId > -1) {
        sqlFilter.append("AND n.classification_id = ? ");
    }
    if (overviewAll) {
        sqlFilter.append("AND (( " + "    n.start_date <= CURRENT_TIMESTAMP " + "    AND (CURRENT_TIMESTAMP <= n.end_date OR n.end_date IS NULL) " + "    AND status = ?) " + "  OR ( " + "          (CURRENT_TIMESTAMP < n.start_date OR n.start_date IS NULL)  " + "          AND status = ?) " + "  OR ( " + "          (status = ? OR status IS NULL) " + ")) ");
    }
    if (categoryId > -1) {
        sqlFilter.append("AND n.category_id = ? ");
    }
    if (checkNullProjectId) {
        sqlFilter.append("AND n.project_id IS NULL ");
    }
    if (checkNullCategoryId) {
        sqlFilter.append("AND n.category_id IS NULL ");
    }
    if (checkNullEndDate) {
        sqlFilter.append("AND n.end_date IS NULL ");
    }
    if (status > -1) {
        sqlFilter.append("AND n.status = ? ");
    }
    if (publishedYearMonth != null) {
        sqlFilter.append(" AND ( start_date >= ? AND start_date < ? )");
    }
    if (enteredBy > 0) {
        sqlFilter.append(" AND enteredby = ? ");
    }
    if (projectCategoryId != -1) {
        sqlFilter.append(" AND n.project_id IN ( SELECT project_id FROM projects WHERE category_id = ? ) ");
    }
    if (minimumRatingCount != -1) {
        sqlFilter.append("AND rating_count >= ? ");
    }
    if (minimumRatingAvg != -1) {
        sqlFilter.append("AND rating_avg >= ? ");
    }
    if (filterInappropriate != Constants.UNDEFINED) {
        sqlFilter.append("AND (inappropriate_count IS NULL OR inappropriate_count = ?) ");
    }
}
