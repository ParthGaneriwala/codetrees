@Test
@DirtiesContext
public void testResurrectionDuringSimulation() throws Exception {
    configureMinimalGame();
    System.out.println("***** testOnlineSell *****");
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    // Target
    userService.createUser("U1", "test", "test", "");
    userService.login("U1", "test");
    movableService.sendTutorialProgress(TutorialConfig.TYPE.TUTORIAL, "", "", 0, 0);
    SimpleBase targetBase = getMyBase();
    UserState targetUserState = userService.getUserState();
    Id targetId = getFirstSynItemId(targetBase, TEST_START_BUILDER_ITEM_ID);
    userGuidanceService.promote(targetUserState, TEST_LEVEL_4_SIMULATED_ID);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Kill
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    movableService.sendTutorialProgress(TutorialConfig.TYPE.TUTORIAL, "", "", 0, 0);
    SimpleBase actorBase = getMyBase();
    Id actorBuilder = getFirstSynItemId(actorBase, TEST_START_BUILDER_ITEM_ID);
    sendBuildCommand(actorBuilder, new Index(100, 100), TEST_FACTORY_ITEM_ID);
    waitForActionServiceDone();
    Id actorFactory = getFirstSynItemId(actorBase, TEST_FACTORY_ITEM_ID);
    sendFactoryCommand(actorFactory, TEST_ATTACK_ITEM_ID);
    waitForActionServiceDone();
    Id actorAttacker = getFirstSynItemId(actorBase, TEST_ATTACK_ITEM_ID);
    sendAttackCommand(actorAttacker, targetId);
    waitForActionServiceDone();
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    userService.login("U1", "test");
    movableService.sendTutorialProgress(TutorialConfig.TYPE.TUTORIAL, "", "", 0, 0);
    // Connection
    getMyBase();
    Message message = new Message();
    message.setMessage("You lost your base. A new base was created.");
    assertPackagesIgnoreSyncItemInfoAndClear(message);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
