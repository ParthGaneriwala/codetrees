public ActionForward showPrintPhotos(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    if (!isLoggedIn(request)) {
        return mapping.findForward(ForwardConstants.INDEX);
    }
    SessionContainer sessionContainer = getSessionContainer(request);
    ShoppingCart cart = sessionContainer.getCart();
    Customer customer = sessionContainer.getCustomer();
    Customer customer1 = customerService.findByEmail(customer.getEmail());
    List<Album> allAlbums = customer1.getAlbums();
    String type = request.getParameter("type");
    String selection = request.getParameter("selection");
    if (selection == null || "".equals(selection)) {
        selection = "6D亮面";
    }
    request.setAttribute("selection", selection);
    if (type == null || "".equals(type.trim())) {
        type = "1";
    }
    request.setAttribute("type", type);
    request.setAttribute("allAlbums", allAlbums);
    // if (!this.isTokenValid(request)) {
    // this.saveToken(request);
    // return mapping.findForward("chongyinku");
    // } else {
    // this.resetToken(request);
    // }
    // Get the id for the product to be added
    Integer albumId = Integer.parseInt(request.getParameter("id"));
    Album album = albumService.findAlbumById(albumId);
    Photo photo;
    Product product;
    if ("2".equals(type)) {
        product = productService.findById(331);
    } else if ("3".equals(type)) {
        product = productService.findById(361);
    } else {
        product = productService.findById(302);
    }
    // Default value to add
    int quantity = 1;
    try {
        List<AlbumPhoto> albumPhotos = album.getAlbumPhotos();
        List<Item> tempItems = new ArrayList<Item>();
        for (AlbumPhoto ap : albumPhotos) {
            photo = ap.getPhoto();
            Item item = new Item(photo, product, quantity);
            tempItems.add(item);
        }
        Map<Integer, PrintPhotoItemDto[]> printPhotosItemsDtos = cart.getPrintPhotosItemsDto();
        printPhotosItemsDtos = changePrintPhotoItemDtos(type, sessionContainer, tempItems, printPhotosItemsDtos);
    // addPrintItemDtosTypeOne(tempItems, printPhotosItemsDtos);
    } catch (Exception e) {
        System.out.println(e);
        e.printStackTrace();
    }
    cart.setAdjustColor("1");
    cart.setAdjustTailor("1");
    request.setAttribute("cartContent", cartContent(cart));
    // request.setAttribute("adjustTailor", "1");
    return mapping.findForward("chongyinku");
}
