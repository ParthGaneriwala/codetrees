public String doView(RenderRequest request, RenderResponse response) throws Exception {
    // The JSP to show upon success
    String defaultView = VIEW_PAGE;
    // Determine the project container to use
    Project project = findProject(request);
    // Check the user's permissions
    User user = getUser(request);
    if (!ProjectUtils.hasAccess(project.getId(), user, "project-reviews-add")) {
        throw new PortletException("Unauthorized to add in this project");
    }
    // The owner of a project may not review the project unless he is an admin.
    if (project.getOwner() != -1 && project.getOwner() == user.getId() && !ProjectUtils.hasAccess(project.getId(), user, "project-reviews-admin")) {
        throw new PortletException("PermissionError");
    }
    // Parameters
    String vote = request.getParameter("v");
    boolean showText = "true".equals(request.getParameter("ratingShowText"));
    PortletURL renderURL = response.createRenderURL();
    renderURL.setParameter("portlet-command", "setProjectRating");
    renderURL.setParameter("v", "{vote}");
    renderURL.setParameter("out", "text");
    if ("true".equals(request.getParameter("popup"))) {
        renderURL.setParameter("popup", "true");
    }
    renderURL.setWindowState(WindowState.MAXIMIZED);
    String url = renderURL.toString();
    LOG.debug("URL: " + url);
    request.setAttribute("url", url);
    request.setAttribute("ratingShowText", showText);
    request.setAttribute("field", "rating");
    // Prepare the bean
    RatingBean ratingBean = new RatingBean();
    ratingBean.setCount(1);
    ratingBean.setItemId(project.getId());
    ratingBean.setValue(Integer.parseInt(vote));
    request.setAttribute(RATING_BEAN, ratingBean);
    return defaultView;
}
