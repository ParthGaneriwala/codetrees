public void setPerson(Person person) {
    isAdjusting = true;
    // Take care of listener issues
    if (this.dataModel != null) {
        this.dataModel.removePropertyChangeListener(this);
        this.dataModel.removeSkillSkillChangeListener(this);
    }
    this.dataModel = person;
    this.dataModel.addPropertyChangeListener(this);
    this.dataModel.addSkillChangeListener(this);
    // name and profile
    nameField.setText(dataModel.getName());
    nameField.getDocument().addDocumentListener(new DocumentListener() {

        public void insertUpdate(DocumentEvent e) {
            doUpdateName();
        }

        public void removeUpdate(DocumentEvent e) {
            doUpdateName();
        }

        public void changedUpdate(DocumentEvent e) {
            doUpdateName();
        }
    });
    // level
    switch(person.getLevel()) {
        default:
            levelCombo.setSelectedIndex(0);
            break;
        case Person.LEVEL_VETERAN:
            levelCombo.setSelectedIndex(1);
            break;
        case Person.LEVEL_BIG_DAM_HERO:
            levelCombo.setSelectedIndex(2);
            break;
    }
    // gender
    if (dataModel.isMale()) {
        maleButton.setSelected(true);
    } else {
        femaleButton.setSelected(true);
    }
    refreshStatPoints();
    // skill points
    refreshSkillPoints();
    isAdjusting = false;
    refreshMoneyDisplay();
    if (StringUtils.isEmpty(dataModel.getPersonalityTemplate())) {
        personalityField.setText("");
    } else {
        personalityField.setText(dataModel.getPersonalityTemplate());
    }
    personalityField.getDocument().addDocumentListener(new DocumentListener() {

        public void insertUpdate(DocumentEvent e) {
            doUpdatePersonality();
        }

        public void removeUpdate(DocumentEvent e) {
            doUpdatePersonality();
        }

        public void changedUpdate(DocumentEvent e) {
            doUpdatePersonality();
        }
    });
}
