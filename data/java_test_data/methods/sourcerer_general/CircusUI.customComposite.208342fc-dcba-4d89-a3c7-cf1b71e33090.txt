private void customComposite() {
    final javax.media.Player player = startMedia("tango.mp3");
    final Composite composite = new Composite(shell, SWT.NONE);
    composite.setLayout(new FormLayout());
    canvas = new Canvas(composite, SWT.DOUBLE_BUFFERED);
    stickColor = new Color(display, 219, 82, 16);
    Color white = display.getSystemColor(SWT.COLOR_WHITE);
    Color black = display.getSystemColor(SWT.COLOR_BLACK);
    PaletteData palette = new PaletteData(new RGB[] { white.getRGB(), black.getRGB() });
    ImageData sourceData = new ImageData(16, 16, 1, palette);
    sourceData.transparentPixel = 0;
    final Cursor cursor = new Cursor(display, sourceData, 0, 0);
    canvas.setCursor(cursor);
    canvas.setLayoutData(formData);
    canvas.setBackgroundImage(backgroundImg1);
    canvas.setBackground(display.getSystemColor(SWT.COLOR_WHITE));
    canvas.addPaintListener(new PaintListener() {

        @Override
        public void paintControl(PaintEvent e) {
            if (bars == null)
                return;
            PlateSky.getInstance().draw(e.gc);
            Iterator<Player> iter = players.iterator();
            while (iter.hasNext()) iter.next().draw(e.gc);
            for (int i = 0; i < bars.length; i++) bars[i].draw(e.gc);
        }
    });
    canvas.addMouseMoveListener(new MouseMoveListener() {

        @Override
        public void mouseMove(MouseEvent e) {
            players.get(0).setXLocation(e.x);
            last.x = e.x;
            last.y = e.y;
        }
    });
    canvas.addMouseListener(new MouseAdapter() {

        private boolean stopped = false;

        @Override
        public void mouseDown(MouseEvent e) {
            if (stopped) {
                stopped = false;
                display.timerExec(UPDATE_TIME, updateRunnable);
            } else {
                display.timerExec(-1, updateRunnable);
                stopped = true;
            }
        }
    });
    shell.addTraverseListener(transientTraverser);
    final KeyListener secondPlayerController = new KeyAdapter() {

        @Override
        public void keyPressed(KeyEvent e) {
            if (e.keyCode == SWT.ARROW_LEFT) {
                try {
                    players.get(1).move(-keyboardStep);
                } catch (NullPointerException e1) {
                    System.err.println("second player not created yet");
                }
            } else if (e.keyCode == SWT.ARROW_RIGHT) {
                try {
                    players.get(1).move(keyboardStep);
                    canvas.redraw();
                } catch (NullPointerException e1) {
                    System.err.println("second player not created yet");
                }
            }
        }
    };
    final Runnable changeImages = new Runnable() {

        @Override
        public void run() {
            Iterator<Player> iter = players.iterator();
            if (firstClown) {
                firstClown = false;
                while (iter.hasNext()) iter.next().setImage(clown2Img);
            } else {
                firstClown = true;
                while (iter.hasNext()) iter.next().setImage(clown1Img);
            }
            display.timerExec(300, this);
        }
    };
    display.timerExec(300, changeImages);
    canvas.addKeyListener(secondPlayerController);
    composite.addDisposeListener(new DisposeListener() {

        @Override
        public void widgetDisposed(DisposeEvent e) {
            cursor.dispose();
            stickColor.dispose();
            player.stop();
            shell.removeKeyListener(secondPlayerController);
            display.timerExec(-1, updateRunnable);
            display.timerExec(-1, changeImages);
        }
    });
    currentComposite = composite;
    createControls(composite);
    if (connected) {
        if (server.isWorking())
            createBars();
    } else
        createBars();
    createPlayers();
}
