public String addMember() {
    Session session = null;
    try {
        session = HibernateUtil.getSession();
        Transaction transaction = session.beginTransaction();
        if (getEmail() == null) {
            Contexts.getSession().setAttribute("errMsg", "email is mandatory. please enter one");
            return "fail";
        }
        if ((getEmail() != null)) {
            String regex = "(\\w+)(\\.\\w+)*@(\\w+\\.)(\\w+)(\\.\\w+)*";
            if (!(getEmail().matches(regex))) {
                Contexts.getSession().setAttribute("errMsg", "email is not valid. please try again");
                return "fail";
            }
        }
        if (getPassword() == null) {
            Contexts.getSession().setAttribute("errMsg", "password is mandatory. please enter both fields");
            return "fail";
        }
        if (getPassword2() == null) {
            Contexts.getSession().setAttribute("errMsg", "please re-enter your password for validation");
            return "fail";
        }
        if (getNickName() == null) {
            Contexts.getSession().setAttribute("errMsg", "nick name is mandatory. please enter one");
            return "fail";
        }
        if (getPassword().length() < 5) {
            Contexts.getSession().setAttribute("errMsg", "password must be at least 5 chars long. please enter one");
            return "fail";
        }
        if (!(getPassword().equals(getPassword2()))) {
            Contexts.getSession().setAttribute("errMsg", "Two passwrods don't match. Please try again.");
            return "fail";
        }
        Query query = session.getNamedQuery("Users.checkEmail");
        query.setParameter("email", getEmail());
        List<Lists> results = query.list();
        System.out.println("results.size: " + results.size());
        if (results.size() != 0) {
            Contexts.getSession().setAttribute("errMsg", "The email you chose already exists. Please try again.");
            return "fail";
        }
        query = session.getNamedQuery("Users.checkNick");
        query.setParameter("nickName", getNickName());
        results = query.list();
        System.out.println("results.size: " + results.size());
        if (results.size() != 0) {
            Contexts.getSession().setAttribute("errMsg", "The nick name you chose already exists. Please try again.");
            return "fail";
        }
        // start pushing the values
        Users newUser = new Users();
        newUser.setEmail(getEmail());
        newUser.setPassword(getPassword());
        newUser.setNickName(getNickName());
        if (getBirthDate().length() != 0) {
            try {
                DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
                Date d = df.parse(getBirthDate());
                newUser.setBirthDate(d);
            } catch (ParseException e) {
                Contexts.getSession().setAttribute("errMsg", "Date is not in correct format (dd/mm/yyyy). Please try again.");
                return "fail";
            }
        }
        if (getAddress() != null) {
            newUser.setAddress(getAddress());
        }
        if (getAboutMe() != null) {
            newUser.setAboutMe(getAboutMe());
        }
        if (Contexts.getSession().getAttribute("pic") != null) {
            try {
                newUser.setPicture((Blob) Contexts.getSession().getAttribute("pic"));
                Contexts.getSession().removeAttribute("pic");
            // newUser.setUser((Users) Contexts.getSession().getAttribute("user"));
            } catch (Exception e) {
                Contexts.getSession().setAttribute("errMsg", "Having problems uploading this pic.. Please try again.");
            }
        }
        newUser.setRole("regular");
        newUser.setCancelled(false);
        // store new user to session
        Contexts.getSession().setAttribute("user", newUser);
        session.save(newUser);
        transaction.commit();
    } catch (Exception e) {
        e.printStackTrace();
        return "failure";
    } finally {
        session.flush();
        session.close();
    }
    Contexts.getSession().setAttribute("errMsg", "");
    return "success";
}
