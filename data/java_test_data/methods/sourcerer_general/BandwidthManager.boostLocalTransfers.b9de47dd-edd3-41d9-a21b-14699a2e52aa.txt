public void boostLocalTransfers() throws Exception {
    if (transfers.isEmpty() || this.nodeId == /*backup source*/
    30 || this.transfers.size() > 50)
        /*effectively means that each transfer fair share is < 2% */
        return;
    // sanityCheck();
    P.rint(this.nodeId + " boosting local transfers");
    ArrayList<Transfer> looseTransfers = new ArrayList<Transfer>();
    for (Transfer t : transfers) {
        t.updatedLooseValue();
        if (Math.floor(t.looseValue) > BANDWIDTH_TOL) {
            looseTransfers.add(t);
        }
    }
    int loops = 0;
    while (!(looseTransfers.isEmpty() || availableInBPS < BANDWIDTH_TOL * (looseTransfers.size()))) {
        loops++;
        Set<BandwidthManager> candidates = new HashSet<BandwidthManager>();
        double error = 0;
        for (Transfer t : looseTransfers) {
            double added = t.looseValue;
            // to prevent future rounding errors, remove fractions
            added = Math.floor(added);
            error += t.looseValue - added;
            if (added < BANDWIDTH_TOL)
                continue;
            candidates.add(t.getOtherBandwidthManagerThan(this));
            t.setNextEpochBW(t.bandwidthInBPS + added);
        }
        int errorBytes = (int) error;
        for (Transfer t : looseTransfers) {
            A.ssert(t.getNextEpochBW() > 0);
            double added = t.getNextEpochBW() - t.bandwidthInBPS;
            t.applyNextEpochBW();
            t.sourceBandwidthManager.availableInBPS -= added;
            t.destBandwidthManager.availableInBPS -= added;
        }
        ArrayList<Transfer> stillLoose = new ArrayList<Transfer>();
        for (Transfer t : looseTransfers) {
            t.updatedLooseValue();
            if (Math.floor(t.looseValue) > BANDWIDTH_TOL) {
                stillLoose.add(t);
            }
        }
        looseTransfers = stillLoose;
        if (errorBytes < totalBandwidthInBPS * 2.0 / 100)
            break;
    }
    // for(Transfer t : transfers)
    // {
    // A.ssert(!t.loose());
    // }
    P.rint("boosting done in " + loops + " loops");
}
