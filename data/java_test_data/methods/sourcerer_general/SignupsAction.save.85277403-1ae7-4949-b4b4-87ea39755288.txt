public String save() throws Exception {
    System.out.println("saving new user in portal...");
    user.setEnabled(true);
    // Set the default user role on this new user
    user.addRole(roleManager.getRole(Constants.USER_PURCHASE_ROLE));
    try {
        System.out.println("validating...");
        if (validationPasses()) {
            userManager.saveUser(user);
            System.out.println("user saved...");
        } else {
            getRequest().setAttribute("signup", true);
            System.out.println("validation did'nt pass");
            return ERROR;
        }
    } catch (AccessDeniedException ade) {
        // thrown by UserSecurityAdvice configured in aop:advisor userManagerSecurity
        log.warn(ade.getMessage());
        getResponse().sendError(HttpServletResponse.SC_FORBIDDEN);
        return null;
    } catch (UserExistsException e) {
        log.warn(e.getMessage());
        List<String> args = new ArrayList<String>();
        args.add(user.getUsername());
        args.add(user.getEmail());
        addActionError(getText("errors.existing.user", args));
        // redisplay the unencrypted passwords
        user.setPassword(user.getConfirmPassword());
        return INPUT;
    }
    saveMessage(getText("user.registered"));
    getSession().setAttribute(Constants.REGISTERED, Boolean.TRUE);
    // log user in automatically
    UsernamePasswordAuthenticationToken auth = new UsernamePasswordAuthenticationToken(user.getUsername(), user.getConfirmPassword(), user.getAuthorities());
    auth.setDetails(user);
    SecurityContextHolder.getContext().setAuthentication(auth);
    // Send an account information e-mail
    mailMessage.setSubject(getText("signup.email.subject"));
    try {
        sendUserMessage(user, getText("signup.email.message"), RequestUtil.getAppURL(getRequest()));
    } catch (MailException me) {
        addActionError(me.getMostSpecificCause().getMessage());
    }
    return SUCCESS;
}
