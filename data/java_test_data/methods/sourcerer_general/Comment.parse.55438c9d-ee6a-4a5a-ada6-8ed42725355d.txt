public static Comment parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception {
    Comment object = new Comment();
    int event;
    java.lang.String nillableValue = null;
    java.lang.String prefix = "";
    java.lang.String namespaceuri = "";
    try {
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance", "type") != null) {
            java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance", "type");
            if (fullTypeName != null) {
                java.lang.String nsPrefix = null;
                if (fullTypeName.indexOf(":") > -1) {
                    nsPrefix = fullTypeName.substring(0, fullTypeName.indexOf(":"));
                }
                nsPrefix = nsPrefix == null ? "" : nsPrefix;
                java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":") + 1);
                if (!"Comment".equals(type)) {
                    // find namespace for the prefix
                    java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                    return (Comment) com.jcommerce.ws.server.ExtensionMapper.getTypeObject(nsUri, type, reader);
                }
            }
        }
        // Note all attributes that were handled. Used to differ normal attributes
        // from anyAttributes.
        java.util.Vector handledAttributes = new java.util.Vector();
        reader.next();
        java.util.ArrayList list13 = new java.util.ArrayList();
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "id").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setId(org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
            reader.next();
        } else // End of if for expected property start element
        {
            object.setId(java.lang.Integer.MIN_VALUE);
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "commentType").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setCommentType(org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
            reader.next();
        } else // End of if for expected property start element
        {
            object.setCommentType(java.lang.Integer.MIN_VALUE);
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "goods").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setGoods(org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
            reader.next();
        } else // End of if for expected property start element
        {
            object.setGoods(java.lang.Integer.MIN_VALUE);
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "email").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setEmail(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
            reader.next();
        } else // End of if for expected property start element
        {
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "user").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setUser(org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
            reader.next();
        } else // End of if for expected property start element
        {
            object.setUser(java.lang.Integer.MIN_VALUE);
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "userName").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setUserName(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
            reader.next();
        } else // End of if for expected property start element
        {
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "content").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setContent(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
            reader.next();
        } else // End of if for expected property start element
        {
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "commentRank").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setCommentRank(org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
            reader.next();
        } else // End of if for expected property start element
        {
            object.setCommentRank(java.lang.Integer.MIN_VALUE);
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "addTime").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setAddTime(org.apache.axis2.databinding.utils.ConverterUtil.convertToDate(content));
            reader.next();
        } else // End of if for expected property start element
        {
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "ipAddress").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setIpAddress(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
            reader.next();
        } else // End of if for expected property start element
        {
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "status").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setStatus(org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
            reader.next();
        } else // End of if for expected property start element
        {
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "parent").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setParent(org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
            reader.next();
        } else // End of if for expected property start element
        {
            object.setParent(java.lang.Integer.MIN_VALUE);
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "children").equals(reader.getName())) {
            // Process the array and step past its final element's end.
            list13.add(reader.getElementText());
            // loop until we find a start element that is not part of this array
            boolean loopDone13 = false;
            while (!loopDone13) {
                // Ensure we are at the EndElement
                while (!reader.isEndElement()) {
                    reader.next();
                }
                // Step out of this element
                reader.next();
                // Step to next element event.
                while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                if (reader.isEndElement()) {
                    // two continuous end elements means we are exiting the xml structure
                    loopDone13 = true;
                } else {
                    if (new javax.xml.namespace.QName("http://ws.jcommerce.com/", "children").equals(reader.getName())) {
                        list13.add(reader.getElementText());
                    } else {
                        loopDone13 = true;
                    }
                }
            }
            // call the converter utility  to convert and set the array
            object.setChildren((int[]) org.apache.axis2.databinding.utils.ConverterUtil.convertToArray(int.class, list13));
        } else // End of if for expected property start element
        {
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement())
            // A start element we are not expecting indicates a trailing invalid property
            throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
    } catch (javax.xml.stream.XMLStreamException e) {
        throw new java.lang.Exception(e);
    }
    return object;
}
