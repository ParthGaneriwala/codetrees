public static boolean getAllContacts(String userName, String passWord) throws ServiceException, IOException {
    ContactsService myService = new ContactsService("TEST");
    try {
        myService.setUserCredentials(userName + "@gmail.com", passWord);
    } catch (AuthenticationException e2) {
        // TODO Auto-generated catch block
        return false;
    // e2.printStackTrace();
    }
    // Request the feed
    URL feedUrl = new URL("http://www.google.com/m8/feeds/contacts/" + userName + "@gmail.com/full");
    ContactFeed resultFeed = myService.getFeed(feedUrl, ContactFeed.class);
    // Print the results
    System.out.println(resultFeed.getTitle().getPlainText());
    for (int i = 0; i < resultFeed.getEntries().size(); i++) {
        PersonalContact pc = new PersonalContact();
        ContactEntry entry = resultFeed.getEntries().get(i);
        pc.setContactName(entry.getTitle().getPlainText());
        System.out.println("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\t" + entry.getTitle().getPlainText());
        ArrayList<String> emailAddressList = new ArrayList<String>();
        System.out.println("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Email addresses:");
        for (Email email : entry.getEmailAddresses()) {
            emailAddressList.add(email.getAddress());
            System.out.print(" @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@" + email.getAddress());
            System.out.print("\n");
        }
        pc.setEmailAddresseList(emailAddressList);
        ArrayList<String> imContactInformationList = new ArrayList<String>();
        System.out.println("IM addresses:");
        for (Im im : entry.getImAddresses()) {
            imContactInformationList.add(im.getAddress());
            System.out.print(" " + im.getAddress());
            System.out.print("\n");
        }
        pc.setImContactInformationList(imContactInformationList);
        DataPool.getInstance().newContact(pc);
    // System.out.println("Groups:");
    // for (GroupMembershipInfo group : entry.getGroupMembershipInfos())
    // {
    // String groupHref = group.getHref();
    // System.out.println("  Id: " + groupHref);
    // }
    // 
    // System.out.println("Extended Properties:");
    // for (ExtendedProperty property : entry.getExtendedProperties()) {
    // if (property.getValue() != null) {
    // System.out.println("  " + property.getName() + "(value) = "
    // + property.getValue());
    // } else if (property.getXmlBlob() != null) {
    // System.out.println("  " + property.getName()
    // + "(xmlBlob)= " + property.getXmlBlob().getBlob());
    // }
    // }
    // 
    // String photoLink = entry.getContactPhotoLink().getHref();
    // System.out.println("Photo Link: " + photoLink);
    // 
    // if (photoLink.getEtag() != null) {
    // System.out.println("Contact Photo's ETag: "
    // + photoLink.getEtag());
    // }
    // 
    // System.out.println("Contact's ETag: " + entry.getEtag());
    }
    return true;
}
