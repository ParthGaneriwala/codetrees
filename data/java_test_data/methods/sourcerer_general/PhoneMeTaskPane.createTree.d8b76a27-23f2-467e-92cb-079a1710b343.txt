private void createTree(DefaultMutableTreeNode root) {
    DefaultMutableTreeNode group = null;
    DefaultMutableTreeNode contact = null;
    // System.out.println("Create Tree!");
    final HashMap<String, ContactGroup> allContactGroup = DataPool.getInstance().getAllContactGroupMap();
    // System.out.println("GROUP" + allContactGroup.size());
    final HashMap<Integer, ContactOperations> allContactISN = DataPool.getInstance().getAllContactISNMap();
    // System.out.println("ALL CONTACT" + allContactISN.size());
    Iterator<Entry<String, ContactGroup>> it = allContactGroup.entrySet().iterator();
    while (it.hasNext()) {
        Entry<String, ContactGroup> entry = (Entry<String, ContactGroup>) it.next();
        group = new DefaultMutableTreeNode(entry.getKey());
        root.add(group);
        final HashSet<Integer> groupMember = entry.getValue().getGroupMembers();
        Iterator<Integer> newIt = groupMember.iterator();
        while (newIt.hasNext()) {
            ContactOperations c = allContactISN.get(newIt.next());
            System.out.println(c.getContactName());
            contact = new DefaultMutableTreeNode(new TreeNodeItem(c.getContactName(), c.getISN()));
            group.add(contact);
        }
    }
    // δ����
    group = new DefaultMutableTreeNode("δ����");
    root.add(group);
    Iterator<Entry<Integer, ContactOperations>> itNew = allContactISN.entrySet().iterator();
    while (itNew.hasNext()) {
        Entry<Integer, ContactOperations> entry = (Entry<Integer, ContactOperations>) itNew.next();
        ContactOperations c = allContactISN.get(entry.getKey());
        if (c.getGroupList() == null || c.getGroupList().size() == 0) {
            contact = new DefaultMutableTreeNode(new TreeNodeItem(c.getContactName(), c.getISN()));
            group.add(contact);
        }
    }
}
