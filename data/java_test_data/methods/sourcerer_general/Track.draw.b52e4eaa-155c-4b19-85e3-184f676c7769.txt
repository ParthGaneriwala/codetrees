public void draw(Graphics2D g2, Strand inStrand) {
    if (inStrand == Strand.FORWARD)
        mForwardImageMap = new ImageMap();
    else
        mReverseImageMap = new ImageMap();
    // TODO: Split mJavascript into forward and reverse?
    // Save settings
    Paint origPaint = g2.getPaint();
    Font origFont = g2.getFont();
    // Save inital location.
    AffineTransform origTransform = g2.getTransform();
    // Enable anti-aliasing
    // g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
    // RenderingHints.VALUE_ANTIALIAS_ON);
    int imageHeightInPixels = (inStrand == Strand.FORWARD ? mForwardImageHeightInPixels : mReverseImageHeightInPixels);
    // Paint the background
    setSize(mImageWidthInPixels, imageHeightInPixels);
    g2.setPaint(getBackgroundColor());
    g2.fill(this);
    // Draw the line separating the description from the alignment
    g2.setPaint(mAxisColor);
    // g2.drawLine(mDescriptionWidthInPixels - mMinimumBufferInPixels, 0,
    // mDescriptionWidthInPixels - mMinimumBufferInPixels, imageHeightInPixels - 2);
    g2.fillRect(mDescriptionWidthInPixels - (2 * mMinimumBufferInPixels), 0, mMinimumBufferInPixels, imageHeightInPixels - 2);
    // Write the Track name
    g2.setPaint(mLabelColor);
    g2.setFont(mLabelFont);
    FontRenderContext frc = g2.getFontRenderContext();
    TextLayout layout = new TextLayout(mName, mLabelFont, frc);
    Rectangle textBounds = (g2 instanceof SvgGraphics2D ? TextUtil.getStringRect(mName, mLabelFont) : layout.getBounds().getBounds());
    int xOffset = (int) (mDescriptionWidthInPixels - textBounds.getWidth()) - 2 * mLinePaddingInPixels - mMinimumBufferInPixels;
    int yOffset = (int) (imageHeightInPixels / 2 + textBounds.getHeight() / 2);
    g2.drawString(mName, xOffset, yOffset);
    if (mURL != null) {
        // Set image map data
        ImageMap imageMap = (inStrand == Strand.FORWARD ? mForwardImageMap : mReverseImageMap);
        Area area = imageMap.addArea();
        area.setHref(mURL);
        area.setShape(Shape.RECT);
        area.setCoords(xOffset + "," + (yOffset - textBounds.getHeight()) + "," + (xOffset + textBounds.getWidth()) + "," + yOffset);
    }
    drawHighlightRegions(g2, imageHeightInPixels);
    drawGenes(g2, inStrand);
    // Return to orig. location
    g2.setTransform(origTransform);
    // Restore settings
    g2.setPaint(origPaint);
    g2.setFont(origFont);
}
