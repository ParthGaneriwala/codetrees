public int save(Object object) {
    Class cla = object.getClass();
    Field[] fields = cla.getDeclaredFields();
    StringBuilder sb = new StringBuilder();
    String className = cla.getName().replaceAll("ticketmaster.dataobject.", "");
    sb.append("insert into `");
    sb.append(className);
    sb.append("` (");
    for (Field field : fields) {
        if (field.getName().equals(className.toLowerCase() + "ID")) {
            if (!"customerID".equals(className.toLowerCase() + "ID")) {
                continue;
            }
        }
        field.setAccessible(true);
        try {
            Object obj = field.get(object);
            field.setAccessible(false);
            // else if (obj != null)
            if (obj != null) {
                sb.append(field.getName());
                sb.append(", ");
            }
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(BaseEntityDAO.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(BaseEntityDAO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    sb.replace(sb.lastIndexOf(", "), sb.lastIndexOf(", ") + 1, ")");
    sb.append(" values (");
    for (Field field : fields) {
        if (field.getName().equals(className.toLowerCase() + "ID")) {
            if (!"customerID".equals(className.toLowerCase() + "ID")) {
                continue;
            }
        }
        field.setAccessible(true);
        try {
            Object obj = field.get(object);
            field.setAccessible(false);
            String parameter = null;
            if ("int".equals(field.getType().toString()) || "float".equals(field.getType().toString()) || "double".equals(field.getType().toString()) || "boolean".equals(field.getType().toString())) {
                // {
                if ("boolean".equals(field.getType().toString())) {
                    parameter = Converter.BooleanToIntString(obj.toString());
                } else {
                    parameter = obj.toString();
                }
            // }
            // else
            // {
            // continue;
            // }
            } else {
                if (obj != null) {
                    parameter = "\'" + obj.toString() + "\'";
                } else {
                    continue;
                }
            }
            sb.append(parameter);
            sb.append(", ");
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(UserDAO.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(UserDAO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    sb.replace(sb.lastIndexOf(", "), sb.lastIndexOf(", ") + 1, ")");
    return execute(sb.toString(), DataOperationType.Create);
}
