private void loadPkgs() {
    ArrayList<TourPackage> pkgs = new ArrayList<TourPackage>();
    for (int i = 0; ; i++) {
        String key = MapKeys.PKG + i;
        String value = props.getProperty(key);
        if (value == null)
            break;
        String[] values = value.split(" +");
        String name = values[0].replace("%20", " ");
        TourPackage pkg = new TourPackage(name);
        String longDescr = values[1].replace("%20", " ").replace("%0A", "\n");
        pkg.setLongDescr(longDescr);
        String shortDescr = values[2].replace("%20", " ");
        pkg.setShortDescr(shortDescr);
        for (int j = 5; j < values.length; j++) {
            String netName = values[j] + " (" + MapKeys.NET_TOUR + ")";
            TourNetwork tour = (TourNetwork) NetworkFactory.getNetwork(netName);
            pkg.getTours().add(tour);
        }
        pkgs.add(pkg);
        // Compute the sequence count
        String seqKey = MapKeys.PKG + name + ".seq";
        String seqValues = props.getProperty(seqKey);
        if (seqValues != null) {
            String[] vals = seqValues.split(" +");
            pkg.setSeqCount(vals.length);
        }
        String lastKey = MapKeys.PKG + name + ".last";
        if (props.getProperty(lastKey) != null)
            pkg.setLastIsLast(true);
    }
    MapineerFrame.getFrame().setTourPackages(pkgs);
}
