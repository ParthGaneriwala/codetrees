public void timeout(int id) {
    switch(id) {
        case TIMER_A:
            try {
                doSend();
            } catch (IOException e) {
                Log.debug("Failed to (re)send request " + _request);
            }
            _aDelay = _aDelay * 2;
            startTimer(TIMER_A, _aDelay);
            break;
        case TIMER_B:
            cancelTimer(TIMER_A);
            SipResponse responseB = create408();
            // TODO send to ??
            if (!_cancel)
                _listener.handleResponse(responseB);
            terminate();
            break;
        case TIMER_D:
            terminate();
            break;
        case TIMER_E:
            try {
                doSend();
            } catch (IOException e) {
                Log.debug("Failed to (re)send request " + _request);
            }
            if (_state == STATE_TRYING)
                _eDelay = Math.min(_eDelay * 2, __T2);
            else
                _eDelay = __T2;
            startTimer(TIMER_E, _eDelay);
            break;
        case TIMER_F:
            cancelTimer(TIMER_E);
            SipResponse responseF = create408();
            if (!_cancel)
                // TODO interface TU
                _listener.handleResponse(responseF);
            terminate();
            break;
        case TIMER_K:
            terminate();
            break;
        case TIMER_M:
            terminate();
            break;
        default:
            throw new RuntimeException("unknown timeout id " + id);
    }
}
