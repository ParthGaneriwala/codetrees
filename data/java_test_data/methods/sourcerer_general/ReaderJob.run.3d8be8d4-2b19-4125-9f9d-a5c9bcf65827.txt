public void run() {
    ReaderManager rm = new ReaderManager();
    log.debug(LOGGER + "job start interval = [" + interval + "]");
    Enumeration tag = null;
    while (runflag) {
        try {
            tag = rf.getTagInfo();
        }// catch(DriverException ex)
         catch (Exception ex) {
            log.debug(LOGGER + "get tag error:" + ex.getMessage());
            if (si.getReaderID().equals("test"))
                rm.addSysmsg(LOGGER + "get tag error:" + ex.getMessage());
            else
                rm.addDatamsg(LOGGER + "get tag error:" + ex.getMessage());
        }
        if (tag == null) {
            // log.debug(LOGGER + "TAG[] " + StaticFactory.getFormatTime(StaticFactory.TIME_FULL));
            if (si.getReaderID().equals("test"))
                rm.addSysmsg(LOGGER + "TAG[] " + StaticFactory.getFormatTime(StaticFactory.TIME_FULL));
        // else
        // rm.addDatamsg(LOGGER + "TAG[] " + StaticFactory.getFormatTime(StaticFactory.TIME_FULL));
        } else {
            String filter = si.getFilter();
            while (tag.hasMoreElements()) {
                TagStructure ts = (TagStructure) tag.nextElement();
                String temp = ts.getUID();
                if (filter != null && filter.length() > 0) {
                    if (filter.indexOf(",") >= 0) {
                        if (!StaticFactory.isValid(filter, temp)) {
                            log.debug(LOGGER + "TAG [" + temp + "] is rejected");
                            if (si.getReaderID().equals("test"))
                                rm.addSysmsg(LOGGER + "TAG [" + temp + "] is rejected");
                            else
                                rm.addDatamsg(LOGGER + "TAG [" + temp + "] is rejected");
                            continue;
                        }
                    } else {
                        try {
                            FilterInterface fi = (FilterInterface) Class.forName(filter).newInstance();
                            if (!fi.isValid(temp, 0, temp.length())) {
                                log.debug(LOGGER + "TAG [" + temp + "] is rejected");
                                if (si.getReaderID().equals("test"))
                                    rm.addSysmsg(LOGGER + "TAG [" + temp + "] is rejected");
                                else
                                    rm.addDatamsg(LOGGER + "TAG [" + temp + "] is rejected");
                                continue;
                            }
                        } catch (Exception ex) {
                            log.debug(LOGGER + "Can not create filter engine:" + ex.getMessage());
                            if (si.getReaderID().equals("test"))
                                rm.addSysmsg(LOGGER + "Can not create filter engine:" + ex.getMessage());
                            else
                                rm.addDatamsg(LOGGER + "Can not create filter engine:" + ex.getMessage());
                        }
                    }
                }
                String timeFilter = si.getTimeFilter();
                if (StringUtils.isNotEmpty(timeFilter) && !"0".equals(timeFilter) && StringUtils.isNumeric(timeFilter)) {
                    long t1 = Long.parseLong(timeFilter);
                    if (TController.size() > 1000) {
                        TController.clear();
                        TController.put(temp, System.currentTimeMillis());
                    } else {
                        Long t = TController.get(temp);
                        if (t != null && t > 0) {
                            if ((t + t1) >= System.currentTimeMillis()) {
                                continue;
                            } else {
                                TController.remove(temp);
                                TController.put(temp, System.currentTimeMillis());
                            }
                        } else {
                            TController.put(temp, System.currentTimeMillis());
                        }
                    }
                }
                log.debug(LOGGER + "TAG[" + ts.getUID() + "] " + ts.getDiscoverTime());
                if (si.getReaderID().equals("test"))
                    rm.addSysmsg(LOGGER + "TAG[" + ts.getUID() + "] " + ts.getDiscoverTime());
                else
                    rm.addDatamsg(LOGGER + "TAG[" + ts.getUID() + "] " + ts.getDiscoverTime());
                if (si.getChainID() != null && si.getChainID().length() > 0 && (!si.getReaderID().equals("test"))) {
                    // if(rm.getIfchain() == null)
                    // rm.startChain();
                    log.debug("push chain messages");
                    rm.addChainMessage(si.getChainID(), ts.getAntenna(), (si.getReaderID() != null && si.getReaderID().length() > 0) ? si.getReaderID() : ts.getReaderID(), ts.getUID(), ts.getUserData(), si.getUserDataType(), si.getChainName());
                }
            }
        }
        try {
            Thread.sleep(interval);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
    rf.Close();
    log.debug(LOGGER + "job end");
}
