public String consultaAvaliacao() throws Exception {
    Aluno aluno = recuperarAlunoAtualizado();
    nomeAluno = aluno.getNome();
    postados = trabalhoPostadoFacade.consultarTrabalhosAluno(aluno.getId());
    if (postados != null) {
        avaliadosDTO = new ArrayList<AvaliaDTO>();
        for (TrabalhoPostado postado : postados) {
            AvaliacaoProfessor avProfessor = avaliacaoProfessorFacade.consultarPostado(postado.getId());
            Collection<Avalia> avaliacoes = avaliaFacade.consultarPostado(postado.getId());
            AvaliaDTO dto = new AvaliaDTO();
            dto.setPostado(postado);
            if (avProfessor != null) {
                dto.setNotaProfessor(avProfessor.getAvalProf().toString());
                dto.setNotaTurma(avProfessor.getAvalTurma().toString());
                dto.setNotaFinal(avProfessor.getAvalFinal().toString());
                avaliadosDTO.add(dto);
            } else {
                Double soma = 0d;
                if (avaliacoes != null) {
                    int quant = 0;
                    for (Avalia avalia : avaliacoes) {
                        if (avalia.gettPostado().getId().compareTo(postado.getId()) == 0) {
                            soma = soma + avalia.getMedia();
                            quant += 1;
                        }
                    }
                    // TODO: verificar a media
                    if (soma.compareTo(0d) != 0 && quant != 0)
                        dto.setNotaTurma(soma / quant + "");
                    else
                        dto.setNotaTurma(soma / quant + "");
                    avaliadosDTO.add(dto);
                }
            }
        }
    } else {
        addActionMessage("O aluno nï¿½o tem trabalhos postados.");
        avaliadosDTO = null;
    }
    return "consulta";
}
