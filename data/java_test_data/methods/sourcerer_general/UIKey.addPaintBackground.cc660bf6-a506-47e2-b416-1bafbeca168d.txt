// -----------------------------------------------------------------------
// Dessin
// -----------------------------------------------------------------------
protected void addPaintBackground(Graphics2D bg, Color bgdColor, boolean recreateBackground, TUIKeyState state) {
    if (recreateBackground == false) {
        if (state == TUIKeyState.NORMAL) {
            bg.drawImage(imgNormalBackground, 0, 0, null);
        } else if (state == TUIKeyState.ENTERED) {
            bg.drawImage(imgEnteredBackground, 0, 0, null);
        } else {
            bg.drawImage(imgPressedBackground, 0, 0, null);
        }
        return;
    }
    BufferedImage actualBackground;
    if (state == TUIKeyState.NORMAL) {
        imgNormalBackground = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_INT_ARGB);
        actualBackground = imgNormalBackground;
    } else if (state == TUIKeyState.ENTERED) {
        imgEnteredBackground = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_INT_ARGB);
        actualBackground = imgEnteredBackground;
    } else {
        imgPressedBackground = new BufferedImage(getWidth(), getHeight(), BufferedImage.TYPE_INT_ARGB);
        actualBackground = imgPressedBackground;
    }
    Graphics2D g2 = (Graphics2D) actualBackground.getGraphics();
    g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    g2.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
    // Création du Paint du premier calque
    Color vGradientStartColor, vGradientEndColor;
    vGradientStartColor = bgdColor.brighter();
    vGradientEndColor = bgdColor;
    Paint vPaint = new GradientPaint(0, 0, vGradientStartColor, 0, getHeight(), vGradientEndColor, true);
    g2.setPaint(vPaint);
    // Dessin du premier Paint
    g2.fillRoundRect(0, 0, getWidth(), getHeight(), TAILLE_ARC, TAILLE_ARC);
    // Taille du second Layer
    int vButtonHighlightHeight = getHeight() - (TAILLE_BORDURE_INTERIEURE * 2);
    int vButtonHighlightWidth = getWidth() - (TAILLE_BORDURE_INTERIEURE * 2);
    // Création du Paint du second calque
    vGradientStartColor = bgdColor.brighter().brighter();
    vGradientEndColor = bgdColor.brighter();
    vPaint = new GradientPaint(0, TAILLE_BORDURE_INTERIEURE, vGradientStartColor, 0, TAILLE_BORDURE_INTERIEURE + (vButtonHighlightHeight / 2), vGradientEndColor, false);
    // Dessin du second Paint
    g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, .8f));
    g2.setPaint(vPaint);
    g2.setClip(new RoundRectangle2D.Float(TAILLE_BORDURE_INTERIEURE, TAILLE_BORDURE_INTERIEURE, vButtonHighlightWidth, vButtonHighlightHeight / 2, TAILLE_ARC_INTERNE, TAILLE_ARC_INTERNE));
    g2.fillRoundRect(TAILLE_BORDURE_INTERIEURE, TAILLE_BORDURE_INTERIEURE, vButtonHighlightWidth, vButtonHighlightHeight, TAILLE_ARC_INTERNE, TAILLE_ARC_INTERNE);
    // Dessin du contour
    g2.setColor(bgdColor.darker());
    g2.setStroke(new BasicStroke(TAILLE_CONTOUR));
    g2.setClip(0, 0, getWidth(), getHeight());
    g2.drawRoundRect(TAILLE_CONTOUR / 2, TAILLE_CONTOUR / 2, getWidth() - TAILLE_CONTOUR, getHeight() - TAILLE_CONTOUR, TAILLE_ARC_CONTOUR, TAILLE_ARC_CONTOUR);
    // Dessin
    bg.drawImage(actualBackground, 0, 0, null);
}
