public void testProjectSearch() throws Exception {
    // The indexer are reusable
    ProjectIndexer indexer = new ProjectIndexer();
    // Add some projects
    Project project = new Project();
    project.setId(1);
    project.setTitle("Test project");
    project.setShortDescription("This is a test of the description");
    indexer.add(snowballWriter, project, true);
    project.setId(2);
    indexer.add(snowballWriter, project, true);
    // Various queries against the projects
    QueryParser parser = new QueryParser("contents", snowballAnalyzer);
    {
        Query query = parser.parse("(projectId:1 AND type:project) AND (testing)");
        Hits hits = getSnowballSearcher().search(query);
        assertTrue(hits.length() == 1);
    }
    {
        Query query = parser.parse("(projectId:2 AND type:project) AND (testing)");
        Hits hits = getSnowballSearcher().search(query);
        assertTrue(hits.length() == 1);
    }
    {
        Query query = parser.parse("(projectId:1 AND type:project) AND (test)");
        Hits hits = getSnowballSearcher().search(query);
        assertTrue(hits.length() == 1);
    }
    {
        Query query = parser.parse("(projectId:1 AND type:other) AND (test)");
        Hits hits = getSnowballSearcher().search(query);
        assertTrue(hits.length() == 0);
    }
    {
        Query query = parser.parse("(test)");
        Hits hits = getSnowballSearcher().search(query);
        assertTrue(hits.length() == 2);
        Document document = hits.doc(0);
        assertEquals("1", document.get("projectId"));
        assertEquals("Test project This is a test of the description", document.get("contents"));
    }
    {
        Query query = parser.parse("(testing)");
        Hits hits = getSnowballSearcher().search(query);
        assertTrue(hits.length() == 2);
    }
    {
        Query query = parser.parse("(projectId:3)");
        Hits hits = getSnowballSearcher().search(query);
        assertTrue(hits.length() == 0);
    }
}
