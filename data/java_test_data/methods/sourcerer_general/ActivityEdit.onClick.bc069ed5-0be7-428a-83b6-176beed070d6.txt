// ------------------------------------------
// interface OnClickListener
public void onClick(View v) {
    Logger.log(TAG + ".onClick()");
    switch(v.getId()) {
        case R.id.imgAudio:
            try {
                if (mItem.audio.length() > 0) {
                    if (mPlayer == null) {
                        mPlayer = MediaPlayer.create(this, Media.getTmpAudioUri());
                        mPlayer.setVolume(1.0f, 1.0f);
                    }
                    if (mPlayer.isPlaying())
                        mPlayer.stop();
                    else {
                        Toast.makeText(this, "Playing audio...", Toast.LENGTH_SHORT).show();
                        mPlayer.start();
                    }
                } else {
                    new AlertDialog.Builder(ActivityEdit.this).setMessage("No audio available. Press microphone icon to record audio.").setPositiveButton("Close", new DialogInterface.OnClickListener() {

                        public void onClick(DialogInterface dialog, int whichButton) {
                        // do nothing
                        }
                    }).show();
                }
            } catch (Exception e) {
                Logger.log(e);
            }
            break;
        case R.id.imgLink:
            try {
                if (mItem.link.length() > 0) {
                    new AlertDialog.Builder(ActivityEdit.this).setMessage(mItem.link).setPositiveButton("Close", new DialogInterface.OnClickListener() {

                        public void onClick(DialogInterface dialog, int whichButton) {
                        // do nothing
                        }
                    }).show();
                } else {
                    new AlertDialog.Builder(ActivityEdit.this).setMessage("No link available. Press browse icon to add a link.").setPositiveButton("Close", new DialogInterface.OnClickListener() {

                        public void onClick(DialogInterface dialog, int whichButton) {
                        // do nothing
                        }
                    }).show();
                }
            } catch (Exception e) {
                Logger.log(e);
            }
            break;
        case R.id.btnCamera:
            if (mItem.image.length() == 0)
                startCamera();
            else {
                new AlertDialog.Builder(ActivityEdit.this).setMessage("Replace existing image?").setPositiveButton("Yes", new DialogInterface.OnClickListener() {

                    public void onClick(DialogInterface dialog, int whichButton) {
                        startCamera();
                    }
                }).setNegativeButton("No", new DialogInterface.OnClickListener() {

                    public void onClick(DialogInterface dialog, int whichButton) {
                    // do nothing
                    }
                }).show();
            }
            break;
        case R.id.btnRecord:
            if (mItem.audio.length() == 0)
                startRecorder();
            else {
                new AlertDialog.Builder(ActivityEdit.this).setMessage("Replace existing audio recording?").setPositiveButton("Yes", new DialogInterface.OnClickListener() {

                    public void onClick(DialogInterface dialog, int whichButton) {
                        startRecorder();
                    }
                }).setNegativeButton("No", new DialogInterface.OnClickListener() {

                    public void onClick(DialogInterface dialog, int whichButton) {
                    // do nothing
                    }
                }).show();
            }
            break;
        case R.id.btnBrowse:
            if (mItem.link.length() == 0)
                startBrowser();
            else {
                new AlertDialog.Builder(ActivityEdit.this).setMessage("Replace existing link?").setPositiveButton("Yes", new DialogInterface.OnClickListener() {

                    public void onClick(DialogInterface dialog, int whichButton) {
                        startBrowser();
                    }
                }).setNegativeButton("No", new DialogInterface.OnClickListener() {

                    public void onClick(DialogInterface dialog, int whichButton) {
                    // do nothing
                    }
                }).show();
            }
            break;
        case R.id.btnSave:
            try {
                String s = txtItem.getText().toString().trim();
                if (s.equals(getResources().getString(R.string.edit_item_prompt)))
                    s = "";
                mItem.item = s;
                s = txtDescription.getText().toString().trim();
                if (s.equals(getResources().getString(R.string.edit_description_prompt)))
                    s = "";
                mItem.description = s;
                s = txtTags.getText().toString().trim();
                if (s.equals(getResources().getString(R.string.edit_tags_prompt)))
                    s = "";
                mItem.tags = s;
                // other fields are updated when their respective Activity returns
                // e.g. image field is updated when user returns from TakeImage activity
                checkAndSave();
            } catch (Exception e) {
                Logger.log(e);
            }
            break;
        case R.id.btnBack:
            setResult(RESULT_CANCELED);
            finish();
            break;
    }
}
