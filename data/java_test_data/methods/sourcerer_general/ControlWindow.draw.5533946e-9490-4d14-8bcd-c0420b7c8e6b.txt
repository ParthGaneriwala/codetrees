public void draw() {
    if (controlP5.blockDraw == false) {
        _myPicking.reset();
        updateEvents();
        if (isVisible) {
            // TODO save stroke, noStroke, fill, noFill, strokeWeight
            // parameters and restore after drawing controlP5 elements.
            int myRectMode = _myApplet.g.rectMode;
            int myEllipseMode = _myApplet.g.ellipseMode;
            int myImageMode = _myApplet.g.imageMode;
            _myApplet.rectMode(PConstants.CORNER);
            _myApplet.ellipseMode(PConstants.CORNER);
            _myApplet.imageMode(PConstants.CORNER);
            // TODO next section conflicts with Android
            if (_myApplet instanceof PAppletWindow) {
                _myApplet.background(background);
            }
            if (_myDrawable != null) {
                _myDrawable.draw(_myApplet);
            }
            for (int i = 0; i < _myControlWindowCanvas.size(); i++) {
                if ((_myControlWindowCanvas.get(i)).mode() == ControlWindowCanvas.PRE) {
                    (_myControlWindowCanvas.get(i)).draw(_myApplet);
                }
            }
            _myApplet.noStroke();
            _myApplet.noFill();
            int myOffsetX = (int) getPositionOfTabs().x;
            int myOffsetY = (int) getPositionOfTabs().y;
            int myHeight = 0;
            if (_myTabs.size() > 0) {
                for (int i = 1; i < _myTabs.size(); i++) {
                    if (((Tab) _myTabs.get(i)).isVisible()) {
                        if (myHeight < ((Tab) _myTabs.get(i)).height()) {
                            myHeight = ((Tab) _myTabs.get(i)).height();
                        }
                        if (myOffsetX > (component().getWidth()) - ((Tab) _myTabs.get(i)).width()) {
                            myOffsetY += myHeight + 1;
                            myOffsetX = (int) getPositionOfTabs().x;
                            myHeight = 0;
                        }
                        ((Tab) _myTabs.get(i)).setOffset(myOffsetX, myOffsetY);
                        if (((Tab) _myTabs.get(i)).isActive()) {
                            ((Tab) _myTabs.get(i)).draw(_myApplet);
                        }
                        if (((Tab) _myTabs.get(i)).updateLabel()) {
                            ((Tab) _myTabs.get(i)).drawLabel(_myApplet);
                        }
                        myOffsetX += ((Tab) _myTabs.get(i)).width();
                    }
                }
                ((ControllerInterface) _myTabs.get(0)).draw(_myApplet);
            }
            for (int i = 0; i < _myControlWindowCanvas.size(); i++) {
                if ((_myControlWindowCanvas.get(i)).mode() == ControlWindowCanvas.POST) {
                    (_myControlWindowCanvas.get(i)).draw(_myApplet);
                }
            }
            pmouseX = mouseX;
            pmouseY = mouseY;
            // draw Tooltip here.
            controlP5.getTooltip().draw(this);
            _myApplet.rectMode(myRectMode);
            _myApplet.ellipseMode(myEllipseMode);
            _myApplet.imageMode(myImageMode);
        }
    }
    _myPicking.display(_myApplet);
}
