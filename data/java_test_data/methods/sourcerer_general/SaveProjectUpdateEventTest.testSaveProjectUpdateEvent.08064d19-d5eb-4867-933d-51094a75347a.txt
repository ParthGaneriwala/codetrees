public void testSaveProjectUpdateEvent() throws Exception {
    // load the user profile for the current user
    User user = UserUtils.loadUser(USER_ID);
    Project userProfile = ProjectUtils.loadProject(user.getProfileProjectId());
    assertTrue("Unable to load the user's profile", userProfile.getId() > -1);
    // Update the profile
    Project thisProfile = new Project(db, user.getProfileProjectId());
    thisProfile.setCity("Alexandria");
    thisProfile.setModifiedBy(USER_ID);
    int updateCount = thisProfile.update(db);
    assertTrue("The project was not updated by the database", updateCount == 1);
    BusinessProcess thisProcess = processList.get(PROCESS_NAME);
    assertTrue("Process not found...", thisProcess != null);
    context.setPreviousObject(userProfile);
    context.setThisObject(thisProfile);
    context.setProcessName(PROCESS_NAME);
    context.setProcess(thisProcess);
    context.setAttribute("userId", new Integer(USER_ID));
    context.setAttribute("user", WikiLink.generateLink(userProfile));
    workflowManager.execute(context);
    // Now query the database and test to see if a history item was added for the specified test user Id.
    ProjectHistoryList historyList = new ProjectHistoryList();
    historyList.setProjectId(userProfile.getId());
    historyList.setEnteredBy(userProfile.getModifiedBy());
    historyList.setLinkObject(ProjectHistoryList.PROFILE_OBJECT);
    historyList.setEventType(ProjectHistoryList.UPDATE_USER_PROFILE_EVENT);
    historyList.setLinkItemId(userProfile.getId());
    historyList.buildList(db);
    assertTrue("History event was not recorded!", historyList.size() == 1);
    ProjectHistory history = historyList.get(0);
    assertEquals("Recorded event mismatch", "[[|" + userProfile.getId() + ":profile||" + userProfile.getTitle() + "]] updated my profile", history.getDescription());
    // Delete the history item because the test is done (and any other needed objects)
    history.delete(db);
}
