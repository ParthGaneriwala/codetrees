private void updateDecorations(int xChartSizeDecorated) {
    // x-axis label
    Curve.Point p = getSystemCurve(XLABEL_ID).getPoint(0);
    p.setAnnotationWidget(getXAxis().getAxisLabel(), getXChartSize(), getXAxis().getAxisLabelThickness());
    p.setAnnotationYShift(-getXAxis().getTickLabelThickness(false) - getXAxis().getTickSpace() - getXAxis().getTickLabelPadding() - getXAxis().getAxisLabelThickness() / 2);
    // y-axis label
    p = getSystemCurve(YLABEL_ID).getPoint(0);
    p.setAnnotationWidget(getYAxis().getAxisLabel(), getYAxis().getAxisLabelThickness(), getYChartSize());
    p.setAnnotationXShift(-getYAxis().getTickLabelThickness(false) - getYAxis().getTickSpace() - getYAxis().getTickLabelPadding() - getYAxis().getAxisLabelThickness() / 2);
    // y2-axis label
    p = getSystemCurve(Y2LABEL_ID).getPoint(0);
    p.setAnnotationWidget(getY2Axis().getAxisLabel(), getY2Axis().getAxisLabelThickness(), getYChartSize());
    p.setAnnotationXShift(+getY2Axis().getTickLabelThickness(false) + getY2Axis().getTickSpace() + getY2Axis().getTickLabelPadding() + getY2Axis().getAxisLabelThickness() / 2);
    // legend
    Curve c = getSystemCurve(LEGEND_ID);
    p = c.getPoint(0);
    if (null == legend && (!isLegendVisible() || 0 == getNVisibleCurvesOnLegend())) {
        p.setAnnotationWidget(null);
    } else {
        c.getSymbol().setSymbolType(legendLocation.getSymbolType());
        Widget theLegend = (null == legend) ? createLegend(plotPanel) : legend;
        p.setAnnotationWidget(theLegend, getLegendThickness(), getYChartSize());
        p.setAnnotationLocation(legendLocation.getAnnotationLocation());
        p.setAnnotationXShift(legendLocation.getInitialXShift(this) + legendXShift);
        p.setAnnotationYShift(legendLocation.getInitialYShift(this) + legendYShift);
        // GChart generated legends set font-family at a lower level. But,
        // if user supplied their own legend, this line causes any legend
        // font-family to be inherited (to the extent CSS cascade allows that)
        p.setAnnotationFontFamily(getLegendFontFamily());
    }
    // title
    int shiftToLeftEdge = -getYAxis().getAxisLabelThickness() - getYAxis().getTickLabelThickness(false) - getYAxis().getTickSpace() - getYAxis().getTickLabelPadding();
    int shiftToHorizontalMidpoint = shiftToLeftEdge + xChartSizeDecorated / 2;
    p = getSystemCurve(TITLE_ID).getPoint(0);
    p.setAnnotationWidget(getChartTitle(), xChartSizeDecorated, getChartTitleThickness());
    p.setAnnotationYShift(getChartTitleThickness() / 2);
    p.setAnnotationXShift(shiftToHorizontalMidpoint);
    // footnotes
    p = getSystemCurve(FOOTNOTES_ID).getPoint(0);
    p.setAnnotationWidget(getChartFootnotes(), xChartSizeDecorated, getChartFootnotesThickness());
    p.setAnnotationYShift(-getXAxis().getTickLabelThickness(false) - getXAxis().getTickSpace() - getXAxis().getTickLabelPadding() - getXAxis().getAxisLabelThickness() - getChartFootnotesThickness() / 2);
    if (getChartFootnotesLeftJustified()) {
        p.setAnnotationXShift(shiftToLeftEdge);
        p.setAnnotationLocation(AnnotationLocation.EAST);
    } else {
        // footnotes centered
        p.setAnnotationXShift(shiftToHorizontalMidpoint);
        p.setAnnotationLocation(AnnotationLocation.CENTER);
    }
    // add points to ticks and gridlines curves in accord with chart specs
    // x & y axis can be present even if no curves mapped to them
    getSystemCurve(XAXIS_ID).setVisible(getXAxis().getAxisVisible());
    getXAxis().populateGridlines();
    getSystemCurve(YAXIS_ID).setVisible(getYAxis().getAxisVisible());
    getYAxis().populateGridlines();
    // y2 axis is present only if at least 1 curve is on it.
    if (hasY2Axis()) {
        getY2Axis().populateGridlines();
        getSystemCurve(Y2AXIS_ID).setVisible(getY2Axis().getAxisVisible());
        getSystemCurve(Y2TICKS_ID).setVisible(true);
        getSystemCurve(Y2GRIDLINES_ID).setVisible(true);
    } else {
        getSystemCurve(Y2AXIS_ID).setVisible(false);
        getSystemCurve(Y2TICKS_ID).setVisible(false);
        getSystemCurve(Y2GRIDLINES_ID).setVisible(false);
    }
}
