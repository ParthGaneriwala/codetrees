private void init() {
    head.add("Editar");
    head.add("T. Lavado");
    head.add("Marca");
    if (modelSizes.isEmpty()) {
        System.out.println("modelSizes List is empty");
        correct = false;
        return;
    }
    List<Double> totalQuantitiesHor = new ArrayList<Double>();
    for (ModelSize modelSize : modelSizes) {
        head.add(modelSize.getValueSize());
        totalQuantitiesHor.add(0D);
    }
    head.add("Total");
    totalQuantitiesHor.add(0D);
    if (laundryRequestItems != null) {
        if (laundryRequestItems.size() > 0) {
            BodyRow row = new BodyRow();
            BodyRow rowTotal = new BodyRow(modelSizes.size() + 4);
            rowTotal.add(0, "---");
            rowTotal.add(1, "---");
            rowTotal.add(2, "---");
            for (LaundryRequestItem laundryRequestItem : laundryRequestItems) {
                row.add(laundryRequestItem.getId().toString());
                row.add(laundryRequestItem.getLaundryType().getType());
                row.add(laundryRequestItem.getTradeMark().getName());
                List<LaundryItem> laundryItems = laundryItemManager.findByOrderSize(laundryRequestItem.getId());
                int indexModelSize = 0;
                for (ModelSize modelSize : modelSizes) {
                    int index = 0;
                    for (int i = 0; i < laundryItems.size(); i++) {
                        if (laundryItems.get(i).getPantDesign().getModelSize().equals(modelSize))
                            break;
                        index++;
                    }
                    if (index != laundryItems.size()) {
                        LaundryItem laundryItem = laundryItems.get(index);
                        row.add((laundryItem.getQuantity() - laundryItem.getFailQuantity()) + "*" + laundryItem.getUnitPrice() + "=" + laundryItem.getTotalPrice());
                        totalQuantitiesHor.set(index, totalQuantitiesHor.get(index) + laundryItem.getTotalPrice());
                        rowTotal.add(indexModelSize + 3, laundryItem.getTotalPrice().toString());
                        rowTotal.add(rowTotal.size() - 1, laundryItem.getTotalPrice().toString());
                    } else {
                        row.add("0");
                    }
                    indexModelSize++;
                }
                row.add(laundryRequestItem.getTotalPrice().toString());
                int lastPos = modelSizes.size();
                totalQuantitiesHor.set(lastPos, totalQuantitiesHor.get(lastPos) + laundryRequestItem.getTotalPrice());
                body.add(row);
                row = new BodyRow();
            }
            body.add(rowTotal);
            System.out.println("body size: " + body.size());
            correct = true;
        } else {
            System.out.println("Laundry Request Items is empty");
        }
    } else {
        System.out.println("Laundry Request Items is null");
        correct = false;
    }
}
