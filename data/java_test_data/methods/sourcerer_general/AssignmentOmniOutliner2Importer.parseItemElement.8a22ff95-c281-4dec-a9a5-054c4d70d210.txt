private static void parseItemElement(Element item, Connection db, int indent, int projectId, int requirementId, int enteredBy, int modifiedBy, int itemPosition, int priorityPosition, int assignedToPosition, int effortPosition, int startPosition, int endPosition) throws Exception {
    // Get the values for the item
    ArrayList valuesList = new ArrayList();
    Element valuesElement = XMLUtils.getFirstChild(item, "oo:values");
    XMLUtils.getAllChildren(valuesElement, valuesList);
    // Insert the assignment
    Assignment assignment = new Assignment();
    assignment.setProjectId(projectId);
    assignment.setRequirementId(requirementId);
    assignment.setRole(extractText((Element) valuesList.get(itemPosition)));
    assignment.setIndent(indent);
    if (effortPosition > -1) {
        assignment.setEstimatedLoe(extractText((Element) valuesList.get(effortPosition)));
        if (assignment.getEstimatedLoeTypeId() == -1) {
            assignment.setEstimatedLoeTypeId(2);
        }
    }
    if (startPosition > -1) {
        assignment.setEstStartDate(extractText((Element) valuesList.get(startPosition)));
    }
    if (endPosition > -1) {
        assignment.setDueDate(extractText((Element) valuesList.get(endPosition)));
    }
    assignment.setEnteredBy(enteredBy);
    assignment.setModifiedBy(modifiedBy);
    assignment.setStatusId(1);
    assignment.setPriorityId(2);
    assignment.insert(db);
    if (System.getProperty("DEBUG") != null) {
        System.out.println("AssignmentOmniOutliner2Importer-> Assignment Inserted: " + assignment.getId());
    }
    // See if there are children, then parse the children items
    Element childrenElement = XMLUtils.getFirstChild(item, "oo:children");
    if (childrenElement != null) {
        ArrayList itemList = new ArrayList();
        XMLUtils.getAllChildren(childrenElement, itemList);
        if (System.getProperty("DEBUG") != null) {
            System.out.println("AssignmentOmniOutliner2Importer-> Children items: " + itemList.size());
        }
        // Go through the items, for each item see if it has children, with items, etc.
        Iterator itemIterator = itemList.iterator();
        while (itemIterator.hasNext()) {
            Element itemElement = (Element) itemIterator.next();
            parseItemElement(itemElement, db, (indent + 1), projectId, requirementId, enteredBy, modifiedBy, itemPosition, priorityPosition, assignedToPosition, effortPosition, startPosition, endPosition);
        }
    }
}
