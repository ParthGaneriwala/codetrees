public void testHacerLiquidacionAlguienPagoEnCaja() {
    // En la base de datos ya hay socios cargados
    // Primer liquidacion. Recibos "no devueltos"
    AdministradorDeLiquidaciones.HacerLiquidacion();
    Liquidacion liquidacion1 = AdministradorDeLiquidaciones.getUltimaLiquidacion();
    // El socio0 debe el mes 1
    ((Recibo) liquidacion1.getRecibosFor(socios[0]).get(0)).setDevuelto(true);
    // Primer liquidacion. Recibos "no devueltos"
    AdministradorDeLiquidaciones.HacerLiquidacion();
    Liquidacion liquidacion2 = AdministradorDeLiquidaciones.getUltimaLiquidacion();
    // El socio0 debe el mes 1
    ((Recibo) liquidacion2.getRecibosFor(socios[0]).get(0)).setDevuelto(true);
    // El socio0 debe el mes 2
    ((Recibo) liquidacion2.getRecibosFor(socios[0]).get(1)).setDevuelto(true);
    // Tercera liquidacion.
    AdministradorDeLiquidaciones.HacerLiquidacion();
    Liquidacion liquidacion3 = AdministradorDeLiquidaciones.getUltimaLiquidacion();
    // Al socio0 no se le generaron recibos.
    // Ahora el socio0 pagï¿½ en la caja todo lo que debia.
    Recibo r1 = new Recibo(0, socios[0], null, liquidacion1.getMes(), liquidacion1.getAnio(), 997, 20, false, "veinte", socios[0].getCategoria());
    Recibo r2 = new Recibo(0, socios[0], null, liquidacion2.getMes(), liquidacion2.getAnio(), 998, 20, false, "veinte", socios[0].getCategoria());
    Recibo r3 = new Recibo(0, socios[0], null, liquidacion3.getMes(), liquidacion3.getAnio(), 999, 20, false, "veinte", socios[0].getCategoria());
    AdministradorDeLiquidaciones.guardarRecibo(r1);
    AdministradorDeLiquidaciones.guardarRecibo(r2);
    AdministradorDeLiquidaciones.guardarRecibo(r3);
    // Cuarta liquidacion.
    AdministradorDeLiquidaciones.HacerLiquidacion();
    Liquidacion liquidacion4 = AdministradorDeLiquidaciones.getUltimaLiquidacion();
    // Tiene que haber solo un recibo todos los socios comunes
    assertEquals(1, liquidacion4.getRecibosFor(socios[0]).size());
    assertEquals(1, liquidacion4.getRecibosFor(socios[1]).size());
    assertEquals(1, liquidacion4.getRecibosFor(socios[2]).size());
    assertEquals(1, liquidacion4.getRecibosFor(socios[3]).size());
    assertEquals(1, liquidacion4.getRecibosFor(socios[4]).size());
    assertEquals(1, liquidacion4.getRecibosFor(socios[5]).size());
    // No tiene que haber recibo para los socios vitalicios
    assertTrue(liquidacion4.getRecibosFor(socios[6]).isEmpty());
    // Tiene que haber un recibo para el titular del grupo familiar
    assertEquals(1, liquidacion4.getRecibosFor(socios[7]).size());
    // No tiene que haber recibos para los integrantes del grupo familiar
    assertTrue(liquidacion4.getRecibosFor(socios[8]).isEmpty());
    assertTrue(liquidacion4.getRecibosFor(socios[9]).isEmpty());
    // En total, debe haber solo 7 recibos.. Ni mas ni menos!
    assertEquals(liquidacion4.getRecibos().size(), 7);
}
