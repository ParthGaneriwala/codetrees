public final TExp Exp() throws ParseException {
    Token id1;
    TExp e1;
    TExp e2;
    switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
        case NUM:
            id1 = jj_consume_token(NUM);
            e1 = new TExpIntegerLiteral(Integer.parseInt(id1.image));
            break;
        case TRUE:
            jj_consume_token(TRUE);
            e1 = new TExpTrue();
            break;
        case FALSE:
            jj_consume_token(FALSE);
            e1 = new TExpFalse();
            break;
        case ID:
            id1 = jj_consume_token(ID);
            e1 = new TExpId(id1.image);
            break;
        case THIS:
            jj_consume_token(THIS);
            e1 = new TExpThis();
            break;
        case NEW:
            jj_consume_token(NEW);
            switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
                case INT:
                    jj_consume_token(INT);
                    jj_consume_token(BRACKET_L);
                    e2 = Exp();
                    jj_consume_token(BRACKET_R);
                    e1 = new TExpNewArray(e2);
                    break;
                case ID:
                    id1 = jj_consume_token(ID);
                    jj_consume_token(PAREN_L);
                    jj_consume_token(PAREN_R);
                    e1 = new TExpNewObject(new TIdentifier(id1.image));
                    break;
                default:
                    jj_la1[17] = jj_gen;
                    jj_consume_token(-1);
                    throw new ParseException();
            }
            break;
        case EXCL:
            jj_consume_token(EXCL);
            e2 = Exp();
            e1 = new TExpNot(e2);
            break;
        case PAREN_L:
            jj_consume_token(PAREN_L);
            e1 = Exp();
            jj_consume_token(PAREN_R);
            break;
        default:
            jj_la1[18] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
    }
    {
        if (true)
            return ExpAux(e1);
    }
    throw new Error("Missing return statement in function");
}
