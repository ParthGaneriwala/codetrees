private void drawCIMClass() {
    if (cop == null)
        return;
    List<UMLCIMClass> subclasses = new ArrayList<UMLCIMClass>();
    Figure mainClass;
    Preferences pref = CIMPlugin.getDefault().getPluginPreferences();
    CIMClient client = CIMConnect.connect(pref.getString(CIMPreferencePage.PreferenceNames.IS_SECURE), pref.getString(CIMPreferencePage.PreferenceNames.CIM_HOST), pref.getString(CIMPreferencePage.PreferenceNames.CIM_PORT), pref.getString(CIMPreferencePage.PreferenceNames.CIM_NAMESPACE));
    List<CIMClass> subClassList = new ArrayList<CIMClass>();
    try {
        cc = client.getClass(cop, true, true, true, null);
        Enumeration<?> children = client.enumerateClasses(cop);
        while (children != null && children.hasMoreElements()) {
            subClassList.add((CIMClass) children.nextElement());
        }
        LightweightSystem lws = new LightweightSystem(canvas);
        if (pane != null) {
            pane.removeAll();
        }
        pane = new ScrollPane();
        pane.setScrollBarVisibility(ScrollPane.AUTOMATIC);
        pane.setVisible(true);
        Figure contents = new Figure();
        XYLayout contentsLayout = new XYLayout();
        contents.setLayoutManager(contentsLayout);
        Font classFont = new Font(null, "Arial", 10, SWT.BOLD);
        ImageDescriptor id = CIMPlugin.getImageDescriptor("icons/class_obj.gif");
        int y = 10;
        int x = 10;
        int maxy = 10;
        UMLCIMClass f = null;
        for (int i = 0; i < subClassList.size(); i++) {
            f = addClassFigure(contents, contentsLayout, classFont, id, subClassList.get(i), new Color(null, 225, 225, 225), x, y);
            subclasses.add(f);
            x = x + 265;
            int y1 = 40;
            y1 += f.getAttributesCompartment().getChildren().size() * 20;
            y1 += f.getMethodsCompartment().getChildren().size() * 15;
            if (y1 > maxy) {
                maxy = y1;
            }
        }
        x = x / 2;
        if (maxy > 10)
            maxy += 50;
        y = maxy;
        f = addClassFigure(contents, contentsLayout, classFont, id, cc, null, x, y);
        mainClass = f;
        y += 50 + f.getAttributesCompartment().getChildren().size() * 20;
        y += f.getMethodsCompartment().getChildren().size() * 15;
        // add superclass
        String superclass = cc.getSuperClass();
        CIMObjectPath cop = (CIMObjectPath) cc.getObjectPath().clone();
        cop.setObjectName(superclass);
        CIMClass cimSC = client.getClass(cop, false, true, true, null);
        UMLCIMClass umlSC = addClassFigure(contents, contentsLayout, classFont, id, cimSC, new Color(null, 225, 225, 225), x, y);
        addConnection(contents, (Figure) umlSC, (UMLCIMClass) mainClass, Graphics.LINE_SOLID);
        for (int i = 0; i < subclasses.size(); i++) {
            addConnection(contents, mainClass, subclasses.get(i), Graphics.LINE_SOLID);
        }
        x = 10;
        /*for(int i = 0; i < copList.size(); i++){
			f = addClassFigure(contents, contentsLayout, classFont, id,
					(CIMClass)copList.get(i), null, x, y);
			addConnection(contents, mainClass, f, Graphics.LINE_DASH);
			x = x + 265;
			
		}*/
        pane.add(contents);
        pane.setConstraint(contents, new Rectangle(0, 0, -1, -1));
        pane.setContents(contents);
        lws.setContents(pane);
    } catch (CIMException e) {
        e.printStackTrace();
    }
}
