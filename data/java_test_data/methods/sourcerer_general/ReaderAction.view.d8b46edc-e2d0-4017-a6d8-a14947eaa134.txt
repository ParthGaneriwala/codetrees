public ActionForward view(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    if (log.isDebugEnabled()) {
        log.debug("Entering 'view' method");
    }
    ReaderManager mgr = new ReaderManager();
    ReaderForm pForm = (ReaderForm) form;
    String readerName = request.getParameter("deleteReader");
    if ((readerName != null) && (readerName.length() != 0)) {
        Reader reader = mgr.getReader(readerName);
        if ((reader != null) && (reader.getStartType().equals("Stop"))) {
            URL fileUrl = StaticFactory.class.getResource("/reader/" + reader.getReaderName() + ".xml");
            reader.deleteFile(URLDecoder.decode(fileUrl.getPath()));
            mgr.removeReader(reader);
        }
        return mapping.findForward("viewReader");
    }
    readerName = request.getParameter("changeReader");
    if ((readerName != null) && (readerName.length() != 0)) {
        Reader reader = mgr.getReader(readerName);
        if (reader != null) {
            mgr.clearSysmsg();
            if (reader.getStartType().equals("Start")) {
                reader.stopService();
                reader.setStartType("Stop");
            } else {
                if (reader.startService())
                    reader.setStartType("Start");
            }
        }
        return mapping.findForward("viewReader");
    }
    List readers = mgr.getReaders();
    request.setAttribute("readerList", readers);
    Iterator it = readers.iterator();
    while (it.hasNext()) {
        Reader reader = (Reader) it.next();
        if (reader.getStartType().equals("Start")) {
            if (!reader.startService())
                reader.setStartType("Stop");
        }
    }
    pForm.setMessage(mgr.getSysmsg().toString());
    mgr.clearSysmsg();
    updateFormBean(mapping, request, pForm);
    return mapping.findForward("view");
}
