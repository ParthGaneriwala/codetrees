public void semanticaConstantes(TabelaSimbolos tabelasimbolos, int indice) {
    int tamanhoVetor = 0;
    int cont = 0;
    boolean tamanhoCerto = false;
    // ARMAZENAR NUMA ESTRUTURA PARA VERIFICAR UNICIDADE
    // consome const
    tabelasimbolos.soConsome();
    // consome int|boolean....
    tabelasimbolos.soConsome();
    // METODO pega o tipo da constante
    String tipoDaConstante = tabelasimbolos.getTipoVariavel();
    if (this.jaContemAquelaConstante(tabelasimbolos.getLookahead(), indice)) {
        if (!tabelasimbolos.verificaGlobais(tabelasimbolos.getLookahead())) {
            System.out.println("Erro Semântico na linha " + tabelasimbolos.getLinha() + ". Descrição: " + tabelasimbolos.getLookahead() + " já está definido no programa");
            ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelasimbolos.getLinha() + ". Descrição: " + tabelasimbolos.getLookahead() + " já está definido no programa");
        }
    }
    // consome identificardor
    tabelasimbolos.soConsome();
    if (tabelasimbolos.getLookahead().equals("=")) {
        // consome o igual
        tabelasimbolos.soConsome();
        if (!tipoDaConstante.equals(Utils.tipoValor(tabelasimbolos.getLookahead()))) {
            System.out.println("ERRO SEMANTICO - Valor incompatível");
            ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelasimbolos.getLinha() + ". Descrição: Valor da variável incompatível com seu tipo");
        }
        // consome valor
        tabelasimbolos.soConsome();
        // consome o ;
        tabelasimbolos.soConsome();
    } else {
        if (tabelasimbolos.getLookahead().equals("[")) {
            while (tabelasimbolos.getLookahead().equals("[")) {
                // consome [
                tabelasimbolos.soConsome();
                System.out.println("tamanho do vetor " + tabelasimbolos.getLookahead());
                if (Utils.tipoValor(tabelasimbolos.getLookahead()).equals("int")) {
                    tamanhoCerto = true;
                    tamanhoVetor = Integer.parseInt(tabelasimbolos.getLookahead());
                }
                if (!(Utils.tipoValor(tabelasimbolos.getLookahead())).equals("int")) {
                    System.out.println("ERRO SEMANTICO - Tamanho do vetor deve ser do tipo inteiro");
                    ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelasimbolos.getLinha() + ". Descrição: Tamanho do vetor deve ser do tipo inteiro");
                    while (tabelasimbolos.getLookahead().equals(";")) {
                        // consome o resto
                        tabelasimbolos.soConsome();
                    }
                }
            }
            // consome tamanho do vetor
            tabelasimbolos.soConsome();
            // consome ]
            tabelasimbolos.soConsome();
            // consome =
            tabelasimbolos.soConsome();
            // consome {
            tabelasimbolos.soConsome();
            while (!tabelasimbolos.getLookahead().equals("}")) {
                if (!tipoDaConstante.equals(Utils.tipoValor(tabelasimbolos.getLookahead()))) {
                    System.out.println("ERRO SEMEANTICO: valor " + tabelasimbolos.getLookahead() + " não é do tipo " + tipoDaConstante);
                    ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelasimbolos.getLinha() + ". Descrição: valor " + tabelasimbolos.getLookahead() + " não é do tipo " + tipoDaConstante);
                    // consome erro
                    tabelasimbolos.soConsome();
                } else {
                    // consome o numero certo
                    tabelasimbolos.soConsome();
                }
                // conta qtd de elementos declarados
                cont++;
                if (tabelasimbolos.getLookahead().equals("}")) {
                    break;
                }
                // consome ,
                tabelasimbolos.soConsome();
            }
            // consome }
            tabelasimbolos.soConsome();
            // consome ;
            tabelasimbolos.soConsome();
            if (tamanhoCerto) {
                if (tamanhoVetor != cont) {
                    // DECLAROU MAIS ELEMENTOS DO QUE DEVERIA
                    System.out.println("ERRO SEMANTICO - quantidade errada de valores declarados");
                    ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelasimbolos.getLinha() + ". Descrição: quantidade errada de valores declarados");
                }
                tamanhoCerto = false;
            }
        }
    }
}
