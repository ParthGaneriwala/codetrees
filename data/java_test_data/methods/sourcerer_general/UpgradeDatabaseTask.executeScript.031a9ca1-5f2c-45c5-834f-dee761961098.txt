private void executeScript(Connection db, String thisScriptFile, String fsEval, String dbName) throws Exception {
    String scriptFile = thisScriptFile;
    if (scriptFile.endsWith(".bsh")) {
        if (!(new File(scriptFile).exists())) {
            // look for script stored in a common directory
            String yearString = (new File(scriptFile)).getName().substring(0, 4);
            scriptFile = baseFilePath + "common" + fs + yearString + fs + (new File(scriptFile)).getName();
        }
        if (!(new File(scriptFile).exists())) {
            throw new Exception("BSH FILE NOT FOUND: " + thisScriptFile);
        }
        // Setup the classpath and environment
        System.out.println("\nSetting up BSH environment...");
        Interpreter script = new Interpreter();
        // Dynamically add all libraries
        if (libPath != null) {
            File directory = new File(libPath);
            if (directory.isDirectory()) {
                System.out.println("\nAdding libraries from... " + libPath);
                String[] libraries = directory.list();
                for (String library : libraries) {
                    if (library.endsWith(".jar")) {
                        script.eval("addClassPath(bsh.cwd + \"" + fsEval + "lib" + fsEval + library + "\")");
                    }
                }
            }
        }
        script.eval("addClassPath(bsh.cwd + \"" + fsEval + "src" + fsEval + "main" + fsEval + "resources\")");
        script.eval("addClassPath(\"" + servletJar + "\")");
        script.set("prefs", prefs);
        script.set("db", db);
        script.set("fileLibraryPath", fileLibrary);
        // Some classes use the cache so make it available during upgrades
        System.out.println("\nAdding caches...");
        script.eval("import com.concursive.connect.cache.CacheContext;");
        script.eval("import com.concursive.connect.cache.Caches;");
        script.eval("import net.sf.ehcache.CacheManager;");
        script.eval("CacheManager.create();");
        script.eval("CacheContext cacheContext = new CacheContext();");
        script.eval("cacheContext.setUpgradeConnection(db);");
        script.eval("Caches.addCaches(cacheContext);");
        // Execute the script
        System.out.println("\nExecuting: " + thisScriptFile);
        script.source(scriptFile);
        System.out.println("");
        // Cleanup...
        System.out.println("\nCleaning up BSH environment...");
        script.eval("CacheManager.getInstance().shutdown();");
    }
}
