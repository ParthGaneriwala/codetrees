public void testStart() {
    boolean exceptionCaught = false;
    long period = CurrentTimeTicker.DEFAULT_PERIOD;
    // Test passing null in as the listener; should throw an IllegalArgumentException
    try {
        ticker.start(null);
    } catch (IllegalArgumentException e) {
        exceptionCaught = true;
    }
    assertTrue(exceptionCaught);
    // -------------------------------------------------------------------------------------------------------------
    // Test using default period value
    ticker.start(mockListener);
    // Wait for notification
    pause(period);
    assertTrue(mockListener.receivedTick);
    // -------------------------------------------------------------------------------------------------------------
    // Test using a simple negative period value
    period = -1;
    ticker.start(mockListener);
    // Wait for notification
    pause(period);
    assertTrue(mockListener.receivedTick);
    // -------------------------------------------------------------------------------------------------------------
    // Test using the smallest available period value
    period = Long.MIN_VALUE;
    ticker.start(mockListener);
    // Wait for notification
    pause(period);
    assertTrue(mockListener.receivedTick);
    // -------------------------------------------------------------------------------------------------------------
    // Test using a non-default positive period value
    period = CurrentTimeTicker.DEFAULT_PERIOD * 3;
    ticker.start(mockListener);
    // Wait for notification
    pause(period);
    assertTrue(mockListener.receivedTick);
}
