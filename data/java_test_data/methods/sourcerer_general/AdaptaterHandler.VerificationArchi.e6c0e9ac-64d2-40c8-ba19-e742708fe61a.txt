void VerificationArchi(File file, IWorkbenchWindow window) {
    String dossier = null;
    String[] extension = file.getName().split("\\.");
    if (extension.length < 2) {
        MessageDialog.openInformation(window.getShell(), "CLACS to SCL", "Ce n'est pas un fichier GCLACS !!");
        return;
    } else if (!extension[1].equals("gclacs") && !extension[1].equals("gclacs_diagram")) {
        MessageDialog.openInformation(window.getShell(), "CLACS", "Ce n'est pas un fichier GCLACS !!");
        return;
    } else {
        if (extension[1].equals("gclacs_diagram")) {
            dossier = file.getParent();
            // System.out.println("extention [0] : " + extension[0]);
            file = new File(dossier + "/" + extension[0] + ".gclacs");
        }
        try {
            // ///////////////////////////
            // Initialisation des listes
            // ///////////////////////////
            listInstance_PortDescr = new ArrayList<String>();
            listInstance_PortRef = new ArrayList<String>();
            listInstance_PortNom = new ArrayList<String>();
            listInterfaceRef = new ArrayList<String>();
            listInterfaceNom = new ArrayList<String>();
            listBinding = new ArrayList<Node>();
            // ///////////////////////////
            // Ouverture du fichier XML
            // ///////////////////////////
            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            DocumentBuilder db = dbf.newDocumentBuilder();
            file = new File(dossier + "/" + extension[0] + ".gclacs");
            doc = db.parse(file);
            doc.getDocumentElement().normalize();
            NodeList ListInstance = doc.getElementsByTagName("componentInstance");
            String kindInstance = "";
            // System.out.println("nom comp desc : " + ListDescriptor.item(0).getAttributes().getNamedItem("name").toString());
            String nomInstance = null;
            if (ListInstance.item(0).getAttributes().getNamedItem("name") == null || ListInstance.item(0).getAttributes().getNamedItem("name").getNodeValue().equals("")) {
                // System.out.println("nom null !!");
                nomInstance = "UnnamedComponentInstance";
                nextComp++;
            } else {
                nomInstance = ListInstance.item(0).getAttributes().getNamedItem("name").getNodeValue();
            }
            if (ListInstance.item(0).getAttributes().getNamedItem("defineByDescriptor") == null || ListInstance.item(0).getAttributes().getNamedItem("defineByDescriptor").getNodeValue().equals("")) {
                System.out.println("nom null !!");
                nomDescriptor = "UnnamedDescriptor";
                MessageDialog.openInformation(window.getShell(), "CLACS to SCL", "L'instance principale n'a pas de descripteur lui correspondant !!");
                return;
            } else {
                nomDescriptor = ListInstance.item(0).getAttributes().getNamedItem("defineByDescriptor").getNodeValue();
            }
            try {
                kindInstance = ListInstance.item(0).getAttributes().getNamedItem("kind").getNodeValue();
            } catch (Exception e) {
                kindInstance = "business";
            }
            // //////////////////////
            // Creation du Fichier
            // /////////////////////
            String nomFichier = file.getParent() + "/" + nomDescriptor + ".cl";
            File newFile = new File(nomFichier);
            pw = new PrintWriter(new FileWriter(newFile));
            String textEntete = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<cl:Component_Instance xmlns:cl=\"Metamodele/clacsCL\" kind=\"" + kindInstance + "\" name=\"" + nomInstance + "\">\n";
            pw.print(textEntete);
            System.out.println("nom descriptor : " + ListInstance.item(0));
            pw.print("<cl:DefinedByDescriptor>" + nomDescriptor + "</cl:DefinedByDescriptor>\n");
            RemplirDescriptor(ListInstance.item(0));
            pw.print("</cl:Component_Instance>");
            pw.close();
            MessageDialog.openInformation(window.getShell(), "CLACS", "L'architecture CLACS a ete generee !!");
            // Ouverture du fichier
            if (newFile.exists() && newFile.isFile()) {
                IFileStore fileStore = EFS.getLocalFileSystem().getStore(newFile.toURI());
                IWorkbenchPage page = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage();
                // On rafraichit le projet
                IFile f = ResourcesPlugin.getWorkspace().getRoot().getFileForLocation(Path.fromOSString(file.getAbsolutePath()));
                f.getProject().refreshLocal(IResource.DEPTH_INFINITE, null);
                try {
                    IDE.openEditorOnFileStore(page, fileStore);
                } catch (PartInitException e) {
                    e.printStackTrace();
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            MessageDialog.openInformation(window.getShell(), "CLACS", "Problemes lors de la creation de l'architecture CLACS !!");
        }
    }
}
