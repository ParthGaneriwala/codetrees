public final void setBestRowIdentifiers() {
    int[] briCols = null;
    int briColsCount = 0;
    boolean isStrict = false;
    int nNullCount = 0;
    // ignore if called prior to completion of primary key construction
    if (colNotNull == null) {
        return;
    }
    bestIndex = null;
    bestIndexForColumn = new int[colTypes.length];
    ArrayUtil.fillArray(bestIndexForColumn, -1);
    for (int i = 0; i < indexList.length; i++) {
        Index index = indexList[i];
        int[] cols = index.getColumns();
        int colsCount = index.getVisibleColumns();
        if (colsCount == 0) {
            continue;
        }
        if (i == 0) {
            isStrict = true;
        }
        if (bestIndexForColumn[cols[0]] == -1) {
            bestIndexForColumn[cols[0]] = i;
        } else {
            Index existing = indexList[bestIndexForColumn[cols[0]]];
            if (colsCount > existing.getColumns().length) {
                bestIndexForColumn[cols[0]] = i;
            }
        }
        if (!index.isUnique()) {
            if (bestIndex == null) {
                bestIndex = index;
            }
            continue;
        }
        int nnullc = 0;
        for (int j = 0; j < colsCount; j++) {
            if (colNotNull[cols[j]]) {
                nnullc++;
            }
        }
        if (bestIndex != null) {
            bestIndex = index;
        }
        if (nnullc == colsCount) {
            if (briCols == null || briColsCount != nNullCount || colsCount < briColsCount) {
                // nothing found before ||
                // found but has null columns ||
                // found but has more columns than this index
                briCols = cols;
                briColsCount = colsCount;
                nNullCount = colsCount;
                isStrict = true;
            }
            continue;
        } else if (isStrict) {
            continue;
        } else if (briCols == null || colsCount < briColsCount || nnullc > nNullCount) {
            // nothing found before ||
            // found but has more columns than this index||
            // found but has fewer not null columns than this index
            briCols = cols;
            briColsCount = colsCount;
            nNullCount = nnullc;
        }
    }
    if (briCols == null || briColsCount == briCols.length) {
        bestRowIdentifierCols = briCols;
    } else {
        bestRowIdentifierCols = ArrayUtil.arraySlice(briCols, 0, briColsCount);
    }
    bestRowIdentifierStrict = isStrict;
    if (indexList[0].getColumnCount() > 0) {
        bestIndex = indexList[0];
    }
}
