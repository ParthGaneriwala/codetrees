public void exceptionEvent(InvocationException exc) {
    List empty = new LinkedList();
    ObjectReference remoteException = exc.exception();
    Field msgField = remoteException.referenceType().fieldByName("detailMessage");
    StringReference msgVal = (StringReference) remoteException.getValue(msgField);
    String exceptionText = (msgVal == null ? null : msgVal.value());
    String excClass = exc.exception().type().name();
    ReferenceType remoteType = exc.exception().referenceType();
    List getStackTraceMethods = remoteType.methodsByName("getStackTrace");
    Method getStackTrace = (Method) getStackTraceMethods.get(0);
    ArrayReference stackValue = (ArrayReference) safeInvoke(exc.exception(), getStackTrace, empty);
    ObjectReference[] stackt = (ObjectReference[]) stackValue.getValues().toArray(new ObjectReference[0]);
    List stack = new LinkedList();
    // "StackTraceElement" object.
    if (stackt.length > 0) {
        ReferenceType StackTraceElementType = (ReferenceType) stackt[0].type();
        Method getClassName = (Method) StackTraceElementType.methodsByName("getClassName").get(0);
        Method getFileName = (Method) StackTraceElementType.methodsByName("getFileName").get(0);
        Method getLineNum = (Method) StackTraceElementType.methodsByName("getLineNumber").get(0);
        Method getMethodName = (Method) StackTraceElementType.methodsByName("getMethodName").get(0);
        for (int i = 0; i < stackt.length; i++) {
            Value classNameV = safeInvoke(stackt[i], getClassName, empty);
            Value fileNameV = safeInvoke(stackt[i], getFileName, empty);
            Value methodNameV = safeInvoke(stackt[i], getMethodName, empty);
            Value lineNumV = safeInvoke(stackt[i], getLineNum, empty);
            String className = ((StringReference) classNameV).value();
            String fileName = null;
            if (fileNameV != null) {
                fileName = ((StringReference) fileNameV).value();
            }
            String methodName = ((StringReference) methodNameV).value();
            int lineNumber = ((IntegerValue) lineNumV).value();
            stack.add(new SourceLocation(className, fileName, methodName, lineNumber));
        }
    }
    // stack is a list of SourceLocation (bluej.debugger.SourceLocation)
    exitStatus = Debugger.EXCEPTION;
    lastException = new ExceptionDescription(excClass, exceptionText, stack);
}
