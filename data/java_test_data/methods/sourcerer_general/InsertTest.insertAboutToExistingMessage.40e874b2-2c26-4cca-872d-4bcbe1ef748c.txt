@Test
public void insertAboutToExistingMessage() throws Exception {
    Collection<IPost> posts = new ArrayList<IPost>();
    Map<String, Object> postMap = new HashMap<String, Object>();
    postMap.put("author_post_id", new Integer(1));
    postMap.put("content", "San Diego");
    postMap.put("type", "about");
    postMap.put("refers_to_id", new Integer(25));
    Post p = new Post(0);
    p.setAuthorId((Integer) postMap.get("author_post_id"));
    p.setRefersToId((Integer) postMap.get("refers_to_id"));
    p.setType((String) postMap.get("type"));
    p.setContent((String) postMap.get("content"));
    posts.add(p);
    // do the insert
    repository.insert(posts);
    JSONWriter writer = new JSONWriter();
    List filterList = new ArrayList();
    HashMap aboutMap = new HashMap();
    aboutMap.put("output", "id");
    aboutMap.put("used_as", "id");
    aboutMap.put("type", "='about'");
    aboutMap.put("author_post_id", "=1");
    HashMap<String, Object> messageMap = new HashMap<String, Object>();
    messageMap.put("id", "=25");
    messageMap.put("type", "='message'");
    messageMap.put("output", "id");
    messageMap.put("used_as", "refers_to_id");
    aboutMap.put("parents", new Map[] { messageMap });
    filterList.add(aboutMap);
    String jsonString = writer.write(filterList);
    Filter filter = new Filter(jsonString);
    // get posts
    Collection<IPost> resultPosts = repository.getPosts(filter);
    Map<Integer, IPost> expectedResult = new HashMap<Integer, IPost>();
    Post post1 = new Post(46, 1, 25, "about", "San Diego", null);
    expectedResult.put(post1.getId(), post1);
    for (IPost post : resultPosts) {
        IPost expectedPost = expectedResult.get(post.getId());
        Assert.assertNotNull("Received unexpected post id = " + post.getId(), expectedPost);
        Assert.assertEquals("content did not match.", expectedPost.getContent(), post.getContent());
        Assert.assertEquals("refersToId did not match.", expectedPost.getRefersToId(), post.getRefersToId());
        Assert.assertEquals("type did not match.", expectedPost.getType(), post.getType());
        Assert.assertEquals("authorPostId did not match.", expectedPost.getAuthorPostId(), post.getAuthorPostId());
    }
}
