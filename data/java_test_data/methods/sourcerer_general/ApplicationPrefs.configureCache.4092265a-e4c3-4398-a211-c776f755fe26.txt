private void configureCache(ServletContext context) {
    LOG.info("configureCache");
    CacheContext cacheContext = new CacheContext();
    // Give the cache manager its own connection pool... this can speed up the web-tier
    // when background processing is occurring
    ConnectionPool commonCP = (ConnectionPool) context.getAttribute(Constants.CONNECTION_POOL);
    if (commonCP != null) {
        if (!this.has(CONNECTION_POOL_MAX_CACHE_CONNECTIONS)) {
            cacheContext.setConnectionPool(commonCP);
        } else {
            ConnectionPool cacheCP = new ConnectionPool();
            cacheCP.setDebug(commonCP.getDebug());
            cacheCP.setTestConnections(commonCP.getTestConnections());
            cacheCP.setAllowShrinking(commonCP.getAllowShrinking());
            cacheCP.setMaxConnections(this.get(CONNECTION_POOL_MAX_CACHE_CONNECTIONS));
            cacheCP.setMaxIdleTime(commonCP.getMaxIdleTime());
            cacheCP.setMaxDeadTime(commonCP.getMaxDeadTime());
            cacheContext.setConnectionPool(cacheCP);
        }
    }
    if (cacheContext.getConnectionPool() != null) {
        // The cacheContext is ready to be finalized
        ConnectionElement ce = new ConnectionElement();
        ce.setDriver(this.get(CONNECTION_DRIVER));
        ce.setUrl(this.get(CONNECTION_URL));
        ce.setUsername(this.get(CONNECTION_USER));
        ce.setPassword(this.get(CONNECTION_PASSWORD));
        cacheContext.setConnectionElement(ce);
        cacheContext.setApplicationPrefs(this);
        cacheContext.setKey((Key) context.getAttribute(TEAM_KEY));
        Caches.addCaches(cacheContext);
    }
}
