@Override
protected void setupPanel(VerticalPanel dialogVPanel) {
    // Text
    dialogVPanel.add(new HTML(REGISTRATION_DIALOG));
    FlexTable grid = new FlexTable();
    Button skip = new Button("Skip");
    grid.setWidget(0, 0, skip);
    skip.addClickHandler(new ClickHandler() {

        @Override
        public void onClick(ClickEvent clickEvent) {
            hide(true);
        }
    });
    grid.getFlexCellFormatter().setColSpan(0, 0, 2);
    grid.getFlexCellFormatter().setHorizontalAlignment(0, 0, HasHorizontalAlignment.ALIGN_CENTER);
    // Spacer
    grid.setWidget(1, 0, new HTML("&nbsp"));
    grid.setWidget(2, 0, new Label("User name"));
    userName = new TextBox();
    grid.setWidget(2, 1, userName);
    grid.setWidget(3, 0, new Label("Email"));
    email = new TextBox();
    grid.setWidget(3, 1, email);
    grid.setWidget(4, 0, new Label("Password"));
    password = new PasswordTextBox();
    grid.setWidget(4, 1, password);
    grid.setWidget(5, 0, new Label("Confirm password"));
    confirmPassword = new PasswordTextBox();
    grid.setWidget(5, 1, confirmPassword);
    Button regsiter = new Button("Register");
    grid.setWidget(6, 0, regsiter);
    regsiter.addClickHandler(new ClickHandler() {

        @Override
        public void onClick(ClickEvent clickEvent) {
            register();
        }
    });
    grid.getFlexCellFormatter().setColSpan(6, 0, 2);
    grid.getFlexCellFormatter().setHorizontalAlignment(6, 0, HasHorizontalAlignment.ALIGN_CENTER);
    dialogVPanel.add(grid);
    addCloseHandler(new CloseHandler<PopupPanel>() {

        @Override
        public void onClose(CloseEvent<PopupPanel> popupPanelCloseEvent) {
            if (!Connection.getInstance().isRegistered()) {
                timer.schedule(Connection.getInstance().getGameInfo().getRegisterDialogDelayInS());
            }
        }
    });
}
