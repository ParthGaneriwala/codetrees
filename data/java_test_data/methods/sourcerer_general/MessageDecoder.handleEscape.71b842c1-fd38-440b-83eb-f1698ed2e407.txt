protected void handleEscape() {
    // Skip over ESC [
    addText();
    // Skip over ESC [
    pos += 2;
    MessageElement section = null;
    char c = msg[pos];
    if (// Bold, italic, colour, underline
    c >= '1' && c <= '4') {
        // -----Add a new section to stack
        switch(c) {
            case '1':
                section = new MessageElement(settings, MessageElement.BOLD);
                break;
            case '2':
                section = new MessageElement(settings, MessageElement.ITALIC);
                break;
            case '3':
                section = new MessageElement(settings, MessageElement.COLOUR_INDEX, "" + msg[pos + 1]);
                break;
            case '4':
                section = new MessageElement(settings, MessageElement.UNDERLINE);
                break;
        }
        add(section);
    } else if (// End: bold, italic, underline
    c == 'x') {
        pos++;
        // -----Up stack to find matching opening section
        int ty = MessageElement.ROOT;
        switch(msg[pos]) {
            case '1':
                ty = MessageElement.BOLD;
                break;
            case '2':
                ty = MessageElement.ITALIC;
                break;
            case '4':
                ty = MessageElement.UNDERLINE;
                break;
        }
        if (ty > MessageElement.ROOT)
            remove(ty);
    } else if (// Absolute colour #rrggbb
    c == '#') {
        pos++;
        String s = new String(msg, pos, 6);
        section = new MessageElement(settings, MessageElement.COLOUR_ABS, s);
        add(section);
    }
    pos = nextNonLiteral('m');
}
