public static void main(String[] args) {
    if (args.length < 1) {
        usage();
        System.exit(-1);
    }
    String in = args[0];
    String inlang = "RDF/XML";
    int j;
    for (j = 1; j < args.length && args[j].indexOf("=") != -1; j++) ;
    int lastInProp = j;
    if (j < args.length) {
        inlang = args[j];
    }
    j++;
    String outlang = "N-TRIPLE";
    for (; j < args.length && args[j].indexOf("=") != -1; j++) ;
    int lastOutProp = j;
    if (j < args.length) {
        outlang = args[j];
    }
    if (j + 1 < args.length) {
        // System.err.println(j+"<<"+args.length);
        usage();
        System.exit(-1);
    }
    try {
        Model m = ModelFactory.createDefaultModel();
        String base = in;
        RDFReader rdr = m.getReader(inlang);
        for (j = 1; j < lastInProp; j++) {
            int eq = args[j].indexOf("=");
            rdr.setProperty(args[j].substring(0, eq), args[j].substring(eq + 1));
        }
        try {
            rdr.read(m, in);
        } catch (JenaException ex) {
            if (!(ex.getCause() instanceof MalformedURLException))
                throw ex;
            // Tried as a URL.  Try as a file name.
            // Make absolute
            File f = new File(in);
            base = "file:///" + f.getCanonicalPath().replace('\\', '/');
            rdr.read(m, new FileInputStream(in), base);
        }
        // rdr.read(m, in);
        RDFWriter w = m.getWriter(outlang);
        j++;
        for (; j < lastOutProp; j++) {
            int eq = args[j].indexOf("=");
            w.setProperty(args[j].substring(0, eq), args[j].substring(eq + 1));
        }
        w.write(m, System.out, base);
        System.exit(0);
    } catch (Exception e) {
        System.err.println("Unhandled exception:");
        System.err.println("    " + e.toString());
        System.exit(-1);
    }
}
