public void loadProperties() throws InvalidPingPongConfigurationException {
    clear();
    // Be as strict as you can.
    File configurationFile = new File(C.APP_DATA_DIR, CONFIGURATION_FILE_NAME);
    if (!configurationFile.exists()) {
        String message = "The configuration file '" + Util.getFullName(configurationFile) + "' is missing.";
        throw new InvalidPingPongConfigurationException(message);
    }
    if (!configurationFile.isFile()) {
        String message = "The path '" + Util.getFullName(configurationFile) + "' is not a file. " + C.NL + "The application expects a configuration file here.";
        throw new InvalidPingPongConfigurationException(message);
    }
    try {
        BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(configurationFile)));
        String line = null;
        ConfigurationAttributes expected = ConfigurationAttributes.SERVER_SECTION;
        for (int lineNumber = 1; ; lineNumber++) {
            line = reader.readLine();
            if (line == null) {
                break;
            }
            line = line.trim();
            if (line.length() == 0 || line.startsWith(ConfigurationAttributes.COMMENT_DELIMETER)) {
                continue;
            }
            if (expected == ConfigurationAttributes.SERVER_SECTION) {
                if (!ConfigurationAttributes.isServerSection(line)) {
                    String message = "Invalid configuration, expected server section." + C.NL + "Error at line number: " + lineNumber + " in " + Util.getFullName(configurationFile);
                    throw new InvalidPingPongConfigurationException(message);
                }
                expected = ConfigurationAttributes.SERVER_PORT_ENTRY;
            } else if (expected == ConfigurationAttributes.SERVER_PORT_ENTRY) {
                if (!ConfigurationAttributes.isServerPortEntry(line)) {
                    String message = "Invalid configuration, expected server port " + "entry." + C.NL + "Error at line number: " + lineNumber + " in " + Util.getFullName(configurationFile);
                    throw new InvalidPingPongConfigurationException(message);
                }
                String portAsString = line.replaceFirst(ConfigurationAttributes.SERVER_PORT_ENTRY_PREFIX, "");
                String invalidPortMessage = "Invalid configuration file. " + "Server port must be a number between 1025 and 65535." + C.NL + "Error at line number: " + lineNumber + " in " + Util.getFullName(configurationFile);
                int port;
                try {
                    port = Integer.parseInt(portAsString);
                } catch (NumberFormatException e) {
                    throw new InvalidPingPongConfigurationException(invalidPortMessage);
                }
                if (!Util.isValidPort(port)) {
                    throw new InvalidPingPongConfigurationException(invalidPortMessage);
                }
                serverPort = port;
                expected = ConfigurationAttributes.RECEIVERS_SECTION;
            } else if (expected == ConfigurationAttributes.RECEIVERS_SECTION) {
                if (!ConfigurationAttributes.isReceiversSection(line)) {
                    String message = "Invalid configuration, expected receivers " + "section." + C.NL + "Error at line number: " + lineNumber + " in " + Util.getFullName(configurationFile);
                    throw new InvalidPingPongConfigurationException(message);
                }
                expected = ConfigurationAttributes.RECEIVER_ENTRY;
            } else if (expected == ConfigurationAttributes.RECEIVER_ENTRY) {
                if (!ConfigurationAttributes.isReceiverEntry(line)) {
                    String message = "Invalid configuration, expected receiver's entry." + C.NL + "Error at line number: " + lineNumber + " in " + Util.getFullName(configurationFile);
                    throw new InvalidPingPongConfigurationException(message);
                }
                int indexOfReceiverEntrySeparator = line.indexOf(ConfigurationAttributes.ENTRY_SEPARATOR);
                String host = line.substring(0, indexOfReceiverEntrySeparator);
                String portAsString = line.substring(indexOfReceiverEntrySeparator + 1);
                String invalidPortMessage = "Invalid configuration file. " + "Receiver's port must be a number between 1025 and 65535." + C.NL + "Error at line number: " + lineNumber + " in " + Util.getFullName(configurationFile);
                int port;
                try {
                    port = Integer.parseInt(portAsString);
                } catch (NumberFormatException e) {
                    throw new InvalidPingPongConfigurationException(invalidPortMessage);
                }
                if (!Util.isValidPort(port)) {
                    throw new InvalidPingPongConfigurationException(invalidPortMessage);
                }
                SocketAddress receiverAddress = new SocketAddress(host, port);
                synchronized (receiverAddress) {
                    receiverAddresses.add(receiverAddress);
                }
            }
        }
        // Now, our expected must be ConfigurationAttributes.RECEIVER_ENTRY
        if (expected != ConfigurationAttributes.RECEIVER_ENTRY) {
            String message = "Invalid configuration file: " + Util.getFullName(configurationFile);
            ;
            throw new InvalidPingPongConfigurationException(message);
        }
    } catch (IOException e) {
        String message = "Error while reading the configuraion file '" + Util.getFullName(configurationFile) + "'.";
        throw new InvalidPingPongConfigurationException(message, e);
    }
}
