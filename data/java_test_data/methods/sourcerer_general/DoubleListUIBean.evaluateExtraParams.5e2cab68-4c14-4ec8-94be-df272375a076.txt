public void evaluateExtraParams() {
    super.evaluateExtraParams();
    if (emptyOption != null) {
        addParameter("emptyOption", findValue(emptyOption, Boolean.class));
    }
    if (multiple != null) {
        addParameter("multiple", findValue(multiple, Boolean.class));
    }
    if (size != null) {
        addParameter("size", findString(size));
    }
    if ((headerKey != null) && (headerValue != null)) {
        addParameter("headerKey", findString(headerKey));
        addParameter("headerValue", findString(headerValue));
    }
    if (doubleMultiple != null) {
        addParameter("doubleMultiple", findValue(doubleMultiple, Boolean.class));
    }
    if (doubleSize != null) {
        addParameter("doubleSize", findString(doubleSize));
    }
    if (doubleDisabled != null) {
        addParameter("doubleDisabled", findValue(doubleDisabled, Boolean.class));
    }
    if (doubleName != null) {
        addParameter("doubleName", findString(this.doubleName));
    }
    if (doubleList != null) {
        addParameter("doubleList", doubleList);
    }
    Object tmpDoubleList = findValue(doubleList);
    if (doubleListKey != null) {
        addParameter("doubleListKey", doubleListKey);
    } else if (tmpDoubleList instanceof Map) {
        addParameter("doubleListKey", "key");
    }
    if (doubleListValue != null) {
        if (altSyntax()) {
            // if value start with %{ and end with }, just cut it off!
            if (doubleListValue.startsWith("%{") && doubleListValue.endsWith("}")) {
                doubleListValue = doubleListValue.substring(2, doubleListValue.length() - 1);
            }
        }
        addParameter("doubleListValue", doubleListValue);
    } else if (tmpDoubleList instanceof Map) {
        addParameter("doubleListValue", "value");
    }
    if (formName != null) {
        addParameter("formName", findString(formName));
    } else {
        // ok, let's look it up
        Component form = findAncestor(Form.class);
        if (form != null) {
            addParameter("formName", form.getParameters().get("name"));
        }
    }
    Class valueClazz = getValueClassType();
    if (valueClazz != null) {
        if (doubleValue != null) {
            addParameter("doubleNameValue", findValue(doubleValue, valueClazz));
        } else if (doubleName != null) {
            addParameter("doubleNameValue", findValue(doubleName.toString(), valueClazz));
        }
    } else {
        if (doubleValue != null) {
            addParameter("doubleNameValue", findValue(doubleValue));
        } else if (doubleName != null) {
            addParameter("doubleNameValue", findValue(doubleName.toString()));
        }
    }
    Form form = (Form) findAncestor(Form.class);
    if (doubleId != null) {
        // this check is needed for backwards compatibility with 2.1.x
        if (altSyntax()) {
            addParameter("doubleId", findString(doubleId));
        } else {
            addParameter("doubleId", doubleId);
        }
    } else if (form != null) {
        addParameter("doubleId", form.getParameters().get("id") + "_" + escape(this.doubleName));
    } else {
        addParameter("doubleId", escape(doubleName != null ? findString(doubleName) : null));
    }
    if (doubleOnclick != null) {
        addParameter("doubleOnclick", findString(doubleOnclick));
    }
    if (doubleOndblclick != null) {
        addParameter("doubleOndblclick", findString(doubleOndblclick));
    }
    if (doubleOnmousedown != null) {
        addParameter("doubleOnmousedown", findString(doubleOnmousedown));
    }
    if (doubleOnmouseup != null) {
        addParameter("doubleOnmouseup", findString(doubleOnmouseup));
    }
    if (doubleOnmouseover != null) {
        addParameter("doubleOnmouseover", findString(doubleOnmouseover));
    }
    if (doubleOnmousemove != null) {
        addParameter("doubleOnmousemove", findString(doubleOnmousemove));
    }
    if (doubleOnmouseout != null) {
        addParameter("doubleOnmouseout", findString(doubleOnmouseout));
    }
    if (doubleOnfocus != null) {
        addParameter("doubleOnfocus", findString(doubleOnfocus));
    }
    if (doubleOnblur != null) {
        addParameter("doubleOnblur", findString(doubleOnblur));
    }
    if (doubleOnkeypress != null) {
        addParameter("doubleOnkeypress", findString(doubleOnkeypress));
    }
    if (doubleOnkeydown != null) {
        addParameter("doubleOnkeydown", findString(doubleOnkeydown));
    }
    if (doubleOnselect != null) {
        addParameter("doubleOnselect", findString(doubleOnselect));
    }
    if (doubleOnchange != null) {
        addParameter("doubleOnchange", findString(doubleOnchange));
    }
    if (doubleCssClass != null) {
        addParameter("doubleCss", findString(doubleCssClass));
    }
    if (doubleCssStyle != null) {
        addParameter("doubleStyle", findString(doubleCssStyle));
    }
    if (doubleHeaderKey != null && doubleHeaderValue != null) {
        addParameter("doubleHeaderKey", findString(doubleHeaderKey));
        addParameter("doubleHeaderValue", findString(doubleHeaderValue));
    }
    if (doubleEmptyOption != null) {
        addParameter("doubleEmptyOption", findValue(doubleEmptyOption, Boolean.class));
    }
    if (doubleAccesskey != null) {
        addParameter("doubleAccesskey", findString(doubleAccesskey));
    }
}
