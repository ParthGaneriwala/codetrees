protected void createFilter(StringBuffer sqlFilter) {
    if (projectId > 0) {
        sqlFilter.append("AND m.project_id = ? ");
    }
    if (forUser > -1) {
        sqlFilter.append("AND (m.project_id IN (SELECT DISTINCT project_id FROM project_team WHERE user_id = ? " + "AND status IS NULL) OR m.project_id IN (SELECT project_id FROM projects WHERE allow_guests = ? AND approvaldate IS NOT NULL)) ");
    }
    if (alertRangeStart != null) {
        sqlFilter.append("AND m.start_date >= ? ");
    }
    if (alertRangeEnd != null) {
        sqlFilter.append("AND m.start_date < ? ");
    }
    if (eventSpanStart != null && eventSpanEnd != null) {
        // Find events within a start and end date
        sqlFilter.append("AND (");
        sqlFilter.append("(m.start_date >= ? AND m.start_date < ?) ");
        sqlFilter.append("OR (m.start_date <= ? AND m.end_date >= ?) ");
        sqlFilter.append(") ");
    } else if (eventSpanStart != null) {
        // Find the next upcoming events given just a start date
        sqlFilter.append("AND (");
        sqlFilter.append("(m.start_date >= ?) ");
        sqlFilter.append("OR (m.start_date <= ? AND m.end_date >= ?) ");
        sqlFilter.append(") ");
    }
    if (byInvitationOnly != Constants.UNDEFINED) {
        sqlFilter.append("AND by_invitation_only = ? ");
    }
    if (instanceId > -1) {
        sqlFilter.append("AND m.project_id IN (SELECT project_id FROM projects WHERE instance_id = ?) ");
    }
    if (publicOpenProjectsOnly) {
        sqlFilter.append("AND m.project_id IN (SELECT project_id FROM projects WHERE allow_guests = ? AND approvaldate IS NOT NULL) ");
    }
    if (forParticipant == Constants.TRUE) {
        sqlFilter.append("AND m.project_id IN (SELECT project_id FROM projects WHERE (allows_user_observers = ? OR allow_guests = ?) AND approvaldate IS NOT NULL) ");
    }
    if (projectCategoryId > 0) {
        sqlFilter.append("AND m.project_id IN (SELECT project_id FROM projects WHERE category_id = ?) ");
    } else if (projectCategoryIdList != null && !projectCategoryIdList.isEmpty()) {
        sqlFilter.append("AND m.project_id IN (SELECT project_id FROM projects WHERE category_id IN (");
        sqlFilter.append(projectCategoryIdList.get(0));
        for (int i = 1; i < projectCategoryIdList.size(); i++) {
            sqlFilter.append("," + projectCategoryIdList.get(i));
        }
        sqlFilter.append(") )");
    }
    if (isDimdim) {
        sqlFilter.append("AND m.is_dimdim = ? ");
    }
    if (isWebcast) {
        sqlFilter.append("AND m.is_webcast = ? ");
    }
}
