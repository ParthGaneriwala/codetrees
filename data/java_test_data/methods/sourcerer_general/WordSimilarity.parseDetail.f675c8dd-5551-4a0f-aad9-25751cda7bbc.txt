private static void parseDetail(String related, Word word) {
    // spilt by ","
    String[] parts = related.split(",");
    boolean isFirst = true;
    boolean isRelational = false;
    boolean isSimbol = false;
    String chinese = null;
    String relationalPrimitiveKey = null;
    String simbolKey = null;
    for (int i = 0; i < parts.length; i++) {
        // ����Ǿ���ʣ��������ſ�ʼ�ͽ�β: (Bahrain|����)
        if (parts[i].startsWith("(")) {
            parts[i] = parts[i].substring(1, parts[i].length() - 1);
        // parts[i] = parts[i].replaceAll("\\s+", "");
        }
        // ��ϵ��ԭ��֮��Ķ��ǹ�ϵ��ԭ
        if (parts[i].contains("=")) {
            isRelational = true;
            // format: content=fact|����
            String[] strs = parts[i].split("=");
            relationalPrimitiveKey = strs[0];
            String value = strs[1].split("\\|")[1];
            word.addRelationalPrimitive(relationalPrimitiveKey, value);
            continue;
        }
        String[] strs = parts[i].split("\\|");
        // ��ʼ�ĵ�һ���ַ���ȷ���Ƿ�Ϊ��ԭ������������ϵ��
        int type = getPrimitiveType(strs[0]);
        // �������Ĳ��ֵĴ���,�������û�����Ľ���
        if (strs.length > 1) {
            chinese = strs[1];
        }
        if (chinese != null && (chinese.endsWith(")") || chinese.endsWith("}"))) {
            chinese = chinese.substring(0, chinese.length() - 1);
        }
        // ��ԭ
        if (type == 0) {
            // ֮ǰ��һ����ϵ��ԭ
            if (isRelational) {
                word.addRelationalPrimitive(relationalPrimitiveKey, chinese);
                continue;
            }
            // ֮ǰ��һ���Ƿ�����ԭ
            if (isSimbol) {
                word.addRelationSimbolPrimitive(simbolKey, chinese);
                continue;
            }
            if (isFirst) {
                word.setFirstPrimitive(chinese);
                isFirst = false;
                continue;
            } else {
                word.addOtherPrimitive(chinese);
                continue;
            }
        }
        // ��ϵ���ű�
        if (type == 1) {
            isSimbol = true;
            isRelational = false;
            simbolKey = Character.toString(strs[0].charAt(0));
            word.addRelationSimbolPrimitive(simbolKey, chinese);
            continue;
        }
        if (type == 2) {
            // ���
            if (strs[0].startsWith("{")) {
                // ȥ����ʼ��һ���ַ� "{"
                String english = strs[0].substring(1);
                // ȥ���а벿�� "}"
                if (chinese != null) {
                    word.addStructruralWord(chinese);
                    continue;
                } else {
                    // ���û�����Ĳ��֣���ʹ��Ӣ�Ĵ�
                    word.addStructruralWord(english);
                    continue;
                }
            }
        }
    }
}
