public void saveGapList() {
    try {
        File gapListFile = new File(chunkPath + File.separator + startOffset + ".gaplist.tmp");
        gapListFile.createNewFile();
        FileOutputStream output = null;
        FileChannel channel;
        try {
            output = new FileOutputStream(gapListFile);
        } catch (FileNotFoundException e) {
            System.out.println("File not found.");
        }
        LinkedList gapListSave = (LinkedList) gapList.getGapList().clone();
        Iterator it2 = gapListSave.iterator();
        ByteBuffer buffer = ByteBuffer.allocate(4 + (gapListSave.size() * 16));
        buffer.putInt(gapListSave.size());
        Iterator it = gapListSave.iterator();
        while (it.hasNext()) {
            long[] gap = (long[]) it.next();
            buffer.putLong(gap[0]);
            buffer.putLong(gap[1]);
        }
        channel = output.getChannel();
        buffer.rewind();
        buffer.limit(buffer.capacity());
        channel.write(buffer);
        channel.close();
        output.close();
        File oldGapListFile = new File(chunkPath + File.separator + startOffset + ".gaplist");
        if (oldGapListFile.exists())
            ddmt.deleteFile(oldGapListFile);
        gapListFile.renameTo(oldGapListFile);
    } catch (IOException e) {
        System.out.println("Error saving partfile: " + e.getMessage());
    }
}
