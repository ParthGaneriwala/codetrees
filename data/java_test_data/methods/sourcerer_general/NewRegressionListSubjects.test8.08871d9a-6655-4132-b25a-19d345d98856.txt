public void test8() {
    assertEquiv(subjectsTo(subjectPrefix, 5), m.listResourcesWithProperty(predicates[4]));
    assertEquiv(subjectsTo(subjectPrefix, 2), m.listResourcesWithProperty(predicates[0]));
    assertEquiv(subjectsTo(subjectPrefix, 2), m.listResourcesWithProperty(predicates[0], tvBooleans[0]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listResourcesWithProperty(predicates[0], tvBooleans[1]));
    assertEquiv(subjectsTo(subjectPrefix, 2), m.listResourcesWithProperty(predicates[0], tvChars[0]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listResourcesWithProperty(predicates[0], tvChars[1]));
    assertEquiv(subjectsTo(subjectPrefix, 2), m.listResourcesWithProperty(predicates[0], tvLongs[0]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listResourcesWithProperty(predicates[0], tvLongs[1]));
    assertEquiv(subjectsTo(subjectPrefix, 2), m.listResourcesWithProperty(predicates[0], tvFloats[0]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listResourcesWithProperty(predicates[0], tvFloats[1]));
    assertEquiv(subjectsTo(subjectPrefix, 2), m.listResourcesWithProperty(predicates[0], tvDoubles[0]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listResourcesWithProperty(predicates[0], tvDoubles[1]));
    assertEquiv(subjectsTo(subjectPrefix, 2), m.listResourcesWithProperty(predicates[0], (byte) tvLongs[0]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listResourcesWithProperty(predicates[0], (byte) tvLongs[1]));
    assertEquiv(subjectsTo(subjectPrefix, 2), m.listResourcesWithProperty(predicates[0], (short) tvLongs[0]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listResourcesWithProperty(predicates[0], (short) tvLongs[1]));
    assertEquiv(subjectsTo(subjectPrefix, 2), m.listResourcesWithProperty(predicates[0], (int) tvLongs[0]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listResourcesWithProperty(predicates[0], (int) tvLongs[1]));
    assertEquiv(subjectsTo(subjectPrefix, 2), m.listSubjectsWithProperty(predicates[0], tvStrings[0]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listSubjectsWithProperty(predicates[0], tvStrings[1]));
    assertEquiv(subjectsTo(subjectPrefix, 2), m.listSubjectsWithProperty(predicates[0], tvStrings[0], langs[0]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listSubjectsWithProperty(predicates[0], tvStrings[1], langs[0]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listSubjectsWithProperty(predicates[0], tvStrings[0], langs[1]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listSubjectsWithProperty(predicates[0], tvStrings[1], langs[1]));
    assertEquiv(subjectsTo(subjectPrefix, 2), m.listResourcesWithProperty(predicates[0], tvLitObjs[0]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listResourcesWithProperty(predicates[0], tvLitObjs[1]));
    assertEquiv(subjectsTo(subjectPrefix, 2), m.listResourcesWithProperty(predicates[0], tvResObjs[0]));
    assertEquiv(subjectsTo(subjectPrefix, 0), m.listResourcesWithProperty(predicates[0], tvResObjs[1]));
// assertEquiv( new HashSet( Arrays.asList( objects ) ), m.listObjectsOfProperty( predicates[1] ) );
}
