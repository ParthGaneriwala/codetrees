public void start1() {
    int[][][] Dct = new int[imgCols][imgRows][4];
    double[][][] working3D = copyToDouble(Rgb);
    double[][][] working3DDCT = copyToDouble(Rgb);
    // Facem DCT + watermark
    double[][] redPlane = extractPlane(working3D, 1);
    redPlane = extractPlane(working3D, 1);
    forwardXformPlane(redPlane, 1);
    insertPlane(working3D, redPlane, 1);
    redPlane = extractPlane(working3D, 2);
    forwardXformPlane(redPlane, 1);
    insertPlane(working3D, redPlane, 2);
    redPlane = extractPlane(working3D, 3);
    forwardXformPlane(redPlane, 1);
    insertPlane(working3D, redPlane, 3);
    // Facem DCT a 2 oara fara watermark pt a scoate watermarkul
    redPlane = extractPlane(working3DDCT, 1);
    forwardXformPlane(redPlane, 0);
    insertPlane(working3DDCT, redPlane, 1);
    redPlane = extractPlane(working3DDCT, 2);
    forwardXformPlane(redPlane, 0);
    insertPlane(working3DDCT, redPlane, 2);
    redPlane = extractPlane(working3DDCT, 3);
    forwardXformPlane(redPlane, 0);
    insertPlane(working3DDCT, redPlane, 3);
    for (int i = 0; i < working3D.length; i++) {
        for (int j = 0; j < working3D.length; j++) {
            for (int k = 0; k < 4; k++) {
                working3DDCT[i][j][k] = working3D[i][j][k] - working3DDCT[i][j][k];
            }
        }
    }
    // inversam watermarkul pt a vedea ce am adaugat
    redPlane = extractPlane(working3DDCT, 1);
    inverseXformPlane(redPlane);
    insertPlane(working3DDCT, redPlane, 1);
    redPlane = extractPlane(working3DDCT, 2);
    inverseXformPlane(redPlane);
    insertPlane(working3DDCT, redPlane, 2);
    redPlane = extractPlane(working3DDCT, 3);
    inverseXformPlane(redPlane);
    insertPlane(working3DDCT, redPlane, 3);
    Dct = copyToInt(working3DDCT);
    creazaImagine(Dct);
    // inversa dct + watermark pt a obtine imaginea finala
    redPlane = extractPlane(working3D, 1);
    inverseXformPlane(redPlane);
    insertPlane(working3D, redPlane, 1);
    redPlane = extractPlane(working3D, 2);
    inverseXformPlane(redPlane);
    insertPlane(working3D, redPlane, 2);
    redPlane = extractPlane(working3D, 3);
    inverseXformPlane(redPlane);
    insertPlane(working3D, redPlane, 3);
    Dct = copyToInt(working3D);
    creazaImagine(Dct);
}
