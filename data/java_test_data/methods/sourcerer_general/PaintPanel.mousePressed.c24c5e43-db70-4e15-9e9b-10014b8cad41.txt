public void mousePressed(MouseEvent e) {
    double distance;
    double[] minDistance;
    int i, selected = 0, t, polygonCount = 0;
    Point p = new Point();
    p.x = e.getX();
    p.y = e.getY();
    if (!fillMode && !shadeMode) {
        if (drawMode) {
            if (cornerCount == 0) {
                actPolygon = new Polygon();
                corner = new Corner();
                actLine = new Line();
            } else {
                actLine = new Line();
                actLine.setP1(actPolygon.getP(cornerCount - 1));
                corner = new Corner();
            }
            actPolygon.setCol(lineColor);
            actLine.setCol(lineColor);
        }
    } else {
        actPolygon = new Polygon();
        polygonCount = polygonList.size();
        minDistance = new double[polygonCount];
        for (t = 0; t < polygonCount; t++) {
            i = 0;
            actPolygon = (Polygon) polygonList.get(t);
            System.out.println("punkteanzahl" + t + ": " + actPolygon.getPointNumber());
            while (actPolygon.getP(i) != null) {
                if (actPolygon.getP(i + 1) == null)
                    distance = Line.ptLineDist(actPolygon.getP(i).x, actPolygon.getP(i).y, actPolygon.getP(0).x, actPolygon.getP(0).y, p.x, p.y);
                else
                    distance = Line.ptLineDist(actPolygon.getP(i).x, actPolygon.getP(i).y, actPolygon.getP(i + 1).x, actPolygon.getP(i + 1).y, p.x, p.y);
                if (i == 0)
                    minDistance[t] = distance;
                else if (distance < minDistance[t])
                    minDistance[t] = distance;
                i++;
            }
            if (t > 0) {
                if (minDistance[t] < minDistance[selected]) {
                    selected = t;
                }
            }
        }
        for (t = 0; t < polygonCount; t++) {
            System.out.println("Polygon " + t + ": " + minDistance[t]);
        }
        System.out.println("Mindestabstand Polygon " + selected + ": " + minDistance[selected]);
        if (minDistance[selected] < 1)
            fillPolygon(selected, shadeDistance);
    }
}
