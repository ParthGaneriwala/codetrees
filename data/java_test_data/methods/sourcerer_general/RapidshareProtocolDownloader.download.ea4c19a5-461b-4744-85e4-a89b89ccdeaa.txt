public void download(DownloadLink source) {
    running = true;
    System.out.println("RapidshareProtocolDownloader.download" + Thread.currentThread().getName());
    try {
        HttpBrowser httpBrowser = new HttpBrowser();
        if (!validateLink(source)) {
            return;
        }
        httpBrowser.browse(source.getDownloadUrl());
        Form id = httpBrowser.getFormById("ff");
        if (id != null) {
            System.out.println("Id Found");
            httpBrowser.submintForm(id);
            List<Script> scripts = httpBrowser.getScripts();
            StringBuffer scriptBuffer = new StringBuffer();
            for (Script script : scripts) {
                scriptBuffer.append(script.getScriptText());
            }
            while (httpBrowser.matches(LOT_OF_USERS) || httpBrowser.matches(DOWNLOAD_LIMIT)) {
                log.info("Rapidshare server is to bussy retry in one minute");
                try {
                    Thread.sleep(1000 * 60L);
                } catch (InterruptedException e) {
                }
            }
            Matcher linkMatcher = PATTERN_FIND_PRESELECTED_SERVER.matcher(scriptBuffer);
            if (linkMatcher.find()) {
                System.out.println("Link Found");
                String url = linkMatcher.group(1);
                System.out.println("url = " + url);
                final long time;
                Matcher timeMatcher = PATTERN_TIME_TO_WAIT.matcher(scriptBuffer);
                if (timeMatcher.find()) {
                    System.out.println("Time Found");
                    time = Long.parseLong(timeMatcher.group(1));
                    System.out.println("time = " + time);
                    try {
                        Thread.sleep(time * 1000L);
                    } catch (InterruptedException e) {
                        log.severe(e.getMessage());
                    }
                    System.out.println("Start downloading url = " + url);
                    protocol.download(url);
                    source.setState(DownloadLink.DOWNLOADED);
                } else {
                    log.severe("No se encontro el time " + httpBrowser.getCurrentHtml());
                }
            } else {
                log.severe("No se encontro el Link en" + httpBrowser.getCurrentHtml());
            }
        } else {
            log.severe("No se encontro el form by id ff en " + httpBrowser.getCurrentHtml());
        }
    } catch (ParserException e) {
        log.severe(e.getMessage());
    } catch (IOException e) {
        log.severe(e.getMessage());
    } finally {
        running = false;
    }
}
