// $ANTLR start "block_else"
public final CompiladoresParser.block_else_return block_else() throws RecognitionException {
    CompiladoresParser.block_else_return retval = new CompiladoresParser.block_else_return();
    retval.start = input.LT(1);
    CommonTree root_0 = null;
    CompiladoresParser.block_return block64 = null;
    try {
        dbg.enterRule(getGrammarFileName(), "block_else");
        if (getRuleLevel() == 0) {
            dbg.commence();
        }
        incRuleLevel();
        dbg.location(127, 1);
        try {
            // /home/CIN/fmm/Desktop/grammar/Compiladores.g:127:14: ( block )
            dbg.enterAlt(1);
            // /home/CIN/fmm/Desktop/grammar/Compiladores.g:127:16: block
            {
                root_0 = (CommonTree) adaptor.nil();
                dbg.location(127, 16);
                pushFollow(FOLLOW_block_in_block_else959);
                block64 = block();
                state._fsp--;
                adaptor.addChild(root_0, block64.getTree());
            }
            retval.stop = input.LT(-1);
            retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
            retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);
        } finally {
        }
        dbg.location(127, 21);
    } finally {
        dbg.exitRule(getGrammarFileName(), "block_else");
        decRuleLevel();
        if (getRuleLevel() == 0) {
            dbg.terminate();
        }
    }
    return retval;
}
