private int getPersons(ListFilesEnum listType) {
    Parser parser = new Parser();
    Set<NamedEntity> personsSet = new LinkedHashSet<NamedEntity>();
    String patternRegExp = null;
    String personName;
    Pattern pattern;
    Matcher matcher;
    int totalElementsNum = 0;
    int tempLineNumber;
    switch(listType) {
        case ACTORS:
        case ACTRESSES:
        case DIRECTORS:
        case PRODUCERS:
        case WRITERS:
            patternRegExp = personsPattern;
            break;
    }
    parser.loadFile(listfilesMap.get(listType), listType);
    // Making sure we find the start of the list
    if (parser.findStartOfList()) {
        System.out.println("Found the start of the list!");
        pattern = Pattern.compile(patternRegExp);
        while (!parser.isEOF()) {
            matcher = pattern.matcher(parser.readLine());
            if (matcher.matches()) {
                tempLineNumber = parser.getLineNumber() - 1;
                personName = matcher.group(1);
                // NOTE: tempLineNumber is a temporary field used during the import and dropped from the DB at the end
                // it doesn't have a field in the NamedEntity, so for this occasion only, it is sent instead of the ID field
                personsSet.add(new NamedEntity(tempLineNumber, personName));
            }
            // flush results every BATCH_SIZE
            if ((personsSet.size() > 0) && (personsSet.size() % PSTMT_BATCH_SIZE == 0)) {
                System.out.println("Inserting " + personsSet.size() + " elements to the DB");
                DBManager.getInstance().insertPersonsSetToDB(connection, personsSet);
                totalElementsNum += personsSet.size();
                personsSet.clear();
            }
        }
        // flush the results that were left
        if ((personsSet.size() > 0)) {
            System.out.println("Inserting " + personsSet.size() + " elements to the DB");
            DBManager.getInstance().insertPersonsSetToDB(connection, personsSet);
            totalElementsNum += personsSet.size();
        }
        System.out.println("Total number of elements entered into DB: " + totalElementsNum);
    } else
        return -1;
    parser.closeFile();
    return totalElementsNum;
}
