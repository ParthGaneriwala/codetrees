private void processChannelTell(ICCDatagram dat) {
    // the channel nunmber.
    int channel = Integer.parseInt(dat.getArgument(0));
    // The name of the sender.
    String name = dat.getArgument(1);
    // The message itself.
    String message = dat.getText(dat.getArgument(3));
    // The titles in "(C H GM)" form (parenthesized).
    String titles = ICCDatagram.getTitle(dat.getArgument(2));
    // The entire message.
    String messageString = "" + name + titles + "(" + channel + "): " + message;
    if ((channel == simchannel) && (message.startsWith("sim"))) {
        String toSend = "ROBOKieb Sim info:\\n";
        if (simStatus == 0) {
            toSend = toSend.concat("There is currently no sim.");
        }
        if (simStatus == 1) {
            toSend = toSend.concat(simGiver[currentSimGiver] + " is presently preparing a sim. Watch for announcements.");
        }
        if (simStatus == 2) {
            String colorExpression = "black";
            toSend = toSend.concat("Sim by " + simGiver[currentSimGiver] + " is presently OPEN. Parameters:\\n");
            toSend = toSend.concat("Time:       " + simTime[currentSimGiver] + "\\n");
            toSend = toSend.concat("Inc:        " + simInc[currentSimGiver] + "\\n");
            toSend = toSend.concat("Wild:       " + simWild[currentSimGiver] + "\\n");
            if (simColor[currentSimGiver] == 0) {
                colorExpression = "auto";
            } else if (simColor[currentSimGiver] == 1) {
                colorExpression = "white";
            }
            toSend = toSend.concat("Color:      " + colorExpression + "\\n");
            toSend = toSend.concat("Rated:      " + simRated[currentSimGiver] + "\\n");
            toSend = toSend.concat("MaxPlayer:  " + simMaxPlayer[currentSimGiver] + "\\n");
            toSend = toSend.concat("MinPlayer:  " + simMinPlayer[currentSimGiver] + "\\n");
            toSend = toSend.concat("Wait:       " + simWait[currentSimGiver] + "\\n");
            toSend = toSend.concat("MaxRating:  " + simMaxRating[currentSimGiver] + "\\n");
            toSend = toSend.concat("MinRating:  " + simMinRating[currentSimGiver] + "\\n");
            toSend = toSend.concat("OtherGames: " + simOtherGames[currentSimGiver] + "\\n");
            toSend = toSend.concat("AllowUnreg: " + simAllowUnreg[currentSimGiver] + "\\n\\n");
            toSend = toSend.concat("'finger " + simGiver[currentSimGiver] + "' for info about this player. 'play " + simGiver[currentSimGiver] + "' to join.\\n");
            toSend = toSend.concat("Currently " + simParticipant.size() + " players. Start in " + ((int) ((simScheduledStart - System.currentTimeMillis()) / 60000.0)) + " minutes or less!");
        }
        if (simStatus == 3) {
            toSend = toSend.concat("The sim of " + simGiver[currentSimGiver] + " is in progress. " + simGamesLeft + " games left. 'games " + simGiver[currentSimGiver] + "'.");
        }
        if (simStatus == 4) {
            int simDisconnectedSince = (int) ((System.currentTimeMillis() - simDisconnectedOn) / 60000.0);
            toSend = toSend.concat(simGiver[currentSimGiver] + " got disconnected during his sim! This happened " + simDisconnectedSince + " minutes ago.");
        }
        sendQTell(toSend, name);
    }
    // Handle a channel tell here.
    System.out.println(messageString);
}
