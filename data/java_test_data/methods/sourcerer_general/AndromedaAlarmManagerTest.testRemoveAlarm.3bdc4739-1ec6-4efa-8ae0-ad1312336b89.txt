public void testRemoveAlarm() {
    AlarmModel alarmOne = null;
    AlarmModel alarmTwo = null;
    AlarmModel alarmThree = null;
    int numAlarms = -1;
    int numAlarmsAdded = -1;
    // Test removing with null value, no alarms; should have no effect
    AndromedaAlarmManager.removeAlarm(alarmOne);
    numAlarms = AndromedaAlarmManager.getAlarmCount();
    assertTrue(numAlarms == 0);
    // Test removing with null value, some alarms; should have no effect
    AndromedaAlarmManager.addAlarm(AlarmFactory.createAlarm());
    AndromedaAlarmManager.addAlarm(AlarmFactory.createAlarm());
    AndromedaAlarmManager.addAlarm(AlarmFactory.createAlarm());
    numAlarmsAdded = AndromedaAlarmManager.getAlarmCount();
    AndromedaAlarmManager.removeAlarm(alarmOne);
    numAlarms = AndromedaAlarmManager.getAlarmCount();
    assertTrue(numAlarms == numAlarmsAdded);
    // Test removing with non-null value, given alarm is not in collection of alarms
    alarmOne = AlarmFactory.createAlarm();
    AndromedaAlarmManager.removeAlarm(alarmOne);
    numAlarms = AndromedaAlarmManager.getAlarmCount();
    assertTrue(numAlarms == numAlarmsAdded);
    // Reset the model
    AndromedaAlarmManager.removeAllAlarms();
    // Test removing with non-null value, no alarms; should have no effect
    AndromedaAlarmManager.removeAlarm(alarmOne);
    numAlarms = AndromedaAlarmManager.getAlarmCount();
    assertTrue(numAlarms == 0);
    // Test removing with non-null value, some alarms; given alarm is in collection of alarms
    alarmTwo = AlarmFactory.createAlarm();
    alarmThree = AlarmFactory.createAlarm();
    AndromedaAlarmManager.addAlarm(alarmOne);
    AndromedaAlarmManager.addAlarm(alarmTwo);
    AndromedaAlarmManager.addAlarm(alarmThree);
    numAlarmsAdded = AndromedaAlarmManager.getAlarmCount();
    AndromedaAlarmManager.removeAlarm(alarmOne);
    numAlarms = AndromedaAlarmManager.getAlarmCount();
    assertTrue(numAlarms == numAlarmsAdded - 1);
}
