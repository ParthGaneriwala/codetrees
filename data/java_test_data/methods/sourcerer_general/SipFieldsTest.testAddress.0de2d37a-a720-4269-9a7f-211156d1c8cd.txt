@Test
public void testAddress() throws Exception {
    _fields.setAddress(SipHeaders.FROM_BUFFER, new NameAddr("sip:foo@bar.com"));
    assertEquals("<sip:foo@bar.com>", _fields.getString("from"));
    SipURI uri = (SipURI) _fields.getAddress("from").getURI();
    assertEquals("foo", uri.getUser());
    assertEquals("bar.com", uri.getHost());
    _fields.addAddress("route", new NameAddr("sip:route1"), false);
    _fields.addAddress(SipHeaders.ROUTE_BUFFER, new NameAddr("sip:route2"), false);
    Iterator<Address> it = _fields.getAddressValues("route");
    assertTrue(it.hasNext());
    assertEquals("route1", ((SipURI) it.next().getURI()).getHost());
    assertTrue(it.hasNext());
    assertEquals("route2", ((SipURI) it.next().getURI()).getHost());
    assertFalse(it.hasNext());
    _fields.removeFirst(SipHeaders.ROUTE_BUFFER);
    it = _fields.getAddressValues("route");
    assertTrue(it.hasNext());
    assertEquals("route2", ((SipURI) it.next().getURI()).getHost());
    assertFalse(it.hasNext());
    _fields.removeFirst(SipHeaders.ROUTE_BUFFER);
    it = _fields.getAddressValues("route");
    assertFalse(it.hasNext());
}
