public void testHacerLiquidacionCreaRecibosAlguienDebe() {
    // En la base de datos ya hay socios cargados
    // Primer liquidacion. Recibos "no devueltos"
    AdministradorDeLiquidaciones.HacerLiquidacion();
    Liquidacion liquidacion1 = AdministradorDeLiquidaciones.getUltimaLiquidacion();
    // El socio0 debe el mes anterior
    ((Recibo) liquidacion1.getRecibosFor(socios[0]).get(0)).setDevuelto(true);
    // El socio1 debe el mes anterior
    ((Recibo) liquidacion1.getRecibosFor(socios[1]).get(0)).setDevuelto(true);
    // Segunda liquidacion.
    AdministradorDeLiquidaciones.HacerLiquidacion();
    Liquidacion liquidacion2 = AdministradorDeLiquidaciones.getUltimaLiquidacion();
    // Tiene que haber dos recibos para los socios 0 y 1
    assertEquals(2, liquidacion2.getRecibosFor(socios[0]).size());
    assertEquals(2, liquidacion2.getRecibosFor(socios[1]).size());
    // Tiene que haber un recibo para el resto de los socios comunes
    assertEquals(1, liquidacion2.getRecibosFor(socios[2]).size());
    assertEquals(1, liquidacion2.getRecibosFor(socios[3]).size());
    assertEquals(1, liquidacion2.getRecibosFor(socios[4]).size());
    assertEquals(1, liquidacion2.getRecibosFor(socios[5]).size());
    // No tiene que haber recibo para los socios vitalicios
    assertTrue(liquidacion2.getRecibosFor(socios[6]).isEmpty());
    // Tiene que haber un recibo para el titular del grupo familiar
    assertEquals(1, liquidacion2.getRecibosFor(socios[7]).size());
    // No tiene que haber recibos para los integrantes del grupo familiar
    assertTrue(liquidacion2.getRecibosFor(socios[8]).isEmpty());
    assertTrue(liquidacion2.getRecibosFor(socios[9]).isEmpty());
    // En total, debe haber solo 9 recibos.. Ni mas ni menos!
    assertEquals(liquidacion2.getRecibos().size(), 9);
    // El mes para los dos recibos de un socio que debe, tiene que ser el mes de la ï¿½ltima liq.
    // y el de la anterior.
    List recibos = liquidacion2.getRecibosFor(socios[0]);
    Vector meses = new Vector();
    Iterator i = recibos.iterator();
    while (i.hasNext()) {
        meses.add(new Integer(((Recibo) i.next()).getMes()));
    }
    assertTrue(meses.contains(new Integer(liquidacion1.getMes())));
    assertTrue(meses.contains(new Integer(liquidacion2.getMes())));
}
