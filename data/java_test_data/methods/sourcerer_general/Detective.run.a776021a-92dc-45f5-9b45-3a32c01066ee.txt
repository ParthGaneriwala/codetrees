@Override
public void run() {
    Options options = Options.getInstance();
    suspects = new ArrayList<Suspect>();
    Suspect s;
    // ersma alle verzeichnisse
    // dazu ersma downloadpaths aus der application holen um die auszuschliessen
    List<String> downloadPaths = options.getCurrentDownloadPaths();
    List<File> dirs = new FileLister().getBaseDirectories(new File(currentMainDir));
    for (File dir : dirs) {
        if (downloadPaths.contains(dir.getAbsolutePath())) {
            L.d("downloadpath " + dir.getAbsolutePath() + " exisitierte bereits, wird nicht weiter untersucht");
            continue;
        } else {
            s = new Suspect(dir.getAbsolutePath());
            s.allfiles = convertFileList2myFileList(new FileLister().getFiles(dir));
            suspects.add(s);
        }
    }
    // ersma kurz nen filefilter, dann dateien im ordner selber
    File[] files = new File(currentMainDir).listFiles(new FileFilter() {

        public boolean accept(File pathname) {
            return pathname.isFile();
        }
    });
    // datein im ordner selber
    for (File f : files) {
        if (Analyzer.getStringArrayAsList(Analyzer._FILEENDINGS).contains(Analyzer.getEnding(f).toLowerCase())) {
            s = new Suspect(f.getAbsolutePath());
            s.allfiles.add(new myFile(f.getAbsolutePath()));
            suspects.add(s);
        // rardateien untersuchen !!1
        } else if (Analyzer.getEnding(f).toLowerCase().equals(".rar")) {
            try {
                RARFile rarfile = new RARFile(f.getAbsolutePath());
                // Get the handle to the Enumeration
                Enumeration<RAREntry> entries = rarfile.entries();
                // Iterate and print
                if (entries.hasMoreElements()) {
                    RAREntry entry = entries.nextElement();
                    s = new Suspect(f.getAbsolutePath());
                    s.allfiles.add(new myFile(f.getAbsolutePath()));
                    s.filetype = s.filetype.RAR_SUSPECT;
                    String inhalt = entry.getName();
                    s.rar_entry = inhalt.contains("\\") ? inhalt.substring(inhalt.lastIndexOf("\\") + 1) : inhalt;
                    suspects.add(s);
                }
            } catch (Exception e) {
            // e.printStackTrace();
            }
        }
    }
    // jetzt RAR_SUSPECTS mit andern funden zusammenzauseln
    for (Suspect sus : suspects) {
        if (!sus.rar_entry.isEmpty() && sus.filetype == sus.filetype.RAR_SUSPECT) {
            for (Suspect suchSuspect : suspects) {
                for (myFile f : suchSuspect.allfiles) {
                    if (f.getName().equals(sus.rar_entry)) {
                        suchSuspect.allfiles.add(new myFile(sus.getAbsolutePath()));
                        break;
                    }
                }
            }
        }
    }
    L.d(new Date().getTime() + this.getName() + ": Fertig mit Files");
    new Analyzer(ratings).analyzeSuspects(suspects);
    L.d(new Date().getTime() + this.getName() + "fertig mit analysieren, jetz tot");
}
