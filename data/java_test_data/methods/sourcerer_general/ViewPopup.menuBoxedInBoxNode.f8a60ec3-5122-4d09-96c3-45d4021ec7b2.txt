public void menuBoxedInBoxNode() {
    clearMenu();
    m = new JMenuItem(new DeBoxAction(gview));
    m.setText(LabelReader.getInstance().getString("DeboxBoxNode"));
    popup.add(m);
    m = new JMenuItem(new DeleteAction(false, gview));
    m.setText(LabelReader.getInstance().getString("DeleteBoxNode"));
    popup.add(m);
    popup.addSeparator();
    JMenu m2 = new JMenu(LabelReader.getInstance().getString("AddHandle"));
    m = new JMenuItem(new AddAction(cons.getValueTransmitterInString(), gview, frame));
    m.setText(LabelReader.getInstance().getString("NewValueTransmitterIn"));
    m2.add(m);
    m = new JMenuItem(new AddAction(cons.getValueTransmitterOutString(), gview, frame));
    m.setText(LabelReader.getInstance().getString("NewValueTransmitterOut"));
    m2.add(m);
    m = new JMenuItem(new AddAction(cons.getTriggerTransmitterInString(), gview, null));
    m.setText(LabelReader.getInstance().getString("NewTriggerTransmitterIn"));
    m2.add(m);
    m = new JMenuItem(new AddAction(cons.getTriggerTransmitterOutString(), gview, null));
    m.setText(LabelReader.getInstance().getString("NewTriggerTransmitterOut"));
    m2.add(m);
    popup.add(m2);
    popup.addSeparator();
    m = new JMenuItem(new ReDrawAction(gview, gmodel.getSelected()));
    m.setText(LabelReader.getInstance().getString("Redraw"));
    popup.add(m);
    m = new JMenuItem(new ColorAction(gview, gmodel.getSelected()));
    m.setText(LabelReader.getInstance().getString("ChangeColor"));
    popup.add(m);
}
