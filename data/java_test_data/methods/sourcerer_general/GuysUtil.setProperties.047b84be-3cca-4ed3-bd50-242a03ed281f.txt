public static Object setProperties(Object object, HttpServletRequest req) {
    Object vo = null;
    String methodName = new String();
    String paramType = new String();
    String attributeName = new String();
    String value = new String();
    try {
        Class cless = object.getClass();
        vo = cless.newInstance();
        Method[] methods = cless.getMethods();
        int index = 0;
        for (Method method : methods) {
            try {
                methodName = method.getName();
                if (methodName.startsWith("set")) {
                    index = method.toString().indexOf("(");
                    paramType = method.toString().substring(index + 1, method.toString().length() - 1);
                    attributeName = methodName.substring(3, 4).toLowerCase() + methodName.substring(4);
                    value = req.getParameter(attributeName);
                    // System.out.println("[value]"+value);
                    if (value == null) {
                        // System.out.println("value is null");
                        continue;
                    }
                    if (paramType.endsWith("int")) {
                        // System.out.println("in int");
                        method.invoke(vo, Integer.parseInt(value));
                    } else if (paramType.endsWith("String")) {
                        // System.out.println("in String");
                        method.invoke(vo, value);
                    } else if (paramType.endsWith("Date")) {
                        // System.out.println("in Date");
                        int year = Integer.parseInt(value.substring(0, 4));
                        int month = Integer.parseInt(value.substring(4, 6));
                        int day = Integer.parseInt(value.substring(6, value.length()));
                        method.invoke(vo, toSqlDate(year, month, day));
                    } else {
                        System.out.println("in others : " + paramType);
                    }
                }
            } catch (NumberFormatException e) {
                System.out.print("[method:" + methodName + "] ");
                System.out.print("[attribute:" + attributeName + "] ");
                System.out.print("[param:" + paramType + "] ");
                System.out.println("[value:" + value + "] ");
            } catch (IllegalArgumentException e) {
                e.printStackTrace();
            } catch (InvocationTargetException e) {
                e.printStackTrace();
            }
        }
    } catch (InstantiationException e) {
        e.printStackTrace();
    } catch (IllegalAccessException e) {
        e.printStackTrace();
    }
    System.out.println(vo);
    return vo;
}
