public void process(JCas jCas) throws AnalysisEngineProcessException {
    // The text here was once upon a time some lyrics by a favorite singer which have since been
    // obfuscated to avoid any copyright issues.
    jCas.setDocumentText("Wwwwwwww ii ss yyy mmmmm ttttt yyy hhhh " + "Yyy hhhh nnnnnnn tt llll " + "Ttttttt eeeee dddd aaa llllll ttttt " + "Tttt rrrr llll a ffff.");
    Token token1 = new Token(jCas, 0, 8);
    token1.addToIndexes();
    Lemma lemma = new Lemma(jCas);
    lemma.setValue("wwwwwwww");
    // covered text of lemma is "hat"
    lemma.setBegin(1);
    lemma.setEnd(4);
    lemma.setTestFS(new StringArray(jCas, 3));
    lemma.setTestFS(0, "A");
    lemma.setTestFS(1, "B");
    lemma.setTestFS(2, "A");
    lemma.addToIndexes();
    token1.setLemma(lemma);
    POSTag posTag1 = new POSTag(jCas, 0, 8);
    posTag1.setValue("pos1");
    posTag1.addToIndexes();
    POSTag posTag2 = new POSTag(jCas, 0, 8);
    posTag2.setValue("pos2");
    posTag2.addToIndexes();
    FSArray token1Poses = new FSArray(jCas, 2);
    token1Poses.copyFromArray(new FeatureStructure[] { posTag1, posTag2 }, 0, 0, 2);
    token1.setPosTag(token1Poses);
    Token token2 = new Token(jCas, 9, 11);
    token2.addToIndexes();
    POSTag posTag3 = new POSTag(jCas);
    posTag3.setValue("pos3");
    posTag3.addToIndexes();
    FSArray token2Poses = new FSArray(jCas, 1);
    token2Poses.copyFromArray(new FeatureStructure[] { posTag3 }, 0, 0, 1);
    token2.setPosTag(token2Poses);
    Token token3 = new Token(jCas, 12, 14);
    token3.addToIndexes();
    DependencyRelation depRel1 = new DependencyRelation(jCas);
    depRel1.setHead(token1);
    depRel1.setProjective(true);
    depRel1.setLabel("deprel token1");
    depRel1.addToIndexes();
    DependencyRelation depRel2 = new DependencyRelation(jCas);
    depRel2.setHead(token2);
    depRel2.setProjective(true);
    depRel2.setLabel("deprel token2");
    depRel2.addToIndexes();
    FSArray depRels = new FSArray(jCas, 2);
    depRels.copyFromArray(new FeatureStructure[] { depRel1, depRel2 }, 0, 0, 2);
    token3.setDepRel(depRels);
}
