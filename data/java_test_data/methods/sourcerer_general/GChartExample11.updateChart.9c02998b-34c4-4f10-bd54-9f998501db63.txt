private void updateChart() {
    minPrice = INITIAL_PRICE;
    maxPrice = INITIAL_PRICE;
    prices[0] = INITIAL_PRICE;
    for (int i = 1; i < N_FORCASTED_MONTHS; i++) {
        prices[i] = prices[i - 1] * (1 + MAX_MONTHLY_RELATIVE_CHANGE * (2 * GChartTestApp.rnd() - 1));
        minPrice = Math.min(minPrice, prices[i]);
        maxPrice = Math.max(maxPrice, prices[i]);
    }
    // update pie slice sizes to reflect new min and max
    getCurve(0).getSymbol().setPieSliceSize(minPrice / (minPrice + maxPrice));
    getCurve(0).getSymbol().setHovertextTemplate(GChart.formatAsHovertext("Minimum price (per barrel): " + getYAxis().formatAsTickLabel(minPrice)));
    getCurve(1).getSymbol().setPieSliceSize(maxPrice / (minPrice + maxPrice));
    getCurve(1).getSymbol().setHovertextTemplate(GChart.formatAsHovertext("Maximum price (per barrel): " + getYAxis().formatAsTickLabel(maxPrice)));
    // update backward-price-difference and price curves
    getCurve(2).clearPoints();
    getCurve(3).clearPoints();
    for (int i = 0; i < N_FORCASTED_MONTHS; i++) {
        getCurve(2).addPoint(i, (i == 0) ? 0 : (prices[i] - prices[i - 1]));
        getCurve(3).addPoint(i, prices[i]);
        if (prices[i] != minPrice && prices[i] != maxPrice) {
            // no min/max;
            // no label
            getCurve(3).getPoint().setAnnotationText(null);
        } else {
            // label point to indicate it's at a min or max price
            getCurve(3).getPoint().setAnnotationFontSize(10);
            getCurve(3).getPoint().setAnnotationFontWeight("bold");
            if (prices[i] == minPrice) {
                getCurve(3).getPoint().setAnnotationLocation(AnnotationLocation.SOUTH);
                getCurve(3).getPoint().setAnnotationText("min");
                getCurve(3).getPoint().setAnnotationFontColor("blue");
            } else {
                getCurve(3).getPoint().setAnnotationLocation(AnnotationLocation.NORTH);
                getCurve(3).getPoint().setAnnotationText("max");
                getCurve(3).getPoint().setAnnotationFontColor("blue");
            }
        }
    }
    if (firstTime)
        firstTime = false;
    else
        update();
}
