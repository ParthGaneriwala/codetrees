@Test
public void parse() throws ParseException {
    // Test date formats
    assertEquals(makeDate(1, 1, 2007), getBegin("2007"));
    assertEquals(makeDate(3, 1, 2007), getBegin("2007, March"));
    assertEquals(makeDate(3, 1, 2007), getBegin("2007,   March"));
    assertEquals(makeDate(3, 1, 2007), getBegin("March, 2007"));
    assertEquals(makeDate(3, 1, 2007), getBegin("March 07"));
    assertEquals(makeDate(5, 22, 2007), getBegin("May 22, 2007"));
    assertEquals(makeDate(5, 22, 2007), getBegin("May 22,2007"));
    assertEquals(makeDate(5, 22, 2007), getBegin("May 22, 07"));
    assertEquals(makeDate(12, 22, 2007), getBegin("Dec 22, 07"));
    assertEquals(makeDate(12, 22, 2007), getBegin("December 22, 07"));
    assertEquals(makeDate(5, 22, 2007), getBegin("2007, 22 May"));
    assertEquals(makeDate(5, 22, 2007), getBegin("2007,22 May"));
    assertEquals(makeDate(5, 22, 2007), getBegin("May 22, 07"));
    assertEquals(makeDate(5, 22, 2007), getBegin("5/22/07"));
    // test date ranges
    // full year fanciness
    assertEquivalent(makeDayRange(1, 1, 1941, 1, 1, 1942), parseTimeRange("1941"));
    assertEquivalent(makeDayRange(12, 7, 1941, 12, 8, 1941), parseTimeRange("December 7, 1941"));
    assertEquivalent(makeDayRange(12, 1, 1941, 1, 1, 1942), parseTimeRange("December, 1941"));
    assertEquivalent(makeDayRange(12, 7, 1941, 12, 8, 1941), parseTimeRange("Dec 7, 1941"));
    assertEquivalent(makeDayRange(12, 31, 1941, 1, 1, 1942), parseTimeRange("Dec 31, 1941"));
    assertEquivalent(makeDayRange(12, 7, 1941, 10, 0, 0, 12, 7, 1941, 10, 1, 0), parseTimeRange("Dec 7,1941,10:00AM"));
    assertEquivalent(makeDayRange(12, 7, 1941, 10, 0, 0, 12, 7, 1941, 10, 1, 0), parseTimeRange("Dec 7, 1941 10:00AM"));
    assertEquivalent(makeDayRange(12, 7, 1941, 10, 0, 0, 12, 7, 1941, 11, 0, 0), parseTimeRange("Dec 7, 1941, 10AM"));
    assertEquivalent(makeDayRange(12, 7, 1941, 10, 1, 0, 12, 7, 1941, 10, 2, 0), parseTimeRange("Dec 7, 1941, 10:01AM"));
    assertEquivalent(makeDayRange(12, 7, 1941, 10, 1, 1, 12, 7, 1941, 10, 1, 2), parseTimeRange("Dec 7, 1941, 10:01:01AM"));
    // Ranges
    assertEquivalent(makeDayRange(1, 1, 1941, 1, 1, 1943), parseTimeRange("1941 - 1942"));
    assertEquivalent(makeDayRange(12, 7, 1941, 12, 11, 1941), parseTimeRange("Dec 7, 1941 - Dec 10, 1941"));
    assertEquivalent(makeDayRange(12, 7, 1941, 12, 8, 1942), parseTimeRange("12/7/1941 - 12/7/1942"));
    assertEquivalent(makeDayRange(12, 7, 1941, 12, 8, 1942), parseTimeRange("Dec 7, 1941 - 12/7/1942"));
    assertEquivalent(makeDayRange(12, 7, 1941, 10, 0, 0, 12, 7, 1941, 12, 0, 0), parseTimeRange("Dec 7, 1941 10am - Dec 7, 1941 11am"));
    assertEquivalent(makeDayRange(12, 7, 1941, 10, 0, 0, 12, 7, 1941, 10, 2, 0), parseTimeRange("Dec 7, 1941 10:00am - Dec 7, 1941 10:01am"));
    assertEquivalent(makeDayRange(12, 7, 1941, 10, 0, 0, 12, 7, 1941, 10, 0, 2), parseTimeRange("Dec 7, 1941 10:00:00am - Dec 7, 1941 10:00:01am"));
}
