public boolean validationPasses() {
    Float aux = 0.0f;
    Integer aux2 = 0;
    Float aux3 = 0.0f;
    boolean vp = true;
    if (getQuantity() == null || getQuantity().matches("")) {
        errorMessage("Required field, quantity.");
        vp = false;
    }
    if (getUnitPrice() == null || getUnitPrice().matches("")) {
        errorMessage("Required field, unit price.");
        vp = false;
    }
    if (getSellPrice() == null || getSellPrice().matches("")) {
        errorMessage("Required field, sell price.");
        vp = false;
    }
    try {
        if (getUnitPrice() != null && !getUnitPrice().matches("")) {
            aux = Float.parseFloat(getUnitPrice());
        }
        if (aux < 0) {
            errorMessage("Negative number[unit price].");
            vp = false;
        }
    } catch (Exception e) {
        errorMessage("Incorrect number format[unit price].");
        vp = false;
    }
    try {
        if (getQuantity() != null && !getQuantity().matches("")) {
            aux2 = Integer.parseInt(getQuantity());
        }
        if (aux2 < 0) {
            errorMessage("Negative number[quantity].");
            vp = false;
        }
    } catch (Exception e) {
        errorMessage("Incorrect number format[quantity].");
        vp = false;
    }
    return vp;
}
