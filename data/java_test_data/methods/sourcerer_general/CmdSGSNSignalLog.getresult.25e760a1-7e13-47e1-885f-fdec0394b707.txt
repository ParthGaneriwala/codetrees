public String getresult(String ss) {
    long now = System.currentTimeMillis();
    List<ErrorApnsCdr> cdrs = new ArrayList<ErrorApnsCdr>();
    // 实际处理的个数
    int lastCount = 0;
    try {
        // br = new BufferedReader(new java.io.InputStreamReader(new
        // FileInputStream(file.getDestfile())));
        ErrorApnsCdr cdr = null;
        int i = 0;
        String[] lines = ss.split("\n");
        int handledLines = 0;
        int jjj = 0;
        for (String line : lines) {
            // while ((line = br.readLine()) != null) {
            System.out.println((jjj++) + "=>line===============>" + line);
            if (line == null || line.equals(""))
                continue;
            try {
                if (line.equals(BASE_STR)) {
                    if (i >= handledLines) {
                        // if(cdr!=null)
                        lastCount++;
                        cdr = new ErrorApnsCdr();
                        cdr.setSgsnid("sgsnid");
                        cdrs.add(cdr);
                    }
                    i++;
                }
                int idx = line.indexOf(":");
                if (idx == -1)
                    continue;
                if (cdr != null) {
                    if (line.startsWith("Time")) {
                        String time = line.substring(idx + 2).trim();
                        cdr.setOpentime((int) (df.parse(time).getTime() / 1000));
                    } else if (line.startsWith("Node")) {
                    } else if (line.startsWith("IMSI")) {
                        cdr.setImsi(line.substring(idx + 2).trim());
                    } else if (line.startsWith("MSISDN")) {
                        cdr.setMsisdn(line.substring(idx + 2).trim());
                    } else if (line.startsWith("SM Cause")) {
                        int idx1 = line.indexOf("(");
                        int idx2 = line.indexOf(")");
                        String errorcode = line.substring(idx1 + 2, idx2).trim();
                        cdr.setErrorcode(errorcode);
                    } else if (line.startsWith("Details")) {
                    } else if (line.startsWith("PDP Addr")) {
                        cdr.setPdpaddr(line.substring(idx + 2).trim());
                    } else if (line.startsWith("APN Used")) {
                        cdr.setUsedapn(line.substring(idx + 2).trim());
                    } else if (line.startsWith("NSEI")) {
                        cdr.setNsei(line.substring(idx + 2).trim());
                    } else if (line.startsWith("GGSN Addr")) {
                        cdr.setGgsnaddr(line.substring(idx + 2).trim());
                    } else if (line.startsWith("APN Req")) {
                        cdr.setReqapnni(line.substring(idx + 2).trim());
                    } else if (line.startsWith("APN Req")) {
                        cdr.setReqapnni(line.substring(idx + 2).trim());
                    } else if (line.startsWith("APN Sub")) {
                        if (line.length() < idx + 2)
                            cdr.setSubapnni("");
                        else
                            cdr.setSubapnni(line.substring(idx + 2).trim());
                    } else if (line.startsWith("APN") && !line.startsWith("APN Req") && !line.startsWith("APN Sub")) {
                        if (line.length() < idx + 2)
                            cdr.setSubapnni("");
                        else
                            cdr.setReqapnni(line.substring(idx + 2).trim());
                    }
                }
            } catch (Exception e) {
                System.out.println(":第" + i + "个区块解析有误");
                e.printStackTrace();
            }
        }
        System.out.println("解析时间为:" + (System.currentTimeMillis() - now) + "总共:" + i + "区块,实际处理" + lastCount + "块," + cdrs.size());
    } catch (Exception e) {
        System.out.println("解析文件有误");
        e.printStackTrace();
    } finally {
    }
    Map<String, Integer> smscause = new HashMap<String, Integer>();
    Map<String, Integer> errormobiles = new HashMap<String, Integer>();
    Map<String, Integer> errorapns = new HashMap<String, Integer>();
    for (int i = 0; i < cdrs.size(); i++) {
        ErrorApnsCdr cdr = (ErrorApnsCdr) cdrs.get(i);
        // 100条记录中，33号错误90次，38号错误9次，27号错误1次。
        // * 15002399016错误11次，错误码33
        // * Uninet 错误10次，错误码33
        String code = cdr.getErrorcode();
        String msisdn = cdr.getMsisdn();
        String apnreq = cdr.getReqapnni();
        if (code == null || msisdn == null || apnreq == null)
            continue;
        if (smscause.containsKey(code)) {
            int s = smscause.get(code);
            smscause.put(code, s + 1);
        } else
            smscause.put(code, 1);
        if (errormobiles.containsKey(msisdn + "," + code)) {
            int s = errormobiles.get(msisdn + "," + code);
            errormobiles.put(msisdn + "," + code, s + 1);
        } else
            errormobiles.put(msisdn + "," + code, 1);
        if (errorapns.containsKey(apnreq + "," + code)) {
            int s = errorapns.get(apnreq + "," + code);
            errorapns.put(apnreq + "," + code, s + 1);
        } else
            errorapns.put(apnreq + "," + code, 1);
    }
    String errorstr = "";
    for (Entry<String, Integer> e : smscause.entrySet()) {
        System.out.println("错误码:" + e.getKey() + "--->" + e.getValue());
        errorstr += e.getKey() + "号错误" + e.getValue() + "次,";
    }
    String numerror = "";
    for (Entry<String, Integer> e : errormobiles.entrySet()) {
        System.out.println("手机：" + e.getKey() + "--->" + e.getValue());
        String key = e.getKey();
        if (errormobiles.get(key) >= 10) {
            String[] sss = key.split(",");
            errorstr += "手机:" + sss[0] + "错误" + e.getValue() + "次，错误码:" + sss[1];
        }
    }
    String apnerror = "";
    for (Entry<String, Integer> e : errorapns.entrySet()) {
        System.out.println("APN：" + e.getKey() + "--->" + e.getValue());
        String key = e.getKey();
        if (errorapns.get(key) >= 10) {
            String[] sss = key.split(",");
            if (sss[0].equals(""))
                sss[0] = "空";
            apnerror += "APN:" + sss[0] + "错误" + e.getValue() + "次，错误码:" + sss[1];
        }
    }
    String nowstr = DateUtil.getSimpleDateTime(new Date());
    String result = nowstr + "查询 \r\n" + lastCount + "条记录中 " + errorstr + "\r\n" + numerror + "\r\n" + apnerror;
    System.out.println("最后结果:::" + result);
    return result;
}
