Table SYSTEM_SESSIONINFO() throws HsqlException {
    Table t = sysTables[SYSTEM_SESSIONINFO];
    if (t == null) {
        t = createBlankTable(sysTableHsqlNames[SYSTEM_SESSIONINFO]);
        // not null
        addColumn(t, "KEY", Types.VARCHAR, false);
        // not null
        addColumn(t, "VALUE", Types.VARCHAR, false);
        t.createPrimaryKey(null);
        return t;
    }
    Object[] row;
    row = t.getEmptyRowData();
    row[0] = "SESSION_ID";
    row[1] = String.valueOf(session.getId());
    t.insertSys(row);
    row = t.getEmptyRowData();
    row[0] = "AUTOCOMMIT";
    row[1] = session.isAutoCommit() ? "TRUE" : "FALSE";
    t.insertSys(row);
    row = t.getEmptyRowData();
    row[0] = "USER";
    row[1] = session.getUsername();
    t.insertSys(row);
    row = t.getEmptyRowData();
    row[0] = "SESSION_READONLY";
    row[1] = session.isReadOnly() ? "TRUE" : "FALSE";
    t.insertSys(row);
    row = t.getEmptyRowData();
    row[0] = "DATABASE_READONLY";
    row[1] = database.databaseReadOnly ? "TRUE" : "FALSE";
    t.insertSys(row);
    // fredt - value set by SET MAXROWS in SQL, not Statement.setMaxRows()
    row = t.getEmptyRowData();
    row[0] = "MAXROWS";
    row[1] = String.valueOf(session.getSQLMaxRows());
    t.insertSys(row);
    row = t.getEmptyRowData();
    row[0] = "DATABASE";
    row[1] = database.getURI();
    t.insertSys(row);
    row = t.getEmptyRowData();
    row[0] = "IDENTITY";
    row[1] = String.valueOf(session.getLastIdentity());
    t.insertSys(row);
    row = t.getEmptyRowData();
    row[0] = "SCHEMA";
    row[1] = String.valueOf(session.getSchemaName(null));
    t.insertSys(row);
    t.setDataReadOnly(true);
    return t;
}
