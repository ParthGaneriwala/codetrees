// </editor-fold>//GEN-END:initComponents
private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
    // GEN-FIRST:event_jButton1ActionPerformed
    // TODO add your handling code here:
    // Cria a tabela de simbolos
    TabelaSimbolos tabelasimbolos = new TabelaSimbolos();
    // define o tipo de entrada;
    jEditorPane1.setContentType("text/html");
    // cria o núcleo do compilador
    Compilador_nucleo compila = new Compilador_nucleo();
    // aloca os valores nas tabelas hash
    compila.funcoes.HashPut();
    // Guarda o valor da string
    String codigo_in = textArea1.getText() + " " + "\n";
    // insere o texto para ser compilado
    String codigo_out = compila.Compilator(codigo_in, tabelasimbolos);
    // coloca no formato HTML
    String new_codigo = "<html>" + codigo_out + "</html>";
    // Imprime o novo código COLORIDO
    jEditorPane1.setText(new_codigo);
    // seleciona a saida da aba para 1
    jTabbedPane1.setSelectedIndex(1);
    // coloca a aba para tokens
    jTabbedPane2.setSelectedIndex(0);
    // imprime a lista de tokens
    // cria a variavel
    String tokensOut = "", errosOut = "";
    // atribui a impressão na string
    for (int i = 0; i < tabelasimbolos.sizeTabela(); i++) tokensOut += tabelasimbolos.printTabela(i) + "\n";
    // atribui a impressão na string
    for (int i = 0; i < compila.savErros.size(); i++) errosOut += compila.savErros.get(i) + "\n";
    // exibe no painel os tokens
    // jTextArea2.setText(tokensOut);
    // exibe no painel os erros
    // jTextArea3.setText(errosOut);
    CodigoFonte sintatico = new CodigoFonte();
    boolean getSintatico = sintatico.Compilator(tabelasimbolos);
    System.out.println(" getSintatico " + getSintatico);
    System.out.println("-----------------------------");
    if (compila.savErros.size() > 0 || !getSintatico) {
        jTabbedPane2.setSelectedIndex(1);
        // retorna a mensagem de ERRO
        JOptionPane.showMessageDialog(null, "       O programa contém Erros !", "Compilador - GT3", JOptionPane.ERROR_MESSAGE);
        // exibe no painel os tokens
        jTextArea2.setText(tokensOut + "\n * O programa contém Erros * !");
        // exibe no painel os erros
        jTextArea3.setText(errosOut);
    } else {
        jTabbedPane2.setSelectedIndex(0);
        // retorna a mensagem de sucesso
        // JOptionPane.showMessageDialog( null, "        Programa Compilado com Sucesso !", "Compilador - GT3", JOptionPane.INFORMATION_MESSAGE);
        // exibe no painel os tokens
        jTextArea2.setText(tokensOut + "\n Programa Compilado com Sucesso !");
        // exibe no painel os erros
        jTextArea3.setText(errosOut);
    }
    if (TabelaErros.getInstance().getTabelaErros().size() > 0) {
        String a = "";
        for (int i = 0; i < TabelaErros.getInstance().getTabelaErros().size(); i++) {
            a = a + " " + TabelaErros.getInstance().getTabelaErros().get(i).getDescricaoErro() + "\n";
        }
        jTextArea1.setText(a);
        a = "";
        System.out.println("IMPRIMINDO TABELA");
        TabelaErros.getInstance().imprimeTabela();
        System.out.println("IMPRIMINDO TABELA");
        for (int i = 0; i < TabelaErros.getInstance().getTabelaErros().size(); i++) TabelaErros.getInstance().getTabelaErros().remove(i);
    }
}
