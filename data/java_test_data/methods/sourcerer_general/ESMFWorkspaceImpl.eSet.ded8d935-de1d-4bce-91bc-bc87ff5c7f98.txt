@SuppressWarnings("unchecked")
@Override
public void eSet(int featureID, Object newValue) {
    switch(featureID) {
        case ESMFPackage.ESMF_WORKSPACE__COMPONENT:
            getComponent().clear();
            getComponent().addAll((Collection<? extends ESMFComponent>) newValue);
            return;
        case ESMFPackage.ESMF_WORKSPACE__COMPOSITION:
            getComposition().clear();
            getComposition().addAll((Collection<? extends ESMFComposition>) newValue);
            return;
        case ESMFPackage.ESMF_WORKSPACE__SCHEDULE:
            getSchedule().clear();
            getSchedule().addAll((Collection<? extends ESMFSchedule>) newValue);
            return;
        case ESMFPackage.ESMF_WORKSPACE__CALENDAR:
            getCalendar().clear();
            getCalendar().addAll((Collection<? extends ESMFCalendar>) newValue);
            return;
        case ESMFPackage.ESMF_WORKSPACE__STATE_ITEM:
            getStateItem().clear();
            getStateItem().addAll((Collection<? extends ESMFStateItem>) newValue);
            return;
        case ESMFPackage.ESMF_WORKSPACE__DIST_GRID:
            getDistGrid().clear();
            getDistGrid().addAll((Collection<? extends ESMFDistGrid>) newValue);
            return;
        case ESMFPackage.ESMF_WORKSPACE__VIRTUAL_MACHINE:
            getVirtualMachine().clear();
            getVirtualMachine().addAll((Collection<? extends ESMFVirtualMachine>) newValue);
            return;
        case ESMFPackage.ESMF_WORKSPACE__DEPLOYMENT:
            getDeployment().clear();
            getDeployment().addAll((Collection<? extends ESMFDeployment>) newValue);
            return;
        case ESMFPackage.ESMF_WORKSPACE__PERSISTENT_EXECUTION_THREAD:
            getPersistentExecutionThread().clear();
            getPersistentExecutionThread().addAll((Collection<? extends ESMFPersistentExecutionThread>) newValue);
            return;
        case ESMFPackage.ESMF_WORKSPACE__DE_LAYOUT:
            getDeLayout().clear();
            getDeLayout().addAll((Collection<? extends ESMFDELayout>) newValue);
            return;
        case ESMFPackage.ESMF_WORKSPACE__GRID:
            getGrid().clear();
            getGrid().addAll((Collection<? extends ESMFGrid>) newValue);
            return;
    }
    super.eSet(featureID, newValue);
}
