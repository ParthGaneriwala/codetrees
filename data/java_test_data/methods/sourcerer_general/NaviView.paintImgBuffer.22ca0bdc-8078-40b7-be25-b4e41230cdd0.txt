private void paintImgBuffer(int top, int bottom) {
    int myHeight = imgBuffer.getHeight();
    View view = editorPane.getUI().getRootView(editorPane);
    int prefHeight = (int) view.getPreferredSpan(View.Y_AXIS);
    Color background = MoeSyntaxDocument.getBackgroundColor();
    Graphics2D g = imgBuffer.createGraphics();
    if (prefHeight > myHeight) {
        // scale!
        int width = (imgBuffer.getWidth() - frw * 2) * prefHeight / myHeight;
        int ytop = top * prefHeight / myHeight;
        int ybtm = (bottom * prefHeight + myHeight - 1) / myHeight;
        int height = ybtm - ytop;
        if (height > 800) {
            height = 800;
            ybtm = ytop + 800;
            int newbottom = top + (height * myHeight / prefHeight);
            if (newbottom <= top) {
                newbottom = top + 1;
                ybtm = (newbottom * prefHeight + myHeight - 1) / myHeight;
                height = ybtm - ytop;
            }
            enqueueRepaint(newbottom, bottom);
            bottom = newbottom;
        }
        if (height < 1) {
            height = 1;
            ybtm = ytop + 1;
            bottom = top + (height * myHeight / prefHeight);
        }
        // Create a buffered image to use
        BufferedImage bimage = ((Graphics2D) g).getDeviceConfiguration().createCompatibleImage(width, height);
        Map<Object, Object> hints = new HashMap<Object, Object>();
        hints.put(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        ((Graphics2D) g).addRenderingHints(hints);
        Graphics2D bg = bimage.createGraphics();
        bg.setColor(background);
        bg.fillRect(0, 0, width, height);
        Rectangle shape = new Rectangle(frw, 0, width, prefHeight);
        bg.setClip(0, 0, width, height);
        bg.translate(-frw, -ytop);
        view.paint(bg, shape);
        g.drawImage(bimage, frw, top, imgBuffer.getWidth() - frw, bottom, 0, 0, width, height, null);
        bg.dispose();
    } else {
        // Scaling not necessary
        int w = imgBuffer.getWidth() - frw * 2;
        int h = myHeight;
        Rectangle rb = new Rectangle();
        rb.x = frw;
        rb.y = Math.max(frw, top);
        rb.width = imgBuffer.getWidth() - frw * 2;
        rb.height = bottom - top;
        g.setClip(rb);
        g.setColor(background);
        g.fillRect(rb.x, rb.y, rb.width, rb.height);
        // Draw the code on the buffer image:
        Rectangle bufferBounds = new Rectangle(frw, frw, w, h);
        view.paint(g, bufferBounds);
    }
    g.dispose();
}
