@Test
@DirtiesContext
public void testBlogRead() {
    // Setup CMS content
    int id = setupBlogPage();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    cmsService.activateCms();
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Set blog service
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    CrudRootServiceHelper<DbBlogEntry> blogCrud = contentService.getBlogEntryCrudRootServiceHelper();
    DbBlogEntry dbBlogEntry1 = blogCrud.createDbChild();
    dbBlogEntry1.setHtml("Blog 1");
    dbBlogEntry1.setName("News 1");
    blogCrud.updateDbChild(dbBlogEntry1);
    DbBlogEntry dbBlogEntry2 = blogCrud.createDbChild();
    dbBlogEntry2.setHtml("Blog 2");
    dbBlogEntry2.setName("News 2");
    blogCrud.updateDbChild(dbBlogEntry2);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Activate
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    DbPage cachePage = cmsService.getPage(id);
    DbContentList cacheContentList = (DbContentList) cachePage.getContent();
    Assert.assertEquals("contentService", cacheContentList.getSpringBeanName());
    Assert.assertEquals("blogEntryCrudRootServiceHelper", cacheContentList.getContentProviderGetter());
    Assert.assertEquals(5, (int) cacheContentList.getRowsPerPage());
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Verify
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    tester.startPage(CmsPage.class);
    tester.assertRenderedPage(CmsPage.class);
    tester.assertLabel("form:content:table:rows:1:cells:1:cell:container:1", "News 2");
    tester.assertLabel("form:content:table:rows:1:cells:1:cell:container:2", WebCommon.formatDateTime(new Date(dbBlogEntry2.getTimeStamp())));
    tester.assertLabel("form:content:table:rows:1:cells:1:cell:container:3", "Blog 2");
    tester.assertLabel("form:content:table:rows:2:cells:1:cell:container:1", "News 1");
    tester.assertLabel("form:content:table:rows:2:cells:1:cell:container:2", WebCommon.formatDateTime(new Date(dbBlogEntry1.getTimeStamp())));
    tester.assertLabel("form:content:table:rows:2:cells:1:cell:container:3", "Blog 1");
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
