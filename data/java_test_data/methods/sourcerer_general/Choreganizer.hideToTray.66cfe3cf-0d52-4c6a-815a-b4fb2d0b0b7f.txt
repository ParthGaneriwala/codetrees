public void hideToTray() {
    if (SystemTray.isSupported()) {
        systemTray = SystemTray.getSystemTray();
        ImageIcon icon = null;
        try {
            URL iconURL = ClassLoader.getSystemResource("tray.png");
            icon = new ImageIcon(iconURL);
        } catch (Exception e) {
            System.err.println("Choreganizer.hideToTray()");
            System.err.println(e);
        }
        ActionListener exitListener = new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                exit();
            }
        };
        ActionListener showListener = new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                frame.setVisible(true);
                // Hopefully fixes reports of glasspane being visible, and capturing
                // mouse events when they unhide the program.
                frame.getGlassPane().setVisible(false);
                for (TrayIcon ti : systemTray.getTrayIcons()) {
                    systemTray.remove(ti);
                }
                trayPopup = null;
                trayIcon = null;
                systemTray = null;
            }
        };
        trayPopup = new PopupMenu();
        MenuItem exitItem = new MenuItem("Exit");
        MenuItem showItem = new MenuItem("Show");
        exitItem.addActionListener(exitListener);
        showItem.addActionListener(showListener);
        trayPopup.add(showItem);
        trayPopup.add(exitItem);
        trayIcon = new TrayIcon(icon.getImage(), "Choreganizer", trayPopup);
        trayIcon.setImageAutoSize(true);
        icon = null;
        try {
            systemTray.add(trayIcon);
        } catch (AWTException awte) {
            System.err.println(awte);
        }
        frame.setVisible(false);
        frame.dispose();
        System.gc();
    } else {
        System.err.println("System tray is currently not supported.");
    }
}
