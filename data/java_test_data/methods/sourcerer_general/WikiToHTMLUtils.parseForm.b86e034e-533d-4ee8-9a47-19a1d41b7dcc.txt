protected static String parseForm(WikiToHTMLContext context, Connection db, BufferedReader in, String line, StringBuffer sb) throws Exception {
    if (line == null) {
        return line;
    }
    CustomForm form = retrieveForm(in, line);
    context.foundForm(form);
    if (context.canAppend()) {
        // Output the form based on editmode
        if (context.isEditMode()) {
            LOG.debug("parseForm: editMode");
            // Construct an HTML form for filling out
            int groupCount = 0;
            for (CustomFormGroup group : form) {
                ++groupCount;
                if (groupCount > 1) {
                    sb.append("<br />");
                }
                sb.append("<table cellpadding=\"4\" cellspacing=\"0\" width=\"100%\" class=\"pagedList\">");
                if (StringUtils.hasText(group.getName())) {
                    sb.append("<tr><th colspan=\"2\">").append(StringUtils.toHtml(group.getName())).append("</th></tr>");
                }
                for (CustomFormField field : group) {
                    // Determine if there is a property supplied for this field's value
                    if (context.getFormPropertyMap() != null) {
                        Map<String, String> propertyMap = context.getFormPropertyMap();
                        LOG.debug("Looking up propertyMap for name: " + field.getName());
                        if (propertyMap.containsKey(field.getName())) {
                            String thisValue = propertyMap.get(field.getName());
                            if (StringUtils.hasText(thisValue)) {
                                LOG.debug("  Setting value: " + thisValue);
                                field.setValue(thisValue);
                            }
                        }
                    }
                    sb.append("<tr class=\"containerBody\">" + "<td valign=\"top\" class=\"formLabel\">").append(StringUtils.toHtml(field.getLabel())).append("</td>" + "<td valign=\"top\">").append(toHtmlFormField(field, context));
                    if (StringUtils.hasText(field.getAdditionalText())) {
                        sb.append("&nbsp;").append(StringUtils.toHtml(field.getAdditionalText()));
                    }
                    sb.append("</td></tr>");
                }
                sb.append("</table>");
            }
            sb.append(CRLF);
        } else {
            LOG.debug("parseForm: displayMode");
            // Construct HTML output for viewing the form data
            LOG.debug("constructing html output...");
            boolean dataOutput = false;
            sb.append("<div class=\"infobox\">");
            sb.append("<table class=\"pagedList\">");
            for (CustomFormGroup group : form) {
                LOG.debug(" group...");
                if (group.getDisplay() && StringUtils.hasText(group.getName())) {
                    if (!dataOutput) {
                        dataOutput = true;
                    }
                    sb.append("<tr><th colspan=\"2\">").append(StringUtils.toHtml(group.getName())).append("</th></tr>");
                }
                for (CustomFormField field : group) {
                    LOG.debug("  field...");
                    if (field.hasValue()) {
                        if (!dataOutput) {
                            dataOutput = true;
                        }
                        sb.append("<tr class=\"containerBody\">");
                        if (field.getLabelDisplay()) {
                            LOG.debug("   output w/label");
                            sb.append("<td class=\"formLabel\">").append(StringUtils.toHtml(field.getLabel())).append("</td>");
                            sb.append("<td>");
                            sb.append(toHtml(field, context.getWiki(), context.getServerUrl()));
                            sb.append("</td>");
                        } else {
                            LOG.debug("   output");
                            sb.append("<td colspan=\"2\">");
                            sb.append("<center>");
                            sb.append(toHtml(field, context.getWiki(), context.getServerUrl()));
                            sb.append("</center>");
                            sb.append("</td>");
                        }
                        sb.append("</tr>");
                    }
                }
            }
            // Show the group names to the user if there are no fields to show
            if (!dataOutput) {
                LOG.debug("!dataOutput");
                sb.append("<tr><td colspan=\"2\" align=\"center\">");
                int count = 0;
                for (CustomFormGroup group : form) {
                    ++count;
                    if (count > 1) {
                        sb.append("<br />");
                    }
                    sb.append(StringUtils.toHtml(group.getName()));
                }
                sb.append("</td></tr>");
            }
            LOG.debug("Check permissions");
            if (context.getProject() != null && hasUserProjectAccess(db, context.getUserId(), context.getProject().getId(), "wiki", "add")) {
                sb.append("<tr><td colspan=\"2\" align=\"center\">");
                sb.append("<a href=\"" + context.getServerUrl() + "/modify/" + context.getProject().getUniqueId() + "/wiki" + (StringUtils.hasText(context.getWiki().getSubject()) ? "/" + context.getWiki().getSubjectLink() : "") + "?form=1\">Fill out this form</a>");
                sb.append("</td></tr>");
            }
            sb.append("</table>");
            sb.append("</div>");
        }
    }
    LOG.debug("finished with form.");
    context.foundFormEnd();
    return null;
}
