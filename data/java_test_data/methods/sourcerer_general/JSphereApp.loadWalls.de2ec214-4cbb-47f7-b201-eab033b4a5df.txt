public TransformGroup[] loadWalls() {
    int BW = 0, FW = 1, LW = 2, RW = 3, TW = 4;
    TransformGroup[] WallGrp = new TransformGroup[5];
    Box BackWall = new Box(BOWLSIZE, BOWLSIZE, .1f, Box.GENERATE_NORMALS | Box.GENERATE_TEXTURE_COORDS, getWallApp(null));
    Box FloorWall = new Box(BOWLSIZE, .1f, BOWLSIZE, Box.GENERATE_NORMALS | Box.GENERATE_TEXTURE_COORDS, getWallApp(null));
    Box LeftWall = new Box(.1f, BOWLSIZE, BOWLSIZE, Box.GENERATE_NORMALS | Box.GENERATE_TEXTURE_COORDS, getWallApp(null));
    Box RightWall = new Box(.1f, BOWLSIZE, BOWLSIZE, Box.GENERATE_NORMALS | Box.GENERATE_TEXTURE_COORDS, getWallApp(null));
    Box TopWall = new Box(BOWLSIZE, .1f, BOWLSIZE, Box.GENERATE_NORMALS | Box.GENERATE_TEXTURE_COORDS, getWallApp(null));
    for (int w = 0; w < WallGrp.length; w++) WallGrp[w] = new TransformGroup();
    WallGrp[BW].addChild(BackWall);
    WallGrp[FW].addChild(FloorWall);
    WallGrp[LW].addChild(LeftWall);
    WallGrp[RW].addChild(RightWall);
    WallGrp[TW].addChild(TopWall);
    Transform3D WallTrans = new Transform3D();
    WallTrans.set(new Vector3d(0, 0, -BOWLSIZE));
    WallGrp[BW].setTransform(WallTrans);
    WallTrans.set(new Vector3d(0, -BOWLSIZE, 0));
    WallGrp[FW].setTransform(WallTrans);
    WallTrans.set(new Vector3d(-BOWLSIZE, 0, 0));
    WallGrp[LW].setTransform(WallTrans);
    WallTrans.set(new Vector3d(BOWLSIZE, 0, 0));
    WallGrp[RW].setTransform(WallTrans);
    WallTrans.set(new Vector3d(0, BOWLSIZE, 0));
    WallGrp[TW].setTransform(WallTrans);
    return WallGrp;
}
