public void deleteTripleAR(Triple t, IDBID graphID, Node reifNode, boolean isBatch, Hashtable batchedPreparedStatements) {
    boolean isReif = reifNode != null;
    String subj = t.getSubject().equals(Node.NULL) ? null : m_driver.nodeToRDBString(t.getSubject(), false);
    String pred = t.getPredicate().equals(Node.NULL) ? null : m_driver.nodeToRDBString(t.getPredicate(), false);
    String obj = t.getObject() == Node.ANY ? null : m_driver.nodeToRDBString(t.getObject(), false);
    // String gid = graphID.getID().toString();
    int gid = ((DBIDInt) graphID).getIntID();
    int argc = 1;
    String stmtStr;
    if ((subj == null) || (pred == null) || (obj == null)) {
        // used to think this was an exception. i guess it's not.
        return;
    }
    // get statement string
    PreparedStatement ps = null;
    stmtStr = isReif ? "deleteReified" : "deleteStatement";
    try {
        ps = getPreparedStatement(stmtStr, getTblName(), isBatch, batchedPreparedStatements);
    // ps.clearParameters();
    } catch (SQLException e1) {
        logger.debug("SQLException caught " + e1.getErrorCode(), e1);
        // Rethrow in case there is a recovery option
        throw new JenaException("Exception during database access", e1);
    }
    // now fill in parameters
    try {
        ps.setString(argc++, subj);
        ps.setString(argc++, pred);
        ps.setString(argc++, obj);
        ps.setInt(argc++, gid);
        if (isReif) {
            String stmtURI = m_driver.nodeToRDBString(reifNode, false);
            ps.setString(argc++, stmtURI);
            ps.setString(argc++, "T");
        }
    } catch (SQLException e1) {
        logger.debug("(in delete) SQLException caught ", e1);
        // Rethrow in case there is a recovery option
        throw new JenaException("Exception during database access", e1);
    }
    try {
        if (isBatch) {
            ps.addBatch();
        } else {
            ps.executeUpdate();
            m_sql.returnPreparedSQLStatement(ps);
        }
    } catch (SQLException e1) {
        logger.error("Exception executing delete: ", e1);
        // Rethrow in case there is a recovery option
        throw new JenaException("Exception during database access", e1);
    }
}
