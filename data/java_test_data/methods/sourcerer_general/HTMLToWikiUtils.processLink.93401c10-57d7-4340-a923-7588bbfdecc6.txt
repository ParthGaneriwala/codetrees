public static void processLink(StringBuffer sb, Element element, String appendToCRLF, String contextPath, int projectId) {
    // take the href and rip out the document section
    // output the text associated with the link
    String href = element.getAttribute("href").trim();
    // See if the href has content, it won't if it is an image link
    String value = element.getTextContent();
    // Create the markup
    // "<a class=\"wikiLink\" title=\"UI Configurability\" href=\"/team/ProjectManagement.do?command=ProjectCenter&amp;section=Wiki&amp;pid=177&amp;subject=UI+Configurability\">UI Configurability</a></p>\n" +
    sb.append("[[");
    if (isExternalLink(href, contextPath)) {
        // [[http://www.concursive.com Concursive]]
        sb.append(href);
        if (StringUtils.hasText(value) && !href.equals(value)) {
            // The link has a name
            sb.append(" ").append(StringUtils.fromHtmlValue(value.trim()));
        }
    } else {
        URLControllerBean url = new URLControllerBean(href, contextPath);
        if ("wiki".equals(url.getDomainObject()) && (url.getProjectId() == projectId || url.getProjectId() == -1)) {
            String subject = url.getObjectValue();
            // The incoming link will have a + for a space
            subject = StringUtils.replace(subject, "+", " ");
            // The incoming link will be url encoded
            subject = StringUtils.jsUnEscape(subject);
            sb.append(subject);
            // Base the display on the content of the 'a' tag
            if (StringUtils.hasText(value) && !subject.equals(StringUtils.fromHtmlValue(value))) {
                sb.append("|").append(StringUtils.fromHtmlValue(value));
            }
        } else if (!url.hasDomainObject()) {
            // "[[|9999999:project|project unique id|project title]]"
            sb.append("|");
            sb.append(url.getProjectId());
            sb.append(":profile");
            sb.append("|");
            sb.append(url.getProjectTitle());
            if (StringUtils.hasText(value)) {
                sb.append("|");
                sb.append(StringUtils.fromHtmlValue(value));
            }
        } else {
            // "[[|9999999:issue|200|Some issue]]"
            sb.append("|");
            sb.append(url.getProjectId());
            sb.append(":").append(url.getDomainObject());
            sb.append("|");
            String subject = url.getObjectValue();
            // The incoming link will have a + for a space
            subject = StringUtils.replace(subject, "+", " ");
            // The incoming link will be url encoded
            subject = StringUtils.jsUnEscape(subject);
            sb.append(subject);
            if (StringUtils.hasText(value)) {
                sb.append("|");
                sb.append(StringUtils.fromHtmlValue(value));
            }
        }
    }
    sb.append("]]");
}
