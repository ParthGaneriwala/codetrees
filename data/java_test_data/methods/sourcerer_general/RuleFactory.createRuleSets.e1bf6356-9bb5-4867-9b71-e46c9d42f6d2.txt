public void createRuleSets(File[] files) {
    try {
        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
        DocumentBuilder db = dbf.newDocumentBuilder();
        Document doc;
        Element rules_list, rule;
        NodeList rules, ruleNodes, subjectNodes, verbNodes, directobjectNodes, indirectobjectNodes, spaceNodes;
        String[] subjects, verbs, directobjects, indirectobjects, spaces;
        String key;
        Rule newRule;
        int i;
        for (File file : files) {
            if (!file.exists()) {
                myLogger.message("RuleFactory cannot find file: " + file + "\n", true);
                continue;
            }
            doc = db.parse(file);
            rules_list = (Element) doc.getElementsByTagName("rules").item(0);
            rules = rules_list.getElementsByTagName("rule");
            for (i = rules.getLength() - 1; i >= 0; i--) {
                rule = (Element) rules.item(i);
                ruleNodes = rule.getElementsByTagName("function");
                if (ruleNodes.getLength() == 0)
                    newRule = null;
                else
                    newRule = new Rule(new StringFunction((Element) ruleNodes.item(0)));
                subjectNodes = rule.getElementsByTagName("subject");
                verbNodes = rule.getElementsByTagName("verb");
                directobjectNodes = rule.getElementsByTagName("directobject");
                indirectobjectNodes = rule.getElementsByTagName("indirectobject");
                spaceNodes = rule.getElementsByTagName("space");
                subjects = getContents(subjectNodes);
                verbs = getContents(verbNodes);
                directobjects = getContents(directobjectNodes);
                indirectobjects = getContents(indirectobjectNodes);
                spaces = getContents(spaceNodes);
                for (String subject : subjects) {
                    if (!subject.equals(""))
                        subject = "" + ef.getType(subject);
                    for (String verb : verbs) {
                        if (!verb.equals(""))
                            verb = "" + af.getType(verb);
                        for (String directobject : directobjects) {
                            if (!directobject.equals(""))
                                directobject = "" + ef.getType(directobject);
                            for (String indirectobject : indirectobjects) {
                                if (!indirectobject.equals(""))
                                    indirectobject = "" + ef.getType(indirectobject);
                                key = indirectobject + "_" + directobject + "_" + subject + "_" + verb + "_";
                                for (String space : spaces) {
                                    addRuleToSet(space, key, newRule);
                                }
                            }
                        }
                    }
                }
            }
        }
    } catch (// better error reporting!
    Exception e) {
        myLogger.message("Failed to read input files! : " + e.getMessage() + " :\n", true);
        e.printStackTrace();
    }
}
