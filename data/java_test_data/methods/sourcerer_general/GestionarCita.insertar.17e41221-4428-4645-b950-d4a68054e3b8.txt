public ActionForward insertar(ActionMapping sMapping, ActionForm sForm, HttpServletRequest sRequest, HttpServletResponse sResponse) throws Exception {
    CitasForm formCitas = (CitasForm) sForm;
    /* Codigo para la inserci�n de una cita */
    Cita cita = formCitas.getCita();
    // Distinguimos si es una cita de grupo o de usuario
    if (formCitas.getTipoCita().equals("usuario")) {
        // Obtenemos el usuario al que vamos a agregar la cita
        Usuario user = (Usuario) sRequest.getSession().getAttribute(Constantes.NOMBRE_SESSION_USUARIO);
        // Obtenemos la cita a insertar
        // Insertamos el calendario al que pertenece la cita
        cita.setCalendario(user.getCalendario());
    } else {
        Grupo grupo = grupoSvc.obtenerGrupo(formCitas.getIdGrupo());
        // Grupo grupo = grupoSvc.obtenerGrupo(idGrupo);
        cita.setCalendario(grupo.getCalendario());
    }
    // Rellenamos la fecha
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyyhh:mm");
    Date dateInicio = sdf.parse(cita.getFechaInicioStr() + cita.getHoraInicioStr());
    Date dateFin = sdf.parse(cita.getFechaFinStr() + cita.getHoraFinStr());
    cita.setFechaInicio(Calendar.getInstance());
    cita.setFechaFin(Calendar.getInstance());
    cita.getFechaInicio().setTime(dateInicio);
    cita.getFechaFin().setTime(dateFin);
    // Insertamos la cita
    citaSvc.insertarCita(cita);
    /* Codigo para la insercion de un archivo a la cita */
    // Obtener el archivo de la cita del formulario
    FormFile formFile = formCitas.getFormFile();
    String fileName = formFile.getFileName();
    /* Codigo que elimina los caracteres Unicode del nombre del archivo */
    // Create the encoder and decoder for the character encoding
    Charset charset = Charset.forName("US-ASCII");
    CharsetDecoder decoder = charset.newDecoder();
    CharsetEncoder encoder = charset.newEncoder();
    // This line is the key to removing "unmappable" characters.
    encoder.onUnmappableCharacter(CodingErrorAction.IGNORE);
    // Convert a string to bytes in a ByteBuffer
    ByteBuffer bbuf = encoder.encode(CharBuffer.wrap(fileName));
    // Convert bytes in a ByteBuffer to a character ByteBuffer and then to a string.
    CharBuffer cbuf = decoder.decode(bbuf);
    fileName = cbuf.toString();
    // Obtenemos la ruta relativa del archivo y la ruta real, que es donde est� el servidor
    String filePath = Constantes.RUTA_FICHEROS_CITAS + cita.getIdCita() + "/";
    String realPath = sRequest.getRealPath("/") + filePath;
    // Obtenemos el contenido del archivo
    byte[] fileData = formFile.getFileData();
    // Escribir el contenido del archivo en una carpeta del servidor
    try {
        if (!fileName.equals("")) {
            // Crear el directorio donde se va a escribir el contenido del archivo, si no existe
            File directorio = new File(realPath);
            directorio.mkdirs();
            // Crear el fichero donde se va a escribir el contenido del archivo
            File fileToCreate = new File(realPath, fileName);
            // Si el fichero no existe, se crea
            if (!fileToCreate.exists()) {
                FileOutputStream fileOutStream = new FileOutputStream(fileToCreate);
                fileOutStream.write(fileData);
                fileOutStream.flush();
                fileOutStream.close();
            }
        }
    } catch (Exception ex) {
        System.out.println(ex);
        return null;
    }
    formFile.destroy();
    // Insertar los datos del archivo
    if (!fileName.equals("")) {
        Archivo archivo = new Archivo();
        archivo.setNombre(fileName);
        archivo.setRuta(filePath);
        archivo.setCita(cita.getIdCita());
        citaSvc.insertarArchivo(archivo);
    }
    // Reseteamos la cita en el formulario
    formCitas.setCita(new Cita());
    // Reseteamos el archivo en el formulario
    formCitas.setArchivo(new Archivo());
    /*Rellenamos el action actual*/
    CalendarioForm calForm = (CalendarioForm) sRequest.getSession().getAttribute("calendarioForm");
    calForm.setActionActual(Constantes.ACTION_INSERTAR_CITA);
    sRequest.getSession().setAttribute("calendarioForm", calForm);
    return sMapping.findForward("listaCitasYActualizaCalen");
}
