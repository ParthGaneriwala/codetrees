// StartUp Contstructor
public void actionPerformed(ActionEvent e) {
    Runtime runtime = Runtime.getRuntime();
    arguments[0] = "java";
    arguments[1] = "-Xmx512m";
    /*
		 * CLIENT BUTTON
		 */
    if (e.getSource() == clientBtn) {
        String inServerValC = String.valueOf(inServerC.getText());
        String inNameValC = String.valueOf(inNameC.getText());
        String inPortValC = String.valueOf(inPortC.getText());
        String inDirValC = String.valueOf(dirInC.getText());
        String inEextValC = String.valueOf(eextInC.getText());
        String inEfilesValC = String.valueOf(efilesInC.getText());
        arguments[2] = "-splash:images/DukeTakesOff.gif";
        arguments[3] = "Representation3D";
        if (verboseC == true)
            arguments[4] = "-v";
        else if (verboseC == false)
            arguments[4] = "";
        if (serverC == true) {
            arguments[5] = "-s";
            arguments[6] = inServerValC;
        } else if (serverC == false) {
            arguments[5] = "-s";
            arguments[6] = "localhost";
        }
        if (nameC == true) {
            arguments[7] = "-n";
            arguments[8] = inNameValC;
        } else if (nameC == false) {
            arguments[7] = "";
            arguments[8] = "";
        }
        if (portC == true) {
            arguments[9] = "-p";
            arguments[10] = inPortValC;
        } else if (portC == false) {
            arguments[9] = "";
            arguments[10] = "";
        }
        if (dirC == true) {
            arguments[11] = "-dir";
            arguments[12] = inDirValC;
        } else if (dirC == false) {
            arguments[11] = "";
            arguments[12] = "";
        }
        if (eextC == true) {
            arguments[13] = "-eext";
            arguments[14] = inEextValC;
        } else if (eextC == false) {
            arguments[13] = "";
            arguments[14] = "";
        }
        if (efilesC == true) {
            arguments[15] = "-efiles";
            arguments[16] = inEfilesValC;
        } else if (efilesC == false) {
            arguments[15] = "";
            arguments[16] = "";
        }
        // empty arguments to prevent crashes with exec
        for (int temp = 17; temp < arguments.length; temp++) {
            arguments[temp] = "";
        }
        System.out.println("Starting CLIENT with the following commands: ");
        int temps = 1;
        for (int tmp = 4; tmp <= 14; tmp++) {
            if (arguments[tmp] != "") {
                System.out.println("\t" + temps + ": " + arguments[tmp]);
                temps++;
            }
        }
        if (temps == 1)
            System.out.println("\tDefault Options Selected");
        // TRYING TO START THE CLIENT
        try {
            runtime.exec(arguments);
            runtime.gc();
        } catch (IOException ioe) {
            System.out.println("Cant start CLIENT. \n" + "Error: " + ioe.getMessage());
        }
    } else /*
		 * SERVER BUTTON
		 */
    if (e.getSource() == serverBtn) {
        String inPortValS = String.valueOf(inPortS.getText());
        String inDirValS = String.valueOf(dirInS.getText());
        String inEextValS = String.valueOf(eextInS.getText());
        String inWextValS = String.valueOf(wextInS.getText());
        String inEfilesValS = String.valueOf(efilesInS.getText());
        String inWfilesValS = String.valueOf(wfilesInS.getText());
        arguments[3] = "Server";
        if (verboseS == true)
            arguments[4] = "-v";
        else if (verboseS == false)
            arguments[4] = "";
        if (textS == true) {
            arguments[2] = "";
            arguments[5] = "-t";
        } else if (textS == false) {
            arguments[2] = "-splash:images/server.gif";
            arguments[5] = "";
        }
        if (portS == true) {
            arguments[6] = "-p";
            arguments[7] = inPortValS;
        } else if (portS == false) {
            arguments[6] = "";
            arguments[7] = "";
        }
        if (dirS == true) {
            arguments[8] = "-dir";
            arguments[9] = inDirValS;
        } else if (dirS == false) {
            arguments[8] = "";
            arguments[9] = "";
        }
        if (eextS == true) {
            arguments[10] = "-eext";
            arguments[11] = inEextValS;
        } else if (eextS == false) {
            arguments[10] = "";
            arguments[11] = "";
        }
        if (wextS == true) {
            arguments[12] = "-wext";
            arguments[13] = inWextValS;
        } else if (wextS == false) {
            arguments[12] = "";
            arguments[13] = "";
        }
        if (efilesS == true) {
            arguments[14] = "-efiles";
            arguments[15] = inEfilesValS;
        } else if (efilesS == false) {
            arguments[14] = "";
            arguments[15] = "";
        }
        if (wfilesS == true) {
            arguments[16] = "-wfiles";
            arguments[17] = inWfilesValS;
        } else if (wfilesS == false) {
            arguments[16] = "";
            arguments[17] = "";
        }
        System.out.println("Starting SERVER with the following commands: ");
        int temps = 1;
        for (int tmp = 4; tmp < arguments.length; tmp++) {
            if (arguments[tmp] != "") {
                System.out.println("\t" + temps + ": " + arguments[tmp]);
                temps++;
            }
        }
        if (temps == 1)
            System.out.println("\tDefault Options Selected");
        // TRYING TO START THE SERVER
        try {
            runtime.exec(arguments);
            runtime.gc();
        } catch (IOException ioe) {
            System.out.println("Cant start SERVER. \n" + "Error: " + ioe.getMessage());
        }
    } else
        System.out.println("NOT A VALID BUTTON COMMAND");
}
