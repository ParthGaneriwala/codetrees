// }}}
// {{{ initPLAF() method
private static void initPLAF() {
    Font primaryFont = jEdit.getFontProperty("metal.primary.font");
    if (primaryFont != null) {
        String primaryFontString = fontToString(primaryFont);
        System.getProperties().put("swing.plaf.metal.controlFont", primaryFontString);
        System.getProperties().put("swing.plaf.metal.menuFont", primaryFontString);
    }
    Font secondaryFont = jEdit.getFontProperty("metal.secondary.font");
    if (secondaryFont != null) {
        String secondaryFontString = fontToString(secondaryFont);
        System.getProperties().put("swing.plaf.metal.systemFont", secondaryFontString);
        System.getProperties().put("swing.plaf.metal.userFont", secondaryFontString);
    }
    try {
        String lf = getProperty("lookAndFeel");
        if (lf != null && lf.length() != 0)
            UIManager.setLookAndFeel(lf);
        else if (OperatingSystem.isMacOS()) {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } else {
            UIManager.setLookAndFeel(UIManager.getCrossPlatformLookAndFeelClassName());
        }
    } catch (Exception e) {
        Log.log(Log.ERROR, jEdit.class, e);
    }
    UIDefaults defaults = UIManager.getDefaults();
    // give all Swing components our colors
    if (jEdit.getBooleanProperty("textColors")) {
        Color background = new javax.swing.plaf.ColorUIResource(jEdit.getColorProperty("view.bgColor"));
        Color foreground = new javax.swing.plaf.ColorUIResource(jEdit.getColorProperty("view.fgColor"));
        Color caretColor = new javax.swing.plaf.ColorUIResource(jEdit.getColorProperty("view.caretColor"));
        Color selectionColor = new javax.swing.plaf.ColorUIResource(jEdit.getColorProperty("view.selectionColor"));
        String[] prefixes = { "TextField", "TextArea", "List", "Table" };
        for (int i = 0; i < prefixes.length; i++) {
            String prefix = prefixes[i];
            defaults.put(prefix + ".disabledBackground", background);
            defaults.put(prefix + ".background", background);
            defaults.put(prefix + ".disabledForeground", foreground);
            defaults.put(prefix + ".foreground", foreground);
            defaults.put(prefix + ".caretForeground", caretColor);
            defaults.put(prefix + ".selectionForeground", foreground);
            defaults.put(prefix + ".selectionBackground", selectionColor);
        // defaults.put(prefix + ".inactiveForeground",foreground);
        }
        defaults.put("Tree.background", background);
        defaults.put("Tree.foreground", foreground);
        defaults.put("Tree.textBackground", background);
        defaults.put("Tree.textForeground", foreground);
        defaults.put("Tree.selectionForeground", foreground);
        defaults.put("Tree.selectionBackground", selectionColor);
    }
    defaults.remove("SplitPane.border");
    defaults.remove("SplitPaneDivider.border");
    JFrame.setDefaultLookAndFeelDecorated(getBooleanProperty("decorate.frames"));
    JDialog.setDefaultLookAndFeelDecorated(getBooleanProperty("decorate.dialogs"));
    KeyboardFocusManager.setCurrentKeyboardFocusManager(new MyFocusManager());
}
