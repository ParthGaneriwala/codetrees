public static Board parseCwb(String... lines) {
    if (lines.length != 9) {
        if (printParsingErrors) {
            err.println("Unexpected number of lines in board. Expected 9" + " lines, got " + lines.length);
        }
        return null;
    }
    int parsedBlack = 0;
    int parsedWhite = 0;
    int parsedKings = 0;
    boolean parsedBlackToMove;
    int bitNbr = 0;
    for (int i = 0; i < 8; i++) {
        String line = lines[i].trim();
        String[] tokens = line.split("\\s+");
        if (tokens.length != 4) {
            if (printParsingErrors) {
                err.println("Unexpected number of tokens. Expected 4 tokens" + ", got " + tokens.length + ": " + Arrays.toString(tokens));
            }
            return null;
        }
        for (int j = 0; j < 4; j++) {
            String token = tokens[j];
            if (token.length() != 1) {
                if (printParsingErrors) {
                    err.println("Unexpected token length. Expected length" + " of 1, got length" + token.length() + ": '" + token + "'.");
                }
                return null;
            }
            int bit = 1 << bitNbr;
            char c = token.charAt(0);
            switch(c) {
                case 'B':
                    parsedBlack |= bit;
                    parsedKings |= bit;
                    break;
                case 'b':
                    parsedBlack |= bit;
                    break;
                case 'W':
                    parsedWhite |= bit;
                    parsedKings |= bit;
                    break;
                case 'w':
                    parsedWhite |= bit;
                    break;
                case '-':
                    // Do nothing
                    break;
                default:
                    if (printParsingErrors) {
                        err.printf("Unexpected character %c. Expected one of" + " -, b, B, w, or W\n", c);
                    }
                    return null;
            }
            bitNbr++;
        }
    }
    char t = lines[8].trim().charAt(0);
    switch(t) {
        case 'B':
        case 'b':
            parsedBlackToMove = true;
            break;
        case 'W':
        case 'w':
            parsedBlackToMove = false;
            break;
        default:
            if (printParsingErrors) {
                err.printf("Unexpected character %c. Expected one of" + " b, B, w, or W\n", t);
            }
            return null;
    }
    return new Board(parsedBlack, parsedWhite, parsedKings, parsedBlackToMove);
}
