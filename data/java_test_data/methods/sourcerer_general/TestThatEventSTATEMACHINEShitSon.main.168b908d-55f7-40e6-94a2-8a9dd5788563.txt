public static void main(String[] ags) throws InterruptedException {
    Dispatcher disp = new Dispatcher(new Thing());
    disp.startDispatcher();
    EventDecoder<KeyPress> decoder = new KeyEventDecoder(null, disp);
    Thread coolThread = new Thread(decoder);
    coolThread.start();
    // goes to equip
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_E));
    // goes to skills
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_S));
    // goes to inventory
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_I));
    // goes to inv. equip
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_EQUALS));
    // goes to inv. dropable
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_EQUALS));
    // goes to drop equipable
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_EQUALS));
    // goes to gimp
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_EQUALS));
    // back to inventory
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_EQUALS));
    // goes to skills
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_S));
    // goes to project skills
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_EQUALS));
    // goes to skills upgrade
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_EQUALS));
    // goes to skills again
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_EQUALS));
    // stays in same state
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_TAB));
    // stays in same state
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_TAB));
    // stays in same state
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_TAB));
    // stays in same state
    decoder.registerEvent(new EventThinger(null, null, KeyEvent.VK_TAB));
    Thread.sleep(1000);
    coolThread.interrupt();
    disp.stopDispatcher();
}
