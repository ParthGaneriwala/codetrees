private static ProjectTestResults runAllTestSuits(TestProfile testProfile, Techspec techspec, Appspec appspec, String filterName, FileFilter fileFilter) throws Exception {
    // prepare tests
    TestPreparationUtil.prepareAllTestSuites(testProfile, techspec, appspec, filterName, fileFilter);
    File suiteTargetDirectory = new File("target" + File.separator + "clickframes" + File.separator + "selenium" + File.separator + ClickframeUtils.convertSlashToPathSeparator(filterName) + File.separator + "tests");
    Properties properties = new Properties();
    properties.put("browser", testProfile.getBrowser());
    properties.put("suite", suiteTargetDirectory.getAbsolutePath());
    if (testProfile.getBaseUrl() != null) {
        properties.put("startURL", testProfile.getBaseUrl());
    }
    File resultsDir = new File("target" + File.separator + "clickframes" + File.separator + "selenium" + File.separator + ClickframeUtils.convertSlashToPathSeparator(filterName) + File.separator + "results");
    FileUtils.deleteDirectory(resultsDir);
    resultsDir.mkdirs();
    properties.put("result", resultsDir.getAbsolutePath());
    // prepare user extensions
    File userExtensionsFile = new File(System.getProperty("java.io.tmpdir"), "user-extensions.js");
    if (userExtensionsFile.exists()) {
        userExtensionsFile.delete();
    }
    IOUtils.copy(TestRunner.class.getResourceAsStream("/user-extensions.js"), new FileOutputStream(userExtensionsFile));
    properties.put("userExtensions", userExtensionsFile.getAbsolutePath());
    MultiHTMLSuiteRunner runner = null;
    boolean hasFiles = true;
    if (hasFiles) {
        runner = MultiHTMLSuiteRunner.execute(properties);
    }
    ProjectTestResults projectTestResults = createFrom(runner);
    // serialize the projectTestResults using java serialization
    XMLEncoder e = new XMLEncoder(new BufferedOutputStream(new FileOutputStream(new File(resultsDir, "testResults.xml"))));
    e.writeObject(projectTestResults);
    e.close();
    // write test result summary
    writeTestResultSummaryFile(techspec, appspec, projectTestResults, filterName);
    return projectTestResults;
}
