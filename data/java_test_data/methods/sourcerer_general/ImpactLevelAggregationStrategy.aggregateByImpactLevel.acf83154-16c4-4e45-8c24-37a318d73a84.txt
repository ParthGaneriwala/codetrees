private AllStatsForNamespaces aggregateByImpactLevel(final Tree sourceDataTree, final AllStatsForNamespaces allStatsForNamespaces) {
    Config config = Config.getInstance();
    AllStatsForNamespaces aggregatedStatsForNamespaces = new AllStatsForNamespaces();
    Collection<String> allVariables = allStatsForNamespaces.allVariables();
    for (Iterator<String> iter = allVariables.iterator(); iter.hasNext(); ) {
        String variable = (String) iter.next();
        StatsForNamespaces statsForNamespaces = allStatsForNamespaces.getStatsForNamespacesFor(variable);
        Set<String> allNamespaces = statsForNamespaces.allNamespaces();
        Iterator<String> allNamespacesIterator = allNamespaces.iterator();
        while (allNamespacesIterator.hasNext()) {
            String namespace = allNamespacesIterator.next();
            Iterator<Node> nodeIter = sourceDataTree.nodes();
            while (nodeIter.hasNext()) {
                Node node = (Node) nodeIter.next();
                if (node.getString(SourceData.FULL_NAME).equals(namespace)) {
                    ContainedSummaryStats containedSummaryStats = (ContainedSummaryStats) statsForNamespaces.getSummaryStatsFor(namespace);
                    int totalTorque = (int) containedSummaryStats.getTotalTorque();
                    // check whether we already have a aggregatedMap for this maturity
                    StatsForNamespaces aggregatedNamespaceMap = aggregatedStatsForNamespaces.getStatsForNamespacesFor(AGGREGATION_PREFIX + containedSummaryStats.getMaturityGroup());
                    if (aggregatedNamespaceMap == null) {
                        aggregatedNamespaceMap = new StatsForNamespaces(AGGREGATION_PREFIX + containedSummaryStats.getMaturityGroup(), true, true);
                        aggregatedStatsForNamespaces.add(aggregatedNamespaceMap);
                    }
                    SummaryStats namespaceSummaryStats = (SummaryStats) aggregatedNamespaceMap.getSummaryStatsFor(namespace);
                    if (namespaceSummaryStats == null) {
                        namespaceSummaryStats = new AggregatedSummaryStats(containedSummaryStats.getMaturityGroup(), containedSummaryStats.getMaturityGroup());
                        aggregatedNamespaceMap.add(namespace, namespaceSummaryStats);
                    }
                    Metric metric = config.getMetricByName(containedSummaryStats.getName());
                    if (!(metric == null) && metric.isRelevant()) {
                        int weight = config.getWeightForMetric(containedSummaryStats.getName());
                        namespaceSummaryStats.addValue(totalTorque * weight);
                    }
                }
            }
        }
    }
    return aggregatedStatsForNamespaces;
}
