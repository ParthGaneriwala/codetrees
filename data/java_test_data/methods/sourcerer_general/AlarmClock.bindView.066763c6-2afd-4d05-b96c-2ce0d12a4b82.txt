public void bindView(View view, Context context, Cursor cursor) {
    final Alarm alarm = new Alarm(cursor);
    View indicator = view.findViewById(R.id.indicator);
    // Set the initial resource for the bar image.
    final ImageView barOnOff = (ImageView) indicator.findViewById(R.id.bar_onoff);
    barOnOff.setImageResource(alarm.enabled ? R.drawable.ic_indicator_on : R.drawable.ic_indicator_off);
    // Set the initial state of the clock "checkbox"
    final CheckBox clockOnOff = (CheckBox) indicator.findViewById(R.id.clock_onoff);
    clockOnOff.setChecked(alarm.enabled);
    // Clicking outside the "checkbox" should also change the state.
    indicator.setOnClickListener(new OnClickListener() {

        public void onClick(View v) {
            clockOnOff.toggle();
            updateIndicatorAndAlarm(clockOnOff.isChecked(), barOnOff, alarm);
        }
    });
    DigitalClock digitalClock = (DigitalClock) view.findViewById(R.id.digitalClock);
    // set the alarm text
    final Calendar c = Calendar.getInstance();
    c.set(Calendar.HOUR_OF_DAY, alarm.hour);
    c.set(Calendar.MINUTE, alarm.minutes);
    digitalClock.updateTime(c);
    digitalClock.setTypeface(Typeface.DEFAULT);
    // Set the repeat text or leave it blank if it does not repeat.
    TextView daysOfWeekView = (TextView) digitalClock.findViewById(R.id.daysOfWeek);
    final String daysOfWeekStr = alarm.daysOfWeek.toString(AlarmClock.this, false);
    if (daysOfWeekStr != null && daysOfWeekStr.length() != 0) {
        daysOfWeekView.setText(daysOfWeekStr);
        daysOfWeekView.setVisibility(View.VISIBLE);
    } else {
        daysOfWeekView.setVisibility(View.GONE);
    }
    // Display the label
    TextView labelView = (TextView) view.findViewById(R.id.label);
    if (alarm.label != null && alarm.label.length() != 0) {
        labelView.setText(alarm.label);
        labelView.setVisibility(View.VISIBLE);
    } else {
        labelView.setVisibility(View.GONE);
    }
}
