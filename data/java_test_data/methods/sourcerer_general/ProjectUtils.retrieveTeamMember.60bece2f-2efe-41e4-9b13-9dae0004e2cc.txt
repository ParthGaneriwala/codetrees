public static TeamMember retrieveTeamMember(int projectId, User thisUser) {
    // Get the project from cache
    Project thisProject = loadProject(projectId);
    // Try retrieving the team member
    TeamMember teamMember = thisProject.getTeam().getTeamMember(thisUser.getId());
    if (teamMember == null) {
        // Generate a temporary team member
        if (thisUser.getAccessAdmin()) {
            // If this is an administrator of the system, give them access
            teamMember = new TeamMember();
            teamMember.setProjectId(thisProject.getId());
            teamMember.setUserLevel(UserUtils.getUserLevel(TeamMember.PROJECT_ADMIN));
            teamMember.setRoleId(TeamMember.PROJECT_ADMIN);
            teamMember.setTemporaryAdmin(true);
        } else if (thisUser.hasContentEditorAccess(thisProject.getLanguageId()) && thisProject.getPortal()) {
            teamMember = new TeamMember();
            teamMember.setProjectId(thisProject.getId());
            teamMember.setUserLevel(UserUtils.getUserLevel(TeamMember.PROJECT_ADMIN));
            teamMember.setRoleId(TeamMember.PROJECT_ADMIN);
            teamMember.setTemporaryAdmin(true);
        } else if (!thisProject.getApproved()) {
            // If the project isn't approved, and you're not a team member
            return null;
        /*
      } else if (thisProject.getFeatures().getMembershipRequired()) {
        // If not a member, and membership is required
        return false;
        */
        } else if (thisProject.getFeatures().getAllowParticipants() && thisUser.isLoggedIn()) {
            // Create a participant because the project promotes registered users to Partcipant
            teamMember = new TeamMember();
            teamMember.setProjectId(thisProject.getId());
            teamMember.setUserLevel(UserUtils.getUserLevel(TeamMember.PARTICIPANT));
            teamMember.setRoleId(TeamMember.PARTICIPANT);
        } else if (thisProject.getFeatures().getAllowGuests()) {
            // Create a guest by default because the project allows guests
            teamMember = new TeamMember();
            teamMember.setProjectId(thisProject.getId());
            teamMember.setUserLevel(UserUtils.getUserLevel(TeamMember.GUEST));
            teamMember.setRoleId(TeamMember.GUEST);
        }
    }
    return teamMember;
}
