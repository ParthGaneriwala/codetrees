public void serialize(final javax.xml.namespace.QName parentQName, final org.apache.axiom.om.OMFactory factory, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
    java.lang.String prefix = parentQName.getPrefix();
    java.lang.String namespace = parentQName.getNamespaceURI();
    if (namespace != null) {
        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
        if (writerPrefix != null) {
            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
        } else {
            if (prefix == null) {
                prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
            }
            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
            xmlWriter.writeNamespace(prefix, namespace);
            xmlWriter.setPrefix(prefix, namespace);
        }
    } else {
        xmlWriter.writeStartElement(parentQName.getLocalPart());
    }
    if (localCallParticipants != null) {
        namespace = "http://www.tid.es/schema/parlayx/third_party_call/v1_1";
        boolean emptyNamespace = namespace == null || namespace.length() == 0;
        prefix = emptyNamespace ? null : xmlWriter.getPrefix(namespace);
        for (int i = 0; i < localCallParticipants.length; i++) {
            if (localCallParticipants[i] != null) {
                if (!emptyNamespace) {
                    if (prefix == null) {
                        java.lang.String prefix2 = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                        xmlWriter.writeStartElement(prefix2, "callParticipants", namespace);
                        xmlWriter.writeNamespace(prefix2, namespace);
                        xmlWriter.setPrefix(prefix2, namespace);
                    } else {
                        xmlWriter.writeStartElement(namespace, "callParticipants");
                    }
                } else {
                    xmlWriter.writeStartElement("callParticipants");
                }
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCallParticipants[i]));
                xmlWriter.writeEndElement();
            } else {
                throw new RuntimeException("callParticipants cannot be null!!");
            }
        }
    } else {
        throw new RuntimeException("callParticipants cannot be null!!");
    }
    if (localCallerIdentitiesTracker) {
        if (localCallerIdentities != null) {
            namespace = "http://www.tid.es/schema/parlayx/third_party_call/v1_1";
            boolean emptyNamespace = namespace == null || namespace.length() == 0;
            prefix = emptyNamespace ? null : xmlWriter.getPrefix(namespace);
            for (int i = 0; i < localCallerIdentities.length; i++) {
                if (localCallerIdentities[i] != null) {
                    if (!emptyNamespace) {
                        if (prefix == null) {
                            java.lang.String prefix2 = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                            xmlWriter.writeStartElement(prefix2, "callerIdentities", namespace);
                            xmlWriter.writeNamespace(prefix2, namespace);
                            xmlWriter.setPrefix(prefix2, namespace);
                        } else {
                            xmlWriter.writeStartElement(namespace, "callerIdentities");
                        }
                    } else {
                        xmlWriter.writeStartElement("callerIdentities");
                    }
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCallerIdentities[i]));
                    xmlWriter.writeEndElement();
                } else {
                // we have to do nothing since minOccurs is zero
                }
            }
        } else {
            throw new RuntimeException("callerIdentities cannot be null!!");
        }
    }
    if (localCalledIdentitiesNamesTracker) {
        if (localCalledIdentitiesNames != null) {
            namespace = "http://www.tid.es/schema/parlayx/third_party_call/v1_1";
            boolean emptyNamespace = namespace == null || namespace.length() == 0;
            prefix = emptyNamespace ? null : xmlWriter.getPrefix(namespace);
            for (int i = 0; i < localCalledIdentitiesNames.length; i++) {
                if (localCalledIdentitiesNames[i] != null) {
                    if (!emptyNamespace) {
                        if (prefix == null) {
                            java.lang.String prefix2 = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                            xmlWriter.writeStartElement(prefix2, "calledIdentitiesNames", namespace);
                            xmlWriter.writeNamespace(prefix2, namespace);
                            xmlWriter.setPrefix(prefix2, namespace);
                        } else {
                            xmlWriter.writeStartElement(namespace, "calledIdentitiesNames");
                        }
                    } else {
                        xmlWriter.writeStartElement("calledIdentitiesNames");
                    }
                    xmlWriter.writeCharacters(localCalledIdentitiesNames[i]);
                    xmlWriter.writeEndElement();
                } else {
                // we have to do nothing since minOccurs is zero
                }
            }
        } else {
            throw new RuntimeException("calledIdentitiesNames cannot be null!!");
        }
    }
    if (localCallerIdentitiesNamesTracker) {
        if (localCallerIdentitiesNames != null) {
            namespace = "http://www.tid.es/schema/parlayx/third_party_call/v1_1";
            boolean emptyNamespace = namespace == null || namespace.length() == 0;
            prefix = emptyNamespace ? null : xmlWriter.getPrefix(namespace);
            for (int i = 0; i < localCallerIdentitiesNames.length; i++) {
                if (localCallerIdentitiesNames[i] != null) {
                    if (!emptyNamespace) {
                        if (prefix == null) {
                            java.lang.String prefix2 = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                            xmlWriter.writeStartElement(prefix2, "callerIdentitiesNames", namespace);
                            xmlWriter.writeNamespace(prefix2, namespace);
                            xmlWriter.setPrefix(prefix2, namespace);
                        } else {
                            xmlWriter.writeStartElement(namespace, "callerIdentitiesNames");
                        }
                    } else {
                        xmlWriter.writeStartElement("callerIdentitiesNames");
                    }
                    xmlWriter.writeCharacters(localCallerIdentitiesNames[i]);
                    xmlWriter.writeEndElement();
                } else {
                // we have to do nothing since minOccurs is zero
                }
            }
        } else {
            throw new RuntimeException("callerIdentitiesNames cannot be null!!");
        }
    }
    if (localChargingTracker) {
        if (localCharging == null) {
            throw new RuntimeException("charging cannot be null!!");
        }
        localCharging.serialize(new javax.xml.namespace.QName("http://www.tid.es/schema/parlayx/third_party_call/v1_1", "charging"), factory, xmlWriter);
    }
    if (localMediaInfoTracker) {
        if (localMediaInfo != null) {
            for (int i = 0; i < localMediaInfo.length; i++) {
                if (localMediaInfo[i] != null) {
                    localMediaInfo[i].serialize(new javax.xml.namespace.QName("http://www.tid.es/schema/parlayx/third_party_call/v1_1", "mediaInfo"), factory, xmlWriter);
                } else {
                // we don't have to do any thing since minOccures is zero
                }
            }
        } else {
            throw new RuntimeException("mediaInfo cannot be null!!");
        }
    }
    namespace = "http://www.tid.es/schema/parlayx/third_party_call/v1_1";
    if (!namespace.equals("")) {
        prefix = xmlWriter.getPrefix(namespace);
        if (prefix == null) {
            prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
            xmlWriter.writeStartElement(prefix, "changeMediaNotAllowed", namespace);
            xmlWriter.writeNamespace(prefix, namespace);
            xmlWriter.setPrefix(prefix, namespace);
        } else {
            xmlWriter.writeStartElement(namespace, "changeMediaNotAllowed");
        }
    } else {
        xmlWriter.writeStartElement("changeMediaNotAllowed");
    }
    if (false) {
        throw new RuntimeException("changeMediaNotAllowed cannot be null!!");
    } else {
        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChangeMediaNotAllowed));
    }
    xmlWriter.writeEndElement();
    xmlWriter.writeEndElement();
}
