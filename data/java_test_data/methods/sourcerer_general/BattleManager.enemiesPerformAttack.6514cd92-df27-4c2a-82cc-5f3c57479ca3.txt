// <<------------------------------------------------------------------------------------------------------------------------------------>>
// <<----------------------------------------------------------Battle Actions------------------------------------------------------------>>
private void enemiesPerformAttack() {
    switch(enemyQuantity) {
        case 1:
            if (enemyArray[ENEMY1].isAlive()) {
                currentPlayer.calculateDamage(enemyArray[0].getElementalAttribute(), enemyArray[0].getPhysicalAttack(), enemyArray[0].getCurrentLevel());
                this.isAttacking = true;
            } else {
                enemyArray[ENEMY1].setVisible(false);
            }
            break;
        case 2:
            if (enemyArray[ENEMY1].isAlive()) {
                currentPlayer.calculateDamage(enemyArray[0].getElementalAttribute(), enemyArray[0].getPhysicalAttack(), enemyArray[0].getCurrentLevel());
                this.isAttacking = true;
            } else {
                enemyArray[ENEMY1].setVisible(false);
            }
            if (enemyArray[ENEMY2].isAlive()) {
                currentPlayer.calculateDamage(enemyArray[1].getElementalAttribute(), enemyArray[1].getPhysicalAttack(), enemyArray[1].getCurrentLevel());
                this.isAttacking = true;
            } else {
                enemyArray[ENEMY2].setVisible(false);
            }
            break;
        case 3:
            if (enemyArray[ENEMY1].isAlive()) {
                currentPlayer.calculateDamage(enemyArray[0].getElementalAttribute(), enemyArray[0].getPhysicalAttack(), enemyArray[0].getCurrentLevel());
                this.isAttacking = true;
            } else {
                enemyArray[ENEMY1].setVisible(false);
            }
            if (enemyArray[ENEMY2].isAlive()) {
                currentPlayer.calculateDamage(enemyArray[1].getElementalAttribute(), enemyArray[1].getPhysicalAttack(), enemyArray[1].getCurrentLevel());
                this.isAttacking = true;
            } else {
                enemyArray[ENEMY2].setVisible(false);
            }
            if (enemyArray[ENEMY3].isAlive()) {
                currentPlayer.calculateDamage(enemyArray[2].getElementalAttribute(), enemyArray[2].getPhysicalAttack(), enemyArray[2].getCurrentLevel());
                this.isAttacking = true;
            } else {
                enemyArray[ENEMY3].setVisible(false);
            }
            break;
        default:
            System.out.println("Bad attack perform.");
    }
    this.status = BattleManager.ACTIVE_BATTLE;
    this.currentAttacker = ENEMY1;
    this.isAttacking = true;
    this.movingForward = true;
}
