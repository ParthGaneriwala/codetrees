/*
	public void loadActivitiesTest()
	{
		this.loadEvent("file://localhost///NewRoot0/SampleActivity0.xml");
		//this.loadEvent("SampleActivity1.xml");
	}*/
public Activity loadActivity(String filename) {
    Document doc = new Document();
    KXmlParser parser;
    // try to open the file
    try {
        FileConnection fconn = (FileConnection) Connector.open(filename);
        if (fconn.exists() == false) {
            return null;
        }
        parser = new KXmlParser();
        parser.setFeature(XmlPullParser.FEATURE_PROCESS_NAMESPACES, true);
        // parser.setFeature(XmlPullParser.FEATURE_VALIDATION, true);
        try {
            parser.setInput(new InputStreamReader(fconn.openInputStream()));
        } catch (XmlPullParserException e) {
            e.printStackTrace();
            return null;
        }
    // parser=new XmlParser(new InputStreamReader(ActivityLoader.class.getResourceAsStream(filename)));
    } catch (IOException e) {
        e.printStackTrace();
        return null;
    } catch (XmlPullParserException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
        return null;
    }
    // try to load document
    try {
        doc.parse(parser);
    } catch (IOException e) {
        e.printStackTrace();
        return null;
    } catch (XmlPullParserException e) {
        e.printStackTrace();
        return null;
    }
    Element root = doc.getRootElement();
    // root must be an activity
    if (!root.getName().equals("Activity")) {
        System.err.println("ActivityLoader.loadActivities." + filename + " is not an activity file.");
        return null;
    }
    // leggo gli attributi
    String name = root.getAttributeValue("", "Name");
    String description = root.getAttributeValue("", "Description");
    long date = Long.parseLong(root.getAttributeValue("", "Date"));
    String sample = root.getAttributeValue("", "Sample");
    if (sample != null && sample.equalsIgnoreCase("true")) {
        date = date + System.currentTimeMillis();
    }
    Activity activity = new Activity(name, description, date);
    // rule parsing
    for (int i = 0; i < root.getChildCount(); i++) {
        Object c = root.getChild(i);
        if (c instanceof Element) {
            Element ruleEl = (Element) c;
            // if(ruleEl.getName().equals(arg0))
            Rule r = this.loadRule(ruleEl, activity);
        /*
				if(disposingTime<r.getDeactivationMsec())
				{
					disposingTime=r.getDeactivationMsec();
				}
				*/
        }
    }
    // activity.setDatetimeDisposing(disposingTime);
    DecisionEngine.getInstance().addActivity(activity);
    return activity;
/*
		String name=evt.getString(Event.SUMMARY, 0);
		String description=evt.getString(Event.NOTE, 0);
		long date=evt.getDate(Event.START, 0);
		
		Activity activity=new Activity(name,description,date);
		String location=evt.getString(Event.LOCATION, 0);
		this.loadRules(location, activity);
		DecisionEngine.getInstance().addActivity(activity);
		*/
}
