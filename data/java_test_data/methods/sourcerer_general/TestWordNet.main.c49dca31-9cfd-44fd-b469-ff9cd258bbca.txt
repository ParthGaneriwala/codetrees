public static void main(String[] args) {
    System.out.println("Looking up sense: '" + lemma + "'");
    System.out.println();
    WordNetProcessor WNProcessor = WordNetProcessor.getInstance(getProperties());
    if (WNProcessor.exists(pos, lemma)) {
        // synsets associated with lemma
        IndexWord indexword = WNProcessor.getIndexWord(pos, lemma);
        List<Synset> Synsets = WNProcessor.getSynsets(indexword);
        for (Synset synset : Synsets) {
            System.out.println("[Frequency: " + WNProcessor.getFrequencyCount(indexword.getLemma(), synset) + "] " + synset);
        }
        System.out.println();
        // synset with highest frequency count
        Synset synset = WNProcessor.getSynset(indexword);
        System.out.println("Synset: " + synset);
        System.out.println();
        // synonym terms in synset
        List<Word> words = WNProcessor.getWords(synset);
        for (Word word : words) {
            System.out.println("Word: " + word);
        }
        System.out.println();
        // term of lemma
        Word word = WNProcessor.getWord(indexword.getLemma(), pos, synset.getOffset());
        System.out.println("Word: " + word);
        System.out.println();
        // membermeronyms of synset
        List<Synset> memberMeronyms = WNProcessor.getMemberMeronyms(synset);
        for (Synset memberMeronym : memberMeronyms) {
            System.out.println("MemberMeronym: " + memberMeronym);
        }
        // hyponyms of synset
        List<Synset> hyponyms = WNProcessor.getHyponyms(synset);
        for (Synset hyponym : hyponyms) {
            System.out.println("Hyponym: " + hyponym);
        }
        System.out.println();
        // direct hypernym of synset
        Synset hypernym = WNProcessor.getHypernym(synset);
        System.out.println("Hypernym: " + hypernym);
        System.out.println();
        // inherited hypernyms of synset
        List<Synset> hypernymTree = WNProcessor.getHypernymTree(synset);
        int i = 0;
        for (Synset hypernymLeaf : hypernymTree) {
            int j = i++;
            while (j > 0) {
                System.out.print("  ");
                j--;
            }
            System.out.println("--> " + hypernymLeaf);
        }
        // semantic depth of synset (= sum of inherited hypernyms)
        System.out.println("Semantic Depth: " + WNProcessor.getSemanticDepth(synset));
    } else {
        System.out.println("Sense '" + lemma + "' does not exist");
    }
}
