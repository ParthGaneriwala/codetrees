public List getHourZeroCells(final String date, String orderby, int starthour, int endhour) {
    String start = date + " " + starthour + ":00:00";
    String end = date + " " + endhour + ":00:00";
    Date thedate = com.sxit.stat.util.StatUtil.getDate(date);
    String date1 = df.format(com.sxit.stat.util.StatUtil.getPrevCountDate(thedate, 1));
    String date2 = df.format(com.sxit.stat.util.StatUtil.getPrevCountDate(thedate, 2));
    int _start = (int) (com.sxit.stat.util.StatUtil.getDateHourTime(start) / 1000);
    int _endstart = (int) (com.sxit.stat.util.StatUtil.getDateHourTime(end) / 1000);
    long _end = com.sxit.stat.util.StatUtil.getHourAfterTime(_endstart);
    int count = endhour - starthour + 1;
    // int startIndex = (pageNo - 1) * pageSize;
    // String countsql = "select count(*) from(select count(apnni) from
    // stat_apn_zero where dayflag=0 and stattime>="
    // + _start + " and stattime<=" + _end + " group by apnni having
    // count(apnni)>=" + count + ")";
    // System.out.println(countsql);
    String sql = "select cellid,lac,sum(allvolume) as allvolume from stat_cellid_zero where dayflag=0 and stattime>=" + _start + " and stattime<=" + _end + "group by cellid,lac having count(*)>=" + count + orderby;
    System.out.println(sql);
    // int totalCount = jdbcTemplate.queryForInt(countsql);
    final Map<String, ZeroCell> zerocelllist = new HashMap<String, ZeroCell>();
    final List<String> cellidlist = new ArrayList<String>();
    final List<String> cellkeylist = new ArrayList<String>();
    Object object = jdbcTemplate.query(sql, new ResultSetExtractor() {

        public Object extractData(ResultSet rs) throws SQLException, DataAccessException {
            // List list = new ArrayList();
            while (rs.next()) {
                ZeroCell model = new ZeroCell();
                model.setCellid(rs.getString("cellid"));
                model.setLac(rs.getString("lac"));
                if (com.sxit.netquality.service.BasicSetService.ALL_CELLS.containsKey(model.getCellkey()))
                    model.setAllvolume((float) com.sxit.netquality.service.BasicSetService.ALL_APNS.get(model.getCellkey()).getAllvolume());
                if (model.getAllvolume() > 0) {
                    // 总流量大于0的才显示
                    model.setDayflag(0);
                    zerocelllist.put(model.getCellkey(), model);
                    cellidlist.add(model.getCellid());
                    cellkeylist.add(model.getCellkey());
                }
            }
            return null;
        }
    });
    getDateApnVolume(date1, cellidlist, zerocelllist, 1);
    getDateApnVolume(date2, cellidlist, zerocelllist, 2);
    List list = new ArrayList();
    for (String cellkey : cellkeylist) {
        list.add(zerocelllist.get(cellkey));
    }
    zerocelllist.clear();
    cellidlist.clear();
    zerocelllist.clear();
    return list;
}
