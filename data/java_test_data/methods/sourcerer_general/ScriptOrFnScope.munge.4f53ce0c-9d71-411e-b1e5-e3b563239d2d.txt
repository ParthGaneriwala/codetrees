void munge() {
    if (!markedForMunging) {
        // Stop right here if this scope was flagged as unsafe for munging.
        return;
    }
    int pickFromSet = 1;
    // Do not munge symbols in the global scope!
    if (parentScope != null) {
        ArrayList freeSymbols = new ArrayList();
        freeSymbols.addAll(JavaScriptCompressor.ones);
        freeSymbols.removeAll(getAllUsedSymbols());
        if (freeSymbols.size() == 0) {
            pickFromSet = 2;
            freeSymbols.addAll(JavaScriptCompressor.twos);
            freeSymbols.removeAll(getAllUsedSymbols());
        }
        if (freeSymbols.size() == 0) {
            pickFromSet = 3;
            freeSymbols.addAll(JavaScriptCompressor.threes);
            freeSymbols.removeAll(getAllUsedSymbols());
        }
        if (freeSymbols.size() == 0) {
            System.err.println("The YUI Compressor ran out of symbols. Aborting...");
            System.exit(1);
        }
        Enumeration elements = identifiers.elements();
        while (elements.hasMoreElements()) {
            if (freeSymbols.size() == 0) {
                pickFromSet++;
                if (pickFromSet == 2) {
                    freeSymbols.addAll(JavaScriptCompressor.twos);
                } else if (pickFromSet == 3) {
                    freeSymbols.addAll(JavaScriptCompressor.threes);
                } else {
                    System.err.println("The YUI Compressor ran out of symbols. Aborting...");
                    System.exit(1);
                }
                // It is essential to remove the symbols already used in
                // the containing scopes, or some of the variables declared
                // in the containing scopes will be redeclared, which can
                // lead to errors.
                freeSymbols.removeAll(getAllUsedSymbols());
            }
            String mungedValue;
            JavaScriptIdentifier identifier = (JavaScriptIdentifier) elements.nextElement();
            if (identifier.isMarkedForMunging()) {
                mungedValue = (String) freeSymbols.remove(0);
            } else {
                mungedValue = identifier.getValue();
            }
            identifier.setMungedValue(mungedValue);
        }
    }
    for (int i = 0; i < subScopes.size(); i++) {
        ScriptOrFnScope scope = (ScriptOrFnScope) subScopes.get(i);
        scope.munge();
    }
}
