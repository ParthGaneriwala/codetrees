static void playNewFile() throws IOException {
    PlayerMainMenu.updateRecentList(media);
    checkUi();
    System.out.println("playNewFile " + media);
    SaveLastPlayThread.trySaveLastplayTime(media, 0);
    isPlayOne = true;
    unLock();
    stopPlay();
    isPlayOne = true;
    if (advChangeThread != null) {
        advChangeThread.interrupt();
    }
    progressBar.setValue(0);
    playOffset = 0;
    label_1.setBounds(0, 0, 0, 0);
    label_1.repaint();
    wDisplay.asyncExec(new Runnable() {

        public void run() {
            wShell.setMinimized(false);
            int flags = OS.SWP_NOSIZE | OS.SWP_NOMOVE;
            OS.SetWindowPos(wShell.handle, OS.HWND_TOPMOST, shellX, shellY, wShell.getBounds().width, wShell.getBounds().height, flags);
            if (!isTop) {
                OS.SetWindowPos(wShell.handle, OS.HWND_NOTOPMOST, shellX, shellY, wShell.getBounds().width, wShell.getBounds().height, flags);
            }
        // advB.setVisible(false);
        }
    });
    if (media != null) {
        if (isPlay) {
            stopPlay();
        }
        toMaster();
        button_5.setIcon(new ImageIcon("./application/skin/b2c.png"));
        button_5.setForeground(java.awt.Color.BLUE);
        button_4.setForeground(java.awt.Color.BLACK);
        isPlay = true;
        Preferences userPrefs = Preferences.userRoot().node("lightp2p");
        String mplayerPath = "";
        if (embed) {
            mplayerPath = userPrefs.get("mplayerpath", "");
        } else {
            mplayerPath = peer.Config.basePath + "mplayer/MPlayer.exe";
        }
        String media2 = parseUrl(media);
        File file = new File(media2);
        if (file.exists()) {
            windowId = wVideo.handle;
        } else {
            windowId = ct.getWid();
        }
        String[] cmd = null;
        // openAdv();
        if (!file.exists()) {
            localFile = false;
            cmd = new String[] { mplayerPath, // "-quiet",
            "-identify", "-slave", "-wid", String.valueOf(windowId), "-ao", "win32", "-colorkey", "0x010101", "-nokeepaspect", "-osdlevel", String.valueOf(osdlevel), // "-cache",String.valueOf(1024*100),
            "-ss", String.valueOf(seekTime), media2 };
        } else {
            // closeAdv();
            localFile = true;
            cmd = new String[] { mplayerPath, // "-quiet",
            "-identify", "-slave", "-wid", String.valueOf(windowId), "-colorkey", "0x010101", "-nokeepaspect", "-osdlevel", String.valueOf(osdlevel), "-ss", String.valueOf(seekTime), media2 };
        }
        seekTime = 0;
        proc = Runtime.getRuntime().exec(cmd);
        final InputStream lOut1 = proc.getErrorStream();
        final InputStream lOut2 = proc.getInputStream();
        OutputStream = proc.getOutputStream();
        final Runnable lPrinter1 = new Runnable() {

            public void run() {
                try {
                    final BufferedReader lReader = new BufferedReader(new InputStreamReader(lOut1));
                    for (String l = lReader.readLine(); l != null & isPlay; l = lReader.readLine()) {
                    // System.out.println("ERROR "+l);
                    }
                } catch (Throwable t) {
                    t.printStackTrace();
                }
            }
        };
        /*
			 * new Thread(){ public void run(){ PrintStream s = new
			 * PrintStream(proc.getOutputStream()); while(true){
			 * s.print("GGGGGGGGGGGGGG"); s.flush(); try { Thread.sleep(10); }
			 * catch (InterruptedException e) { e.printStackTrace(); } } }
			 * }.start();
			 */
        final Runnable lPrinter2 = new Runnable() {

            int i = 0;

            boolean b = true;

            boolean continuePlay = false;

            public void run() {
                try {
                    // System.out.println("rrrrrrrrrrrrrrrrrrr");
                    final BufferedReader lReader = new BufferedReader(new InputStreamReader(lOut2));
                    for (String l = lReader.readLine(); l != null & isPlay; l = lReader.readLine()) {
                        // System.out.println("RT "+l);
                        if (l.equals("Exiting... (End of file)")) {
                            continuePlay = true;
                        }
                        if (l.length() >= 7) {
                            String lsub = l.substring(0, 7);
                            if (lsub.equals("Exiting")) {
                                wDisplay.syncExec(new Runnable() {

                                    public void run() {
                                        wDisplay.syncExec(new Runnable() {

                                            public void run() {
                                                stopPlay();
                                            }
                                        });
                                    }
                                });
                            }
                        }
                        if (i < 300) {
                            if (l.length() >= 10) {
                                String s0 = l.substring(0, 2);
                                if (s0.equals("ID")) {
                                    if (l.length() >= 10) {
                                        String s2 = l.substring(0, 9);
                                        if (s2.equals("ID_LENGTH")) {
                                            int index = l.indexOf(".");
                                            String s1 = l.substring(10, index);
                                            length = Integer.valueOf(s1);
                                            int ds = length;
                                            int d0 = ds / 3600;
                                            int d1 = Math.abs(d0 * 60 - ds / 60);
                                            int d2 = ds % 60;
                                            StringBuffer str2 = new StringBuffer();
                                            if (d0 < 10) {
                                                str2.append(0);
                                            }
                                            str2.append(d0);
                                            str2.append(":");
                                            if (d1 < 10) {
                                                str2.append(0);
                                            }
                                            str2.append(d1);
                                            str2.append(":");
                                            if (d2 < 10) {
                                                str2.append(0);
                                            }
                                            str2.append(d2);
                                            lengthStr = str2.toString();
                                        }
                                    }
                                    if (l.length() >= 11) {
                                        String s1 = l.substring(0, 11);
                                        if (s1.equals("ID_FILENAME")) {
                                            final String path = l.substring(12);
                                            @SuppressWarnings("unused") int index = -1;
                                            int i = 0;
                                            int index5 = path.indexOf('/');
                                            int index6 = path.indexOf('\\');
                                            if (index5 != -1) {
                                                while (true) {
                                                    i = path.indexOf('/', i + 1);
                                                    if (i != -1) {
                                                        index = i;
                                                    } else {
                                                        break;
                                                    }
                                                }
                                            }
                                            if (index6 != -1) {
                                                while (true) {
                                                    i = path.indexOf('\\', i + 1);
                                                    if (i != -1) {
                                                        index = i;
                                                    } else {
                                                        break;
                                                    }
                                                }
                                            }
                                            wDisplay.asyncExec(new Runnable() {

                                                public void run() {
                                                    String name = path;
                                                    int maxNameLength = 20;
                                                    if (path.length() > maxNameLength) {
                                                        name = "..." + path.substring(path.length() - maxNameLength);
                                                    }
                                                    wShell.setText(chipInfo + "   " + name);
                                                }
                                            });
                                        }
                                    }
                                    String s5 = l.substring(0, 12);
                                    if (s5.equals("ID_AUDIO_NCH")) {
                                        String ch = l.substring(13);
                                        channel = Integer.valueOf(ch);
                                    }
                                    if (l.length() >= 11) {
                                        String s6 = l.substring(0, 11);
                                        if (s6.equals("ID_AUDIO_ID")) {
                                            String ch = l.substring(12);
                                            audioStream = Integer.valueOf(ch);
                                            if (audioStream > 1) {
                                                button_6.setForeground(java.awt.Color.BLUE);
                                            }
                                        }
                                    }
                                    if (l.length() >= 14) {
                                        String s3 = l.substring(0, 14);
                                        if (s3.equals("ID_VIDEO_WIDTH")) {
                                            String s1 = l.substring(15);
                                            width = Integer.valueOf(s1);
                                        }
                                    }
                                    if (l.length() >= 15) {
                                        String s4 = l.substring(0, 15);
                                        if (s4.equals("ID_VIDEO_HEIGHT")) {
                                            String s1 = l.substring(16);
                                            heigth = Integer.valueOf(s1);
                                            stdwh = (float) width / (float) heigth;
                                            wDisplay.asyncExec(new Runnable() {

                                                public void run() {
                                                    shellWidth = width;
                                                    shellHeigth = heigth + bottomBlank;
                                                    if (embed) {
                                                        applet.reSetSize(shellWidth, shellHeigth);
                                                        wShell.setLocation(0, 0);
                                                    }
                                                    // wShell.setSize(shellWidth,shellHeigth);
                                                    reSizeCanvas();
                                                }
                                            });
                                        }
                                    }
                                    if (l.startsWith("ID_CLIP_INFO_VALUE0=")) {
                                        haveChipInfo = true;
                                        int index = l.indexOf("=");
                                        if (index > 0) {
                                            chipInfo = l.substring(index + 1);
                                            if (chipInfo.length() > 20) {
                                                chipInfo = chipInfo.substring(0, 20) + "...";
                                            }
                                        }
                                    }
                                }
                            }
                            i++;
                        }
                        if (l.length() > 70) {
                            String s2 = l.substring(0, 2);
                            if (s2.equals("A:")) {
                                if (b) {
                                    if (mute) {
                                        if (proc != null) {
                                            PrintStream s = new PrintStream(proc.getOutputStream());
                                            String command = null;
                                            command = "mute " + 1 + "\n";
                                            s.print(command);
                                            s.flush();
                                        }
                                    } else {
                                        setVolume(slider_1.getValue());
                                    }
                                    b = false;
                                }
                                int index = l.indexOf(".");
                                String s3 = l.substring(2, index);
                                int index2 = 0;
                                while (true) {
                                    int index3 = s3.indexOf(" ", index2);
                                    if (index3 != -1) {
                                        index2 = index3 + 1;
                                    } else {
                                        break;
                                    }
                                }
                                String s4 = s3.substring(index2);
                                playOffset = Integer.valueOf(s4);
                                SaveLastPlayThread.trySaveLastplayTime(media, playOffset);
                                int ds = playOffset;
                                int d0 = ds / 3600;
                                int d1 = Math.abs(d0 * 60 - ds / 60);
                                int d2 = ds % 60;
                                StringBuffer str2 = new StringBuffer();
                                if (d0 < 10) {
                                    str2.append(0);
                                }
                                str2.append(d0);
                                str2.append(":");
                                if (d1 < 10) {
                                    str2.append(0);
                                }
                                str2.append(d1);
                                str2.append(":");
                                if (d2 < 10) {
                                    str2.append(0);
                                }
                                str2.append(d2);
                                if (ds > 0) {
                                    label_1.setVisible(true);
                                }
                                label_3.setText(" " + str2 + " / " + lengthStr);
                                // double
                                // sel=((double)e.getX()/((double)progressBar.getWidth()-4))*(double)progressBar.getMaximum();
                                sel = (playOffset / (double) length) * (double) progressBar.getMaximum();
                                playActiveTime = System.currentTimeMillis();
                                if (lockPaint) {
                                    // "+sel+" "+lockPosition);
                                    if (Math.abs(playOffset - lockPosition) < 30) {
                                        // System.out.println("WWWWWWW"+playOffset+"
                                        // "+sel+" "+lockPosition);
                                        unLock();
                                    }
                                }
                                if (playOffset == length + 1) {
                                    int i = shareList.getSelectedIndex();
                                    shareList.setSelectedIndex(i + 1);
                                    Object ob = shareList.getSelectedValue();
                                    if (ob != null) {
                                        String str = ob.toString();
                                        if (!str.equals(media)) {
                                            media = str;
                                            try {
                                                playNewFile();
                                            } catch (IOException e1) {
                                                e1.printStackTrace();
                                            }
                                        }
                                    }
                                }
                                if (autoSeekThread.isStart) {
                                    progressBar.setValue((int) sel);
                                }
                            }
                        }
                    }
                    if (continuePlay) {
                        new Thread() {

                            public void run() {
                                try {
                                    Thread.sleep(100);
                                } catch (InterruptedException e) {
                                    e.printStackTrace();
                                }
                                int n = shareList.getSelectedIndex();
                                shareList.setSelectedIndex(n + 1);
                                Object ob2 = shareList.getSelectedValue();
                                if (ob2 != null) {
                                    String str = ob2.toString();
                                    if (!str.equals(media)) {
                                        media = str;
                                        try {
                                            playNewFile();
                                        } catch (IOException e1) {
                                        }
                                    }
                                }
                            }
                        }.start();
                    }
                } catch (Throwable t) {
                    t.printStackTrace();
                }
            }
        };
        t1 = new Thread(lPrinter1);
        t2 = new Thread(lPrinter2);
        t1.start();
        t2.start();
    }
}
