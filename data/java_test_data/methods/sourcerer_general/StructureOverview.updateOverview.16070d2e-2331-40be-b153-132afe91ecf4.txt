public void updateOverview() {
    // Clears the current overview
    removeAll();
    if (player == null)
        return;
    setLayout(new GridLayout(1, 1));
    playersStructures = player.getBasesArray();
    String[] columnNames = { "Type", "CurHP/MaxHP", "View Range", "Off. Damage", "Def. Damage", "X,Y", "Prod Rate", "Job" };
    final Object[][] data = new Object[playersStructures.length][numStructuresAttributes];
    for (int i = 0; i < playersStructures.length; i++) {
        Base base = playersStructures[i];
        if (base.getStructureType() == StructureType.BASE)
            data[i][0] = "Base";
        else
            data[i][0] = "Base Group";
        data[i][1] = base.getCurrentHP() + "/" + base.getMaxHP();
        data[i][2] = base.getViewDistance() + "";
        data[i][3] = base.getAttackPower() + "";
        data[i][4] = base.getDefensivePower() + "";
        if (base.getStructureType() == StructureType.BASE)
            data[i][5] = base.getPosition().getX() + "," + base.getPosition().getY();
        else
            data[i][5] = "-,-";
        data[i][6] = base.getProductionRate() + "";
        String unitName = "";
        UnitType uType = base.beingBuilt();
        if (uType == null) {
            unitName = "None";
        } else {
            switch(uType) {
                case COLONIST:
                    unitName = "Colonist";
                    break;
                case EXPLORER:
                    unitName = "Explorer";
                    break;
                case MELEE:
                    unitName = "Melee";
                    break;
                case RANGED:
                    unitName = "Ranged";
                    break;
            }
        }
        data[i][7] = unitName;
    }
    table = new ourTable(data, columnNames);
    uneditableCellsModel ucm = new uneditableCellsModel(columnNames, data);
    table.setModel(ucm);
    table.removeEditor();
    JScrollPane scrollpane = new JScrollPane(table);
    add(scrollpane);
    validate();
    repaint();
}
