@Override
public List<Empresa> getEmpresaPorRazonSocial(String razonSocial, boolean aplicarLike) throws DaoException {
    if (razonSocial == null) {
        throw new DaoException("consultorio.dao.error.1102", locale);
    }
    List<Empresa> empresas = null;
    Session hs = null;
    Transaction htx = null;
    SessionFactory hsf = null;
    razonSocial = razonSocial.toUpperCase(locale);
    try {
        hsf = HibernateUtil.getSessionFactory();
        hs = hsf.getCurrentSession();
        htx = hs.beginTransaction();
        Query hqlQuery = null;
        StringBuilder query = new StringBuilder();
        query.append("select e from Empresa e where ");
        query.append("UPPER(e.razonSocial) ");
        if (aplicarLike) {
            query.append("like :razonSocial");
        } else {
            query.append("= :razonSocial");
        }
        hqlQuery = hs.createQuery(query.toString());
        if (aplicarLike) {
            StringBuffer param01 = new StringBuffer("%").append(razonSocial).append("%");
            hqlQuery.setParameter("razonSocial", param01.toString(), Hibernate.STRING);
        } else {
            hqlQuery.setParameter("razonSocial", razonSocial, Hibernate.STRING);
        }
        empresas = hqlQuery.list();
        htx.commit();
    } catch (HibernateException e) {
        if (htx != null && htx.isActive()) {
            try {
                htx.rollback();
            } catch (HibernateException e2) {
                throw new DaoException("consultorio.dao.error.0001", locale);
            }
        }
        empresas = new ArrayList<Empresa>();
        e.printStackTrace();
        throw new DaoException(e.hashCode(), e.getMessage());
    }
    return empresas;
}
