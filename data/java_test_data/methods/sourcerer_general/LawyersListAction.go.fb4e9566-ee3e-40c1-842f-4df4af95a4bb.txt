@Override
protected String go() throws Exception {
    // System.out.println("resultType=========="+this.resultType);
    candel = super.getLoginUser().hasRight("lawyersDelete");
    canins = super.getLoginUser().hasRight("lawyersCreateEditPre");
    canupd = super.getLoginUser().hasRight("lawyersCreateEditPre");
    CommonDatas.getGroups();
    this.datavisible.getVisibleDatas(this.getLoginUser(), false);
    DetachedCriteria detachedCriteria = DetachedCriteria.forClass(Lawyers.class).add(Restrictions.ge("lawyertype", 0));
    ;
    System.out.println("0002552187:::" + cardno);
    // detachedCriteria.add(Restrictions.eq("lawyertype", lawyertype));
    if (lawyername != null && !"".equals(lawyername))
        detachedCriteria.add(Restrictions.like("lawyername", lawyername, MatchMode.START));
    if (cardno != null && !"".equals(cardno))
        detachedCriteria.add(Restrictions.eq("cardno", cardno));
    if (certno != null && !"".equals(certno))
        detachedCriteria.add(Restrictions.eq("certno", certno));
    if (lawyerno != null && !"".equals(lawyerno))
        detachedCriteria.add(Restrictions.eq("lawyerno", lawyerno));
    if (systemno != null && !"".equals(systemno))
        detachedCriteria.add(Restrictions.eq("systemno", systemno));
    if (hascardno == 1) {
        // 1未分配卡
        detachedCriteria.add(Restrictions.or(Restrictions.isNull("cardno"), Restrictions.eq("cardno", "")));
    } else if (hascardno == 2) {
        // 有卡
        detachedCriteria.add(Restrictions.and(Restrictions.isNotNull("cardno"), Restrictions.ne("cardno", "")));
    }
    SysRole role = this.getLoginUser().getSysRole();
    if (role != null) {
        Set<SysRoleVisible> rolevisibles = role.getSysRoleVisibles();
        SysRoleVisible rolevisible = null;
        for (SysRoleVisible v : rolevisibles) {
            if (v.getThetable().equalsIgnoreCase("lawyers")) {
                rolevisible = v;
                break;
            }
        }
        // 权限判断了
        if (rolevisible != null) {
            String field = "officeid";
            if (rolevisible.getThefield().equals("theoffice"))
                field = "officeid";
            else if (rolevisible.getThefield().equals("directunion"))
                field = "cityid";
            else if (rolevisible.getThefield().equals("provinceunion"))
                field = "provinceid";
            detachedCriteria.add(Restrictions.eq(rolevisible.getThefield(), PropertyUtils.getProperty(this.getLoginUser(), field)));
        }
    }
    if (datavisible.getOfficeid() != 0) {
        detachedCriteria.add(Restrictions.eq("theoffice", datavisible.getOfficeid()));
    } else if (datavisible.getCityid() != 0) {
        detachedCriteria.add(Restrictions.eq("directunion", datavisible.getCityid()));
    } else if (datavisible.getProvinceid() != 0) {
        detachedCriteria.add(Restrictions.eq("provinceunion", datavisible.getProvinceid()));
    }
    if (resultType != null && resultType.equals("cardnolist")) {
        detachedCriteria.addOrder(Order.desc("systemno"));
    } else {
        detachedCriteria.addOrder(Order.desc("lawyerid"));
    }
    BasicService service = (BasicService) getBean("basicService");
    if (resultType.equals("list")) {
        this.page = service.findPageByCriteria(detachedCriteria, pageSize, pageNo);
        return SUCCESS;
    } else if (resultType.equals("excel")) {
        this.page = service.findPageByCriteria(detachedCriteria, Integer.MAX_VALUE, 1);
        return "excel";
    } else {
        if (resultType.equals("cardnolist"))
            this.page = service.findPageByCriteria(detachedCriteria, pageSize, pageNo);
        else
            this.page = service.findPageByCriteria(detachedCriteria, Integer.MAX_VALUE, 1);
        // return "cardnolist";
        return resultType;
    }
}
