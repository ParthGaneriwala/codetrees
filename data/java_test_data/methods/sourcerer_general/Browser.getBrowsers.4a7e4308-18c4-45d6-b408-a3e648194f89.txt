private static String[] getBrowsers() {
    String[] exec = null;
    if (OperatingSystem.getOperatingSystemType() == OperatingSystemType.WINDOWS) {
        // OS = Windows ... that is easy
        exec = new String[] { "rundll32 url.dll,FileProtocolHandler {0}" };
    } else if (OperatingSystem.getOperatingSystemType() == OperatingSystemType.OSX) {
        // OS = MacOS ... MacOS also provides a command for opening
        // a default browser
        Vector<String> browsers = new Vector<String>();
        try {
            Process p = Runtime.getRuntime().exec("which open");
            if (p.waitFor() == 0) {
                browsers.add("open {0}");
            }
        } catch (IOException e) {
        } catch (InterruptedException e) {
        }
        if (browsers.size() == 0) {
            exec = null;
        } else {
            exec = (String[]) browsers.toArray(new String[0]);
        }
    } else {
        /*
			 * OS = Linux ... etc.
			 * 
			 * Linux does not provide a generic command so it is up to us to
			 * find some browsers.
			 * 
			 * Order of search (note that the first of those browsers is used so
			 * the order is importiant): - Free desktop xdg-open, Mozilla Firefox (firefox,
			 * mozilla-firefox, firebird) - Mozilla (mozilla) - Opera (opera) -
			 * Galeon (galeon) - Konqueror (konqueror) - Netscape (netscape) -
			 * Lynx (lynx, links; must also have xterm)
			 */
        Vector<String> browsers = new Vector<String>();
        try {
            Process p = Runtime.getRuntime().exec("which xdg-open");
            if (p.waitFor() == 0) {
                browsers.add("xdg-open {0}");
            }
        } catch (IOException e) {
        } catch (InterruptedException e) {
        }
        try {
            Process p = Runtime.getRuntime().exec("which firefox");
            if (p.waitFor() == 0) {
                browsers.add("firefox {0}");
            }
        } catch (IOException e) {
        } catch (InterruptedException e) {
        }
        try {
            Process p = Runtime.getRuntime().exec("which mozilla-firefox");
            if (p.waitFor() == 0) {
                browsers.add("mozilla-firefox {0}");
            }
        } catch (IOException e) {
        } catch (InterruptedException e) {
        }
        try {
            Process p = Runtime.getRuntime().exec("which firebird");
            if (p.waitFor() == 0) {
                // browsers.add("firebird -remote openURL({0})");
                browsers.add("firebird {0}");
            }
        } catch (IOException e) {
        } catch (InterruptedException e) {
        }
        try {
            Process p = Runtime.getRuntime().exec("which mozilla");
            if (p.waitFor() == 0) {
                browsers.add("mozilla -remote openURL({0})");
                browsers.add("mozilla {0}");
            }
        } catch (IOException e) {
        } catch (InterruptedException e) {
        }
        try {
            Process p = Runtime.getRuntime().exec("which opera");
            if (p.waitFor() == 0) {
                browsers.add("opera -remote openURL({0})");
                browsers.add("opera {0}");
            }
        } catch (IOException e) {
        } catch (InterruptedException e) {
        }
        try {
            Process p = Runtime.getRuntime().exec("which galeon");
            if (p.waitFor() == 0) {
                browsers.add("galeon {0}");
            }
        } catch (IOException e) {
        } catch (InterruptedException e) {
        }
        try {
            Process p = Runtime.getRuntime().exec("which konqueror");
            if (p.waitFor() == 0) {
                browsers.add("konqueror {0}");
            }
        } catch (IOException e) {
        } catch (InterruptedException e) {
        }
        try {
            Process p = Runtime.getRuntime().exec("which netscape");
            if (p.waitFor() == 0) {
                browsers.add("netscape -remote openURL({0})");
                browsers.add("netscape {0}");
            }
        } catch (IOException e) {
        } catch (InterruptedException e) {
        }
        try {
            Process p = Runtime.getRuntime().exec("which xterm");
            if (p.waitFor() == 0) {
                p = Runtime.getRuntime().exec("which lynx");
                if (p.waitFor() == 0) {
                    browsers.add("xterm -e lynx {0}");
                }
            }
        } catch (IOException e) {
        } catch (InterruptedException e) {
        }
        try {
            Process p = Runtime.getRuntime().exec("which xterm");
            if (p.waitFor() == 0) {
                p = Runtime.getRuntime().exec("which links");
                if (p.waitFor() == 0) {
                    browsers.add("xterm -e links {0}");
                }
            }
        } catch (IOException e) {
        } catch (InterruptedException e) {
        }
        if (browsers.size() == 0) {
            exec = null;
        } else {
            exec = (String[]) browsers.toArray(new String[0]);
        }
    }
    return exec;
}
