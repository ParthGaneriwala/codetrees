private void configure(final MasterDetailTablePanel view) {
    {
        // Create the component beans
        ISingleSelectionListCobean<LitBook> tableCobean;
        {
            DefaultSingleSelectionTableInitializer<LitBook> initializer = new DefaultSingleSelectionTableInitializer<LitBook>();
            initializer.setCoTable(view.getTable());
            initializer.setCoFilterInput(view.getFilterText());
            initializer.setColumnDescs(ColumnDesc.createFilterableSortableColumnDescs("title,Title", "year,Publishing Year", "author.name, Author"));
            tableCobean = initializer.initialize();
        }
        ICobean<String> titleCobean;
        {
            DefaultTextInitializer<String> initializer = new DefaultTextInitializer<String>();
            initializer.setCoTextComponent(view.getTitleTextField());
            initializer.setCoFailureComponent(view.getFailureTextField());
            titleCobean = initializer.initialize();
        }
        ICobean<Integer> yearCobean;
        {
            DefaultTextInitializer<Integer> initializer = new DefaultTextInitializer<Integer>();
            initializer.setCoTextComponent(view.getYearTextField());
            initializer.setConverter(new IntTextConverter());
            initializer.setCoFailureComponent(view.getFailureTextField());
            initializer.setFailureBackgroundColor(DefaultTextInitializer.COLOR_YELLOW);
            yearCobean = initializer.initialize();
        }
        ICobean<String> authorCobean;
        {
            DefaultTextInitializer<String> initializer = new DefaultTextInitializer<String>();
            initializer.setCoTextComponent(view.getAuthorTextField());
            initializer.setCoFailureComponent(view.getFailureTextField());
            authorCobean = initializer.initialize();
        }
        // Bind the component beans to the model.
        {
            BoundPropBinding binding = new BoundPropBinding();
            binding.setModelPath("books");
            binding.setCompProperty("value");
            model = binding.bind(model, tableCobean);
        }
        {
            BoundPropBinding binding = new BoundPropBinding();
            binding.setModelPath("selectedBook");
            binding.setCompProperty("selectedValue");
            model = binding.bind(model, tableCobean);
        }
        {
            BoundPropBinding binding = new BoundPropBinding();
            binding.setModelPath("selectedBook.title");
            binding.setCompProperty("value");
            model = binding.bind(model, titleCobean);
        }
        {
            BoundPropBinding binding = new BoundPropBinding();
            binding.setModelPath("selectedBook.year");
            binding.setCompProperty("value");
            model = binding.bind(model, yearCobean);
        }
        {
            BoundPropBinding binding = new BoundPropBinding();
            binding.setModelPath("selectedBook.author.name");
            binding.setCompProperty("value");
            model = binding.bind(model, authorCobean);
        }
    }
}
