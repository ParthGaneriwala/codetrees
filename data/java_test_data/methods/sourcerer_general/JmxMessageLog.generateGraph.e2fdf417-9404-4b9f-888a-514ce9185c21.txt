protected byte[] generateGraph(List<MessageInfo> messages, String xslUri, boolean includeMsg) throws IOException {
    ByteArrayOutputStream os = new ByteArrayOutputStream();
    OutputStreamWriter out = new OutputStreamWriter(os);
    out.write("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n");
    if (xslUri != null)
        out.write("<?xml-stylesheet href=\"" + xslUri + "\" type=\"text/xsl\"?>\n");
    out.write("<data>\n");
    out.write("\t<hosts>\n");
    Map<String, Integer> hostsMap = new HashMap<String, Integer>();
    Iterator<MessageInfo> it = messages.iterator();
    int indexLocal = -1;
    int index = 1;
    while (it.hasNext()) {
        MessageInfo info = it.next();
        if (!hostsMap.containsKey(info.getLocalKey())) {
            if (indexLocal == -1) {
                out.write("\t\t<host>");
                String alias = _alias.get(info.getLocalKey());
                out.write(alias == null ? "Cipango" : alias);
                out.write("</host>\n");
                indexLocal = index++;
            }
            hostsMap.put(info.getLocalKey(), indexLocal);
        }
        if (!hostsMap.containsKey(info.getRemoteKey())) {
            out.write("\t\t<host>");
            String alias = _alias.get(info.getRemoteKey());
            out.write(alias == null ? info.getRemote() : alias);
            out.write("</host>\n");
            hostsMap.put(info.getRemoteKey(), index++);
        }
    }
    out.write("\t</hosts>\n");
    it = messages.iterator();
    out.write("\t<messages>\n");
    while (it.hasNext()) {
        MessageInfo info = it.next();
        out.write("\t\t<message from=\"");
        if (info.getDirection() == IN) {
            out.write(String.valueOf(hostsMap.get(info.getRemoteKey())));
            out.write("\" to=\"");
            out.write(String.valueOf(hostsMap.get(info.getLocalKey())));
            out.write("\">\n");
        } else {
            out.write(String.valueOf(hostsMap.get(info.getLocalKey())));
            out.write("\" to=\"");
            out.write(String.valueOf(hostsMap.get(info.getRemoteKey())));
            out.write("\">\n");
        }
        out.write("\t\t\t<name>");
        out.write(info.getShortName());
        out.write("</name>\n");
        out.write("\t\t\t<date>");
        out.write(info.getFormatedDate());
        out.write("</date>\n");
        if (includeMsg) {
            StringBuilder sb = new StringBuilder(info.getMessage().toString());
            replaceAll(sb, "<", "&lt;");
            replaceAll(sb, ">", "&gt;");
            String msg = sb.toString();
            int nbLines = 1;
            for (int i = 0; i < msg.length(); i++) if (msg.charAt(i) == '\n')
                nbLines++;
            out.write("\t\t\t<content nbLines=\"" + nbLines + "\">");
            out.write(msg);
            out.write("</content>\n");
        }
        out.write("\t\t</message>\n");
    }
    out.write("\t</messages>\n");
    out.write("</data>\n");
    out.flush();
    return os.toByteArray();
}
