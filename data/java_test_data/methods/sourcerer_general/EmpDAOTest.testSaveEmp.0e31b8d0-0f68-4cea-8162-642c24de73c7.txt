public void testSaveEmp() {
    Calendar calendar = Calendar.getInstance();
    calendar.clear();
    EmpDTO empDTO = null;
    // insert
    List<EmpDTO> insertEmpDTOList = new ArrayList<EmpDTO>();
    for (int i = 0; i < 2; i++) {
        empDTO = new EmpDTO();
        empDTO.setEname("BOMBER");
        empDTO.setJob("FA");
        empDTO.setMgr(7839);
        calendar.set(2001, 2, 1, 12, 00, 00);
        empDTO.setHireDate(Calendar.getInstance().getTime());
        empDTO.setSal(5000);
        empDTO.setComm(0);
        empDTO.setDeptNo(20);
        insertEmpDTOList.add(empDTO);
    }
    // update
    List<EmpDTO> updateEmpDTOList = new ArrayList<EmpDTO>();
    empDTO = new EmpDTO();
    empDTO.setEmpNo(8003);
    empDTO.setEname("BOMBER *");
    empDTO.setJob("SA");
    empDTO.setMgr(7839);
    calendar.set(2001, 2, 1, 12, 00, 00);
    empDTO.setHireDate(Calendar.getInstance().getTime());
    empDTO.setSal(5000);
    empDTO.setComm(0);
    empDTO.setDeptNo(20);
    updateEmpDTOList.add(empDTO);
    empDTO = new EmpDTO();
    empDTO.setEmpNo(8004);
    empDTO.setEname("BOMBER *");
    empDTO.setJob("SA");
    empDTO.setMgr(7839);
    calendar.set(2001, 2, 1, 12, 00, 00);
    empDTO.setHireDate(Calendar.getInstance().getTime());
    empDTO.setSal(5000);
    empDTO.setComm(0);
    empDTO.setDeptNo(20);
    updateEmpDTOList.add(empDTO);
    // delete
    List<EmpDTO> deleteEmpDTOList = new ArrayList<EmpDTO>();
    empDTO = new EmpDTO();
    empDTO.setEmpNo(8003);
    deleteEmpDTOList.add(empDTO);
    empDTO = new EmpDTO();
    empDTO.setEmpNo(8004);
    deleteEmpDTOList.add(empDTO);
    AffectedRowCountDTO affectedRowCount = null;
    try {
        affectedRowCount = this.empDAO.saveEmp(insertEmpDTOList, updateEmpDTOList, deleteEmpDTOList);
    } catch (Exception e) {
        e.printStackTrace();
    }
    assertEquals(2, affectedRowCount.getInsertedRowCount());
    assertEquals(2, affectedRowCount.getUpdatedRowCount());
    assertEquals(2, affectedRowCount.getDeletedRowCount());
}
