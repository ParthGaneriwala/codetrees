private JMenuBar createMenuBar() {
    // Create the menu bar and a menu;
    JMenuBar bar = new JMenuBar();
    JMenu menu = new JMenu("File");
    menu.setMnemonic(KeyEvent.VK_F);
    bar.add(menu);
    /**
     * Menu Item Creation
     */
    JMenuItem item = new JMenuItem("New Game");
    item.setAccelerator(KeyStroke.getKeyStroke("ctrl N"));
    item.setMnemonic(KeyEvent.VK_N);
    item.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            String input = (String) JOptionPane.showInputDialog(board, "Enter the remote host ip: ", "New  Game", JOptionPane.PLAIN_MESSAGE, null, null, "127.0.0.1");
            if (input != null) {
                System.out.println("DEBUG: " + input);
                newGame(input, true);
            }
        }
    });
    menu.add(item);
    item = new JMenuItem("Resign Game");
    item.setAccelerator(KeyStroke.getKeyStroke("ctrl R"));
    item.setMnemonic(KeyEvent.VK_S);
    item.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            int choice = JOptionPane.showOptionDialog(board, "Do you wish to resign?", "Resign?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (choice == JOptionPane.YES_OPTION) {
                if (sender != null) {
                    sender.close();
                }
                board.lock();
            }
        }
    });
    menu.add(item);
    item = new JMenuItem("Request Undo");
    item.setAccelerator(KeyStroke.getKeyStroke("ctrl Z"));
    item.setMnemonic(KeyEvent.VK_U);
    item.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            undoMove();
        }
    });
    menu.add(item);
    menu.addSeparator();
    menu.add(item);
    menu.addSeparator();
    item = new JMenuItem("Quit");
    item.setAccelerator(KeyStroke.getKeyStroke("ctrl Q"));
    item.setMnemonic(KeyEvent.VK_Q);
    item.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            int choice = JOptionPane.showOptionDialog(board, "Do you wish to quit?", "Quit?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (choice == JOptionPane.YES_OPTION) {
                if (sender != null) {
                    sender.close();
                }
                receiver.close();
                System.out.println("EXITING?");
                System.exit(0);
            }
        }
    });
    menu.add(item);
    return bar;
}
