public void onSubmit() {
    try {
        String batch = (String) batchModel.getObject();
        String no = (String) noModel.getObject();
        String studentId = batch + "-" + no;
        String password = (String) passwdModel.getObject();
        String newPassword = md5.md5(password);
        String officer = (String) officerModel.getObject();
        String semester = (String) semesterModel.getObject();
        String fromYear = (String) fromSchoolYearModel.getObject();
        String toYear = (String) toSchoolYearModel.getObject();
        String yearLevel = (String) yearLevelModel.getObject();
        String firstName = (String) firstNameModel.getObject();
        String middleName = (String) middleNameModel.getObject();
        String lastName = (String) lastNameModel.getObject();
        String uploader = ((Sessions) getSession()).getDesc();
        Date today = new Date();
        Timestamp timestamp = new Timestamp(today.getTime());
        String ts = timestamp.toString();
        Account acc = (Account) sqlMap.queryForObject("Account.getAccount", studentId);
        Account b = (Account) sqlMap.queryForObject("Account.getUserId", officer);
        int uid = b.getUserId(officer);
        Account c = new Account();
        System.out.println(acc);
        System.out.println(Integer.toString(uid));
        if (acc != null && Integer.toString(uid) != "") {
            error("Record already exists");
        } else {
            c.setStudent_id(studentId);
            c.setPassword(newPassword);
            c.setUserid(uid);
            String schoolYear = fromYear + "-" + toYear;
            c.setSchoolyear(schoolYear);
            c.setSemester(semester);
            sqlMap.insert("Account.addAccount", c);
            Registered reg = new Registered();
            reg.setSchoolyear(schoolYear);
            reg.setSemester(semester);
            reg.setStudent_id(studentId);
            reg.setStudent_yearlevel(yearLevel);
            reg.setStudent_name(firstName + " " + middleName + " " + lastName);
            reg.setUploader(uploader);
            reg.setDate_created(ts);
            reg.setUploader(uploader);
            sqlMap.insert("Registered.insert", reg);
            StudentInformation si = new StudentInformation();
            si.setDate_created(ts);
            si.setPassword(newPassword);
            si.setStudent_firstName(firstName);
            si.setStudent_middleName(middleName);
            si.setStudent_lastName(lastName);
            si.setStudent_yearlvl(yearLevel);
            si.setStudent_id(studentId);
            sqlMap.insert("StudentInformation.insertInformation", si);
            Logs log = new Logs();
            log.setLog_activity("Add Officer Account:" + officer + " " + studentId);
            log.setLog_officer(uploader);
            log.setLog_time(ts);
            sqlMap.insert("Logs.insert", log);
            AddAccount page = new AddAccount();
            setResponsePage(page);
            error("added");
        }
    } catch (SQLException e) {
        error("Fill up necessary fields");
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
