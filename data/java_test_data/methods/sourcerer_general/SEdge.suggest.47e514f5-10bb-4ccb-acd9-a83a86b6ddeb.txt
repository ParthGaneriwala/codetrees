public SEdge suggest(int sx, int sy) {
    int sindex = 0, cindex = 0, index, lastx, lasty, currx, curry;
    Point p, s;
    suggest_corner = -1;
    suggest_segment = -1;
    suggestion = null;
    lastx = sch.c2s(point(head).x);
    lasty = sch.c2s(point(head).y);
    for (index = 0; index < body.size(); index++) {
        p = (Point) body.get(index);
        currx = sch.c2s(p.x);
        curry = sch.c2s(p.y);
        spoint.x = currx;
        spoint.y = curry;
        /*
             * First check to see if the corner is suggested.  If not, then 
             * proceed to check if the segment is suggested
             */
        if (spoint.distance((double) sx, (double) sy) < 5) {
            suggest_corner = cindex;
            /*
                 * Convert back to schematic coordinates;
                 */
            spoint.x = sch.s2cr(spoint.x);
            spoint.y = sch.s2cr(spoint.y);
            suggestion = spoint;
            return this;
        } else if (CLine.near(lastx, lasty, currx, curry, sx, sy, 1.3)) {
            suggest_segment = sindex;
            /*
                 * We know which segment that is being suggested but we still 
                 * need to know the closest point on that segment from the 
                 * current mouse point, in schematic coordinates so we can 
                 * suggest that point
                 */
            s = closestpoint(lastx, lasty, currx, curry, sx, sy);
            /*
                 * Convert back to schematic coordinates;
                 */
            if (s != null) {
                spoint.x = sch.s2cr(s.x);
                spoint.y = sch.s2cr(s.y);
                suggestion = spoint;
                return this;
            }
        }
        cindex++;
        sindex++;
        lastx = currx;
        lasty = curry;
    }
    currx = sch.c2s(point(tail).x);
    curry = sch.c2s(point(tail).y);
    if (CLine.near(lastx, lasty, currx, curry, sx, sy, 1.3)) {
        suggest_segment = sindex;
        s = closestpoint(lastx, lasty, currx, curry, sx, sy);
        /*
             * Convert back to schematic coordinates;
             */
        if (s != null) {
            spoint.x = sch.s2cr(spoint.x);
            spoint.y = sch.s2cr(spoint.y);
            suggestion = spoint;
            return this;
        }
    }
    return null;
}
