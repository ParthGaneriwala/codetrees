public void endElement(String namespaceURI, String sName, String qName) throws SAXException {
    nl();
    emit("END_ELM: ");
    emit("</" + sName + ">");
    if ("namespace".equals(qName)) {
        // mapping of namespaces from imported file
        namespaces.put(lastStr.toString().trim(), nsKey);
        // WikiArticle.addNamespace(nsKey.intValue(), lastStr.trim());
        if (nsKey.intValue() == 14) {
            ns14 = lastStr.toString().trim();
        }
        if (nsKey.intValue() == 6) {
            ns6 = lastStr.toString().trim();
        }
    }
    if ("title".equals(qName)) {
        pageName = lastStr.toString().trim();
    }
    if ("text".equals(qName)) {
        pageText = lastStr.toString().trim();
    }
    if ("page".equals(qName)) {
        // Create Topic
        String sNamespace = "";
        int namespace = 0;
        // get wiki namespace
        int pos = pageName.indexOf(':');
        if (pos > -1) {
            sNamespace = pageName.substring(0, pos);
            if (namespaces.containsKey(sNamespace)) {
                namespace = ((Integer) namespaces.get(sNamespace)).intValue();
            } else {
                // unknown namespace
                namespace = -1;
            }
        } else {
            // main namespace
            namespace = 0;
        }
        // preprocess text of topic to fit JAMWiki
        pageText = preprocessText(pageText);
        Topic topic = new Topic();
        topic.setName(convertArticleNameFromWikipediaToJAMWiki(pageName));
        topic.setVirtualWiki(virtualWiki);
        topic.setTopicContent(pageText);
        TopicVersion topicVersion = new TopicVersion(user, authorIpAddress, "imported", pageText);
        // manage mapping bitween MediaWiki and JAMWiki namespaces
        topic.setTopicType(convertNamespaceFromMediaWikiToJAMWiki(namespace));
        // Store topic in database
        try {
            ParserOutput parserOutput = ParserUtil.parserOutput(pageText, virtualWiki, pageName);
            WikiBase.getDataHandler().writeTopic(topic, topicVersion, parserOutput.getCategories(), parserOutput.getLinks(), true, null);
            this.processedTopicName = topic.getName();
        } catch (Exception e) {
            throw new SAXException(e);
        }
    }
    indentLevel--;
}
