public static PlayerKeyListener createPlayerKeyListener(int playerID) {
    String playerfilePath = customPath + playerID + ".txt";
    File defaultkeyFile = new File(defaultPath);
    File playerkeyFile = new File(playerfilePath);
    FileReader fr;
    BufferedReader br;
    String[] customKeyMap = new String[256];
    String[] defaultKeyMap = new String[256];
    for (int j = 0; j < 256; j++) {
        defaultKeyMap[j] = new String();
        customKeyMap[j] = new String();
    }
    /**
     * Read the default file to populate the key
     */
    try {
        fr = new FileReader(defaultkeyFile);
        br = new BufferedReader(fr);
        int index;
        String line = new String();
        String[] temp;
        for (int i = 0; i < numKeys; i++) {
            if ((line = br.readLine()) == null) {
                IOException e2 = new IOException("File is missing data");
                throw e2;
            } else {
                temp = line.split(": ");
                index = Integer.parseInt(temp[1]);
                defaultKeyMap[index] = temp[0];
                customKeyMap[index] = temp[0];
            }
        }
    } catch (FileNotFoundException e) {
        System.out.println(defaultPath + " not found");
        return null;
    } catch (IOException e) {
        System.out.println("IOException occured.");
        System.out.println(e.getMessage());
        return null;
    }
    /**
     * Read the player's file to overwrite the default keys
     */
    try {
        playerkeyFile.createNewFile();
        fr = new FileReader(playerkeyFile);
        br = new BufferedReader(fr);
        int index;
        String line = new String();
        String[] temp;
        for (int i = 0; i < numKeys; i++) {
            if ((line = br.readLine()) == null) {
                break;
            } else {
                temp = line.split(": ");
                index = Integer.parseInt(temp[1]);
                for (int k = 0; k < 256; k++) {
                    if (customKeyMap[k].equals(temp[0])) {
                        customKeyMap[k] = new String();
                        break;
                    }
                }
                customKeyMap[index] = temp[0];
            }
        }
        // System.out.println(buffer);
        return new PlayerKeyListener(defaultKeyMap, customKeyMap, playerID);
    } catch (FileNotFoundException e) {
        System.out.println("File not found");
        return null;
    } catch (IOException e) {
        System.out.println("IOException occured.");
        System.out.println(e.getMessage());
        return null;
    }
}
