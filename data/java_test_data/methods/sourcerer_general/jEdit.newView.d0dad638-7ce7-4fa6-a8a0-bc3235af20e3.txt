public static View newView(View view, Buffer buffer, View.ViewConfig config) {
    PerspectiveManager.setPerspectiveDirty(true);
    try {
        if (view != null) {
            view.showWaitCursor();
            view.getEditPane().saveCaretInfo();
        }
        View newView = new View(buffer, config);
        addViewToList(newView);
        if (!config.plainView) {
            DockableWindowManager wm = newView.getDockableWindowManager();
            if (config.top != null && config.top.length() != 0)
                wm.showDockableWindow(config.top);
            if (config.left != null && config.left.length() != 0)
                wm.showDockableWindow(config.left);
            if (config.bottom != null && config.bottom.length() != 0)
                wm.showDockableWindow(config.bottom);
            if (config.right != null && config.right.length() != 0)
                wm.showDockableWindow(config.right);
        }
        newView.pack();
        if (config.width != 0 && config.height != 0) {
            Rectangle desired = new Rectangle(config.x, config.y, config.width, config.height);
            if (OperatingSystem.isX11() && Debug.GEOMETRY_WORKAROUND) {
                new GUIUtilities.UnixWorkaround(newView, "view", desired, config.extState);
            } else {
                newView.setBounds(desired);
                newView.setExtendedState(config.extState);
            }
        } else
            newView.setLocationRelativeTo(view);
        EditBus.send(new ViewUpdate(newView, ViewUpdate.CREATED));
        newView.setVisible(true);
        // show tip of the day
        if (newView == viewsFirst) {
            newView.getTextArea().requestFocus();
            // with the -nosettings switch
            if (settingsDirectory != null && getBooleanProperty("firstTime"))
                new HelpViewer("welcome.html");
            else if (jEdit.getBooleanProperty("tip.show"))
                new TipOfTheDay(newView);
            setBooleanProperty("firstTime", false);
        } else
            GUIUtilities.requestFocus(newView, newView.getTextArea());
        return newView;
    } finally {
        if (view != null)
            view.hideWaitCursor();
    }
}
