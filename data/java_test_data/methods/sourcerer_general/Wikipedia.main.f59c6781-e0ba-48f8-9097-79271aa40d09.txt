public static void main(String[] args) throws Exception {
    Wikipedia self = Wikipedia.getInstanceFromArguments(args);
    BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
    while (true) {
        System.out.println("Enter term to search for (or press ENTER to quit): ");
        String term = in.readLine();
        if (term == null || term.equals(""))
            break;
        Vector<String> context = new Vector<String>();
        while (true) {
            System.out.println("Enter context term (or press ENTER to search for \"" + term + "\"):");
            String contextTerm = in.readLine();
            if (contextTerm == null || contextTerm.equals(""))
                break;
            context.add(contextTerm);
        }
        TextProcessor tp = null;
        if (self.isAnchor(term, tp)) {
            System.out.println("All articles for \"" + term + "\":");
            SortedVector<Article> articles = self.getWeightedArticles(term, tp);
            for (Article article : articles) System.out.println(" - " + article);
            String cs = "";
            String[] ca = new String[context.size()];
            if (context.size() > 0) {
                int index = 0;
                for (String ct : context) {
                    cs = cs + ct + ", ";
                    ca[index] = ct;
                    index++;
                }
                cs = cs.substring(0, cs.length() - 2);
            }
            System.out.println("\nBest article for \"" + term + "\" given {" + cs + "} as context: ");
            Article bestArticle = (Article) self.getWeightedArticles(term, tp, ca).first();
            System.out.println(" - " + bestArticle);
            System.out.println("\nDetails for Article " + bestArticle);
            System.out.println(" - Anchors:");
            for (AnchorText at : bestArticle.getAnchorTexts()) {
                System.out.println("   - " + at.getText() + " (used " + at.getCount() + " times)");
            }
            System.out.println(" - Redirects:");
            for (Redirect r : bestArticle.getRedirects()) System.out.println("   - " + r);
            System.out.println(" - Translations:");
            HashMap<String, String> translations = bestArticle.getTranslations();
            for (String lang : translations.keySet()) {
                System.out.println("   - " + lang + ", " + translations.get(lang));
            }
            System.out.println(" - Parent categories:");
            for (Category c : bestArticle.getParentCategories()) System.out.println("   - " + c);
            System.out.println(" - Articles linked to:");
            for (Article a : bestArticle.getLinksOut()) System.out.println("   - " + a);
        } else {
            System.out.println("I have no idea what you are talking about");
        }
    }
}
