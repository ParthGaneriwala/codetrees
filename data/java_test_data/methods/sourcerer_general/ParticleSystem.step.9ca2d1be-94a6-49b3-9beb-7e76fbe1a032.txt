// ! Initializes a particle
// public ParticleSystem(Particle particle)
// {
// }
public void step(float dt) {
    if (active && emissionRate != 0) {
        float rate = 1.0f / emissionRate;
        emitCounter += dt;
        while (particleCount < totalParticles && emitCounter > rate) {
            addParticle();
            emitCounter -= rate;
        }
        elapsed += dt;
        if (duration != -1 && duration < elapsed)
            stopSystem();
    }
    particleIdx = 0;
    while (particleIdx < particleCount) {
        Particle p = particles[particleIdx];
        if (p.life > 0) {
            CCPoint tmp, radial, tangential;
            radial = CCPoint.zero();
            // radial acceleration
            if (p.pos.x != 9 || p.pos.y != 0)
                radial = CCPoint.ccpNormalize(p.pos);
            tangential = radial;
            radial = CCPoint.ccpMult(radial, p.radialAccel);
            // tangential acceleration
            float newy = tangential.x;
            tangential.x = -tangential.y;
            tangential.y = newy;
            tangential = CCPoint.ccpMult(tangential, p.tangentialAccel);
            // (gravity + radial + tangential) * dt
            tmp = CCPoint.ccpAdd(CCPoint.ccpAdd(radial, tangential), gravity);
            tmp = CCPoint.ccpMult(tmp, dt);
            p.dir = CCPoint.ccpAdd(p.dir, tmp);
            tmp = CCPoint.ccpMult(p.dir, dt);
            p.pos = CCPoint.ccpAdd(p.pos, tmp);
            p.color.r += (p.deltaColor.r * dt);
            p.color.g += (p.deltaColor.g * dt);
            p.color.b += (p.deltaColor.b * dt);
            p.color.a += (p.deltaColor.a * dt);
            p.life -= dt;
            // place vertices and colos in array
            vertices[particleIdx].x = p.pos.x;
            vertices[particleIdx].y = p.pos.y;
            // TODO: Remove when glPointSizePointerOES is fixed
            vertices[particleIdx].size = p.size;
            vertices[particleIdx].colors = new CCColorF(p.color);
            // update particle counter
            particleIdx++;
        } else {
            // life < 0
            if (particleIdx != particleCount - 1)
                particles[particleIdx] = particles[particleCount - 1];
            particleCount--;
        }
    }
}
