public void create(Concurso concurso) throws PreexistingEntityException, Exception {
    if (concurso.getRecursos() == null) {
        concurso.setRecursos(new HashSet<Recurso>());
    }
    if (concurso.getInscricoes() == null) {
        concurso.setInscricoes(new HashSet<Inscricao>());
    }
    if (concurso.getFatosRelevantes() == null) {
        concurso.setFatosRelevantes(new HashSet<FatoRelevante>());
    }
    if (concurso.getArquivos() == null) {
        concurso.setArquivos(new HashSet<Arquivo>());
    }
    if (concurso.getProvas() == null) {
        concurso.setProvas(new HashSet<Prova>());
    }
    EntityManager em = null;
    try {
        em = getEntityManager();
        em.getTransaction().begin();
        Set<Recurso> attachedRecursos = new HashSet<Recurso>();
        for (Recurso recursosRecursoToAttach : concurso.getRecursos()) {
            recursosRecursoToAttach = em.getReference(recursosRecursoToAttach.getClass(), recursosRecursoToAttach.getId());
            attachedRecursos.add(recursosRecursoToAttach);
        }
        concurso.setRecursos(attachedRecursos);
        Set<Inscricao> attachedInscricoes = new HashSet<Inscricao>();
        for (Inscricao inscricoesInscricaoToAttach : concurso.getInscricoes()) {
            inscricoesInscricaoToAttach = em.getReference(inscricoesInscricaoToAttach.getClass(), inscricoesInscricaoToAttach.getId());
            attachedInscricoes.add(inscricoesInscricaoToAttach);
        }
        concurso.setInscricoes(attachedInscricoes);
        Set<FatoRelevante> attachedFatosRelevantes = new HashSet<FatoRelevante>();
        for (FatoRelevante fatosRelevantesFatoRelevanteToAttach : concurso.getFatosRelevantes()) {
            fatosRelevantesFatoRelevanteToAttach = em.getReference(fatosRelevantesFatoRelevanteToAttach.getClass(), fatosRelevantesFatoRelevanteToAttach.getId());
            attachedFatosRelevantes.add(fatosRelevantesFatoRelevanteToAttach);
        }
        concurso.setFatosRelevantes(attachedFatosRelevantes);
        Set<Arquivo> attachedArquivos = new HashSet<Arquivo>();
        for (Arquivo arquivosArquivoToAttach : concurso.getArquivos()) {
            arquivosArquivoToAttach = em.getReference(arquivosArquivoToAttach.getClass(), arquivosArquivoToAttach.getId());
            attachedArquivos.add(arquivosArquivoToAttach);
        }
        concurso.setArquivos(attachedArquivos);
        Set<Prova> attachedProvas = new HashSet<Prova>();
        for (Prova provasProvaToAttach : concurso.getProvas()) {
            provasProvaToAttach = em.getReference(provasProvaToAttach.getClass(), provasProvaToAttach.getId());
            attachedProvas.add(provasProvaToAttach);
        }
        concurso.setProvas(attachedProvas);
        em.persist(concurso);
        for (Recurso recursosRecurso : concurso.getRecursos()) {
            Concurso oldConcursoOfRecursosRecurso = recursosRecurso.getConcurso();
            recursosRecurso.setConcurso(concurso);
            recursosRecurso = em.merge(recursosRecurso);
            if (oldConcursoOfRecursosRecurso != null) {
                oldConcursoOfRecursosRecurso.getRecursos().remove(recursosRecurso);
                oldConcursoOfRecursosRecurso = em.merge(oldConcursoOfRecursosRecurso);
            }
        }
        for (Inscricao inscricoesInscricao : concurso.getInscricoes()) {
            Concurso oldConcursoOfInscricoesInscricao = inscricoesInscricao.getConcurso();
            inscricoesInscricao.setConcurso(concurso);
            inscricoesInscricao = em.merge(inscricoesInscricao);
            if (oldConcursoOfInscricoesInscricao != null) {
                oldConcursoOfInscricoesInscricao.getInscricoes().remove(inscricoesInscricao);
                oldConcursoOfInscricoesInscricao = em.merge(oldConcursoOfInscricoesInscricao);
            }
        }
        for (FatoRelevante fatosRelevantesFatoRelevante : concurso.getFatosRelevantes()) {
            Concurso oldConcursoOfFatosRelevantesFatoRelevante = fatosRelevantesFatoRelevante.getConcurso();
            fatosRelevantesFatoRelevante.setConcurso(concurso);
            fatosRelevantesFatoRelevante = em.merge(fatosRelevantesFatoRelevante);
            if (oldConcursoOfFatosRelevantesFatoRelevante != null) {
                oldConcursoOfFatosRelevantesFatoRelevante.getFatosRelevantes().remove(fatosRelevantesFatoRelevante);
                oldConcursoOfFatosRelevantesFatoRelevante = em.merge(oldConcursoOfFatosRelevantesFatoRelevante);
            }
        }
        for (Arquivo arquivosArquivo : concurso.getArquivos()) {
            Concurso oldConcursoOfArquivosArquivo = arquivosArquivo.getConcurso();
            arquivosArquivo.setConcurso(concurso);
            arquivosArquivo = em.merge(arquivosArquivo);
            if (oldConcursoOfArquivosArquivo != null) {
                oldConcursoOfArquivosArquivo.getArquivos().remove(arquivosArquivo);
                oldConcursoOfArquivosArquivo = em.merge(oldConcursoOfArquivosArquivo);
            }
        }
        for (Prova provasProva : concurso.getProvas()) {
            Concurso oldConcursoOfProvasProva = provasProva.getConcurso();
            provasProva.setConcurso(concurso);
            provasProva = em.merge(provasProva);
            if (oldConcursoOfProvasProva != null) {
                oldConcursoOfProvasProva.getProvas().remove(provasProva);
                oldConcursoOfProvasProva = em.merge(oldConcursoOfProvasProva);
            }
        }
        em.getTransaction().commit();
    } catch (Exception ex) {
        if (findConcurso(concurso.getId()) != null) {
            throw new PreexistingEntityException("Concurso " + concurso + " already exists.", ex);
        }
        throw ex;
    } finally {
        if (em != null) {
            em.close();
        }
    }
}
