public ArrayList<SeatBO> getAllAvailableSeats(TicketRate ticketRate, int numberOfSeats, int eventID) {
    BookedTicket bookedTicket = new BookedTicket();
    // bookedTicket.setEventID(ticketRate.getEventID());
    // bookedTicket.setVenueID(ticketRate.getVenueID());
    // bookedTicket.setSeatCategoryID(ticketRate.getSeatCategoryID());
    // bookedTicket.setIsPaid(true);
    // bookedTicket.setIsCancelled(false);
    Calendar c = DateTimeHelper.getCurrentDateTimeCalendar();
    c.add(Calendar.MINUTE, EXPIRE_TIME);
    Timestamp ts = new Timestamp(c.getTimeInMillis());
    bookedTicket.setSeatCategoryID(ticketRate.getSeatCategoryID());
    bookedTicket.setBookedDate(ts);
    BookedTicketDAO bookedTicketDAO = DAOFactory.getInstance().getBookedTicketDAO();
    bookedTicketDAO.updateBookedTicketStatus(bookedTicket);
    Collection<BookedTicket> bookedTickets = bookedTicketDAO.getAvailableBookedTicketsDO(bookedTicket);
    Seat criteria = new Seat();
    criteria.setSeatCategoryID(ticketRate.getSeatCategoryID());
    criteria.setVenueID(ticketRate.getVenueID());
    Seat seat = DAOFactory.getInstance().getSeatDAO().findSeat(criteria);
    // }
    if (seat.getNumberOfSeats() - bookedTickets.size() < numberOfSeats) {
        return null;
    }
    int seatNumber = 0;
    int bookNumber = numberOfSeats;
    ArrayList<SeatBO> seatBOs = new ArrayList<SeatBO>();
    while (seatNumber < seat.getNumberOfSeats()) {
        boolean deleted = false;
        for (BookedTicket ticket : bookedTickets) {
            if (seatNumber == ticket.getSeatNumber() && eventID == ticket.getEventID()) {
                bookedTickets.remove(ticket);
                seatNumber++;
                deleted = true;
                break;
            }
        }
        if (deleted) {
            continue;
        }
        SeatBO seatBO = new SeatBO();
        seatBO.setSeatNumber(seatNumber);
        seatBO.setPrice(ticketRate.getPrice());
        if (bookNumber > 0) {
            seatBO.setSelected(true);
            bookNumber--;
        } else {
            seatBO.setSelected(false);
        }
        seatBOs.add(seatBO);
        seatNumber++;
    }
    return seatBOs;
}
