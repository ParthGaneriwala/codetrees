private void unzipHelp() {
    Log.d("offlinehelp", "start unzip");
    ZipInputStream in = new ZipInputStream(getResources().openRawResource(R.raw.helppages));
    File appRootFolder = getFilesDir();
    Log.d("appRootFolder abs. path=", appRootFolder.getAbsolutePath());
    Log.d("can write=", String.valueOf(appRootFolder.canWrite()));
    Log.d("separator=", File.separator);
    try {
        File helpRootFolder = new File(appRootFolder + File.separator + "helppages");
        if (!helpRootFolder.exists()) {
            helpRootFolder.mkdir();
        }
        ZipEntry ze;
        while ((ze = in.getNextEntry()) != null) {
            if (ze.isDirectory()) {
                File file = new File(appRootFolder.getAbsolutePath() + File.separator + ze.getName());
                if (!file.exists()) {
                    file.mkdirs();
                }
            } else {
                Log.d("write file=", ze.getName());
                copyInputStream(in, new BufferedOutputStream(new FileOutputStream(appRootFolder + File.separator + ze.getName())));
            }
        }
        SharedPreferences sharedPreferences = getPreferences(Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = sharedPreferences.edit();
        editor.putBoolean(UNZIPPED_FLAG, true);
        editor.commit();
    } catch (FileNotFoundException e) {
        Log.e("Offlinehelp", "", e);
    } catch (IOException e) {
        Log.e("Offlinehelp", "", e);
    } finally {
        try {
            if (in != null) {
                in.close();
            }
        } catch (IOException e) {
            Log.e("Offlinehelp", "", e);
        }
    }
}
