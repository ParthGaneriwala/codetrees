public void deleteLevelTwo(Long id, String levelTwoFileRealName, String levelOneRealDir, String levelTwoJsRealFileName, String levelOneJsRealFileName) throws Exception {
    try {
        openCon();
        con.setAutoCommit(false);
        SectionDAO sectionDAO = new SectionDAO(con);
        // 查询二级栏目
        Section levelTwo = sectionDAO.queryById(id);
        // 删除二级栏目
        sectionDAO.delete(id);
        // 检查是否还有二级栏目
        List<Section> levelTwoSections = sectionDAO.queryLevelTwo(levelTwo.getParentId());
        Section levelOne = sectionDAO.queryById(levelTwo.getParentId());
        if (levelTwoSections.size() == 0) {
            // 如果没有二级栏目则将一级栏目的fileName置空
            levelOne.setFileName(null);
            sectionDAO.updateSection(levelOne);
        } else {
            Section two = sectionDAO.queryMinInsertDateLevelTwoByParentId(levelTwo.getParentId());
            levelOne.setFileName(two.getFileName());
            sectionDAO.updateSection(levelOne);
        }
        // 如果是静态文件，则删除指定文件(注：动态文件不能通过后台管理程序删除）
        if (levelTwo.getStatus() == 0) {
            FileUtils.deleteFile(levelTwoFileRealName);
        }
        // 重新生成leveltwo.js
        // 查询删除后的二级栏目列表
        // List<Section> levelTwos =
        // sectionDAO.queryLevelTwo(levelTwo.getParentId());
        LevelTwoUtils.createLevelTwoJsFile(levelTwoJsRealFileName, levelTwoSections);
        // 重新生成levelone.js
        List<Section> dbSections = sectionDAO.queryLevelOne();
        // 重新生成levelone.js文件
        LevelOneUtils.createLevelOneSectionsJSFile(levelOneJsRealFileName, dbSections, LevelOneUtils.getStaticLevelOnesInfo());
        con.commit();
    } catch (Exception e) {
        con.rollback();
        e.printStackTrace();
        throw e;
    } finally {
        closeCon();
    }
}
