@SuppressWarnings("null")
protected void removeNodes(HashSet<TrellisItem> nodes) {
    TrellisSlice prevSlice = getPrevious();
    HashSet<TrellisItem> prevItems = null;
    if (prevSlice != null) {
        prevItems = new HashSet<TrellisItem>();
    }
    TrellisSlice nextSlice = getNext();
    HashSet<TrellisItem> nextItems = null;
    HashSet<TrellisItem> nextToRemove = null;
    if (nextSlice != null) {
        nextItems = new HashSet<TrellisItem>();
        nextToRemove = new HashSet<TrellisItem>();
    }
    for (TrellisItem item : nodes) {
        if (prevSlice != null) {
            List<TrellisItem> prevs = curr2prev.get(item);
            if (prevs != null) {
                for (TrellisItem i : prevs) {
                    if (!prevItems.contains(i)) {
                        List<TrellisItem> lst = prev2curr.get(i);
                        lst.removeAll(nodes);
                        prevItems.add(i);
                    }
                }
                curr2prev.remove(item);
            }
        }
        if (nextSlice != null) {
            List<TrellisItem> nexts = nextSlice.prev2curr.get(item);
            if (nexts != null) {
                for (TrellisItem i : nexts) {
                    if (!nextItems.contains(i)) {
                        List<TrellisItem> lst = nextSlice.curr2prev.get(i);
                        lst.removeAll(nodes);
                        if (lst.isEmpty()) {
                            nextToRemove.add(i);
                        }
                        nextItems.add(i);
                    }
                }
                nextSlice.prev2curr.remove(item);
            }
        }
    }
    // elements.removeAll(nodes);
    if (nextToRemove != null && nextToRemove.size() > 0) {
        nextSlice.removeNodes(nextToRemove);
    }
}
