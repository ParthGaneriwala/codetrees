// $ANTLR start "expression5"
public final CompiladoresParser.expression5_return expression5() throws RecognitionException {
    CompiladoresParser.expression5_return retval = new CompiladoresParser.expression5_return();
    retval.start = input.LT(1);
    CommonTree root_0 = null;
    Token set131 = null;
    CompiladoresParser.expression6_return expression6130 = null;
    CompiladoresParser.expression6_return expression6132 = null;
    CommonTree set131_tree = null;
    try {
        dbg.enterRule(getGrammarFileName(), "expression5");
        if (getRuleLevel() == 0) {
            dbg.commence();
        }
        incRuleLevel();
        dbg.location(174, 1);
        try {
            // /home/CIN/fmm/Desktop/grammar/Compiladores.g:174:15: ( expression6 ( ( MULT | DIV ) expression6 )* )
            dbg.enterAlt(1);
            // /home/CIN/fmm/Desktop/grammar/Compiladores.g:174:17: expression6 ( ( MULT | DIV ) expression6 )*
            {
                root_0 = (CommonTree) adaptor.nil();
                dbg.location(174, 17);
                pushFollow(FOLLOW_expression6_in_expression51445);
                expression6130 = expression6();
                state._fsp--;
                adaptor.addChild(root_0, expression6130.getTree());
                dbg.location(174, 29);
                // /home/CIN/fmm/Desktop/grammar/Compiladores.g:174:29: ( ( MULT | DIV ) expression6 )*
                try {
                    dbg.enterSubRule(32);
                    loop32: do {
                        int alt32 = 2;
                        try {
                            dbg.enterDecision(32);
                            int LA32_0 = input.LA(1);
                            if (((LA32_0 >= MULT && LA32_0 <= DIV))) {
                                alt32 = 1;
                            }
                        } finally {
                            dbg.exitDecision(32);
                        }
                        switch(alt32) {
                            case 1:
                                dbg.enterAlt(1);
                                // /home/CIN/fmm/Desktop/grammar/Compiladores.g:174:30: ( MULT | DIV ) expression6
                                {
                                    dbg.location(174, 30);
                                    set131 = (Token) input.LT(1);
                                    set131 = (Token) input.LT(1);
                                    if ((input.LA(1) >= MULT && input.LA(1) <= DIV)) {
                                        input.consume();
                                        root_0 = (CommonTree) adaptor.becomeRoot((CommonTree) adaptor.create(set131), root_0);
                                        state.errorRecovery = false;
                                    } else {
                                        MismatchedSetException mse = new MismatchedSetException(null, input);
                                        dbg.recognitionException(mse);
                                        throw mse;
                                    }
                                    dbg.location(174, 44);
                                    pushFollow(FOLLOW_expression6_in_expression51457);
                                    expression6132 = expression6();
                                    state._fsp--;
                                    adaptor.addChild(root_0, expression6132.getTree());
                                }
                                break;
                            default:
                                break loop32;
                        }
                    } while (true);
                } finally {
                    dbg.exitSubRule(32);
                }
            }
            retval.stop = input.LT(-1);
            retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
        } catch (RecognitionException re) {
            reportError(re);
            recover(input, re);
            retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);
        } finally {
        }
        dbg.location(174, 57);
    } finally {
        dbg.exitRule(getGrammarFileName(), "expression5");
        decRuleLevel();
        if (getRuleLevel() == 0) {
            dbg.terminate();
        }
    }
    return retval;
}
