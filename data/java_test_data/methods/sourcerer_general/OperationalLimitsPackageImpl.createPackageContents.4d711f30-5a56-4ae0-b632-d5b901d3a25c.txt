public void createPackageContents() {
    if (isCreated)
        return;
    isCreated = true;
    // Create classes and their features
    activePowerLimitEClass = createEClass(ACTIVE_POWER_LIMIT);
    createEReference(activePowerLimitEClass, ACTIVE_POWER_LIMIT__VALUE);
    operationalLimitEClass = createEClass(OPERATIONAL_LIMIT);
    createEReference(operationalLimitEClass, OPERATIONAL_LIMIT__TYPE);
    apparentPowerLimitEClass = createEClass(APPARENT_POWER_LIMIT);
    createEReference(apparentPowerLimitEClass, APPARENT_POWER_LIMIT__VALUE);
    branchGroupEClass = createEClass(BRANCH_GROUP);
    createEReference(branchGroupEClass, BRANCH_GROUP__MAXIMUM_ACTIVE_POWER);
    createEReference(branchGroupEClass, BRANCH_GROUP__MAXIMUM_REACTIVE_POWER);
    createEReference(branchGroupEClass, BRANCH_GROUP__MINIMUM_ACTIVE_POWER);
    createEReference(branchGroupEClass, BRANCH_GROUP__MINIMUM_REACTIVE_POWER);
    createEReference(branchGroupEClass, BRANCH_GROUP__MONITOR_ACTIVE_POWER);
    createEReference(branchGroupEClass, BRANCH_GROUP__MONITOR_REACTIVE_POWER);
    branchGroupTerminalEClass = createEClass(BRANCH_GROUP_TERMINAL);
    createEReference(branchGroupTerminalEClass, BRANCH_GROUP_TERMINAL__POSITIVE_FLOW_IN);
    currentLimitEClass = createEClass(CURRENT_LIMIT);
    createEReference(currentLimitEClass, CURRENT_LIMIT__VALUE);
    operationalLimitSetEClass = createEClass(OPERATIONAL_LIMIT_SET);
    operationalLimitTypeEClass = createEClass(OPERATIONAL_LIMIT_TYPE);
    createEReference(operationalLimitTypeEClass, OPERATIONAL_LIMIT_TYPE__ACCEPTABLE_DURATION);
    createEAttribute(operationalLimitTypeEClass, OPERATIONAL_LIMIT_TYPE__DIRECTION);
    voltageLimitEClass = createEClass(VOLTAGE_LIMIT);
    createEReference(voltageLimitEClass, VOLTAGE_LIMIT__VALUE);
    // Create enums
    operationalLimitDirectionKindEEnum = createEEnum(OPERATIONAL_LIMIT_DIRECTION_KIND);
}
