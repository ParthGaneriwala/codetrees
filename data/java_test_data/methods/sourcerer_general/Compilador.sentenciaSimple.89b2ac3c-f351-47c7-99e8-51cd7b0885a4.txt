private void sentenciaSimple(String idH) throws ErrorLexico, ErrorArchivo, ErrorSintactico, ErrorSemantico, Exception {
    boolean porValorH, predefH = true;
    sintetizados sint, sint2;
    entrada ent;
    int li, ls, nivel, off, longitud;
    ArrayList listaFormalesH = null;
    Arreglo arr;
    tipo tipoH;
    if (numeroTokenActual == Token.ASIGNACION) {
        ent = TS.getEntrada(idH);
        match(Token.ASIGNACION);
        porValorH = true;
        if ((ent instanceof Variable) || (ent instanceof Parametro)) {
            if ((((Variable) ent).getTipo() instanceof Entero) || (((Variable) ent).getTipo() instanceof Booleano) || (((Variable) ent).getTipo() instanceof Subrango)) {
                sint = expresion(porValorH, "");
                if (compatibles(((Variable) ent).getTipo(), sint.getTipoS())) {
                    if (((Variable) ent).getTipo() instanceof Subrango) {
                        li = ((Subrango) ((Variable) ent).getTipo()).getLimiteInf();
                        ls = ((Subrango) ((Variable) ent).getTipo()).getLimiteSup();
                        generador.genInst2ArgCte("", generador.CONT, li, ls);
                    }
                    if ((ent instanceof Parametro) && (((Parametro) ent).getPorValor() == false)) {
                        generador.genInst2ArgCte("", generador.ALVI, ((Parametro) ent).getNivelLexico(), ((Parametro) ent).getOffSet());
                    } else {
                        generador.genInst2ArgCte("", generador.ALVL, ((Variable) ent).getNivelLexico(), ((Variable) ent).getOffSet());
                    }
                } else {
                    String t1, t2;
                    t1 = ErrorSemantico.construirMsj(((Variable) ent).getTipo().toString());
                    t2 = ErrorSemantico.construirMsj(sint.getTipoS().toString());
                    throw new ErrorSemantico(ErrorSemantico.TIPO_INCOMP, getNumeroLinea(), getNumeroColumna(), t1, t2);
                }
            } else if (((Variable) ent).getTipo() instanceof Arreglo) {
                // generador.genInst1ArgCte("",generador.APCT, 0);
                sint = expresion(porValorH, "");
                if (compatibles(((Variable) ent).getTipo(), sint.getTipoS())) {
                    nivel = ((Variable) ent).getNivelLexico();
                    off = ((Variable) ent).getOffSet();
                    longitud = sint.getTipoS().getSize();
                    if ((ent instanceof Parametro) && (((Parametro) ent).getPorValor() == false)) {
                        generador.genInst3ArgCte("", generador.POAI, nivel, off, longitud);
                    } else {
                        generador.genInst3ArgCte("", generador.POAR, nivel, off, longitud);
                    }
                } else {
                    String t1, t2;
                    t1 = ErrorSemantico.construirMsj(((Variable) ent).getTipo().toString());
                    t2 = ErrorSemantico.construirMsj(sint.getTipoS().toString());
                    throw new ErrorSemantico(ErrorSemantico.TIPO_INCOMP, getNumeroLinea(), getNumeroColumna(), t1, t2);
                }
            }
        } else if ((ent instanceof Funcion) && ((TS.getNivelActual() - 1) == (((Funcion) ent).getNivelLexico()))) {
            sint = expresion(porValorH, "");
            if (compatibles(((Funcion) ent).getRetorno(), sint.getTipoS())) {
                generador.genInst2ArgCte("", generador.ALVL, ((Funcion) ent).getNivelLexico() + 1, ((Funcion) ent).getOffset());
            } else {
                String t1, t2;
                t1 = ErrorSemantico.construirMsj(((Funcion) ent).getRetorno().toString());
                t2 = ErrorSemantico.construirMsj(sint.getTipoS().toString());
                throw new ErrorSemantico(ErrorSemantico.TIPO_INCOMP, getNumeroLinea(), getNumeroColumna(), t1, t2);
            }
        } else {
            throw new ErrorSemantico(ErrorSemantico.ID_NO_DEC, getNumeroLinea(), getNumeroColumna(), idH);
        }
    } else if (numeroTokenActual == Token.PARENTESISABRE) {
        ent = TS.getEntrada(idH);
        if (ent instanceof Procedimiento) {
            if (esProcPredef(idH)) {
                predefH = true;
                listaFormalesH = new ArrayList();
            } else {
                predefH = false;
                listaFormalesH = ((Procedimiento) ent).getListaParametrosFormales();
            }
            match(Token.PARENTESISABRE);
            ParametrosActuales(idH, predefH, listaFormalesH);
            match(Token.PARENTESISCIERRA);
            if (!predefH) {
                generador.genInst1ArgEtiq("", generador.LLPR, ((Procedimiento) ent).getEtiq());
            }
        } else {
            throw new ErrorSemantico(ErrorSemantico.ID_INV, getNumeroLinea(), getNumeroColumna(), idH);
        }
    } else if (numeroTokenActual == Token.CORCHETEABRE) {
        ent = TS.getEntrada(idH);
        if ((ent instanceof Variable) || (ent instanceof Parametro)) {
            if (((Variable) ent).getTipo() instanceof Arreglo) {
                // generador.genInst1ArgCte("", generador.APCT, 0);
                match(Token.CORCHETEABRE);
                porValorH = true;
                sint = expresion(porValorH, "");
                match(Token.CORCHETECIERRA);
                arr = (Arreglo) ((Variable) ent).getTipo();
                if (compatibles(arr.getTipoIndice(), sint.getTipoS())) {
                    generador.genInst2ArgCte("", generador.CONT, arr.getLimiteInf(), arr.getLimiteSup());
                    generador.genInst1ArgCte("", generador.APCT, arr.getLimiteInf());
                    generador.genInstSinArg("", generador.SUST);
                    // generador.genInst1ArgCte("",generador.APCT, arr.getTipoElem().getSize());
                    // generador.genInstSinArg("", generador.MULT);
                    // generador.genInstSinArg("", generador.SUMA);
                    tipoH = arr.getTipoElem();
                } else {
                    String t1, t2;
                    t1 = ErrorSemantico.construirMsj(arr.getTipoIndice().toString());
                    t2 = ErrorSemantico.construirMsj(sint.getTipoS().toString());
                    throw new ErrorSemantico(ErrorSemantico.TIPO_INCOMP, getNumeroLinea(), getNumeroColumna(), t1, t2);
                }
            } else {
                String t = ErrorSemantico.construirMsj(((Variable) ent).getTipo().toString());
                throw new ErrorSemantico(ErrorSemantico.TIPO_INCOMP, getNumeroLinea(), getNumeroColumna(), "Arreglo", t);
            }
        } else {
            throw new ErrorSemantico("Se esperaba id de Variable o Parametro", getNumeroLinea(), getNumeroColumna(), idH);
        }
        match(Token.ASIGNACION);
        sint2 = expresion(porValorH, "");
        if (compatibles(((Arreglo) (((Variable) ent).getTipo())).getTipoElem(), sint2.getTipoS())) {
            nivel = ((Variable) ent).getNivelLexico();
            off = ((Variable) ent).getOffSet();
            longitud = sint2.getTipoS().getSize();
            if ((ent instanceof Parametro) && (((Parametro) ent).getPorValor() == false)) {
                // generador.genInst3ArgCte("", generador.POAI, nivel, off, longitud);
                generador.genInst2ArgCte("", generador.ALAI, nivel, off);
            } else {
                // generador.genInst3ArgCte("", generador.POAR, nivel, off, longitud);
                generador.genInst2ArgCte("", generador.ALAR, nivel, off);
            }
        } else {
            String t1, t2;
            t1 = ErrorSemantico.construirMsj(((Arreglo) (((Variable) ent).getTipo())).getTipoElem().toString());
            t2 = ErrorSemantico.construirMsj(sint2.getTipoS().toString());
            throw new ErrorSemantico(ErrorSemantico.TIPO_INCOMP, getNumeroLinea(), getNumeroColumna(), t1, t2);
        }
    } else {
        ent = TS.getEntrada(idH);
        if (ent instanceof Procedimiento) {
            if (!TS.esProcPredef(idH)) {
                if (((Procedimiento) ent).getListaParametrosFormales().size() == 0) {
                    listaFormalesH = ((Procedimiento) ent).getListaParametrosFormales();
                    generador.genInst1ArgEtiq("", generador.LLPR, ((Procedimiento) ent).getEtiq());
                } else {
                    throw new ErrorSemantico("Funcion o procedimiento sin Parametros", getNumeroLinea(), getNumeroColumna(), idH);
                }
            } else {
                throw new ErrorSemantico("Funcion o procedimiento predefinido sin Parametros", getNumeroLinea(), getNumeroColumna(), idH);
            }
        } else {
            throw new ErrorSemantico(ErrorSemantico.ID_INV, getNumeroLinea(), getNumeroColumna(), idH);
        }
    }
}
