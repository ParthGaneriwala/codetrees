public final Statement Stat_lf(Token tk) {
    Exp e1, e2;
    Token tk1;
    switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
        case EQUALS:
            jj_consume_token(EQUALS);
            e1 = Exp();
            tk1 = jj_consume_token(CLOSER);
            Assign a = new Assign(new Identifier(tk.image), e1);
            a.beginLine = tk.beginLine;
            a.endLine = tk1.endLine;
            a.beginColumn = tk.beginColumn;
            a.endColumn = tk1.endColumn;
            {
                if (true)
                    return a;
            }
            break;
        case B_OPEN:
            jj_consume_token(B_OPEN);
            e1 = Exp();
            jj_consume_token(B_CLOSE);
            jj_consume_token(EQUALS);
            e2 = Exp();
            tk1 = jj_consume_token(CLOSER);
            ArrayAssign aa = new ArrayAssign(new Identifier(tk.image), e1, e2);
            aa.beginLine = tk.beginLine;
            aa.endLine = tk1.endLine;
            aa.beginColumn = tk.beginColumn;
            aa.endColumn = tk1.endColumn;
            {
                if (true)
                    return aa;
            }
            break;
        default:
            jj_la1[9] = jj_gen;
            jj_consume_token(-1);
            Error.getInstance().addErro("Esperado ( ou = no lugar de " + token.image, token.beginLine);
    }
    return new Block(null);
}
