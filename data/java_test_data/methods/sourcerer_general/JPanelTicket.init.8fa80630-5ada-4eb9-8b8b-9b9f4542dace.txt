public void init(AppView app) throws BeanFactoryException {
    m_App = app;
    dlSystem = (DataLogicSystem) m_App.getBean("com.openbravo.pos.forms.DataLogicSystemCreate");
    dlSales = (DataLogicSales) m_App.getBean("com.openbravo.pos.forms.DataLogicSalesCreate");
    dlCustomers = (DataLogicCustomers) m_App.getBean("com.openbravo.pos.customers.DataLogicCustomersCreate");
    // borramos el boton de bascula si no hay bascula conectada
    if (!m_App.getDeviceScale().existsScale()) {
        m_jbtnScale.setVisible(false);
    }
    m_ticketsbag = getJTicketsBag();
    m_jPanelBag.add(m_ticketsbag.getBagComponent(), BorderLayout.LINE_START);
    add(m_ticketsbag.getNullComponent(), "null");
    m_ticketlines = new JTicketLines(dlSystem.getResourceAsXML("Ticket.Line"));
    m_jPanelCentral.add(m_ticketlines, java.awt.BorderLayout.CENTER);
    m_TTP = new TicketParser(m_App.getDeviceTicket(), dlSystem);
    // Los botones configurables...
    m_jbtnconfig = new JPanelButtons("Ticket.Buttons", this);
    m_jButtonsExt.add(m_jbtnconfig);
    // El panel de los productos o de las lineas...
    catcontainer.add(getSouthComponent(), BorderLayout.CENTER);
    // El modelo de impuestos
    senttax = dlSales.getTaxList();
    senttaxcategories = dlSales.getTaxCategoriesList();
    taxcategoriesmodel = new ComboBoxValModel();
    // ponemos a cero el estado
    stateToZero();
    // inicializamos
    m_oTicket = null;
    m_oTicketExt = null;
}
