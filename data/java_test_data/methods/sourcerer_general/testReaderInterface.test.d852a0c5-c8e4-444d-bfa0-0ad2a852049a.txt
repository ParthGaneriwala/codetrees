void test(Model m1) {
    String test = "testReaderInterface";
    String filebase = "testing/regression/" + test + "/";
    // System.out.println("Beginning " + test);
    int n = 0;
    try {
        n++;
        RDFReader reader = m1.getReader();
        /*
            if (! (reader instanceof com.hp.hpl.jena.rdf.arp.JenaReader ))
                 error(test, n);

            n++; reader = m1.getReader("RDF/XML");
            if (! (reader instanceof com.hp.hpl.jena.rdf.arp.JenaReader ))
                 error(test, n);
            */
        n++;
        reader = m1.getReader("N-TRIPLE");
        if (!(reader instanceof NTripleReader))
            error(test, n);
        n++;
        try {
            m1.setReaderClassName("foobar", "");
            reader = m1.getReader("foobar");
            error(test, n);
        } catch (NoReaderForLangException jx) {
        // that's what we expect
        }
        n++;
        m1.setReaderClassName("foobar", com.hp.hpl.jena.rdf.arp.JenaReader.class.getName());
        reader = m1.getReader("foobar");
        if (!(reader instanceof com.hp.hpl.jena.rdf.arp.JenaReader))
            error(test, n);
        try {
            n++;
            m1.read("http://www.w3.org/2000/10/rdf-tests/rdfcore/" + "rdf-containers-syntax-vs-schema/test001.rdf");
            n++;
            m1.read("http://www.w3.org/2000/10/rdf-tests/rdfcore/" + "rdf-containers-syntax-vs-schema/test001.nt", "N-TRIPLE");
        } catch (JenaException jx) {
            if (jx.getCause() instanceof NoRouteToHostException || jx.getCause() instanceof UnknownHostException || jx.getCause() instanceof ConnectException || jx.getCause() instanceof IOException) {
                logger.warn("Cannot access public internet - part of test not executed");
            } else
                throw jx;
        }
        n++;
        m1.read(ResourceReader.getInputStream(filebase + "1.rdf"), "http://example.org/");
        n++;
        m1.read(ResourceReader.getInputStream(filebase + "2.nt"), "", "N-TRIPLE");
    } catch (Exception e) {
        inError = true;
        logger.error(" test " + test + "[" + n + "]", e);
    }
// System.out.println("End of " + test);
}
