void For() {
    String etiqueta_inicio, etiqueta_sigue_for, etiqueta_fin;
    tupla_id tupla;
    tupla_Tercetos tup_terc;
    Esperado(40);
    Esperado(19);
    Asignaciones();
    etiqueta_inicio = tercetos.darEtiqueta();
    etiqueta_sigue_for = tercetos.darEtiqueta();
    etiqueta_fin = tercetos.darEtiqueta();
    // creamos el terceto para insertar la etiqueta de inicio del for
    terceto_actual = tercetos.InsertarEtiqueta(etiqueta_inicio);
    tup_terc = new tupla_Tercetos(clase_actual, metodo_actual, terceto_actual);
    if (metodo_actual.equals("main"))
        colaMain.add(tup_terc);
    else
        colaTercetos.add(tup_terc);
    // leemos la condicion
    tupla = Expresion();
    if (tupla.getTipo() != 'b')
        SemError("Se esperaba expresion booleana en el for");
    Esperado(31);
    // asignaciones parece haber avanzado mas de lo debido
    // ahora creamos el terceto para ver si la condicion se cumple
    terceto_actual = tercetos.saltoCondicional(tupla.getId(), etiqueta_sigue_for);
    tup_terc = new tupla_Tercetos(clase_actual, metodo_actual, terceto_actual);
    if (metodo_actual.equals("main"))
        colaMain.add(tup_terc);
    else
        colaTercetos.add(tup_terc);
    // salto incondicional a fin si no se cumple
    terceto_actual = tercetos.saltoIncondicional(etiqueta_fin);
    tup_terc = new tupla_Tercetos(clase_actual, metodo_actual, terceto_actual);
    if (metodo_actual.equals("main"))
        colaMain.add(tup_terc);
    else
        colaTercetos.add(tup_terc);
    estoy_for = true;
    // terceto para la etiqueta_sigue_for
    terceto_actual = tercetos.InsertarEtiqueta(etiqueta_sigue_for);
    tup_terc = new tupla_Tercetos(clase_actual, metodo_actual, terceto_actual);
    if (metodo_actual.equals("main"))
        colaMain.add(tup_terc);
    else
        colaTercetos.add(tup_terc);
    problema_del_for = true;
    Asignaciones();
    problema_del_for = false;
    estoy_for = false;
    Esperado(25);
    if (la.kind == 17) {
        Get();
        while (StartOf(7)) {
            Sentencias();
        }
        // añadimos el terceto de la asignacion
        if (metodo_actual.equals("main"))
            colaMain.add(terceto_for);
        else
            colaTercetos.add(terceto_for);
        // etiqueta para volver a la etiqueta_sigue_for
        terceto_actual = tercetos.saltoIncondicional(etiqueta_inicio);
        tup_terc = new tupla_Tercetos(clase_actual, metodo_actual, terceto_actual);
        if (metodo_actual.equals("main"))
            colaMain.add(tup_terc);
        else
            colaTercetos.add(tup_terc);
        Esperado(23);
    } else if (StartOf(7)) {
        Sentencias();
        // añadimos el terceto de la asignacion
        if (metodo_actual.equals("main"))
            colaMain.add(terceto_for);
        else
            colaTercetos.add(terceto_for);
        // etiqueta para volver a la etiqueta_sigue_for
        terceto_actual = tercetos.saltoIncondicional(etiqueta_inicio);
        tup_terc = new tupla_Tercetos(clase_actual, metodo_actual, terceto_actual);
        if (metodo_actual.equals("main"))
            colaMain.add(tup_terc);
        else
            colaTercetos.add(tup_terc);
    } else
        SynErr(45);
    // ponemos la etiqueta del fin del for
    terceto_actual = tercetos.InsertarEtiqueta(etiqueta_fin);
    tup_terc = new tupla_Tercetos(clase_actual, metodo_actual, terceto_actual);
    if (metodo_actual.equals("main"))
        colaMain.add(tup_terc);
    else
        colaTercetos.add(tup_terc);
}
