public void testIsValidCategoria() {
    Calendar calendar = Calendar.getInstance();
    int dia = calendar.getTime().getDate();
    int mes = calendar.getTime().getMonth();
    int anio0 = calendar.getTime().getYear() + 1900;
    calendar.add(Calendar.YEAR, 1);
    int anioNeg = calendar.getTime().getYear() + 1900;
    calendar.add(Calendar.YEAR, -5);
    int anio4 = calendar.getTime().getYear() + 1900;
    calendar.add(Calendar.YEAR, -7);
    int anio11 = calendar.getTime().getYear() + 1900;
    calendar.add(Calendar.YEAR, -1);
    int anio12 = calendar.getTime().getYear() + 1900;
    calendar.add(Calendar.YEAR, -1);
    int anio13 = calendar.getTime().getYear() + 1900;
    calendar.add(Calendar.YEAR, -1);
    int anio14 = calendar.getTime().getYear() + 1900;
    calendar.add(Calendar.YEAR, -5);
    int anio19 = calendar.getTime().getYear() + 1900;
    calendar.add(Calendar.YEAR, -1);
    int anio20 = calendar.getTime().getYear() + 1900;
    calendar.add(Calendar.YEAR, -1);
    int anio21 = calendar.getTime().getYear() + 1900;
    calendar.add(Calendar.YEAR, -1);
    int anio22 = calendar.getTime().getYear() + 1900;
    calendar.add(Calendar.YEAR, -60);
    int anio82 = calendar.getTime().getYear() + 1900;
    // Los socios vitalicios pueden tener cualquier edad
    assertTrue(Validador.isValidCategoria(Categoria.VITALICIO, false, dia, mes, anio0));
    assertTrue(Validador.isValidCategoria(Categoria.VITALICIO, false, dia, mes, anio4));
    assertTrue(Validador.isValidCategoria(Categoria.VITALICIO, false, dia, mes, anio11));
    assertTrue(Validador.isValidCategoria(Categoria.VITALICIO, false, dia, mes, anio12));
    assertTrue(Validador.isValidCategoria(Categoria.VITALICIO, false, dia, mes, anio13));
    assertTrue(Validador.isValidCategoria(Categoria.VITALICIO, false, dia, mes, anio14));
    assertTrue(Validador.isValidCategoria(Categoria.VITALICIO, false, dia, mes, anio19));
    assertTrue(Validador.isValidCategoria(Categoria.VITALICIO, false, dia, mes, anio20));
    assertTrue(Validador.isValidCategoria(Categoria.VITALICIO, false, dia, mes, anio21));
    assertTrue(Validador.isValidCategoria(Categoria.VITALICIO, false, dia, mes, anio22));
    assertTrue(Validador.isValidCategoria(Categoria.VITALICIO, false, dia, mes, anio82));
    // Los menores deben tener entre 0 y 13 incluido
    assertTrue(Validador.isValidCategoria(Categoria.MENOR, false, dia, mes, anio0));
    assertTrue(Validador.isValidCategoria(Categoria.MENOR, false, dia, mes, anio4));
    assertTrue(Validador.isValidCategoria(Categoria.MENOR, false, dia, mes, anio11));
    assertTrue(Validador.isValidCategoria(Categoria.MENOR, false, dia, mes, anio12));
    assertTrue(Validador.isValidCategoria(Categoria.MENOR, false, dia, mes, anio13));
    assertFalse(Validador.isValidCategoria(Categoria.MENOR, false, dia, mes, anio14));
    assertFalse(Validador.isValidCategoria(Categoria.MENOR, false, dia, mes, anio19));
    assertFalse(Validador.isValidCategoria(Categoria.MENOR, false, dia, mes, anio20));
    assertFalse(Validador.isValidCategoria(Categoria.MENOR, false, dia, mes, anio21));
    assertFalse(Validador.isValidCategoria(Categoria.MENOR, false, dia, mes, anio22));
    assertFalse(Validador.isValidCategoria(Categoria.MENOR, false, dia, mes, anio82));
    // Los cadetes deben tener entre 14 y 20 incluido
    assertFalse(Validador.isValidCategoria(Categoria.CADETE, false, dia, mes, anio0));
    assertFalse(Validador.isValidCategoria(Categoria.CADETE, false, dia, mes, anio4));
    assertFalse(Validador.isValidCategoria(Categoria.CADETE, false, dia, mes, anio11));
    assertFalse(Validador.isValidCategoria(Categoria.CADETE, false, dia, mes, anio12));
    assertFalse(Validador.isValidCategoria(Categoria.CADETE, false, dia, mes, anio13));
    assertTrue(Validador.isValidCategoria(Categoria.CADETE, false, dia, mes, anio14));
    assertTrue(Validador.isValidCategoria(Categoria.CADETE, false, dia, mes, anio19));
    assertTrue(Validador.isValidCategoria(Categoria.CADETE, false, dia, mes, anio20));
    assertFalse(Validador.isValidCategoria(Categoria.CADETE, false, dia, mes, anio21));
    assertFalse(Validador.isValidCategoria(Categoria.CADETE, false, dia, mes, anio22));
    assertFalse(Validador.isValidCategoria(Categoria.CADETE, false, dia, mes, anio82));
    // Los mayores deben tener 21 o mas.
    assertFalse(Validador.isValidCategoria(Categoria.MAYOR, false, dia, mes, anio0));
    assertFalse(Validador.isValidCategoria(Categoria.MAYOR, false, dia, mes, anio4));
    assertFalse(Validador.isValidCategoria(Categoria.MAYOR, false, dia, mes, anio11));
    assertFalse(Validador.isValidCategoria(Categoria.MAYOR, false, dia, mes, anio12));
    assertFalse(Validador.isValidCategoria(Categoria.MAYOR, false, dia, mes, anio13));
    assertFalse(Validador.isValidCategoria(Categoria.MAYOR, false, dia, mes, anio14));
    assertFalse(Validador.isValidCategoria(Categoria.MAYOR, false, dia, mes, anio19));
    assertFalse(Validador.isValidCategoria(Categoria.MAYOR, false, dia, mes, anio20));
    assertTrue(Validador.isValidCategoria(Categoria.MAYOR, false, dia, mes, anio21));
    assertTrue(Validador.isValidCategoria(Categoria.MAYOR, false, dia, mes, anio22));
    assertTrue(Validador.isValidCategoria(Categoria.MAYOR, false, dia, mes, anio82));
    // Los socios familiares pueden tener cualquier edad
    assertTrue(Validador.isValidCategoria(Categoria.FAMILIAR, false, dia, mes, anio0));
    assertTrue(Validador.isValidCategoria(Categoria.FAMILIAR, false, dia, mes, anio4));
    assertTrue(Validador.isValidCategoria(Categoria.FAMILIAR, false, dia, mes, anio11));
    assertTrue(Validador.isValidCategoria(Categoria.FAMILIAR, false, dia, mes, anio12));
    assertTrue(Validador.isValidCategoria(Categoria.FAMILIAR, false, dia, mes, anio13));
    assertTrue(Validador.isValidCategoria(Categoria.FAMILIAR, false, dia, mes, anio14));
    assertTrue(Validador.isValidCategoria(Categoria.FAMILIAR, false, dia, mes, anio19));
    assertTrue(Validador.isValidCategoria(Categoria.FAMILIAR, false, dia, mes, anio20));
    assertTrue(Validador.isValidCategoria(Categoria.FAMILIAR, false, dia, mes, anio21));
    assertTrue(Validador.isValidCategoria(Categoria.FAMILIAR, false, dia, mes, anio22));
    assertTrue(Validador.isValidCategoria(Categoria.FAMILIAR, false, dia, mes, anio82));
    assertFalse(Validador.isValidCategoria(Categoria.FAMILIAR, true, dia, mes, anio20));
    assertTrue(Validador.isValidCategoria(Categoria.FAMILIAR, true, dia, mes, anio21));
    assertTrue(Validador.isValidCategoria(Categoria.FAMILIAR, true, dia, mes, anio22));
}
