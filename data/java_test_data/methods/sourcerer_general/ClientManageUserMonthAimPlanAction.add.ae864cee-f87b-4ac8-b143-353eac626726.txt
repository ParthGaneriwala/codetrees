public ActionForward add(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    ClientUserMonthAimPlanForm monthAimPlanForm = (ClientUserMonthAimPlanForm) form;
    UcMembers user = (UcMembers) request.getSession().getAttribute("CLIENT");
    String id = request.getParameter("id");
    try {
        if (id != null && id.length() > 0) {
            UserMonthAimPlan monthAimPlan = monthAimPlanManager.getMonthAimPlan(Integer.parseInt(id));
            monthAimPlan.setUserId(user.getUid());
            monthAimPlan.setYear(new Short(monthAimPlanForm.getYear()));
            monthAimPlan.setMonth(new Short(monthAimPlanForm.getMonth()));
            monthAimPlan.setCareerAim(monthAimPlanForm.getCareerAim());
            monthAimPlan.setCareerPlan(monthAimPlanForm.getCareerPlan());
            monthAimPlan.setFamilyAim(monthAimPlanForm.getFamilyAim());
            monthAimPlan.setFamilyPlan(monthAimPlanForm.getFamilyPlan());
            monthAimPlan.setContactAim(monthAimPlanForm.getContactAim());
            monthAimPlan.setContactPlan(monthAimPlanForm.getContactPlan());
            monthAimPlan.setFinanceAim(monthAimPlanForm.getFamilyAim());
            monthAimPlan.setFinancePlan(monthAimPlanForm.getFinancePlan());
            monthAimPlan.setSpiritAim(monthAimPlanForm.getSpiritAim());
            monthAimPlan.setSpiritPlan(monthAimPlanForm.getSpiritPlan());
            monthAimPlan.setHealthAim(monthAimPlanForm.getHealthAim());
            monthAimPlan.setHealthPlan(monthAimPlanForm.getHealthPlan());
            monthAimPlan.setOtherAim(monthAimPlanForm.getOtherAim());
            monthAimPlan.setOtherPlan(monthAimPlanForm.getOtherPlan());
            monthAimPlanManager.updateMonthAimPlan(monthAimPlan);
        } else {
            UserMonthAimPlan monthAimPlan = new UserMonthAimPlan();
            monthAimPlan.setUserId(user.getUid());
            monthAimPlan.setYear(new Short(monthAimPlanForm.getYear()));
            monthAimPlan.setMonth(new Short(monthAimPlanForm.getMonth()));
            monthAimPlan.setCareerAim(monthAimPlanForm.getCareerAim());
            monthAimPlan.setCareerPlan(monthAimPlanForm.getCareerPlan());
            monthAimPlan.setFamilyAim(monthAimPlanForm.getFamilyAim());
            monthAimPlan.setFamilyPlan(monthAimPlanForm.getFamilyPlan());
            monthAimPlan.setContactAim(monthAimPlanForm.getContactAim());
            monthAimPlan.setContactPlan(monthAimPlanForm.getContactPlan());
            monthAimPlan.setFinanceAim(monthAimPlanForm.getFamilyAim());
            monthAimPlan.setFinancePlan(monthAimPlanForm.getFinancePlan());
            monthAimPlan.setSpiritAim(monthAimPlanForm.getSpiritAim());
            monthAimPlan.setSpiritPlan(monthAimPlanForm.getSpiritPlan());
            monthAimPlan.setHealthAim(monthAimPlanForm.getHealthAim());
            monthAimPlan.setHealthPlan(monthAimPlanForm.getHealthPlan());
            monthAimPlan.setOtherAim(monthAimPlanForm.getOtherAim());
            monthAimPlan.setOtherPlan(monthAimPlanForm.getOtherPlan());
            monthAimPlanManager.addMonthAimPlan(monthAimPlan);
        }
        request.setAttribute("OK_MESSAGE", "�����ɹ�");
        request.setAttribute("RETURN_URL", "ClientManageUserMonthAimPlan.do?act=list&year=" + monthAimPlanForm.getYear() + "&month=" + monthAimPlanForm.getMonth());
        return mapping.findForward("ok");
    } catch (Exception e) {
        e.printStackTrace();
        return mapping.findForward("fail");
    }
}
