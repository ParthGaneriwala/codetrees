public void testInsertProjectUniqueId() throws SQLException {
    String uniqueId = System.currentTimeMillis() + "";
    String title = "Unique Id Test " + uniqueId;
    String projectUniqueId1 = null;
    String projectUniqueId2 = null;
    {
        // Insert project
        Project project = new Project();
        project.setTitle(title);
        project.setShortDescription("Project SQL Test Description");
        project.setRequestDate(new Timestamp(System.currentTimeMillis()));
        project.setGroupId(GROUP_ID);
        project.setEnteredBy(USER_ID);
        project.setModifiedBy(USER_ID);
        assertNotNull(project);
        boolean result = project.insert(db);
        assertTrue("Project was not inserted", result);
        assertNotNull(project.getUniqueId());
        assertEquals("unique-id-test-" + uniqueId, project.getUniqueId());
        projectUniqueId1 = project.getUniqueId();
    }
    {
        // Insert project with same name
        Project project = new Project();
        project.setTitle(title);
        project.setShortDescription("Project SQL Test Description");
        project.setRequestDate(new Timestamp(System.currentTimeMillis()));
        project.setGroupId(GROUP_ID);
        project.setEnteredBy(USER_ID);
        project.setModifiedBy(USER_ID);
        assertNotNull(project);
        boolean result = project.insert(db);
        assertTrue("Project was not inserted", result);
        assertNotNull(project.getUniqueId());
        assertEquals("Incremented uniqueId failed", "unique-id-test-" + uniqueId + "-2", project.getUniqueId());
        projectUniqueId2 = project.getUniqueId();
    }
    {
        // Insert project with same name
        Project project = new Project();
        project.setTitle(title);
        project.setShortDescription("Project SQL Test Description");
        project.setRequestDate(new Timestamp(System.currentTimeMillis()));
        project.setGroupId(GROUP_ID);
        project.setEnteredBy(USER_ID);
        project.setModifiedBy(USER_ID);
        assertNotNull(project);
        boolean result = project.insert(db);
        assertTrue("Project was not inserted", result);
        assertNotNull(project.getUniqueId());
        assertEquals("Incremented uniqueId failed", "unique-id-test-" + uniqueId + "-3", project.getUniqueId());
        projectUniqueId2 = project.getUniqueId();
    }
    // Try to find the previously deleted project
    ProjectList projectList = new ProjectList();
    projectList.setTitle(title);
    projectList.buildList(db);
    assertTrue("Found " + projectList.size() + " projects, instead of 3", projectList.size() == 3);
    for (Project project : projectList) {
        project.delete(db, null);
    }
}
