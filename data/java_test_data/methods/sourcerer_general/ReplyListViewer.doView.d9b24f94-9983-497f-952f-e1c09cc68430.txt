public String doView(RenderRequest request, RenderResponse response) throws Exception {
    // The JSP to show upon success
    String defaultView = VIEW_PAGE;
    String ctx = request.getContextPath();
    // Determine the project container to use
    Project project = findProject(request);
    // Check the user's permissions
    User user = getUser(request);
    if (!ProjectUtils.hasAccess(project.getId(), user, "project-discussion-topics-view")) {
        throw new PortletException("Unauthorized to view in this project");
    }
    // Retrieve parameters
    int topicId = PortalUtils.getPageViewAsInt(request);
    String resetList = request.getParameter("resetList");
    // Build a list of records
    Connection db = useConnection(request);
    // Paging will be used for remembering several list view settings
    if ("true".equals(resetList)) {
    // deletePagedListInfo(request, "projectIssuesInfo");
    }
    PagedListInfo pagedListInfo = getPagedListInfo(request, PAGED_LIST_INFO);
    pagedListInfo.setLink(ctx + "/show/" + project.getUniqueId() + "/topic/" + topicId);
    if (pagedListInfo.getInitializationLevel() == PagedListInfo.LEVEL_INITIALIZED) {
        pagedListInfo.setItemsPerPage(50);
    }
    // Load the topic info
    Topic thisTopic = new Topic(db, topicId, project.getId());
    thisTopic.buildFiles(db);
    request.setAttribute(TOPIC, thisTopic);
    PortalUtils.setGeneratedData(request, TOPIC, thisTopic);
    // Load the forum info
    Forum forum = new Forum(db, thisTopic.getCategoryId(), project.getId());
    request.setAttribute(FORUM, forum);
    // Load the records
    ReplyList replyList = new ReplyList();
    replyList.setPagedListInfo(pagedListInfo);
    replyList.setIssueId(thisTopic.getId());
    replyList.setBuildFiles(true);
    replyList.buildList(db);
    request.setAttribute(REPLY_LIST, replyList);
    // update view counts
    PortalUtils.processSelectHook(request, thisTopic);
    // JSP view
    return defaultView;
}
