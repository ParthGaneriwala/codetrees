protected static int heristic(State state, char myChar) {
    char[][] board = state.getBoard();
    char enyChar = (myChar == Constants.COMP_SYM) ? Constants.PLAY_SYM : Constants.COMP_SYM;
    // Step One !!! Horray first one
    char potWinner = state.getWinner();
    if (potWinner == myChar)
        return 10000;
    else if (potWinner == enyChar) {
        return -10000;
    }
    // Wow that actaully works...
    // Step Two Hard part one
    int result = 0;
    // Test Vertical for AI
    int[] vertical = vertical(board, myChar);
    // System.out.println(state);
    // System.out.println("Vertical Testing: Num 1: " + vertical[0] + " | Num 2: " + vertical[1] +
    // " | Num 3: " + vertical[2]);
    result += vertical[0] * Constants.WEIGHT_AI_ONE;
    result += vertical[1] * Constants.WEIGHT_AI_TWO;
    result += vertical[2] * Constants.WEIGHT_AI_THREE;
    // Repeat for Enemy Vertical
    vertical = vertical(board, enyChar);
    result += vertical[0] * Constants.WEIGHT_PLY_ONE;
    result += vertical[1] * Constants.WEIGHT_PLY_TWO;
    result += vertical[2] * Constants.WEIGHT_PLY_THREE;
    // Test Horizontal for AI
    int[] horizontal = horizontal(board, myChar);
    // System.out.println(state);
    // System.out.println("Horizontal Test: Num 1: " + horizontal[0] + " | Num 2: " + horizontal[1] +
    // " | Num 3: " + horizontal[2]);
    result += horizontal[0] * Constants.WEIGHT_AI_ONE;
    result += horizontal[1] * Constants.WEIGHT_AI_TWO;
    result += horizontal[2] * Constants.WEIGHT_AI_THREE;
    // Repeat for Enemy Horizontal
    horizontal = horizontal(board, enyChar);
    result += horizontal[0] * Constants.WEIGHT_PLY_ONE;
    result += horizontal[1] * Constants.WEIGHT_PLY_TWO;
    result += horizontal[2] * Constants.WEIGHT_PLY_THREE;
    // Test DownDiagnol for AI
    int[] downDiagnol = downDiagnol(board, myChar);
    // System.out.println(state);
    // System.out.println("Down Diagnol Test: Num 1: " + downDiagnol[0] + " | Num 2: " + downDiagnol[1] +
    // " | Num 3: " + downDiagnol[2]);
    result += downDiagnol[0] * Constants.WEIGHT_AI_ONE;
    result += downDiagnol[1] * Constants.WEIGHT_AI_TWO;
    result += downDiagnol[2] * Constants.WEIGHT_AI_THREE;
    // Repeat for Enemy DownDiagnol
    downDiagnol = downDiagnol(board, enyChar);
    result += downDiagnol[0] * Constants.WEIGHT_PLY_ONE;
    result += downDiagnol[1] * Constants.WEIGHT_PLY_TWO;
    result += downDiagnol[2] * Constants.WEIGHT_PLY_THREE;
    // Test UpDiagnol for AI
    int[] upDiagnol = upDiagnol(board, myChar);
    // System.out.println(state);
    // System.out.println("Down Diagnol Test: Num 1: " + downDiagnol[0] + " | Num 2: " + downDiagnol[1] +
    // " | Num 3: " + downDiagnol[2]);
    result += upDiagnol[0] * Constants.WEIGHT_AI_ONE;
    result += upDiagnol[1] * Constants.WEIGHT_AI_TWO;
    result += upDiagnol[2] * Constants.WEIGHT_AI_THREE;
    // Repeat for Enemy DownDiagnol
    upDiagnol = upDiagnol(board, enyChar);
    result += upDiagnol[0] * Constants.WEIGHT_PLY_ONE;
    result += upDiagnol[1] * Constants.WEIGHT_PLY_TWO;
    result += upDiagnol[2] * Constants.WEIGHT_PLY_THREE;
    return result;
}
