public void newInstance() throws DriverException {
    if (className == null || className.length() == 0) {
        throw new DriverException("No class name in ReaderFactory.newInstance()");
    }
    try {
        if (className.compareToIgnoreCase("Alien-9780") == 0) {
            alien9780 = (Alien9780Driver) Class.forName(ReaderType.DRIVER_ALIEN).newInstance();
        } else if (className.compareToIgnoreCase("Ti-S6400") == 0) {
            ti6400 = (TiS6400Driver) Class.forName(ReaderType.DRIVER_TI_S6400).newInstance();
        } else if (className.compareToIgnoreCase("Ti-S251") == 0) {
            ti251 = (TiS251Driver) Class.forName(ReaderType.DRIVER_TI_251B).newInstance();
        } else if (className.compareToIgnoreCase("Ti-7960") == 0) {
            ti7960 = (Ti7960Driver) Class.forName(ReaderType.DRIVER_TI_7960).newInstance();
        } else if (className.compareToIgnoreCase("Mg500") == 0) {
            mg500 = (Mg500Driver) Class.forName(ReaderType.DRIVER_MG500).newInstance();
        } else if (className.compareToIgnoreCase("Kab500") == 0) {
            kab500 = (Kab500Driver) Class.forName(ReaderType.DRIVER_KAB500).newInstance();
        } else if (className.compareToIgnoreCase("Inside") == 0) {
            inside = (InsidePortableDriver) Class.forName(ReaderType.DRIVER_INSIDE).newInstance();
        } else if (className.compareToIgnoreCase("Matrics-AR400") == 0) {
            ar400 = (MatricsAR400Driver) Class.forName(ReaderType.DRIVER_MATRICS_AR400).newInstance();
        } else if (className.compareToIgnoreCase("Hopela-2214") == 0) {
            hopela2214 = (Hopela2214Driver) Class.forName(ReaderType.DRIVER_HOPELA_2214).newInstance();
        } else if (className.compareToIgnoreCase("Hanma-2022") == 0) {
            hanma2022 = (Hanma2022Driver) Class.forName(ReaderType.DRIVER_HANMA_2022).newInstance();
        } else if (className.compareToIgnoreCase("Quanray") == 0) {
            quanray = (QuanrayDriver) Class.forName(ReaderType.DRIVER_QUANRAY).newInstance();
        } else if (className.compareToIgnoreCase("FuDan") == 0) {
            fudan = (FuDanDriver) Class.forName(ReaderType.DRIVER_FUDAN).newInstance();
        } else if (className.compareToIgnoreCase("RW202") == 0) {
            // sunrayetc = (KtiEtcDriver) Class.forName(ReaderType.DRIVER_KTIETC).newInstance();
            rw202 = (RW202Driver) Class.forName(ReaderType.DRIVER_RW202).newInstance();
        } else if (className.compareToIgnoreCase("Delicacy") == 0) {
            delicacy = (DelicacyDriver) Class.forName(ReaderType.DRIVER_DELICACY).newInstance();
        } else if (className.compareToIgnoreCase("HawkVor") == 0) {
            hawkvor = (HawkDriver) Class.forName(ReaderType.DRIVER_HAWKVOR).newInstance();
        } else if (className.compareToIgnoreCase("HuaShen") == 0) {
            huashen = (HuaShenDriver) Class.forName(ReaderType.DRIVER_HUASHEN).newInstance();
        } else if (className.compareToIgnoreCase("Virtual") == 0) {
            // vd = (VirtualDriver)Class.forName(className).newInstance();
            vd = new VirtualDriver();
        } else {
            URL url = new URL("file:" + StaticFactory.getThirdParty() + jarName);
            URLClassLoader c = new URLClassLoader(new URL[] { url });
            driverClass = (ReaderInterface) c.loadClass(className).newInstance();
        }
    } catch (InstantiationException ex) {
        throw new DriverException(ex.getMessage() + " in ReaderFactory.newInstance");
    } catch (IllegalAccessException ex) {
        throw new DriverException(ex.getMessage() + " in ReaderFactory.newInstance");
    } catch (ClassNotFoundException ex) {
        ex.printStackTrace();
        throw new DriverException(ex.getMessage() + " in ReaderFactory.newInstance");
    } catch (MalformedURLException ex) {
        throw new DriverException(ex.getMessage() + " in ReaderFactory.newInstance");
    }
}
