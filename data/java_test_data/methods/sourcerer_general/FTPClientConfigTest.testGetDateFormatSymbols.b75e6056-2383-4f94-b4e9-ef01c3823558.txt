public void testGetDateFormatSymbols() {
    try {
        FTPClientConfig.getDateFormatSymbols(badDelim);
        fail("bad delimiter");
    } catch (IllegalArgumentException e) {
    // should have failed
    }
    try {
        FTPClientConfig.getDateFormatSymbols(tooLong);
        fail("more than 12 months");
    } catch (IllegalArgumentException e) {
    // should have failed
    }
    try {
        FTPClientConfig.getDateFormatSymbols(tooShort);
        fail("fewer than 12 months");
    } catch (IllegalArgumentException e) {
    // should have failed
    }
    DateFormatSymbols dfs2 = null;
    try {
        dfs2 = FTPClientConfig.getDateFormatSymbols(fakeLang);
    } catch (Exception e) {
        fail("rejected valid short month string");
    }
    SimpleDateFormat sdf1 = new SimpleDateFormat("MMM dd, yyyy", Locale.ENGLISH);
    SimpleDateFormat sdf2 = new SimpleDateFormat("MMM dd, yyyy", dfs2);
    Date d1 = null;
    Date d2 = null;
    try {
        d1 = sdf1.parse("dec 31, 2004");
    } catch (ParseException px) {
        fail("failed.to.parse.std");
    }
    try {
        d2 = sdf2.parse("hij 31, 2004");
    } catch (ParseException px) {
        fail("failed.to.parse.weird");
    }
    assertEquals("different.parser.same.date", d1, d2);
    try {
        d2 = sdf1.parse("hij 31, 2004");
        fail("should.have.failed.to.parse.weird");
    } catch (ParseException px) {
    }
    try {
        d2 = sdf2.parse("dec 31, 2004");
        fail("should.have.failed.to.parse.standard");
    } catch (ParseException px) {
    }
}
