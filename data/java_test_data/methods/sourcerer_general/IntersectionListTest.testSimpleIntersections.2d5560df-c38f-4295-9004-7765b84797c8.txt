public void testSimpleIntersections() {
    EventList<String> a = new BasicEventList<String>(lock);
    EventList<String> b = new BasicEventList<String>(lock);
    a.addAll(GlazedListsTests.stringToList("BASE"));
    b.addAll(GlazedListsTests.stringToList("STACK"));
    IntersectionList<String> intersection = new IntersectionList<String>(a, String.CASE_INSENSITIVE_ORDER);
    ListConsistencyListener.install(intersection);
    assertEquals(GlazedListsTests.stringToList("ABES"), intersection);
    intersection.addIntersection(b);
    assertEquals(GlazedListsTests.stringToList("AS"), intersection);
    b.addAll(GlazedListsTests.stringToList("BEER"));
    assertEquals(GlazedListsTests.stringToList("ABES"), intersection);
    a.addAll(GlazedListsTests.stringToList("RACK"));
    assertEquals(GlazedListsTests.stringToList("AABCEKRS"), intersection);
    b.removeAll(GlazedListsTests.stringToList("HACKERS"));
    assertEquals(GlazedListsTests.stringToList("B"), intersection);
    a.addAll(GlazedListsTests.stringToList("BET"));
    assertEquals(GlazedListsTests.stringToList("BBT"), intersection);
    b.addAll(GlazedListsTests.stringToList("SPIES"));
    assertEquals(GlazedListsTests.stringToList("BBEEST"), intersection);
    a.addAll(GlazedListsTests.stringToList("SPIES"));
    assertEquals(GlazedListsTests.stringToList("BBEEEIPSSST"), intersection);
    a.subList(0, 10).clear();
    assertEquals(GlazedListsTests.stringToList("EIPSST"), intersection);
    a.set(0, "B");
    assertEquals(GlazedListsTests.stringToList("BEIPSS"), intersection);
    b.remove("B");
    assertEquals(GlazedListsTests.stringToList("EIPSS"), intersection);
    b.add("B");
    assertEquals(GlazedListsTests.stringToList("BEIPSS"), intersection);
    a.set(0, "b");
    assertEquals(GlazedListsTests.stringToList("bEIPSS"), intersection);
    b.set(6, "b");
    assertEquals(GlazedListsTests.stringToList("bEIPSS"), intersection);
}
