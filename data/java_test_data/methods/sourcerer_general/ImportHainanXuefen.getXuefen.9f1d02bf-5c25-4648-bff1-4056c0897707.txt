public static void getXuefen() throws Exception {
    POIFSFileSystem fs = new POIFSFileSystem(new FileInputStream("d:\\jifenbudeng.xls"));
    // 补登内容标题(必填) 计分日期(非必填,不填默认为当天) 律所 姓名 补登积分年度(必填) 补登学分(必填) 是否计为现场培训(是/否)
    HSSFWorkbook wb = new HSSFWorkbook(fs);
    HSSFSheet sheet = wb.getSheetAt(0);
    Iterator _ite = sheet.rowIterator();
    Map<JifenbudengBatch, Lawyers> maps = new HashMap<JifenbudengBatch, Lawyers>();
    // System.out.println(map);
    while (_ite.hasNext()) {
        HSSFRow row = (HSSFRow) _ite.next();
        // ID
        String title = HSSFCellToString.toString(row.getCell(0));
        if (title == null || title.equals(""))
            break;
        if (title.indexOf("补登内容标题") != -1)
            continue;
        String jfdate = HSSFCellToString.toString(row.getCell(1)).trim();
        String office = HSSFCellToString.toString(row.getCell(2)).trim();
        String name = HSSFCellToString.toString(row.getCell(3)).trim();
        String theyear = HSSFCellToString.toString(row.getCell(4)).trim();
        String xuefen = HSSFCellToString.toString(row.getCell(5)).trim();
        if (!list.contains(name)) {
            // System.out.println(name+"=>已经处理了");
            continue;
        }
        Lawyers lawyer = map.get(name);
        if (lawyer != null) {
            int lawyerid = lawyer.getLawyerid();
            int officeid = lawyer.getTheoffice();
            int city = lawyer.getCityid();
            int province = lawyer.getProvinceid();
            JifenbudengBatch b = new JifenbudengBatch();
            b.setBudengdate(jfdate);
            b.setIslocal("是");
            b.setLawyerno(lawyer.getLawyerno());
            b.setTheyear(theyear);
            b.setTitle(title);
            b.setXuefen(xuefen);
            maps.put(b, lawyer);
        } else {
            System.out.println("姓名=>" + name + "<=没有对应的律师信息");
        // Sy
        }
    }
    List list = saveJifenbudeng(maps);
    System.out.println(list);
}
