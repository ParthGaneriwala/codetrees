public void userRemoveDependency(Dependency d) {
    // if they are not both classtargets then I don't want to know about it
    if (!(d.getFrom() instanceof ClassTarget) || !(d.getTo() instanceof ClassTarget))
        return;
    ClassTarget from = (ClassTarget) d.getFrom();
    ClassTarget to = (ClassTarget) d.getTo();
    Editor ed = from.getEditor();
    try {
        ed.save();
        ClassInfo info = from.getSourceInfo().getInfo(from.getSourceFile(), this);
        if (info != null) {
            Selection s1 = null;
            if (d instanceof ImplementsDependency) {
                List<Selection> vsels;
                List<String> vtexts;
                vsels = info.getInterfaceSelections();
                vtexts = getInterfaceTexts(ed, vsels);
                int where = vtexts.indexOf(to.getBaseName());
                // to delete the following "," instead of the preceding one.
                if (where == 1 && vsels.size() > 2)
                    where = 2;
                if (where > 0) {
                    // should always be true
                    s1 = (Selection) vsels.get(where - 1);
                    s1.combineWith((Selection) vsels.get(where));
                }
            } else if (d instanceof ExtendsDependency) {
                // a class extends
                s1 = info.getExtendsReplaceSelection();
                s1.combineWith(info.getSuperReplaceSelection());
            }
            // delete the text from the end backwards so that our
            if (s1 != null) {
                ed.setSelection(s1.getLine(), s1.getColumn(), s1.getEndLine(), s1.getEndColumn());
                ed.insertText("", false);
            }
            ed.save();
        }
    } catch (IOException ioe) {
        showMessageWithText("generic-file-save-error", ioe.getLocalizedMessage());
    }
}
