public void configureWorkflowManager(ServletContext context) {
    // Load the defaults
    ObjectHookManager hookManager = (ObjectHookManager) context.getAttribute(Constants.OBJECT_HOOK_MANAGER);
    if (hookManager != null) {
        // Configure a few settings
        hookManager.setFileLibraryPath(this.get(FILE_LIBRARY_PATH));
        hookManager.setApplicationPrefs(this.getPrefs());
        if (ApplicationPrefs.getFreemarkerConfiguration(context) == null) {
            LOG.error("Free marker configuration is null");
        }
        hookManager.setFreemarkerConfiguration(ApplicationPrefs.getFreemarkerConfiguration(context));
        hookManager.setKey((Key) context.getAttribute(TEAM_KEY));
        Scheduler scheduler = (Scheduler) context.getAttribute(Constants.SCHEDULER);
        hookManager.setScheduler(scheduler);
        try {
            // Configure a separate connection pool
            ConnectionPool commonCP = (ConnectionPool) context.getAttribute(Constants.CONNECTION_POOL);
            if (commonCP != null) {
                if (!this.has(CONNECTION_POOL_MAX_WORKFLOW_CONNECTIONS)) {
                    hookManager.setConnectionPool((ConnectionPool) context.getAttribute(Constants.CONNECTION_POOL));
                } else {
                    ConnectionPool workflowCP = new ConnectionPool();
                    workflowCP.setDebug(commonCP.getDebug());
                    workflowCP.setTestConnections(commonCP.getTestConnections());
                    workflowCP.setAllowShrinking(commonCP.getAllowShrinking());
                    workflowCP.setMaxConnections(this.get(CONNECTION_POOL_MAX_WORKFLOW_CONNECTIONS));
                    workflowCP.setMaxIdleTime(commonCP.getMaxIdleTime());
                    workflowCP.setMaxDeadTime(commonCP.getMaxDeadTime());
                    hookManager.setConnectionPool(workflowCP);
                }
            }
            ConnectionElement ce = new ConnectionElement();
            ce.setDriver(this.get(CONNECTION_DRIVER));
            ce.setUrl(this.get(CONNECTION_URL));
            ce.setUsername(this.get(CONNECTION_USER));
            ce.setPassword(this.get(CONNECTION_PASSWORD));
            hookManager.setConnectionElement(ce);
            WorkflowUtils.addWorkflow(hookManager, context);
        } catch (Exception e) {
            e.printStackTrace(System.out);
            LOG.error("Workflow Error: " + e.getMessage(), e);
        }
    }
}
