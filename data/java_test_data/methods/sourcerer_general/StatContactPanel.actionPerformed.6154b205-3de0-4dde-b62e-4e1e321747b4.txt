@SuppressWarnings("unchecked")
@Override
public void actionPerformed(ActionEvent e) {
    // TODO Auto-generated method stub
    if (e.getSource() == groupConfirm) {
        displayGroup.setVisible(true);
        // TODO Stat
        String xml = groupStat().toString();
        xml = MyXMLMaker.addTag("SearchContact", xml);
        xml = MyXMLMaker.addTag("com", xml);
        System.out.println("SEARCH_CONTACT group in stat action\n" + xml);
        CommandVisitor searchContactCommandVisitor = new CommandVisitor(CommandType.SEARCH_CONTACT, xml);
        SearchContactMessageHandler searchContactMessageHandler = new SearchContactMessageHandler();
        resultContactList = (ArrayList<Integer>) searchContactMessageHandler.executeCommand(searchContactCommandVisitor);
        groupResult.setText("�������: " + resultContactList.size());
    }
    if (e.getSource() == displayGroup) {
        parentFrame.getMyPhoneMeMajorPanel().addNewTab("Stat Result", new SearchResultPanel(parentFrame, resultContactList, ContactSectionType.GROUP_LABEL).getMainPanel());
    }
    if (e.getSource() == commonLabelConfirm) {
        localSetVisible(false);
        displaycommonLabel.setVisible(true);
        String xml = commonLabelStat().toString();
        xml = MyXMLMaker.addTag("SearchContact", xml);
        xml = MyXMLMaker.addTag("com", xml);
        System.out.println("SEARCH_CONTACT commonLabel in stat action\n" + xml);
        CommandVisitor searchContactCommandVisitor = new CommandVisitor(CommandType.SEARCH_CONTACT, xml);
        SearchContactMessageHandler searchContactMessageHandler = new SearchContactMessageHandler();
        resultContactList = (ArrayList<Integer>) searchContactMessageHandler.executeCommand(searchContactCommandVisitor);
        commonLabelResult.setText("�������: " + resultContactList.size());
    }
    if (e.getSource() == displaycommonLabel) {
        parentFrame.getMyPhoneMeMajorPanel().addNewTab("Stat Result", new SearchResultPanel(parentFrame, resultContactList, ContactSectionType.COMMON_LABEL).getMainPanel());
    }
    if (e.getSource() == birthdayConfirm) {
        displayBirthday.setVisible(true);
        StringBuffer message = new StringBuffer();
        if (startBirthdayField.getDate() != null)
            message.append(MyXMLMaker.addTag("StartBirthday", birthdayDateFormat.format(startBirthdayField.getDate())));
        else
            return;
        if (endBirthdayField.getDate() != null) {
            message.append(MyXMLMaker.addTag("EndBirthday", birthdayDateFormat.format(endBirthdayField.getDate())));
        } else
            return;
        String xml = MyXMLMaker.addTag("StatContact", message.toString());
        xml = MyXMLMaker.addTag("com", xml);
        System.out.println("birthday xml");
        System.out.println(xml);
        // TODO stat by birthday
        CommandVisitor statContactCommandVisitor = new CommandVisitor(CommandType.STAT_CONTACT, xml);
        StatContactMessageHandler statContactMessageHandler = new StatContactMessageHandler();
        resultContactList = (ArrayList<Integer>) statContactMessageHandler.executeCommand(statContactCommandVisitor);
        birthdayResult.setText("�������: " + resultContactList.size());
        parentFrame.getMyPhoneMeMajorPanel().addNewTab("Stat Result", new SearchResultPanel(parentFrame, resultContactList, ContactSectionType.BIRTHDAY).getMainPanel());
    }
}
