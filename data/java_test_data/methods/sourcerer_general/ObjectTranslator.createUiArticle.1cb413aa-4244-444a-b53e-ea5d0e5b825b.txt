public static UiArticle createUiArticle(Article article, Boolean textObjectsIncluded, Boolean bodyInTextObjectsIncluded, ConfigLocal config) {
    if (article == null) {
        return null;
    }
    UiArticle uiArticle = new UiArticle();
    uiArticle.setId(article.getId());
    uiArticle.setCode(article.getCode());
    uiArticle.setModified(article.getModified());
    uiArticle.setPublished(article.getPublished());
    uiArticle.setValidThrough(article.getValidThrough());
    uiArticle.setAuthor(article.getUser().getLogin());
    if (textObjectsIncluded) {
        for (Text text : article.getTexts()) {
            uiArticle.getUiTexts().add(createUiText(text, bodyInTextObjectsIncluded));
        }
    } else {
        uiArticle.setUiTexts(null);
    }
    for (Category category : article.getCategories()) {
        uiArticle.getUiCategories().add(createUiCategory(category, false, config));
    }
    ArrayList<Text> texts = new ArrayList<Text>(article.getTexts());
    Collections.sort(texts, new Utils.TextsLanguageComparator());
    for (Text text : texts) {
        if (uiArticle.getTitleInUserLanguage() == null || text.getLanguage().getIsoCode().equals(config.getDefaultLanguageIsoCode())) {
            uiArticle.setTitleInUserLanguage(text.getTitle());
        }
        if (config.getLoggedUser() != null && text.getLanguage().getId().longValue() == config.getLoggedUser().getLanguage().getId().longValue()) {
            uiArticle.setTitleInUserLanguage(text.getTitle());
            break;
        }
    }
    ArrayList<String> isoCodes = new ArrayList<String>(article.getTexts().size());
    for (Text text : texts) {
        isoCodes.add(text.getLanguage().getIsoCode());
    }
    Collections.sort(isoCodes);
    StringBuilder sb = new StringBuilder();
    for (String isoCode : isoCodes) {
        if (sb.length() > 0) {
            sb.append(", ");
        }
        sb.append(isoCode);
    }
    uiArticle.setLanguageString(sb.toString());
    return uiArticle;
}
