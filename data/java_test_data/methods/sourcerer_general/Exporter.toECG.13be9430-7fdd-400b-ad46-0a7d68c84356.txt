public void toECG(CKModel<String, String> modele) {
    TreeLayout tl = new TreeLayout(modele);
    tl.buildTree();
    PanelCK pnl = new PanelCK(modele);
    pnl.paint(pnl.getGraphics());
    JFileChooser fc = new JFileChooser();
    File file = new File("default.eck");
    int returnVal = fc.showSaveDialog(fc);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        file = fc.getSelectedFile();
        if (!file.getName().toLowerCase().endsWith(".eck")) {
            String filePath = file.getPath().concat(".eck");
            file = new File(filePath);
        } else {
            file = new File(file.getPath());
        }
        try {
            // On instancie le flot d'ecriture
            FileWriter fw = new FileWriter(file);
            /*
					 * A cet emplacement on écrira tous les concepts
					 */
            fw.write("DebutConcept" + System.getProperty("line.separator"));
            fw.write(modele.getCSize() + System.getProperty("line.separator") + System.getProperty("line.separator"));
            for (int i = 0; i < modele.getCSize(); i++) {
                fw.write(modele.findConceptFromId(i).getIndex() + System.getProperty("line.separator"));
                fw.write(forHTML(modele.findConceptFromId(i).getData()) + System.getProperty("line.separator"));
                fw.write(modele.findConceptFromId(i).getPositionX() + System.getProperty("line.separator"));
                fw.write(modele.findConceptFromId(i).getPositionY() + System.getProperty("line.separator") + System.getProperty("line.separator"));
            }
            /*
					 * A cet emplacement on écrira tous les Knowledges
					 */
            fw.write("DebutKnowledge" + System.getProperty("line.separator"));
            fw.write(modele.getKSpace().size() + System.getProperty("line.separator") + System.getProperty("line.separator"));
            for (int i = 0; i < modele.getKSpace().size(); i++) {
                fw.write(modele.getKSpace().elementAt(i).getIndex() + System.getProperty("line.separator"));
                fw.write(forHTML(modele.getKSpace().elementAt(i).getData()) + System.getProperty("line.separator"));
                fw.write(modele.getKSpace().elementAt(i).getPositionX() + System.getProperty("line.separator"));
                fw.write(modele.getKSpace().elementAt(i).getPositionY() + System.getProperty("line.separator") + System.getProperty("line.separator"));
            }
            fw.write("DebutEdge" + System.getProperty("line.separator"));
            fw.write(modele.getCSize() - 1 + System.getProperty("line.separator") + System.getProperty("line.separator"));
            int ind = 0;
            for (int i = 0; i < modele.getCSize() - 1; i++) {
                List<Concept<String>> children = modele.findConceptFromId(i).getChildren();
                for (int j = 0; j < children.size(); j++) {
                    fw.write(ind + System.getProperty("line.separator"));
                    fw.write(modele.findConceptFromId(i).getIndex() + System.getProperty("line.separator"));
                    fw.write(children.get(j).getIndex() + System.getProperty("line.separator") + System.getProperty("line.separator"));
                    ind++;
                }
            }
            fw.close();
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
}
