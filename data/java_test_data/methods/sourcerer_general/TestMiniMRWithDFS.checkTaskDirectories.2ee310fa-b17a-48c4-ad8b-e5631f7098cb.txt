static void checkTaskDirectories(MiniMRCluster mr, String[] jobIds, String[] taskDirs) {
    mr.waitUntilIdle();
    int trackers = mr.getNumTaskTrackers();
    List<String> neededDirs = new ArrayList<String>(Arrays.asList(taskDirs));
    boolean[] found = new boolean[taskDirs.length];
    for (int i = 0; i < trackers; ++i) {
        int numNotDel = 0;
        File localDir = new File(mr.getTaskTrackerLocalDir(i));
        LOG.debug("Tracker directory: " + localDir);
        File trackerDir = new File(localDir, "taskTracker");
        assertTrue("local dir " + localDir + " does not exist.", localDir.isDirectory());
        assertTrue("task tracker dir " + trackerDir + " does not exist.", trackerDir.isDirectory());
        String[] contents = localDir.list();
        String[] trackerContents = trackerDir.list();
        for (int j = 0; j < contents.length; ++j) {
            System.out.println("Local " + localDir + ": " + contents[j]);
        }
        for (int j = 0; j < trackerContents.length; ++j) {
            System.out.println("Local jobcache " + trackerDir + ": " + trackerContents[j]);
        }
        for (int fileIdx = 0; fileIdx < contents.length; ++fileIdx) {
            String name = contents[fileIdx];
            if (!("taskTracker".equals(contents[fileIdx]))) {
                LOG.debug("Looking at " + name);
                assertTrue("Spurious directory " + name + " found in " + localDir, false);
            }
        }
        for (int idx = 0; idx < neededDirs.size(); ++idx) {
            String name = neededDirs.get(idx);
            if (new File(new File(new File(trackerDir, "jobcache"), jobIds[idx]), name).isDirectory()) {
                found[idx] = true;
                numNotDel++;
            }
        }
    }
    for (int i = 0; i < found.length; i++) {
        assertTrue("Directory " + taskDirs[i] + " not found", found[i]);
    }
}
