public void testUpdatedAndRemove() {
    Music music = new Music();
    music.setName("Classical");
    EntityManager em = factory.createEntityManager();
    em.getTransaction().begin();
    em.persist(music);
    em.getTransaction().commit();
    em.clear();
    em = factory.createEntityManager();
    em.getTransaction().begin();
    EntityManager em2 = factory.createEntityManager();
    em2.getTransaction().begin();
    // read music from 2nd EM
    music = em2.find(Music.class, music.getId());
    // change music
    em.find(Music.class, music.getId()).setName("Rap");
    em.getTransaction().commit();
    try {
        // remove changed music
        em2.remove(music);
        em2.flush();
        fail("should have an optimistic lock exception");
    } catch (OptimisticLockException e) {
    // success
    } finally {
        em2.getTransaction().rollback();
    }
    // clean
    em.remove(em.find(Music.class, music.getId()));
    em.close();
    em2.close();
}
