@Test
public void testPageInputs() {
    Page page1 = techspecContext.getAppspec().getPages().get(1);
    Form form2 = page1.getForms().get(1);
    List<SingleUserInput> textInputs = form2.getTextInputs();
    assertEquals(1, textInputs.size(), "Wrong number of inputs");
    SingleUserInput input1 = textInputs.get(0);
    assertEquals("textInput1", input1.getId(), "Wrong input id");
    assertEquals("TextInput 1 title", input1.getTitle(), "Wrong input title");
    List<Validation> validations = input1.getValidations();
    assertEquals(validations.size(), 3, "Wrong number of validations found");
    Validation reqValidation = validations.get(0);
    assertTrue(reqValidation instanceof RequiredValidation, "First validation is of type required");
    assertEquals("required", reqValidation.getId(), "Id of validation not read correctly");
    assertTrue(validations.get(1) instanceof LengthValidation, "Second validation is of type length");
    LengthValidation lengthValidation = (LengthValidation) validations.get(1);
    assertTrue(lengthValidation.isMinDefined(), "Should have minimum length");
    assertFalse(lengthValidation.isMaxDefined(), "Does not have maximum length");
    assertEquals(8, lengthValidation.getMin(), "Minimum length should be 8");
    assertTrue(validations.get(2) instanceof RegexValidation, "Third validation is of type regex");
    RegexValidation regexValidation = (RegexValidation) validations.get(2);
    assertEquals("/^\\S+$/", regexValidation.getTypeArgs(), "Wrong regex found");
    List<DropdownInput> dropdownInputs = form2.getDropdownInputs();
    assertEquals(1, dropdownInputs.size(), "Wrong number of dropdown inputs");
    List<RadioInput> radioInputs = form2.getRadioInputs();
    assertEquals(1, radioInputs.size(), "Wrong number of radio inputs");
    Map<String, String> allowedValues = radioInputs.get(0).getAllowedValues();
    assertEquals(3, allowedValues.size(), "Wrong number of radio options");
}
