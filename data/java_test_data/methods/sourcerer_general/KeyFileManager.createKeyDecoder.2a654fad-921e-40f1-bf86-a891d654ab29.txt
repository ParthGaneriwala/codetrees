public static PlayerKeyDecoder createKeyDecoder(int id) {
    HashMap<Integer, ActionType> keyMap = createDefaultHashMap();
    String playerfilePath = customPath + id + ".txt";
    File playerkeyFile = new File(playerfilePath);
    FileReader fr;
    BufferedReader br;
    /**
     * Read the player's file to overwrite the default keys
     */
    try {
        playerkeyFile.createNewFile();
        fr = new FileReader(playerkeyFile);
        br = new BufferedReader(fr);
        int index;
        String line = new String();
        String[] temp;
        while ((line = br.readLine()) != null) {
            temp = line.split(": ");
            index = Integer.parseInt(temp[0]);
            ActionType at = ActionType.valueOf(temp[1]);
            if (keyMap.containsValue(at)) {
                Set<Integer> keys = keyMap.keySet();
                for (Integer i : keys) {
                    if (keyMap.get(i) == at) {
                        keyMap.remove(i);
                        keyMap.put(index, at);
                        break;
                    }
                }
            }
        }
        return new PlayerKeyDecoder(keyMap, id);
    } catch (FileNotFoundException e) {
        System.out.println("File not found");
        return null;
    } catch (IOException e) {
        System.out.println("IOException occured.");
        System.out.println(e.getMessage());
        return null;
    }
}
