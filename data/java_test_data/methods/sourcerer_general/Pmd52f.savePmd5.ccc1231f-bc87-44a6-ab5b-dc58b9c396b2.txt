public byte[] savePmd5(byte[][] mdb, String MdfDir, long length, String fileExten) {
    byte[] extendName = fileExten.getBytes();
    byte[] mdb1 = new byte[1 + extendName.length + 8 + 16 * mdb.length];
    mdb1[0] = (byte) extendName.length;
    System.arraycopy(extendName, 0, mdb1, 1, extendName.length);
    peer.tools.ByteLongSwitch.toByteArray(length, mdb1, 1 + extendName.length);
    File dir = new File(MdfDir);
    if (!dir.exists()) {
        dir.mkdirs();
    }
    for (int i = 0; i < mdb.length; i++) {
        System.arraycopy(mdb[i], 0, mdb1, 1 + extendName.length + 8 + i * 16, 16);
    }
    MessageDigest mDigest;
    byte[] mdb2 = null;
    String Name = null;
    try {
        mDigest = MessageDigest.getInstance("MD5");
        mDigest.update(mdb1);
        mdb2 = mDigest.digest();
        Name = byteArrayToHexString(mdb2);
        String fName = Name + ".pmd";
        File file = new File(MdfDir + "\\" + fName);
        System.out.println("TTTTTTTTTTTT  " + file.getAbsolutePath());
        file.createNewFile();
        FileOutputStream fos = new FileOutputStream(file);
        BufferedOutputStream bos = new BufferedOutputStream(fos);
        DataOutputStream dos = new DataOutputStream(bos);
        // д��汾��
        dos.writeShort(0);
        // д��mdf��Ϣ
        dos.write(mdb1);
        dos.flush();
        dos.close();
    } catch (NoSuchAlgorithmException e) {
        e.printStackTrace();
    } catch (FileNotFoundException e) {
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
    // System.out.println("RRRRRR " +Pmd52f.byteArrayToHexString(mdb)+new String(mdb));
    return mdb2;
}
