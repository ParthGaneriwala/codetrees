public void actionPerformed(ActionEvent ev) {
    this.annotation = result.getAnnotation();
    HashMap<String, HashSet<String>> alias = result.getAlias();
    JTable jTable = result.getJTable();
    // goSelected = ZDisplayGoNodes3.getSelectedGoSet(jTable);
    goSelected = getSelectedGoSet(jTable);
    CyNetworkView currentNetworkView = result.getNetworkView();
    if (currentNetworkView != null) {
        currentNetworkView.getNetwork().unselectAllNodes();
        currentNetworkView.updateView();
        HashSet selectedNodesSet = new HashSet();
        if (result instanceof ResultPanel) {
            this.annotation = result.getAnnotation();
            Iterator itNView = currentNetworkView.getNodeViewsIterator();
            while (itNView.hasNext()) {
                HashSet goAnnot = new HashSet();
                NodeView nodeView = (NodeView) itNView.next();
                String node = nodeView.getNode().getIdentifier().toUpperCase();
                HashSet identifiers = alias.get(node);
                if (identifiers != null) {
                    Iterator it = identifiers.iterator();
                    while (it.hasNext()) {
                        int[] goID = annotation.getClassifications(it.next() + "");
                        for (int t = 0; t < goID.length; t++) {
                            goAnnot.add(goID[t] + "");
                        }
                    }
                }
                if (goAnnot != null) {
                    Iterator it = goAnnot.iterator();
                    while (it.hasNext()) {
                        if (goSelected.contains((new Integer(it.next() + "")).toString())) {
                            selectedNodesSet.add(nodeView.getNode());
                            continue;
                        }
                    }
                }
            // this.annotation=null;
            }
            currentNetworkView.getNetwork().setSelectedNodeState(selectedNodesSet, true);
            currentNetworkView.updateView();
        }
        /*     else {
              Iterator itGo= goSelected.iterator();
              while (itGo.hasNext()){
                  String term = (String)itGo.next();
                  int termint = Integer.parseInt(term);
                  annotation = result.getAnnotation(term);
                  Iterator itNView = currentNetworkView.getNodeViewsIterator();
                  while (itNView.hasNext()){
                      NodeView nodeView = (NodeView)itNView.next();
                      int[] goAnnot = annotation.getClassifications(nodeView.getNode().getIdentifier());
                      if (goAnnot != null){
                          for (int i=0;i<goAnnot.length;i++){
 
                              if (goAnnot[i]==termint){
                                  selectedNodesSet.add(nodeView.getNode());
                                  continue;
                              }
                          }
                      }
                  }
                
              }
              currentNetworkView.getNetwork().setSelectedNodeState(selectedNodesSet,true);
              currentNetworkView.updateView();
          }
        */
        this.annotation = null;
    }
}
