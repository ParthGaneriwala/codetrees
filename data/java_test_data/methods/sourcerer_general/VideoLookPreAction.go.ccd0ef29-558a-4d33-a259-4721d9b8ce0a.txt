@Override
public String go() throws Exception {
    this.videotimeout = Float.parseFloat(com.changpeng.common.CommonDatas.SysParameter.get("videotimeout").toString());
    LawyerlessonxfService xfservice = (LawyerlessonxfService) this.getBean("lawyerlessonxfService");
    this.userid = this.getLoginUser().getLawyerid();
    SysUnionparams params = (SysUnionparams) basicService.get(SysUnionparams.class, this.getLoginUser().getDirectunion());
    totalfen = params.getDabiaofen();
    JifenTime jifentime = CommonDatas.getJifenTime(0, params.getNianshen());
    nowyear = jifentime.getNianshenyear();
    this.lastyear = nowyear - 1;
    // 去年的分数没满，听的课是否记录到去年
    boolean isloglast = params.getIsloglast();
    yearfen = xfservice.getLawyerZongjifen(userid, lastyear);
    nowfen = xfservice.getLawyerZongjifen(userid, nowyear);
    // LxnetrecsService lxnetrecsService = (LxnetrecsService)
    // getBean("lxnetrecsService");
    // BasicService basicService = (BasicService) getBean("basicService");
    this.lessons = (Lessons) basicService.get(Lessons.class, lessonid);
    if (this.lessons == null) {
        this.message = "系统有误,请在在线课程里,选择课程点击观看";
        this.nextPage = "javascript:window.close()";
        return "message";
    } else if (this.lessons.getOnlinefile() == null || this.lessons.getOnlinefile().equals("")) {
        this.message = "该课程视频文件为空,请返回";
        this.nextPage = "javascript:window.close()";
        return "message";
    }
    // this.lxnetrecs = (Lxnetrecs) lxnetrecsService.getLxnetrecs(lessonid,
    // userid);
    // debug("this.lxnetrecs==" + this.lxnetrecs);
    BasicLawyerlessonxf xuefen = null;
    if (this.getLoginUser().getLawyertype() == -1)
        xuefen = xfservice.getXuefenShixi(lessonid, this.userid, 0);
    else if (this.getLoginUser().getLawyertype() == -2)
        xuefen = xfservice.getXuefenGongzheng(lessonid, this.userid, 0);
    else
        xuefen = xfservice.getXuefen(lessonid, this.userid, 0);
    // 满分了，不管是通过什么方式的
    if (xuefen != null) {
        this.lookedminutes = xuefen.getPxminutes();
        _LOG.debug("xuefen.getPxxf().floatValue() == lessons.getXuefen().floatValue()" + (xuefen.getPxxf().floatValue() == lessons.getXuefen().floatValue()));
        _LOG.debug(xuefen.getPxxf() + "===" + lessons.getXuefen());
    }
    if (xuefen != null && xuefen.getIsfull()) {
        settime = false;
    }
    // 如果参加了现场培训，就不
    if (xuefen != null && xuefen.getLearnmode() == 1) {
        settime = false;
        localelesson = true;
    }
    if (xuefen != null) {
        jifenyear = xuefen.getTheyear();
        islastyear = xuefen.getIslastyear() == 1 ? true : false;
    } else if (!isloglast) {
        shouldselect = false;
        jifenyear = nowyear;
    } else {
        // 如果所获得的分数小于达标分，则提示是否需要设置学分到去年
        if (yearfen < totalfen) {
            shouldselect = true;
        } else {
            shouldselect = false;
            jifenyear = nowyear;
        }
    }
    Lawyers lawyers = this.getLoginUser();
    // 记录这个窗口的打开记录,怎么判断这个用户当前正在听课呢???
    visitid = loglook(lawyers.getLawyerid(), lawyers.getProvinceunion(), lawyers.getDirectunion(), lawyers.getTheoffice());
    DetachedCriteria dc = DetachedCriteria.forClass(com.changpeng.models.Lessonreply.class);
    dc.add(Restrictions.eq("lessonid", lessonid));
    dc.addOrder(Order.desc("replytime"));
    replylist = basicService.findAllByCriteria(dc);
    if (lessons.getTeacherid() != 0) {
        teacher = (Teacher) basicService.get(Teacher.class, lessons.getTeacherid());
    }
    return SUCCESS;
}
