private void buildStarredItems() {
    m_items.clear();
    List<SessionItem> list = new ArrayList<SessionItem>();
    Cursor cursor = m_context.getContentResolver().query(m_uri, null, m_selection, m_selectionArgs, m_sortOrder);
    if (cursor != null) {
        if (cursor.moveToFirst()) {
            int id = cursor.getColumnIndexOrThrow(BaseColumns._ID);
            int sti = cursor.getColumnIndexOrThrow(SessionsColumns.TITLE);
            int spni = cursor.getColumnIndexOrThrow(SessionsColumns.SPEAKER_NAMES);
            int ri = cursor.getColumnIndexOrThrow(SessionsColumns.ROOM);
            int tri = cursor.getColumnIndexOrThrow(TracksColumns.TRACK);
            int ctri = cursor.getColumnIndexOrThrow(TracksColumns.COLOR);
            int ati = cursor.getColumnIndexOrThrow(SessionsColumns.STARRED);
            int btsi = cursor.getColumnIndexOrThrow(BlocksColumns.TIME_START);
            int btei = cursor.getColumnIndexOrThrow(BlocksColumns.TIME_END);
            do {
                list.add(new SessionItem(m_context, cursor.getInt(id), cursor.getLong(btsi), cursor.getLong(btei), cursor.getString(sti), cursor.getString(spni), cursor.getString(ri), cursor.getString(tri), cursor.getInt(ctri), cursor.getInt(ati) == 1));
            } while (cursor.moveToNext());
        }
        cursor.close();
    }
    Cursor bcursor = m_context.getContentResolver().query(Blocks.CONTENT_URI, null, null, null, null);
    if (bcursor != null) {
        if (bcursor.moveToFirst()) {
            int btsi = bcursor.getColumnIndexOrThrow(BlocksColumns.TIME_START);
            int btei = bcursor.getColumnIndexOrThrow(BlocksColumns.TIME_END);
            // Generate the items
            int day = 0;
            do {
                long startTime = bcursor.getLong(btsi);
                long endTime = bcursor.getLong(btei);
                if (DISPLAY_DAY) {
                    Date di = new Date(startTime * 1000);
                    if (di.getDay() != day) {
                        day = di.getDay();
                        m_items.add(new DayItem(m_context, startTime));
                    }
                }
                m_items.add(new BlockItem(m_context, Item.TYPE_BLOCK, startTime, endTime));
                boolean slotEmpty = true;
                while (list.size() > 0) {
                    SessionItem si = list.get(0);
                    if (si.getSessionItem().getStartTime() == startTime && si.getSessionItem().getEndTime() == endTime) {
                        m_items.add(list.remove(0));
                        slotEmpty = false;
                    } else {
                        break;
                    }
                }
                if (slotEmpty) {
                    m_items.add(new EmptyBlockItem(m_context, startTime, endTime));
                }
            } while (bcursor.moveToNext());
        }
        bcursor.close();
    }
}
