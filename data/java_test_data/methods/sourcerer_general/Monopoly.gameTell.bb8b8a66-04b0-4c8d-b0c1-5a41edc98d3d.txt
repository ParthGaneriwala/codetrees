@Override
public void gameTell(String handle, String msg) {
    if (!msg.equals(""))
        log.println(handle + ": " + msg);
    if (cmdTell(handle, msg))
        return;
    StringTokenizer ST = new StringTokenizer(msg, " \t\n\r\f./\\");
    int t = ST.countTokens();
    String m = null;
    if (t > 0)
        m = ST.nextToken();
    else
        m = "";
    MBoard b = getMPlayer(handle);
    if (b == null)
        b = (MBoard) getObs(handle);
    MPlayer p = null;
    if (b != null)
        p = b.getMPlayer(handle);
    if (msg.equalsIgnoreCase("!MANAGER") && FileHelper.searchFile(handle, MGRFILE) >= 0) {
        manager = handle;
        Serv.tch("Manager: " + manager);
    } else if (msg.equalsIgnoreCase("THREADS")) {
        int a = Thread.activeCount();
        Thread[] ThreadList = new Thread[a];
        int e = Thread.enumerate(ThreadList);
        Serv.say(handle, "Total Threads: " + a);
        Serv.say(handle, "Running Threads: " + e);
        for (int x = 0; x < e; x++) {
            Serv.say(handle, ThreadList[x].toString());
        }
    } else if (msg.equals(REQSTYLE)) {
        if (b != null) {
            b.dump(STYLESTR + " " + b.creator + b.dumpStyle());
            b.dump(DUMPSTR + " " + b.creator + " " + MonoBase.dumpBoard(b, " "));
        }
    } else if (msg.equalsIgnoreCase("=MAX")) {
        Serv.qSay(handle, getMaxim());
    } else if (m.equalsIgnoreCase("!ADFREQ") && t > 1 && handle.equalsIgnoreCase(manager)) {
        int frequency = MiscUtil.strToInt(ST.nextToken());
        if (frequency > 0 && frequency < 60) {
            Serv.say(handle, "Ad Frequency must be greater than 60 seconds, or 0 to disable: " + frequency);
            return;
        }
        advertiser.setFrequency(frequency);
        Serv.say(handle, "Ad Frequency set to: " + frequency);
    } else if (msg.equalsIgnoreCase("=SLOGAN")) {
        List<String> VS = FileHelper.readFile(SLOGFILE);
        for (int x = 0; x < VS.size(); x++) Serv.say(handle, (String) VS.get(x));
    } else if ((m.equalsIgnoreCase("!newslog:") && (t > 1) && (handle.equalsIgnoreCase(manager)))) {
        if (FileHelper.addToFile(msg.substring(10), SLOGFILE))
            Serv.say(handle, "Slogan set.");
        else
            Serv.say(handle, "Slogan not set.");
    } else if (msg.equalsIgnoreCase("managers")) {
        Serv.qSay(handle, MonoBase.listFile(MGRFILE));
    } else if (t > 1 && m.equalsIgnoreCase("HELP")) {
        String keyword = ST.nextToken().toLowerCase();
        String err = "Augh!  I don't have a help by the name: " + keyword;
        showHelp(handle, keyword, err);
    } else if (msg.equalsIgnoreCase("HELP")) {
        String err = "Augh!  The help file is missing!";
        showHelp(handle, "basic", err);
    } else if (msg.equalsIgnoreCase("GUI"))
        if (!isGUI(handle)) {
            GUIList.add(handle);
            Serv.say(handle, "GUI mode set.");
        } else {
            GUIList.remove(handle);
            Serv.say(handle, "GUI mode unset.");
        }
    else if (msg.startsWith("!") && creatorCmd(handle, new StringTokenizer(msg)))
        return;
    else if (msg.equalsIgnoreCase("TOPTEN")) {
        Serv.qSay(handle, MonoBase.topTen("wins"));
    } else if (t > 1 && m.equalsIgnoreCase("TOPTEN")) {
        Serv.qSay(handle, MonoBase.topTen(ST.nextToken()));
    } else if (msg.equalsIgnoreCase("FINGER")) {
        Serv.qSay(handle, MonoBase.finger(handle));
    } else if (t > 1 && m.equalsIgnoreCase("FINGER")) {
        Serv.qSay(handle, MonoBase.finger(ST.nextToken()));
    } else if (t > 1 && m.equalsIgnoreCase("BLURB")) {
        MonoData MD = MonoBase.getStats(handle, true);
        MD.finger = msg.substring(6);
        MonoBase.editStats(MD);
        Serv.say(handle, "Finger set.");
    } else if (p != null && msg.equalsIgnoreCase("AUTO")) {
        b.setAuto(p, !p.getAuto());
    } else if (msg.equalsIgnoreCase("=TOKENS") || msg.equalsIgnoreCase("TOKENS")) {
        String tokens = CollectionHelper.concat(TOKEN_NAMES);
        Serv.say(handle, tokens);
    } else if (p != null && m.equalsIgnoreCase("TOKEN") && t > 1) {
        String token = msg.substring(5).trim();
        boolean success = b.assignToken(p, token);
        if (!success) {
            Serv.say(handle, "Unable to select token.");
        }
    } else if (b != null && msg.equalsIgnoreCase("PROPS")) {
        Serv.qSay(handle, b.showProps(handle, 0, 20));
        Serv.qSay(handle, b.showProps(handle, 20, 40));
    } else if (b != null && msg.equalsIgnoreCase("FIX")) {
        if (b.getTurn() != null)
            Serv.qSay(handle, "No prob.");
        else
            Serv.qSay(handle, "Augh, attempting to fix...");
    } else if (p != null && p.isWaiting()) {
        p.RESPONSE = msg;
        p.wakeup();
    } else
        Serv.say(handle, "Excuse me?");
}
