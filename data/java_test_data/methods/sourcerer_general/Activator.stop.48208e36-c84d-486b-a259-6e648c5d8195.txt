public void stop(BundleContext context) throws Exception {
    if (streamFeatureStracker != null) {
        streamFeatureStracker.close();
        streamFeatureStracker = null;
    }
    if (tlsFeatureRegistration != null) {
        tlsFeatureRegistration.unregister();
        tlsFeatureRegistration = null;
    }
    if (tlsContextServiceTracker != null) {
        tlsContextServiceTracker.close();
        tlsContextServiceTracker = null;
    }
    if (sslContextRegistration != null) {
        sslContextRegistration.unregister();
        sslContextRegistration = null;
    }
    if (plainUserAuthenticatorRegistration != null) {
        plainUserAuthenticatorRegistration.unregister();
        plainUserAuthenticatorRegistration = null;
    }
    if (userAuthenticatorTracker != null) {
        userAuthenticatorTracker.close();
        userAuthenticatorTracker = null;
    }
    if (resourceBindFeatureRegistration != null) {
        resourceBindFeatureRegistration.unregister();
        resourceBindFeatureRegistration = null;
    }
    if (sessionFeatureRegistration != null) {
        sessionFeatureRegistration.unregister();
        sessionFeatureRegistration = null;
    }
    if (routeMessageParserServiceTracker != null) {
        routeMessageParserServiceTracker.close();
        routeMessageParserServiceTracker = null;
    }
    if (xmppParserServiceTracker != null) {
        xmppParserServiceTracker.close();
        xmppParserServiceTracker = null;
    }
    if (c2sManagerRegistration != null) {
        c2sManagerRegistration.unregister();
        c2sManagerRegistration = null;
    }
    if (loggerServiceTracker != null) {
        loggerServiceTracker.close();
        loggerServiceTracker = null;
    }
    if (defaultC2sController != null) {
        defaultC2sController.stop();
        defaultC2sController = null;
    }
    if (connPool != null) {
        connPool.closeConnectionPool();
    }
}
