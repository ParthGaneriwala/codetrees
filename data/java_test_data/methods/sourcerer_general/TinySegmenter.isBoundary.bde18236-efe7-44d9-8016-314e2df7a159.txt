private boolean isBoundary() {
    int score = BIAS;
    CharInfo c1 = buffer[position - 3];
    CharInfo c2 = buffer[position - 2];
    CharInfo c3 = buffer[position - 1];
    CharInfo c4 = buffer[position];
    CharInfo c5 = buffer[position + 1];
    CharInfo c6 = buffer[position + 2];
    score += getScore(UP1, p1);
    score += getScore(UP2, p2);
    score += getScore(UP3, p3);
    score += getScore(BP1, p1 + p2);
    score += getScore(BP2, p2 + p3);
    score += getScore(UW1, c1.str);
    score += getScore(UW2, c2.str);
    score += getScore(UW3, c3.str);
    score += getScore(UW4, c4.str);
    score += getScore(UW5, c5.str);
    score += getScore(UW6, c6.str);
    score += getScore(BW1, c2.str + c3.str);
    score += getScore(BW2, c3.str + c4.str);
    score += getScore(BW3, c4.str + c5.str);
    score += getScore(TW1, c1.str + c2.str + c3.str);
    score += getScore(TW2, c2.str + c3.str + c4.str);
    score += getScore(TW3, c3.str + c4.str + c5.str);
    score += getScore(TW4, c4.str + c5.str + c6.str);
    score += getScore(UC1, c1.ctype);
    score += getScore(UC2, c2.ctype);
    score += getScore(UC3, c3.ctype);
    score += getScore(UC4, c4.ctype);
    score += getScore(UC5, c5.ctype);
    score += getScore(UC6, c6.ctype);
    score += getScore(BC1, c2.ctype + c3.ctype);
    score += getScore(BC2, c3.ctype + c4.ctype);
    score += getScore(BC3, c4.ctype + c5.ctype);
    score += getScore(TC1, c1.ctype + c2.ctype + c3.ctype);
    score += getScore(TC2, c2.ctype + c3.ctype + c4.ctype);
    score += getScore(TC3, c3.ctype + c4.ctype + c5.ctype);
    score += getScore(TC4, c4.ctype + c5.ctype + c6.ctype);
    score += getScore(UQ1, p1 + c1.ctype);
    score += getScore(UQ2, p2 + c2.ctype);
    score += getScore(UQ3, p3 + c3.ctype);
    // score += getScore(UQ1, p3 + c3.ctype); // オリジナルコード。UQ3の誤り？
    score += getScore(BQ1, p2 + c2.ctype + c3.ctype);
    score += getScore(BQ2, p2 + c3.ctype + c4.ctype);
    score += getScore(BQ3, p3 + c2.ctype + c3.ctype);
    score += getScore(BQ4, p3 + c3.ctype + c4.ctype);
    score += getScore(TQ1, p2 + c1.ctype + c2.ctype + c3.ctype);
    score += getScore(TQ2, p2 + c2.ctype + c3.ctype + c4.ctype);
    score += getScore(TQ3, p3 + c1.ctype + c2.ctype + c3.ctype);
    score += getScore(TQ4, p3 + c2.ctype + c3.ctype + c4.ctype);
    boolean result = false;
    String p = "O";
    if (score > 0) {
        p = "B";
        result = true;
    }
    p1 = p2;
    p2 = p3;
    p3 = p;
    return result;
}
