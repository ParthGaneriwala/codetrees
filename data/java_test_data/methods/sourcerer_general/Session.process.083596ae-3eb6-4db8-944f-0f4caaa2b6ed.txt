void process(YMSG9Packet pkt) throws Exception {
    // -----A null packet is sent when the input stream closes
    if (pkt == null) {
        quit = true;
        return;
    }
    // -----Process header
    if (// Some chat packets send zero
    pkt.sessionId != 0)
        // Update sess id in outer class
        sessionId = pkt.sessionId;
    // -----Error header?
    if (pkt.status == -1 && processError(pkt) == true)
        return;
    // -----Process payload
    switch(// Jump to service-specific code
    pkt.service) {
        case SERVICE_ADDIGNORE:
            receiveAddIgnore(pkt);
            break;
        case SERVICE_AUTH:
            receiveAuth(pkt);
            break;
        case SERVICE_AUTHRESP:
            receiveAuthResp(pkt);
            break;
        case SERVICE_CHATCONNECT:
            receiveChatConnect(pkt);
            break;
        case SERVICE_CHATDISCONNECT:
            receiveChatDisconnect(pkt);
            break;
        case SERVICE_CHATLOGOFF:
            receiveChatLogoff(pkt);
            break;
        case SERVICE_CHATLOGON:
            receiveChatLogon(pkt);
            break;
        case SERVICE_CHATMSG:
            receiveChatMsg(pkt);
            break;
        case SERVICE_CHATPM:
            receiveChatPM(pkt);
            break;
        case SERVICE_CONFADDINVITE:
            receiveConfAddInvite(pkt);
            break;
        case SERVICE_CONFDECLINE:
            receiveConfDecline(pkt);
            break;
        case SERVICE_CONFINVITE:
            receiveConfInvite(pkt);
            break;
        case SERVICE_CONFLOGOFF:
            receiveConfLogoff(pkt);
            break;
        case SERVICE_CONFLOGON:
            receiveConfLogon(pkt);
            break;
        case SERVICE_CONFMSG:
            receiveConfMsg(pkt);
            break;
        case SERVICE_CONTACTIGNORE:
            receiveContactIgnore(pkt);
            break;
        case SERVICE_CONTACTNEW:
            receiveContactNew(pkt);
            break;
        case SERVICE_FILETRANSFER:
            receiveFileTransfer(pkt);
            break;
        case SERVICE_FRIENDADD:
            receiveFriendAdd(pkt);
            break;
        case SERVICE_FRIENDREMOVE:
            receiveFriendRemove(pkt);
            break;
        case SERVICE_IDACT:
            receiveIdAct(pkt);
            break;
        case SERVICE_IDDEACT:
            receiveIdDeact(pkt);
            break;
        case SERVICE_ISAWAY:
            receiveIsAway(pkt);
            break;
        case SERVICE_ISBACK:
            receiveIsBack(pkt);
            break;
        case SERVICE_LIST:
            receiveList(pkt);
            break;
        case SERVICE_LOGOFF:
            receiveLogoff(pkt);
            break;
        case SERVICE_LOGON:
            receiveLogon(pkt);
            break;
        case SERVICE_MESSAGE:
            receiveMessage(pkt);
            break;
        case SERVICE_NEWMAIL:
            receiveNewMail(pkt);
            break;
        case SERVICE_NOTIFY:
            receiveNotify(pkt);
            break;
        case SERVICE_PING:
            receivePing(pkt);
            break;
        case SERVICE_USERSTAT:
            receiveUserStat(pkt);
            break;
        default:
            System.out.println("UNKNOWN: " + pkt.toString());
            break;
    }
}
