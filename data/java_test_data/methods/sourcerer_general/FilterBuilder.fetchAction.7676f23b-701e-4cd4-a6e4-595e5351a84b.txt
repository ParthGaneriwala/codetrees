protected void fetchAction() {
    JInternalFrame frame;
    Dimension dimension;
    Parser parser;
    NodeList list;
    // set up an internal frame for the results
    frame = new JInternalFrame(mURLField.getText());
    frame.setClosable(true);
    frame.setResizable(true);
    dimension = mOutput.getSize();
    frame.setBounds(0, 0, dimension.width, dimension.height);
    list = new NodeList();
    try {
        parser = new Parser(mURLField.getText());
        try {
            for (NodeIterator iterator = parser.elements(); iterator.hasMoreNodes(); ) list.add(iterator.nextNode());
        } catch (EncodingChangeException ece) {
            list.removeAll();
            parser.reset();
            for (NodeIterator iterator = parser.elements(); iterator.hasMoreNodes(); ) list.add(iterator.nextNode());
        }
    } catch (ParserException pe) {
        pe.printStackTrace();
    }
    JTree tree = new JTree(new HtmlTreeModel(list));
    tree.setRootVisible(false);
    tree.setCellRenderer(new HtmlTreeCellRenderer());
    JScrollPane treeView = new JScrollPane(tree);
    frame.setContentPane(new JScrollPane(treeView, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED));
    mOutput.add(frame, new Integer(1));
    try {
        frame.setSelected(true);
    } catch (PropertyVetoException pve) {
        pve.printStackTrace();
    }
    frame.show();
}
