@Override
protected String go() throws Exception {
    // TODO Auto-generated method stub
    UserService userService = (UserService) this.getBean("userService");
    ProDiaryService proDiaryService = (ProDiaryService) this.getBean("proDiaryService");
    ProDiaryReplyService diaryReplyService = (ProDiaryReplyService) this.getBean("proDiaryReplyService");
    ActionContext ctx = ActionContext.getContext();
    HttpServletRequest request = (HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST);
    // int userid=currentUserid;
    // Userinfo userInof=(Userinfo) userService.get(Userinfo.class, userid);
    proDiaryReply.setContent(content);
    // proDiaryReply.setUserinfo(userInof);
    proDiaryReply.setUserid(currentUserid);
    proDiaryReply.setReplyFloorid(0);
    proDiaryReply.setHiddenFlag((short) 0);
    proDiaryReply.setAnonymousFlag((short) 0);
    SnsDiary proDiary = (SnsDiary) proDiaryService.get(SnsDiary.class, diaryid);
    // 更新回复数
    String sqlUpdate = "UPDATE sns_diary SET reply_count=reply_count+1 WHERE diaryid=" + diaryid;
    proDiaryService.updateProDiary(sqlUpdate);
    proDiaryReply.setDiaryid(proDiary.getDiaryid());
    proDiaryReply.setCreateTime(new Timestamp(System.currentTimeMillis()));
    diaryReplyService.save(proDiaryReply);
    if (friendUserSize == 0) {
        friendUserSize = 8;
        this.pageSize = friendUserSize;
    }
    if (pageNo < 1)
        pageNo = 1;
    friendPage = diaryReplyService.ProDiaryReplyListByDiaryId(diaryid, friendUserSize, pageNo);
    Pagefoot pagefoot = new Pagefoot();
    pageString = pagefoot.packString(friendPage, pageNo, "getPage", friendUserSize);
    System.out.println(diaryFalg);
    if (diaryFalg == 0) {
        return "success";
    } else {
        return "friend";
    }
}
