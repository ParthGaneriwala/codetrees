public byte[] makePalette(IndexColorModel icm, int nColors) /**
 * this method creates and writes a palette with nColors number of colors. It only gets called for
 * IndexColorModel images.  *
 */
{
    int paletteSize = nColors * 3;
    byte[] palette = new byte[paletteSize];
    ByteArrayOutputStream localOut = new ByteArrayOutputStream(paletteSize);
    // output stream to write to palette byte array
    int count = icm.getMapSize();
    byte[] red = new byte[count];
    byte[] green = new byte[count];
    byte[] blue = new byte[count];
    int my_count;
    icm.getReds(red);
    icm.getGreens(green);
    icm.getBlues(blue);
    try {
        if (nColors < count) {
            my_count = nColors;
        } else {
            my_count = count;
        }
        for (int i = 0; i < my_count; i++) {
            localOut.write(red[i]);
            localOut.write(green[i]);
            localOut.write(blue[i]);
        }
        if (nColors > count) {
            for (int i = 0; i < nColors - my_count; ++i) {
                localOut.write(0x00);
                localOut.write(0x00);
                localOut.write(0x00);
            }
        }
        // now write out to palette[] and return
        palette = localOut.toByteArray();
        localOut.close();
        // deallocate
        localOut = null;
    } catch (IOException e) {
        nState = ERROR;
    }
    return palette;
}
