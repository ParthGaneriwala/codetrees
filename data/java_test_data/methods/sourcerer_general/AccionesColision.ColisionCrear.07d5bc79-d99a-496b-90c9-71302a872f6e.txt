public ActionForward ColisionCrear(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    // Salidas
    final String SALIDA_1 = "colision";
    String salida = SALIDA_1;
    Session s = HibernateUtil.getSessionFactory().getCurrentSession();
    Transaction tr = s.beginTransaction();
    try {
        FColision fFColision = (FColision) form;
        Colision colision = new Colision();
        if (fFColision.getOferta1() == 0)
            colision.setOferta1(null);
        else if ((colision.getOferta1() == null) || (colision.getOferta1().getIdOferta() != fFColision.getOferta1())) {
            Oferta obj = (Oferta) s.load(Oferta.class, fFColision.getOferta1());
            colision.setOferta1(obj);
        }
        if (fFColision.getOferta2() == 0)
            colision.setOferta2(null);
        else if ((colision.getOferta2() == null) || (colision.getOferta2().getIdOferta() != fFColision.getOferta2())) {
            Oferta obj = (Oferta) s.load(Oferta.class, fFColision.getOferta2());
            colision.setOferta2(obj);
        }
        colision.setCausa(fFColision.getCausa());
        colision.setGravedad(fFColision.getGravedad());
        s.save(colision);
        s.flush();
        fFColision.setIdColision(colision.getIdColision());
        // Feed for combo listOferta.
        {
            java.util.List<ve.usb.cohesion.runtime.Pair> list = (java.util.List<ve.usb.cohesion.runtime.Pair>) s.createQuery("select new ve.usb.cohesion.runtime.Pair(periodo, idOferta) " + "from Oferta").list();
            list.add(0, new ve.usb.cohesion.runtime.Pair("Ninguna", 0));
            fFColision.setListOferta(list);
        }
        request.getSession().setAttribute("idColision", colision.getIdColision());
        tr.commit();
    } catch (Exception ex) {
        tr.rollback();
        throw ex;
    }
    return mapping.findForward(salida);
}
