public void paintControl(PaintEvent pe) {
    GC gc = pe.gc;
    Point canvasSize = speedCanv.getSize();
    gc.setBackground(GUI.display.getSystemColor(SWT.COLOR_WHITE));
    gc.setForeground(GUI.display.getSystemColor(SWT.COLOR_BLACK));
    // tło
    gc.fillRectangle(0, 0, canvasSize.x, canvasSize.y);
    Font font = new Font(GUI.display, "Arial", 8, SWT.None);
    gc.setFont(font);
    int inc;
    // początkowy odstęp od lewej
    int x = 20;
    if (CoolKey.getUser().getStatistics().getSpeeds().size() != 0)
        // odstęp między słupkami
        inc = canvasSize.x / CoolKey.getUser().getStatistics().getSpeeds().size() - 2;
    else
        inc = 20;
    if (!accTests.getSelection()) {
        /*
					 * Osie i etykiety
					 */
        // oś y
        gc.drawLine(LEFT_MARGIN, 5, LEFT_MARGIN, canvasSize.y - BOTTOM_MARGIN);
        gc.drawString("znak/min", 25, 5);
        // oś x
        gc.drawLine(LEFT_MARGIN, canvasSize.y - BOTTOM_MARGIN, canvasSize.x - 10, canvasSize.y - BOTTOM_MARGIN);
        gc.drawString("Test", canvasSize.x - 30, canvasSize.y - 30);
        /*
					 * Skala
					 */
        int skala = 100;
        for (int j = canvasSize.y - BOTTOM_MARGIN - 100; j >= 40; j -= 100) {
            gc.drawLine(LEFT_MARGIN, j, canvasSize.x - LEFT_MARGIN, j);
            gc.drawString(Integer.toString(skala), x - 13, j - 12, true);
            skala += 100;
        }
        for (int j = canvasSize.y - BOTTOM_MARGIN - 50; j >= 40; j -= 50) {
            gc.drawLine(LEFT_MARGIN, j, canvasSize.x - LEFT_MARGIN, j);
        }
        /*
					 * Legenda
					 */
        gc.drawRectangle(canvasSize.x - (LEGEND_WIDTH + 10), 5, LEGEND_WIDTH, 40);
        gc.drawString("Prędkość", canvasSize.x - (LEGEND_WIDTH - 20), 8);
        gc.drawString("Prędkość realna", canvasSize.x - (LEGEND_WIDTH - 20), 24);
        gc.setBackground(GUI.display.getSystemColor(SWT.COLOR_RED));
        gc.fillRectangle(canvasSize.x - (LEGEND_WIDTH + 5), 12, 10, 10);
        gc.setBackground(GUI.display.getSystemColor(SWT.COLOR_BLUE));
        gc.fillRectangle(canvasSize.x - (LEGEND_WIDTH + 5), 27, 10, 10);
        gc.setForeground(GUI.display.getSystemColor(SWT.COLOR_RED));
        /*
					 * Prędkość.
					 */
        x = 40;
        List<Double> speeds = CoolKey.getUser().getStatistics().getSpeeds();
        for (int i = 0; i < speeds.size(); i++) {
            double speed = speeds.get(i);
            gc.setBackground(GUI.display.getSystemColor(SWT.COLOR_RED));
            gc.fillOval(x - 3, canvasSize.y - (int) speed - BOTTOM_MARGIN - 3, 6, 6);
            /*
						 * prędkość nad słupkiem
						 */
            gc.setBackground(GUI.display.getSystemColor(SWT.COLOR_WHITE));
            gc.drawString(String.format("%.2f", speed), x - 10, canvasSize.y - (int) speed - BOTTOM_MARGIN - 30);
            if (i > 0) {
                gc.drawLine(x, canvasSize.y - (int) speed - BOTTOM_MARGIN, x - inc, canvasSize.y - speeds.get(i - 1).intValue() - BOTTOM_MARGIN);
            }
            // zwiększenie odstępu do następnego słupka
            x += inc;
        }
        /*
					 * Prędkość realna. (analogicznie do wyżej)
					 */
        x = 40;
        gc.setForeground(GUI.display.getSystemColor(SWT.COLOR_BLUE));
        speeds = CoolKey.getUser().getStatistics().getRealSpeeds();
        for (int i = 0; i < speeds.size(); i++) {
            double speed2 = speeds.get(i);
            gc.setBackground(GUI.display.getSystemColor(SWT.COLOR_BLUE));
            gc.fillOval(x - 3, canvasSize.y - (int) speed2 - BOTTOM_MARGIN - 3, 6, 6);
            gc.setBackground(GUI.display.getSystemColor(SWT.COLOR_WHITE));
            gc.drawString(String.format("%.2f", speed2), x - 13, canvasSize.y - (int) speed2 - BOTTOM_MARGIN + 15);
            if (i > 0) {
                gc.drawLine(x, canvasSize.y - (int) speed2 - BOTTOM_MARGIN + 1, x - inc, canvasSize.y - speeds.get(i - 1).intValue() - BOTTOM_MARGIN + 1);
            }
            x += inc;
        }
    } else {
        /* Poprawność */
        // oś y
        gc.drawLine(LEFT_MARGIN, 5, LEFT_MARGIN, canvasSize.y - BOTTOM_MARGIN);
        // oś x
        gc.drawLine(LEFT_MARGIN, canvasSize.y - BOTTOM_MARGIN, canvasSize.x - LEFT_MARGIN, canvasSize.y - BOTTOM_MARGIN);
        // etykieta y
        gc.drawString("Poprawność %", 7, 5);
        // etykieta x
        gc.drawString("Test", canvasSize.x - 30, canvasSize.y - 20);
        /*
					 *  Skala
					 */
        gc.setForeground(GUI.display.getSystemColor(SWT.COLOR_GRAY));
        int skala = 5;
        for (int j = canvasSize.y - BOTTOM_MARGIN - 15; skala < 100; j -= 15) {
            gc.drawLine(LEFT_MARGIN, j, canvasSize.x - LEFT_MARGIN, j);
            skala += 5;
        }
        gc.setForeground(GUI.display.getSystemColor(SWT.COLOR_BLACK));
        skala = 20;
        for (int j = canvasSize.y - BOTTOM_MARGIN - 60; skala <= 100; j -= 60) {
            gc.drawLine(LEFT_MARGIN, j, canvasSize.x - LEFT_MARGIN, j);
            gc.drawString(Integer.toString(skala), x - 13, j - 12, true);
            skala += 20;
        }
        int y;
        x = 35;
        if (CoolKey.getUser().getStatistics().getAccuracies().size() != 0)
            inc = canvasSize.x / CoolKey.getUser().getStatistics().getAccuracies().size();
        List<Double> testsSpeeds = CoolKey.getUser().getStatistics().getAccuracies();
        gc.setForeground(GUI.display.getSystemColor(SWT.COLOR_RED));
        for (int i = 0; i < testsSpeeds.size(); i++) {
            double s = testsSpeeds.get(i);
            y = canvasSize.y - (int) s * 3 - BOTTOM_MARGIN;
            gc.setBackground(GUI.display.getSystemColor(SWT.COLOR_RED));
            gc.fillOval(x - 3, y - 3, 6, 6);
            if (i > 0) {
                gc.drawLine(x, y + 1, x - inc, canvasSize.y - testsSpeeds.get(i - 1).intValue() * 3 - BOTTOM_MARGIN + 1);
            }
            gc.setBackground(GUI.display.getSystemColor(SWT.COLOR_WHITE));
            gc.drawString(String.format("%.2f", s) + "%", x - 10, y - 30);
            x += inc;
        }
    }
    gc.dispose();
}
