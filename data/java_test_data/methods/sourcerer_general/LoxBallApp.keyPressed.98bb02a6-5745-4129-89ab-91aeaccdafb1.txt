public void keyPressed(KeyEvent e) {
    char C = e.getKeyChar();
    int c = e.getKeyCode();
    // System.out.println("Key: " + C + ", code: " + c);
    if (C == 'h') {
        if (RUNNING)
            PAUSED = true;
        // CHEATBUG: clears screen
        canvas.displayHelp();
        return;
    } else if (C == 's') {
        if (lox_base != null) {
            if (RUNNING)
                PAUSED = true;
            HiScoreData[] scores = lox_base.topX(DB_DIFF, 10, true);
            canvas.displayTopScores(scores, DB_DIFF);
        }
        return;
    } else if (C == 'v') {
        System.out.println(VERSION);
    }
    if (GAMEOVER)
        return;
    LoxPlayer player = getKeyboardPlayer();
    // boolean move = true;
    switch(C) {
        case '8':
            c = KEY_UP;
            break;
        case '2':
            c = KEY_DOWN;
            break;
        case '4':
            c = KEY_LEFT;
            break;
        case '6':
            c = KEY_RIGHT;
            break;
        case '7':
            c = KEY_NW;
            break;
        case '9':
            c = KEY_NE;
            break;
        case '1':
            c = KEY_SW;
            break;
        case '3':
            c = KEY_SE;
            break;
        case '5':
            c = KEY_CENTER;
            break;
    }
    switch(c) {
        case KEY_UP:
            player.changeDir(Math.PI);
            player.setStopped(false);
            break;
        case KEY_DOWN:
            player.changeDir(Math.PI * 2);
            player.setStopped(false);
            break;
        case KEY_RIGHT:
            player.changeDir(Math.PI / 2);
            player.setStopped(false);
            break;
        case KEY_LEFT:
            player.changeDir(Math.PI * 1.5);
            player.setStopped(false);
            break;
        case KEY_NW:
            player.changeDir(Math.PI * 1.25);
            player.setStopped(false);
            break;
        case KEY_SW:
            player.changeDir(Math.PI * 1.75);
            player.setStopped(false);
            break;
        case KEY_NE:
            player.changeDir(Math.PI * .75);
            player.setStopped(false);
            break;
        case KEY_SE:
            player.changeDir(Math.PI * .25);
            player.setStopped(false);
            break;
        case KEY_CENTER:
            player.setStopped(true);
            break;
        // move = false;
        default:
    }
    if (C == 'q')
        GAMEOVER = true;
}
