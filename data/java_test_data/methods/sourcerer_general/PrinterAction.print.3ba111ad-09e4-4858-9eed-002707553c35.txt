public ActionForward print(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    if (log.isDebugEnabled()) {
        log.debug("Entering 'print' method");
    }
    PrinterForm pForm = (PrinterForm) form;
    String comid = pForm.getComId();
    String ptype = pForm.getPrinterType();
    int type = 0;
    if (ptype.equals("R2844Z"))
        type = 0;
    if (ptype.equals("R110Xi"))
        type = 1;
    boolean wcover = pForm.isWriteCover();
    boolean readid = pForm.isReadId();
    boolean wtag = pForm.isWriteTag();
    String tagdata = pForm.getTagdata();
    List<LabelValueBean> serialPorts = new ArrayList<LabelValueBean>();
    List<CommPortIdentifier> comms = StaticFactory.listComms();
    for (CommPortIdentifier comm : comms) {
        serialPorts.add(new LabelValueBean(comm.getName(), comm.getName()));
    }
    pForm.setComs(serialPorts);
    List<LabelValueBean> printers = new ArrayList<LabelValueBean>();
    printers.add(new LabelValueBean("R2844Z", "R2844Z"));
    printers.add(new LabelValueBean("R110Xi", "R110Xi"));
    pForm.setPrinters(printers);
    PrinterManager pg = new PrinterManager();
    pg.open(comid, "9600");
    if (pg.isOpen()) {
        String command, info;
        command = pg.setCommand(type, wcover, readid, wtag, tagdata);
        if ((command == null) || (command.length() == 0))
            pForm.setMessage("No command");
        else {
            pForm.addMessage("doCommand[" + command + "]");
            info = pg.doCommand(command);
            if (info != null)
                pForm.addMessage(info);
            else
                pForm.addMessage("No response from printer");
        }
    } else
        pForm.addMessage("Can't open " + comid);
    pg.close();
    updateFormBean(mapping, request, pForm);
    return mapping.findForward("edit");
}
