public void serialize(final javax.xml.namespace.QName parentQName, final org.apache.axiom.om.OMFactory factory, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
    java.lang.String prefix = parentQName.getPrefix();
    java.lang.String namespace = parentQName.getNamespaceURI();
    if (namespace != null) {
        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
        if (writerPrefix != null) {
            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
        } else {
            if (prefix == null) {
                prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
            }
            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
            xmlWriter.writeNamespace(prefix, namespace);
            xmlWriter.setPrefix(prefix, namespace);
        }
    } else {
        xmlWriter.writeStartElement(parentQName.getLocalPart());
    }
    namespace = "http://www.tid.es/schema/parlayx/third_party_call/v1_1";
    if (!namespace.equals("")) {
        prefix = xmlWriter.getPrefix(namespace);
        if (prefix == null) {
            prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
            xmlWriter.writeStartElement(prefix, "description", namespace);
            xmlWriter.writeNamespace(prefix, namespace);
            xmlWriter.setPrefix(prefix, namespace);
        } else {
            xmlWriter.writeStartElement(namespace, "description");
        }
    } else {
        xmlWriter.writeStartElement("description");
    }
    if (localDescription == null) {
        throw new RuntimeException("description cannot be null!!");
    } else {
        xmlWriter.writeCharacters(localDescription);
    }
    xmlWriter.writeEndElement();
    if (localCurrencyTracker) {
        namespace = "http://www.tid.es/schema/parlayx/third_party_call/v1_1";
        if (!namespace.equals("")) {
            prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                xmlWriter.writeStartElement(prefix, "currency", namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            } else {
                xmlWriter.writeStartElement(namespace, "currency");
            }
        } else {
            xmlWriter.writeStartElement("currency");
        }
        if (localCurrency == null) {
            throw new RuntimeException("currency cannot be null!!");
        } else {
            xmlWriter.writeCharacters(localCurrency);
        }
        xmlWriter.writeEndElement();
    }
    if (localAmountTracker) {
        namespace = "http://www.tid.es/schema/parlayx/third_party_call/v1_1";
        if (!namespace.equals("")) {
            prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                xmlWriter.writeStartElement(prefix, "amount", namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            } else {
                xmlWriter.writeStartElement(namespace, "amount");
            }
        } else {
            xmlWriter.writeStartElement("amount");
        }
        if (localAmount == null) {
            throw new RuntimeException("amount cannot be null!!");
        } else {
            xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAmount));
        }
        xmlWriter.writeEndElement();
    }
    if (localCodeTracker) {
        namespace = "http://www.tid.es/schema/parlayx/third_party_call/v1_1";
        if (!namespace.equals("")) {
            prefix = xmlWriter.getPrefix(namespace);
            if (prefix == null) {
                prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                xmlWriter.writeStartElement(prefix, "code", namespace);
                xmlWriter.writeNamespace(prefix, namespace);
                xmlWriter.setPrefix(prefix, namespace);
            } else {
                xmlWriter.writeStartElement(namespace, "code");
            }
        } else {
            xmlWriter.writeStartElement("code");
        }
        if (localCode == null) {
            throw new RuntimeException("code cannot be null!!");
        } else {
            xmlWriter.writeCharacters(localCode);
        }
        xmlWriter.writeEndElement();
    }
    xmlWriter.writeEndElement();
}
