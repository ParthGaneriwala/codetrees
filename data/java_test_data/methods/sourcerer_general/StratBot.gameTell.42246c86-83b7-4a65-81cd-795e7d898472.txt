@Override
public void gameTell(String handle, String msg) {
    if (!msg.equals(""))
        log.println(handle + ": " + msg);
    if (cmdTell(handle, msg))
        return;
    StringTokenizer ST = new StringTokenizer(msg);
    int t = ST.countTokens();
    String m = null;
    if (t > 0)
        m = ST.nextToken();
    else
        m = "";
    Stratego s = locate(handle);
    if (s == null)
        s = getObs(handle);
    SPlayer p = null;
    if (s != null)
        p = s.locate(handle);
    if (msg.equalsIgnoreCase("HELP")) {
        List<String> helpvec = FileHelper.readFile(HELPFILE);
        for (int v = 0; v < helpvec.size(); v++) Serv.say(handle, helpvec.get(v));
    } else if (msg.equalsIgnoreCase("VER")) {
        Serv.say(handle, VERSION);
    } else if (msg.equalsIgnoreCase("GUI")) {
        if (!GUI.contains(handle))
            GUI.addElement(handle);
        Serv.say(handle, "GUI set.");
    } else if (msg.equalsIgnoreCase("!GUI")) {
        GUI.removeElement(handle);
        Serv.say(handle, "GUI unset.");
    } else if (s != null && msg.equalsIgnoreCase(LSTBOARD)) {
        s.showHist(handle);
    } else if (msg.equalsIgnoreCase("TOPTEN")) {
        Serv.qSay(handle, GameBase.topTen("wins"));
    } else if (t > 1 && m.equalsIgnoreCase("TOPTEN")) {
        Serv.qSay(handle, GameBase.topTen(ST.nextToken()));
    } else if (msg.equalsIgnoreCase("FINGER")) {
        Serv.qSay(handle, StroBase.statLine(GameBase.getStats(handle, null)));
    } else if (t > 1 && m.equalsIgnoreCase("FINGER")) {
        Serv.qSay(handle, StroBase.statLine(GameBase.getStats(ST.nextToken(), null)));
    } else if (p != null && p.isWaiting()) {
        p.RESPONSE = msg;
        p.wakeup();
    } else
        Serv.say(handle, "Excuse me?");
}
