private void restoSentenciaRead(int tipoLectura) throws AleXcore.ExcepcionCaracterInvalido, AleXcore.ExcepcionComentarioSinCerrar, AleXcore.ExcepcionIdentificadorInvalido, AleXcore.ExcepcionComentarioCerrado, ExcepcionErrorSintactico, ExcepcionErrorSemantico {
    Elemento idObj;
    String identificador;
    if (ultimoToken.isToken(Token.COMA)) {
        ultimoToken = alex.getToken();
        identificador = ultimoToken.getLexema();
        if (TdS.pertenece(identificador)) {
            idObj = TdS.getEntrada(identificador);
            if (idObj.esVariable()) {
                Variable idObjVAR = (Variable) idObj;
                if (idObjVAR.getTipo().esArreglo()) {
                    // Verifica si el tipo del parametro es entero
                    if (!TdS.compatibles(((Arreglo) (idObjVAR.getTipo())).getTipoElemento(), new Entero())) {
                        throw new ExcepcionErrorSemantico("Se esperaba parametro de tipo entero en linea " + ultimoToken.getLinea());
                    }
                    restoSentenciaReadArreglo(((Arreglo) idObjVAR.getTipo()), tipoLectura);
                } else {
                    // Verifica si el tipo del parametro es entero
                    if (!TdS.compatibles(idObjVAR.getTipo(), new Entero())) {
                        throw new ExcepcionErrorSemantico("Se esperaba parametro de tipo entero en linea " + ultimoToken.getLinea());
                    }
                }
                if (tipoLectura == READ) {
                    MepaH.generarInstruccion("LEER");
                } else {
                    MepaH.generarInstruccion("LELN");
                }
                if (idObjVAR.getTipo().esArreglo()) {
                    Arreglo arr = ((Arreglo) idObjVAR.getTipo());
                    MepaH.generarInstruccion("CONT " + ((Subrango) arr.getTipoElemento()).getli() + " , " + ((Subrango) arr.getTipoElemento()).getls());
                    MepaH.generarInstruccion("ALAR " + idObjVAR.getNivelLexico() + " , " + idObjVAR.getOffset());
                } else {
                    MepaH.generarInstruccion("CONT " + ((Subrango) idObjVAR.getTipo()).getli() + " , " + ((Subrango) idObjVAR.getTipo()).getls());
                    MepaH.generarInstruccion("ALVL " + idObjVAR.getNivelLexico() + " , " + idObjVAR.getOffset());
                }
            } else if (idObj.esParametro()) {
                ParametroFormal idObjPAR = (ParametroFormal) idObj;
                if (idObjPAR.getTipo().esArreglo()) {
                    // Verifica si el tipo del parametro es entero
                    if (!TdS.compatibles(((Arreglo) (idObjPAR.getTipo())).getTipoElemento(), new Entero())) {
                        throw new ExcepcionErrorSemantico("Se esperaba parametro de tipo entero en linea " + ultimoToken.getLinea());
                    }
                    restoSentenciaReadArreglo(((Arreglo) idObjPAR.getTipo()), tipoLectura);
                } else {
                    // Verifica si el tipo del parametro es entero
                    if (!TdS.compatibles(idObjPAR.getTipo(), new Entero())) {
                        throw new ExcepcionErrorSemantico("Se esperaba parametro de tipo entero en linea " + ultimoToken.getLinea());
                    }
                }
                if (tipoLectura == READ) {
                    MepaH.generarInstruccion("LEER");
                } else {
                    MepaH.generarInstruccion("LELN");
                }
                if (idObjPAR.getTipo().esArreglo()) {
                    Arreglo arr = ((Arreglo) idObjPAR.getTipo());
                    if (idObjPAR.getPasaje() == VALOR) {
                        MepaH.generarInstruccion("CONT " + ((Subrango) arr.getTipoElemento()).getli() + " , " + ((Subrango) arr.getTipoElemento()).getls());
                        MepaH.generarInstruccion("ALAR " + idObjPAR.getNivelLexico() + " , " + idObjPAR.getOffset());
                    } else {
                        MepaH.generarInstruccion("CONT " + ((Subrango) arr.getTipoElemento()).getli() + " , " + ((Subrango) arr.getTipoElemento()).getls());
                        MepaH.generarInstruccion("ALAI " + idObjPAR.getNivelLexico() + " , " + idObjPAR.getOffset());
                    }
                } else {
                    if (idObjPAR.getPasaje() == VALOR) {
                        MepaH.generarInstruccion("CONT " + ((Subrango) idObjPAR.getTipo()).getli() + " , " + ((Subrango) idObjPAR.getTipo()).getls());
                        MepaH.generarInstruccion("ALVL " + idObjPAR.getNivelLexico() + " , " + idObjPAR.getOffset());
                    } else {
                        MepaH.generarInstruccion("CONT " + ((Subrango) idObjPAR.getTipo()).getli() + " , " + ((Subrango) idObjPAR.getTipo()).getls());
                        MepaH.generarInstruccion("ALVI " + idObjPAR.getNivelLexico() + " , " + idObjPAR.getOffset());
                    }
                }
            } else {
                throw new ExcepcionErrorSemantico("Se esperaba identificador de variable en linea " + ultimoToken.getLinea());
            }
            ultimoToken = alex.getToken();
        } else {
            throw new ExcepcionErrorSintactico("Se esperaba identificador en linea " + ultimoToken.getLinea());
        }
        restoSentenciaRead(tipoLectura);
    } else if (ultimoToken.isToken(Token.PARCIERRA)) {
        ultimoToken = alex.getToken();
    } else {
        throw new ExcepcionErrorSintactico("Se esperaba ')' o expresion en linea " + ultimoToken.getLinea());
    }
}
