public String go() throws HibernateException {
    List userlist = getQuery().setString("loginname", loginname).setString("password", md5.MD5(password)).list();
    nextpage = "../userlogin.jsp";
    String rand = (String) get("rand");
    if (rand == null || "".equals(rand)) {
        rand = randnum;
    // message = "此次登录已经过期，请重新登录！";
    // return ERROR;
    }
    if (!randnum.equals(rand)) {
        message = "验证码不正确！";
        return ERROR;
    }
    if (userlist == null || userlist.size() != 1) {
        message = "用户不存在或密码错误！";
        return ERROR;
    } else {
        curuser = (TsysUser) userlist.get(0);
        if (curuser.getStatusid() == 0) {
            message = "用户已经被锁定，请联系管理员！";
            return ERROR;
        }
        // session中保存用户信息前先记录用户登录日志,以获取用户此次登录ID
        SysLoginlog log = new SysLoginlog();
        log.setLoginname(curuser.getLoginname());
        log.setLogintime(new java.util.Date());
        ActionContext ctx = ActionContext.getContext();
        String contextid = ctx.getApplication().get("CONTEXTID").toString();
        HttpServletRequest request = (HttpServletRequest) ctx.get(ServletActionContext.HTTP_REQUEST);
        String _remoteAddr = request.getRemoteAddr();
        log.setContextid(contextid);
        log.setLoginip(_remoteAddr);
        if (flag != null && flag.equals("toback"))
            log.setLoginremarks("会话退出重新登录");
        else
            log.setLoginremarks("正常登录");
        getSession().save(log);
        curuser.setLoginId(log.getLoginid());
        // Session中保存用户信息
        set("curuser", curuser);
        // Sessionf中保存用户权限
        // HashMap _rights=CommonFunction.getUserRights(getSession(),user.getUserid().intValue());
        java.util.Set<TsysUserRole> set = curuser.getTsysUserRoles();
        if (set != null) {
            for (TsysUserRole userRole : set) {
                int roleid = userRole.getComp_id().getTsysRole().getRoleid();
                if (roleid == 1 || roleid == 2) {
                    curuser.setCallUser(true);
                    break;
                }
            }
        }
        HashMap powers = CommonFunction.getUserRights(getSession(), curuser);
        set("powers", powers);
        // Sessionf中保存left中构建树的生成代码
        String treeoption = CommonFunction.getTreeOption(getSession(), curuser);
        if (treeoption.equals(""))
            treeoption = "0,\"系统管理\",\"\",\"\",\"\",\"\",4,\"\",\"url\",\"\",5";
        set("treeoption", treeoption);
        int style = curuser.getStyle();
        if ("toback".equals(flag)) {
            return "toback";
        }
        if (style == 1)
            return "style1";
        if (style == 2)
            return "style2";
        if (style == 3)
            return "style3";
        return SUCCESS;
    }
}
