public void testDataGenerator() {
    String[] args = new String[] { "bunk.conf" };
    String[] bunk = new String[0];
    File confFile = new File(args[0]);
    if (confFile.exists()) {
        confFile.delete();
    }
    // File not found
    DataGenerator.main(bunk);
    DataGenerator.main(args);
    // Empty file - an attempt to force the while loop to have condition coverage.
    writeConfigurationFile(confFile, "");
    DataGenerator.main(args);
    // Generate a NumberFormatException
    confFile.delete();
    writeConfigurationFile(confFile, "Users 2-0\n");
    // Try to raise an IOException, but it ends up being a FileNotFoundException.
    // confFile.setReadable(false);
    DataGenerator.main(args);
    // confFile.setReadable(true);
    // Good data.
    confFile.delete();
    Model.setFilename(modelFileName);
    Model.clearModel();
    writeConfigurationFile(confFile, "Users 20\n" + "Products 5\n" + "Modules 15\n" + "Builds 10\n" + "Plans 3\n" + "Groups 12\n" + "Cases 36\n" + "Defects 25\n" + "Filename " + modelFileName + "\n");
    DataGenerator.main(args);
    assertTrue(Model.loadModel());
    Model model = Model.getInstance();
    // 21 to account for the admin user
    assertEquals(21, model.getUsers().getCollection().size());
    assertEquals(5, model.getProducts().size());
    assertEquals(3, model.getTestPlans().getTestPlans().size());
    assertEquals(25, model.getDefects().size());
    confFile.delete();
    File bunkModel = new File(modelFileName);
    bunkModel.delete();
}
