public static void main(String[] args) {
    // create an initial fifteen puzzle state by first generating the goal config
    // PuzzleState myState=new PuzzleState();
    // Create a random puzzle and memorise the puzzle state.
    PuzzleState myState = randomPuzzle(10);
    PuzzleState myState2 = new PuzzleState(myState);
    // or "shuffle" the tiles around manually a little bit...
    // myState=new PuzzleState(myState, PuzzleState.MOVE_LEFT);
    // myState=new PuzzleState(myState, PuzzleState.MOVE_UP);
    // myState=new PuzzleState(myState, PuzzleState.MOVE_LEFT);
    // myState=new PuzzleState(myState, PuzzleState.MOVE_UP);
    // myState=new PuzzleState(myState, PuzzleState.MOVE_UP);
    // now perform the search from the "shuffled" initial state (fringe is empty), and
    // pull out the actions that were used to generate this goal state from the initial state
    Action[] actions1G = solveH1G(new PuzzleState(myState));
    Action[] actions1A = solveH1A(new PuzzleState(myState));
    Action[] actions2G = solveH2G(new PuzzleState(myState));
    Action[] actions2A = solveH2A(new PuzzleState(myState));
    Action[] actions3G = solveH3G(new PuzzleState(myState));
    Action[] actions3A = solveH3A(new PuzzleState(myState));
    Action[] actions4G = solveH4G(new PuzzleState(myState));
    Action[] actions4A = solveH4A(new PuzzleState(myState));
    // List the initial state and results of actions performed.
    System.out.println("Initial state:");
    System.out.println(myState2.toString());
    System.out.println("Solution via H1 with Greedy:-------------");
    for (int i = 0; i < actions1G.length; i++) {
        System.out.println((i + 1) + ": " + actions1G[actions1G.length - 1 - i]);
        PuzzleState.performAction(myState2, actions1G[actions1G.length - 1 - i]);
        System.out.println(myState2.toString());
    }
    System.out.println("Solution via H1 with A*:-------------");
    myState2 = new PuzzleState(myState);
    for (int i = 0; i < actions1A.length; i++) {
        System.out.println((i + 1) + ": " + actions1A[actions1A.length - 1 - i]);
        PuzzleState.performAction(myState2, actions1A[actions1A.length - 1 - i]);
        System.out.println(myState2.toString());
    }
    System.out.println("Solution via H2 with Greedy:-------------");
    myState2 = new PuzzleState(myState);
    for (int i = 0; i < actions2G.length; i++) {
        System.out.println((i + 1) + ": " + actions2G[actions2G.length - 1 - i]);
        PuzzleState.performAction(myState2, actions2G[actions2G.length - 1 - i]);
        System.out.println(myState2.toString());
    }
    System.out.println("Solution via H2 with A*:-------------");
    myState2 = new PuzzleState(myState);
    for (int i = 0; i < actions2A.length; i++) {
        System.out.println((i + 1) + ": " + actions2A[actions2A.length - 1 - i]);
        PuzzleState.performAction(myState2, actions2A[actions2A.length - 1 - i]);
        System.out.println(myState2.toString());
    }
    System.out.println("Solution via H3 with Greedy:-------------");
    myState2 = new PuzzleState(myState);
    for (int i = 0; i < actions3G.length; i++) {
        System.out.println((i + 1) + ": " + actions3G[actions3G.length - 1 - i]);
        PuzzleState.performAction(myState2, actions3G[actions3G.length - 1 - i]);
        System.out.println(myState2.toString());
    }
    System.out.println("Solution via H3 with A*:-------------");
    myState2 = new PuzzleState(myState);
    for (int i = 0; i < actions3A.length; i++) {
        System.out.println((i + 1) + ": " + actions3A[actions3A.length - 1 - i]);
        PuzzleState.performAction(myState2, actions3A[actions3A.length - 1 - i]);
        System.out.println(myState2.toString());
    }
    System.out.println("Solution via H4 with Greedy:-------------");
    myState2 = new PuzzleState(myState);
    for (int i = 0; i < actions4G.length; i++) {
        System.out.println((i + 1) + ": " + actions4G[actions4G.length - 1 - i]);
        PuzzleState.performAction(myState2, actions4G[actions4G.length - 1 - i]);
        System.out.println(myState2.toString());
    }
    System.out.println("Solution via H4 with A*:-------------");
    myState2 = new PuzzleState(myState);
    for (int i = 0; i < actions4A.length; i++) {
        System.out.println((i + 1) + ": " + actions4A[actions4A.length - 1 - i]);
        PuzzleState.performAction(myState2, actions4A[actions4A.length - 1 - i]);
        System.out.println(myState2.toString());
    }
}
