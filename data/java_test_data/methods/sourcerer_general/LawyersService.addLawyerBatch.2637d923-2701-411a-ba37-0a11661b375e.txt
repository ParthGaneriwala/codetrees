public List<String> addLawyerBatch(SysUser sysUser, int provinceunion, int directunion, List<Lawyers> lawyerslist) throws ServiceException {
    List<String> result = new ArrayList<String>();
    try {
        SysGroupService service = (SysGroupService) Globals.getBean("sysGroupService");
        List<String> oldlawyerno = new ArrayList<String>();
        // 所有的事务所
        List<SysGroup> groups = service.getChildGroup(directunion);
        Map<String, Integer> map = new HashMap<String, Integer>();
        for (SysGroup group : groups) {
            map.put(group.getGroupname(), group.getGroupid());
        }
        java.sql.Timestamp timestamp = new java.sql.Timestamp(System.currentTimeMillis());
        for (Lawyers lawyer : lawyerslist) {
            StringBuffer sb = new StringBuffer();
            String officename = lawyer.getOfficename();
            String gender = lawyer.getGender();
            lawyer.setDirectunion(directunion);
            lawyer.setProvinceunion(provinceunion);
            lawyer.setCreatetime(timestamp);
            lawyer.setCreateuser(sysUser.getUserid());
            lawyer.setCreateusername(sysUser.getUsername());
            lawyer.setLawyerenname(com.changpeng.common.util.Chinese2Pinyin.to2pinyin(lawyer.getLawyername()));
            lawyer.setPasswd(lawyer.getCertno());
            // 后台批量导入
            lawyer.setRegsrc(11);
            lawyer.setRemarks("批量导入");
            lawyer.setLoginname(lawyer.getLawyerno());
            Date date = null;
            if (oldlawyerno.contains(lawyer.getLawyerno())) {
                result.add("第" + lawyer.getExcelline() + "行错误:执业证号在此文件中已经存在:" + lawyer.getLawyerno() + "|||");
                continue;
            }
            oldlawyerno.add(lawyer.getLawyerno());
            if (lawyer.getZhiyedatestr() != null && !"".equals(lawyer.getZhiyedate())) {
                try {
                    date = df.parse(lawyer.getZhiyedatestr());
                } catch (Exception e) {
                    sb.append("执业日期必须为yyyy-MM-dd的形式:" + lawyer.getZhiyedatestr());
                }
            }
            if (!map.containsKey(officename)) {
                sb.append("事务所" + officename + "在系统中不存在|||");
            }
            if (gender != null && !"".equals("gender") && !map.containsKey(officename)) {
                sb.append("性别" + gender + "错误,必须为(男,女,G,M)|||");
            }
            if (lawyer.getLawyerno() == null || lawyer.getLawyerno().equals("")) {
                sb.append("执业证号为空|||");
            }
            if (lawyer.getCertno() == null || lawyer.getCertno().equals("")) {
                sb.append("身份证号为空|||");
            }
            if (sb.toString().length() == 0) {
                try {
                    lawyer.setZhiyedate(date);
                    lawyer.setGender(GENDER.get(lawyer.getGender()));
                    lawyer.setPasswd(lawyer.getCertno());
                    lawyer.setTheoffice(map.get(officename));
                    lawyersDAO.save(lawyer);
                } catch (Exception e) {
                    e.printStackTrace();
                    result.add("第" + lawyer.getExcelline() + "行新增错误::" + e.getMessage());
                }
            } else {
                result.add("第" + lawyer.getExcelline() + "行::" + sb);
            }
        }
        return result;
    } catch (Exception e) {
        throw new ServiceException(e);
    }
}
