private void createCommentsPanel(MouseAdapter mouseListener) {
    ActionListener actionListener = new ActionListener() {

        public void actionPerformed(ActionEvent evt) {
            if (evt.getSource() == commentsAddMenuItem) {
                addComment();
            } else if (evt.getSource() == commentsDeleteMenuItem) {
                deleteComment();
            }
        }
    };
    commentsPanel = new JPanel();
    commentsPanel.setBorder(BorderFactory.createTitledBorder("Comments"));
    commentsColumnModel = new DefaultTableColumnModel();
    TableColumn column = new TableColumn(0);
    column.setHeaderValue("User");
    commentsColumnModel.addColumn(column);
    column = new TableColumn(1);
    column.setHeaderValue("Created");
    commentsColumnModel.addColumn(column);
    commentsTableModel = new DefaultTableModel(0, 2) {

        private static final long serialVersionUID = 1L;

        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    commentsTable = new JTable(commentsTableModel, commentsColumnModel);
    commentsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    commentsTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

        public void valueChanged(ListSelectionEvent evt) {
            if (eventsAreDisabled()) {
                return;
            }
            if (evt.getValueIsAdjusting()) {
                return;
            }
            editComment();
        }
    });
    commentsTable.addMouseListener(mouseListener);
    commentsTableHeader = commentsTable.getTableHeader();
    commentsTableHeader.addMouseListener(mouseListener);
    commentsTableScrollPane = new JScrollPane(commentsTable, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
    commentsTableScrollPane.setPreferredSize(new Dimension(450, 100));
    commentsPopupMenu = new JPopupMenu();
    commentsAddMenuItem = new JMenuItem("Add");
    commentsAddMenuItem.addActionListener(actionListener);
    commentsPopupMenu.add(commentsAddMenuItem);
    commentsDeleteMenuItem = new JMenuItem("Delete");
    commentsDeleteMenuItem.addActionListener(actionListener);
    commentsPopupMenu.add(commentsDeleteMenuItem);
    commentArea = new JTextArea(80, 50);
    commentArea.setLineWrap(true);
    commentArea.setWrapStyleWord(true);
    commentArea.addFocusListener(focusListener);
    commentArea.setInputVerifier(new TextInputVerifier() {

        protected void synchronize() {
            commentChanged();
        }
    });
    commentAreaScrollPane = new JScrollPane(commentArea, JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
    commentAreaScrollPane.setPreferredSize(new Dimension(450, 175));
}
