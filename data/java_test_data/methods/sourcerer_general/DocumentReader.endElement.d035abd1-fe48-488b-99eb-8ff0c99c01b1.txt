@Override
public void endElement(String namespaceURI, String localName, String rawName) throws SAXException {
    if (rawName.equals("BoardPoint")) {
        String pop = "";
        while (!st.empty()) {
            pop += st.pop();
            pop += " ";
        }
        this.makeGame(pop);
        startStack = false;
        bpfound = false;
    } else if (rawName.equals("player1")) {
        g.player1 = Boolean.valueOf(st.pop());
        startStack = false;
        player1found = false;
    } else if (rawName.equals("player2")) {
        g.player2 = Boolean.valueOf(st.pop());
        ;
        startStack = false;
        player1found = false;
    } else if (rawName.equals("knight")) {
        String pop = "";
        while (!st.empty()) {
            pop += st.pop();
            pop += " ";
        }
        String[] s = pop.split(" ");
        if (s[4].equals("Knight")) {
            if (s[2].equals("false")) {
                ((KnightsTour) g).getKnight().player = false;
            } else {
                ((KnightsTour) g).getKnight().player = true;
            }
            if (s[0].equals("false")) {
                ((KnightsTour) g).getKnight().hasMoved = false;
            } else {
                ((KnightsTour) g).getKnight().hasMoved = true;
            }
        }
        startStack = false;
        player1found = false;
    } else if (rawName.equals("lastMove_x")) {
        ((KnightsTour) g).setLastMove_x(Integer.parseInt(st.pop()));
        startStack = false;
        lastMove_xfound = false;
    } else if (rawName.equals("lastMove_y")) {
        ((KnightsTour) g).setLastMove_y(Integer.parseInt(st.pop()));
        startStack = false;
        lastMove_yfound = false;
    } else if (rawName.equals("count")) {
        ((EightQueens) g).setCount(Integer.parseInt(st.pop()));
        startStack = false;
        countfound = false;
    }
}
