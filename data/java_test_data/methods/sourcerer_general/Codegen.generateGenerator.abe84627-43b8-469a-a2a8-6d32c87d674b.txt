// This creates a the user-facing function that returns a NativeGenerator
private void generateGenerator() {
    cfw.startMethod(codegen.getBodyMethodName(scriptOrFn), codegen.getBodyMethodSignature(scriptOrFn), (short) (ClassFileWriter.ACC_STATIC | ClassFileWriter.ACC_PRIVATE));
    initBodyGeneration();
    argsLocal = firstFreeLocal++;
    localsMax = firstFreeLocal;
    // get top level scope
    if (fnCurrent != null && !inDirectCallFunction && (!compilerEnv.isUseDynamicScope() || fnCurrent.fnode.getIgnoreDynamicScope())) {
        // Unless we're either in a direct call or using dynamic scope,
        // use the enclosing scope of the function as our variable object.
        cfw.addALoad(funObjLocal);
        cfw.addInvoke(ByteCode.INVOKEINTERFACE, "org/mozilla/javascript/Scriptable", "getParentScope", "()Lorg/mozilla/javascript/Scriptable;");
        cfw.addAStore(variableObjectLocal);
    }
    // generators are forced to have an activation record
    cfw.addALoad(funObjLocal);
    cfw.addALoad(variableObjectLocal);
    cfw.addALoad(argsLocal);
    addScriptRuntimeInvoke("createFunctionActivation", "(Lorg/mozilla/javascript/NativeFunction;" + "Lorg/mozilla/javascript/Scriptable;" + "[Ljava/lang/Object;" + ")Lorg/mozilla/javascript/Scriptable;");
    cfw.addAStore(variableObjectLocal);
    // create a function object
    cfw.add(ByteCode.NEW, codegen.mainClassName);
    // Call function constructor
    cfw.add(ByteCode.DUP);
    cfw.addALoad(variableObjectLocal);
    // load 'cx'
    cfw.addALoad(contextLocal);
    cfw.addPush(scriptOrFnIndex);
    cfw.addInvoke(ByteCode.INVOKESPECIAL, codegen.mainClassName, "<init>", Codegen.FUNCTION_CONSTRUCTOR_SIGNATURE);
    // Init mainScript field
    cfw.add(ByteCode.DUP);
    // Only functions can be generators
    if (isTopLevel)
        Kit.codeBug();
    cfw.add(ByteCode.ALOAD_0);
    cfw.add(ByteCode.GETFIELD, codegen.mainClassName, Codegen.DIRECT_CALL_PARENT_FIELD, codegen.mainClassSignature);
    cfw.add(ByteCode.PUTFIELD, codegen.mainClassName, Codegen.DIRECT_CALL_PARENT_FIELD, codegen.mainClassSignature);
    generateNestedFunctionInits();
    // create the NativeGenerator object that we return
    cfw.addALoad(variableObjectLocal);
    cfw.addALoad(thisObjLocal);
    cfw.addLoadConstant(maxLocals);
    cfw.addLoadConstant(maxStack);
    addOptRuntimeInvoke("createNativeGenerator", "(Lorg/mozilla/javascript/NativeFunction;" + "Lorg/mozilla/javascript/Scriptable;" + "Lorg/mozilla/javascript/Scriptable;II" + ")Lorg/mozilla/javascript/Scriptable;");
    cfw.add(ByteCode.ARETURN);
    cfw.stopMethod((short) (localsMax + 1));
}
