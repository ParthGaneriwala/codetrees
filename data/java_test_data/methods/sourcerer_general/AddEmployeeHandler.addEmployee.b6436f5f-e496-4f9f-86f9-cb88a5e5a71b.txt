public String addEmployee(String firstName, String lastName, String status, String loginId, String dateOfBirth, String joiningDate, String expInMon, String officeEmail, String desigId, String empType, String managerId, String bankAccNumber, String ssn, String currOfficeId, String officeId, String panNumber, String insPolicyNumber, String noticeDays) {
    if (firstName == null || firstName.equals("")) {
        return C2MUtils.buildErrorXml("Mendatory field \"fname\" is missing", SystemException.INTERNAL_ERROR);
    }
    if (lastName == null || lastName.equals("")) {
        return C2MUtils.buildErrorXml("Mendatory field \"lname\" is missing", SystemException.INTERNAL_ERROR);
    }
    if (status == null || status.equals("")) {
        return C2MUtils.buildErrorXml("Mendatory field \"status\" is missing", SystemException.INTERNAL_ERROR);
    }
    if (loginId == null || loginId.equals("")) {
        return C2MUtils.buildErrorXml("Mendatory field \"loginid\" is missing", SystemException.INTERNAL_ERROR);
    }
    if (dateOfBirth == null || dateOfBirth.equals("")) {
        return C2MUtils.buildErrorXml("Mendatory field \"dob\" is missing", SystemException.INTERNAL_ERROR);
    }
    if (joiningDate == null || joiningDate.equals("")) {
        return C2MUtils.buildErrorXml("Mendatory field \"jdate\" is missing", SystemException.INTERNAL_ERROR);
    }
    if (expInMon == null || expInMon.equals("")) {
        return C2MUtils.buildErrorXml("Mendatory field \"exp\" is missing", SystemException.INTERNAL_ERROR);
    }
    if (officeEmail == null || officeEmail.equals("")) {
        return C2MUtils.buildErrorXml("Mendatory field \"offemail\" is missing", SystemException.INTERNAL_ERROR);
    }
    if (desigId == null || desigId.equals("")) {
        return C2MUtils.buildErrorXml("Mendatory field \"desig\" is missing", SystemException.INTERNAL_ERROR);
    }
    if (empType == null || empType.equals("")) {
        return C2MUtils.buildErrorXml("Mendatory field \"type\" is missing", SystemException.INTERNAL_ERROR);
    }
    if (managerId == null || managerId.equals("")) {
        return C2MUtils.buildErrorXml("Mendatory field \"mgrid\" is missing", SystemException.INTERNAL_ERROR);
    }
    if (officeId == null || officeId.equals("")) {
        return C2MUtils.buildErrorXml("Mendatory field \"offid\" is missing", SystemException.INTERNAL_ERROR);
    }
    if (noticeDays == null || noticeDays.equals("")) {
        return C2MUtils.buildErrorXml("Mendatory field \"notice\" is missing", SystemException.INTERNAL_ERROR);
    }
    if (bankAccNumber == null)
        bankAccNumber = "";
    if (panNumber == null)
        panNumber = "";
    if (insPolicyNumber == null)
        insPolicyNumber = "";
    if (currOfficeId == null || currOfficeId.equals(""))
        currOfficeId = officeId;
    Employee employee = new Employee();
    employee.setFirstName(firstName);
    employee.setLastName(lastName);
    employee.setLoginId(loginId);
    employee.setOfficeEmail(officeEmail);
    employee.setBankAccNum(bankAccNumber);
    employee.setSsn(ssn);
    employee.setPanNum(panNumber);
    employee.setInsPolicyNum(insPolicyNumber);
    employee.setOfficeId(officeId);
    employee.setCurrOfficeId(currOfficeId);
    SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
    try {
        employee.setDateOfBirth(formatter.parse(dateOfBirth));
    } catch (ParseException e) {
        return C2MUtils.buildErrorXml("Invalid date format for parameter \"dob\"", SystemException.INTERNAL_ERROR);
    }
    try {
        employee.setJoiningDate(formatter.parse(joiningDate));
    } catch (ParseException e) {
        return C2MUtils.buildErrorXml("Invalid date format for parameter \"jdate\"", SystemException.INTERNAL_ERROR);
    }
    try {
        employee.setDesignationId(Short.parseShort(desigId));
    } catch (NumberFormatException e) {
        return C2MUtils.buildErrorXml("paramater \"desig\" is not a valid number", SystemException.INTERNAL_ERROR);
    }
    try {
        employee.setManagerId(Integer.parseInt(managerId));
    } catch (NumberFormatException e) {
        return C2MUtils.buildErrorXml("paramater \"mgrid\" is not a valid number", SystemException.INTERNAL_ERROR);
    }
    try {
        employee.setExpInMon(Short.parseShort(expInMon));
    } catch (NumberFormatException e) {
        return C2MUtils.buildErrorXml("paramater \"exp\" is not a valid number", SystemException.INTERNAL_ERROR);
    }
    try {
        employee.setEmpType(Short.parseShort(empType));
    } catch (NumberFormatException e) {
        return C2MUtils.buildErrorXml("paramater \"type\" is not a valid number", SystemException.INTERNAL_ERROR);
    }
    try {
        employee.setNoticeDays(Short.parseShort(noticeDays));
    } catch (NumberFormatException e) {
        return C2MUtils.buildErrorXml("paramater \"notice\" is not a valid number", SystemException.INTERNAL_ERROR);
    }
    EmployeeDataManager empDataManager = new EmployeeDataManager();
    int empId = 0;
    try {
        empId = empDataManager.addEmployee(employee);
    } catch (Exception e) {
        return C2MUtils.buildErrorXml("Error in adding employee record", e);
    }
    return "<response status=\"0\"><responsecode>0</responsecode>" + "<responsemsg>Employee added successfully</responsemsg>" + "<empid>" + empId + "</empid></response>";
}
