@Test
public void testValidInputToComponents() {
    SimpleMultiFailureFieldsTextPanel panel = new SimpleMultiFailureFieldsTextPanel();
    CobeanTestUtil.setComponentNamesFromPropertyNames(panel);
    ShowcaseTestFrame frame = new ShowcaseTestFrame(panel);
    FrameFixture showcaseFix = new FrameFixture(frame);
    SimpleMultiFailureFieldsTextShowcase sc = new SimpleMultiFailureFieldsTextShowcase();
    sc.setService(new TestLitService());
    sc.init(panel);
    showcaseFix.show();
    try {
        showcaseFix.textBox("birthdayFailureTextField");
        final JTextComponentFixture birthdayTextBox = showcaseFix.textBox("birthdayTextField");
        showcaseFix.textBox("idFailureTextField");
        final JTextComponentFixture idTextBox = showcaseFix.textBox("idTextField");
        showcaseFix.textBox("nameFailureTextField");
        final JTextComponentFixture nameTextBox = showcaseFix.textBox("nameTextField");
        showcaseFix.button("resetButton");
        showcaseFix.button("uppercaseButton");
        showcaseFix.button("lowercaseButton");
        // Check initial state
        nameTextBox.requireText("Gernot Wolfsgruber");
        idTextBox.requireText("7");
        birthdayTextBox.requireEmpty();
        // Check if there are the same values in the cobeans
        assertEquals("Gernot Wolfsgruber", sc.getNameCobean().getValue());
        assertEquals(7, sc.getIdCobean().getValue().intValue());
        assertEquals(null, sc.getBirthdayCobean().getValue());
        // Enter a new name
        nameTextBox.setText("");
        nameTextBox.enterText("DDD");
        idTextBox.focus();
        nameTextBox.requireText("DDD");
        idTextBox.requireText("7");
        birthdayTextBox.requireEmpty();
        assertEquals("DDD", sc.getNameCobean().getValue());
        assertEquals(7, sc.getIdCobean().getValue().intValue());
        assertEquals(null, sc.getBirthdayCobean().getValue());
        // Enter a new valid ID
        idTextBox.setText("");
        idTextBox.enterText("10");
        nameTextBox.focus();
        nameTextBox.requireText("DDD");
        idTextBox.requireText("10");
        birthdayTextBox.requireEmpty();
        assertEquals("DDD", sc.getNameCobean().getValue());
        assertEquals(10, sc.getIdCobean().getValue().intValue());
        assertEquals(null, sc.getBirthdayCobean().getValue());
        // Enter a new valid birthdate
        birthdayTextBox.setText("");
        birthdayTextBox.enterText("1.1.1999");
        nameTextBox.focus();
        nameTextBox.requireText("DDD");
        idTextBox.requireText("10");
        birthdayTextBox.requireText("01.01.1999");
        assertEquals("DDD", sc.getNameCobean().getValue());
        assertEquals(10, sc.getIdCobean().getValue().intValue());
        assertEquals(CobeanTestUtil.createDate("yyyyMMdd", "19990101"), sc.getBirthdayCobean().getValue());
    } finally {
        pauseShort();
        showcaseFix.cleanUp();
    }
}
