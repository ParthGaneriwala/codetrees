public static void tray() {
    try {
        // 最好加上这个判断，否则这个程序可能在其它操作系统上无法正常工作
        if (SystemTray.isSupported()) {
            System.out.println("Start to add tray");
            // 通过静态方法getSystemTray()得到系统托盘
            SystemTray tray = SystemTray.getSystemTray();
            // 装载托盘图象
            Image image;
            URL imageUtl = WebServer.class.getResource("tray2.gif");
            if (imageUtl != null) {
                image = Toolkit.getDefaultToolkit().getImage(imageUtl);
            } else {
                image = Toolkit.getDefaultToolkit().getImage("tray2.gif");
            }
            // 为这个托盘加一个弹出菜单
            PopupMenu popup = new PopupMenu();
            List<MenuBean> menus = MenuReader.getInstance().getMenus();
            for (MenuBean menuBean : menus) {
                if ("BROWSE".equals(menuBean.getType())) {
                    MenuItem item = new MenuItem(menuBean.getLabel());
                    MyActionListener actionListener = new MyActionListener();
                    actionListener.setUrl(menuBean.getTarget());
                    item.addActionListener(actionListener);
                    popup.add(item);
                }
            // end if
            }
            // end for
            MenuItem item = new MenuItem("退出");
            item.addActionListener(new ActionListener() {

                public void actionPerformed(ActionEvent e) {
                    System.exit(-1);
                }
            });
            popup.add(item);
            // 为这个托盘加一个提示信息
            TrayIcon trayIcon = new TrayIcon(image, "Java托盘", popup);
            try {
                tray.add(trayIcon);
            } catch (AWTException e) {
                System.err.println("无法向这个托盘添加新项： " + e);
            }
            System.out.println("Finish the tray");
        } else {
            System.err.println("无法使用系统托盘!");
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
