public static String convertIntToStringInChineseLowMode(int num) {
    switch(num) {
        case 0:
            return "零";
        case 1:
            return "一";
        case 2:
            return "二";
        case 3:
            return "三";
        case 4:
            return "四";
        case 5:
            return "五";
        case 6:
            return "六";
        case 7:
            return "七";
        case 8:
            return "八";
        case 9:
            return "九";
    }
    StringBuffer numString = new StringBuffer();
    if (num < 0) {
        num = num * -1;
        numString.append("负");
    }
    // 万位
    int w = num / 10000;
    if (w > 0) {
        numString.append(convertIntToStringInChineseLowMode(w)).append("万");
        num = num % 10000;
    }
    // 千位
    int q = num / 1000;
    if (q > 0) {
        numString.append(convertIntToStringInChineseLowMode(q)).append("千");
        num = num % 1000;
    }
    // 百位
    int b = num / 100;
    if (b > 0) {
        if (w > 0 && q == 0)
            numString.append("零");
        numString.append(convertIntToStringInChineseLowMode(b)).append("百");
        num = num % 100;
    }
    // 十位
    int s = num / 10;
    if (s > 0) {
        if ((w > 0 || q > 0) && b == 0)
            numString.append("零");
        if (s > 1 || w > 0 || q > 0 || b > 0)
            numString.append(convertIntToStringInChineseLowMode(s));
        numString.append("十");
        num = num % 10;
    }
    // 个位
    if (num > 0) {
        if ((w > 0 || q > 0 || b > 0) && s == 0)
            numString.append("零");
        numString.append(convertIntToStringInChineseLowMode(num));
    }
    return numString.toString();
}
