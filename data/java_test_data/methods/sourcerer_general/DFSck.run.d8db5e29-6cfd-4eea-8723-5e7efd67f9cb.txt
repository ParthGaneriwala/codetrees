public int run(String[] args) throws Exception {
    String fsName = getInfoServer();
    if (args.length == 0) {
        printUsage();
        return -1;
    }
    StringBuffer url = new StringBuffer("http://" + fsName + "/fsck?path=");
    String dir = "/";
    // find top-level dir first
    for (int idx = 0; idx < args.length; idx++) {
        if (!args[idx].startsWith("-")) {
            dir = args[idx];
            break;
        }
    }
    url.append(URLEncoder.encode(dir, "UTF-8"));
    for (int idx = 0; idx < args.length; idx++) {
        if (args[idx].equals("-move")) {
            url.append("&move=1");
        } else if (args[idx].equals("-delete")) {
            url.append("&delete=1");
        } else if (args[idx].equals("-files")) {
            url.append("&files=1");
        } else if (args[idx].equals("-openforwrite")) {
            url.append("&openforwrite=1");
        } else if (args[idx].equals("-blocks")) {
            url.append("&blocks=1");
        } else if (args[idx].equals("-locations")) {
            url.append("&locations=1");
        } else if (args[idx].equals("-racks")) {
            url.append("&racks=1");
        }
    }
    URL path = new URL(url.toString());
    URLConnection connection = path.openConnection();
    InputStream stream = connection.getInputStream();
    BufferedReader input = new BufferedReader(new InputStreamReader(stream, "UTF-8"));
    String line = null;
    int errCode = 0;
    // fsck related testcases. For now, we scan for "is CORRUPT" as it unique.
    try {
        while ((line = input.readLine()) != null) {
            System.out.println(line);
            if (line.contains("is CORRUPT"))
                errCode = 1;
        }
    } finally {
        input.close();
    }
    return errCode;
}
