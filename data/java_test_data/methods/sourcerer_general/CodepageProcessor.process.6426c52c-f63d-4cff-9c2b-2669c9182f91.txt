private void process(File document) throws Exception {
    Charset charset = null;
    try {
        Thread.sleep(this.wait);
    } catch (InterruptedException e) {
    // nop
    }
    Map.Entry filenameFinder;
    // the path between this.collectionRoot and the file.
    String prefix;
    File target;
    filenameFinder = FileUtil.cutDirectoryInformation(document.getAbsolutePath());
    prefix = document.getAbsolutePath();
    int stop = prefix.lastIndexOf(fileseparator);
    int start = this.collectionRoot.getAbsolutePath().length();
    if (start > stop) {
        prefix = "";
    } else {
        prefix = prefix.substring(this.collectionRoot.getAbsolutePath().length(), stop + 1);
    }
    if (this.verbose) {
        System.out.println("Processing document: " + prefix + "/" + filenameFinder.getValue());
    }
    charset = this.detector.detectCodepage(document.toURL());
    if (charset == null) {
        if (this.verbose) {
            System.out.println("  Charset not detected.");
        }
        if (!this.moveUnknown) {
            if (this.verbose) {
                System.out.println("  Dropping document.");
            }
            return;
        } else {
            // fake charset for name construction:
            charset = UnsupportedCharset.forName("unknown");
        }
    }
    if (this.targetCodepage != null) {
        // transform it:
        if (prefix.length() > 0) {
            target = new File(this.outputDir.getAbsolutePath() + "/" + this.targetCodepage.name() + "/" + prefix + "/");
        } else {
            target = new File(this.outputDir.getAbsolutePath() + "/" + this.targetCodepage.name() + "/");
        }
        if (target.mkdirs()) {
            if (this.verbose) {
                System.out.println("  Created directory : " + target.getAbsolutePath());
            }
        }
        target = new File(target.getAbsolutePath() + "/" + filenameFinder.getValue());
        if (this.verbose) {
            System.out.println("  Moving to \"" + target.getAbsolutePath() + "\".");
        }
        if (target.exists() && target.length() == document.length()) {
            if (this.verbose) {
                System.out.println("  File already exists and has same size. Skipping move.");
            }
        } else {
            target.createNewFile();
            Reader in = new BufferedReader(new InputStreamReader(new FileInputStream(document), charset));
            Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(target), this.targetCodepage));
            // da flow
            int toRead = transcodeBuffer.length;
            int len;
            while ((len = in.read(transcodeBuffer, 0, toRead)) != -1) {
                out.write(transcodeBuffer, 0, len);
            }
            in.close();
            out.close();
        }
    } else {
        if (prefix.length() > 0) {
            target = new File(this.outputDir.getAbsolutePath() + "/" + charset.name().toLowerCase() + "/" + prefix + "/");
        } else {
            target = new File(this.outputDir.getAbsolutePath() + "/" + charset.name().toLowerCase() + "/");
        }
        if (target.mkdirs()) {
            if (this.verbose) {
                System.out.println("Created directory : " + target.getAbsolutePath());
            }
        }
        target = new File(target.getAbsolutePath() + "/" + filenameFinder.getValue());
        if (this.verbose) {
            System.out.println("  Moving to \"" + target.getAbsolutePath() + "\".");
        }
        this.rawCopy(document, target);
    }
}
