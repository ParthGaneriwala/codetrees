public void offscreen_paint(Graphics g) {
    // draw the checkerboard pattern
    for (int i = 0; i < 8; i++) for (int j = 0; j < 8; j++) {
        Color beje = new Color(254, 249, 113);
        Color marrom = new Color(216, 157, 1);
        Color cinza = new Color(150, 150, 150);
        if ((float) (i + j) / 2 != (i + j) / 2)
            g.setColor(marrom);
        else
            g.setColor(beje);
        g.fillRect(i * 30, j * 30, 30, 30);
        if (highlight && i == start_i && j == start_j) {
            if (!Move.canCapture(game.position, i, j) && Move.canCapture(game.position, game.toMove))
                g.setColor(Color.red);
            else
                g.setColor(Color.green);
            g.fillRect(start_i * 30, start_j * 30, 30, 30);
        }
        switch(game.position[i][j]) {
            case Checkers.WHITE:
                g.setColor(Color.white);
                g.fillOval(i * 30 + 5, j * 30 + 5, 20, 20);
                g.setColor(cinza);
                g.drawOval(i * 30 + 5, j * 30 + 5, 20, 20);
                break;
            case Checkers.BLACK:
                g.setColor(Color.black);
                g.fillOval(i * 30 + 5, j * 30 + 5, 20, 20);
                g.setColor(cinza);
                g.drawOval(i * 30 + 5, j * 30 + 5, 20, 20);
                break;
            case Checkers.WKING:
                g.setColor(Color.white);
                g.fillOval(i * 30 + 5, j * 30 + 5, 20, 20);
                g.setColor(cinza);
                g.drawOval(i * 30 + 5, j * 30 + 5, 20, 20);
                g.setColor(Color.white);
                g.fillOval(i * 30 + 3, j * 30 + 3, 20, 20);
                g.setColor(cinza);
                g.drawOval(i * 30 + 3, j * 30 + 3, 20, 20);
                break;
            case Checkers.BKING:
                g.setColor(Color.black);
                g.fillOval(i * 30 + 5, j * 30 + 5, 20, 20);
                g.setColor(cinza);
                g.drawOval(i * 30 + 5, j * 30 + 5, 20, 20);
                g.setColor(Color.black);
                g.fillOval(i * 30 + 3, j * 30 + 3, 20, 20);
                g.setColor(cinza);
                g.drawOval(i * 30 + 3, j * 30 + 3, 20, 20);
        }
    // switch
    }
// for
}
