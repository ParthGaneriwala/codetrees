public ActionResult execute(DataHandler dh) {
    GameObject go = dh.getCurrentSelection();
    if (go.objectType() != GameObjectType.UNIT) {
        MainScreen.writeToConsole("Current selection is not an unit");
        return ActionResult.IMPOSSIBLE;
    }
    this.unit = (Unit) go;
    if (unit.getMissionFlag()) {
        MainScreen.writeToConsole("Current selection is on a mission");
        return ActionResult.IMPOSSIBLE;
    }
    Skill theSkill = unit.getSkill("observe");
    if (theSkill == null) {
        MainScreen.writeToConsole(unit.getName() + "s cannot Observe");
        return ActionResult.IMPOSSIBLE;
    }
    SkillObserve obs = (SkillObserve) theSkill;
    Position uPos = dh.positionQuery(unit.objectID());
    if (!(PositionUtility.inRange(uPos, position, unit.getView()))) {
        MainScreen.writeToConsole("Observe: " + unit.getName() + " cannot see that far!\n");
        return ActionResult.IMPOSSIBLE;
    }
    GameObject[] contains = dh.positionQuery(position, GameObjectType.UNIT);
    Unit[] enemyUnits = new Unit[contains.length];
    for (int i = 0; i < contains.length; i++) {
        enemyUnits[i] = (Unit) contains[i];
    }
    int obsLevel = obs.obsLevel();
    // Prints all the crap
    for (Unit u : enemyUnits) {
        int uArmor = u.armor() + offset(unitArmorThresh, obsLevel);
        uArmor = (uArmor >= 0 ? uArmor : 0);
        MainScreen.writeToConsole("It has " + uArmor + " armor.\n");
        int dDamage = u.dDamage() + offset(unitDamageThresh, obsLevel);
        int oDamage = u.oDamage() + offset(unitDamageThresh, obsLevel);
        dDamage = (dDamage >= 0 ? dDamage : 0);
        oDamage = (oDamage >= 0 ? oDamage : 0);
        MainScreen.writeToConsole("It has " + dDamage + " defense power.");
        MainScreen.writeToConsole("It has " + oDamage + " attack power.");
        int maxHealth = u.maxHealth() + offset(unitMaxHealthThresh, obsLevel);
        int curHealth = u.currentHealth() + offset(unitHealthThresh, obsLevel);
        maxHealth = (maxHealth >= 1 ? maxHealth : 1);
        curHealth = (curHealth > maxHealth ? maxHealth : curHealth);
        String uName = (chanceSkillValue(obsLevel) - 2 >= unitTypeThresh ? u.getName() : "unit");
        MainScreen.writeToConsole("There is a " + uName + " with health " + curHealth + "/" + maxHealth + ".");
    }
    MainScreen.writeToConsole("At Position (" + position.getX() + "," + position.getY() + ") there exists:\n");
    return ActionResult.SUCCESS;
}
