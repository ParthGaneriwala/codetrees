public String putInDB() {
    boolean success = true;
    Session session = null;
    try {
        session = HibernateUtil.getSession();
        Transaction transaction = session.beginTransaction();
        Recipes rec = new Recipes();
        rec.setTitle(title);
        rec.setCookingTime(cookingTime);
        rec.setPreparationTime(preparationTime);
        rec.setServings(servings);
        rec.setAbout(about);
        try {
            rec.setPicture((Blob) Contexts.getSession().getAttribute("pic"));
            Contexts.getSession().removeAttribute("pic");
            rec.setUser((Users) Contexts.getSession().getAttribute("user"));
        } catch (Exception e) {
            System.out.println("-------------------------  no pic/user  -------------------------");
        }
        rec.setComplexity((Lists) session.load(Lists.class, complexity));
        rec.setDishType((Lists) session.load(Lists.class, dishType));
        session.save(rec);
        for (int i = 0; i < cuisine.size(); i++) {
            RecipeCategories cat = new RecipeCategories();
            cat.setRecipe(rec);
            cat.setCategory(((Lists) session.load(Lists.class, new Integer(cuisine.get(i)))));
            session.save(cat);
        }
        for (int i = 0; i < instructions.size(); i++) {
            RecipeInstructions ins = new RecipeInstructions();
            ins.setText(instructions.get(i));
            ins.setRecipe(rec);
            session.save(ins);
        }
        for (int i = 0; i < ing.size(); i++) {
            Ingredients ingredient = null;
            Query query = session.createQuery("from  Ingredients ing where " + "ing.ingredientName LIKE '" + ing.get(i) + "'");
            if (query.list().size() == 0) {
                ingredient = new Ingredients();
                ingredient.setIngredientName(ing.get(i));
                session.save(ingredient);
            } else {
                ingredient = (Ingredients) query.list().get(0);
            }
            RecipeIngredients reIng = new RecipeIngredients();
            reIng.setIngredient(ingredient);
            reIng.setRecipe(rec);
            reIng.setQuantity(quantity.get(i));
            reIng.setUom(qtype.get(i));
            session.save(reIng);
        }
        transaction.commit();
    } catch (Exception e) {
        e.printStackTrace();
        success = false;
    } finally {
        session.flush();
        session.close();
    }
    return success ? "success" : "failed";
}
