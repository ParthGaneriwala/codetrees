public void testProperties() {
    assertEquals(jmsProperty("loadWith"), JenaModelSpec.loadWith);
    assertEquals(jmsProperty("ontLanguage"), JenaModelSpec.ontLanguage);
    assertEquals(jmsProperty("docManager"), JenaModelSpec.docManager);
    assertEquals(jmsProperty("importMaker"), JenaModelSpec.importMaker);
    assertEquals(jmsProperty("reasonsWith"), JenaModelSpec.reasonsWith);
    assertEquals(jmsProperty("ruleSetURL"), JenaModelSpec.ruleSetURL);
    assertEquals(jmsProperty("ruleSet"), JenaModelSpec.ruleSet);
    assertEquals(jmsProperty("schemaURL"), JenaModelSpec.schemaURL);
    assertEquals(jmsProperty("hasRule"), JenaModelSpec.hasRule);
    assertEquals(jmsProperty("policyPath"), JenaModelSpec.policyPath);
    assertEquals(jmsProperty("hasConnection"), JenaModelSpec.hasConnection);
    assertEquals(jmsProperty("dbUser"), JenaModelSpec.dbUser);
    assertEquals(jmsProperty("dbPassword"), JenaModelSpec.dbPassword);
    assertEquals(jmsProperty("dbURL"), JenaModelSpec.dbURL);
    assertEquals(jmsProperty("dbType"), JenaModelSpec.dbType);
    assertEquals(jmsProperty("dbClass"), JenaModelSpec.dbClass);
    assertEquals(jmsProperty("maker"), JenaModelSpec.maker);
    assertEquals(jmsProperty("reificationMode"), JenaModelSpec.reificationMode);
    assertEquals(jmsProperty("reasoner"), JenaModelSpec.reasoner);
    assertEquals(jmsProperty("fileBase"), JenaModelSpec.fileBase);
    assertEquals(jmsProperty("typeCreatedBy"), JenaModelSpec.typeCreatedBy);
    assertEquals(jmsProperty("modelName"), JenaModelSpec.modelName);
}
