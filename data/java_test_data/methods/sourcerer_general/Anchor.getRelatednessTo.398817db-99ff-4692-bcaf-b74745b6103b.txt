public double getRelatednessTo(Anchor anchor) throws SQLException {
    Cleaner cleaner = null;
    Anchor anchCombined = new Anchor(this.getText() + " " + anchor.getText(), cleaner, database);
    double wc = anchCombined.getLinkCount();
    if (wc > 0)
        wc = Math.log(wc) / 30;
    double minProb = 0.01;
    double benchmark_relatedness = 0;
    double benchmark_distance = 0.40;
    SortedVector<CandidatePair> candidates = new SortedVector<CandidatePair>();
    int sensesA = 0;
    int sensesB = 0;
    for (Anchor.Sense senseA : this.getSenses()) {
        if (senseA.getProbability() < minProb)
            break;
        sensesA++;
        sensesB = 0;
        for (Anchor.Sense senseB : anchor.getSenses()) {
            if (senseB.getProbability() < minProb)
                break;
            sensesB++;
            Article artA = new Article(database, senseA.getId(), senseA.getTitle());
            Article artB = new Article(database, senseB.getId(), senseB.getTitle());
            // double relatedness = artA.getRelatednessTo(artB) ;
            double relatedness = artA.getRelatednessTo(artB);
            double obviousness = (senseA.getProbability() + senseB.getProbability()) / 2;
            if (relatedness > (benchmark_relatedness - benchmark_distance)) {
                if (relatedness > benchmark_relatedness + benchmark_distance) {
                    // this has set a new benchmark of what we consider likely
                    benchmark_relatedness = relatedness;
                    candidates.clear();
                }
                candidates.add(new CandidatePair(senseA, senseB, relatedness, obviousness), false);
            }
        }
    }
    CandidatePair cp = candidates.first();
    double sr = cp.relatedness + wc;
    if (sr > 1)
        sr = 1;
    return sr;
}
