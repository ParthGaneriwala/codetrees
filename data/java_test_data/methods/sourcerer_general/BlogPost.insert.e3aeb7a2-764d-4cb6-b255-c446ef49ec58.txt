public boolean insert(Connection db) throws SQLException {
    if (!isValid()) {
        return false;
    }
    boolean commit = db.getAutoCommit();
    try {
        if (commit) {
            db.setAutoCommit(false);
        }
        StringBuffer sql = new StringBuffer();
        sql.append("INSERT INTO project_news " + "(" + (id > -1 ? "news_id, " : "") + "project_id, category_id, subject, intro, message, enabled, status, ");
        if (entered != null) {
            sql.append("entered, ");
        }
        if (modified != null) {
            sql.append("modified, ");
        }
        if (pageTitle != null) {
            sql.append("page_title, ");
        }
        if (keywords != null) {
            sql.append("keywords, ");
        }
        if (description != null) {
            sql.append("description, ");
        }
        if (metaName != null) {
            sql.append("meta_name, ");
        }
        if (metaContent != null) {
            sql.append("meta_content, ");
        }
        sql.append("enteredBy, modifiedBy, " + "start_date, end_date, allow_replies, allow_rating, rating_count, " + "avg_rating, priority_id, read_count, classification_id, template_id, " + "portal_key, redirect) ");
        sql.append("VALUES (?, ?, ?, ?, ?, ?, ?, ");
        if (id > -1) {
            sql.append("?, ");
        }
        if (entered != null) {
            sql.append("?, ");
        }
        if (modified != null) {
            sql.append("?, ");
        }
        if (pageTitle != null) {
            sql.append("?, ");
        }
        if (keywords != null) {
            sql.append("?, ");
        }
        if (description != null) {
            sql.append("?, ");
        }
        if (metaName != null) {
            sql.append("?, ");
        }
        if (metaContent != null) {
            sql.append("?, ");
        }
        sql.append("?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) ");
        int i = 0;
        // Insert the topic
        PreparedStatement pst = db.prepareStatement(sql.toString());
        if (id > -1) {
            pst.setInt(++i, id);
        }
        DatabaseUtils.setInt(pst, ++i, projectId);
        DatabaseUtils.setInt(pst, ++i, categoryId);
        pst.setString(++i, subject);
        pst.setString(++i, intro);
        pst.setString(++i, message);
        pst.setBoolean(++i, enabled);
        DatabaseUtils.setInt(pst, ++i, status);
        if (entered != null) {
            pst.setTimestamp(++i, entered);
        }
        if (modified != null) {
            pst.setTimestamp(++i, modified);
        }
        if (pageTitle != null) {
            pst.setString(++i, pageTitle);
        }
        if (keywords != null) {
            pst.setString(++i, keywords);
        }
        if (description != null) {
            pst.setString(++i, description);
        }
        if (metaName != null) {
            pst.setString(++i, metaName);
        }
        if (metaContent != null) {
            pst.setString(++i, metaContent);
        }
        pst.setInt(++i, enteredBy);
        pst.setInt(++i, modifiedBy);
        DatabaseUtils.setTimestamp(pst, ++i, startDate);
        DatabaseUtils.setTimestamp(pst, ++i, endDate);
        pst.setBoolean(++i, allowReplies);
        pst.setBoolean(++i, allowRatings);
        pst.setInt(++i, ratingCount);
        pst.setDouble(++i, avgRating);
        DatabaseUtils.setInt(pst, ++i, priorityId);
        pst.setInt(++i, readCount);
        DatabaseUtils.setInt(pst, ++i, classificationId);
        DatabaseUtils.setInt(pst, ++i, templateId);
        pst.setString(++i, portalKey);
        pst.setString(++i, redirect);
        pst.execute();
        pst.close();
        id = DatabaseUtils.getCurrVal(db, "project_news_news_id_seq", id);
        // If there is a task category being associated, insert that too
        if (taskCategoryId > -1) {
            insertTaskCategoryLink(db);
        }
        if (commit) {
            db.commit();
        }
    } catch (Exception e) {
        if (commit) {
            db.rollback();
        }
        throw new SQLException(e.getMessage());
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
    return true;
}
