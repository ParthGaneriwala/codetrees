public static void processTable(NodeList nodeList, StringBuffer sb, int rowCount, boolean doText, boolean anyNodeType, String contextPath, int projectId, int pass) {
    LOG.trace("line reset");
    for (int i = 0; i < nodeList.getLength(); i++) {
        Node n = nodeList.item(i);
        if (n != null) {
            if (n.getNodeType() == Node.TEXT_NODE || n.getNodeType() == Node.CDATA_SECTION_NODE) {
                if (doText && anyNodeType) {
                    if (StringUtils.hasText(n.getNodeValue())) {
                        String thisLine = StringUtils.fromHtmlValue(n.getNodeValue());
                        LOG.trace("table - text: " + thisLine);
                        sb.append(thisLine);
                    }
                }
            } else if (n.getNodeType() == Node.ELEMENT_NODE) {
                Element element = ((Element) n);
                String tag = element.getTagName();
                if ("tr".equals(tag)) {
                    LOG.trace("table - tr");
                    ++rowCount;
                    if (rowCount == 1) {
                        LOG.debug("Looking for style");
                        processTable(n.getChildNodes(), sb, rowCount, false, false, contextPath, projectId, 1);
                    }
                    processTable(n.getChildNodes(), sb, rowCount, false, false, contextPath, projectId, 2);
                    sb.append(CRLF);
                } else if ("td".equals(tag) || "th".equals(tag)) {
                    if (LOG.isTraceEnabled()) {
                        LOG.trace("table - " + tag + " - " + i + " " + hasNonTextNodes(n.getChildNodes()) + " - pass " + pass);
                    }
                    String separator = "|";
                    if (tag.equals("th")) {
                        separator = "||";
                    }
                    // Determin how many columns are spanned by this column
                    int colspan = 1;
                    if (element.hasAttribute("colspan")) {
                        colspan = Integer.parseInt(element.getAttribute("colspan"));
                    }
                    // if (sb.toString().endsWith(separator)) {
                    // sb.append(" ");
                    // }
                    // Style pass
                    boolean hasStyle = false;
                    if (pass == 1) {
                        if (element.hasAttribute("style")) {
                            String style = element.getAttribute("style");
                            if (style.endsWith(";")) {
                                style = style.substring(0, style.length() - 1);
                            }
                            // Start the wiki markup
                            for (int sI = 0; sI < colspan; sI++) {
                                sb.append(separator);
                            }
                            // Append the style data
                            sb.append("{").append(style).append("}");
                            hasStyle = true;
                        }
                        // Close the wiki markup if the last cell
                        if (hasStyle) {
                            if (i + 1 == nodeList.getLength()) {
                                sb.append(separator);
                                // The style pass needs to add it's own CRLF
                                sb.append(CRLF);
                            }
                        }
                    }
                    // Data pass
                    if (pass == 2) {
                        // Start the wiki markup
                        for (int sI = 0; sI < colspan; sI++) {
                            sb.append(separator);
                        }
                        if (n.getChildNodes().getLength() > 0) {
                            // Cell data uses a "!" for each return
                            if (hasNonTextNodes(n.getChildNodes())) {
                                processChildNodes(getNodeList(n), sb, 0, true, true, false, "!", contextPath, projectId);
                            } else {
                                processChildNodes(getNodeList(n), sb, 0, true, true, false, "!", contextPath, projectId);
                            }
                            // If the cell didn't have any data, then add a space
                            if (sb.toString().endsWith(separator)) {
                                sb.append(" ");
                            }
                        } else {
                            sb.append(" ");
                        }
                        // Close the wiki markup
                        if (i + 1 == nodeList.getLength()) {
                            sb.append(separator);
                        }
                    }
                } else {
                    LOG.trace("table - text - ** " + tag);
                    processTable(n.getChildNodes(), sb, rowCount, true, true, contextPath, projectId, 0);
                }
            }
        }
    }
}
