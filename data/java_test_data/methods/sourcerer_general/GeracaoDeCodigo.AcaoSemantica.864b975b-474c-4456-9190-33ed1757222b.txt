public void AcaoSemantica(TiposAS t, int Nb, String Param, SubMaquina sm) {
    switch(t) {
        case INICIO_PROGRAMA:
            adicionaCodigoSemLabel("JP", Labels.PROG_INIC.toString());
            adicionaCodigoComLabel("DUMP", "K" + TAB, "/0");
            adicionaInstrucaoVazia(Labels.PROG_INIC.toString());
            break;
        case FIM_PROGRAMA:
            adicionaCodigoComLabel(Labels.PROG_SAI.toString(), "HM", "/0");
            break;
        case ABRE_FUNCTION:
            ;
            break;
        case RETURN:
            ;
            break;
        case RETURN_VALOR:
            ;
            break;
        case FECHA_FUNCTION:
            ;
            break;
        case ATRIB_RecebeVar:
            ((SM_CMD_Atrib) sm).AtribVar = Param;
            break;
        case ATRIB_FIM:
            adicionaCodigoSemLabel("MM", ((SM_CMD_Atrib) sm).AtribVar);
            break;
        // 
        case WHILE_INICIO:
            adicionaInstrucaoVazia(Labels.WHILE_INIC_.toString() + Nb);
            break;
        case WHILE_DECIDE:
            adicionaCodigoSemLabel("JZ", Labels.WHILE_SAI_.toString() + Nb);
            break;
        case WHILE_FIM:
            adicionaInstrucaoVazia(Labels.WHILE_SAI_.toString() + Nb);
            break;
        case DOWHILE_INICIO:
            adicionaInstrucaoVazia(Labels.DOWHILE_INIC_.toString() + Nb);
            break;
        case DOWHILE_FIM:
            adicionaCodigoSemLabel("JP", Labels.DOWHILE_SAI_.toString() + Nb);
            adicionaCodigoSemLabel("JZ", Labels.DOWHILE_SAI_.toString() + Nb);
            adicionaCodigoSemLabel("JP", Labels.DOWHILE_INIC_.toString() + Nb);
            adicionaInstrucaoVazia(Labels.DOWHILE_SAI_.toString() + Nb);
            break;
        case CONDICAO:
            adicionaCodigoSemLabel("LV", Param);
            break;
        // IF
        case IF_THEN:
            adicionaCodigoSemLabel("JZ", Labels.CmdIF_NOT_THEN_.toString() + Nb);
            break;
        case IF_ELSE:
            adicionaCodigoSemLabel("JP", Labels.CmdIF_SAI_ELSE_.toString() + Nb);
            adicionaInstrucaoVazia(Labels.CmdIF_SAI_ELSE_.toString() + Nb);
            break;
        case IF_END_WITHELSE:
            adicionaInstrucaoVazia(Labels.CmdIF_SAI_ELSE_.toString() + Nb);
            break;
        case IF_END_NOELSE:
            adicionaInstrucaoVazia(Labels.CmdIF_NOT_THEN_.toString() + Nb);
            break;
        case SWITCH_INICIO:
            ((SM_CMD_Switch) sm).SwitchVar = Param;
            adicionaCodigoSemLabel("JP", Labels.CmdSW_INICIO_.toString() + Nb);
            break;
        case SWITCH_CASE:
            adicionaInstrucaoVazia(Labels.CmdSW_CASE_.toString() + Nb + "_" + Param);
            ((SM_CMD_Switch) sm).Cases.offer(Param);
            break;
        case SWITCH_BREAK:
            adicionaCodigoSemLabel("JP", Labels.CmdSW_SAI_.toString() + Nb);
            break;
        case SWITCH_FIM:
            adicionaCodigoSemLabel("JP", Labels.CmdSW_SAI_.toString() + Nb);
            adicionaInstrucaoVazia(Labels.CmdSW_INICIO_.toString() + Nb);
            String c;
            while (((SM_CMD_Switch) sm).Cases.peek() != null) {
                c = ((SM_CMD_Switch) sm).Cases.poll();
                adicionaCodigoSemLabel("LV", c);
                adicionaCodigoSemLabel("-" + TAB, ((SM_CMD_Switch) sm).SwitchVar);
                adicionaCodigoSemLabel("JZ", Labels.CmdSW_CASE_.toString() + Nb + "_" + c);
            }
            adicionaInstrucaoVazia(Labels.CmdSW_SAI_.toString() + Nb);
            break;
    }
}
