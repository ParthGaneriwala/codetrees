private PageSupport findPageByCriteria(final DetachedCriteria detachedCriteria, final int pageSize, final int pageNo) {
    // return (PageSupport) getHibernateTemplate().execute(new HibernateCallback<PageSupport>() {
    List items = null;
    int recordCount = 0;
    int reallyPageNo = pageNo;
    if (reallyPageNo <= 0) {
        reallyPageNo = 1;
    }
    if (reallyPageNo == 1 && pageSize == Integer.MAX_VALUE) {
        Criteria criteria = detachedCriteria.getExecutableCriteria(session);
        criteria.setProjection(null);
        criteria.setResultTransformer(CriteriaSpecification.ROOT_ENTITY);
        items = criteria.list();
        recordCount = items.size();
    } else {
        Criteria executableCriteria = detachedCriteria.getExecutableCriteria(session);
        OrderEntry[] orderEntries = HibernateUtil.getOrders(executableCriteria);
        executableCriteria = HibernateUtil.removeOrders(executableCriteria);
        Projection projection = HibernateUtil.getProjection(executableCriteria);
        recordCount = ((Long) executableCriteria.setProjection(Projections.rowCount()).uniqueResult()).intValue();
        executableCriteria.setProjection(projection);
        if (projection == null) {
            executableCriteria.setResultTransformer(CriteriaSpecification.ROOT_ENTITY);
        }
        // Add the orginal orderEntries
        executableCriteria = HibernateUtil.addOrders(executableCriteria, orderEntries);
        // 总页数，如果当前的pageNo大于总页数,那就设置为总页数,否则总显示为空
        int pageCount = recordCount - 1 / pageSize + 1;
        // pageCount=10页,pageNo=11,那实际上pageNo应该为
        reallyPageNo = pageNo > pageCount ? pageCount : pageNo;
        int startIndex = pageSize * (pageNo - 1);
        items = executableCriteria.setFirstResult(startIndex).setMaxResults(pageSize).list();
    }
    PageSupport ps = new PageSupport(items, recordCount, pageSize, reallyPageNo);
    return ps;
}
