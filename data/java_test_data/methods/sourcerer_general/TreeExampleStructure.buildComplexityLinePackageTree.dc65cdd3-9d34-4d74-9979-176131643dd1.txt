public static Tree buildComplexityLinePackageTree() {
    Tree tree = new Tree();
    Node comNode = tree.addNode();
    comNode.getTable().addColumn("name", String.class);
    comNode.setString("name", "com.");
    Node complexityLineNode = tree.addChild(comNode);
    complexityLineNode.set("name", "complexityline.");
    Node serviceNode = tree.addChild(complexityLineNode);
    serviceNode.set("name", "service.");
    Node availabilityServiceNode = tree.addChild(serviceNode);
    availabilityServiceNode.set("name", "availability.");
    if (BRANCHES) {
        Node webNode = tree.addChild(complexityLineNode);
        webNode.set("name", "web.");
        Node quoteServiceNode = tree.addChild(serviceNode);
        quoteServiceNode.set("name", "quote.");
        Node reservationServiceNode = tree.addChild(serviceNode);
        reservationServiceNode.set("name", "reservation.");
        Node persistenceNode = tree.addChild(complexityLineNode);
        persistenceNode.set("name", "persistence.");
        Node integrationNode = tree.addChild(complexityLineNode);
        integrationNode.set("name", "integration.");
        Node domainNode = tree.addChild(complexityLineNode);
        domainNode.set("name", "domain.");
    }
    return tree;
}
