private void parse(String inString) {
    String str = inString.trim();
    if (str.charAt(0) != '[' || str.charAt(str.length() - 1) != ']') {
        throw new RuntimeException("JSON array string must be enclosed with []!");
    }
    int index = 1;
    while (index < str.length() - 1) {
        char theChar = str.charAt(index);
        if (Character.isWhitespace(theChar)) {
            index++;
        } else if (theChar == ',') {
            index++;
        } else if (theChar == '[') {
            int depth = 1;
            char quote = ' ';
            boolean inValue = false;
            int end = index + 1;
            while (end < str.length() - 1 && (depth != 1 || inValue || str.charAt(end) != ']')) {
                char theEndChar = str.charAt(end);
                if (theEndChar == '\'' && str.charAt(end - 1) != '\\') {
                    if (!inValue) {
                        inValue = true;
                        quote = '\'';
                    } else if (quote == '\'') {
                        inValue = false;
                    }
                } else if (theEndChar == '"' && str.charAt(end - 1) != '\\') {
                    if (!inValue) {
                        inValue = true;
                        quote = '"';
                    } else if (quote == '"') {
                        inValue = false;
                    }
                } else if (!inValue && theEndChar == '[') {
                    depth++;
                } else if (!inValue && theEndChar == ']') {
                    depth--;
                }
                end++;
            }
            JsArray value = new JsArray(str.substring(index, end + 1));
            add(value);
            index = end + 1;
        } else if (theChar == '{') {
            // Find the ending brace
            int depth = 1;
            char quote = ' ';
            boolean inValue = false;
            int end = index + 1;
            while (end < str.length() - 1 && (depth != 1 || inValue || str.charAt(end) != '}')) {
                char theEndChar = str.charAt(end);
                if (theEndChar == '\'' && str.charAt(end - 1) != '\\') {
                    if (!inValue) {
                        inValue = true;
                        quote = '\'';
                    } else if (quote == '\'') {
                        inValue = false;
                    }
                } else if (theEndChar == '"' && str.charAt(end - 1) != '\\') {
                    if (!inValue) {
                        inValue = true;
                        quote = '"';
                    } else if (quote == '"') {
                        inValue = false;
                    }
                } else if (!inValue && theEndChar == '{') {
                    depth++;
                } else if (!inValue && theEndChar == '}') {
                    depth--;
                }
                end++;
            }
            JsObjMap value = new JsObjMap(str.substring(index, end + 1));
            add(value);
            index = end + 1;
        } else {
            if (theChar == '"') {
                Matcher m = QUOTED_VALUE_PATTERN.matcher(str);
                if (m.find(index)) {
                    String value = JSONUtil.unescapeString(m.group(1));
                    index = m.end();
                    add(value);
                }
            } else {
                Matcher m = UNQUOTED_VALUE_PATTERN.matcher(str);
                if (m.find(index)) {
                    String value = JSONUtil.unescapeString(m.group(1));
                    index = m.end() - 1;
                    add(value);
                }
            }
        }
    }
}
