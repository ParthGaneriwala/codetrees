private void LoadComponents() {
    setLayout(new BorderLayout());
    // ========================================================
    // construction des composants
    // ========================================================
    TClickSouricomEnum[] clickSouricomArray = { /*TClickSouricomEnum.LEFT_RELEASE,*/
    TClickSouricomEnum.LEFT_PRESS, /*TClickSouricomEnum.RIGHT_RELEASE,*/
    TClickSouricomEnum.RIGHT_PRESS };
    TStartDefilEnum[] startDefilArray = { TStartDefilEnum.ON_STARTUP, TStartDefilEnum.ON_ACTION_CLICK };
    comboClickSouricom = new JComboBox(clickSouricomArray);
    comboStartDefil = new JComboBox(startDefilArray);
    addSpaceAfterString = new JCheckBox(UIString.getUIString("LB_CONFPROFIL_ADVANCED_OPTION_ADD_SPACE_AFTER_STRING"), advancedOption.isAddSpaceAfterString());
    String[] interval = new String[101];
    for (int i = 0; i < 101; ++i) interval[i] = String.valueOf(i);
    SpinnerModel model = new SpinnerListModel(interval);
    nbDefilTurn = new JSpinner(model);
    nbDefilTurn.setPreferredSize(new Dimension(40, 30));
    panelCommandSet = new PanelModificationProfilCommandSetName(commandSetName);
    panelShortcutSet = new PanelModificationProfilShortcutSetName(shortcutSetName);
    // ========================================================
    // placement des composants
    // ========================================================
    // création des panels
    JPanel panelDefilSouricom = new JPanel(new BorderLayout());
    panelDefilSouricom.add(new JLabel(UIString.getUIString("LB_CONFPROFIL_ADVANCED_CLICK_SOURICOM") + " "), BorderLayout.WEST);
    panelDefilSouricom.add(comboClickSouricom, BorderLayout.CENTER);
    JPanel panelStartDefil = new JPanel(new BorderLayout());
    panelStartDefil.add(new JLabel(UIString.getUIString("LB_CONFPROFIL_ADVANCED_START_DEFIL") + " "), BorderLayout.WEST);
    panelStartDefil.add(comboStartDefil, BorderLayout.CENTER);
    JPanel panelNBDefilTurn = new JPanel();
    panelNBDefilTurn.add(new JLabel(UIString.getUIString("LB_CONFPROFIL_ADVANCED_NB_DEFIL_TURN")), BorderLayout.WEST);
    panelNBDefilTurn.add(nbDefilTurn, BorderLayout.CENTER);
    // ========================================================================
    // Check OS type
    // ========================================================================
    JLabel lb_OSREstriction = new JLabel();
    if (OSTypeEnum.getCurrentOSType() == OSTypeEnum.WINDOWS) {
    // nothing to do
    } else if (OSTypeEnum.getCurrentOSType() == OSTypeEnum.LINUX) {
        lb_OSREstriction.setText(OSTypeEnum.getMessageOSREstriction() + " Linux");
        lb_OSREstriction.setForeground(Color.red);
        comboClickSouricom.setEnabled(false);
        comboStartDefil.setEnabled(false);
        nbDefilTurn.setEnabled(false);
    } else if (OSTypeEnum.getCurrentOSType() == OSTypeEnum.MAC) {
        lb_OSREstriction.setText(OSTypeEnum.getMessageOSREstriction() + " Mac");
        lb_OSREstriction.setForeground(Color.red);
        comboClickSouricom.setEnabled(false);
        comboStartDefil.setEnabled(false);
        nbDefilTurn.setEnabled(false);
    } else {
        lb_OSREstriction.setText(OSTypeEnum.getMessageOSREstriction());
        lb_OSREstriction.setForeground(Color.red);
        comboClickSouricom.setEnabled(false);
        comboStartDefil.setEnabled(false);
        nbDefilTurn.setEnabled(false);
    }
    // placement dans le gridbag
    GridBagLayout gridBagLayout = new GridBagLayout();
    setLayout(gridBagLayout);
    // clic souricom
    GridBagConstraints gbConstAOClicSouricom = new GridBagConstraints(// Numéro de colonne
    0, // Numéro de ligne
    0, // Nombre de colonnes occupées
    1, // Nombre de lignes occupées
    1, // Taille horizontale relative
    100, // Taille verticale relative
    17, // Ou placer le composant en cas de redimension
    GridBagConstraints.CENTER, // Manière de rétrécir le composant
    GridBagConstraints.BOTH, // Espace autours (haut, gauche, bas, droite)
    new Insets(0, 0, 5, 5), // Espace intérieur en X
    0, // Espace intérieur en Y
    0);
    gridBagLayout.setConstraints(panelDefilSouricom, gbConstAOClicSouricom);
    add(panelDefilSouricom);
    panelDefilSouricom.setEnabled(false);
    // Start defil
    GridBagConstraints gbConstStartDefil = new GridBagConstraints(// Numéro de colonne
    0, // Numéro de ligne
    1, // Nombre de colonnes occupées
    1, // Nombre de lignes occupées
    1, // Taille horizontale relative
    100, // Taille verticale relative
    17, // Ou placer le composant en cas de redimension
    GridBagConstraints.CENTER, // Manière de rétrécir le composant
    GridBagConstraints.BOTH, // Espace autours (haut, gauche, bas, droite)
    new Insets(0, 0, 5, 5), // Espace intérieur en X
    0, // Espace intérieur en Y
    0);
    gridBagLayout.setConstraints(panelStartDefil, gbConstStartDefil);
    add(panelStartDefil);
    panelStartDefil.setEnabled(false);
    // space after
    GridBagConstraints gbConstAOSpaceAfterString = new GridBagConstraints(// Numéro de colonne
    0, // Numéro de ligne
    3, // Nombre de colonnes occupées
    1, // Nombre de lignes occupées
    1, // Taille horizontale relative
    100, // Taille verticale relative
    17, // Ou placer le composant en cas de redimension
    GridBagConstraints.CENTER, // Manière de rétrécir le composant
    GridBagConstraints.BOTH, // Espace autours (haut, gauche, bas, droite)
    new Insets(0, 0, 5, 5), // Espace intérieur en X
    0, // Espace intérieur en Y
    0);
    gridBagLayout.setConstraints(addSpaceAfterString, gbConstAOSpaceAfterString);
    add(addSpaceAfterString);
    // nb turn
    GridBagConstraints gbConstAONBDefilTurn = new GridBagConstraints(// Numéro de colonne
    0, // Numéro de ligne
    2, // Nombre de colonnes occupées
    1, // Nombre de lignes occupées
    1, // Taille horizontale relative
    100, // Taille verticale relative
    17, // Ou placer le composant en cas de redimension
    GridBagConstraints.CENTER, // Manière de rétrécir le composant
    GridBagConstraints.BOTH, // Espace autours (haut, gauche, bas, droite)
    new Insets(0, 0, 5, 5), // Espace intérieur en X
    0, // Espace intérieur en Y
    0);
    gridBagLayout.setConstraints(panelNBDefilTurn, gbConstAONBDefilTurn);
    add(panelNBDefilTurn);
    panelNBDefilTurn.setEnabled(false);
    // jeu de commande
    GridBagConstraints gbConstAOCommandeSet = new GridBagConstraints(// Numéro de colonne
    0, // Numéro de ligne
    4, // Nombre de colonnes occupées
    1, // Nombre de lignes occupées
    1, // Taille horizontale relative
    100, // Taille verticale relative
    17, // Ou placer le composant en cas de redimension
    GridBagConstraints.CENTER, // Manière de rétrécir le composant
    GridBagConstraints.BOTH, // Espace autours (haut, gauche, bas, droite)
    new Insets(0, 0, 5, 5), // Espace intérieur en X
    0, // Espace intérieur en Y
    0);
    gridBagLayout.setConstraints(panelCommandSet, gbConstAOCommandeSet);
    add(panelCommandSet);
    // jeu de raccourcis
    GridBagConstraints gbConstAOShortcutSet = new GridBagConstraints(// Numéro de colonne
    0, // Numéro de ligne
    5, // Nombre de colonnes occupées
    1, // Nombre de lignes occupées
    1, // Taille horizontale relative
    100, // Taille verticale relative
    17, // Ou placer le composant en cas de redimension
    GridBagConstraints.CENTER, // Manière de rétrécir le composant
    GridBagConstraints.BOTH, // Espace autours (haut, gauche, bas, droite)
    new Insets(0, 0, 5, 5), // Espace intérieur en X
    0, // Espace intérieur en Y
    0);
    gridBagLayout.setConstraints(panelShortcutSet, gbConstAOShortcutSet);
    add(panelShortcutSet);
    // OS restriction msg
    GridBagConstraints gbOSREstriction = new GridBagConstraints(// Numéro de colonne
    0, // Numéro de ligne
    6, // Nombre de colonnes occupées
    1, // Nombre de lignes occupées
    1, // Taille horizontale relative
    100, // Taille verticale relative
    17, // Ou placer le composant en cas de redimension
    GridBagConstraints.CENTER, // Manière de rétrécir le composant
    GridBagConstraints.BOTH, // Espace autours (haut, gauche, bas, droite)
    new Insets(20, 0, 5, 5), // Espace intérieur en X
    0, // Espace intérieur en Y
    0);
    gridBagLayout.setConstraints(lb_OSREstriction, gbOSREstriction);
    add(lb_OSREstriction);
}
