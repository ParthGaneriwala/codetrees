@Test
public void test() throws UIMAException {
    AnalysisEngine engine = AnalysisEngineFactory.createPrimitive(ParserAnnotator.class, typeSystemDescription, ParserAnnotator.PARAM_PARSER_MODEL_PATH, MODEL_PATH, ParserAnnotator.PARAM_USE_TAGS_FROM_CAS, true, ParserWrapper_ImplBase.PARAM_OUTPUT_TYPES_HELPER_CLASS_NAME, DefaultOutputTypesHelper.class.getName());
    tokenBuilder.buildTokens(jCas, "Two recent papers provide new evidence relevant to the role of the breast cancer susceptibility gene BRCA2 in DNA repair.", "Two recent papers provide new evidence relevant to the role of the breast cancer susceptibility gene BRCA2 in DNA repair .", // changed 1st
    "DT JJ NN VBP JJ NN JJ IN DT NN IN DT NN NN NN NN NN IN NN NN .");
    engine.process(jCas);
    engine.collectionProcessComplete();
    /*
     * (TOP (S (NP-SBJ (CD Two) (JJ recent) (NNS papers)) (VP (VBP provide) (NP (NP (JJ new) (NN
     * evidence)) (ADJP (JJ relevant) (PP (IN to) (NP (NP (DT the) (NN role)) (PP (IN of) (NP (NP
     * (DT the) (NML (NN breast) (NN cancer) (NN susceptibility)) (NN gene)) (NP (NN BRCA2))))) (PP
     * (IN in) (NP (NN DNA) (NN repair))))))) (. .)) )
     */
    TopTreebankNode tree = JCasUtil.selectSingle(jCas, TopTreebankNode.class);
    Assert.assertNotNull(tree);
    Assert.assertEquals("TOP", tree.getNodeType());
    Assert.assertEquals(1, tree.getChildren().size());
    TreebankNode sNode = tree.getChildren(0);
    Assert.assertEquals("S", sNode.getNodeType());
    Assert.assertEquals(3, sNode.getChildren().size());
    TreebankNode npNode = sNode.getChildren(0);
    TreebankNode vpNode = sNode.getChildren(1);
    TreebankNode periodNode = sNode.getChildren(2);
    Assert.assertEquals("NP", npNode.getNodeType());
    Assert.assertEquals("VP", vpNode.getNodeType());
    Assert.assertEquals(".", periodNode.getNodeType());
    Assert.assertEquals(3, npNode.getChildren().size());
    Assert.assertEquals(3, npNode.getChildren().size());
    Assert.assertEquals(3, JCasUtil.selectCovered(this.jCas, TreebankNode.class, npNode).size());
    TreebankNode twoNode = npNode.getChildren(0);
    TreebankNode recentNode = npNode.getChildren(1);
    TreebankNode papersNode = npNode.getChildren(2);
    Assert.assertEquals("DT", twoNode.getNodeType());
    Assert.assertEquals("JJ", recentNode.getNodeType());
    Assert.assertEquals("NN", papersNode.getNodeType());
    Assert.assertEquals("Two", twoNode.getNodeValue());
    Assert.assertEquals("recent", recentNode.getNodeValue());
    Assert.assertEquals("papers", papersNode.getNodeValue());
    TreebankNode provideNode = vpNode.getChildren(0);
    TreebankNode newEvidenceNode = vpNode.getChildren(1);
    Assert.assertEquals("VBP", provideNode.getNodeType());
    Assert.assertEquals("provide", provideNode.getNodeValue());
    Assert.assertEquals("NP", newEvidenceNode.getNodeType());
    Assert.assertEquals("new evidence relevant to the role of the breast cancer susceptibility gene BRCA2 in DNA repair", newEvidenceNode.getCoveredText());
}
