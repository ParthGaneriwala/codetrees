public final OWLDescription owlresolvedclass(OWLEntity owlentity, Map ns2uri, OWLOntologyManager manager, SelectStatementResult selectResult) throws ParseException {
    Token nonresolvedclass = null;
    Token nonresolvedgroup = null;
    Token owllabelnamedobject = null;
    Token labelgroup = null;
    OWLDescription description = null;
    if (jj_2_16(2)) {
        nonresolvedclass = jj_consume_token(OWLNamedObject);
    } else if (jj_2_17(2)) {
        nonresolvedgroup = jj_consume_token(Group);
    } else if (jj_2_18(2)) {
        owllabelnamedobject = jj_consume_token(OWLLABELNamedObject);
    } else if (jj_2_19(2)) {
        labelgroup = jj_consume_token(LABELGroup);
    } else {
        jj_consume_token(-1);
        throw new ParseException();
    }
    OWLDataFactory factory = manager.getOWLDataFactory();
    if (nonresolvedgroup != null) {
        String NS = (nonresolvedgroup.image).split(":")[0];
        URI nsURI = (URI) ns2uri.get(NS);
        if (nsURI != null) {
            int groupnumber = Integer.parseInt(((nonresolvedgroup.image).split("RG")[1]).substring(0, 1));
            Matcher matcher = selectResult.regexpmatcher();
            String ClassName = getGroupContent(matcher, groupnumber);
            URI ClassURI = URI.create(nsURI + "#" + ClassName);
            description = (OWLDescription) factory.getOWLClass(ClassURI);
        }
    // description= (OWLDescription)factory.getOWLClass(URI.create("http://www.gong.manchester.ac.uk/opl.owl#spain"));
    } else if (owllabelnamedobject != null) {
        String NS = (owllabelnamedobject.image).split(":")[0];
        URI nsURI = (URI) ns2uri.get(NS);
        if (nsURI != null) {
            // description= (OWLDescription)factory.getOWLClass(URI.create("http://www.gong.manchester.ac.uk/opl.owl#spain"));
            String label = (owllabelnamedobject.image).split("<LABEL>")[1];
            OWLOntology ontology = manager.getOntology(nsURI);
            description = (OWLDescription) getClassByLabel(ontology, label);
        }
    } else if (labelgroup != null) {
        String NS = (labelgroup.image).split(":")[0];
        URI nsURI = (URI) ns2uri.get(NS);
        if (nsURI != null) {
            String group = (labelgroup.image).split("<LABEL>")[1];
            int groupnumber = Integer.parseInt((group.split("RG")[1]).substring(0, 1));
            Matcher matcher = selectResult.regexpmatcher();
            String ClassName = getGroupContent(matcher, groupnumber);
            OWLOntology ontology = manager.getOntology(nsURI);
            description = (OWLDescription) getClassByLabel(ontology, ClassName);
        }
    } else {
        String NS = (nonresolvedclass.image).split(":")[0];
        URI nsURI = (URI) ns2uri.get(NS);
        if (nsURI != null) {
            String ClassName = (nonresolvedclass.image).split(":")[1];
            URI ClassURI = URI.create(nsURI + "#" + ClassName);
            description = (OWLDescription) factory.getOWLClass(ClassURI);
        }
    }
    {
        if (true)
            return description;
    }
    throw new Error("Missing return statement in function");
}
