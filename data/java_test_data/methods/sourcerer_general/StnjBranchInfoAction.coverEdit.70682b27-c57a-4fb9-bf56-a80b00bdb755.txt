public ActionForward coverEdit(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    StnjBranchInfoForm coverForm = (StnjBranchInfoForm) form;
    BranchInfoService mgr = (BranchInfoService) getBean(request, "branchInfoService");
    // 根据事项编号找到已经保存的分支代表机构
    String transactionId = request.getParameter("transactionId");
    stnjBranchInfoList = mgr.findBranchInfoByTransactionid(transactionId);
    String pageNoStr = request.getParameter("pageNo");
    // viewId = request.getParameter("viewId");
    Integer pageNo = 0;
    Integer pageCount = 0;
    int branchNu = 0;
    if (pageNoStr != null) {
        pageNo = Integer.valueOf(pageNoStr);
    }
    // 根据实现编号找到基本信息项
    BasicInfoService mgr2 = (BasicInfoService) getBean(request, "basicInfoService");
    StnjBasicInfo basicInfo = mgr2.getBasicInfoByTransactionid(transactionId);
    if (basicInfo != null) {
        // 得到基本信息中填写的分支与代表机构的合计数
        branchNu = basicInfo.getInsBranchNu() + basicInfo.getInsDelegateNu();
        // 目前已经填写的分支代表机构合计数
        int listSize = 0;
        if (stnjBranchInfoList != null) {
            listSize = stnjBranchInfoList.size();
        }
        // 如果分支代表机构的合计数大于目前存在的分支代表机构的数量，自动增加到基本信息中填写的数量
        if (branchNu > listSize) {
            int count = branchNu - listSize;
            for (byte b = 0; b < count; b++) {
                StnjBranchInfo cover = new StnjBranchInfo();
                cover.setTransactionId(transactionId);
                if (cover.getId() == null) {
                    // 生成新的Id
                    cover.setId(System.currentTimeMillis());
                }
                mgr.saveBranchInfo(cover);
            }
        } else // 如果分支代表机构的合计数小于于目前存在的分支代表机构的数量，自动删除多于的数量
        if (branchNu < listSize) {
            // pageCount=insBranchNu;
            for (int b = listSize; b > branchNu; b--) {
                StnjBranchInfo cover = new StnjBranchInfo();
                cover = (StnjBranchInfo) stnjBranchInfoList.get(b - 1);
                System.out.println("\n-----id=" + cover.getId());
                mgr.deleteBranchInfoById(cover.getId().toString());
            }
        }
    }
    if (stnjBranchInfoList != null && stnjBranchInfoList.size() > 0) {
        StnjBranchInfo cover = (StnjBranchInfo) stnjBranchInfoList.get(pageNo);
        BeanUtils.copyProperties(coverForm, cover);
    }
    // pageCount = (stnjBranchInfoList.size()> branchNu)? (stnjBranchInfoList.size()):branchNu;
    pageCount = branchNu;
    request.setAttribute("pageNo", pageNo);
    request.setAttribute("pageCount", pageCount);
    // request.setAttribute("branchNu", branchNu);
    request.setAttribute("transactionId", transactionId);
    updateFormBean(mapping, request, coverForm);
    saveDictionary(request);
    return mapping.findForward("branchInfoEdit");
}
