private void writeNTSpecific() throws IOException {
    NTSpecific ntSpecific = parser.getNTSpecific();
    try {
        writer.writeInt(ntSpecific.getImageBase());
        writer.writeInt(ntSpecific.getSectionAlignment());
        writer.writeInt(ntSpecific.getFileAlignment());
        writer.writeShort(ntSpecific.getOSMajor());
        writer.writeShort(ntSpecific.getOSMinor());
        writer.writeShort(ntSpecific.getUserMajor());
        writer.writeShort(ntSpecific.getUserMinor());
        writer.writeShort(ntSpecific.getSubSysMajor());
        writer.writeShort(ntSpecific.getSubSysMinor());
        writer.writeInt(ntSpecific.getReserved());
        writer.writeInt(ntSpecific.getImageSize());
        writer.writeInt(ntSpecific.getHeaderSize());
        writer.writeInt(ntSpecific.getFileChecksum());
        writer.writeShort(ntSpecific.getSubSystem());
        writer.writeShort(ntSpecific.getDLLFlags());
        writer.writeInt(ntSpecific.getStackReservedSize());
        writer.writeInt(ntSpecific.getStackCommitSize());
        writer.writeInt(ntSpecific.getHeapReservedSize());
        writer.writeInt(ntSpecific.getHeapCommitSize());
        writer.writeInt(ntSpecific.getLoaderFlags());
        writer.writeInt(ntSpecific.getNumberOfDataDirectories());
    } catch (IOException ioe) {
        System.out.println("Error: Writing NTSpecific");
        ioe.printStackTrace();
        throw ioe;
    }
    Write_Offset += CLELConstants.NTSPECIFIC_SIZE;
}
