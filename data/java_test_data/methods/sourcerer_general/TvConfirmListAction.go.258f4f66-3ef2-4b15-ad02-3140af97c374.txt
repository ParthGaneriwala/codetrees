public String go() throws Exception {
    com.sxit.content.util.CommonDatas.getAllContentTypes();
    DetachedCriteria detachedCriteria = DetachedCriteria.forClass(CorePublish.class);
    // if (userName != null && !userName.equals("")) {
    // detachedCriteria.add(Restrictions.like("userName", userName,
    // MatchMode.START));
    // }
    // 
    detachedCriteria.add(Restrictions.eq("userRole", userRole));
    List uidlist = new ArrayList();
    if (userName != null && !userName.equals("")) {
        String hql = "select id from core_user where user_name = '" + userName + "'";
        List list = basicService.findBySqlQuery(hql);
        for (int i = 0; list != null && i < list.size(); i++) {
            uidlist.add(Integer.parseInt(list.get(i).toString()));
        }
    }
    // userid
    if (uidlist.size() != 0) {
        detachedCriteria.add(Restrictions.in("userid", uidlist));
    }
    if (start != null && !start.equals("")) {
        java.sql.Timestamp starttime = new java.sql.Timestamp(df.parse(start).getTime());
        detachedCriteria.add(Restrictions.ge("createtime", starttime));
    }
    if (end != null && !end.equals("")) {
        java.sql.Timestamp endtime = new java.sql.Timestamp(df.parse(end).getTime());
        detachedCriteria.add(Restrictions.le("createtime", endtime));
    }
    if (statusid != -1) {
        detachedCriteria.add(Restrictions.eq("statusid", statusid));
    }
    if (productid != -1) {
        detachedCriteria.add(Restrictions.eq("productid", productid));
    }
    if (order.equals("desc"))
        detachedCriteria.addOrder(Order.desc(orderfield));
    else
        detachedCriteria.addOrder(Order.asc(orderfield));
    if (totype == null || totype.equals(""))
        totype = "list" + userRole;
    if (totype != null && totype.equals("excel")) {
        this.page = basicService.findPageByCriteria(detachedCriteria, Integer.MAX_VALUE, 1);
    } else {
        this.page = basicService.findPageByCriteria(detachedCriteria, pageSize, pageNo);
        totype = "list" + userRole;
    }
    return totype;
}
