public void test_saveUser() {
    UserService userService = (UserService) this.applicationContext.getBean("userService");
    long time1 = System.currentTimeMillis();
    long time2 = time1 + 10;
    long time3 = time1 + 20;
    String email = "nosuchuser1@abc.com";
    assertNull(userService.getUserByEmail(email));
    User user = new User();
    user.setName("金彦");
    user.setEmail("nosuchuser1@abc.com");
    user.setPassword("aaaaaa");
    user.setRegisterDate(time1);
    userService.saveUser(user);
    int count = userService.getAllUserCount();
    assertTrue(count > 0);
    User get = userService.getUserByEmail(email);
    assertNotNull(get);
    assertEquals(user.getId(), get.getId());
    assertEquals(user.getName(), get.getName());
    assertEquals(user.getEmail(), get.getEmail());
    assertEquals(user.getPassword(), get.getPassword());
    assertEquals(user.getRegisterDate(), get.getRegisterDate());
    get.setPassword("bbbbbb");
    userService.saveUser(get);
    // saveUser 不是insert而是update，所以count不变
    assertEquals(count, userService.getAllUserCount());
    User get2 = userService.getUserById(get.getId());
    assertEquals(get.getName(), get2.getName());
    assertEquals(get.getEmail(), get2.getEmail());
    assertEquals(get.getPassword(), get2.getPassword());
    assertEquals(get.getRegisterDate(), get2.getRegisterDate());
    // assertTrue(userService.getAllUser().contains(get2));
    User user2 = new User();
    user2.setEmail("email2");
    user2.setName("name2");
    user2.setPassword("password2");
    user2.setRegisterDate(time2);
    User user3 = new User();
    user3.setEmail("email3");
    user3.setName("name3");
    user3.setPassword("password3");
    user3.setRegisterDate(time3);
    userService.saveUser(user2);
    userService.saveUser(user3);
    assertEquals(3, userService.getUserCount(time1, time3));
    assertEquals(1, userService.getUserCount(time3, time3 + 1));
    assertEquals(1, userService.getUserCount(time2, time2));
    assertEquals(3, userService.getUserCount(time3, time1));
}
