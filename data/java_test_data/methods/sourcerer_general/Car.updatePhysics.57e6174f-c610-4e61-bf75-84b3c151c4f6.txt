public void updatePhysics() {
    model.setRotation(rotationX, rotationY, rotationZ);
    model.setPosition(positionX, positionY, positionZ);
    model.update();
    if (collisionModel != null) {
        collisionModel.setRotation(rotationX, rotationY, rotationZ);
        collisionModel.setPosition(positionX, positionY, positionZ);
        collisionModel.update();
    }
    // turn wheels
    if (frontWheelsTransform != null) {
        model.getJoint(frontLeftWheel).getLocalRefMatrix().mulInverse(frontWheelsTransform);
        model.getJoint(frontRightWheel).getLocalRefMatrix().mulInverse(frontWheelsTransform);
    }
    if (wheelsTransform != null) {
        model.getJoint(backLeftWheel).getLocalRefMatrix().mulInverse(wheelsTransform);
        model.getJoint(backRightWheel).getLocalRefMatrix().mulInverse(wheelsTransform);
    }
    wheelsRotation += speed * wheelsSpeed;
    wheelsTransform = new Transform3D();
    wheelsTransform.rotX(Math.toRadians(wheelsRotation));
    frontWheelsTransform = new Transform3D();
    frontWheelsTransform.rotY(Math.toRadians(steer * wheelsTurn));
    frontWheelsTransform.mul(wheelsTransform);
    model.getJoint(frontLeftWheel).getLocalRefMatrix().mul(frontWheelsTransform);
    model.getJoint(frontRightWheel).getLocalRefMatrix().mul(frontWheelsTransform);
    model.getJoint(backLeftWheel).getLocalRefMatrix().mul(wheelsTransform);
    model.getJoint(backRightWheel).getLocalRefMatrix().mul(wheelsTransform);
}
