@Override
public void startElement(String namespaceURI, String lName, String qName, Attributes attributes) throws SAXException {
    if (namespaceURI.equals(NS_URI) && lName.equals(TRANSFORM_TAG)) {
        try {
            insideTransformElement = true;
            stylesheet_uri = attributes.getValue(STYLESHEET_URI_ATTR);
            fragmentName = attributes.getValue(FRAGMENT_NAME_ATTR);
            fragmentNamespace = attributes.getValue(FRAGMENT_NAMESPACE_ATTR);
            if (getLogger().isDebugEnabled()) {
                getLogger().debug("Stylesheet uri=" + stylesheet_uri);
                getLogger().debug("fragmentName=" + fragmentName);
                getLogger().debug("fragmentNamespace=" + fragmentNamespace);
            }
            Source sbu_source = resolver.resolveURI(stylesheet_uri);
            if (getLogger().isDebugEnabled()) {
                getLogger().debug("Stylesheet source=" + IOUtils.toString(sbu_source.getInputStream(), "UTF-8"));
            // sbu_source.getInputStream().);
            }
            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
            DocumentBuilder db = null;
            try {
                db = dbf.newDocumentBuilder();
            } catch (ParserConfigurationException ex) {
                Logger.getLogger(FragmentsTransformer.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (null != db) {
                stylesheet = db.parse(sbu_source.getInputStream());
                try {
                    this.transformerHandler = this.xsltProcessor.getTransformerHandler(sbu_source);
                } catch (org.apache.excalibur.xml.xslt.XSLTProcessorException ex) {
                    Logger.getLogger(FragmentsTransformer.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.transformer = null;
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(FragmentsTransformer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FragmentsTransformer.class.getName()).log(Level.SEVERE, null, ex);
        }
    } else if (insideTransformElement && lName.equals(fragmentName) && namespaceURI.equals(fragmentNamespace)) {
        startRecording();
        recording = true;
    } else {
        if (!recording) {
            consumer.startElement(namespaceURI, lName, qName, attributes);
        } else {
            super.startElement(namespaceURI, lName, qName, attributes);
        }
    }
}
