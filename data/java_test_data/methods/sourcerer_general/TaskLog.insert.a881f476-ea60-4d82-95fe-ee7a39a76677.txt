public boolean insert(Connection db) throws SQLException {
    boolean commit = db.getAutoCommit();
    try {
        if (commit) {
            db.setAutoCommit(false);
        }
        int i = 0;
        PreparedStatement pst = db.prepareStatement("INSERT INTO tasklog " + "(task_id, enteredby, modifiedby, priority, owner, duedate, estimatedloe, " + (estimatedLOEType == -1 ? "" : "estimatedloetype, ") + (insertCreationDates ? "entered, modified, " : "") + "complete, completedate, category_id, " + "functional_area, status, business_value, complexity, target_release, target_sprint, loe_remaining, " + "assigned_priority) " + "VALUES (?, ?, ?, ?, ?, ?, ?, " + (estimatedLOEType == -1 ? "" : "?, ") + (insertCreationDates ? "?, ?, " : "") + "?, ?, ?, ?, ?, ?, " + "?, ?, ?, ?, ? ) ");
        pst.setInt(++i, taskId);
        pst.setInt(++i, this.getEnteredBy());
        pst.setInt(++i, this.getModifiedBy());
        pst.setInt(++i, this.getPriority());
        DatabaseUtils.setInt(pst, ++i, this.getOwner());
        pst.setTimestamp(++i, this.getDueDate());
        pst.setDouble(++i, this.getEstimatedLOE());
        if (this.getEstimatedLOEType() != -1) {
            pst.setInt(++i, this.getEstimatedLOEType());
        }
        if (insertCreationDates) {
            pst.setTimestamp(++i, entered);
            pst.setTimestamp(++i, modified);
        }
        pst.setBoolean(++i, this.getComplete());
        DatabaseUtils.setTimestamp(pst, ++i, this.getCompleteDate());
        DatabaseUtils.setInt(pst, ++i, categoryId);
        DatabaseUtils.setInt(pst, ++i, functionalArea);
        DatabaseUtils.setInt(pst, ++i, status);
        DatabaseUtils.setInt(pst, ++i, businessValue);
        DatabaseUtils.setInt(pst, ++i, complexity);
        DatabaseUtils.setInt(pst, ++i, targetRelease);
        DatabaseUtils.setInt(pst, ++i, targetSprint);
        DatabaseUtils.setInt(pst, ++i, loeRemaining);
        DatabaseUtils.setInt(pst, ++i, assignedPriority);
        pst.execute();
        this.id = DatabaseUtils.getCurrVal(db, "tasklog_id_seq", -1);
        pst.close();
        if (commit) {
            db.commit();
        }
    } catch (SQLException e) {
        if (commit) {
            db.rollback();
        }
        throw new SQLException(e.getMessage());
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
    return true;
}
