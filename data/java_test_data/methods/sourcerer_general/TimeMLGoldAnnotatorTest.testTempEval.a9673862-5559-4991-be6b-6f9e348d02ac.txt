@Test
public void testTempEval() throws UIMAException, IOException {
    CollectionReader reader = CollectionReaderFactory.createCollectionReader(FilesCollectionReader.class, typeSystemDescription, FilesCollectionReader.PARAM_VIEW_NAME, TimeMLViewName.TIMEML, FilesCollectionReader.PARAM_ROOT_FILE, "src/test/resources/data/timeml/AP900815-0044.tml");
    AnalysisEngine engine = AnalysisEngineFactory.createPrimitive(TimeMLGoldAnnotator.class, typeSystemDescription);
    JCas jcas = new JCasIterable(reader, engine).next();
    // <EVENT eid="e5" class="STATE" stem="face" aspect="NONE"
    // tense="PRESPART" polarity="POS" pos="VERB">facing</EVENT>
    Event event = JCasUtil.select(jcas, Event.class).iterator().next();
    Assert.assertEquals("facing", event.getCoveredText());
    Assert.assertEquals("e5", event.getId());
    Assert.assertEquals(null, event.getEventInstanceID());
    Assert.assertEquals("STATE", event.getEventClass());
    Assert.assertEquals("PRESPART", event.getTense());
    Assert.assertEquals("NONE", event.getAspect());
    Assert.assertEquals("POS", event.getPolarity());
    Assert.assertEquals("VERB", event.getPos());
    Assert.assertEquals("face", event.getStem());
    Assert.assertEquals(null, event.getModality());
    Assert.assertEquals(null, event.getCardinality());
    // <TIMEX3 tid="t3" type="TIME" value="1990-08-15T13:37"
    // temporalFunction="false" functionInDocument="CREATION_TIME">08-15-90
    // 1337EDT</TIMEX3>
    Time docTime = JCasUtil.select(jcas, Time.class).iterator().next();
    Assert.assertEquals("08-15-90 1337EDT", docTime.getCoveredText());
    Assert.assertEquals("t3", docTime.getId());
    Assert.assertEquals("TIME", docTime.getTimeType());
    Assert.assertEquals("1990-08-15T13:37", docTime.getValue());
    Assert.assertEquals("false", docTime.getTemporalFunction());
    Assert.assertEquals("CREATION_TIME", docTime.getFunctionInDocument());
    // <TLINK lid="l6" relType="OVERLAP" eventID="e54" relatedToTime="t56"
    // task="A"/>
    TemporalLink tlink = JCasUtil.selectByIndex(jcas, TemporalLink.class, 5);
    Assert.assertEquals("l6", tlink.getId());
    Assert.assertEquals("OVERLAP", tlink.getRelationType());
    Assert.assertEquals("e54", tlink.getSource().getId());
    Assert.assertEquals("t56", tlink.getTarget().getId());
}
