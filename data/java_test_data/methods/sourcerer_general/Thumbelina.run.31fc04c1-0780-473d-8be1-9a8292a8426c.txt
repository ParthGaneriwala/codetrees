// 
// Runnable interface
// 
public void run() {
    URL link;
    int original;
    int index;
    String href;
    URL[][] urls;
    while (true) {
        try {
            link = null;
            original = -1;
            synchronized (mUrls) {
                if (0 != mUrls.size()) {
                    original = mUrls.size();
                    index = (int) (Math.random() * original);
                    link = mUrls.remove(index);
                }
            }
            if (null != link) {
                updateQueueSize(original, mUrls.size());
                href = link.toString();
                setCurrentURL(href);
                mVisited.put(href, link);
                updateVisitedSize(mVisited.size() - 1, mVisited.size());
                urls = getImageLinks(link);
                fetch(urls[0]);
                append(filter(urls[1]));
            // synchronized (mEnqueuers)
            // {
            // Enqueuer enqueuer = new Enqueuer (urls[1]);
            // enqueuer.setPriority (Thread.MIN_PRIORITY);
            // mEnqueuers.add (enqueuer);
            // enqueuer.start ();
            // }
            // crap                    setCurrentURL (null);
            } else
                // don't spin crazily on an empty list
                Thread.sleep(100);
            if (!mActive)
                synchronized (mUrls) {
                    mUrls.wait();
                }
        } catch (Throwable t) {
            t.printStackTrace();
        }
    }
}
