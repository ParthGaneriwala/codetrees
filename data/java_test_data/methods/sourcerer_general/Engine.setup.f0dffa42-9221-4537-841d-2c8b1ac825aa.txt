/*
	 * public static void main(String args[]) { Engine eng = new Engine(); }
	 */
public void setup(boolean white, String initialPosition, String moveList) {
    boolean nonSwitch = true;
    for (int i = 0; i < 8; i++) {
        for (int j = 0; j < 8; j++) {
            BeginPosition[i][j] = 0;
        }
    }
    moveNumber = 0;
    // es ist nie ein *. weiss nicht warum
    if (initialPosition.equalsIgnoreCase("*")) {
        BeginPosition = loadStartingPosition();
    } else {
        BeginPosition = loadAdjournedPosition(initialPosition);
    }
    if (moveList.length() > 0) {
        applyBook = false;
        String moveStr = moveList.substring(moveList.indexOf('{') + 1, moveList.indexOf('}'));
        myPointerToROBOMainObject.myROBO.sendLine("tell kiebitz extracted " + moveStr);
        String restMoveList = moveList.substring(moveList.indexOf('}') + 1);
        ;
        Move madeMove = parseMove(moveStr);
        BeginPosition = acknowledgeMove(madeMove, BeginPosition);
        nonSwitch = false;
        if (moveList.length() > 6) {
            while (restMoveList.indexOf('{') != -1) {
                try {
                    moveStr = restMoveList.substring(restMoveList.indexOf('{') + 1, restMoveList.indexOf('}'));
                } catch (StringIndexOutOfBoundsException e) {
                    myPointerToROBOMainObject.myROBO.sendLine("tell kiebitz restMoveList:" + restMoveList);
                }
                restMoveList = restMoveList.substring(restMoveList.indexOf('}') + 1);
                myPointerToROBOMainObject.myROBO.sendLine("tell kiebitz extracted " + moveStr);
                madeMove = parseMove(moveStr);
                BeginPosition = acknowledgeMove(madeMove, BeginPosition);
                nonSwitch = !nonSwitch;
            }
        }
    } else {
        applyBook = true;
    }
    if (white && nonSwitch) {
        respond("e7e7", false);
    }
    if (!white && !nonSwitch) {
        respond("e7e7", true);
    }
    if (!nonSwitch) {
        myPointerToROBOMainObject.myROBO.revertTrigger();
    }
}
