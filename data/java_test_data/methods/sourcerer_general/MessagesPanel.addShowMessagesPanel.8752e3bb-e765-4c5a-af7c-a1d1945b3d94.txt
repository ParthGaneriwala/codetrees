private void addShowMessagesPanel() {
    List<Message> messageList = getMessages();
    for (Message msg : messageList) {
        HorizontalLayout msgLayout = new HorizontalLayout();
        msgLayout.setWidth(600, Sizeable.UNITS_PIXELS);
        msgLayout.setSpacing(true);
        msgLayout.setStyleName(UiConstants.CSS_CONTENT_PANEL);
        Label lblTimestamp = new Label(dateFormat.format(msg.getCreated()));
        msgLayout.addComponent(lblTimestamp);
        Label lblAuthor = new Label(msg.getAuthor().getUsername());
        msgLayout.addComponent(lblAuthor);
        Label lblContent = new Label(msg.getContent());
        msgLayout.addComponent(lblContent);
        showMessagesPanel.addComponent(msgLayout);
        showMessagesPanel.setComponentAlignment(msgLayout, Alignment.MIDDLE_CENTER);
    }
    HorizontalLayout btnLayout = new HorizontalLayout();
    btnLayout.setSpacing(true);
    if (getRenderPrev()) {
        Button btnPrev = new Button("Previous");
        btnPrev.addListener(new Button.ClickListener() {

            @Override
            public void buttonClick(Button.ClickEvent clickEvent) {
                prevMessages();
            }
        });
        btnLayout.addComponent(btnPrev);
    }
    if (getRenderNext()) {
        Button btnNext = new Button("Next");
        btnNext.addListener(new Button.ClickListener() {

            @Override
            public void buttonClick(Button.ClickEvent clickEvent) {
                nextMessages();
            }
        });
        btnLayout.addComponent(btnNext);
    }
    showMessagesPanel.addComponent(btnLayout);
    showMessagesPanel.setComponentAlignment(btnLayout, Alignment.MIDDLE_CENTER);
}
