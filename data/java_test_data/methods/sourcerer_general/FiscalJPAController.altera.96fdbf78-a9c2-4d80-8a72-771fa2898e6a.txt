/* (non-Javadoc)
	 * @see contratosonline.ejb.controller.FiscalControllerLocal#altera(contratosonline.entity.FiscalContrato)
	 */
public void altera(FiscalContrato fiscalcontrato) throws Exception {
    EntityManager em = null;
    try {
        em = getEntityManager();
        FiscalContrato persistentFiscalcontrato = em.find(FiscalContrato.class, fiscalcontrato.getIdFiscalContrato());
        Setor setorOld = persistentFiscalcontrato.getSetor();
        Setor setorNew = fiscalcontrato.getSetor();
        Collection<Contrato> contratoCollectionOld = persistentFiscalcontrato.getContratoCollection();
        Collection<Contrato> contratoCollectionNew = fiscalcontrato.getContratoCollection();
        if (setorNew != null) {
            setorNew = em.getReference(setorNew.getClass(), setorNew.getIdSetor());
            fiscalcontrato.setSetor(setorNew);
        }
        Collection<Contrato> attachedContratoCollectionNew = new ArrayList<Contrato>();
        for (Contrato contratoCollectionNewContratoToAttach : contratoCollectionNew) {
            contratoCollectionNewContratoToAttach = em.getReference(contratoCollectionNewContratoToAttach.getClass(), contratoCollectionNewContratoToAttach.getIdcontrato());
            attachedContratoCollectionNew.add(contratoCollectionNewContratoToAttach);
        }
        contratoCollectionNew = attachedContratoCollectionNew;
        fiscalcontrato.setContratoCollection(contratoCollectionNew);
        fiscalcontrato = em.merge(fiscalcontrato);
        if (setorOld != null && !setorOld.equals(setorNew)) {
            setorOld.getFiscalcontratoCollection().remove(fiscalcontrato);
            setorOld = em.merge(setorOld);
        }
        if (setorNew != null && !setorNew.equals(setorOld)) {
            setorNew.getFiscalcontratoCollection().add(fiscalcontrato);
            setorNew = em.merge(setorNew);
        }
        for (Contrato contratoCollectionOldContrato : contratoCollectionOld) {
            if (!contratoCollectionNew.contains(contratoCollectionOldContrato)) {
                contratoCollectionOldContrato.setFiscal(null);
                contratoCollectionOldContrato = em.merge(contratoCollectionOldContrato);
            }
        }
        for (Contrato contratoCollectionNewContrato : contratoCollectionNew) {
            if (!contratoCollectionOld.contains(contratoCollectionNewContrato)) {
                FiscalContrato oldFiscalOfContratoCollectionNewContrato = contratoCollectionNewContrato.getFiscal();
                contratoCollectionNewContrato.setFiscal(fiscalcontrato);
                contratoCollectionNewContrato = em.merge(contratoCollectionNewContrato);
                if (oldFiscalOfContratoCollectionNewContrato != null && !oldFiscalOfContratoCollectionNewContrato.equals(fiscalcontrato)) {
                    oldFiscalOfContratoCollectionNewContrato.getContratoCollection().remove(contratoCollectionNewContrato);
                    oldFiscalOfContratoCollectionNewContrato = em.merge(oldFiscalOfContratoCollectionNewContrato);
                }
            }
        }
    } catch (Exception ex) {
        String msg = ex.getLocalizedMessage();
        if (msg == null || msg.length() == 0) {
            Integer id = fiscalcontrato.getIdFiscalContrato();
            if (findFiscalcontrato(id) == null) {
                throw new Exception("The fiscalcontrato with id " + id + " no longer exists.");
            }
        }
        throw ex;
    } finally {
        if (em != null) {
        // em.close();
        }
    }
}
