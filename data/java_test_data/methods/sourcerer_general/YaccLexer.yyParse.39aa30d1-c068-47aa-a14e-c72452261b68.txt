@SuppressWarnings("unchecked")
public int yyParse() throws IOException {
    char[] cc_ecs = cc_parser.ecs;
    char[][] cc_next = cc_parser.next;
    char[] cc_rule = cc_parser.rule;
    char[] cc_lhs = cc_parser.lhs;
    LinkedList<YYParserState> cc_lookaheadStack = _yyLookaheadStack;
    Vector<YYParserState> cc_stateStack = _yyStateStack;
    if (cc_stateStack.size() == 0)
        cc_stateStack.add(new YYParserState());
    int cc_toState = 0;
    for (; ; ) {
        YYParserState cc_lookahead;
        int cc_fromState;
        char cc_ch;
        // 
        if (cc_lookaheadStack.size() == 0) {
            _yyValue = null;
            int val = yyLex();
            cc_lookahead = new YYParserState(val, _yyValue);
            cc_lookaheadStack.add(cc_lookahead);
        } else
            cc_lookahead = cc_lookaheadStack.getLast();
        cc_ch = cc_ecs[cc_lookahead.token];
        cc_fromState = cc_stateStack.get(cc_stateStack.size() - 1).state;
        cc_toState = (short) cc_next[cc_fromState][cc_ch];
        // 
        if (cc_toState > 0) {
            // shift
            cc_lookahead.state = cc_toState;
            cc_stateStack.add(cc_lookahead);
            cc_lookaheadStack.removeLast();
            continue;
        } else if (cc_toState == 0) {
            // error
            if (_yyInError) {
                // first check if the error is at the lookahead
                if (cc_ch == 1) {
                    // action is found
                    if (_yyStateStack.size() > 1)
                        _yyStateStack.setSize(_yyStateStack.size() - 1);
                    else
                        // can't do much we exit the parser
                        return 1;
                } else {
                    // this means that we need to dump the lookahead.
                    if (// can't do much with EOF;
                    cc_ch == 0)
                        return 1;
                    cc_lookaheadStack.removeLast();
                }
                continue;
            } else {
                if (yyParseError(cc_lookahead.token))
                    return 1;
                _yyLookaheadStack.add(new YYParserState(1, _yyValue));
                _yyInError = true;
                continue;
            }
        }
        _yyInError = false;
        // now the reduce action
        int cc_ruleState = -cc_toState;
        _yyArgStart = cc_stateStack.size() - cc_rule[cc_ruleState] - 1;
        // 
        // find the state that said need this non-terminal
        // 
        cc_fromState = cc_stateStack.get(_yyArgStart).state;
        // 
        if (cc_ruleState == 1)
            // reset the parser
            cc_toState = 0;
        else {
            cc_toState = cc_next[cc_fromState][cc_lhs[cc_ruleState]];
        }
        _yyValue = null;
        switch(cc_ruleState) {
            case // accept
            1:
                return 0;
            case // yacc : section1 SEPARATOR section2
            2:
                {
                    m_this.parseYacc();
                }
            case 33:
                break;
            case // section1 : section1 precedence
            3:
                {
                    m_this.parseYacc();
                }
            case 34:
                break;
            case // section1 : section1 start
            4:
                {
                    m_this.parseYacc();
                }
            case 35:
                break;
            case // section1 : section1 type
            5:
                {
                    m_this.parseYacc();
                }
            case 36:
                break;
            case // section1 :
            6:
                {
                    m_this.parseYacc();
                }
            case 37:
                break;
            case // optTypeInfo :
            7:
                {
                    m_this.parseYacc();
                }
            case 38:
                break;
            case // optTypeInfo : TYPEINFO
            8:
                {
                    _yyValue = m_this.parseTypeInfo((java.lang.String) yyGetValue(1));
                }
            case 39:
                break;
            case // section2 : rules
            9:
                {
                    m_this.parseYacc();
                }
            case 40:
                break;
            case // precedence : TOKENTYPE optTypeInfo tokenList
            10:
                {
                    m_this.parsePrecedence((java.lang.String) yyGetValue(1), (java.lang.String) yyGetValue(2), (java.lang.String) yyGetValue(3));
                }
            case 41:
                break;
            case // type : TYPE TYPEINFO tokenList
            11:
                {
                    m_this.parseType((java.lang.String) yyGetValue(2), (java.lang.String) yyGetValue(3));
                }
            case 42:
                break;
            case // tokenList : tokenList TOKEN
            12:
                {
                    _yyValue = m_this.parseTokenList((java.lang.String) yyGetValue(1), (java.lang.String) yyGetValue(2));
                }
            case 43:
                break;
            case // tokenList : TOKEN
            13:
                {
                    _yyValue = m_this.parseTokenList((java.lang.String) yyGetValue(1));
                }
            case 44:
                break;
            case // start : START TOKEN
            14:
                {
                    m_this.parseStart((java.lang.String) yyGetValue(2));
                }
            case 45:
                break;
            case // rules : rules rule
            15:
                {
                    m_this.parseRules();
                }
            case 46:
                break;
            case // rules : rule
            16:
                {
                    m_this.parseRules();
                }
            case 47:
                break;
            case // rules : rules error
            17:
                {
                    m_this.parseRuleError();
                }
            case 48:
                break;
            case // rules : error
            18:
                {
                    m_this.parseRulesError();
                }
            case 49:
                break;
            case // rule : TOKEN rhsList ';'
            19:
                {
                    m_this.parseRule((java.lang.String) yyGetValue(1), (java.util.ArrayList<org.yuanheng.cookcc.doc.RhsDoc>) yyGetValue(2));
                }
            case 50:
                break;
            case // rhs : terms prec action
            20:
                {
                    _yyValue = m_this.parseRhsList((java.lang.String) yyGetValue(1), (java.lang.String) yyGetValue(2), (java.lang.String) yyGetValue(3));
                }
            case 51:
                break;
            case // rhsList : rhsList '|' rhs
            21:
                {
                    _yyValue = m_this.parseRhsList((java.util.ArrayList<org.yuanheng.cookcc.doc.RhsDoc>) yyGetValue(1), (java.lang.Integer) yyGetValue(2), (org.yuanheng.cookcc.doc.RhsDoc) yyGetValue(3));
                }
            case 52:
                break;
            case // rhsList : ':' rhs
            22:
                {
                    _yyValue = m_this.parseRhsList((java.lang.Integer) yyGetValue(1), (org.yuanheng.cookcc.doc.RhsDoc) yyGetValue(2));
                }
            case 53:
                break;
            case // terms : terms TOKEN
            23:
                {
                    _yyValue = m_this.parseRHS((java.lang.String) yyGetValue(1), (java.lang.String) yyGetValue(2));
                }
            case 54:
                break;
            case // terms :
            24:
                {
                    _yyValue = m_this.parseTerms();
                }
            case 55:
                break;
            case // action : complete_action ACTION_CODE
            25:
                {
                    _yyValue = m_this.parseAction((java.lang.String) yyGetValue(2));
                }
            case 56:
                break;
            case // action :
            26:
                {
                    _yyValue = m_this.parseAction();
                }
            case 57:
                break;
            case // complete_action : complete_action PARTIAL_ACTION
            27:
                {
                    _yyValue = m_this.parseAction();
                }
            case 58:
                break;
            case // complete_action :
            28:
                {
                    _yyValue = m_this.parseAction();
                }
            case 59:
                break;
            case // prec : PREC TOKEN
            29:
                {
                    _yyValue = m_this.parsePrec((java.lang.String) yyGetValue(2));
                }
            case 60:
                break;
            case // prec :
            30:
                {
                    _yyValue = m_this.parsePrec();
                }
            case 61:
                break;
            default:
                throw new IOException("Internal error in YaccLexer parser.");
        }
        YYParserState cc_reduced = new YYParserState(-cc_ruleState, _yyValue, cc_toState);
        _yyValue = null;
        cc_stateStack.setSize(_yyArgStart + 1);
        cc_stateStack.add(cc_reduced);
    }
}
