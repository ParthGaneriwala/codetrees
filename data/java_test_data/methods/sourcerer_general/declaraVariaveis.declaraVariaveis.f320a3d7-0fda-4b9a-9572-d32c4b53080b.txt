public void declaraVariaveis(TabelaSimbolos tabelaSimbolos, String metodo) {
    if (// se tiver o typedef
    tabelaSimbolos.getLookahead().equals("typedef"))
        // Consome Typedef
        tabelaSimbolos.soConsome();
    // Guarda o tipo da variável
    String tipo = tabelaSimbolos.getLookahead();
    // Consome Tipo
    tabelaSimbolos.soConsome();
    if (tabelaSimbolos.getTipo().equals("identificador")) {
        if (metodo.equals("global")) {
            if (tabelaSimbolos.jaContemAquelaVariavelGlobal(tabelaSimbolos.getLookahead())) {
                if (!tabelaSimbolos.verificaGlobais(tabelaSimbolos.getLookahead())) {
                    System.out.println("Linha " + tabelaSimbolos.getLinha() + ":" + " A Variavel " + tabelaSimbolos.getLookahead() + " já foi declarada entre as globais");
                    ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada");
                }
            }
        } else {
            // Analisa se a variável ja foi declarada dentro do método. Se existe duas váriasveis com o mesmo nome.
            if (!(tabelaSimbolos.verificaMetodoEMetodo(tabelaSimbolos.getLookahead(), metodo))) {
                System.out.println("Linha " + tabelaSimbolos.getLinha() + ": " + "A variável " + tabelaSimbolos.getLookahead() + " foi declarada mais de uma vez no metodo " + metodo);
                ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada");
            }
            // Verifica se a variavel, que esta declarada em um método, ja foi declarada como global.
            if (!(tabelaSimbolos.verificaMetodoEGlobal(tabelaSimbolos.getLookahead()))) {
                System.out.println("Linha " + tabelaSimbolos.getLinha() + ": " + "A variável " + tabelaSimbolos.getLookahead() + " declarada no método " + metodo + " também foi declarada como global");
                ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável foi declarada como global");
            }
        }
        // Consome identificador
        tabelaSimbolos.soConsome();
    } else if (tabelaSimbolos.getLookahead().equals("*")) {
        // Consome o *
        tabelaSimbolos.soConsome();
        // System.out.println("Já existe essa variável declarada");
        if (metodo.equals("global")) {
            if (tabelaSimbolos.jaContemAquelaVariavelGlobal(tabelaSimbolos.getLookahead())) {
                if (!tabelaSimbolos.verificaGlobais(tabelaSimbolos.getLookahead())) {
                    System.out.println("Linha " + tabelaSimbolos.getLinha() + ":" + " A Variavel " + tabelaSimbolos.getLookahead() + " já foi declarada entre as globais");
                    ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada como global");
                }
            }
        } else {
            // Analisa se a variável ja foi declarada dentro do método. Se existe duas váriasveis com o mesmo nome.
            if (!(tabelaSimbolos.verificaMetodoEMetodo(tabelaSimbolos.getLookahead(), metodo))) {
                System.out.println("Linha " + tabelaSimbolos.getLinha() + ": " + "A variável " + tabelaSimbolos.getLookahead() + "foi declarada mais de uma vez no metodo " + metodo);
                ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada no método");
            }
            // Verifica se a variavel, que esta declarada em um método, ja foi declarada como global.
            if (!(tabelaSimbolos.verificaMetodoEGlobal(tabelaSimbolos.getLookahead()))) {
                System.out.println("Linha " + tabelaSimbolos.getLinha() + ": " + "A variável " + tabelaSimbolos.getLookahead() + " declarada no método " + metodo + " também foi declarada como global");
                ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada como global");
            }
        }
        // Consome o identificador
        tabelaSimbolos.soConsome();
    }
    while (!tabelaSimbolos.getLookahead().equals(";")) {
        if (tabelaSimbolos.getLookahead().equals("=")) {
            // Consome igual
            tabelaSimbolos.soConsome();
            if (!Utils.tipoValor(tabelaSimbolos.getLookahead()).equals(tipo)) {
                System.out.println("Tipos não compatíveis");
                ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Tipos não compatíveis");
            }
            // Consome o que vem depois do igual
            tabelaSimbolos.soConsome();
            if (tabelaSimbolos.getLookahead().equals(",")) {
                while (tabelaSimbolos.getLookahead().equals(",")) {
                    // Consume a vírgula
                    tabelaSimbolos.soConsome();
                    if (tabelaSimbolos.getTipo().equals("identificador")) {
                        // System.out.println("Já existe essa variável declarada");
                        if (metodo.equals("global")) {
                            if (tabelaSimbolos.jaContemAquelaVariavelGlobal(tabelaSimbolos.getLookahead())) {
                                if (!tabelaSimbolos.verificaGlobais(tabelaSimbolos.getLookahead())) {
                                    System.out.println("Linha " + tabelaSimbolos.getLinha() + ":" + " A Variavel " + tabelaSimbolos.getLookahead() + " já foi declarada entre as globais");
                                    ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada entre as globais");
                                }
                            }
                        } else {
                            // Analisa se a variável ja foi declarada dentro do método. Se existe duas váriasveis com o mesmo nome.
                            if (!(tabelaSimbolos.verificaMetodoEMetodo(tabelaSimbolos.getLookahead(), metodo))) {
                                System.out.println("Linha " + tabelaSimbolos.getLinha() + ": " + "A variável " + tabelaSimbolos.getLookahead() + "foi declarada mais de uma vez no metodo " + metodo);
                                ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada");
                            }
                            // Verifica se a variavel, que esta declarada em um método, ja foi declarada como global.
                            if (!(tabelaSimbolos.verificaMetodoEGlobal(tabelaSimbolos.getLookahead()))) {
                                System.out.println("Linha " + tabelaSimbolos.getLinha() + ": " + "A variável " + tabelaSimbolos.getLookahead() + " declarada no método " + metodo + " também foi declarada como global");
                                ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada como global");
                            }
                        }
                        // Consome identificador
                        tabelaSimbolos.soConsome();
                        if (tabelaSimbolos.getLookahead().equals("[")) {
                            if (!casoVetor()) {
                                System.out.println("Deve ter um int entre [ ]");
                                ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Deve haver um inteiro entre [ ]");
                                // Consome o que tem dentro do []
                                tabelaSimbolos.soConsome();
                                // Consome ]
                                tabelaSimbolos.soConsome();
                            }
                        }
                    } else if (tabelaSimbolos.getLookahead().equals("*")) {
                        // Consome o *
                        tabelaSimbolos.soConsome();
                        // System.out.println("Já existe essa variável declarada");
                        if (metodo.equals("global")) {
                            if (tabelaSimbolos.jaContemAquelaVariavelGlobal(tabelaSimbolos.getLookahead())) {
                                if (!tabelaSimbolos.verificaGlobais(tabelaSimbolos.getLookahead())) {
                                    System.out.println("Linha " + tabelaSimbolos.getLinha() + ":" + " A Variavel " + tabelaSimbolos.getLookahead() + " já foi declarada entre as globais");
                                    ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada como global");
                                }
                            }
                        } else {
                            // Analisa se a variável ja foi declarada dentro do método. Se existe duas váriasveis com o mesmo nome.
                            if (!(tabelaSimbolos.verificaMetodoEMetodo(tabelaSimbolos.getLookahead(), metodo))) {
                                System.out.println("Linha " + tabelaSimbolos.getLinha() + ": " + "A variável " + tabelaSimbolos.getLookahead() + "foi declarada mais de uma vez no metodo " + metodo);
                                ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada");
                            }
                            // Verifica se a variavel, que esta declarada em um método, ja foi declarada como global.
                            if (!(tabelaSimbolos.verificaMetodoEGlobal(tabelaSimbolos.getLookahead()))) {
                                System.out.println("Linha " + tabelaSimbolos.getLinha() + ": " + "A variável " + tabelaSimbolos.getLookahead() + " declarada no método " + metodo + " também foi declarada como global");
                                ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada como global");
                            }
                        }
                        // Consome o identificador
                        tabelaSimbolos.soConsome();
                    }
                    if (tabelaSimbolos.getLookahead().equals("=")) {
                        if (!Utils.tipoValor(tabelaSimbolos.getLookahead()).equals(tipo)) {
                            System.out.println("Tipos não compatíveis");
                            ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Tipos não compatíveis");
                        }
                    }
                }
            }
        } else if (tabelaSimbolos.getLookahead().equals("[")) {
            if (!casoVetor()) {
                System.out.println("Deve ter um int entre [ ]");
                // Consome o que tem dentro do []
                tabelaSimbolos.soConsome();
                // Consome ]
                tabelaSimbolos.soConsome();
            }
        } else if (tabelaSimbolos.getLookahead().equals(",")) {
            while (tabelaSimbolos.getLookahead().equals(",")) {
                // Consume a vírgula
                tabelaSimbolos.soConsome();
                if (tabelaSimbolos.getTipo().equals("identificador")) {
                    if (metodo.equals("global")) {
                        if (tabelaSimbolos.jaContemAquelaVariavelGlobal(tabelaSimbolos.getLookahead())) {
                            if (!tabelaSimbolos.verificaGlobais(tabelaSimbolos.getLookahead())) {
                                System.out.println("Linha " + tabelaSimbolos.getLinha() + ":" + " A Variavel " + tabelaSimbolos.getLookahead() + " já foi declarada entre as globais");
                                ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada como global");
                            }
                        }
                    } else {
                        // Analisa se a variável ja foi declarada dentro do método. Se existe duas váriasveis com o mesmo nome.
                        if (!(tabelaSimbolos.verificaMetodoEMetodo(tabelaSimbolos.getLookahead(), metodo))) {
                            System.out.println("Linha " + tabelaSimbolos.getLinha() + ": " + "A variável " + tabelaSimbolos.getLookahead() + "foi declarada mais de uma vez no metodo " + metodo);
                            ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada");
                        }
                        // Verifica se a variavel, que esta declarada em um método, ja foi declarada como global.
                        if (!(tabelaSimbolos.verificaMetodoEGlobal(tabelaSimbolos.getLookahead()))) {
                            System.out.println("Linha " + tabelaSimbolos.getLinha() + ": " + "A variável " + tabelaSimbolos.getLookahead() + " declarada no método " + metodo + " também foi declarada como global");
                            ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada como global");
                        }
                    }
                    // Consome identificador
                    tabelaSimbolos.soConsome();
                    if (tabelaSimbolos.getLookahead().equals("[")) {
                        if (!casoVetor()) {
                            System.out.println("Deve ter um int entre [ ]");
                            // Consome o que tem dentro do []
                            tabelaSimbolos.soConsome();
                            // Consome ]
                            tabelaSimbolos.soConsome();
                        }
                    }
                } else if (tabelaSimbolos.getLookahead().equals("*")) {
                    // Consome o *
                    tabelaSimbolos.soConsome();
                    if (metodo.equals("global")) {
                        if (tabelaSimbolos.jaContemAquelaVariavelGlobal(tabelaSimbolos.getLookahead())) {
                            if (!tabelaSimbolos.verificaGlobais(tabelaSimbolos.getLookahead())) {
                                System.out.println("Linha " + tabelaSimbolos.getLinha() + ":" + " A Variavel " + tabelaSimbolos.getLookahead() + " já foi declarada entre as globais");
                                ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada como global");
                            }
                        }
                    } else {
                        // Analisa se a variável ja foi declarada dentro do método. Se existe duas váriasveis com o mesmo nome.
                        if (!(tabelaSimbolos.verificaMetodoEMetodo(tabelaSimbolos.getLookahead(), metodo))) {
                            System.out.println("Linha " + tabelaSimbolos.getLinha() + ": " + "A variável " + tabelaSimbolos.getLookahead() + "foi declarada mais de uma vez no metodo " + metodo);
                            ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada");
                        }
                        // Verifica se a variavel, que esta declarada em um método, ja foi declarada como global.
                        if (!(tabelaSimbolos.verificaMetodoEGlobal(tabelaSimbolos.getLookahead()))) {
                            System.out.println("Linha " + tabelaSimbolos.getLinha() + ": " + "A variável " + tabelaSimbolos.getLookahead() + " declarada no método " + metodo + " também foi declarada como global");
                            ErroSemantico.getInstance().getTabelaErros().add("Erro Semântico na linha " + tabelaSimbolos.getLinha() + ". Descrição: Variável já foi declarada como global");
                        }
                    }
                    // Consome o identificador
                    tabelaSimbolos.soConsome();
                }
                if (tabelaSimbolos.getLookahead().equals("=")) {
                    if (!Utils.tipoValor(tabelaSimbolos.getLookahead()).equals(tipo)) {
                        System.out.println("Tipos não compatíveis");
                    }
                }
            }
        }
    }
    // Consome ;
    tabelaSimbolos.soConsome();
}
