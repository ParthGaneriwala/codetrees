public void run() {
    String tstr = "et3hrthr34";
    peer.ThreadCounter tc;
    if (!peer.Config.ThreadStrTable.containsKey(tstr)) {
        tc = new peer.ThreadCounter();
        peer.Config.ThreadStrTable.put(tstr, tc);
    }
    tc = (ThreadCounter) peer.Config.ThreadStrTable.get(tstr);
    tc.conut++;
    System.out.println("����stopTimmer");
    while (run) {
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        if (httpProcessorTable.size() == 0) {
            timmerCount++;
        } else {
            timmerCount = 0;
        }
        // System.out.println("EEEEE "+timmerCount+" "+peer.Config.httpProcessorGroupCloseDelay/1000);
        if (timmerCount > peer.Config.httpProcessorGroupCloseDelay / 1000) {
            run = false;
            mainThread.interrupt();
            dbNodeListSynThread.stopSyn();
            searchThread.stopSearch();
            peer.Config.pieceTempGroupMange.removePieceTempGroup(mdb);
            peer.Config.httpProcessorMange.removeHttpProcessorGroup(mdb);
            ctg.stop();
            statistThread.interrupt();
            // ֹͣ�������ڼ��صķ�Ƭ
            Iterator<Integer> it = pieceRequestTable.keySet().iterator();
            while (it.hasNext() & run) {
                int pieceNum = it.next();
                PieceRequest p = pieceRequestTable.get(pieceNum);
                if (p.getFixState() == PieceRequest.FixState_FixIng) {
                    p.stopFix(false);
                }
            }
        }
    }
    System.out.println("��ֹstopTimmer");
    tc.conut--;
}
