// 
// GUI Initialization
// 
private JPanel createSourcePathPanel() {
    JPanel sourcePathPanel = new JPanel(new BorderLayout(6, 6));
    sourcePathPanel.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createTitledBorder(jEdit.getProperty("options.OpenIt.SourcePathOptionPane.SourcePath.title")), BorderFactory.createEmptyBorder(6, 6, 6, 6)));
    // top panel will contain a JList that holds a list of source paths
    JPanel topPanel = new JPanel(new BorderLayout());
    mGetRootFromProjectViewer = new JCheckBox(jEdit.getProperty("options.OpenIt.SourcePathOptionPane.mGetRootFromProjectViewer.label"));
    mGetRootFromProjectViewer.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            boolean selected = mGetRootFromProjectViewer.isSelected();
            jEdit.setBooleanProperty(OpenItProperties.IMPORT_FILES_FROM_CURRENT_PROJECT, selected);
            toggleClassPathChoiceMethod(!selected);
        }
    });
    topPanel.add(mGetRootFromProjectViewer, BorderLayout.NORTH);
    JPanel box = new JPanel(new BorderLayout());
    box.add(mInstructionLabel = new JLabel(jEdit.getProperty("options.OpenIt.SourcePathOptionPane.SourcePath.instruction.label")), BorderLayout.NORTH);
    mSourcePathList = new SourcePathList();
    mSourcePathList.addPathElements(jEdit.getProperty(OpenItProperties.SOURCE_PATH_STRING, ""));
    box.add(new JScrollPane(mSourcePathList), BorderLayout.CENTER);
    topPanel.add(box, BorderLayout.CENTER);
    // bottom panel - add/remove buttons
    JPanel bottomPanel = new JPanel(new BorderLayout());
    JPanel buttonPanel = new JPanel(new GridLayout(1, 2, 5, 5));
    mAddButton = new JButton(jEdit.getProperty("options.OpenIt.SourcePathOptionPane.SourcePath.AddButton.label"));
    mAddButton.addActionListener(this);
    mRemoveButton = new JButton(jEdit.getProperty("options.OpenIt.SourcePathOptionPane.SourcePath.RemoveButton.label"));
    mRemoveButton.addActionListener(this);
    // initially not enabled as nothing selected
    mRemoveButton.setEnabled(false);
    buttonPanel.add(mAddButton);
    buttonPanel.add(mRemoveButton);
    bottomPanel.add(buttonPanel, BorderLayout.CENTER);
    // add to top level sourcepathpanel
    sourcePathPanel.add(topPanel, BorderLayout.CENTER);
    sourcePathPanel.add(bottomPanel, BorderLayout.SOUTH);
    if (isProjectViewerInstalled()) {
        if (jEdit.getBooleanProperty(OpenItProperties.IMPORT_FILES_FROM_CURRENT_PROJECT)) {
            mGetRootFromProjectViewer.setSelected(true);
            toggleClassPathChoiceMethod(false);
        } else {
            mGetRootFromProjectViewer.setSelected(false);
        }
    } else {
        mGetRootFromProjectViewer.setSelected(false);
        mGetRootFromProjectViewer.setEnabled(false);
    }
    // add a seleciton listener to the JList, so we can make sure the remove
    // button is in correct state
    mSourcePathList.addListSelectionListener(new ListSelectionListener() {

        public void valueChanged(ListSelectionEvent e) {
            mRemoveButton.setEnabled(mSourcePathList.getSelectedValue() != null);
        }
    });
    return sourcePathPanel;
}
