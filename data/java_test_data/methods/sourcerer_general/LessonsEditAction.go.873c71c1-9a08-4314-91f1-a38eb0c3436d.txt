@Override
protected String go() throws Exception {
    lesson.setLessondate(datestart + " " + hmstart);
    lesson.setLessonend(dateend + " " + hmend);
    // lesson.setOnlinefile(null);
    if (lesson.getOnlinefile() == null || lesson.getOnlinefile().trim().equals("")) {
        lesson.setOnlinefile(null);
        lesson.setOnlineorlocal("local");
        lesson.setShared("2");
    } else {
        lesson.setOnlineorlocal("all");
        lesson.setShared(com.changpeng.lessons.util.LessonsUtil.list2str(sharedlist));
    }
    List oldlist = (List) get("sharedlist");
    // 以前共享不为空但现在为空，则取消他的共享
    if ((oldlist != null && oldlist.size() != 0 && lesson.getShared().equals("0"))) {
        lesson.setShared("2");
    }
    String attach = lesson.getAttach();
    String extendPath = "/uploads/";
    String toPath = ServletActionContext.getServletContext().getRealPath("") + extendPath;
    // 创建目录
    FileUtils.forceMkdir(new File(toPath));
    if (attach == null)
        attach = "";
    int index = 0;
    if (fileName != null) {
        for (String str : fileName) {
            if (str != null && !"".equals(str)) {
                String name = new java.text.SimpleDateFormat("yyyyMMddHHmmss").format(new java.util.Date()) + index;
                String ext = getExtention(str);
                String filename = name + ext;
                try {
                    File dest = new File(toPath + filename);
                    // 移动文件
                    FileUtils.copyFile(file[index], dest);
                } catch (IOException e) {
                    message = "上传培训资料错误：" + e.getMessage();
                    return "message";
                }
                attach += "," + filename;
            }
            index++;
        }
    }
    int i = 0;
    String[] file = attach.split(",");
    for (String str : file) {
        if (str != null && !"".equals(str.trim()))
            i++;
    }
    if (i > 5) {
        message = "对不起，您最多可上传5份附件";
        return "message";
    }
    lesson.setAttach(attach);
    service.update(lesson);
    if (lesson.getOnlineorlocal().equals("all")) {
        Lessonsoflog log = new Lessonsoflog();
        log.setLessonid(lesson.getLessonid());
        log.setLessonidOfserver(lesson.getLessonidOfserver());
        // 修改
        short flag = 2;
        log.setFlag((Short.valueOf(flag)));
        service.save(log);
    }
    this.nextPage = "lessonsList.pl";
    this.message = "课程信息修改成功";
    return SUCCESS;
}
