public String doView(RenderRequest request, RenderResponse response) throws Exception {
    String defaultView = VIEW_PAGE;
    request.setAttribute(TITLE, request.getPreferences().getValue(PREF_TITLE, null));
    int limit = Integer.parseInt(request.getPreferences().getValue(PREF_LIMIT, "-1"));
    String daysLimit = request.getPreferences().getValue(PREF_DAYS_LIMIT, "0");
    String projectCategoryName = request.getPreferences().getValue(PREF_CATEGORY, null);
    Connection db = PortalUtils.useConnection(request);
    Project project = PortalUtils.findProject(request);
    UserContributionLogList thisUserContributionLogList = new UserContributionLogList();
    if (!"0".equals(daysLimit)) {
        thisUserContributionLogList.setSinceContributionDate(new Timestamp(System.currentTimeMillis() - 1000L * 60 * 60 * 24 * Long.parseLong(daysLimit)));
    }
    thisUserContributionLogList.setEnabledUsers(Constants.TRUE);
    if (project != null && project.getId() != -1) {
        // determine if the user has access to members of this profile
        User user = getUser(request);
        if (!ProjectUtils.hasAccess(project.getId(), user, "project-team-view")) {
            return null;
        }
        thisUserContributionLogList.setProjectId(project.getId());
    } else {
        thisUserContributionLogList.setInstanceId(PortalUtils.getInstance(request).getId());
        int projectCategoryId = -1;
        if (StringUtils.hasText(projectCategoryName)) {
            ProjectCategoryList projectCategoryList = (ProjectCategoryList) request.getAttribute(Constants.REQUEST_TAB_CATEGORY_LIST);
            if (projectCategoryList.size() > 0) {
                projectCategoryId = projectCategoryList.getIdFromValue(projectCategoryName);
            }
            thisUserContributionLogList.setProjectCategoryId(projectCategoryId);
        }
    }
    thisUserContributionLogList.buildTopUsers(db, limit);
    if (thisUserContributionLogList.size() > 0) {
        // Convert the user ids and points into a user list
        ArrayList<User> topContributorList = prepareSortedList(thisUserContributionLogList);
        request.setAttribute(TOP_CONTRIBUTOR_LIST, topContributorList);
        return defaultView;
    } else {
        return null;
    }
}
