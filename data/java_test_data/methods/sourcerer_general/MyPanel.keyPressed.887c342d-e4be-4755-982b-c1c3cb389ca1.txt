public void keyPressed(KeyEvent e) {
    if (active != -1) {
        if (e.getKeyCode() == KeyEvent.VK_UP) {
            if (ctrl) {
                reshapeSquare(new Point(0, 1));
            }
            moveSquare(new Point(0, -1));
        }
        if (e.getKeyCode() == KeyEvent.VK_DOWN) {
            if (ctrl) {
                reshapeSquare(new Point(0, -1));
            }
            moveSquare(new Point(0, 1));
        }
        if (e.getKeyCode() == KeyEvent.VK_LEFT) {
            if (ctrl) {
                reshapeSquare(new Point(1, 0));
            }
            moveSquare(new Point(-1, 0));
        }
        if (e.getKeyCode() == KeyEvent.VK_RIGHT) {
            if (ctrl) {
                reshapeSquare(new Point(-1, 0));
            }
            moveSquare(new Point(1, 0));
        }
        if (e.getKeyCode() == KeyEvent.VK_DELETE) {
            Rectangles.remove(active);
            Colors.remove(active);
            repaint();
        }
        if (e.getKeyCode() == KeyEvent.VK_C) {
            if (ctrl) {
                ww = Rectangles.get(active).width;
                hh = Rectangles.get(active).height;
                colorCopy = Colors.get(active);
            } else {
                MyCC = new MyColorChooser(this);
            }
        }
    }
    if (e.getKeyCode() == KeyEvent.VK_V && ctrl && inUse != null) {
        rectCopy = new MyRectangle(new Point(inUse.x, inUse.y), new Point(inUse.x + ww, inUse.y + hh));
        Rectangles.add(rectCopy);
        Colors.add(colorCopy);
        repaint();
    }
    if (e.getKeyCode() == KeyEvent.VK_N && ctrl && inUse != null) {
        newSquare();
    }
    if (e.getKeyCode() == KeyEvent.VK_E && ctrl) {
        Xport = new Exporter(this);
    }
    if (e.getKeyCode() == KeyEvent.VK_CONTROL) {
        ctrl = true;
    }
}
