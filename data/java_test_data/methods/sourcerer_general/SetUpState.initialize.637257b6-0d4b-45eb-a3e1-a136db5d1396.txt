@Override
public void initialize() {
    super.initialize();
    Application.aClock.start();
    Application.aClock.setRunning(true);
    switch(Application.aClient.getID()) {
        case 0:
            Application.camera.setPosition(0, 0);
            break;
        case 1:
            Application.camera.setPosition((Application.MAP_SIZE_X - Application.TILE_DISPLAY) * Tile.SIZE, (Application.MAP_SIZE_Y - Application.TILE_DISPLAY) * Tile.SIZE);
            break;
        case 2:
            Application.camera.setPosition(0, (Application.MAP_SIZE_Y - Application.TILE_DISPLAY) * Tile.SIZE);
            break;
        case 3:
            Application.camera.setPosition((Application.MAP_SIZE_X - Application.TILE_DISPLAY) * Tile.SIZE, 0);
            break;
        case 4:
            Application.camera.setPosition(0, (Application.MAP_SIZE_Y / 2 - Application.TILE_DISPLAY / 2) * Tile.SIZE);
            break;
        case 5:
            Application.camera.setPosition((Application.MAP_SIZE_X - Application.TILE_DISPLAY) * Tile.SIZE, (Application.MAP_SIZE_Y / 2 - Application.TILE_DISPLAY / 2) * Tile.SIZE);
            break;
        case 6:
            Application.camera.setPosition((Application.MAP_SIZE_X / 2 - Application.TILE_DISPLAY / 2) * Tile.SIZE, 0);
            break;
        case 7:
            Application.camera.setPosition((Application.MAP_SIZE_X / 2 - Application.TILE_DISPLAY / 2) * Tile.SIZE, (Application.MAP_SIZE_Y - Application.TILE_DISPLAY) * Tile.SIZE);
            break;
        default:
            Application.camera.setPosition((Application.MAP_SIZE_X / 2 - Application.TILE_DISPLAY / 2) * Tile.SIZE, (Application.MAP_SIZE_Y / 2 - Application.TILE_DISPLAY / 2) * Tile.SIZE);
            break;
    }
    Coordinate bSize = new Coordinate(((Application.WIN_SIZE_X - UIStartX) - 3 * spacing) / 2, 0);
    Coordinate longSize = new Coordinate((Application.WIN_SIZE_X - UIStartX) - 2 * spacing, 0);
    aReadyButton = new GraphicalButton("Ready!", new Coordinate(UIStartX + spacing, 10), longSize);
    aReadyButton.setBgColor(new MinuetoColor(0, 200, 0));
    addButton(aReadyButton);
    aMapBackground = new BackGround(Application.aMapBackground);
    Application.aClient.send(PacketType.MAP, 0);
    aBackground = new Panel(new Coordinate(UIStartX, 0), new Coordinate(Application.WIN_SIZE_X - UIStartX, Application.WIN_SIZE_Y));
    aBackground.setBgColor(Application.aTeamColor[aMap.getLocalPlayer().getID()]);
    aBackground.setBorderSize(0);
    aBattleShipButton = new BGGraphicalButton(BattleShip.NAME, new Coordinate(UIStartX + bSize.getX() + 2 * spacing, 50), bSize);
    aCarrierButton = new BGGraphicalButton(Carrier.NAME, new Coordinate(UIStartX + spacing, 50), bSize);
    aDestroyerButton = new BGGraphicalButton(Destroyer.NAME, new Coordinate(UIStartX + bSize.getX() + 2 * spacing, 80), bSize);
    aScoutButton = new BGGraphicalButton(Scout.NAME, new Coordinate(UIStartX + spacing, 80), bSize);
    aFrigateButton = new BGGraphicalButton(Frigate.NAME, new Coordinate(UIStartX + bSize.getX() + 2 * spacing, 110), bSize);
    aTorpedoShipButton = new BGGraphicalButton(TorpedoShip.NAME, new Coordinate(UIStartX + spacing, 110), bSize);
    aRemoveButton = new BGGraphicalButton("Remove Plankton", new Coordinate(UIStartX + spacing, 140), longSize);
    aShipButtonGroup = new ButtonGroup();
    aShipButtonGroup.add(aBattleShipButton);
    aShipButtonGroup.add(aCarrierButton);
    aShipButtonGroup.add(aDestroyerButton);
    aShipButtonGroup.add(aScoutButton);
    aShipButtonGroup.add(aFrigateButton);
    aShipButtonGroup.add(aTorpedoShipButton);
    aShipButtonGroup.add(aRemoveButton);
    aBattleShipButton.setBgColor(Application.GUIColor);
    aCarrierButton.setBgColor(Application.GUIColor);
    aDestroyerButton.setBgColor(Application.GUIColor);
    aScoutButton.setBgColor(Application.GUIColor);
    aFrigateButton.setBgColor(Application.GUIColor);
    aTorpedoShipButton.setBgColor(Application.GUIColor);
    aRemoveButton.setBgColor(Application.GUIColor);
    MinuetoColor aSelectColor = new MinuetoColor(255, 140, 0);
    aBattleShipButton.setBgColorPress(aSelectColor);
    aCarrierButton.setBgColorPress(aSelectColor);
    aDestroyerButton.setBgColorPress(aSelectColor);
    aScoutButton.setBgColorPress(aSelectColor);
    aFrigateButton.setBgColorPress(aSelectColor);
    aTorpedoShipButton.setBgColorPress(aSelectColor);
    aButtonGroups.add(aShipButtonGroup);
    aInfo = new ShipInfo(new Coordinate(UIStartX + spacing, 180), new Coordinate((Application.WIN_SIZE_X - UIStartX) - 2 * spacing, 120));
    aTabbedPanel = new TabbedPanel(new Coordinate(UIStartX + spacing, 340), new Coordinate((Application.WIN_SIZE_X - UIStartX) - 2 * spacing, 252));
    aTabbedPanel.addTab("Poison");
    aTabbedPanel.addTab("Acid");
    aTabbedPanel.addTab("Speed");
    aTabbedPanel.addTab("Senses");
    aWeaponDisplay = new WeaponDisplay(new Coordinate(UIStartX + spacing, 600), new Coordinate((Application.WIN_SIZE_X - UIStartX) - 2 * spacing, 160), null, aMap.getLocalPlayer().getID());
    // Set up the money initially
    changeMoney(0);
    // Add everything that is to be drawn
    aToDraw.add(aBackground);
    aToDraw.add(aInfo);
    aToDraw.add(aTabbedPanel);
    aToDraw.add(aWeaponDisplay);
    Application.aMainPlayer.stopMusic();
    Application.aMainPlayer.setSong(2);
    Application.aMainPlayer.loopMusic();
}
