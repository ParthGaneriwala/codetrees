protected void onRender(Element parent, int index) {
    super.onRender(parent, index);
    Condition cond = new Condition();
    cond.setField(IComment.PARENT);
    cond.setOperator(Condition.EQUALS);
    cond.setValue(null);
    criteria.addCondition(cond);
    BasePagingLoader loader = new PagingListService().getLoader(ModelNames.COMMENT, criteria);
    loader.load(0, 10);
    final ListStore<BeanObject> store = new ListStore<BeanObject>(loader);
    toolBar = new PagingToolBar(10);
    toolBar.bind(loader);
    List<ColumnConfig> columns = new ArrayList<ColumnConfig>();
    final CheckBoxSelectionModel<BeanObject> smRowSelection = new CheckBoxSelectionModel<BeanObject>();
    columns.add(smRowSelection.getColumn());
    columns.add(new ColumnConfig(IComment.ID, "编号", 80));
    columns.add(new ColumnConfig(IComment.USERNAME, "用户名", 100));
    ColumnConfig commentType = new ColumnConfig(IComment.COMMENTTYPE, "类型", 60);
    columns.add(commentType);
    columns.add(new ColumnConfig(IComment.IDVALUE, "评论对象", 60));
    columns.add(new ColumnConfig(IComment.IPADDRESS, "IP地址", 100));
    columns.add(new ColumnConfig(IComment.ADDTIME, "评论时间", 150));
    ColumnConfig status = new ColumnConfig(IComment.STATUS, "状态", 60);
    columns.add(status);
    ColumnConfig actcol = new ColumnConfig("Action", Resources.constants.GoodsList_action(), 65);
    columns.add(actcol);
    ColumnModel cm = new ColumnModel(columns);
    Grid<BeanObject> grid = new EditorGrid<BeanObject>(store, cm);
    grid.setLoadMask(true);
    grid.setBorders(true);
    grid.setSelectionModel(smRowSelection);
    // grid.setAutoExpandColumn("forum");
    IdToStringRenderer commentTypeCell = new IdToStringRenderer(grid);
    commentTypeCell.addIdInfo(new IdToStringRenderer.IdInfo("0", "商品"));
    commentTypeCell.addIdInfo(new IdToStringRenderer.IdInfo("1", "文章"));
    commentType.setRenderer(commentTypeCell);
    IdToStringRenderer statusCell = new IdToStringRenderer(grid);
    statusCell.addIdInfo(new IdToStringRenderer.IdInfo("false", "隐藏"));
    statusCell.addIdInfo(new IdToStringRenderer.IdInfo("true", "显示"));
    status.setRenderer(statusCell);
    ActionCellRenderer render = new ActionCellRenderer(grid);
    ActionCellRenderer.ActionInfo act = new ActionCellRenderer.ActionInfo();
    act.setImage("icon_edit.gif");
    act.setAction("checkCommentAction($id)");
    act.setTooltip("查看详情");
    render.addAction(act);
    act = new ActionCellRenderer.ActionInfo();
    act.setImage("icon_trash.gif");
    act.setAction("deleteCommentAction($id)");
    act.setTooltip("删除");
    render.addAction(act);
    actcol.setRenderer(render);
    HorizontalPanel header = new HorizontalPanel();
    header.add(Resources.images.icon_search().createImage());
    header.add(new Label("输入评论内容"));
    header.add(commentContent);
    header.add(btnFind);
    add(header);
    btnFind.addSelectionListener(new SelectionListener<ButtonEvent>() {

        public void componentSelected(ButtonEvent ce) {
            search();
        }
    });
    ContentPanel panel = new ContentPanel();
    panel.setFrame(true);
    panel.setCollapsible(true);
    panel.setAnimCollapse(false);
    panel.setButtonAlign(HorizontalAlignment.CENTER);
    panel.setIconStyle("icon-table");
    // panel.setHeading("Paging Grid");
    panel.setLayout(new FitLayout());
    panel.add(grid);
    panel.setSize(800, 350);
    panel.setBottomComponent(toolBar);
    panel.setButtonAlign(HorizontalAlignment.CENTER);
    add(panel);
    // 添加下面一行的操作BUTTON 及 listener  包括  删除评论 允许显示 禁止显示
    lstAction.addItem("请选择...", "---");
    lstAction.addItem("删除评论", "delete");
    lstAction.addItem("允许显示", "agree");
    lstAction.addItem("禁止显示", "forbid");
    btnAct.addSelectionListener(new SelectionListener<ButtonEvent>() {

        public void componentSelected(ButtonEvent ce) {
            int index = lstAction.getSelectedIndex();
            if (index == 0) {
                // it is prompt
                return;
            }
            String sel = lstAction.getValue(index);
            final List<BeanObject> items = smRowSelection.getSelectedItems();
            executeAction(items, sel);
        }
    });
    HorizontalPanel footer = new HorizontalPanel();
    footer.add(lstAction);
    footer.add(btnAct);
    add(footer);
}
