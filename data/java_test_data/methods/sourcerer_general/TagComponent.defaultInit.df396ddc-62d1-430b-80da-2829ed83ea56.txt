protected void defaultInit() {
    super.defaultInit();
    ComponentUnitsField units = new ComponentUnitsField(this, 0);
    units.setToolTipText("The unit of measurement for this stream component.");
    add(units, UNITS_INDEX);
    MaterialField material = new MaterialField(this, 0);
    material.setToolTipText("The material of this stream component.");
    add(material, MATERIAL_INDEX);
    HeatCapacityField heatCapField = new HeatCapacityField(this, DEFAULT_QTY_VALUE);
    heatCapField.setToolTipText("The heat capacity of the stream component.");
    add(heatCapField, HEAT_CAPACITY_INDEX);
    HeatUnitsField heatCapUnits = new HeatUnitsField(this, 0);
    heatCapUnits.setToolTipText("The units for the heat capactiy.");
    heatCapUnits.addOption(ModelStringLiterals.Percantage, 0);
    heatCapUnits.setSelection(0);
    add(heatCapUnits, HEAT_CAPACITY_UNITS_INDEX);
    LatentHeatCapacityField latentHeatCapField = new LatentHeatCapacityField(this, DEFAULT_QTY_VALUE);
    latentHeatCapField.setToolTipText("The latent heat capacity of the stream component.");
    add(latentHeatCapField, LATENT_HEAT_CAPACITY_INDEX);
    HeatUnitsField latentHeatCapUnits = new HeatUnitsField(this, 0);
    latentHeatCapUnits.setToolTipText("The units for the latent heat capactiy.");
    latentHeatCapUnits.addOption(ModelStringLiterals.Percantage, 0);
    latentHeatCapUnits.setSelection(0);
    add(latentHeatCapUnits, LATENT_HEAT_CAPACITY_UNITS_INDEX);
    if (material instanceof IXmlOperations) {
        material.toXml();
    }
}
