public void buildRow(final Object item, final RepeaterRow row, final int index) {
    HorizontalPanel horizontalPanel = new HorizontalPanel();
    VerticalPanel verticalPanel = new VerticalPanel();
    verticalPanel.addStyleClass("vertical-panel");
    final SubmitLink moveUp = new SubmitLink("up");
    final SubmitLink moveDown = new SubmitLink("down");
    verticalPanel.add(moveUp);
    verticalPanel.add(moveDown);
    Form form = new Form("form");
    row.add(form);
    FieldSet fieldSet = new FieldSet("customer");
    form.add(horizontalPanel);
    horizontalPanel.add(fieldSet);
    horizontalPanel.add(verticalPanel);
    fieldSet.add(new TextField("name")).setRequired(true);
    Submit save = new Submit("save");
    save.setActionListener(new ActionListener() {

        public boolean onAction(Control source) {
            return onSubmit(item, index);
        }
    });
    fieldSet.add(save);
    Submit insert = new Submit("insert");
    insert.setActionListener(new ActionListener() {

        public boolean onAction(Control source) {
            Customer customer = new Customer();
            repeater.insertItem(customer, index);
            return true;
        }
    });
    fieldSet.add(insert);
    Submit delete = new Submit("delete");
    delete.setActionListener(new ActionListener() {

        public boolean onAction(Control source) {
            repeater.removeItem(item);
            return true;
        }
    });
    fieldSet.add(delete);
    moveUp.setActionListener(new ActionListener() {

        public boolean onAction(Control source) {
            repeater.moveUp(item);
            return true;
        }
    });
    moveDown.setActionListener(new ActionListener() {

        public boolean onAction(Control source) {
            repeater.moveDown(item);
            return true;
        }
    });
    form.copyFrom(item);
}
