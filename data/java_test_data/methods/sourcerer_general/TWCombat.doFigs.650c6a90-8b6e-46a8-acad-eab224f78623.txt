// BUG: -> fighter vector gets staggered from adds/removes,
public int doFigs(int s, int e, StringBuffer battlelog) {
    // boolean dolog = false;
    int shipdam = 0;
    // launch figs
    if (bayfigs[s].size() > 0 && ++figscram[s] > shpclass[s].IntRow[ShipTab.FIGRATE]) {
        figscram[s] = 0;
        Vector<?> TmpQ = (Vector<?>) bayfigs[s].clone();
        int b = ship[s].IntRow[Ships.BAYS];
        if (b > TmpQ.size())
            b = TmpQ.size();
        for (int f = 0; f < b; f++) {
            FigUnit FU = (FigUnit) TmpQ.elementAt(f);
            FU.position = shippos[s];
            figs[s].add(FU);
            bayfigs[s].remove(FU);
        }
    }
    // attack ship/figs
    for (int f = 0; f < figs[s].size(); f++) {
        FigUnit FU = figs[s].elementAt(f);
        if (Math.abs(FU.position - shippos[e]) < FU.range) {
            FU.position += (MiFigSpd * shipdir(s));
            int damage = MiscUtil.randInt(FU.shipdam);
            shipdam += damage;
        } else {
            // engage enemy figs at full speed
            FU.position += (FU.speed * shipdir(s));
            for (int f2 = 0; f2 < figs[e].size(); f2++) {
                FigUnit FU2 = figs[e].elementAt(f2);
                if (Math.abs(FU.position - FU2.position) < FU.range) {
                    int hitprob = 100;
                    if (e == DEF)
                        hitprob = 125;
                    if (MiscUtil.randInt(hitprob) < FU.dogfig) {
                        figs[e].remove(FU2);
                        String battlestr = SubTypes[FU2.type] + " fig(s) shot down by " + ship[s].Row[Ships.NAME] + "'s " + SubTypes[FU.type] + " fig(s)." + CR;
                        MiscUtil.mergeStr(battlestr, battlelog, CR);
                    } else
                        break;
                }
            }
        }
        // return figs
        if ((FU.position - shippos[e]) * shipdir(s) > 0) {
            bayfigs[s].add(FU);
            figs[s].remove(FU);
        }
    }
    return shipdam;
}
