public static Navigation parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception {
    Navigation object = new Navigation();
    int event;
    java.lang.String nillableValue = null;
    java.lang.String prefix = "";
    java.lang.String namespaceuri = "";
    try {
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance", "type") != null) {
            java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance", "type");
            if (fullTypeName != null) {
                java.lang.String nsPrefix = null;
                if (fullTypeName.indexOf(":") > -1) {
                    nsPrefix = fullTypeName.substring(0, fullTypeName.indexOf(":"));
                }
                nsPrefix = nsPrefix == null ? "" : nsPrefix;
                java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":") + 1);
                if (!"Navigation".equals(type)) {
                    // find namespace for the prefix
                    java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                    return (Navigation) com.jcommerce.ws.server.ExtensionMapper.getTypeObject(nsUri, type, reader);
                }
            }
        }
        // Note all attributes that were handled. Used to differ normal attributes
        // from anyAttributes.
        java.util.Vector handledAttributes = new java.util.Vector();
        reader.next();
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "id").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setId(org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
            reader.next();
        } else // End of if for expected property start element
        {
            object.setId(java.lang.Integer.MIN_VALUE);
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "categoryType").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setCategoryType(org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
            reader.next();
        } else // End of if for expected property start element
        {
            object.setCategoryType(java.lang.Integer.MIN_VALUE);
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "categoryId").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setCategoryId(org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
            reader.next();
        } else // End of if for expected property start element
        {
            object.setCategoryId(java.lang.Integer.MIN_VALUE);
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "name").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setName(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
            reader.next();
        } else // End of if for expected property start element
        {
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "show").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setShow(org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
            reader.next();
        } else // End of if for expected property start element
        {
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "viewOrder").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setViewOrder(org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
            reader.next();
        } else // End of if for expected property start element
        {
            object.setViewOrder(java.lang.Integer.MIN_VALUE);
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "openNew").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setOpenNew(org.apache.axis2.databinding.utils.ConverterUtil.convertToBoolean(content));
            reader.next();
        } else // End of if for expected property start element
        {
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "url").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setUrl(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
            reader.next();
        } else // End of if for expected property start element
        {
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement() && new javax.xml.namespace.QName("http://ws.jcommerce.com/", "type").equals(reader.getName())) {
            java.lang.String content = reader.getElementText();
            object.setType(org.apache.axis2.databinding.utils.ConverterUtil.convertToInt(content));
            reader.next();
        } else // End of if for expected property start element
        {
            object.setType(java.lang.Integer.MIN_VALUE);
        }
        while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
        if (reader.isStartElement())
            // A start element we are not expecting indicates a trailing invalid property
            throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
    } catch (javax.xml.stream.XMLStreamException e) {
        throw new java.lang.Exception(e);
    }
    return object;
}
