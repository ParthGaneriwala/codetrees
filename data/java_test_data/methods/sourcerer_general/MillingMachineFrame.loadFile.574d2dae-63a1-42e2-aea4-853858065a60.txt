protected void loadFile() {
    // Prompts for a file to load and reads it into the execution buffer.
    FileLoadDialog dialog = new FileLoadDialog(this);
    JobProperties props = dialog.getProperties();
    try {
        props.setFilename(defaultDirectory.getCanonicalPath());
        // updates the display from the current properties
        dialog.getProperties();
    } catch (IOException e1) {
        log.error("Cannot set default directory", e1);
    }
    dialog.setVisible(true);
    if (dialog.getExitAction() == FileLoadDialog.ACTION_CANCEL) {
        return;
    }
    File selected = new File(props.getFilename());
    File temp = selected.getParentFile();
    if (temp != null) {
        defaultDirectory = temp;
    }
    // read the file
    log.debug("Loading file " + selected.getAbsolutePath());
    actionsList2.saveUndoBuffer();
    // Load the file instructions into an array
    if (props.isReplace()) {
        actionsList2.clear();
    }
    try {
        int count = 0;
        switch(props.getFileFormat()) {
            case JobProperties.RML_FORMAT:
                count = loadRMLFile(selected, props);
                break;
            case JobProperties.NC_FORMAT:
                count = loadNCFile(selected, props);
                break;
            case JobProperties.RS274X_FORMAT:
                count = loadGerberFile(selected, props);
                break;
        }
        log.info("Loaded " + count + " actions");
        actionsList2.drawAll();
        startStopAction.setEnabled(true);
    } catch (Exception e) {
        log.error("in MillingMachineFrame.loadFile", e);
        showExceptionDialog(e);
    }
}
