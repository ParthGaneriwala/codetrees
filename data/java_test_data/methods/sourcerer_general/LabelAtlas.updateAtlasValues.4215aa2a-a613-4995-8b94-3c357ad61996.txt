@Override
public void updateAtlasValues() {
    int n = string.length();
    CCQuad2 texCoord = new CCQuad2();
    CCQuad3 vertex = new CCQuad3();
    String s = string;
    int xpos = 0;
    int ypos = 0;
    int numLines = 1;
    int maxLineWidth = 0;
    for (int i = 0; i < n; i++) {
        // we negate numLines
        if (s.charAt(i) == '\n') {
            // Keep track of the longest line
            if (xpos > maxLineWidth) {
                maxLineWidth = xpos;
            }
            xpos = 0;
            ypos = -numLines * itemHeight;
            numLines++;
        } else {
            int a = s.charAt(i) - mapStartChar;
            float row = (a % itemsPerRow) * texStepX;
            float col = (a / itemsPerRow) * texStepY;
            // A - x
            texCoord.bl_x = row;
            // A - y
            texCoord.bl_y = col;
            // B - x
            texCoord.br_x = row + texStepX;
            // B - y
            texCoord.br_y = col;
            // C - x
            texCoord.tl_x = row;
            // C - y
            texCoord.tl_y = col + texStepY;
            // D - x
            texCoord.tr_x = row + texStepX;
            // D - y
            texCoord.tr_y = col + texStepY;
            // A - x
            vertex.bl_x = xpos * itemWidth;
            // A - y
            vertex.bl_y = ypos;
            // A - z
            vertex.bl_z = 0;
            // B - x
            vertex.br_x = xpos * itemWidth + itemWidth;
            // B - y
            vertex.br_y = ypos;
            // B - z
            vertex.br_z = 0;
            // C - x
            vertex.tl_x = xpos * itemWidth;
            // C - y
            vertex.tl_y = ypos + itemHeight;
            // C - z
            vertex.tl_z = 0;
            // D - x
            vertex.tr_x = xpos * itemWidth + itemWidth;
            // D - y
            vertex.tr_y = ypos + itemHeight;
            // D - z
            vertex.tr_z = 0;
            textureAtlas_.updateQuad(texCoord, vertex, i);
            xpos++;
        }
    }
    int numCharsWidth = n;
    // If this is multi-line, use the max line width instead of the total string length
    if (numLines > 1) {
        numCharsWidth = maxLineWidth;
    }
    setContentSize(itemWidth * numCharsWidth, itemHeight * numLines);
}
