public static HashMap<Integer, String> getEntityList(String content, String entitytag, String text) {
    HashMap<Integer, String> entities = new HashMap<Integer, String>();
    String[] lines = content.split("\n");
    String[] lins = text.split("\n");
    int start = 0;
    for (int i = 0; i < lines.length; i++) {
        String pre = "0";
        String out = "";
        String tag = "";
        String pun = "";
        String prepun = "";
        String line = lines[i];
        int lstart = 0;
        int cur = start;
        if (i > 0)
            start += lins[i - 1].length() + 1;
        int prepos = 0;
        // System.out.println("====>"+content.substring(start));
        int ipos = 0;
        while (line.contains(" ")) {
            String t = line.substring(0, line.indexOf(" "));
            String[] ts = t.split("/");
            String word = ts[0];
            ipos += word.length() + 1;
            // System.out.println(t+"\t"+cur+"\t"+ipos);
            if (ts.length >= 2) {
                tag = ts[1].replaceAll("[\\p{Punct}]", "").trim();
                pun = ts[1].substring(tag.length());
                if (!pre.equals(tag)) {
                    if (!pre.equals("O")) {
                        if (// &&!out.contains(""))
                        pre.equals(entitytag)) {
                            int pos = text.indexOf(out, ipos);
                            if (pos == -1)
                                pos = text.indexOf(out);
                            entities.put(pos, out + "\t" + entitytag);
                            ipos += out.length() + 1;
                            System.out.println("==" + pre + "\t" + out + "\t" + ipos);
                        }
                    }
                    pre = tag;
                    out = ts[0];
                    cur = lstart;
                } else {
                    out += prepun + " " + ts[0];
                }
            }
            prepun = pun;
            line = line.substring(line.indexOf(" ") + 1);
            lstart += word.length() + pun.length() + 1;
        // System.out.println(ipos+"\t"+out);
        // System.out.println(word+"---"+tag+"---"+text.substring(lstart));
        }
        String[] ts = line.split("/");
        if (ts.length >= 2) {
            tag = ts[1].replaceAll("[\\p{Punct}]", "").trim();
            pun = ts[1].substring(tag.length());
            if (!pre.equals(tag)) {
                if (!pre.equals("O")) {
                    if (// &&!out.contains(""))
                    pre.equals(entitytag)) {
                        int pos = text.indexOf(out);
                        entities.put(pos, out + "\t" + entitytag);
                        System.out.println(pre + "\t" + out + "\t" + ipos);
                        ipos += out.length() + 1;
                    }
                }
                pre = tag;
                out = ts[0] + " ";
                cur = lstart;
            } else {
                out += prepun + " " + ts[0];
            }
        }
        if (tag.equals(entitytag)) {
            int pos = text.indexOf(out);
            entities.put(pos, out + "\t" + entitytag);
            System.out.println(pre + "\t" + out + "\t" + ipos);
        }
    }
    // line
    return entities;
}
