public byte[] getMemberChangeEventByte(int eventoffset2) {
    ArrayList<GroupMemberChangeEvent> al1 = new ArrayList<GroupMemberChangeEvent>();
    ArrayList<GroupMemberChangeEvent> al2 = new ArrayList<GroupMemberChangeEvent>();
    int sum = eventOffset - eventoffset2;
    for (int i = 0; i < sum; i++) {
        GroupMemberChangeEvent gme = groupEventTable.get(eventoffset2 + i + 1);
        if (gme != null) {
            if (gme.isJoin) {
                al1.add(gme);
            } else {
                al2.add(gme);
            }
        }
    }
    groupEventByte = new byte[6 + 8 * (al1.size() + al2.size())];
    int offset = 0;
    peer.tools.ByteIntSwitch.toByteArray(eventOffset, groupEventByte, 0);
    offset += 4;
    groupEventByte[offset] = (byte) al1.size();
    offset += 1;
    for (int i = 0; i < al1.size(); i++) {
        GroupMemberChangeEvent gme = al1.get(i);
        InetAddress ip = gme.node.getNodeIp();
        System.arraycopy(ip.getAddress(), 0, groupEventByte, offset, 4);
        offset += 4;
        peer.tools.ByteIntSwitch.toByteArray(gme.node.getDBServerPort(), groupEventByte, offset);
        offset += 4;
    // System.out.println("###������ݿ�ڵ� "+gme.node.getNodeIp());
    }
    groupEventByte[offset] = (byte) al2.size();
    offset += 1;
    for (int i = 0; i < al2.size(); i++) {
        GroupMemberChangeEvent gme = al2.get(i);
        InetAddress ip = gme.node.getNodeIp();
        System.arraycopy(ip.getAddress(), 0, groupEventByte, offset, 4);
        offset += 4;
        peer.tools.ByteIntSwitch.toByteArray(gme.node.getDBServerPort(), groupEventByte, offset);
        offset += 4;
    // System.out.println("###�Ƴ����ݿ�ڵ� "+gme.node.getNodeIp());
    }
    return groupEventByte;
}
