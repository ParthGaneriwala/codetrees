public void addcourse(CourseVO c) throws SjsuUniversiryException {
    try {
        PreparedStatement stmt;
        Connection conn;
        conn = con.getMyConnection();
        String Coursename = c.getName();
        if (Coursename.equals("")) {
            SjsuUniversiryException.raiseException("Enter course name");
        }
        int Section = c.getSection();
        if (Section <= 0) {
            SjsuUniversiryException.raiseException("Malformed section");
        }
        int Units = c.getUnits();
        if (Units <= 0) {
            SjsuUniversiryException.raiseException("Malformed units");
        }
        String[] days = { "M", "T", "W", "R", "F", "S", "U", "TBA" };
        String day = c.getMeetingHrs().getDay();
        boolean isDayFound = false;
        for (int i = 0; i < days.length; i++) {
            if (day.equals(days[i]))
                ;
            isDayFound = true;
        }
        if (!isDayFound || day == null)
            SjsuUniversiryException.raiseException("Malformed day format");
        int starttime = c.getMeetingHrs().getStartHr();
        int endtime = c.getMeetingHrs().getEndHr();
        boolean p = false;
        if (!(starttime >= 0 || starttime <= 2359))
            p = true;
        if (!(endtime >= 0 || endtime <= 2359))
            p = true;
        if (starttime >= endtime)
            p = true;
        if (p)
            SjsuUniversiryException.raiseException("Malformed time format");
        if (c.getLoction().getBuilding().equals(""))
            SjsuUniversiryException.raiseException("Please enter building");
        int locid = 0;
        String Building = c.getLoction().getBuilding();
        int room = c.getLoction().getRoom();
        locid = locExists(Building, room);
        if (locid == 0)
            locid = insertLocation(Building, room);
        if (locClash(c, locid))
            SjsuUniversiryException.raiseException("Same time and location for two courses");
        String sql = "Insert into course" + "(CourseName,Section,Units,CDay,CStartTime,CEndTime,Lid)" + " Values(?,?,?,?,?,?,?)";
        System.out.println(sql);
        stmt = conn.prepareStatement(sql);
        stmt.setString(1, c.getName());
        stmt.setInt(2, c.getSection());
        stmt.setInt(3, c.getUnits());
        stmt.setString(4, c.getMeetingHrs().getDay());
        stmt.setInt(5, c.getMeetingHrs().getStartHr());
        stmt.setInt(6, c.getMeetingHrs().getEndHr());
        stmt.setInt(7, locid);
        int x = stmt.executeUpdate();
        System.out.println("New course created");
        try {
            stmt.close();
        } catch (Exception e) {
        }
    } catch (SjsuUniversiryException ex) {
        throw ex;
    } catch (SQLException e) {
        SjsuUniversiryException.raiseException("Cannot add course", e);
        e.printStackTrace();
    }
}
