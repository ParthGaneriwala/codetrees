public void testTaskTrackerPorts() throws Exception {
    NameNode nn = null;
    JobTracker jt = null;
    JTRunner runner = null;
    try {
        nn = hdfs.startNameNode();
        JobConf conf2 = new JobConf(hdfs.getConfig());
        runner = new JTRunner();
        jt = startJobTracker(conf2, runner);
        // start job tracker on the same port as name-node
        conf2.set("mapred.task.tracker.report.address", FileSystem.getDefaultUri(hdfs.getConfig()).toString());
        conf2.set("mapred.task.tracker.http.address", TestHDFSServerPorts.NAME_NODE_HTTP_HOST + 0);
        boolean started = canStartTaskTracker(conf2);
        // should fail
        assertFalse(started);
        // bind http server to the same port as name-node
        conf2.set("mapred.task.tracker.report.address", TestHDFSServerPorts.NAME_NODE_HOST + 0);
        conf2.set("mapred.task.tracker.http.address", hdfs.getConfig().get("dfs.http.address"));
        started = canStartTaskTracker(conf2);
        // should fail again
        assertFalse(started);
        // both ports are different from the name-node ones
        conf2.set("mapred.task.tracker.report.address", TestHDFSServerPorts.NAME_NODE_HOST + 0);
        conf2.set("mapred.task.tracker.http.address", TestHDFSServerPorts.NAME_NODE_HTTP_HOST + 0);
        started = canStartTaskTracker(conf2);
        // should start now
        assertTrue(started);
    } finally {
        if (jt != null) {
            jt.fs.close();
            jt.stopTracker();
            runner.interrupt();
            runner.join();
        }
        hdfs.stopNameNode(nn);
    }
}
