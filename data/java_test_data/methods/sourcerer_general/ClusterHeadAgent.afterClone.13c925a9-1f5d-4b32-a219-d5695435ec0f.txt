@Override
protected void afterClone() {
    try {
        removeBehaviour(logBehaviour);
        logBehaviour = new AgentLogBehaviour(this);
        addBehaviour(logBehaviour);
        System.out.println("[ClusterHeadAgent   ]\tNew ClusterHead Raised:\t  " + this.getLocalName() + "\t" + this.getContainerController().getContainerName() + "\t" + this.clonedMNguestAgent);
        this.myMNguestAgent = this.clonedMNguestAgent;
        this.clonedMNguestAgent = null;
        // Advertise cluster MNs
        ACLMessage adv_ch_msg = new ACLMessage(ACLMessage.PROPAGATE);
        adv_ch_msg.addUserDefinedParameter(Config.IM_MSG_TYPE, Config.NEW_CH_ADVERTISE_MSG);
        adv_ch_msg.addUserDefinedParameter(Config.NEW_CH_NAME, this.getLocalName());
        adv_ch_msg.addUserDefinedParameter(Config.NEW_CH_IDX, this.getClonedCH_idx().toString());
        adv_ch_msg.addUserDefinedParameter(Config.NEW_CH_CONTAINER, this.getContainerController().getContainerName());
        Enumeration nod = this.getNodeNames();
        String mn_n;
        adv_ch_msg.addReceiver(new AID(this.nodePromoted, AID.ISGUID));
        this.nodePromoted = null;
        // this.add
        while (nod.hasMoreElements()) {
            mn_n = (String) nod.nextElement();
            System.out.println(this.getLocalName() + " push to: " + mn_n);
            adv_ch_msg.addReceiver(new AID(mn_n, AID.ISGUID));
        }
        this.sendMessage(adv_ch_msg);
        getNodes().clear();
        cloneCount = 0;
        this.doActivate();
    } catch (Exception ex) {
        Logger.getLogger(ClusterHeadAgent.class.getName()).log(Level.SEVERE, null, ex);
        ex.printStackTrace();
    }
}
