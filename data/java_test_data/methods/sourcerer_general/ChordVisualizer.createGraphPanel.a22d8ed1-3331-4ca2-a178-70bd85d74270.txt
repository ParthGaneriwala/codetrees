private JPanel createGraphPanel() {
    graphPanel = new JPanel();
    graphPanel.setLayout(new BorderLayout());
    CircleLayout<Integer, String> circleLayout = new CircleLayout<Integer, String>(this.chordDisplayer.getGraph());
    List<Integer> list = new ArrayList<Integer>(this.chordDisplayer.getNodes().keySet());
    Collections.sort(list);
    circleLayout.setVertexOrder(list);
    Transformer<Integer, Paint> vertexPaint = new Transformer<Integer, Paint>() {

        public Paint transform(Integer i) {
            if (i == selectedNode) {
                return Color.BLUE;
            } else {
                return Color.RED;
            }
        }
    };
    Transformer<String, Paint> edgePaint = new Transformer<String, Paint>() {

        public Paint transform(String s) {
            if (s.startsWith("fg:")) {
                return Color.BLUE;
            } else {
                return Color.BLACK;
            }
        }
    };
    visualizationViewer = new VisualizationViewer<Integer, String>(circleLayout);
    visualizationViewer.getRenderContext().setVertexFillPaintTransformer(vertexPaint);
    visualizationViewer.getRenderContext().setVertexLabelTransformer(new ToStringLabeller<Integer>());
    visualizationViewer.getRenderContext().setArrowDrawPaintTransformer(edgePaint);
    visualizationViewer.getRenderContext().setArrowFillPaintTransformer(edgePaint);
    visualizationViewer.getRenderContext().setEdgeDrawPaintTransformer(edgePaint);
    AbstractEdgeShapeTransformer<Integer, String> aesf = (AbstractEdgeShapeTransformer<Integer, String>) visualizationViewer.getRenderContext().getEdgeShapeTransformer();
    aesf.setControlOffsetIncrement(-20);
    visualizationViewer.repaint();
    PluggableGraphMouse gm = new PluggableGraphMouse();
    gm.add(new TranslatingGraphMousePlugin(MouseEvent.BUTTON3_MASK));
    gm.add(new ScalingGraphMousePlugin(new CrossoverScalingControl(), 0, 1.1f, 0.9f));
    gm.add(new SelectPlugin(MouseEvent.BUTTON1_MASK));
    gm.add(new RotatingGraphMousePlugin());
    visualizationViewer.setGraphMouse(gm);
    graphPanel.add(visualizationViewer, BorderLayout.CENTER);
    return graphPanel;
}
