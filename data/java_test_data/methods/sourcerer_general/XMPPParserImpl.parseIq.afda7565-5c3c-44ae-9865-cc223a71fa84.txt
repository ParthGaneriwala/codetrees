private Iq parseIq(XmlPullParser parser) throws Exception {
    String to = parser.getAttributeValue("", "to");
    String from = parser.getAttributeValue("", "from");
    String lang = getLanguageAttribute(parser);
    String id = parser.getAttributeValue("", "id");
    String strType = parser.getAttributeValue("", "type");
    Iq iq = new Iq();
    if (to != null && !to.isEmpty()) {
        iq.setTo(new JID(to));
    }
    if (from != null && !from.isEmpty()) {
        iq.setFrom(new JID(from));
    }
    iq.setLanguage(lang);
    iq.setStanzaId(id == null ? Packet.ID_NOT_AVAILABLE : id);
    iq.setType(Iq.Type.fromString(strType));
    boolean done = false;
    while (!done) {
        int eventType = parser.next();
        String elementName = parser.getName();
        if (eventType == XmlPullParser.START_TAG) {
            String namespace = parser.getNamespace(null);
            if ("bind".equals(elementName)) {
                IqBind bind = parseIqBind(parser);
                iq.addExtension(bind);
            } else if ("session".equals(elementName)) {
                IqSession iqSession = new IqSession();
                iq.addExtension(iqSession);
            } else if ("query".equals(elementName) && "jabber:iq:roster".equals(namespace)) {
                IqRoster iqRoster = parseIqRoster(parser);
                iq.addExtension(iqRoster);
            } else if ("query".equals(elementName) && "jabber:iq:privacy".equals(namespace)) {
                Privacy privacy = parsePrivacy(parser);
                iq.addExtension(privacy);
            } else if ("error".equals(elementName)) {
                XmppError error = parseError(parser);
                iq.setError(error);
            } else {
                processExtension(parser, elementName, namespace, iq);
            }
        } else if (eventType == XmlPullParser.END_TAG) {
            if ("iq".equals(parser.getName())) {
                done = true;
            }
        }
    }
    return iq;
}
