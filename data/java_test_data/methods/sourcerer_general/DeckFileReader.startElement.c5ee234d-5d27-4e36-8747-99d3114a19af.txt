@Override
public void startElement(String uri, String name, String qName, Attributes atts) throws SAXException {
    if ("".equals(uri)) {
        Log.v(TAG, "Start element: " + qName);
        // }
        if (qName.equals(BANGA_DECK_TAG)) {
            String deckName = atts.getValue("name");
            String description = atts.getValue("description");
            String rankStr = atts.getValue("rank");
            int rank = 0;
            if (rankStr != null && rankStr.length() > 0) {
                rank = Integer.parseInt(rankStr);
            }
            currentDeck = new DeckImpl(deckName, description, rank);
        } else if (qName.equals(CARD_TAG)) {
            if (currentDeck == null) {
                throw new SAXParseException("A card tag is only allowed within a deck element", locator);
            }
            String cardName = atts.getValue("name");
            if (cardName == null || cardName.length() <= 0) {
                throw new SAXParseException("the name attribute is required in the card element", locator);
            }
            String rankStr = atts.getValue("rank");
            int rank = 0;
            if (rankStr != null && rankStr.length() > 0) {
                rank = Integer.parseInt(rankStr);
            }
            String imageURI = atts.getValue("imageUri");
            if (imageURI == null || imageURI.length() <= 0) {
                throw new SAXParseException("the imageUri attribute is required in the card element", locator);
            }
            Bitmap image;
            // }
            try {
                Log.d(TAG, "attempting to load image: " + imageURI);
                ZipEntry ze = deckFile.getEntry(imageURI);
                InputStream is = deckFile.getInputStream(ze);
                image = BitmapFactory.decodeStream(is);
                currentCard = new CardImpl(currentDeck.getName(), cardName, rank, image, null);
            } catch (Exception e) {
                Log.e(TAG, "Card invalid because of an invalid imageURI: " + imageURI, e);
            }
        } else if (qName.equals(LABEL_TAG)) {
            String labelName = atts.getValue("name");
            if (labelName == null || labelName.length() <= 0) {
                throw new SAXParseException("the name attribute is required in the label element", locator);
            }
            String rankStr = atts.getValue("rank");
            int rank = 0;
            if (rankStr != null && rankStr.length() > 0) {
                rank = Integer.parseInt(rankStr);
            }
            currentLabel = new LabelImpl(labelName, rank, deckFile);
        } else if (qName.equals(HINT_TAG)) {
            String audioUri = atts.getValue("audioUri");
            // verify that the audio actually exists is the deck zip file
            ZipEntry ze = deckFile.getEntry(audioUri);
            if (ze != null) {
                currentLabel.addAudioURI(audioUri);
                Log.d(TAG, "Adding audioURI to label " + currentLabel);
            } else {
                Log.w(TAG, "The audio URI provided in the deck file was not found, skipping");
            }
        }
    } else {
        Log.d(TAG, "Start element: {" + uri + "}" + name);
    }
}
