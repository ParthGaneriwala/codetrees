@Override
public List<String> preParse(List<String> original) {
    original = super.preParse(original);
    HashMap<String, NameVersion> existingEntries = new HashMap<String, NameVersion>();
    ListIterator<String> iter = original.listIterator();
    while (iter.hasNext()) {
        String entry = iter.next().trim();
        MatchResult result = null;
        _preparse_matcher_ = _preparse_pattern_.matcher(entry);
        if (_preparse_matcher_.matches()) {
            result = _preparse_matcher_.toMatchResult();
            String name = result.group(1);
            String version = result.group(2);
            NameVersion nv = new NameVersion(name, version);
            NameVersion existing = existingEntries.get(name);
            if (null != existing) {
                if (nv.versionNumber < existing.versionNumber) {
                    // removal removes from original list.
                    iter.remove();
                    continue;
                }
            }
            existingEntries.put(name, nv);
        }
    }
    // for each name that were found before the largest
    while (iter.hasPrevious()) {
        String entry = iter.previous().trim();
        MatchResult result = null;
        _preparse_matcher_ = _preparse_pattern_.matcher(entry);
        if (_preparse_matcher_.matches()) {
            result = _preparse_matcher_.toMatchResult();
            String name = result.group(1);
            String version = result.group(2);
            NameVersion nv = new NameVersion(name, version);
            NameVersion existing = existingEntries.get(name);
            if (null != existing) {
                if (nv.versionNumber < existing.versionNumber) {
                    // removal removes from original list.
                    iter.remove();
                }
            }
        }
    }
    return original;
}
