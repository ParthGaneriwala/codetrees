// selects patterns (quantity: nopatterns) randomly and trains the net using those patterns.
public void MinibatchTrainPatterns(Pattern[] patterns, double rate, int nopatterns) {
    // no of patterns used
    int patternsnottrained = patterns.length;
    if (nopatterns > patterns.length) {
        nopatterns = patterns.length;
    }
    if (nopatterns < 1) {
        nopatterns = 1;
    }
    int patterntotrain;
    int noofpatternsselected;
    Pattern[] patternsselected;
    int indexofpatterntotrain = -1;
    int[] indexesofpatternstotrain = new int[nopatterns];
    int counter;
    // turn all "selected" flags off
    for (int i = 0; i < patterns.length; i++) {
        patterns[i].selected = false;
    }
    while (patternsnottrained > 0) {
        // choose patterns to be used for training and put them in the temp. pattern array
        noofpatternsselected = 0;
        while (noofpatternsselected < nopatterns && patternsnottrained > 0) {
            patterntotrain = randomizer.random.nextInt(patternsnottrained);
            patternsnottrained--;
            // find the index of the pattern to be used
            counter = 0;
            for (int i = 0; i < patterns.length; i++) {
                if (!patterns[i].selected) {
                    if (counter != patterntotrain) {
                        counter++;
                    } else if (counter == patterntotrain) {
                        indexofpatterntotrain = i;
                        break;
                    }
                }
            }
            noofpatternsselected++;
            indexesofpatternstotrain[noofpatternsselected - 1] = indexofpatterntotrain;
            patterns[indexofpatterntotrain].selected = true;
        }
        // train the net using the temp. pattern array
        patternsselected = null;
        patternsselected = new Pattern[noofpatternsselected];
        for (int i = 0; i < noofpatternsselected; i++) {
            patternsselected[i] = patterns[indexesofpatternstotrain[i]];
        }
        BatchTrainPatterns(patternsselected, rate);
    }
    // turn all "selected" flags off again
    for (int i = 0; i < patterns.length; i++) {
        patterns[i].selected = false;
    }
}
