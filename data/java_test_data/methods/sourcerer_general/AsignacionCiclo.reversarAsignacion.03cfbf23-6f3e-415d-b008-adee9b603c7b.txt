public void reversarAsignacion() {
    Date fechaInicio = new Date();
    try {
        // Paso 1. Obtiene los detalles de la empresa
        Empresa empresa = this.obtenerConfiguracionEmpresa(codEmpresa);
        if (empresa != null) {
            logger.info("Empresa: " + empresa.getName() + ".");
            Ciclo__c ciclo = this.obtenerCicloReversion(empresa.getId(), codCiclo);
            if (ciclo != null) {
                logger.info("Ciclo: " + codCiclo + ".");
                // Busca los cobros del ciclo
                List<Cobro__c> cobros = this.obtenerCobrosByIdCiclo(ciclo.getId());
                logger.info("Total de cobros: " + cobros.size() + ".");
                if (cobros != null && cobros.size() > 0) {
                    // Busca las llamadas asociadas a esos cobros
                    ID[] idsLlamadas = this.obtenerLlamadasCobros(cobros);
                    logger.info("Total de llamadas: " + idsLlamadas.length + ".");
                    // Borra las llamadas
                    logger.info("Eliminando llamadas.");
                    this.eliminarLlamadas(idsLlamadas);
                    // Actualiza los cobros
                    List<Cobro__c> cobrosAct = new ArrayList<Cobro__c>();
                    for (Cobro__c cobro : cobros) {
                        Cobro__c cobroObj = new Cobro__c();
                        cobroObj.setId(cobro.getId());
                        cobroObj.setOwnerId(client.getUserID());
                        cobroObj.setIsMarcadorPredictivo__c(false);
                        cobroObj.setEstado_Cobro__c(Constantes.COBRO_ABIERTO);
                        cobroObj.setUltimo_Codigo_Resultado__c("");
                        cobroObj.setFieldsToNull(new String[] { "Agente__c", "TC_Ciclo_Pertenece__c", "Fecha_Rehabilitacion__c", "Grupo_Score__c" });
                        cobrosAct.add(cobroObj);
                    }
                    logger.info("Actualizando cobros.");
                    this.actualizarRegistros(cobrosAct);
                }
                Ciclo__c newCiclo = new Ciclo__c();
                newCiclo.setId(ciclo.getId());
                newCiclo.setTC_Ciclo_Asignado__c(false);
                newCiclo.setTC_Resultado__c("Hora Inicio:" + Util.parsearDateTimeString(fechaInicio) + " ." + "\nPROCESO EXITOSO REVERSION." + "\nHora Fin:" + Util.parsearDateTimeString(new Date()) + " .");
                List<Ciclo__c> ciclos = new ArrayList<Ciclo__c>();
                ciclos.add(newCiclo);
                this.actualizarRegistros(ciclos);
            } else {
                logger.error("No se encontr� el ciclo " + codCiclo);
            }
        } else {
            logger.error("No se encontr� la configuraci�n de la empresa.");
        }
    } catch (Exception e) {
        logger.error(e);
    }
}
