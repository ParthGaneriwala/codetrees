public void ontTest(OntModel m) throws Exception {
    Profile prof = m.getProfile();
    EnumeratedClass A = m.createEnumeratedClass(NS + "A", null);
    OntResource a = (OntResource) m.getResource(NS + "a").as(OntResource.class);
    OntResource b = (OntResource) m.getResource(NS + "b").as(OntResource.class);
    A.addOneOf(a);
    assertEquals("Cardinality should be 1", 1, A.getCardinality(prof.ONE_OF()));
    assertEquals("Size should be 1", 1, A.getOneOf().size());
    assertTrue("A should have a as enumerated member", A.getOneOf().contains(a));
    A.addOneOf(b);
    assertEquals("Cardinality should be 1", 1, A.getCardinality(prof.ONE_OF()));
    assertEquals("Size should be 2", 2, A.getOneOf().size());
    iteratorTest(A.listOneOf(), new Object[] { a, b });
    A.setOneOf(m.createList(new RDFNode[] { b }));
    assertEquals("Cardinality should be 1", 1, A.getCardinality(prof.ONE_OF()));
    assertEquals("Size should be 1", 1, A.getOneOf().size());
    assertTrue("A should have b in the enum", A.hasOneOf(b));
    assertTrue("A should not have a in the enum", !A.hasOneOf(a));
    A.removeOneOf(a);
    assertTrue("Should have b as an enum value", A.hasOneOf(b));
    A.removeOneOf(b);
    assertTrue("Should not have b as an enum value", !A.hasOneOf(b));
}
