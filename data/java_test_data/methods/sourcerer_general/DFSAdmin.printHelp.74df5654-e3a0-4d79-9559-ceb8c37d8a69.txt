private void printHelp(String cmd) {
    String summary = "org.fit.hiai.hadoop dfsadmin is the command to execute DFS administrative commands.\n" + "The full syntax is: \n\n" + "org.fit.hiai.hadoop dfsadmin [-report] [-safemode <enter | leave | get | wait>]\n" + "\t[-refreshNodes]\n" + "\t[" + SetQuotaCommand.USAGE + "]\n" + "\t[" + ClearQuotaCommand.USAGE + "]\n" + "\t[" + SetSpaceQuotaCommand.USAGE + "]\n" + "\t[" + ClearSpaceQuotaCommand.USAGE + "]\n" + "\t[-help [cmd]]\n";
    String report = "-report: \tReports basic filesystem information and statistics.\n";
    String safemode = "-safemode <enter|leave|get|wait>:  Safe mode maintenance command.\n" + "\t\tSafe mode is a Namenode state in which it\n" + "\t\t\t1.  does not accept changes to the name space (read-only)\n" + "\t\t\t2.  does not replicate or delete blocks.\n" + "\t\tSafe mode is entered automatically at Namenode startup, and\n" + "\t\tleaves safe mode automatically when the configured minimum\n" + "\t\tpercentage of blocks satisfies the minimum replication\n" + "\t\tcondition.  Safe mode can also be entered manually, but then\n" + "\t\tit can only be turned off manually as well.\n";
    String refreshNodes = "-refreshNodes: \tUpdates the set of hosts allowed " + "to connect to namenode.\n\n" + "\t\tRe-reads the config file to update values defined by \n" + "\t\tdfs.hosts and dfs.host.exclude and reads the \n" + "\t\tentires (hostnames) in those files.\n\n" + "\t\tEach entry not defined in dfs.hosts but in \n" + "\t\tdfs.hosts.exclude is decommissioned. Each entry defined \n" + "\t\tin dfs.hosts and also in dfs.host.exclude is stopped from \n" + "\t\tdecommissioning if it has aleady been marked for decommission.\n" + "\t\tEntires not present in both the lists are decommissioned.\n";
    String finalizeUpgrade = "-finalizeUpgrade: Finalize upgrade of DFS.\n" + "\t\tDatanodes delete their previous version working directories,\n" + "\t\tfollowed by Namenode doing the same.\n" + "\t\tThis completes the upgrade process.\n";
    String upgradeProgress = "-upgradeProgress <status|details|force>: \n" + "\t\trequest current distributed upgrade status, \n" + "\t\ta detailed status or force the upgrade to proceed.\n";
    String metaSave = "-metasave <filename>: \tSave Namenode's primary data structures\n" + "\t\tto <filename> in the directory specified by org.fit.hiai.hadoop.log.dir property.\n" + "\t\t<filename> will contain one line for each of the following\n" + "\t\t\t1. Datanodes heart beating with Namenode\n" + "\t\t\t2. Blocks waiting to be replicated\n" + "\t\t\t3. Blocks currrently being replicated\n" + "\t\t\t4. Blocks waiting to be deleted\n";
    String help = "-help [cmd]: \tDisplays help for the given command or all commands if none\n" + "\t\tis specified.\n";
    if ("report".equals(cmd)) {
        System.out.println(report);
    } else if ("safemode".equals(cmd)) {
        System.out.println(safemode);
    } else if ("refreshNodes".equals(cmd)) {
        System.out.println(refreshNodes);
    } else if ("finalizeUpgrade".equals(cmd)) {
        System.out.println(finalizeUpgrade);
    } else if ("upgradeProgress".equals(cmd)) {
        System.out.println(upgradeProgress);
    } else if ("metasave".equals(cmd)) {
        System.out.println(metaSave);
    } else if (SetQuotaCommand.matches(cmd)) {
        System.out.println(SetQuotaCommand.DESCRIPTION);
    } else if (ClearQuotaCommand.matches(cmd)) {
        System.out.println(ClearQuotaCommand.DESCRIPTION);
    } else if (SetSpaceQuotaCommand.matches(cmd)) {
        System.out.println(SetSpaceQuotaCommand.DESCRIPTION);
    } else if (ClearSpaceQuotaCommand.matches(cmd)) {
        System.out.println(ClearSpaceQuotaCommand.DESCRIPTION);
    } else if ("help".equals(cmd)) {
        System.out.println(help);
    } else {
        System.out.println(summary);
        System.out.println(report);
        System.out.println(safemode);
        System.out.println(refreshNodes);
        System.out.println(finalizeUpgrade);
        System.out.println(upgradeProgress);
        System.out.println(metaSave);
        System.out.println(SetQuotaCommand.DESCRIPTION);
        System.out.println(ClearQuotaCommand.DESCRIPTION);
        System.out.println(SetSpaceQuotaCommand.DESCRIPTION);
        System.out.println(ClearSpaceQuotaCommand.DESCRIPTION);
        System.out.println(help);
        System.out.println();
        ToolRunner.printGenericCommandUsage(System.out);
    }
}
