@Test
public void test1b() throws Throwable {
    List<List<Feature>> features = new ArrayList<List<Feature>>();
    features.add(createFeatures("0"));
    features.add(createFeatures("1"));
    features.add(createFeatures("2"));
    features.add(createFeatures("3"));
    features.add(createFeatures("4"));
    UimaContext uimaContext = UimaContextFactory.createUimaContext(DefaultOutcomeFeatureExtractor.PARAM_MOST_RECENT_OUTCOME, 1, DefaultOutcomeFeatureExtractor.PARAM_LEAST_RECENT_OUTCOME, 1, DefaultOutcomeFeatureExtractor.PARAM_USE_BIGRAM, false, DefaultOutcomeFeatureExtractor.PARAM_USE_TRIGRAM, false, DefaultOutcomeFeatureExtractor.PARAM_USE4GRAM, false);
    DefaultOutcomeFeatureExtractor dofe = new DefaultOutcomeFeatureExtractor();
    dofe.initialize(uimaContext);
    TestViterbiClassifier tvc = new TestViterbiClassifier();
    tvc.setOutcomeFeatureExctractors(new OutcomeFeatureExtractor[] { dofe });
    tvc.setStackSize(4);
    tvc.setAddScores(false);
    tvc.setDelegatedClassifier(new TestClassifier());
    List<String> bestSequence = tvc.viterbi(features);
    assertEquals("C", bestSequence.get(0));
    assertEquals("E", bestSequence.get(1));
    assertEquals("G", bestSequence.get(2));
    assertEquals("K", bestSequence.get(3));
    assertEquals("O", bestSequence.get(4));
}
