public void evaluateVariables() throws SQLException {
    if (jobRS.next()) {
        projectName = jobRS.getString("job_name");
        submittal_copies = jobRS.getString("submittal_copies");
        if (projectName == null)
            projectName = "";
        jobName = projectName;
        projectAddress = jobRS.getString("address");
        if (projectAddress == null)
            projectAddress = "";
        projectCityStateZip = jobRS.getString("city") + ", " + jobRS.getString("state") + "   " + jobRS.getString("zip");
        if (projectCityStateZip == null)
            projectCityStateZip = "";
        bidDocuments = jobRS.getString("bid_documents");
        if (bidDocuments == null)
            bidDocuments = "";
    }
    if (contractRS.next()) {
        java.util.Date d = contractRS.getDate("agreement_date");
        if (!(d == null)) {
            agreementDate = formatter.format(d);
            Calendar cal = Calendar.getInstance();
            cal.setTime(d);
            cal.add(Calendar.DAY_OF_YEAR, 30);
            dueDate = formatter.format(cal.getTime());
        } else {
            agreementDate = "(no agreement date yet)";
            dueDate = "(the agreement date + 30 days)";
        }
        retention = contractRS.getFloat("retention_rate");
        contractDescription = contractRS.getString("description");
        if (contractDescription == null)
            contractDescription = "";
        amount = contractRS.getDouble("amount");
        costCodeID = contractRS.getString("cost_code_id");
        omSubmittals = contractRS.getString("req_tech_submittals").equals("n") ? "Nothing required" : "Full technical, parts, and manufacturing submittals, " + submittal_copies + " copies required";
        fullWarranty = contractRS.getString("req_warranty").equals("n") ? "Nothing required" : "Complete labor, materials, and equipment warranties";
        lienReleases = "Unconditional Lien Release for all monies received to-date from the " + cTitle + " and its subcontractors and suppliers";
        signedTraining = contractRS.getString("req_owner_training").equals("n") ? "No training required" : "Thorough training of approved Owner's representatives and a completed, signed training form";
        specialtyItems = contractRS.getString("req_specialty");
        if (specialtyItems == null)
            specialtyItems = "n";
        if (specialtyItems.equals("n"))
            specialtyItems = "None";
        otherItems = contractRS.getString("tracking_notes");
        if (otherItems == null)
            otherItems = "";
    }
    if (ownerRS.next()) {
        ownerName = ownerRS.getString("company_name");
        if (ownerName == null)
            ownerName = "";
        ownerAddress = ownerRS.getString("address");
        if (ownerAddress == null)
            ownerAddress = "";
        ownerCityStateZip = ownerRS.getString("city") + ", " + ownerRS.getString("state") + "   " + ownerRS.getString("zip");
        if (ownerCityStateZip == null)
            ownerCityStateZip = "";
    }
    if (architectRS.next()) {
        architectName = architectRS.getString("company_name");
        if (architectName == null)
            architectName = "";
        architectAddress = architectRS.getString("address");
        if (architectAddress == null)
            architectAddress = "";
        architectCityStateZip = architectRS.getString("city") + ", " + architectRS.getString("state") + "   " + architectRS.getString("zip");
        if (architectCityStateZip == null)
            architectCityStateZip = "";
    }
    if (companyRS.next()) {
        subName = companyRS.getString("company_name");
        if (subName == null)
            subName = "";
        contactName = companyRS.getString("name");
        if (contactName == null)
            contactName = "";
        mobile = companyRS.getString("mobile_phone");
        if (mobile == null)
            mobile = "";
        email = companyRS.getString("email");
        if (email == null)
            email = "";
        subAddress = companyRS.getString("address");
        if (subAddress == null)
            subAddress = "";
        subCityStateZip = companyRS.getString("city") + ", " + companyRS.getString("state") + "   " + companyRS.getString("zip");
        if (subCityStateZip == null)
            subCityStateZip = "";
        telephone = companyRS.getString("contacts.phone");
        if (telephone == null)
            telephone = companyRS.getString("company.phone");
        if (telephone == null)
            telephone = "";
        fax = companyRS.getString("contacts.fax");
        if (fax == null)
            fax = companyRS.getString("company.fax");
        if (fax == null)
            fax = "";
        federal_id = companyRS.getString("federal_id");
        if (federal_id == null)
            federal_id = "";
        license_number = companyRS.getString("license_number");
        if (license_number == null)
            license_number = "";
    }
    while (submittalRS.next()) {
        submittalVector.addElement("30 days    " + submittalRS.getString("description"));
    }
    text.replaceAll("%a", "$" + df.format(amount));
    text.replaceAll("%A", DocHelper.numberToText(amount));
    text.replaceAll("%r", df2.format(retention * 100));
    text.replaceAll("%n", projectName);
    text.replaceAll("%d", attr.get("address"));
    text.replaceAll("%c", attr.get("city"));
    text.replaceAll("%s", attr.get("state"));
    text.replaceAll("%z", attr.get("zip"));
    text.replaceAll("%p", attr.get("phone"));
}
