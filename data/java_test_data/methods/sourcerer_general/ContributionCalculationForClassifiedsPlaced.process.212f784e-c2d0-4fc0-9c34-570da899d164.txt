public void process(Connection db, LookupContribution lookupContribution) throws SQLException {
    lastRun = lookupContribution.getRunDate();
    currentRun = new Timestamp(System.currentTimeMillis());
    userPoints = new HashMap<String, Integer>();
    // Page through the updates just in case there are lots of users do 100 at a time...
    PagedListInfo pagedListInfo = new PagedListInfo();
    pagedListInfo.setItemsPerPage(100);
    pagedListInfo.setDefaultSort("modified", "DESC");
    // Use the paged list to paged through all users
    ClassifiedList classifiedList = new ClassifiedList();
    classifiedList.setPagedListInfo(pagedListInfo);
    classifiedList.setPublished(Constants.TRUE);
    classifiedList.setPublishedRangeStart(lastRun);
    classifiedList.setPublishedRangeEnd(currentRun);
    classifiedList.buildList(db);
    while (classifiedList.size() > 0) {
        for (Classified classified : classifiedList) {
            int userId = classified.getModifiedBy();
            int projectId = classified.getProjectId();
            String userIdAndProjectId = userId + "-" + projectId;
            if (userPoints.containsKey(userIdAndProjectId)) {
                int currentPoints = userPoints.get(userIdAndProjectId);
                currentPoints = currentPoints + lookupContribution.getPointsAwarded();
                userPoints.put(userIdAndProjectId, currentPoints);
            } else {
                userPoints.put(userIdAndProjectId, lookupContribution.getPointsAwarded());
            }
        }
        // Always reset the list or else the records are included on buildList again
        classifiedList.clear();
        if (pagedListInfo.getPage() < pagedListInfo.getNumberOfPages()) {
            pagedListInfo.setCurrentPage(pagedListInfo.getPage() + 1);
            classifiedList.buildList(db);
        }
    }
    updatePoints(db, lookupContribution);
}
