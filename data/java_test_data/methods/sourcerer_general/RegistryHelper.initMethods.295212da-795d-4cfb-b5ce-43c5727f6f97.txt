private void initMethods() throws RegistryErrorException {
    Class clazz = null;
    try {
        // you cannot access the class directly, cause its private
        clazz = Class.forName("java.util.prefs.WindowsPreferences");
        Method[] ms = clazz.getDeclaredMethods();
        if (ms == null)
            throw new RegistryErrorException("Cannot access java.util.prefs.WindowsPreferences class!");
        // researching all methods to load it into the reflection methods
        for (int x = 0; x != ms.length; x++) {
            if (ms[x] != null) {
                if (ms[x].getName().equals("WindowsRegOpenKey")) {
                    openKey = ms[x];
                    // set Access for private
                    openKey.setAccessible(true);
                } else if (ms[x].getName().equals("WindowsRegCloseKey")) {
                    closeKey = ms[x];
                    closeKey.setAccessible(true);
                } else if (ms[x].getName().equals("WindowsRegCreateKeyEx")) {
                    createKey = ms[x];
                    createKey.setAccessible(true);
                } else if (ms[x].getName().equals("WindowsRegDeleteKey")) {
                    delKey = ms[x];
                    delKey.setAccessible(true);
                } else if (ms[x].getName().equals("WindowsRegFlushKey")) {
                    flushKey = ms[x];
                    flushKey.setAccessible(true);
                } else if (ms[x].getName().equals("WindowsRegQueryValueEx")) {
                    queryValue = ms[x];
                    queryValue.setAccessible(true);
                } else if (ms[x].getName().equals("WindowsRegSetValueEx")) {
                    setValue = ms[x];
                    setValue.setAccessible(true);
                } else if (ms[x].getName().equals("WindowsRegDeleteValue")) {
                    delValue = ms[x];
                    delValue.setAccessible(true);
                } else if (ms[x].getName().equals("WindowsRegQueryInfoKey")) {
                    queryInfoKey = ms[x];
                    queryInfoKey.setAccessible(true);
                } else if (ms[x].getName().equals("WindowsRegEnumKeyEx")) {
                    enumKey = ms[x];
                    enumKey.setAccessible(true);
                } else if (ms[x].getName().equals("WindowsRegEnumValue")) {
                    enumValue = ms[x];
                    enumValue.setAccessible(true);
                }
            }
        }
    } catch (ClassNotFoundException ex) {
        throw new RegistryErrorException(ex.getMessage());
    }
}
