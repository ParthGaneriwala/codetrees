protected static void renderPreamble(String name, String uriRef, PrintStream out) {
    // compute the package name
    String packageName;
    if (name.indexOf('.') == -1) {
        packageName = "com.hp.hpl.jena.vocabulary";
    } else {
        packageName = name.substring(0, name.lastIndexOf('.'));
        name = name.substring(name.lastIndexOf('.') + 1);
    }
    out.println("/* Vocabulary Class generated by Jena vocabulary generator");
    out.println(" *");
    out.println(" * On: " + (new Date()).toString());
    out.println(// the line split up deliberately
    " * Version $" + "Id" + "$");
    out.println(" */");
    out.println("package " + packageName + ";");
    out.println();
    out.println("import com.hp.hpl.jena.rdf.model.impl.ErrorHelper;");
    out.println("import com.hp.hpl.jena.rdf.model.Model;");
    out.println("import com.hp.hpl.jena.rdf.model.Resource;");
    out.println("import com.hp.hpl.jena.rdf.model.ResourceFactory;");
    out.println("import com.hp.hpl.jena.rdf.model.Property;");
    out.println("import com.hp.hpl.jena.rdf.model.RDFException;");
    out.println();
    out.println("/** " + name + " vocabulary class for namespace " + uriRef);
    out.println(" */");
    out.println("public class " + name + " {");
    out.println();
    out.println("    protected static final String uri =\"" + uriRef + "\";");
    out.println();
    out.println("    /** returns the URI for this schema");
    out.println("     * @return the URI for this schema");
    out.println("     */");
    out.println("    public static String getURI() {");
    out.println("          return uri;");
    out.println("    }");
}
