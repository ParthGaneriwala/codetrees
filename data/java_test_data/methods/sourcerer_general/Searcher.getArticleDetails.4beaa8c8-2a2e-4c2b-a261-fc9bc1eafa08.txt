private Element getArticleDetails(Page page, int linkLimit) throws SQLException {
    Article article = (Article) page;
    Element xmlArt = wms.doc.createElement("Article");
    xmlArt.setAttribute("id", String.valueOf(article.getId()));
    xmlArt.setAttribute("title", article.getTitle());
    // xmlArt.setAttribute("description", getDescription(article)) ;
    String firstParagraph = null;
    try {
        firstParagraph = article.getFirstParagraph();
        firstParagraph = wms.definer.formatDefinition(firstParagraph, Definer.FORMAT_HTML, Definer.LINK_TOOLKIT);
    } catch (Exception e) {
    }
    ;
    if (firstParagraph != null)
        xmlArt.appendChild(wms.createElement("FirstParagraph", firstParagraph));
    SortedVector<Redirect> redirects = article.getRedirects();
    if (!redirects.isEmpty()) {
        Element xmlRedirects = wms.doc.createElement("RedirectList");
        for (Redirect r : redirects) {
            Element xmlRedirect = wms.doc.createElement("Redirect");
            xmlRedirect.setAttribute("id", String.valueOf(r.getId()));
            xmlRedirect.setAttribute("title", r.getTitle());
            xmlRedirects.appendChild(xmlRedirect);
        }
        xmlArt.appendChild(xmlRedirects);
    }
    SortedVector<AnchorText> anchorTexts = article.getAnchorTexts();
    if (!anchorTexts.isEmpty()) {
        Element xmlAnchors = wms.doc.createElement("AnchorList");
        int total = 0;
        for (AnchorText at : anchorTexts) total += at.getCount();
        for (AnchorText at : anchorTexts) {
            int c = at.getCount();
            if (c > 0) {
                Element xmlAnchor = wms.doc.createElement("Anchor");
                xmlAnchor.setAttribute("text", at.getText());
                xmlAnchor.setAttribute("occurances", String.valueOf(c));
                xmlAnchor.setAttribute("proportion", wms.df.format((double) c / total));
                xmlAnchors.appendChild(xmlAnchor);
            }
        }
        xmlAnchors.setAttribute("totalOccurances", String.valueOf(total));
        xmlArt.appendChild(xmlAnchors);
    }
    HashMap<String, String> translations = article.getTranslations();
    if (!translations.isEmpty()) {
        Element xmlLangs = wms.doc.createElement("LanguageLinkList");
        for (String lang : translations.keySet()) {
            Element xmlLang = wms.doc.createElement("LanguageLink");
            xmlLang.setAttribute("lang", lang);
            xmlLang.setAttribute("text", translations.get(lang));
            xmlLangs.appendChild(xmlLang);
        }
        xmlArt.appendChild(xmlLangs);
    }
    SortedVector<Category> cats = article.getParentCategories();
    if (!cats.isEmpty()) {
        Category eq = article.getEquivalentCategory();
        Element xmlCats = wms.doc.createElement("CategoryList");
        for (Category c : cats) {
            Element xmlCat;
            if (eq != null && c.equals(eq))
                xmlCat = wms.doc.createElement("EquivalentCategory");
            else
                xmlCat = wms.doc.createElement("Category");
            xmlCat.setAttribute("id", String.valueOf(c.getId()));
            xmlCat.setAttribute("title", c.getTitle());
            xmlCats.appendChild(xmlCat);
        }
        xmlArt.appendChild(xmlCats);
    }
    int[] linksOut = article.getLinksOutIds();
    if (linksOut.length > 0) {
        Element xmlLinks = wms.doc.createElement("LinkOutList");
        xmlLinks.setAttribute("size", String.valueOf(linksOut.length));
        int count = 0;
        for (int id : linksOut) {
            if (count++ == linkLimit)
                break;
            try {
                Article link = new Article(wms.wikipedia.getDatabase(), id);
                Element xmlLink = wms.doc.createElement("LinkOut");
                xmlLink.setAttribute("id", String.valueOf(link.getId()));
                xmlLink.setAttribute("title", link.getTitle());
                xmlLink.setAttribute("relatedness", wms.df.format(link.getRelatednessTo(article)));
                xmlLinks.appendChild(xmlLink);
            } catch (Exception e) {
            }
            ;
        }
        xmlArt.appendChild(xmlLinks);
    }
    int[] linksIn = article.getLinksInIds();
    if (linksIn.length > 0) {
        Element xmlLinks = wms.doc.createElement("LinkInList");
        xmlLinks.setAttribute("size", String.valueOf(linksIn.length));
        int count = 0;
        for (int id : linksIn) {
            if (count++ == linkLimit)
                break;
            try {
                Article link = new Article(wms.wikipedia.getDatabase(), id);
                Element xmlLink = wms.doc.createElement("LinkIn");
                xmlLink.setAttribute("id", String.valueOf(link.getId()));
                xmlLink.setAttribute("title", link.getTitle());
                xmlLink.setAttribute("relatedness", wms.df.format(link.getRelatednessTo(article)));
                xmlLinks.appendChild(xmlLink);
            } catch (Exception e) {
            }
            ;
        }
        xmlArt.appendChild(xmlLinks);
    }
    return xmlArt;
}
