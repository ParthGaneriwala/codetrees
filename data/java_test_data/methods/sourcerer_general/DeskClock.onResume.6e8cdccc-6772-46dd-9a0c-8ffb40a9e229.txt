@Override
public void onResume() {
    super.onResume();
    if (DEBUG)
        Log.d(LOG_TAG, "onResume with intent: " + getIntent());
    // reload the date format in case the user has changed settings
    // recently
    mDateFormat = "EEEE MMMM d";
    IntentFilter filter = new IntentFilter();
    filter.addAction(Intent.ACTION_DATE_CHANGED);
    filter.addAction(Intent.ACTION_BATTERY_CHANGED);
    filter.addAction(Intent.ACTION_DOCK_EVENT);
    filter.addAction(ACTION_MIDNIGHT);
    registerReceiver(mIntentReceiver, filter);
    Calendar today = Calendar.getInstance();
    today.set(Calendar.HOUR_OF_DAY, 0);
    today.set(Calendar.MINUTE, 0);
    today.set(Calendar.SECOND, 0);
    today.add(Calendar.DATE, 1);
    long alarmTimeUTC = today.getTimeInMillis() + today.get(Calendar.ZONE_OFFSET);
    mMidnightIntent = PendingIntent.getBroadcast(this, 0, new Intent(ACTION_MIDNIGHT), 0);
    AlarmManager am = (AlarmManager) getSystemService(Context.ALARM_SERVICE);
    am.setRepeating(AlarmManager.RTC, alarmTimeUTC, AlarmManager.INTERVAL_DAY, mMidnightIntent);
    if (DEBUG)
        Log.d(LOG_TAG, "set repeating midnight event at " + alarmTimeUTC + " repeating every " + AlarmManager.INTERVAL_DAY + " with intent: " + mMidnightIntent);
    // un-dim when resuming
    mDimmed = false;
    doDim(false);
    // disable screen saver
    restoreScreen();
    // will schedule periodic weather fetch
    refreshAll();
    setWakeLock(mPluggedIn);
    scheduleScreenSaver();
    final boolean launchedFromDock = getIntent().hasCategory(Intent.CATEGORY_DESK_DOCK);
    if (supportsWeather() && launchedFromDock && !mLaunchedFromDock) {
        // policy: fetch weather if launched via dock connection
        if (DEBUG)
            Log.d(LOG_TAG, "Device now docked; forcing weather to refresh right now");
        requestWeatherDataFetch();
    }
    mLaunchedFromDock = launchedFromDock;
}
