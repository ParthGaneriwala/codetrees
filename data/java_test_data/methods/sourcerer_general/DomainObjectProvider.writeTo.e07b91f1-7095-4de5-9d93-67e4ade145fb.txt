public void writeTo(Object entity, Class<?> aClass, Type type, Annotation[] annotations, MediaType mediaType, MultivaluedMap<String, Object> headers, OutputStream outputStream) throws IOException, WebApplicationException {
    if (entity == null) {
        logger.warning("Entity is null");
        return;
    }
    if (entity instanceof Contact) {
        ContactInfo cInfo = contactToContactInfo((Contact) entity);
        MessageBodyWriter<ContactInfo> p = providers.getMessageBodyWriter(ContactInfo.class, aClass, annotations, mediaType);
        p.writeTo(cInfo, ContactInfo.class, ContactInfo.class, annotations, mediaType, headers, outputStream);
    } else if (entity instanceof ContactBag) {
        ContactBag bag = (ContactBag) entity;
        ContactInfos cInfos = new ContactInfos();
        List<BContactInfo> bInfos = cInfos.getContact();
        for (Contact contact : bag) {
            BContactInfo bInfo = contactToBContactInfo(contact);
            bInfos.add(bInfo);
        }
        MessageBodyWriter<ContactInfos> p = providers.getMessageBodyWriter(ContactInfos.class, aClass, annotations, mediaType);
        p.writeTo(cInfos, ContactInfos.class, ContactInfos.class, annotations, mediaType, headers, outputStream);
    } else if (entity instanceof Document) {
        XDocumentInfo dInfo = documentToXDocumentInfo((Document) entity);
        MessageBodyWriter<XDocumentInfo> p = providers.getMessageBodyWriter(XDocumentInfo.class, aClass, annotations, mediaType);
        p.writeTo(dInfo, XDocumentInfo.class, XDocumentInfo.class, annotations, mediaType, headers, outputStream);
    } else if (entity instanceof DocumentBag) {
        DocumentBag bag = (DocumentBag) entity;
        DocumentInfos documentInfos = new DocumentInfos();
        List<DocumentInfo> infos = documentInfos.getDocument();
        for (Document document : bag) {
            DocumentInfo bInfo = documentToDocumentInfo(document);
            infos.add(bInfo);
        }
        MessageBodyWriter<DocumentInfos> p = providers.getMessageBodyWriter(DocumentInfos.class, aClass, annotations, mediaType);
        p.writeTo(documentInfos, DocumentInfos.class, DocumentInfos.class, annotations, mediaType, headers, outputStream);
    } else if (entity instanceof Note) {
        NoteInfo noteInfo = noteToNoteInfo((Note) entity);
        MessageBodyWriter<NoteInfo> p = providers.getMessageBodyWriter(NoteInfo.class, aClass, annotations, mediaType);
        p.writeTo(noteInfo, NoteInfo.class, NoteInfo.class, annotations, mediaType, headers, outputStream);
    } else if (entity instanceof NoteBag) {
        NoteBag bag = (NoteBag) entity;
        NoteInfos noteInfos = new NoteInfos();
        List<BNoteInfo> infos = noteInfos.getNote();
        for (Note note : bag) {
            BNoteInfo bInfo = noteToBNoteInfo(note);
            infos.add(bInfo);
        }
        MessageBodyWriter<NoteInfos> p = providers.getMessageBodyWriter(NoteInfos.class, aClass, annotations, mediaType);
        p.writeTo(noteInfos, NoteInfos.class, NoteInfos.class, annotations, mediaType, headers, outputStream);
    } else if (entity instanceof Firm) {
        FirmInfo firmInfo = firmToFirmInfo((Firm) entity);
        MessageBodyWriter<FirmInfo> p = providers.getMessageBodyWriter(FirmInfo.class, aClass, annotations, mediaType);
        p.writeTo(firmInfo, FirmInfo.class, FirmInfo.class, annotations, mediaType, headers, outputStream);
    } else if (entity instanceof FirmBag) {
        FirmBag bag = (FirmBag) entity;
        FirmInfos firmInfos = new FirmInfos();
        List<BFirmInfo> infos = firmInfos.getFirms();
        for (Firm firm : bag) {
            BFirmInfo bInfo = firmToBFirmInfo(firm);
            infos.add(bInfo);
        }
        MessageBodyWriter<FirmInfos> p = providers.getMessageBodyWriter(FirmInfos.class, aClass, annotations, mediaType);
        p.writeTo(firmInfos, FirmInfos.class, FirmInfos.class, annotations, mediaType, headers, outputStream);
    }
}
