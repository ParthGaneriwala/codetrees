public String atualizarUsuario() {
    // if(usuario.getNuUsuario().equals(1L)){
    // return ILEGAL_ACTION;
    // }
    Usuario usuarioLogado = getUsuarioLogado();
    try {
        if (usuario.getNuHierarquia() < usuarioLogado.getNuHierarquia()) {
            usuarioLogado.addActionError("N&atilde;o &eacute; poss&iacute;vel alterar um usu&aacute;rio para uma hierarquia maior que a sua atual.");
            return INPUT;
        }
        Usuario usuarioBanco = usuarioDao.select(usuario.getNuUsuario());
        if (usuarioBanco.getNuUsuario().equals(1L) && !usuarioLogado.getNuUsuario().equals(1L)) {
            usuarioLogado = usuarioDao.select(usuarioLogado.getNuUsuario());
            usuarioLogado.setCoAtivo(false);
            usuarioDao.update(usuarioLogado);
            mensagem = "Usu&aacute;rio ID " + usuarioLogado.getNuUsuario() + " tentou atualizar o root do sistema e foi desabilitado.";
            logDao.addLog(usuarioLogado, mensagem);
            limparSessao();
            usuarioLogado.addActionError(getText("label.comando_ilegal"));
            return FAZER_LOGIN;
        }
        usuario.setDtCriacao(usuarioBanco.getDtCriacao());
        usuario.setCoSenha(usuarioBanco.getCoSenha());
        usuario.setCoAtivo(usuarioBanco.isCoAtivo());
        // faz o tratamento de senha do usuario
        verificarCampos();
        Date agora = new Date();
        usuario.setDtAlteracao(agora);
        usuario.setListSitio(new ArrayList<Sitio>());
        // L�gica de escolha de sitios
        if (arraySitios != null && arraySitios.length > 0) {
            // Remove da lista de sitios do usuario os sitios antigos
            usuario.setListSitio(new ArrayList<Sitio>());
            // Adiciona os sitios marcados no checkbox e insere respectivos privilegios
            for (String sitio : arraySitios) {
                Sitio sitioAtual = sitioDao.select(Long.parseLong(sitio));
                Privilegio privilegio;
                try {
                    privilegio = privilegioDao.select(usuario, sitioAtual);
                } catch (Exception e) {
                    privilegio = new Privilegio();
                }
                if (getRequest().getParameter(sitio + "_perfil") != null) {
                    long nuPerfil = Long.parseLong(getRequest().getParameter(sitio + "_perfil"));
                    privilegio.setPerfil(perfilDao.select(nuPerfil));
                }
                if (getRequest().getParameter(sitio + "_setor") != null) {
                    long nuSetor = Long.parseLong(getRequest().getParameter(sitio + "_setor"));
                    privilegio.setSetor(setorDao.select(nuSetor));
                }
                privilegio.setSitio(sitioAtual);
                privilegio.setUsuario(usuario);
                privilegioDao.update(privilegio);
                usuario.getListSitio().add(sitioAtual);
            }
        }
        usuarioDao.update(usuario);
        mensagem = "Usu&aacute;rio atualizado." + " [ " + usuario.getNoUsuario() + " ] .";
        usuarioLogado.addActionMessage("Usu&aacute;rio atualizado com sucesso.");
        logDao.addLog(usuarioLogado, mensagem);
        // Atualizar sitios sessao ap�s alterar o pr�prio perfil
        if (usuario.getNuUsuario().equals(usuarioLogado.getNuUsuario())) {
            usuario.setSetor(usuarioLogado.getSetor());
            usuario.setPerfil(usuarioLogado.getPerfil());
            getRequest().getSession().setAttribute(LoginInterceptor.USER_HANDLE, usuario);
            if (usuario.getListSitio().size() >= 1) {
                if (usuarioLogado.getListSitio().size() == 0)
                    getRequest().getSession().setAttribute(Super.SITIO_LOGADO, usuario.getListSitio().get(0));
            } else {
                getRequest().getSession().setAttribute(Super.SITIO_LOGADO, null);
            }
        }
        // Recarrega as informacoes do usuario
        carregarUsuario();
        return SUCCESS;
    } catch (ErroValidacaoException e) {
        usuarioLogado.addActionMessage(e.getMessage());
        // Recarrega as informacoes do usuario
        carregarUsuario();
    } catch (Exception e) {
        usuarioLogado.addActionMessage(e.getMessage());
        // Recarrega as informacoes do usuario
        carregarUsuario();
        logger.error("Erro ao atualizar o usuario " + usuario, e);
    }
    return INPUT;
}
