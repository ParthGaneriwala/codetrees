private void parseBlock(AST firstChild, PrintWriter ps) {
    boolean empty = true;
    for (AST chld = firstChild; chld != null; chld = chld.getNextSibling()) {
        switch(chld.getType()) {
            case BlockGrammarParserTokenTypes.OR:
                if (empty) {
                    ps.print(" { res = IBlock.NULL; }");
                }
                ps.println();
                ps.print("        | ");
                break;
            case BlockGrammarParserTokenTypes.NOT_INCL:
                ps.print(chld.getFirstChild());
                ps.print(" ");
                break;
            case BlockGrammarParserTokenTypes.MULTI:
            case BlockGrammarParserTokenTypes.MAY:
            case BlockGrammarParserTokenTypes.PLUS:
                empty = false;
                ps.print("(");
                parseBlock(chld.getFirstChild(), ps);
                ps.print(")");
                ps.print(chld.getText());
                if (chld.getNextSibling() == null || chld.getNextSibling().getType() == BlockGrammarParserTokenTypes.OR) {
                    ps.print("{");
                    putReturnCode(ps);
                }
                break;
            case BlockGrammarParserTokenTypes.ID:
                if (isTerminal(chld.getText())) {
                    ps.print("i" + iindex + " : " + chld.getText() + " {");
                    ps.print("c.add(pblock(BlockTypes." + realTypes.get(chld.getText()).toUpperCase() + ", i" + iindex + "));");
                    iindex++;
                } else {
                    ps.print("a1 = ");
                    ps.print(chld.getText());
                    ps.print("{c.add(a1); ");
                }
                if (chld.getNextSibling() == null || chld.getNextSibling().getType() == BlockGrammarParserTokenTypes.OR) {
                    putReturnCode(ps);
                } else {
                    ps.print('}');
                }
                empty = false;
                break;
            default:
                empty = false;
                ps.print(chld.getText());
                ps.print(" ");
        }
    }
}
