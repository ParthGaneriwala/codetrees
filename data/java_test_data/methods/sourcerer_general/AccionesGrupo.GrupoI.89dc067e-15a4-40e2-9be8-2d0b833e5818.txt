public ActionForward GrupoI(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    // Salidas
    final String SALIDA_0 = "grupo";
    String salida = SALIDA_0;
    Session s = HibernateUtil.getSessionFactory().getCurrentSession();
    Transaction tr = s.beginTransaction();
    try {
        String id = request.getParameter("idGrupo");
        Long idGrupo = (id == null) ? (Long) request.getSession().getAttribute("idGrupo") : new Long(id);
        HttpSession sess = request.getSession();
        FGrupo fFGrupo = (FGrupo) sess.getAttribute("FGrupo");
        if (fFGrupo == null) {
            fFGrupo = new FGrupo();
            sess.setAttribute("FGrupo", fFGrupo);
        } else {
            fFGrupo.reset(mapping, request);
        }
        Grupo grupo = (Grupo) s.load(Grupo.class, idGrupo);
        fFGrupo.setIdGrupo(grupo.getIdGrupo());
        fFGrupo.setPlanDeEstudios(grupo.getPlanDeEstudios().getIdPlan());
        fFGrupo.setNombre(grupo.getNombre());
        fFGrupo.setPrioridad(grupo.getPrioridad());
        request.getSession().setAttribute("prioridad", grupo.getPrioridad());
        for (Requisitos _Requisitos : grupo.getRequisitos()) {
            Hibernate.initialize(_Requisitos.getAsignatura());
        }
        request.setAttribute("L_Requisitos", grupo.getRequisitos());
        request.getSession().setAttribute("idPlan", grupo.getPlanDeEstudios().getIdPlan());
        request.getSession().setAttribute("idGrupo", idGrupo);
        tr.commit();
    } catch (Exception ex) {
        tr.rollback();
        throw ex;
    }
    return mapping.findForward(salida);
}
