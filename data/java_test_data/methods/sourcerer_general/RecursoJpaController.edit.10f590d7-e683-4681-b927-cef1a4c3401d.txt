public void edit(Recurso recurso) throws NonexistentEntityException, Exception {
    EntityManager em = null;
    try {
        em = getEntityManager();
        em.getTransaction().begin();
        Recurso persistentRecurso = em.find(Recurso.class, recurso.getId());
        Concurso concursoOld = persistentRecurso.getConcurso();
        Concurso concursoNew = recurso.getConcurso();
        List<Parecer> parecerOld = persistentRecurso.getParecer();
        List<Parecer> parecerNew = recurso.getParecer();
        if (concursoNew != null) {
            concursoNew = em.getReference(concursoNew.getClass(), concursoNew.getId());
            recurso.setConcurso(concursoNew);
        }
        List<Parecer> attachedParecerNew = new ArrayList<Parecer>();
        for (Parecer parecerNewParecerToAttach : parecerNew) {
            parecerNewParecerToAttach = em.getReference(parecerNewParecerToAttach.getClass(), parecerNewParecerToAttach.getId());
            attachedParecerNew.add(parecerNewParecerToAttach);
        }
        parecerNew = attachedParecerNew;
        recurso.setParecer(parecerNew);
        recurso = em.merge(recurso);
        if (concursoOld != null && !concursoOld.equals(concursoNew)) {
            concursoOld.getRecursos().remove(recurso);
            concursoOld = em.merge(concursoOld);
        }
        if (concursoNew != null && !concursoNew.equals(concursoOld)) {
            concursoNew.getRecursos().add(recurso);
            concursoNew = em.merge(concursoNew);
        }
        for (Parecer parecerOldParecer : parecerOld) {
            if (!parecerNew.contains(parecerOldParecer)) {
                parecerOldParecer.setRecurso(null);
                parecerOldParecer = em.merge(parecerOldParecer);
            }
        }
        for (Parecer parecerNewParecer : parecerNew) {
            if (!parecerOld.contains(parecerNewParecer)) {
                Recurso oldRecursoOfParecerNewParecer = parecerNewParecer.getRecurso();
                parecerNewParecer.setRecurso(recurso);
                parecerNewParecer = em.merge(parecerNewParecer);
                if (oldRecursoOfParecerNewParecer != null && !oldRecursoOfParecerNewParecer.equals(recurso)) {
                    oldRecursoOfParecerNewParecer.getParecer().remove(parecerNewParecer);
                    oldRecursoOfParecerNewParecer = em.merge(oldRecursoOfParecerNewParecer);
                }
            }
        }
        em.getTransaction().commit();
    } catch (Exception ex) {
        String msg = ex.getLocalizedMessage();
        if (msg == null || msg.length() == 0) {
            long id = recurso.getId();
            if (findRecurso(id) == null) {
                throw new NonexistentEntityException("The recurso with id " + id + " no longer exists.");
            }
        }
        throw ex;
    } finally {
        if (em != null) {
            em.close();
        }
    }
}
