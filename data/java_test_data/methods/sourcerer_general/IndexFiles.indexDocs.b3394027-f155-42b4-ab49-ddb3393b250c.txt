private static void indexDocs(IndexWriter writer, File file) {
    if (FileUtils.isReadableDir(file))
        for (String childPath : file.list()) indexDocs(writer, new File(file, childPath));
    else if (FileUtils.isReadableFile(file)) {
        System.out.println("adding " + file);
        try {
            String fileName = file.getName().toLowerCase();
            Document tempDoc;
            if (fileName.endsWith(".pdf")) {
                PDDocument pdf = PDDocument.load(file);
                int numberOfPages = pdf.getNumberOfPages();
                pdf.close();
                pdf = null;
                for (int i = 1; i <= numberOfPages; i++) {
                    tempDoc = PDFDocumentUtils.getLuceneDocument(file, i);
                    storeParsedPath(tempDoc);
                    writer.addDocument(tempDoc);
                }
            } else if (fileName.endsWith(".chm")) {
                CHMDecompiler decompiler = new CHMDecompiler(file);
                for (File f : decompiler.getHTMLFiles()) {
                    tempDoc = CHMDocumentUtils.getLuceneDocument(file, f);
                    storeParsedPath(tempDoc);
                    writer.addDocument(tempDoc);
                }
                decompiler.close();
            } else if (fileName.endsWith(".html") || fileName.endsWith(".htm")) {
                tempDoc = HTMLDocumentUtils.getLuceneDocument(file);
                storeParsedPath(tempDoc);
                writer.addDocument(tempDoc);
            } else if (fileName.endsWith(".txt") || fileName.endsWith(".text")) {
                tempDoc = TextDocumentUtils.getLuceneDocument(file);
                storeParsedPath(tempDoc);
                writer.addDocument(tempDoc);
            }
        } catch (Exception e) {
            try {
                System.out.println("Error occurred indexing " + file.getCanonicalPath());
            } catch (IOException e1) {
            }
        }
    }
}
