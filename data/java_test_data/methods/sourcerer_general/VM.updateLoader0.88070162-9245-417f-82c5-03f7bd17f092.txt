private void updateLoader0() {
    this.log.println("Source code has changed, server has been updated!");
    final ClassLoader parentLoader = this.getClass().getClassLoader();
    ClassPool proxyPool = JavassistBootloader.getProxyPool();
    vmPool = new LoggedClassPool(proxyPool);
    /* define locations in which rewritable .class files are */
    try {
        if (Executions.getCurrent() != null) {
            logger.info("(" + localRoot.getPath() + ") Adding /WEB-INF/pagelib/ to classpath");
            vmPool.appendClassPath(Executions.getCurrent().getDesktop().getWebApp().getRealPath("/WEB-INF/pagelib/") + "*");
        }
        logger.info("(" + localRoot.getPath() + ") Adding local directory to classpath");
        vmPool.appendClassPath(localRoot.getAbsolutePath());
        logger.info("(" + localRoot.getPath() + ") Adding local directory jars to classpath");
        vmPool.appendClassPath(localRoot + File.separator + "*");
        logger.info("(" + localRoot.getPath() + ") Adding classes directory within the local directory to classpath");
        vmPool.appendClassPath(localRoot + File.separator + "classes" + File.separator + "*");
        logger.info("(" + localRoot.getPath() + ") Adding System classpath to classpath");
        vmPool.appendSystemPath();
    } catch (NotFoundException e) {
        logger.error("Class pool could not initialize because of missing directories", e);
    }
    vmPool.logUpdate();
    /* always attempt to delegate to parent first */
    vmLoader = new Loader(parentLoader, vmPool) {

        protected Class<?> loadClassByDelegation(String clazzName) throws ClassNotFoundException {
            if (clazzName.startsWith("_test.")) {
                return null;
            }
            try {
                return delegateToParent(clazzName);
            } catch (ClassNotFoundException ncdef) {
                return null;
            }
        }
    };
    loaderStamp = Calendar.getInstance().getTime().toString();
    try {
        JavassistBootloader.translateClasses(vmLoader, vmPool);
    } catch (MalformedConfigurationException e) {
        logger.error("Configuration problem in Javassist config", e);
    }
    runLoaderListeners();
}
