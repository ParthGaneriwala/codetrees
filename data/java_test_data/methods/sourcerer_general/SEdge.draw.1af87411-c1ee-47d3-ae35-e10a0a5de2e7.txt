public void draw(Graphics g, Schematic schematic) {
    int index;
    int lastx = 0, lasty = 0, currx = 0, curry = 0;
    Point p;
    Graphics2D g2d;
    SNode node;
    SNodeTerminal terminal;
    CLine segment;
    Point intp;
    if (aa) {
        g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    }
    if (selected) {
        g.setColor(schematic.selection_color);
    } else {
        g.setColor(Color.yellow);
    }
    if (head != null) {
        /*
             * If head is a node terminal, make sure to clip this edge at the
             * node bounds if the node wants its edges clipped
             */
        if (head instanceof SNodeTerminal) {
            terminal = (SNodeTerminal) head;
            node = terminal.parent;
            if (node.clip_edges) {
                intp = nodeIntersection(node, 0);
                if (intp != null) {
                    lastx = intp.x;
                    lasty = intp.y;
                } else {
                    /*
                         * This should be an extremely rare case!
                         */
                    lastx = sch.c2s(point(head).x);
                    lasty = sch.c2s(point(head).y);
                }
            } else {
                lastx = sch.c2s(point(head).x);
                lasty = sch.c2s(point(head).y);
            }
        } else {
            lastx = sch.c2s(point(head).x);
            lasty = sch.c2s(point(head).y);
        }
    }
    for (index = 0; index < body.size(); index++) {
        p = (Point) body.get(index);
        currx = sch.c2s(p.x);
        curry = sch.c2s(p.y);
        g.drawLine(lastx, lasty, currx, curry);
        lastx = currx;
        lasty = curry;
    }
    /*
         * If tail is null then it can only mean that this is a newly formed 
         * edge that is still being created, and the 'temp' point that is being
         * updated by mouse move should be used as the tail point.
         */
    if (tail != null) {
        /*
             * If tail is a node terminal, make sure to clip this edge at the
             * node bounds if the node wants its edges clipped
             */
        if (tail instanceof SNodeTerminal) {
            terminal = (SNodeTerminal) tail;
            node = terminal.parent;
            if (node.clip_edges) {
                intp = nodeIntersection(node, body.size());
                if (intp != null) {
                    currx = intp.x;
                    curry = intp.y;
                } else {
                    /*
                         * This should be an extremely rare case!
                         */
                    currx = sch.c2s(point(tail).x);
                    curry = sch.c2s(point(tail).y);
                }
            } else {
                currx = sch.c2s(point(tail).x);
                curry = sch.c2s(point(tail).y);
            }
        } else {
            currx = sch.c2s(point(tail).x);
            curry = sch.c2s(point(tail).y);
        }
        g.drawLine(lastx, lasty, currx, curry);
    } else if (temp.x >= 0) {
        currx = sch.c2s(temp.x);
        curry = sch.c2s(temp.y);
        g.drawLine(lastx, lasty, currx, curry);
    }
}
