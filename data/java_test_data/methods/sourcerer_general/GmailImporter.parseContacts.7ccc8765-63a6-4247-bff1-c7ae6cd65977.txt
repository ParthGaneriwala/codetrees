public List<Contact> parseContacts() throws ContactsException {
    try {
        retainCookies(new String[] { "SID" });
        String json = doGet(contactsUrl, "");
        String startTag = "&&&START&&&";
        String endTag = "&&&END&&&";
        json = json.substring(json.indexOf(startTag) + startTag.length(), json.indexOf(endTag));
        JSONTokener jsonTokener = new JSONTokener(json);
        Object o = jsonTokener.nextValue();
        JSONObject jsonObj = (JSONObject) o;
        jsonObj = jsonObj.getJSONObject("Body");
        JSONArray jsonContacts = jsonObj.getJSONArray("Contacts");
        List<Contact> contacts = new ArrayList<Contact>(jsonContacts.length());
        for (int i = 0; i < jsonContacts.length(); i++) {
            jsonObj = jsonContacts.getJSONObject(i);
            String name = null;
            if (jsonObj.has("Name"))
                name = jsonObj.getString("Name");
            if (jsonObj.has("Emails")) {
                JSONArray emails = jsonObj.getJSONArray("Emails");
                for (int j = 0; j < emails.length(); j++) {
                    jsonObj = emails.getJSONObject(j);
                    if (jsonObj.has("Address")) {
                        String email = jsonObj.getString("Address");
                        if (name == null || name.length() == 0)
                            name = email.substring(0, email.indexOf("@"));
                        email = email.toLowerCase();
                        if (isEmailAddress(email))
                            contacts.add(new Contact(name, email));
                    }
                }
            }
        }
        return contacts;
    } catch (Exception e) {
        throw new ContactsException("Gmail protocol has changed", e);
    }
}
