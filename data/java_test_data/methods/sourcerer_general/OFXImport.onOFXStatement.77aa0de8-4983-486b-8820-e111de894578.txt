public void onOFXStatement(OFXStatement ofxStatement) {
    System.out.println("statement ready: " + ofxStatement);
    ImportedStatement statement = new ImportedStatement();
    ImportedAccount destination = new ImportedAccount();
    OFXAccount bankAccount = ofxStatement.getFromAccount();
    if (bankAccount != null) {
        if (bankAccount.getAccountName() != null)
            destination.setName(bankAccount.getAccountId() + " " + bankAccount.getAccountName());
        else
            destination.setName(bankAccount.getAccountId());
    // destination.setId(Integer.parseInt(bankAccount.getAccountId()));
    }
    statement.setAccount(destination);
    // process all imported transactions
    // use a temporary id to identify entries
    int fakeId = 0;
    for (OFXTransaction t : ofxStatement.getTransactions()) {
        ImportedEntry e = new ImportedEntry();
        e.setAmount(t.getAmount());
        e.setMemo(t.getMemo());
        e.setAccount(destination);
        // usually bank statements have the oposite type of entries
        switch(t.getTransactionType()) {
            case DIV:
            case DEP:
            case CREDIT:
            case DIRECTDEP:
                e.setType(EntryTypes.CREDIT);
                e.setAmount(t.getAmount());
                break;
            case CHECK:
            case DEBIT:
            case DIRECTDEBIT:
            case FEE:
            case SRVCHG:
            case PAYMENT:
                e.setType(EntryTypes.DEBIT);
                e.setAmount(t.getAmount());
                break;
            case INT:
            case ATM:
                if (t.getAmount().floatValue() < 0) {
                    // if the amount is negative this is a credit
                    e.setType(EntryTypes.DEBIT);
                    e.setAmount(t.getAmount().multiply(new BigDecimal(-1)));
                } else {
                    e.setType(EntryTypes.CREDIT);
                    e.setAmount(t.getAmount());
                }
                break;
            case XFER:
                e.setType(EntryTypes.DEBIT);
                e.setAmount(t.getAmount());
                break;
            case REPEATPMT:
                e.setType(EntryTypes.DEBIT);
                e.setAmount(t.getAmount());
                break;
            case OTHER:
                e.setType(EntryTypes.DEBIT);
                e.setAmount(t.getAmount());
                break;
        }
        e.setId(++fakeId);
        if (e.getMemo() != null)
            // + " (" + t.getTransactionType() + ")");
            e.setMemo(t.getMemo());
        else
            e.setMemo(t.getName());
        e.setDate(t.getDatePosted());
        statement.addEntry(e);
    }
    // alert the listener that a new statement is ready
    if (handler != null) {
        handler.onImportStatement(statement);
    }
}
