public void testClobC() {
    try {
        String ddl0 = "DROP TABLE VARIABLE IF EXISTS";
        String ddl1 = "CREATE TABLE VARIABLE (stateid varchar(128), varid numeric(16,0), " + "scalabilitypassivated char(1) DEFAULT 'N', value clob (2G), scopeguid varchar(128)," + "primary key (stateid, varid, scalabilitypassivated, scopeguid))";
        statement.execute(ddl0);
        statement.execute(ddl1);
    } catch (SQLException e) {
    }
    try {
        String dml0 = "INSERT INTO VARIABLE VALUES (?, ?, 'N', ?, ?)";
        String dml1 = "UPDATE VARIABLE SET value = ? WHERE stateid = ? AND " + "varid = ? AND scalabilitypassivated = 'N' AND scopeguid = ?";
        PreparedStatement ps = connection.prepareStatement(dml0);
        // 
        String resourceFileName = "/org/hsqldb/resources/lob-schema.sql";
        InputStreamReader reader = null;
        try {
            InputStream fis = getClass().getResourceAsStream(resourceFileName);
            reader = new InputStreamReader(fis, "ISO-8859-1");
        } catch (Exception e) {
        }
        ps.setString(1, "test-id-1");
        ps.setLong(2, 23456789123456L);
        ps.setCharacterStream(3, reader, 1000);
        ps.setString(4, "test-scope-1");
        ps.executeUpdate();
        try {
            InputStream fis = getClass().getResourceAsStream(resourceFileName);
            fis = getClass().getResourceAsStream(resourceFileName);
            reader = new InputStreamReader(fis, "ISO-8859-1");
            for (int i = 0; i < 100; i++) {
                reader.read();
            }
        } catch (Exception e) {
        }
        // 
        ps.setString(1, "test-id-2");
        ps.setLong(2, 23456789123457L);
        ps.setCharacterStream(3, reader, 100);
        ps.setString(4, "test-scope-2");
        ps.addBatch();
        ps.setString(1, "test-id-3");
        ps.setLong(2, 23456789123458L);
        ps.setCharacterStream(3, reader, 100);
        ps.setString(4, "test-scope-3");
        ps.addBatch();
        int[] results = ps.executeBatch();
        // 
        try {
            InputStream fis = getClass().getResourceAsStream(resourceFileName);
            fis = getClass().getResourceAsStream(resourceFileName);
            reader = new InputStreamReader(fis, "ISO-8859-1");
            for (int i = 0; i < 100; i++) {
                reader.read();
            }
        } catch (Exception e) {
        }
        ps = connection.prepareStatement(dml1);
        ps.setCharacterStream(1, reader, 500);
        ps.setString(2, "test-id-1");
        ps.setLong(3, 23456789123456L);
        ps.setString(4, "test-scope-1");
        ps.executeUpdate();
        ps.close();
    } catch (SQLException e) {
        e.printStackTrace();
        fail("test failure");
    }
}
