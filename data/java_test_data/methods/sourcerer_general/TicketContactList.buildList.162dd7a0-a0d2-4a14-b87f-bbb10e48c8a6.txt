public void buildList(Connection db) throws SQLException {
    PreparedStatement pst = null;
    ResultSet rs;
    int items = -1;
    StringBuffer sqlSelect = new StringBuffer();
    StringBuffer sqlCount = new StringBuffer();
    StringBuffer sqlFilter = new StringBuffer();
    StringBuffer sqlOrder = new StringBuffer();
    // Need to build a base SQL statement for counting records
    sqlCount.append("SELECT COUNT(*) AS recordcount " + "FROM ticket_contacts tc " + "WHERE tc.id > -1 ");
    createFilter(sqlFilter);
    if (pagedListInfo == null) {
        pagedListInfo = new PagedListInfo();
        pagedListInfo.setItemsPerPage(-1);
    }
    // Get the total number of records matching filter
    pst = db.prepareStatement(sqlCount.toString() + sqlFilter.toString());
    items = prepareFilter(pst);
    rs = pst.executeQuery();
    if (rs.next()) {
        int maxRecords = rs.getInt("recordcount");
        pagedListInfo.setMaxRecords(maxRecords);
    }
    rs.close();
    pst.close();
    // Determine column to sort by
    pagedListInfo.setDefaultSort("tc.contact_name", null);
    pagedListInfo.appendSqlTail(db, sqlOrder);
    // Need to build a base SQL statement for returning records
    if (pagedListInfo != null) {
        pagedListInfo.appendSqlSelectHead(db, sqlSelect);
    } else {
        sqlSelect.append("SELECT ");
    }
    sqlSelect.append("tc.* " + "FROM ticket_contacts tc " + "WHERE tc.id > -1 ");
    pst = db.prepareStatement(sqlSelect.toString() + sqlFilter.toString() + sqlOrder.toString());
    items = prepareFilter(pst);
    rs = pst.executeQuery();
    if (pagedListInfo != null) {
        pagedListInfo.doManualOffset(db, rs);
    }
    int count = 0;
    while (rs.next()) {
        if (pagedListInfo != null && pagedListInfo.getItemsPerPage() > 0 && DatabaseUtils.getType(db) == DatabaseUtils.MSSQL && count >= pagedListInfo.getItemsPerPage()) {
            break;
        }
        ++count;
        TicketContact thisRecord = new TicketContact(rs);
        this.add(thisRecord);
    }
    rs.close();
    pst.close();
    // Get the details
    Iterator i = this.iterator();
    while (i.hasNext()) {
        TicketContact contact = (TicketContact) i.next();
        contact.buildName(db);
    }
}
