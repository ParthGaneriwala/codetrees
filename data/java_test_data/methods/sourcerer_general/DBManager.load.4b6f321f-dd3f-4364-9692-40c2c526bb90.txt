public static void load(DetallePedido pedido) {
    Connection conn = getConnection();
    PreparedStatement statement = null;
    ResultSet rs = null;
    try {
        String query = "select p.id as id, c.razon_social as razonsocial, s.persona_contacto as personacontacto, " + "p.fecha_entrega::date as fechaentrega, EXTRACT(MINUTE FROM fecha_entrega_real) as minutos, EXTRACT(HOUR FROM fecha_entrega_real) as hora, " + "c.telefono as telefono, c.direccion as direccion, " + "c.localidad as localidad, c.codigo_postal as codigopostal, s.calle as calle, s.numero as numero " + "from pedido as p " + "inner join cliente as c on p.cliente_id = c.id " + "inner join sucursal as s on p.sucursal_envio_id = s.id " + "where p.id = ? ";
        log.info(query);
        statement = conn.prepareStatement(query);
        statement.setInt(1, pedido.getId());
        rs = statement.executeQuery();
        rs.next();
        pedido.setId(rs.getInt("id"));
        pedido.setRazonSocial(rs.getString("razonsocial"));
        pedido.setPersonaContacto(rs.getString("personacontacto"));
        pedido.setFechaDeEntrega(rs.getDate("fechaentrega").toString());
        pedido.setHoraDeEntrega(rs.getInt("hora") + ":" + rs.getInt("minutos"));
        pedido.setTelefono(rs.getString("telefono"));
        pedido.setCalle(rs.getString("calle"));
        pedido.setNumero(rs.getInt("numero"));
        pedido.setLocalidad(rs.getString("localidad"));
        pedido.setCodigoPostal(rs.getString("codigopostal"));
    } catch (SQLException e) {
        e.printStackTrace();
    } finally {
        try {
            rs.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        try {
            statement.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        try {
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
