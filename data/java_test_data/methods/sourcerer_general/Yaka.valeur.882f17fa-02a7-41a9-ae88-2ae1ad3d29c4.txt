public static final void valeur() throws ParseException {
    switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
        case entier:
            jj_consume_token(entier);
            expression.empileType(T_ENTIER);
            yvm.iconst(YakaTokenManager.entierLu);
            break;
        case ident:
            jj_consume_token(ident);
            expression.empileTypeIdent(YakaTokenManager.identLu);
            try {
                if (tabIdent.chercheIdent(YakaTokenManager.identLu).getClass().toString().equals("class IdVar"))
                    yvm.iload(((IdVar) (tabIdent.chercheIdent(YakaTokenManager.identLu))).getOffset());
                else if (tabIdent.chercheIdent(YakaTokenManager.identLu).getClass().toString().equals("class IdConst")) {
                    yvm.iconst(((IdConst) (tabIdent.chercheIdent(YakaTokenManager.identLu))).getValeur());
                } else if (tabIdent.chercheIdent(YakaTokenManager.identLu).getClass().toString().equals("class IdParam")) {
                    yvm.iload(((IdParam) (tabIdent.chercheIdent(YakaTokenManager.identLu))).getOffset());
                } else if (tabIdent.chercheIdent(YakaTokenManager.identLu).getClass().toString().equals("class IdFun")) {
                    expression.debutFonction(YakaTokenManager.identLu);
                    {
                        yvm.reserveRetour();
                    }
                }
            } catch (TabIdentException e) {
                Erreur.erreur(e.getMessage());
            }
            switch((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
                case 43:
                    argumentsFonction();
                    expression.finAppelFonction();
                    break;
                default:
                    jj_la1[15] = jj_gen;
                    ;
            }
            break;
        case VRAI:
            jj_consume_token(VRAI);
            expression.empileType(T_BOOL);
            yvm.iconst(vrai);
            break;
        case FAUX:
            jj_consume_token(FAUX);
            expression.empileType(T_BOOL);
            yvm.iconst(faux);
            break;
        default:
            jj_la1[16] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
    }
}
