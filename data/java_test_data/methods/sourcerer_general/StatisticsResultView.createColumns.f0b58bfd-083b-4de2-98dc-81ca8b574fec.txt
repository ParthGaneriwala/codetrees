private void createColumns() {
    TreeViewerColumn elementNameColumn = new TreeViewerColumn(viewer, SWT.NONE);
    elementNameColumn.getColumn().setText("Element");
    elementNameColumn.getColumn().setWidth(200);
    elementNameColumn.setLabelProvider(new ColumnLabelProvider() {

        @Override
        public String getText(Object element) {
            return delegateLabelProvider.getText(element);
        }

        @Override
        public Image getImage(Object element) {
            return delegateLabelProvider.getImage(element);
        }
    });
    TreeViewerColumn linesOfAllColumn = new TreeViewerColumn(viewer, SWT.NONE);
    linesOfAllColumn.getColumn().setText("All");
    linesOfAllColumn.getColumn().setWidth(50);
    linesOfAllColumn.setLabelProvider(new ColumnLabelProvider() {

        @Override
        public String getText(Object element) {
            if (!(element instanceof IJavaElement)) {
                return "";
            // return super.getText(element);
            }
            CodeInfo info = statistician.getCodeInfo((IJavaElement) element);
            return String.valueOf(info.lines_all);
        }
    });
    TreeViewerColumn linesOfCodeColumn = new TreeViewerColumn(viewer, SWT.NONE);
    linesOfCodeColumn.getColumn().setText("Code");
    linesOfCodeColumn.getColumn().setWidth(50);
    linesOfCodeColumn.setLabelProvider(new ColumnLabelProvider() {

        @Override
        public String getText(Object element) {
            if (!(element instanceof IJavaElement)) {
                return "";
            // return super.getText(element);
            }
            CodeInfo info = statistician.getCodeInfo((IJavaElement) element);
            return String.valueOf(info.lines_code);
        }
    });
    TreeViewerColumn linesOfCommentsColumn = new TreeViewerColumn(viewer, SWT.NONE);
    linesOfCommentsColumn.getColumn().setText("Comments");
    linesOfCommentsColumn.getColumn().setWidth(70);
    linesOfCommentsColumn.setLabelProvider(new ColumnLabelProvider() {

        @Override
        public String getText(Object element) {
            if (!(element instanceof IJavaElement)) {
                return "";
            // return super.getText(element);
            }
            CodeInfo info = statistician.getCodeInfo((IJavaElement) element);
            return String.valueOf(info.lines_comment);
        }
    });
    TreeViewerColumn linesOfBlankLinesColumn = new TreeViewerColumn(viewer, SWT.NONE);
    linesOfBlankLinesColumn.getColumn().setText("Blank Lines");
    linesOfBlankLinesColumn.getColumn().setWidth(80);
    linesOfBlankLinesColumn.setLabelProvider(new ColumnLabelProvider() {

        @Override
        public String getText(Object element) {
            if (!(element instanceof IJavaElement)) {
                return "";
            // return super.getText(element);
            }
            CodeInfo info = statistician.getCodeInfo((IJavaElement) element);
            return String.valueOf(info.lines_blank);
        }
    });
}
