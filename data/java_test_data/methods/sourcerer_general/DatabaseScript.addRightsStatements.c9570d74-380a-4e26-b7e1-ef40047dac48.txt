private static void addRightsStatements(Database dDatabase, Result r) {
    StringBuffer a;
    HashMappedList userlist = dDatabase.getUserManager().getUsers();
    Iterator users = userlist.values().iterator();
    GranteeManager gm = dDatabase.getGranteeManager();
    Iterator grantees = gm.getGrantees().iterator();
    for (; users.hasNext(); ) {
        User u = (User) users.next();
        String name = u.getName();
        // grants/revokes are).  _SYSTEM user not in user list.
        if (!name.equals(Token.T_PUBLIC)) {
            addRow(r, u.getCreateUserDDL());
        }
    }
    // Therefore, we filter out the non-persisting ones.
    for (; grantees.hasNext(); ) {
        Grantee g = (Grantee) grantees.next();
        String name = g.getName();
        // _SYSTEM user, DBA Role grants/revokes not persisted
        if (name.equals("_SYSTEM") || name.equals("DBA")) {
            continue;
        }
        String roleString = g.allRolesString();
        if (roleString != null) {
            addRow(r, "GRANT " + roleString + " TO " + name);
        }
        IntValueHashMap rightsmap = g.getRights();
        if (rightsmap == null) {
            continue;
        }
        Iterator dbobjects = rightsmap.keySet().iterator();
        while (dbobjects.hasNext()) {
            Object nameobject = dbobjects.next();
            int right = rightsmap.get(nameobject, 0);
            a = new StringBuffer(64);
            a.append(Token.T_GRANT).append(' ');
            a.append(GranteeManager.getRightsList(right));
            a.append(' ').append(Token.T_ON).append(' ');
            if (nameobject instanceof String) {
                if (nameobject.equals("java.lang.Math") || nameobject.equals("org.hsqldb.Library")) {
                    continue;
                }
                a.append("CLASS \"");
                a.append((String) nameobject);
                a.append('\"');
            } else {
                HsqlName hsqlname = (HsqlName) nameobject;
                // assumes all non String objects are table names
                Table table = dDatabase.schemaManager.findUserTable(null, hsqlname.name, hsqlname.schema.name);
                // either table != null or is system table
                if (table != null) {
                    a.append(hsqlname.schema.statementName).append('.').append(hsqlname.statementName);
                } else {
                    continue;
                }
            }
            a.append(' ').append(Token.T_TO).append(' ');
            a.append(g.getName());
            addRow(r, a.toString());
        }
    }
}
