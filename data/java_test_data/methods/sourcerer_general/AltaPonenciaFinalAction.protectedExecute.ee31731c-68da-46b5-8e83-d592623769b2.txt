protected ActionForward protectedExecute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    if (isCancelled(request)) {
        return mapping.findForward("inicio");
    }
    AltaPonenciaFinalForm altaForm = (AltaPonenciaFinalForm) form;
    Usuario user = (Usuario) request.getSession(false).getAttribute("currentUser");
    log.trace("current user:" + user.getEmail());
    Ponencia ponencia = (Ponencia) request.getSession(false).getAttribute("currentPonencia");
    log.trace("current ponencia: " + ponencia.getId() + " " + altaForm.getId() + "TIPO: " + altaForm.getTipo());
    try {
        ponencia.setTipo(altaForm.getTipo());
        try {
            writeFile(altaForm.getArchivo(), directory + ponencia.getId() + ".pdf");
        } catch (IOException e) {
            log.trace("Error de entrada salida en ponencia FINAL" + ponencia.getTitulo() + " de " + ponencia.getAutor() + ": " + e.getMessage());
            // (bueno,si)
            return mapping.findForward("ioFailure");
        }
        this.getCio2005().marcaPonenciaFinal(ponencia);
        try {
            getCio2005().sendMailPonenciaFinal(user, ponencia);
        } catch (MailException e) {
            log.trace("Envio Fallido de alta a la direcci√≥n " + user.getEmail() + ":\n" + e.getMessage());
        }
        request.getSession(false).setAttribute("currentPonencia", null);
        request.setAttribute("nuevaPonencia", ponencia);
        altaForm.setTipo("ponencia");
        altaForm.setId(0);
        log.trace("restaurados campos");
    } catch (Exception e) {
        log.trace("Registro FALLIDO (Excepcion no capturada) de ponencia FINAL para" + user.getEmail() + "--" + ponencia.getTitulo() + "\n");
        log.trace(e.getMessage());
        log.trace(e.getCause());
        log.trace(e.getStackTrace());
        return mapping.findForward("dataFailure");
    }
    return mapping.findForward("success");
}
