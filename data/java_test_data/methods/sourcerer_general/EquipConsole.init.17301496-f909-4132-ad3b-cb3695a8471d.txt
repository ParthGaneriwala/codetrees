private void init() {
    try {
        BufferedImage img = ImageIO.read(new File("data/graphics/equipTab.png"));
        BufferedImage img2 = ImageIO.read(new File("data/graphics/equipHolder.png"));
        // Create a texture from your image
        ITexture tex = Binding.getInstance().getTexture(img);
        ITexture tex2 = Binding.getInstance().getTexture(img2);
        // create a pixmap from the whole texture
        Pixmap map = new Pixmap(tex);
        Pixmap map2 = new Pixmap(tex2);
        // Create a decorator
        IDecorator image = new PixmapBackground(map, true);
        IDecorator image2 = new PixmapBackground(map2, true);
        // add the decorator to the widget
        // tab = FengGUI.createButton(this, map);
        tab = new GameMenuButton(map, map, map, map, map);
        tab.getAppearance().add(image);
        tab.setShrinkable(false);
        tab.setExpandable(false);
        tab.setMinSize(map.getWidth(), map.getHeight());
        tab.setSize(map.getWidth(), map.getHeight());
        // System.out.println("Tab min dimensions: " + tab.getMinWidth() + ", " + tab.getMinHeight());
        equipMenu = FengGUI.createContainer();
        equipMenu.getAppearance().add(image2);
        equipMenu.setShrinkable(false);
        equipMenu.setExpandable(false);
        equipMenu.setMinSize(map2.getWidth(), map2.getHeight());
        equipMenu.pack();
        // System.out.println("Inv min dimensions: " + inventory.getMinWidth() + ", " + inventory.getMinHeight());
        contentContainer = FengGUI.createContainer();
        contentContainer.setShrinkable(false);
        contentContainer.setExpandable(false);
        contentContainer.setMinSize(180, 185);
        contentContainer.setSize(contentContainer.getMinSize());
        contentContainer.pack();
        sc = FengGUI.createScrollContainer(contentContainer);
        sc.setShowScrollbars(true);
        sc.setMinSize(contentContainer.getMinSize());
        equipHolder = FengGUI.createList(sc);
        LabelAppearance a = equipHolder.getAppearance();
        TextStyle ts = new TextStyle();
        ts.getTextStyleEntry(TextStyle.DEFAULTSTYLEKEY).setColor(Color.WHITE);
        a.addStyle(TextStyle.DEFAULTSTYLEKEY, ts);
        equipHolder.getAppearance().add(new PlainBackground(Color.BLACK));
        equipHolder.getAppearance().removeAll();
        equipHolder.addItem(new Item("", getNewPixmap(), a), new Item("", getNewPixmap(), a), new Item("", getNewPixmap(), a), new Item("", getNewPixmap(), a), new Item("", getNewPixmap(), a), new Item("", getNewPixmap(), a), new Item("", getNewPixmap(), a), new Item("", getNewPixmap(), a), new Item("", getNewPixmap(), a), new Item("", getNewPixmap(), a), new Item("", getNewPixmap(), a), new Item("", getNewPixmap(), a));
        sc.scrollVertical(1);
        sc.layout();
        this.addWidget(tab);
        this.addWidget(equipMenu);
        this.addWidget(contentContainer);
        this.setMinSize(map2.getWidth(), map.getHeight() + map2.getHeight());
        this.setSize(this.getSize());
        this.setExpandable(false);
        this.setShrinkable(false);
        this.pack();
    } catch (IOException e) {
        System.out.println("ERROR LOADING IMAGES IN INVENTORY CONSOLE");
    }
}
