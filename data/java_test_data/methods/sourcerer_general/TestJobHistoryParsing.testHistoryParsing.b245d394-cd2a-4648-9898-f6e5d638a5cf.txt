public void testHistoryParsing() throws IOException {
    // open a test history file
    Path historyDir = new Path(System.getProperty("test.build.data", "."), "history");
    FileSystem fs = FileSystem.getLocal(new JobConf());
    if (!fs.mkdirs(historyDir)) {
        fail("Failed to create history directory");
    }
    Path historyLog = new Path(historyDir, "testlog");
    PrintWriter out = new PrintWriter(fs.create(historyLog));
    historyWriter.add(out);
    // log keys and values into history
    String value1 = "Value has equal=to, \"quotes\" and spaces in it";
    String value2 = "Value has \n new line \n and " + "dot followed by new line .\n in it ";
    String value3 = "Value has characters: " + "`1234567890-=qwertyuiop[]\\asdfghjkl;'zxcvbnm,./" + "~!@#$%^&*()_+QWERTYUIOP{}|ASDFGHJKL:\"'ZXCVBNM<>?" + "\t\b\n\f\"\n in it";
    String value4 = "Value ends with escape\\";
    String value5 = "Value ends with \\\" \\.\n";
    // Log the history version
    JobHistory.MetaInfoManager.logMetaInfo(historyWriter);
    JobHistory.log(historyWriter, RecordTypes.Job, new JobHistory.Keys[] { Keys.JOBTRACKERID, Keys.TRACKER_NAME, Keys.JOBNAME, Keys.JOBCONF, Keys.USER }, new String[] { value1, value2, value3, value4, value5 });
    // close history file
    out.close();
    historyWriter.remove(out);
    // parse history
    // random jobid for tesing
    String jobId = "job_200809171136_0001";
    JobHistory.JobInfo job = new JobHistory.JobInfo(jobId);
    JobHistory.parseHistoryFromFS(historyLog.toString(), new TestListener(job), fs);
    // validate keys and values
    assertEquals(value1, job.get(Keys.JOBTRACKERID));
    assertEquals(value2, job.get(Keys.TRACKER_NAME));
    assertEquals(value3, job.get(Keys.JOBNAME));
    assertEquals(value4, job.get(Keys.JOBCONF));
    assertEquals(value5, job.get(Keys.USER));
}
