public GameWorld constructWorld(Scanner sc) throws Exception {
    String firstLine = sc.next();
    if (!firstLine.equalsIgnoreCase(defaultSaveHeader))
        throw new Exception("Incorrect FileType Passed!");
    GameWorldBuilder g = new GameWorldBuilder();
    List<GameArea> areas = new Vector<GameArea>();
    while (sc.hasNext()) {
        String gameAreaHeader = "";
        while (!gameAreaHeader.contains("GameArea")) gameAreaHeader = sc.nextLine();
        String[] bb = gameAreaHeader.split("[\\:\\[\\]]");
        GameAreaBuilder b = new GameAreaBuilder(Integer.parseInt(bb[1]), divider);
        int coords = Integer.parseInt(bb[2]);
        while (coords-- > 0) {
            // System.err.println("Reading Map " + coords);
            // coord
            String coord = nextLine(sc);
            // System.err.println("\t" + coord);
            String[] c = coord.split("\\:");
            c[0] = c[0].replaceAll("[\\(\\)\\-]", "");
            String[] a = c[0].split("\\,");
            int x = Integer.parseInt(a[0]);
            int y = Integer.parseInt(a[1]);
            int tot = Integer.parseInt(c[1]) - 2;
            // terrain
            String ter = nextLine(sc);
            if (ter.startsWith("Water"))
                b.addWater(x, y);
            if (ter.startsWith("Mountain"))
                b.addMountain(x, y);
            if (ter.startsWith("Grass"))
                b.addGrass(x, y);
            // Visibility
            String[] vis = sc.nextLine().split("\\:");
            for (String s : vis) {
                if (!s.contains(","))
                    continue;
                s = s.replaceAll("[\\{\\}]", "");
                String[] gg = s.split(",");
                b.addToImageIDs(Integer.parseInt(gg[2]), gg[1]);
            }
            b.putImageIDs(x, y);
            // Other
            while (tot-- > 0) {
                String tmp = nextLine(sc);
                System.err.println("READING " + tmp);
                if (tmp.length() >= 2)
                    b.addGameObject(x, y, tmp);
            }
        }
        // b.makeAvatar();
        g.register(b);
    }
    g.finish();
    return g.getGameWorld();
}
