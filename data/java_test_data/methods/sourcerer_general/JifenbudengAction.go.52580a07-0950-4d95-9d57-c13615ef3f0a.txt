@Override
public String go() throws Exception {
    // 积分的补登，同时应计入积分表里面，考虑事务来处理
    JifenbudengService budengservice = (JifenbudengService) getBean("jifenbudengService");
    LawyersService lawyersService = (LawyersService) getBean("lawyersService");
    SysUser user = (SysUser) this.getLoginUser();
    Lawyers lawyer = null;
    if (get("budengexist") != null && "0".equals(get("budengexist"))) {
        // if (!beupload) {
        lawyer = (Lawyers) lawyersService.getLawyerbyLawyerno(budeng.getLawyerno(), datavisible.getProvinceid(), datavisible.getCityid());
        if (lawyer == null) {
            this.message = "执业资格证号:" + budeng.getLawyerno() + "对应的律师资料已不存在,请返回";
            this.nextPage = "jifenbudeng!input.pl?budengid=" + this.budengid;
            return "message";
        }
        budeng.setCreatetime(new java.sql.Timestamp(System.currentTimeMillis()));
        budeng.setCreateuser(user.getUsername());
        budeng.setLawyerid(lawyer.getLawyerid());
        budeng.setProvinceid(lawyer.getProvinceunion());
        budeng.setCityid(lawyer.getDirectunion());
        budeng.setOfficeid(lawyer.getTheoffice());
        budeng.setLawyername(lawyer.getLawyername());
        budeng.setBudengfrom(0);
        int result = budengservice.saveJifenbudeng(budeng);
        if (result == 0) {
            this.opResult = "为" + budeng.getLawyerno() + "新增补登积分成功";
            this.message = "积分补登成功";
        } else {
            this.opResult = "为" + budeng.getLawyerno() + "新增补登积分不成功,该课程已经获得过积分";
            this.message = "积分补登失败:该律师已经获得该现场培训课程的积分";
        }
    } else {
        Float oldxuefen = (Float) get("oldbudeng");
        debug("补登前后的积分差异为:::" + (budeng.getXuefen().floatValue() - oldxuefen.floatValue()));
        budengservice.updateJifenbudeng(budeng, oldxuefen);
        this.opResult = "为" + budeng.getLawyerno() + "修改补登积分成功";
        this.message = "积分补登修改成功";
    }
    this.nextPage = "jifenbudengList.pl";
    return SUCCESS;
}
