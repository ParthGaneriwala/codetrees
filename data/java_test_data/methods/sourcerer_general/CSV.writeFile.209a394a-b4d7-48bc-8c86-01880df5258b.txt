public boolean writeFile(ContactManager conM, String filename) {
    try {
        CSVWriter writer = new CSVWriter(new FileWriter(filename), ',');
        ArrayList<String[]> lines = new ArrayList<String[]>();
        String[] head = { "name", "phoneNumber", "fixedTel", "email", "qq", "nick", "sex", "birthday", "icon", "address", "workplace", "zipCode", "homePage", "otherWay", "normal", "relation" };
        lines.add(head);
        ArrayList<Contact> contacts = conM.getContacts();
        for (int i = 0; i < contacts.size(); i++) {
            Contact contact = contacts.get(i);
            String name = contact.getName();
            String phoneNum = contact.getPhoneNumber();
            String fixedTel = contact.getFixedTel();
            String email = contact.getEmail();
            String qq = contact.getQq();
            String nick = contact.getNick();
            String sexStr = "";
            switch(contact.getSex()) {
                case 1:
                    sexStr = "M";
                    break;
                case 2:
                    sexStr = "F";
                    break;
                default:
                    break;
            }
            String birthday = contact.getBirthday().toString();
            String icon = contact.getIcon();
            String addr = contact.getAddress();
            String workplace = contact.getWorkplace();
            String zipCode = contact.getZipCode();
            String homePage = contact.getHomepage();
            // add otherWays
            ArrayList<String> otherWays = contact.getOtherWay();
            String otherWayStr = "";
            if (otherWays.size() > 0) {
                for (int j = 0; j < otherWays.size() - 1; j++) {
                    otherWayStr += otherWays.get(j);
                    otherWayStr += ";";
                }
                otherWayStr += otherWays.get(otherWays.size() - 1);
            }
            // add NormalTag
            ArrayList<NormalTag> normals = contact.getNormal();
            String normalStr = "";
            if (normals.size() > 0) {
                for (int j = 0; j < normals.size() - 1; j++) {
                    normalStr += normals.get(j).getName();
                    normalStr += ";";
                }
                normalStr += normals.get(normals.size() - 1).getName();
            }
            // add relation
            ArrayList<RelationTag> relations = contact.getRelation();
            String relationStr = "";
            for (int j = 0; j < relations.size(); j++) {
                RelationTag relationTag = relations.get(j);
                ArrayList<Contact> cons = relationTag.getContacts(contact);
                for (int k = 0; k < cons.size(); k++) {
                    relationStr = relationStr + "<" + relationTag.getName() + ":" + contact.getName() + ":" + cons.get(k).getName() + ">" + ";";
                }
            }
            if (!relationStr.isEmpty())
                relationStr = relationStr.substring(0, relationStr.length() - 1);
            String[] line = { name, phoneNum, fixedTel, email, qq, nick, sexStr, birthday, icon, addr, workplace, zipCode, homePage, otherWayStr, normalStr, relationStr };
            lines.add(line);
        }
        writer.writeAll(lines);
        writer.close();
    } catch (Exception e) {
        e.printStackTrace();
        return false;
    }
    return true;
}
