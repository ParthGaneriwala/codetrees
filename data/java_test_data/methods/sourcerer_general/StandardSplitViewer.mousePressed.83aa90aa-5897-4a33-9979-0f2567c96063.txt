public void mousePressed(MouseEvent e) {
    // Find near node
    int x = e.getX();
    int y = e.getY();
    for (int i = 0; i < xCoord.length; i++) {
        // System.out.println(x+" "+xCoord[i]);
        if (Math.abs(xCoord[i] - x) < 5) {
            // 5 horizontal points on both sides
            // index(only from viewing) of control point which would be edited
            editingCPNumber = i;
            AthleteIcon[] selectedAthletes = (AthleteIcon[]) aModel.getSelectedValues();
            int yMax = selectedAthletes[selectedAthletes.length - 1].getTotalTime().getTimeInSeconds();
            double scale = yMax / (double) getSize().height;
            for (int j = 0; j < selectedAthletes.length; j++) {
                int yA = 0;
                for (int k = 0; k <= editingCPNumber; k++) {
                    yA += selectedAthletes[j].getAthlete().getLap(aModel.getViewingSplits()[k]).getTimeInSeconds();
                }
                yA = getSize().height - (int) (yA / scale);
                // System.out.println(y+" "+yA);
                if (Math.abs(y - yA) < 2) {
                    // 2 vertical points on both sides
                    // Store y coordinate(of node) of start dragging
                    yLocationOfStartDrag = yA;
                    // set editing athlete
                    editingAthlete = selectedAthletes[j];
                    // put all needed parameters to glass panel
                    glassPane.setAthlete(editingAthlete);
                    glassPane.setViewingSplits(aModel.getViewingSplits());
                    glassPane.setCPsNumber(editingCPNumber);
                    glassPane.setScale(scale);
                    glassPane.setXCoord(xCoord);
                    glassPane.setYMax(yMax);
                    glassPane.setOtst(otst);
                    glassPane.setLocationOnScreen(this.getLocationOnScreen());
                    glassPane.setVisible(true);
                    glassPane.setYLocation(y);
                    // System.out.println(editingAthlete.getAthlete().getFamilyName());
                    break;
                }
            }
            break;
        } else if (x < xCoord[i]) {
            break;
        }
    }
}
