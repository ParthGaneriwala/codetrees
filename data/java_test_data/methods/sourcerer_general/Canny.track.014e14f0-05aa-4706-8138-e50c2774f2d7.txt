private int[][] track(int[][] input, int[][] marked, Stack to_track, int thresh, int i, int j) {
    // empty represents when the stack is empty
    boolean empty = false;
    int a;
    int b;
    // Create a point to represent where to start the tracking from
    Point current = new Point(i, j);
    // Push the initial point onto the stack
    to_track.push(current);
    while (!empty) {
        try {
            // Take the top pixel from the stack
            current = (Point) to_track.pop();
            // Find it's co-ordinates
            a = current.x;
            b = current.y;
            // Only done if pixel is currently unmarked
            if (marked[a][b] == 0) {
                // Try and track from each neighbouring point
                if (a > 0 && b > 0) {
                    if (input[a - 1][b - 1] > thresh) {
                        current = new Point((a - 1), (b - 1));
                        to_track.push(current);
                    }
                }
                if (b > 0) {
                    if (input[a][b - 1] > thresh) {
                        current = new Point((a), (b - 1));
                        to_track.push(current);
                    }
                }
                if (a < (d_w - 1) && b > 0) {
                    if (input[a + 1][b - 1] > thresh) {
                        current = new Point((a + 1), (b - 1));
                        to_track.push(current);
                    }
                }
                if (a > 0) {
                    if (input[a - 1][b] > thresh) {
                        current = new Point((a - 1), (b));
                        to_track.push(current);
                    }
                }
                if (a < (d_w - 1)) {
                    if (input[a + 1][b] > thresh) {
                        current = new Point((a + 1), (b));
                        to_track.push(current);
                    }
                }
                if (a > 0 && b < (d_h - 1)) {
                    if (input[a - 1][b + 1] > thresh) {
                        current = new Point((a - 1), (b + 1));
                        to_track.push(current);
                    }
                }
                if (b < (d_h - 1)) {
                    if (input[a][b + 1] > thresh) {
                        current = new Point((a), (b + 1));
                        to_track.push(current);
                    }
                }
                if (a < (d_w - 1) && b < (d_h - 1)) {
                    if (input[a + 1][b + 1] > thresh) {
                        current = new Point((a + 1), (b + 1));
                        to_track.push(current);
                    }
                }
                // Mark this pixel as having been tracked from
                marked[a][b] = 1;
            }
        }// If stack empty, then set the empty flag to true
         catch (EmptyStackException e) {
            empty = true;
        }
    }
    return marked;
}
