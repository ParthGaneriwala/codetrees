private void primeDeflateBuffer() throws IOException {
    bufferEnd = 0;
    while (bufferEnd == 0) {
        if (!deflater.needsInput()) {
            // Do pending deflation.
            bufferEnd = deflater.deflate(deflatedBytes);
            bufferOffset = 0;
        } else {
            if (!EOFInput) {
                // Obtain more data from the input stream.
                int byteCount = inputStream.read(buffer, 0, buffer.length);
                if (byteCount > 0) {
                    crc.update(buffer, 0, byteCount);
                    deflater.setInput(buffer, 0, byteCount);
                    bufferEnd = deflater.deflate(deflatedBytes);
                    bufferOffset = 0;
                } else if (byteCount == 0) {
                // The underlying input stream must be non-blocking. Do nothing.
                } else {
                    // EOF of the underlying Input Stream.
                    deflater.finish();
                    EOFInput = true;
                    bufferEnd = 0;
                    bufferOffset = 0;
                }
            } else {
                // No more input data available, time to finish up.
                if (!deflater.finished()) {
                    bufferEnd = deflater.deflate(deflatedBytes);
                    bufferOffset = 0;
                } else if (!EOFDeflated) {
                    EOFDeflated = true;
                    bufferOffset = 0;
                    bufferEnd = 0;
                    // CRC-32 of uncompressed data
                    writeInt((int) crc.getValue());
                    // Number of uncompressed bytes
                    writeInt(deflater.getTotalIn());
                } else {
                    EOFTail = true;
                    return;
                }
            }
        }
    }
}
