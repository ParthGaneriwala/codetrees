public static void testGameWorld() {
    GameWorld W = SaverLoader.Load("Dave");
    /*GameArea A = randomGameArea();
			AOE aoe1 = new InstantAOE("Damage", new StatStrategy("Health",-1));
			AOE aoe2 = new InstantTeleport(new TeleportStrategy(new Coordinate(10,10),A));
			AOE aoe3 = new InstantAOE("Level Up", new LevelUpStrategy());
			SynchronizedAOE aoe4 = new SynchronizedAOE("Death Trap", new KillStrategy());
			SynchronizedAOE aoe5 = new SynchronizedAOE("Heal", new StatStrategy("Health",10));
			A.setCoordinate(aoe5, new Coordinate(8,9) );
			A.setCoordinate(aoe4, new Coordinate(8,8) );
			A.setCoordinate(aoe1, new Coordinate(10,11) );
			A.setCoordinate(aoe2, new Coordinate(10,12) );
			A.setCoordinate(aoe3, new Coordinate(9,12) );

			GameClock.instance().register(aoe5);
			
			Item item = new Item("TestStaff", new GiveItemStrategy(new EquippableItem("Staff", 50, new StatCol(StatEnum.Intellect.getName(),100), SlotEnum.STAFF)));
			EquippableItem III = new EquippableItem("Boots of Speed", 99999, new StatCol(StatEnum.Movement.getName(),20),SlotEnum.FEET);
			ChestItem CCC = new ChestItem("Golden Chest", new GiveItemStrategy(III));
			QuestItem Q = new QuestItem("Godlen Key", -1,new StatCol(),"Golden Chest");
			Item IIII = new Item("Key", new GiveItemStrategy(Q));
			A.setCoordinate(item, new Coordinate(8,9));
			
			A.setCoordinate(CCC, new Coordinate(4,16));
			A.setCoordinate(IIII, new Coordinate(11,6));

			Trap trap = new Trap("Harm Avatar", new StatStrategy("Health", -1));
			trap.setCharges(1);
			A.setCoordinate(trap, new Coordinate(11,9));
			
			NPC npc = new NPC("TestNPC", new NPCOccupation());
			npc.setState(new Hostile());
			StatCol w = new StatCol();

			w.put(StatEnum.Attack.getName(), 30);

			npc.getNewItem(new EquippableItem("Ashkandi", 5000, w,SlotEnum.ONEHWEAP));
			npc.equipItem(0);
			A.setCoordinate(npc, new Coordinate(12,9));
			
			NPC vendor = new NPC("TestNPC", new NPCOccupation());
			vendor.setState(new Vendor());
			StatCol vendStats = new StatCol();
			vendStats.put(StatEnum.Intellect.getName(), 300);
			vendor.getNewItem(new EquippableItem("Test Sword", 5000, w,SlotEnum.ONEHWEAP));
			vendor.getNewItem(new EquippableItem("Halo of Light", 50, vendStats, SlotEnum.HELM));
			vendor.getNewItem(new EquippableItem("Ceri's Demonic Dress", 50, vendStats, SlotEnum.CHEST));
			vendor.getNewItem(new EquippableItem("Robe of Volitile Power", 50, vendStats, SlotEnum.CHEST));
			vendor.getNewItem(new EquippableItem("Sword of Omen", 50, vendStats, SlotEnum.ONEHWEAP));
			vendor.getNewItem(new UsableItem("Potion of Lameness", 50, vendStats));
			A.setCoordinate(vendor, new Coordinate(9,11));
			
			W.addGameArea(A);
			HashMap<String,Direction> H = new HashMap<String,Direction>();
			H.put("N",Direction.N);
			H.put("NE",Direction.NE);
			H.put("NW",Direction.NW);
			H.put("SE",Direction.SE);
			H.put("SW",Direction.SW);
			H.put("S",Direction.S);
		
			Avatar E = new Avatar("Rick Astley", new Summoner());
			E.setMap(A);
			npc.setMap(A);
			E.getNewItem(new UsableItem("Potion of the Riches", 5000, vendStats));
			StatCol healthStats = new StatCol();
			healthStats.put(StatEnum.Hardiness.getName(), 1000);
			healthStats.put(StatEnum.Attack.getName(), 100);
			E.getNewItem(new EquippableItem("Thunderfury", 500, healthStats, SlotEnum.ONEHWEAP));
			
			//this line makes me cry
			
			
			Coordinate C = new Coordinate(10,10);
			A.setCoordinate(E, new Coordinate(10,10));
			
			for (GameObject o : A.getGameObjects(C)) System.out.println("Found " + o);
			
			vendor.setMap(A);
			W.setAvatar(E);
			E.equipItem(0);
			//A.updateVisibility(E, E.getStat("Visibility Radius"));*/
    MainFrame mFrame = new MainFrame();
    mFrame.setGameWorld(W);
    // Scanner sc = new Scanner(System.in);
    // String in = "N";
    String in = "/";
    KeyboardPoller keyboard = new KeyboardPoller(256, "MainKeyboard");
    mFrame.addKeyListener(keyboard);
    InputManager.instance().registerPoller(keyboard);
    ListIndexListener skillIndexer = new ListIndexListener();
    ListIndexListener itemIndexer = new ListIndexListener();
    ListIndexListener equipIndexer = new ListIndexListener();
    ListIndexListener unequipIndexer = new ListIndexListener();
    ListIndexListener buyIndexer = new ListIndexListener();
    ListIndexListener sellIndexer = new ListIndexListener();
    Iteration3CommandsFactory comFactory = new Iteration3CommandsFactory();
    comFactory.setGameWorld(W);
    comFactory.setMainFrame(mFrame);
    comFactory.setAbilityListListener(skillIndexer);
    comFactory.setItemListListener(itemIndexer);
    comFactory.setBuyListListener(buyIndexer);
    comFactory.setSellListListener(sellIndexer);
    comFactory.setEquipListListener(equipIndexer);
    comFactory.setUnequipListListener(unequipIndexer);
    mFrame.addListIndexers(skillIndexer, buyIndexer, sellIndexer, equipIndexer, unequipIndexer, itemIndexer);
    KeyboardConfigFileIO keyLoader = new KeyboardConfigFileIO(comFactory);
    KeyboardTriggerHandler handler = keyLoader.loadHandler("./doc/DefaultGameplayKeys.txt");
    handler.setPoller(keyboard);
    KeyboardTriggerHandler h2 = keyLoader.loadHandler("./doc/DefaultContextKeys.txt");
    h2.setPoller(keyboard);
    KeyboardTriggerHandler h3 = keyLoader.loadHandler("./doc/DefaultVendorKeys.txt");
    h3.setPoller(keyboard);
    KeyboardTriggerHandler h4 = keyLoader.loadHandler("./doc/DefaultInventoryKeys.txt");
    h4.setPoller(keyboard);
    KeyboardTriggerHandler h5 = keyLoader.loadHandler("./data/DefaultSkillKeys.txt");
    h5.setPoller(keyboard);
    InputManager.instance().registerHandler(handler);
    InputManager.instance().registerHandler(h2);
    InputManager.instance().registerHandler(h3);
    InputManager.instance().registerHandler(h4);
    InputManager.instance().registerHandler(h5);
    InputManager.instance().disableHandler("VendorKeys");
    InputManager.instance().disableHandler("InventoryKeys");
    InputManager.instance().disableHandler("SkillKeys");
    /*Vector<Coordinate> river = new Vector<Coordinate>();
			river.add(new Coordinate(11,5));
			river.add(new Coordinate(10,6));
			river.add(new Coordinate(9,7));
			river.add(new Coordinate(8,8));
			river.add(new Coordinate(7,9));
			river.add(new Coordinate(6,10));
			river.add(new Coordinate(5,11));
			river.add(new Coordinate(5,12));
			river.add(new Coordinate(5,13));
			river.add(new Coordinate(4,14));
			river.add(new Coordinate(4,15));
			RiverAOE r = new RiverAOE("River", new RiverAOEStrategy(river,E.getMap()));
			E.getMap().setCoordinate(r, new Coordinate(11,5));*/
    GameClock clock = GameClock.instance();
    clock.setTicksPerSecond(30);
    /*clock.register(E);
			clock.register(npc);
			clock.register(r);
			clock.register(aoe4);*/
    while (!in.equalsIgnoreCase("Q")) {
        clock.updateClock();
        mFrame.updateFrame();
        // if (H.containsKey(in)) //printMap(W);
        // while (W.hasConsoleText())
        // System.out.println("Console: " + W.getConsoleText());
        // System.out.println("\nCommands (N,S,NE,SE,NW,SW,Q,b,h,d,r,p,o,-,=,*,&,?,m,L,Save,Load):");
        // in=sc.next();
        // if (H.containsKey(in)) W.moveMover(H.get(in));
        // else if (in.equals("b")) E.performSkill("Bind Wounds", E);
        // else if (in.equals("h")) E.performSkill("Hurt Health", E);
        // else if (in.equals("d")) E.performSkill("Detect Traps", E);
        // else if (in.equals("r")) E.performSkill("Remove Traps", E);
        // else if (in.equals("p")) printStats(E);
        // else if (in.equals("o")) E.performSkill("Observe", E);
        // else if (in.equals("-")) E.getNewItem(new EquippableItem("Staff2", 50, new StatCol(StatEnum.Hardiness.getName(),100), SlotEnum.STAFF));
        // else if (in.equals("=")) E.equipItem(0);
        // else if (in.equals("*")) E.unequipItem(SlotEnum.STAFF);
        // else if (in.equals("&")) E.talkToNPC();
        // else if (in.equals("?")) {testSanity();W.addConsoleText("You have been rickrolled.");}
        // else if (in.equals("m")) printMap(W);
        // else if (in.equals("Save")) org.radish.model.loadsave.SaverLoader.Save(W);
        // else if (in.equals("Load")) W=org.radish.model.loadsave.SaverLoader.Load(W.getAvatar().getName());
        // System.err.println("LOOK HERE!::::");
        // System.out.println(KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner());
        InputManager.instance().poll();
        InputManager.instance().execute();
    }
}
