public boolean execute(ComponentContext context) {
    boolean result = false;
    Connection db = null;
    try {
        db = getConnection(context);
        Reply thisReply = (Reply) context.getThisObject();
        Reply prevReply = (Reply) context.getPreviousObject();
        // load the topic
        Topic topic = new Topic(db, thisReply.getIssueId(), thisReply.getProjectId());
        Project profileProject = ProjectUtils.loadProject(thisReply.getProjectId());
        // load the user that submitted the forum topic response
        User entered = UserUtils.loadUser(thisReply.getEnteredBy());
        Project enteredProfile = ProjectUtils.loadProject(entered.getProfileProjectId());
        // The user answered a question
        if (topic.getQuestion()) {
            // Check to see if the owner is marking a question as answered
            if (thisReply.getAnswered() == Reply.ANSWERED) {
                // The owner marked an answer as correct
                // load the user that posted the answer
                Reply replyBeingRated = new Reply(db, thisReply.getReplyToId());
                User answeredBy = UserUtils.loadUser(replyBeingRated.getEnteredBy());
                Project answeredByProfile = ProjectUtils.loadProject(answeredBy.getProfileProjectId());
                // Prepare the wiki links
                context.setParameter("user", WikiLink.generateLink(enteredProfile));
                context.setParameter("answeredby", WikiLink.generateLink(answeredByProfile));
                context.setParameter("topic", WikiLink.generateLink(topic));
                context.setParameter("profile", WikiLink.generateLink(profileProject));
                // Insert the history
                ProjectHistory history = new ProjectHistory();
                history.setEnteredBy(entered.getId());
                history.setProjectId(thisReply.getProjectId());
                history.setLinkObject(ProjectHistoryList.REPLY_OBJECT);
                history.setEventType(ProjectHistoryList.MARK_FORUM_TOPIC_RESPONSE_EVENT);
                history.setLinkItemId(thisReply.getId());
                if (entered.getId() == answeredBy.getId()) {
                    // User answered own question
                    history.setDescription(context.getParameter(HISTORY_MARK_ANSWER_USER_TEXT));
                } else {
                    // Another user answered the question
                    history.setDescription(context.getParameter(HISTORY_MARK_ANSWER_TEXT));
                }
                history.insert(db);
            } else {
                // Prepare the wiki links
                context.setParameter("user", WikiLink.generateLink(enteredProfile));
                context.setParameter("topic", WikiLink.generateLink(topic));
                context.setParameter("profile", WikiLink.generateLink(profileProject));
                // Insert the history
                ProjectHistory history = new ProjectHistory();
                history.setEnteredBy(entered.getId());
                history.setProjectId(thisReply.getProjectId());
                history.setLinkObject(ProjectHistoryList.REPLY_OBJECT);
                history.setEventType(ProjectHistoryList.POST_FORUM_TOPIC_RESPONSE_EVENT);
                history.setLinkItemId(thisReply.getId());
                history.setDescription(context.getParameter(HISTORY_POST_ANSWER_TEXT));
                history.insert(db);
            }
        } else {
            // This is just a reply to a topic that isn't a question
            // Prepare the wiki links
            context.setParameter("user", WikiLink.generateLink(enteredProfile));
            context.setParameter("topic", WikiLink.generateLink(topic));
            context.setParameter("profile", WikiLink.generateLink(profileProject));
            // Insert the history
            ProjectHistory history = new ProjectHistory();
            history.setEnteredBy(entered.getId());
            history.setProjectId(thisReply.getProjectId());
            history.setLinkObject(ProjectHistoryList.REPLY_OBJECT);
            history.setEventType(ProjectHistoryList.POST_FORUM_TOPIC_RESPONSE_EVENT);
            history.setLinkItemId(thisReply.getId());
            history.setDescription(context.getParameter(HISTORY_POST_REPLY_TEXT));
            history.insert(db);
        }
        result = true;
    } catch (Exception e) {
        e.printStackTrace(System.out);
    } finally {
        freeConnection(context, db);
    }
    return result;
}
