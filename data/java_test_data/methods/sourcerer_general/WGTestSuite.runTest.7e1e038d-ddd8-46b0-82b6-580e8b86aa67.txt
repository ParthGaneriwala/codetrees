protected void runTest() {
    try {
        m1 = read(in, intype);
    /*
                                if (expectedLevel == 1
                                    && expected == null
                                    && errorCnt[2] == 0
                                    && errorCnt[1] == 0)
                                    save(input);
                                    */
    } catch (JenaException re) {
        // System.out.println(re.toString());
        if (re.getCause() instanceof SAXException) {
        // ignore.
        } else {
            fail(re.getMessage());
        }
    } catch (IOException ioe) {
        fail(ioe.getMessage());
    }
    // TODO: not for 2.3. Tidy up this code a bit, I don't understand it.
    HashSet ex2 = expected == null ? null : new HashSet(expected);
    if (expected == null)
        for (int j = 2; j >= 0; j--) if (j != expectedLevel) {
            if (errorCnt[j] != 0)
                ex2 = new HashSet();
        }
    if (ex2 != null && !ex2.equals(found)) {
        Set dup = new HashSet();
        dup.addAll(found);
        dup.removeAll(ex2);
        ex2.removeAll(found);
        if (expected != null)
            expected.removeAll(found);
        Iterator it = ex2.iterator();
        while (it.hasNext()) {
            int eCode = ((Integer) it.next()).intValue();
            String msg = "Expected error  " + ParseException.errorCodeName(eCode) + ", was not detected.";
            if (errorCnt[2] == 0) {
                fail(msg);
            } else {
                System.err.println("Test: " + getName());
                System.err.println(msg);
            }
        }
        it = dup.iterator();
        while (it.hasNext()) fail("Detected error  " + ParseException.errorCodeName(((Integer) it.next()).intValue()) + ", was not expected.");
    }
    for (int j = 2; j >= 0; j--) if (j == expectedLevel) {
        if (errorCnt[j] == 0 && (j != 1 || errorCnt[2] == 0))
            fail("No " + errorLevelName[expectedLevel] + " in input file of class " + getClass().getName());
    } else if (expected == null) {
        if (errorCnt[j] != 0)
            fail("Inappropriate " + errorLevelName[j] + " in input file of class " + getClass().getName());
    }
}
