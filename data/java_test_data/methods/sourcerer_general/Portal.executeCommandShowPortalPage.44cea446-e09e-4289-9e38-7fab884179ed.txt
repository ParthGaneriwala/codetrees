public String executeCommandShowPortalPage(ActionContext context) {
    Connection db = null;
    try {
        String pageName = context.getRequest().getParameter("name");
        db = this.getConnection(context);
        // Find the portal page
        DashboardPage page = DashboardUtils.loadDashboardPage(DashboardTemplateList.TYPE_PAGES, pageName);
        if (page == null) {
            return "SystemError";
        }
        context.getRequest().setAttribute("dashboardPage", page);
        // Set shared values
        context.getRequest().setAttribute("portletView", context.getRequest().getParameter("view"));
        context.getRequest().setAttribute("portletParams", context.getRequest().getParameter("params"));
        context.getRequest().setAttribute("TEAM.KEY", context.getServletContext().getAttribute("TEAM.KEY"));
        // Set shared project searcher
        IIndexerSearch projectSearcher = null;
        if ("true".equals(context.getServletContext().getAttribute(Constants.DIRECTORY_INDEX_INITIALIZED))) {
            // Search public projects only
            LOG.debug("Using directory index...");
            projectSearcher = SearchUtils.retrieveSearcher(Constants.INDEXER_DIRECTORY);
        } else {
            // Use the full index because the directory hasn't loaded
            LOG.debug("Using full index...");
            projectSearcher = SearchUtils.retrieveSearcher(Constants.INDEXER_FULL);
        }
        String queryString = "(approved:1) " + "AND (closed:0) " + "AND (website:0) ";
        context.getRequest().setAttribute("projectSearcher", projectSearcher);
        context.getRequest().setAttribute("baseQueryString", queryString);
        boolean isAction = PortletManager.processPage(context, db, page);
        if (isAction) {
            return ("-none-");
        }
        return "ShowPortalPageOK";
    } catch (Exception errorMessage) {
        context.getRequest().setAttribute("Error", errorMessage);
        errorMessage.printStackTrace(System.out);
        LOG.error("executeCommandShowPortalPage", errorMessage);
        return ("SystemError");
    } finally {
        this.freeConnection(context, db);
    }
}
