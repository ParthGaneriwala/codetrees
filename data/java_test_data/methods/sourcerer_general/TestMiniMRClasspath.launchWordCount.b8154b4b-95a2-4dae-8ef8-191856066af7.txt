static String launchWordCount(String fileSys, String jobTracker, JobConf conf, String input, int numMaps, int numReduces) throws IOException {
    final Path inDir = new Path("/testing/wc/input");
    final Path outDir = new Path("/testing/wc/output");
    FileSystem fs = FileSystem.getNamed(fileSys, conf);
    fs.delete(outDir, true);
    if (!fs.mkdirs(inDir)) {
        throw new IOException("Mkdirs failed to create " + inDir.toString());
    }
    {
        DataOutputStream file = fs.create(new Path(inDir, "part-0"));
        file.writeBytes(input);
        file.close();
    }
    FileSystem.setDefaultUri(conf, fileSys);
    conf.set("mapred.job.tracker", jobTracker);
    conf.setJobName("wordcount");
    conf.setInputFormat(TextInputFormat.class);
    // the keys are words (strings)
    conf.setOutputKeyClass(Text.class);
    // the values are counts (ints)
    conf.setOutputValueClass(IntWritable.class);
    conf.set("mapred.mapper.class", "testjar.ClassWordCount$MapClass");
    conf.set("mapred.combine.class", "testjar.ClassWordCount$Reduce");
    conf.set("mapred.reducer.class", "testjar.ClassWordCount$Reduce");
    FileInputFormat.setInputPaths(conf, inDir);
    FileOutputFormat.setOutputPath(conf, outDir);
    conf.setNumMapTasks(numMaps);
    conf.setNumReduceTasks(numReduces);
    // pass a job.jar already included in the org.fit.hiai.hadoop build
    conf.setJar("build/test/testjar/testjob.jar");
    JobClient.runJob(conf);
    StringBuffer result = new StringBuffer();
    {
        Path[] parents = FileUtil.stat2Paths(fs.listStatus(outDir.getParent()));
        Path[] fileList = FileUtil.stat2Paths(fs.listStatus(outDir, new OutputLogFilter()));
        for (int i = 0; i < fileList.length; ++i) {
            BufferedReader file = new BufferedReader(new InputStreamReader(fs.open(fileList[i])));
            String line = file.readLine();
            while (line != null) {
                result.append(line);
                result.append("\n");
                line = file.readLine();
            }
            file.close();
        }
    }
    return result.toString();
}
