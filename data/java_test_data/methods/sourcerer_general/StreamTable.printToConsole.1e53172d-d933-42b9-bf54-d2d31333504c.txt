public void printToConsole() {
    String header = "";
    switch(type) {
        case CLELConstants.MODULE_TABLE:
            header = "\t\tModule Table:\n";
            break;
        case CLELConstants.TYPEREF_TABLE:
            header = "\t\tType Ref Table:\n";
            break;
        case CLELConstants.TYPEDEF_TABLE:
            header = "\t\tType Def Table:\n";
            break;
        case CLELConstants.FIELD_TABLE:
            header = "\t\tField Table:\n";
            break;
        case CLELConstants.METHODDEF_TABLE:
            header = "\t\tMethod Def Table:\n";
            break;
        case CLELConstants.PARAM_TABLE:
            header = "\t\tParam Table:\n";
            break;
        case CLELConstants.INTERFACEIMPL_TABLE:
            header = "\t\tInterface Impl Table:\n";
            break;
        case CLELConstants.MEMBERREF_TABLE:
            header = "\t\tMember Ref Table:\n";
            break;
        case CLELConstants.CONSTANT_TABLE:
            header = "\t\tConstant Table:\n";
            break;
        case CLELConstants.CUSTOMATTRIBUTE_TABLE:
            header = "\t\tCustom Attribute Table:\n";
            break;
        case CLELConstants.FIELDMARSHAL_TABLE:
            header = "\t\tField Marshal Table:\n";
            break;
        case CLELConstants.DECLSECURITY_TABLE:
            header = "\t\tDecl Security Table:\n";
            break;
        case CLELConstants.CLASSLAYOUT_TABLE:
            header = "\t\tClass Layout Table:\n";
            break;
        case CLELConstants.FIELDLAYOUT_TABLE:
            header = "\t\tField Layout Table:\n";
            break;
        case CLELConstants.STANDALONESIG_TABLE:
            header = "\t\tStand Alone Sig Table:\n";
            break;
        case CLELConstants.EVENTMAP_TABLE:
            header = "\t\tEvent Map Table:\n";
            break;
        case CLELConstants.EVENT_TABLE:
            header = "\t\tEvent Table:\n";
            break;
        case CLELConstants.PROPERTYMAP_TABLE:
            header = "\t\tProperty Map Table:\n";
            break;
        case CLELConstants.PROPERTY_TABLE:
            header = "\t\tProperty Table:\n";
            break;
        case CLELConstants.METHODSEMANTICS_TABLE:
            header = "\t\tMethod Semantics Table:\n";
            break;
        case CLELConstants.METHODIMPL_TABLE:
            header = "\t\tMethod Impl:\n";
            break;
        case CLELConstants.MODULEREF_TABLE:
            header = "\t\tModule Ref Table:\n";
            break;
        case CLELConstants.TYPESPEC_TABLE:
            header = "\t\tType Spec Table:\n";
            break;
        case CLELConstants.IMPLMAP_TABLE:
            header = "\t\tImpl Map Table:\n";
            break;
        case CLELConstants.FIELDRVA_TABLE:
            header = "\t\tField RVA Table:\n";
            break;
        case CLELConstants.ASSEMBLY_TABLE:
            header = "\t\tAssembly Table:\n";
            break;
        case CLELConstants.ASSEMBLYPROCESSOR_TABLE:
            header = "\t\tAssembly Processor Table:\n";
            break;
        case CLELConstants.ASSEMBLYOS_TABLE:
            header = "\t\tAssembly OS Table:\n";
            break;
        case CLELConstants.ASSEMBLYREF_TABLE:
            header = "\t\tAssembly Ref Table:\n";
            break;
        case CLELConstants.ASSEMBLYREFPROCESSOR_TABLE:
            header = "\t\tAssembly Ref Processor Table:\n";
            break;
        case CLELConstants.ASSEMBLYREFOS_TABLE:
            header = "\t\tAssembly Ref OS Table:\n";
            break;
        case CLELConstants.FILE_TABLE:
            header = "\t\tFile Table:\n";
            break;
        case CLELConstants.EXPORTEDTYPE_TABLE:
            header = "\t\tExported Type Table:\n";
            break;
        case CLELConstants.MANIFESTRESOURCE_TABLE:
            header = "\t\tManifest Resource Table:\n";
            break;
        case CLELConstants.NESTEDCLASS_TABLE:
            header = "\t\tNested Class Table:\n";
            break;
        case CLELConstants.TYPETYPAR_TABLE:
            header = "\t\tTypeTyPar Table:\n";
            break;
        case CLELConstants.METHODTYPAR_TABLE:
            header = "\t\tMethodTyPar Table:\n";
            break;
    }
    int i, size = rows.size();
    System.out.print(header);
    for (i = 0; i < size; i++) {
        System.out.print("\t\tRow: " + (i + 1) + " ");
        rows.get(i).printToConsole();
    }
    System.out.println();
}
