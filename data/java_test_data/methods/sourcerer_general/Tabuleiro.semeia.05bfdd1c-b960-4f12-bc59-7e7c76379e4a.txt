public boolean semeia(int posicao) {
    Cavidade atual = inicio;
    int sementes;
    cavJogada = posicao;
    boolean isPlayer;
    while (// procura a cavidade indicada
    atual.posicao() < posicao) atual = atual.prox();
    isPlayer = atual.player();
    /*
		//Funciona
		sementes = atual.sementes(); //semeia as cavidades posteriores
		for(atual.setSementes(0); sementes > 0; sementes--){
			atual.prox().setSementes((atual.prox().sementes()+1));
			atual = atual.prox();
			if((atual.prox().player() != isPlayer) && (atual.prox().kalah()))
				atual = atual.prox();
		}
		acabou = true;
		*/
    sementes = atual.sementes();
    atual.setSementes(0);
    for (atual = atual.prox(); sementes > 1; sementes--) {
        atual.setSementes((atual.sementes() + 1));
        atual = atual.prox();
        if ((atual.player() != isPlayer) && (atual.kalah()))
            atual = atual.prox();
    }
    atual.setSementes((atual.sementes() + 1));
    acabou = true;
    if (// caso caia no kalah
    atual.kalah())
        acabou = false;
    else if ((atual.sementes() == 1) && (atual.player() == isPlayer)) {
        // caso caia em uma casa vazia
        Cavidade kalah = atual;
        // procura a kalah
        boolean player = kalah.player();
        if (player)
            while (kalah.posicao() != (tamanho / 2)) kalah = kalah.prox();
        else
            while (kalah.posicao() != 0) kalah = kalah.prox();
        // adiciona ao kalah a semente do jogador
        kalah.setSementes(kalah.sementes() + atual.sementes());
        atual.setSementes(0);
        // adiciona ao kalah as sementes do adversario
        int adversario = (tamanho - atual.posicao());
        while (atual.posicao() != adversario) atual = atual.prox();
        kalah.setSementes(kalah.sementes() + atual.sementes());
        atual.setSementes(0);
    }
    return fimDeJogo();
}
