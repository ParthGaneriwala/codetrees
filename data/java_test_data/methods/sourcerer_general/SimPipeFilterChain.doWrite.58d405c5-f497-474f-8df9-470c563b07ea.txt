@Override
protected void doWrite(IoSession session, WriteRequest writeRequest) {
    SimPipeSessionImpl s = (SimPipeSessionImpl) session;
    if (s.isConnected()) {
        // if ( s.getTrafficMask().isWritable() && s.getLock().tryLock()) {
        // try {
        Object message = writeRequest.getMessage();
        int byteCount = 1;
        Object messageCopy = message;
        if (message instanceof ByteBuffer) {
            ByteBuffer rb = (ByteBuffer) message;
            rb.mark();
            byteCount = rb.remaining();
            ByteBuffer wb = ByteBuffer.allocate(rb.remaining());
            wb.put(rb);
            wb.flip();
            rb.reset();
            messageCopy = wb;
        }
        // Avoid unwanted side effect that scheduledWrite* becomes negative
        // by increasing them.
        s.increaseScheduledWriteBytes(byteCount);
        s.increaseScheduledWriteRequests();
        s.increaseWrittenBytes(byteCount);
        s.increaseWrittenMessages();
        // 
        // 
        // HERE the communication happens
        // 
        // 
        s.getRemoteSession().getFilterChain().fireMessageReceived(s.getRemoteSession(), messageCopy);
        s.getFilterChain().fireMessageSent(s, writeRequest);
        // } finally {
        // s.getLock().unlock();
        // }
        flushPendingDataQueues(s);
    // } else {
    // s.pendingDataQueue.add(writeRequest);
    // }
    } else {
        writeRequest.getFuture().setWritten(false);
    }
}
