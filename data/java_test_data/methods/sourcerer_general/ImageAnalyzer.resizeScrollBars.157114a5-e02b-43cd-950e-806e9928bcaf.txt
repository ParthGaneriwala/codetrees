void resizeScrollBars() {
    // Set the max and thumb for the image canvas scroll bars.
    ScrollBar horizontal = imageCanvas.getHorizontalBar();
    ScrollBar vertical = imageCanvas.getVerticalBar();
    Rectangle canvasBounds = imageCanvas.getClientArea();
    int width = Math.round(imageData.width * xscale);
    if (width > canvasBounds.width) {
        // The image is wider than the canvas.
        horizontal.setEnabled(true);
        horizontal.setMaximum(width);
        horizontal.setThumb(canvasBounds.width);
        horizontal.setPageIncrement(canvasBounds.width);
    } else {
        // The canvas is wider than the image.
        horizontal.setEnabled(false);
        if (ix != 0) {
            // Make sure the image is completely visible.
            ix = 0;
            imageCanvas.redraw();
        }
    }
    int height = Math.round(imageData.height * yscale);
    if (height > canvasBounds.height) {
        // The image is taller than the canvas.
        vertical.setEnabled(true);
        vertical.setMaximum(height);
        vertical.setThumb(canvasBounds.height);
        vertical.setPageIncrement(canvasBounds.height);
    } else {
        // The canvas is taller than the image.
        vertical.setEnabled(false);
        if (iy != 0) {
            // Make sure the image is completely visible.
            iy = 0;
            imageCanvas.redraw();
        }
    }
    // Set the max and thumb for the palette canvas scroll bar.
    vertical = paletteCanvas.getVerticalBar();
    if (imageData.palette.isDirect) {
        vertical.setEnabled(false);
    } else {
        // indexed palette
        canvasBounds = paletteCanvas.getClientArea();
        // 10
        int paletteHeight = imageData.palette.getRGBs().length * 10 + 20;
        // pixels
        // each
        // index
        // + 20
        // for
        // margins.
        vertical.setEnabled(true);
        vertical.setMaximum(paletteHeight);
        vertical.setThumb(canvasBounds.height);
        vertical.setPageIncrement(canvasBounds.height);
    }
}
