private Dimension getPreferredSizeWrapped() {
    Graphics ng = getGraphics();
    int myWidth = wrapWidth;
    FontMetrics metrics = getFontMetrics(getFont());
    int npos = 0;
    int currentY = 0;
    while (npos < text.length()) {
        int end = text.indexOf(lineSep, npos);
        if (end == -1) {
            end = text.length();
        }
        String line = text.substring(npos, end);
        Rectangle2D lineRect = metrics.getStringBounds(line, ng);
        int lineAmount;
        int lineHeight = (int) lineRect.getHeight();
        if (lineRect.getWidth() > myWidth) {
            int lbound = 0;
            int hbound = line.length();
            int lboundw = 0;
            int hboundw = (int) lineRect.getWidth();
            // can actually fit in the current width
            while (hbound - lbound > 1) {
                int middle = lbound + (hbound - lbound) * (hboundw - lboundw) / (myWidth - lboundw);
                if (middle <= lbound) {
                    middle = lbound + 1;
                }
                if (middle >= hbound) {
                    middle = hbound - 1;
                }
                lineRect = metrics.getStringBounds(line, 0, middle, ng);
                int middlew = (int) lineRect.getWidth();
                if (middlew > myWidth) {
                    hbound = middle;
                    hboundw = middlew;
                } else {
                    lbound = middle;
                    lboundw = middlew;
                    lineHeight = (int) lineRect.getHeight();
                }
            }
            lineAmount = lbound;
            // Wrap words at word boundaries...
            int priorSpace = line.indexOf(' ', 1);
            while (priorSpace != -1 && priorSpace <= lbound) {
                lineAmount = priorSpace - 1;
                priorSpace = line.indexOf(' ', priorSpace + 1);
            }
            if (lineAmount <= 0) {
                lineAmount = 1;
            }
        } else {
            lineAmount = line.length();
        }
        currentY += lineHeight;
        if (lineAmount < line.length()) {
            npos += lineAmount;
            if (text.charAt(npos) == ' ') {
                npos++;
            }
        } else {
            npos = end + lineSep.length();
        }
    }
    return new Dimension(wrapWidth, currentY);
}
