public void run() {
    if ((moreInsert != null) && !(moreInsert.isDisposed()))
        moreInsert.dispose();
    if (id <= 0) {
        // couldn't insert the person
        okMessageBox("There was a problem inserting the person. Sorry for the inconvenience :)");
    } else {
        moreInsert = new ExpandBar(insertPerson, SWT.V_SCROLL);
        moreInsert.setBackground(new Color(display, 177, 200, 231));
        Composite composite = new Composite(moreInsert, SWT.NONE);
        GridLayout layout = new GridLayout(6, false);
        Image image = ImageCache.getImage("book_48.png");
        layout.marginLeft = layout.marginTop = layout.marginRight = layout.marginBottom = 5;
        layout.verticalSpacing = 10;
        composite.setLayout(layout);
        // aka names
        Label label = new Label(composite, SWT.NONE);
        label.setText("AKA Name:");
        final Text akaText = new Text(composite, SWT.SINGLE | SWT.FILL | SWT.BORDER);
        Button akaButton = new Button(composite, SWT.PUSH);
        akaButton.setText("Add");
        akaButton.addSelectionListener(new SelectionListener() {

            public void widgetDefaultSelected(SelectionEvent e) {
            }

            public void widgetSelected(SelectionEvent e) {
                if (akaText.getText() != "") {
                    AbsType t = new NamedEntity(id, akaText.getText());
                    try {
                        pool.execute(DataManager.insertPersonData(PersonDataEnum.PERSON_AKAS, t, false));
                    } catch (InterruptedException e1) {
                        e1.printStackTrace();
                    }
                }
            }
        });
        ExpandItem item1 = new ExpandItem(moreInsert, SWT.NONE, 0);
        item1.setText("Insert AKA Names For The Person");
        item1.setHeight(composite.computeSize(SWT.DEFAULT, SWT.DEFAULT).y);
        item1.setControl(composite);
        item1.setImage(image);
        item1.setExpanded(false);
        // quotes
        composite = new Composite(moreInsert, SWT.NONE);
        image = ImageCache.getImage("speech_bubble_48.png");
        layout = new GridLayout(6, false);
        layout.marginLeft = layout.marginTop = layout.marginRight = layout.marginBottom = 5;
        layout.verticalSpacing = 10;
        composite.setLayout(layout);
        label = new Label(composite, SWT.NONE);
        label.setText("Quote:");
        final Text quoteText = new Text(composite, SWT.SINGLE | SWT.FILL | SWT.BORDER);
        Button quoteButton = new Button(composite, SWT.PUSH);
        quoteButton.setText("Add");
        quoteButton.addSelectionListener(new SelectionListener() {

            public void widgetDefaultSelected(SelectionEvent e) {
            }

            public void widgetSelected(SelectionEvent e) {
                if (quoteText.getText() != "") {
                    AbsType t = new NamedEntity(id, quoteText.getText());
                    try {
                        pool.execute(DataManager.insertPersonData(PersonDataEnum.PERSON_QUOTES, t, false));
                    } catch (InterruptedException e1) {
                        e1.printStackTrace();
                    }
                }
            }
        });
        ExpandItem item3 = new ExpandItem(moreInsert, SWT.NONE, 1);
        item3.setText("Insert Person's Quotes");
        item3.setHeight(composite.computeSize(SWT.DEFAULT, SWT.DEFAULT).y);
        item3.setControl(composite);
        item3.setImage(image);
        item3.setExpanded(false);
        moreInsert.setSpacing(8);
        insertPerson.setSize((shell.getShell().getSize().x) - 5, (shell.getShell().getSize().y) / 2 + 100);
    }
}
