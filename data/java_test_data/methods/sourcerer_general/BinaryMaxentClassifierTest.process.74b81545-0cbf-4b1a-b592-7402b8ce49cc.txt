@Override
public void process(JCas cas) throws AnalysisEngineProcessException {
    if (this.isTraining()) {
        this.dataWriter.write(createInstance(Boolean.TRUE, "hello", 1234));
        this.dataWriter.write(createInstance(Boolean.TRUE, "hello", 1000));
        this.dataWriter.write(createInstance(Boolean.TRUE, "hello", 900));
        this.dataWriter.write(createInstance(Boolean.TRUE, "hello", 1500));
        this.dataWriter.write(createInstance(Boolean.TRUE, "hello", 2000));
        this.dataWriter.write(createInstance(Boolean.TRUE, "hello", 1235));
        this.dataWriter.write(createInstance(Boolean.TRUE, "hello", 1001));
        this.dataWriter.write(createInstance(Boolean.TRUE, "hello", 901));
        this.dataWriter.write(createInstance(Boolean.TRUE, "hello", 1501));
        this.dataWriter.write(createInstance(Boolean.TRUE, "hello", 2001));
        this.dataWriter.write(createInstance(Boolean.TRUE, "hello", 1502));
        this.dataWriter.write(createInstance(Boolean.TRUE, "hello", 2003));
        this.dataWriter.write(createInstance(Boolean.FALSE, "hello", 10));
        this.dataWriter.write(createInstance(Boolean.FALSE, "hello", 8));
        this.dataWriter.write(createInstance(Boolean.FALSE, "hello", 60));
        this.dataWriter.write(createInstance(Boolean.FALSE, "hello", 80));
        this.dataWriter.write(createInstance(Boolean.FALSE, "hello", 4));
        this.dataWriter.write(createInstance(Boolean.FALSE, "hello", 11));
        this.dataWriter.write(createInstance(Boolean.FALSE, "hello", 5));
        this.dataWriter.write(createInstance(Boolean.FALSE, "hello", 61));
        this.dataWriter.write(createInstance(Boolean.FALSE, "hello", 81));
        this.dataWriter.write(createInstance(Boolean.FALSE, "hello", 7));
        this.dataWriter.write(createInstance(Boolean.FALSE, "hello", 82));
        this.dataWriter.write(createInstance(Boolean.FALSE, "hello", 3));
        this.dataWriter.write(createInstance(Boolean.FALSE, "goodbye", 1));
        this.dataWriter.write(createInstance(Boolean.FALSE, "goodbye", 8));
        this.dataWriter.write(createInstance(Boolean.FALSE, "goodbye", 60));
        this.dataWriter.write(createInstance(Boolean.FALSE, "goodbye", 81));
        this.dataWriter.write(createInstance(Boolean.FALSE, "goodbye", 4));
        this.dataWriter.write(createInstance(Boolean.FALSE, "goodbye", 11));
        this.dataWriter.write(createInstance(Boolean.FALSE, "goodbye", 7));
        this.dataWriter.write(createInstance(Boolean.FALSE, "goodbye", 61));
        this.dataWriter.write(createInstance(Boolean.FALSE, "goodbye", 82));
        this.dataWriter.write(createInstance(Boolean.FALSE, "goodbye", 2));
        this.dataWriter.write(createInstance(Boolean.FALSE, "goodbye", 83));
        this.dataWriter.write(createInstance(Boolean.FALSE, "goodbye", 1));
    } else {
        Boolean classification = this.classifier.classify(createInstance("", "hello", 1000).getFeatures());
        assertTrue(classification);
        classification = this.classifier.classify(createInstance("", "hello", 1).getFeatures());
        assertTrue(classification);
        classification = this.classifier.classify(createInstance("", "goodbye", 1).getFeatures());
        assertFalse(classification);
    }
}
