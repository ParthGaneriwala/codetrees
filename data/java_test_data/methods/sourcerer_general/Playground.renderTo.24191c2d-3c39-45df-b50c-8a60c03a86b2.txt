void renderTo(Graphics g) {
    final int start = getLowestVisiblePlatform();
    for (int i = start; i < start + VISIBLE_PLATFORM_COUNT; i++) {
        final int xPos = getXPosition(i);
        final int xLength = getXLength(i);
        final int yPos = this.world.calculateViewPosition(getYPosition(i));
        if (xLength == 70) {
            g.drawImage(platform70Image, xPos, yPos, Graphics.LEFT | Graphics.TOP);
        } else if (xLength == 50) {
            g.drawImage(platform50Image, xPos, yPos, Graphics.LEFT | Graphics.TOP);
        } else if (xLength == 30) {
            g.drawImage(platform30Image, xPos, yPos, Graphics.LEFT | Graphics.TOP);
        } else if (xLength == 144) {
            g.drawImage(platformFullImage, xPos, yPos, Graphics.LEFT | Graphics.TOP);
        } else {
            throw new IllegalStateException("In Playground 5");
        }
        if (i == 0) {
            g.drawImage(woodShieldImageSmall, xPos + xLength - 20, yPos + 1, Graphics.BOTTOM | Graphics.HCENTER);
            g.setColor(0x771111);
            g.setFont(Font.getFont(Font.FACE_MONOSPACE, Font.STYLE_PLAIN, Font.SIZE_SMALL));
            g.drawString("0", xPos + xLength - 20, yPos - 14, Graphics.HCENTER | Graphics.TOP);
        } else if (i % 10 == 0) {
            if (i < 100) {
                g.drawImage(woodShieldImageMedium, xPos + xLength - 17, yPos + 1, Graphics.BOTTOM | Graphics.HCENTER);
                g.setColor(0x771111);
                g.setFont(Font.getFont(Font.FACE_MONOSPACE, Font.STYLE_PLAIN, Font.SIZE_SMALL));
                g.drawString("" + i, xPos + xLength - 17, yPos - 14, Graphics.HCENTER | Graphics.TOP);
            } else {
                g.drawImage(woodShieldImageBig, xPos + xLength - 17, yPos + 1, Graphics.BOTTOM | Graphics.HCENTER);
                g.setColor(0x771111);
                g.setFont(Font.getFont(Font.FACE_MONOSPACE, Font.STYLE_PLAIN, Font.SIZE_SMALL));
                g.drawString("" + i, xPos + xLength - 17, yPos - 14, Graphics.HCENTER | Graphics.TOP);
            }
        }
    }
}
