public void targetSelected(Target t) {
    if (t == null) {
        if (getState() != S_IDLE) {
            setState(S_IDLE);
            setStatus(" ");
        }
        return;
    }
    switch(getState()) {
        case S_CHOOSE_USES_FROM:
            if (t instanceof DependentTarget) {
                fromChoice = (DependentTarget) t;
                setState(S_CHOOSE_USES_TO);
                setStatus(chooseUsesTo);
            } else {
                setState(S_IDLE);
                setStatus(" ");
            }
            break;
        case S_CHOOSE_USES_TO:
            if (t != fromChoice && t instanceof DependentTarget) {
                setState(S_IDLE);
                addDependency(new UsesDependency(this, fromChoice, (DependentTarget) t), true);
                setStatus(" ");
            }
            break;
        case S_CHOOSE_EXT_FROM:
            if (t instanceof DependentTarget) {
                fromChoice = (DependentTarget) t;
                setState(S_CHOOSE_EXT_TO);
                setStatus(chooseInhTo);
            } else {
                setState(S_IDLE);
                setStatus(" ");
            }
            break;
        case S_CHOOSE_EXT_TO:
            if (t != fromChoice) {
                setState(S_IDLE);
                if (t instanceof ClassTarget && fromChoice instanceof ClassTarget) {
                    ClassTarget from = (ClassTarget) fromChoice;
                    ClassTarget to = (ClassTarget) t;
                    // dependency
                    if (to.isInterface()) {
                        Dependency d = new ImplementsDependency(this, from, to);
                        if (from.isInterface()) {
                            userAddImplementsInterfaceDependency(d);
                        } else {
                            userAddImplementsClassDependency(d);
                        }
                        addDependency(d, true);
                    } else {
                        // class
                        if (!from.isInterface()) {
                            Dependency d = new ExtendsDependency(this, from, to);
                            userAddExtendsClassDependency(d);
                            addDependency(d, true);
                        }
                    }
                }
                setStatus(" ");
            }
            break;
        default:
            // e.g. deleting arrow - selecting target ignored
            break;
    }
}
