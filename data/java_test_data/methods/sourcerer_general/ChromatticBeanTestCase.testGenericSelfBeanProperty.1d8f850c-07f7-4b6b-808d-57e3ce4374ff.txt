public void testGenericSelfBeanProperty() throws Exception {
    class A<X> {

        public X getA() {
            return null;
        }
    }
    class B extends A<B> {
    }
    // 
    Map<Class<?>, BeanInfo> beans = buildInfo(Object.class, A.class, B.class);
    BeanInfo oi = beans.get(Object.class);
    BeanInfo ai = beans.get(A.class);
    BeanInfo bi = beans.get(B.class);
    // 
    PropertyInfo ap = ai.getProperty("a");
    assertNotNull(ap);
    // assertSame(o, ap.getType()); <X>
    assertSame(Object.class, ap.getValue().getEffectiveType().unwrap());
    assertTrue(ap.getValue() instanceof BeanValueInfo);
    assertEquals(oi, ((BeanValueInfo) ap.getValue()).getBean());
    assertSame(null, ap.getParent());
    assertNotNull(ap.getGetter());
    assertSame(ai.classType.getDeclaredMethod(new MethodSignature("getA")), ap.getGetter());
    assertNull(ap.getSetter());
    // 
    PropertyInfo bp = bi.getProperty("a");
    assertNotNull(bp);
    // assertSame(domain.resolve(B.class), bp.getType());
    assertSame(domain.resolve(B.class), bp.getValue().getEffectiveType());
    assertTrue(bp.getValue() instanceof BeanValueInfo);
    assertEquals(bi, ((BeanValueInfo) bp.getValue()).getBean());
    assertSame(ap, bp.getParent());
    assertNotNull(bp.getGetter());
    assertSame(ai.classType.getDeclaredMethod(new MethodSignature("getA")), bp.getGetter());
    assertNull(bp.getSetter());
}
