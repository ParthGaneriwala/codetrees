public ActionForward access(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
    AdminUploadFileForm adminUploadFileForm = (AdminUploadFileForm) form;
    // String returnUrl = request.getParameter("returnUrl");
    // java.text.SimpleDateFormat formatter = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    // System.out.println(returnUrl);
    UcMembers member = (UcMembers) request.getSession().getAttribute("ADMIN");
    if (adminUploadFileForm.getFile() != null) {
        FormFile file = adminUploadFileForm.getFile();
        String ext = "";
        if (file.getFileSize() > 0 && file.getFileSize() <= 100000000) {
            System.out.println(" ��С��" + file.getFileSize());
            System.out.println(" ��׺��" + file.getFileName().substring(file.getFileName().lastIndexOf(".")));
            ext = file.getFileName().substring(file.getFileName().lastIndexOf("."));
            if (ext.toLowerCase().equals(".mdb")) {
                String accessurl = UploadFile.upload(file, request, "UploadFile/access");
                System.out.println(accessurl);
                // 
                // String driver = "sun.jdbc.odbc.JdbcOdbcDriver";
                String url = "jdbc:odbc:driver={Microsoft Access Driver (*.mdb)};DBQ=" + accessurl;
                String sql = "select ����,����,ժҪ from content ";
                // String url = "jdbc:odbc:Driver={MicroSoft Access Driver
                // *.mdb)};DBQ = Northwind.mdb";
                String username = "";
                String password = "";
                Connection conn = null;
                Statement stmt = null;
                ResultSet rs = null;
                int addCnt = 0;
                int totalCnt = 0;
                try {
                    Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
                    conn = DriverManager.getConnection(url, username, password);
                    stmt = conn.createStatement();
                    rs = stmt.executeQuery(sql);
                    while (rs.next()) {
                        String title = rs.getString(1);
                        String content = rs.getString(2);
                        String description = rs.getString(3);
                        if (articleListManager.verifyTitle(title.trim()) && title != null && title.length() > 0 && content != null && content.length() > 0) {
                            Article a = new Article();
                            ArticleContent ac = new ArticleContent();
                            ac.setContent(content);
                            a.setIsdelete("N");
                            a.setUserid(member.getUid());
                            a.setUsername(member.getUsername());
                            a.setUserip(request.getLocalAddr());
                            a.setArticleContent(ac);
                            a.setPubdate(new Date());
                            a.setLastpost(new Date());
                            a.setTitle(title);
                            a.setIsbuild((short) 0);
                            if (title.length() > 40) {
                                a.setShorttitle(title.substring(0, 39));
                            } else {
                                a.setShorttitle(title);
                            }
                            if (description != null && description.length() > 0) {
                                if (description.length() > 250) {
                                    a.setDescription(description.substring(0, 248));
                                } else if (description.length() > 1 && description.length() < 250) {
                                    a.setDescription(description);
                                }
                            }
                            a.setClick(0);
                            a.setIscommend((short) 0);
                            a.setIsverify((short) 1);
                            a.setDigg(0);
                            if (adminUploadFileForm.getType() != null) {
                                ArticleType at = articleTypeManager.getArticleType(Integer.parseInt(adminUploadFileForm.getType()));
                                a.setArticleType(at);
                            }
                            if (adminUploadFileForm.getTypeid() != null && adminUploadFileForm.getTypeid().trim() != "0") {
                                ArticleType at = articleTypeManager.getArticleType(Integer.parseInt(adminUploadFileForm.getTypeid().trim()));
                                a.setArticleType2(at);
                            }
                            ac.setArticle(a);
                            articleListManager.addArticle(a);
                            articleListManager.addArticleContent(ac);
                            System.out.println(title.trim());
                            // System.out.println(rs.getString(2));
                            // System.out.println();
                            boolean txtFlag = ToHtml.toTxt(content, request.getRealPath("/") + "article/txt/" + a.getId() + ".txt", "gbk");
                            addCnt++;
                            totalCnt++;
                        } else
                            totalCnt++;
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                } catch (ClassNotFoundException ex) {
                    ex.printStackTrace();
                } catch (Exception e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
                // 
                request.setAttribute("RESULT_MESSAGE", "���ݿ⹲" + totalCnt + "����¼���ɹ����" + addCnt + "����¼");
                return mapping.findForward("access");
            } else {
                request.setAttribute("FAIL_MESSAGE", "ֻ���ϴ�Access�ļ�!");
                return mapping.findForward("fail");
            }
        } else {
            request.setAttribute("FAIL_MESSAGE", "��ѡ���ϴ����ļ��������ϴ����ļ����󣬲��ܴ���100M!");
            return mapping.findForward("fail");
        }
    } else {
        request.setAttribute("FAIL_MESSAGE", "ֻ���ϴ�Access�ļ�!");
        return mapping.findForward("fail");
    }
}
