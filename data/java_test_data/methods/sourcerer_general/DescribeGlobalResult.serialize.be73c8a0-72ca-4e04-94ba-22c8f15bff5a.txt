public void serialize(final javax.xml.namespace.QName parentQName, final org.apache.axiom.om.OMFactory factory, org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException {
    java.lang.String prefix = null;
    java.lang.String namespace = null;
    prefix = parentQName.getPrefix();
    namespace = parentQName.getNamespaceURI();
    if (namespace != null) {
        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
        if (writerPrefix != null) {
            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
        } else {
            if (prefix == null) {
                prefix = generatePrefix(namespace);
            }
            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
            xmlWriter.writeNamespace(prefix, namespace);
            xmlWriter.setPrefix(prefix, namespace);
        }
    } else {
        xmlWriter.writeStartElement(parentQName.getLocalPart());
    }
    namespace = "urn:enterprise.soap.sforce.com";
    if (!namespace.equals("")) {
        prefix = xmlWriter.getPrefix(namespace);
        if (prefix == null) {
            prefix = generatePrefix(namespace);
            xmlWriter.writeStartElement(prefix, "encoding", namespace);
            xmlWriter.writeNamespace(prefix, namespace);
            xmlWriter.setPrefix(prefix, namespace);
        } else {
            xmlWriter.writeStartElement(namespace, "encoding");
        }
    } else {
        xmlWriter.writeStartElement("encoding");
    }
    if (localEncoding == null) {
        // write the nil attribute
        writeAttribute("xsi", "http://www.w3.org/2001/XMLSchema-instance", "nil", "1", xmlWriter);
    } else {
        xmlWriter.writeCharacters(localEncoding);
    }
    xmlWriter.writeEndElement();
    namespace = "urn:enterprise.soap.sforce.com";
    if (!namespace.equals("")) {
        prefix = xmlWriter.getPrefix(namespace);
        if (prefix == null) {
            prefix = generatePrefix(namespace);
            xmlWriter.writeStartElement(prefix, "maxBatchSize", namespace);
            xmlWriter.writeNamespace(prefix, namespace);
            xmlWriter.setPrefix(prefix, namespace);
        } else {
            xmlWriter.writeStartElement(namespace, "maxBatchSize");
        }
    } else {
        xmlWriter.writeStartElement("maxBatchSize");
    }
    if (localMaxBatchSize == java.lang.Integer.MIN_VALUE) {
        throw new org.apache.axis2.databinding.ADBException("maxBatchSize cannot be null!!");
    } else {
        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaxBatchSize));
    }
    xmlWriter.writeEndElement();
    if (localSobjectsTracker) {
        if (localSobjects != null) {
            for (int i = 0; i < localSobjects.length; i++) {
                if (localSobjects[i] != null) {
                    localSobjects[i].serialize(new javax.xml.namespace.QName("urn:enterprise.soap.sforce.com", "sobjects"), factory, xmlWriter);
                } else {
                // we don't have to do any thing since minOccures is zero
                }
            }
        } else {
            throw new org.apache.axis2.databinding.ADBException("sobjects cannot be null!!");
        }
    }
    xmlWriter.writeEndElement();
}
