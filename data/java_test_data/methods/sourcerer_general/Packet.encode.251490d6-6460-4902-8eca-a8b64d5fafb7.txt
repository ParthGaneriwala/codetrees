public byte[] encode(int encoding) {
    byte[] payload = this.getPayload(true).getBytes();
    if (encoding == Encoding.ENCODING_BINARY) {
        int len = payload.length;
        byte[] pkt = new byte[MIN_HEADER_LENGTH + len];
        pkt[0] = (byte) (this.header & 0xFF);
        pkt[1] = (byte) (this.type & 0xFF);
        pkt[2] = (byte) (len & 0xFF);
        System.arraycopy(payload, 0, pkt, 3, len);
        return pkt;
    } else {
        StringBuffer sb = new StringBuffer();
        sb.append(Encoding.AsciiEncodingChar);
        sb.append(StringTools.toHexString((long) this.header & 0xFF, 8));
        sb.append(StringTools.toHexString((long) this.type & 0xFF, 8));
        if (payload.length > 0) {
            switch(encoding) {
                case Encoding.ENCODING_CSV_CKSUM:
                case Encoding.ENCODING_CSV:
                    {
                        sb.append("?unsupported_encoding?");
                        break;
                    }
                case Encoding.ENCODING_BASE64_CKSUM:
                case Encoding.ENCODING_BASE64:
                    {
                        sb.append(Encoding.ENCODING_BASE64_CHAR);
                        sb.append(Base64.encode(payload));
                        break;
                    }
                case Encoding.ENCODING_HEX_CKSUM:
                case Encoding.ENCODING_HEX:
                    {
                        sb.append(Encoding.ENCODING_HEX_CHAR);
                        StringTools.toHexString(payload, sb);
                        break;
                    }
                case Encoding.ENCODING_UNKNOWN:
                default:
                    {
                        sb.append("?unknown_encoding?");
                        break;
                    }
            }
        } else {
        // sb.append(" <No Payload>");
        }
        /* add ASCII checksum */
        if (Encoding.IsEncodingChecksum(encoding)) {
            int cksum = CalcChecksum(StringTools.getBytes(sb.toString()));
            if (cksum >= 0) {
                sb.append(Encoding.AsciiChecksumChar);
                sb.append(StringTools.toHexString((long) cksum & 0xFF, 8));
            }
        }
        /* end of line */
        sb.append(Encoding.AsciiEndOfLineChar);
        return StringTools.getBytes(sb.toString());
    }
}
