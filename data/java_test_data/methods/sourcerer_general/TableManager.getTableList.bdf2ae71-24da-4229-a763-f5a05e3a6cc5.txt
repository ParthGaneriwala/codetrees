public static List<Table> getTableList(Connection connection, List<String> allTables) throws Exception {
    long time = System.currentTimeMillis();
    String projectName = PropertyUtils.getProperty("projectName");
    String companyName = PropertyUtils.getProperty("companyName");
    ExecutorService exec = Executors.newFixedThreadPool(10);
    int j = 0;
    int avg = allTables.size() / 40 + 1;
    for (int i = 0; i < avg; i++) {
        List<String> subTableList = null;
        if (allTables.size() < j + 40) {
            subTableList = allTables.subList(j, allTables.size());
        } else {
            subTableList = allTables.subList(j, j + 40);
        }
        j = j + 40;
        TableConnectionThread run = new TableConnectionThread();
        run.setTableList(subTableList);
        exec.execute(run);
    }
    exec.shutdown();
    File file = new File("E://generatorCode");
    FileUtils.deleteDirectory(file);
    FileUtils.forceMkdir(new File("E://generatorCode/src/com/" + companyName + "/" + projectName + "/web/struts/manager/admin"));
    FileUtils.forceMkdir(new File("E://generatorCode/src/com/" + companyName + "/" + projectName + "/domain"));
    FileUtils.forceMkdir(new File("E://generatorCode/src/com/" + companyName + "/" + projectName + "/service/impl"));
    FileUtils.forceMkdir(new File("E://generatorCode/src/com/" + companyName + "/" + projectName + "/dao/ibatis/maps"));
    FileUtils.forceMkdir(new File("E://generatorCode/WebContent/admin/"));
    while (!exec.isTerminated()) {
    }
    System.out.println("all database : " + (System.currentTimeMillis() - time) + " milliseconds");
    return com.zxgllhh.domain.ConnectionContext.getTableList();
}
