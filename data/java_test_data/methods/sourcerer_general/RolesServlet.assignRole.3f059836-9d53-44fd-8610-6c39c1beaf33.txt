private void assignRole(HttpServletRequest request, ModelAndView next, WikiPageInfo pageInfo) throws Exception {
    // the way this works is that there will be an array of candidate
    // groups - these are all groups that could have been modified.  there
    // will also be a groupRole array containing values of the form
    // "userid|groupid|role".  process both, deleting all old roles for the
    // candidate group array and adding the new roles in the groupRole
    // array.
    ArrayList errors = new ArrayList();
    try {
        String[] candidateGroups = request.getParameterValues("candidateGroup");
        String[] groupRoles = request.getParameterValues("groupRole");
        if (candidateGroups != null) {
            for (int i = 0; i < candidateGroups.length; i++) {
                int groupId = Integer.parseInt(candidateGroups[i]);
                List roles = buildRoleArray(-1, groupId, groupRoles);
                WikiBase.getDataHandler().writeRoleMapGroup(groupId, roles, null);
            }
            next.addObject("message", new WikiMessage("roles.message.grouproleupdate"));
        }
        // now do the same for user roles.
        String[] candidateUsers = request.getParameterValues("candidateUser");
        String[] userRoles = request.getParameterValues("userRole");
        if (candidateUsers != null) {
            for (int i = 0; i < candidateUsers.length; i++) {
                int userId = Integer.parseInt(candidateUsers[i]);
                List roles = buildRoleArray(userId, -1, userRoles);
                if (userId == ServletUtil.currentUser().getUserId() && !roles.contains(Role.ROLE_SYSADMIN)) {
                    errors.add(new WikiMessage("roles.message.sysadminremove"));
                    roles.add(Role.ROLE_SYSADMIN.getAuthority());
                }
                WikiBase.getDataHandler().writeRoleMapUser(userId, roles, null);
            }
            next.addObject("message", new WikiMessage("roles.message.userroleupdate"));
        }
    } catch (WikiException e) {
        errors.add(e.getWikiMessage());
    } catch (Exception e) {
        logger.severe("Failure while adding role", e);
        errors.add(new WikiMessage("roles.message.rolefail", e.getMessage()));
    }
    if (errors.size() > 0) {
        next.addObject("errors", errors);
    }
    this.view(request, next, pageInfo);
}
