@Override
public void buildTradeWindow() {
    ITheme theme;
    try {
        theme = new XMLTheme("data/themes/QtCurve/QtCurve.xml");
    } catch (IOException e) {
        e.printStackTrace();
        theme = new DefaultTheme();
    } catch (IXMLStreamableException e) {
        e.printStackTrace();
        theme = new DefaultTheme();
    }
    FengGUI.setTheme(theme);
    win = FengGUI.createWindow(true, false, false, true);
    Container left = new Container(new RowLayout(false));
    Container middle = new Container(new RowLayout(false));
    Container right = new Container(new RowLayout(false));
    Container outer = new Container(new RowLayout());
    // construct left container with customer item list
    ItemListModel custModel = new ItemListModel();
    customer.addInventoryObserver(custModel);
    ItemSelectionList custList = new ItemSelectionList(custModel);
    ItemStatsDisplay custItemStats = new ItemStatsDisplay();
    left.addWidget(custList, custItemStats);
    GameMenuButton buy = new GameMenuButton(BUY.getAbsolutePath(), BUY.getAbsolutePath());
    if (buyListener != null)
        buy.addButtonPressedListener(buyListener);
    buy.setExpandable(false);
    buy.setShrinkable(false);
    Container buyCont = new Container();
    buyCont.addWidget(buy);
    GameMenuButton sell = new GameMenuButton(SELL.getAbsolutePath(), SELL.getAbsolutePath());
    if (sellListener != null)
        sell.addButtonPressedListener(sellListener);
    sell.setExpandable(false);
    sell.setShrinkable(false);
    Container sellCont = new Container();
    sellCont.addWidget(sell);
    middle.addWidget(buyCont, sellCont);
    // construct right container with vendor's item list
    ItemListModel vendModel = new ItemListModel();
    vendor.addInventoryObserver(vendModel);
    ItemSelectionList vendItemStats = new ItemSelectionList(vendModel);
    ItemStatsDisplay vendList = new ItemStatsDisplay();
    left.addWidget(vendList, vendItemStats);
    outer.addWidget(left, middle, right);
    win.setContentContainer(outer);
}
