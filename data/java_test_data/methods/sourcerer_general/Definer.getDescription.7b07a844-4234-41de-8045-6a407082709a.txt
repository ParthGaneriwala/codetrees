public Element getDescription() {
    Element description = wms.doc.createElement("Description");
    description.setAttribute("task", "define");
    description.appendChild(wms.createElement("Details", "<p>This services provides definitions for articles and categories from their first sentences or paragraphs, in either plain text, wiki format, or html. It can also optionally obtain URLs for relevant images from <a href=\"http://www.freebase.org\">FreeBase</a> </p>" + "<p>You can only obtain definitions from unique page ids. If you want definitions for terms, then use the <a href=\"" + wms.context.getInitParameter("service_name") + "?task=search&help\">search service</a> to identify the unique id first. </p>"));
    Element paramId = wms.doc.createElement("Parameter");
    paramId.setAttribute("name", "id");
    paramId.appendChild(wms.doc.createTextNode("The unique identifier of the page to define."));
    description.appendChild(paramId);
    Element paramLength = wms.doc.createElement("Parameter");
    paramLength.setAttribute("name", "length");
    paramLength.appendChild(wms.doc.createTextNode("The required length of the definition; either <em>" + LENGTH_SHORT + "</em> (short, one sentence), or <em>" + LENGTH_LONG + "</em> (long, one paragraph)."));
    paramLength.setAttribute("optional", "true");
    paramLength.setAttribute("default", String.valueOf(getDefaultLength()));
    description.appendChild(paramLength);
    Element paramFormat = wms.doc.createElement("Parameter");
    paramFormat.setAttribute("name", "format");
    paramFormat.appendChild(wms.doc.createTextNode("The desired format: <em>" + FORMAT_PLAIN + "</em> (plain text), <em>" + FORMAT_WIKI + "</em> (mediawiki markup), or <em>" + FORMAT_HTML + "</em> (html)"));
    paramFormat.setAttribute("optional", "true");
    paramFormat.setAttribute("default", String.valueOf(getDefaultFormat()));
    description.appendChild(paramFormat);
    Element paramLink = wms.doc.createElement("Parameter");
    paramLink.setAttribute("name", "linkDestination");
    paramLink.appendChild(wms.doc.createTextNode("The destination of links when using html format, <em>" + LINK_NONE + "</em> (none, links revert to plain text), <em>" + LINK_DIRECT + "</em> (to wikipedia), or <em>" + LINK_TOOLKIT + "</em> (to the Wikipedia Miner search service)"));
    paramLink.setAttribute("optional", "true");
    paramLink.setAttribute("default", String.valueOf(getDefaultLinkDestination()));
    description.appendChild(paramLink);
    Element paramGetImages = wms.doc.createElement("Parameter");
    paramGetImages.setAttribute("name", "getImages");
    paramGetImages.appendChild(wms.doc.createTextNode("Whether or not to retrieve relevant image urls from freebase"));
    paramGetImages.setAttribute("optional", "true");
    paramGetImages.setAttribute("default", String.valueOf(false));
    description.appendChild(paramGetImages);
    Element paramMaxImageWidth = wms.doc.createElement("Parameter");
    paramMaxImageWidth.setAttribute("name", "maxImageWidth");
    paramMaxImageWidth.appendChild(wms.doc.createTextNode("Images can be scaled. This defines their maximum width, in pixels. "));
    paramMaxImageWidth.setAttribute("optional", "true");
    paramMaxImageWidth.setAttribute("default", String.valueOf(getDefaultMaxImageWidth()));
    description.appendChild(paramMaxImageWidth);
    Element paramMaxImageHeight = wms.doc.createElement("Parameter");
    paramMaxImageHeight.setAttribute("name", "maxImageHeight");
    paramMaxImageHeight.appendChild(wms.doc.createTextNode("Images can be scaled. This defines their maximum height, in pixels. "));
    paramMaxImageHeight.setAttribute("optional", "true");
    paramMaxImageHeight.setAttribute("default", String.valueOf(getDefaultMaxImageHeight()));
    description.appendChild(paramMaxImageHeight);
    return description;
}
