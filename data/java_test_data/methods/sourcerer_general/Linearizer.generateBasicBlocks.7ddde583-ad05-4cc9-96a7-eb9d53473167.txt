public void generateBasicBlocks() {
    blocks = new Vector();
    // Create a new "done" label
    doneLabel = new Label();
    AssemStmList currentBlock = null;
    AssemStmList prevStmList = null;
    AssemStm finalStm = null;
    for (AssemStmList mainList = canonizedRepresentation; mainList != null; mainList = mainList.getStmList()) {
        AssemStm stm = mainList.getStm();
        if (stm instanceof AssemLabel) {
            AssemLabel assemLbl = (AssemLabel) stm;
            if (!(finalStm instanceof AssemJump || finalStm instanceof AssemCJump)) {
                // End the previous block with a jump to the label at the end of the current block
                if (currentBlock != null) {
                    AssemJump newJump = new AssemJump(new AssemName(assemLbl.getLabel()));
                    prevStmList.setStmList(new AssemStmList(newJump, null));
                    blocks.addElement(currentBlock);
                }
            }
            // Start the new block
            prevStmList = new AssemStmList(stm, null);
            currentBlock = prevStmList;
        } else if (stm instanceof AssemJump || stm instanceof AssemCJump) {
            if (prevStmList == null) {
                // Stick a label to the beginning of the block
                AssemLabel assemLabel = new AssemLabel(new Label());
                prevStmList = new AssemStmList(assemLabel, null);
                currentBlock = prevStmList;
            }
            prevStmList.setStmList(new AssemStmList(stm, null));
            // End the current block
            blocks.addElement(currentBlock);
            currentBlock = null;
            prevStmList = null;
        } else {
            AssemStmList newlist = new AssemStmList(stm, null);
            if (currentBlock == null) {
                // This is the beginning; start a new block, create a new label
                // based on the function name and stick it in the front
                AssemLabel assemLbl = new AssemLabel(new Label(levelName));
                currentBlock = new AssemStmList(assemLbl, newlist);
            } else
                prevStmList.setStmList(newlist);
            prevStmList = newlist;
        }
        // Store this to use outside this loop
        finalStm = stm;
    }
    // Add the last block
    if (!(finalStm instanceof AssemLabel)) {
        AssemJump lastJump = new AssemJump(new AssemName(doneLabel));
        prevStmList.setStmList(new AssemStmList(lastJump, null));
    }
    blocks.addElement(currentBlock);
}
