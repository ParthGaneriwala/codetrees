private void init(DocumentBrowserComposite toolsPanel) {
    Composite parent = new Composite(toolsPanel, SWT.NONE);
    GridLayout gl_bis = new GridLayout();
    gl_bis.numColumns = 1;
    parent.setLayout(gl_bis);
    // TODO Auto-generated method stub
    labelToolName = new CLabel(parent, SWT.NONE);
    // $NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$ //$NON-NLS-5$
    Image toolIcon = Activator.imageDescriptorFromPlugin("LeadCoreUtils", "icons" + File.separator + "toolIcons" + File.separator + "server20x20" + File.separator + "chat.png").createImage();
    labelToolName.setImage(toolIcon);
    Composite searchAreaPanel = new Composite(parent, SWT.NONE);
    searchAreaPanel.setLayout(new FillLayout());
    GridLayout gl_Search = new GridLayout();
    gl_Search.numColumns = 2;
    gl_Search.makeColumnsEqualWidth = false;
    parent.setLayout(gl_Search);
    browserAreaPanel = new Composite(parent, SWT.NONE);
    browserAreaPanel.setLayout(new FillLayout());
    GridData gdComposite = new GridData(GridData.FILL_BOTH);
    gdComposite.horizontalSpan = 2;
    browserAreaPanel.setLayoutData(gdComposite);
    // $NON-NLS-1$
    logger.info("The Document browser client composite  * check point - 1 ");
    OleControlSite oleControlSite = null;
    OleFrame oleFrame = new OleFrame(browserAreaPanel, SWT.NONE);
    oleFrame.setSize(600, 480);
    // $NON-NLS-1$
    oleControlSite = new OleControlSite(oleFrame, SWT.NONE, "Shell.Explorer");
    oleControlSite.doVerb(OLE.OLEIVERB_UIACTIVATE);
    browserAreaPanel.setFocus();
    oleFrame.pack();
    browserAreaPanel.pack();
    /*final OleAutomation */
    browser = new OleAutomation(oleControlSite);
    // int[] browserIDs = browser.getIDsOfNames(new String[]{"Navigate","URL"});
    // //read Home page from configuration File
    // $NON-NLS-1$
    Variant[] address = new Variant[] { new Variant(ieService.getConf().get("homePageAddress")) };
    // //Variant[] address = new Variant[] {new Variant("http://www.google.com")};
    // browser.invoke(browserIDs[0],address,new int[]{browserIDs[1]});
    // $NON-NLS-1$
    logger.info("The Document browser client composite  * check point - 2");
    ToolBar toolbar = new ToolBar(searchAreaPanel, SWT.NONE);
    /*final ToolItem itemGo = new ToolItem(toolbar, SWT.PUSH);
		itemGo.setText("Go");*/
    final ToolItem itemBack = new ToolItem(toolbar, SWT.PUSH);
    // $NON-NLS-1$
    itemBack.setText(Messages.getString("DocumentBrowserComposite.Back"));
    // $NON-NLS-1$
    Image iconBack = new Image(parent.getDisplay(), getClass().getResourceAsStream("/icons/backward.gif"));
    itemBack.setImage(iconBack);
    final ToolItem itemForward = new ToolItem(toolbar, SWT.PUSH);
    // $NON-NLS-1$
    itemForward.setText(Messages.getString("DocumentBrowserComposite.Forward"));
    // $NON-NLS-1$
    Image iconForward = new Image(parent.getDisplay(), getClass().getResourceAsStream("/icons/forward.gif"));
    itemForward.setImage(iconForward);
    final ToolItem itemGoHome = new ToolItem(toolbar, SWT.PUSH);
    // $NON-NLS-1$
    itemGoHome.setText(Messages.getString("DocumentBrowserComposite.Home"));
    // $NON-NLS-1$
    Image iconHome = new Image(parent.getDisplay(), getClass().getResourceAsStream("/icons/home.gif"));
    itemGoHome.setImage(iconHome);
    // ToolBar toolbar2 = new ToolBar(searchAreaPanel, SWT.NONE);
    final ToolItem itemRefresh = new ToolItem(toolbar, SWT.PUSH);
    // $NON-NLS-1$
    itemRefresh.setText(Messages.getString("DocumentBrowserComposite.Refresh"));
    // $NON-NLS-1$
    Image iconRefresh = new Image(parent.getDisplay(), getClass().getResourceAsStream("/icons/refresh.gif"));
    itemRefresh.setImage(iconRefresh);
    final ToolItem itemStop = new ToolItem(toolbar, SWT.PUSH);
    // $NON-NLS-1$
    itemStop.setText(Messages.getString("DocumentBrowserComposite.Stop"));
    // $NON-NLS-1$
    Image iconStop = new Image(parent.getDisplay(), getClass().getResourceAsStream("/icons/stop.gif"));
    itemStop.setImage(iconStop);
    // $NON-NLS-1$
    logger.info("The Document browser client composite  * check point - 3");
    // textSearch.addListener(SWT.DefaultSelection, new Listener () {
    // public void handleEvent (Event e) {
    // String stringText = textSearch.getText();
    // 
    // int[] browserIDs = browser.getIDsOfNames(new String[]{"Navigate","URL"});
    // //read Home page from configuration File
    // Variant[] address = new Variant[] {new Variant(stringText)};
    // browser.invoke(browserIDs[0],address,new int[]{browserIDs[1]});
    // }
    // });
    Listener toolbarListener = new Listener() {

        public void handleEvent(Event event) {
            ToolItem item = (ToolItem) event.widget;
            if (item == itemBack) {
                // $NON-NLS-1$
                int[] goBackIDs = browser.getIDsOfNames(new String[] { "GoBack" });
                int dispIdMember = goBackIDs[0];
                Variant pVarResult = browser.invoke(dispIdMember);
            } else if (item == itemGoHome) {
                // $NON-NLS-1$ //$NON-NLS-2$
                int[] browserIDs = browser.getIDsOfNames(new String[] { "Navigate", "URL" });
                // read Home page from configuration File
                if (initialAddress != null) {
                    Variant[] address = new Variant[] { new Variant(initialAddress) };
                    browser.invoke(browserIDs[0], address, new int[] { browserIDs[1] });
                }
            } else if (item == itemForward) {
                // $NON-NLS-1$
                int[] forwardIDs = browser.getIDsOfNames(new String[] { "GoForward" });
                int dispIdMember = forwardIDs[0];
                Variant pVarResult = browser.invoke(dispIdMember);
            } else if (item == itemStop) {
                // $NON-NLS-1$
                int[] forwardIDs = browser.getIDsOfNames(new String[] { "Stop" });
                int dispIdMember = forwardIDs[0];
                Variant pVarResult = browser.invoke(dispIdMember);
            } else if (item == itemRefresh) {
                // Relaod
                // $NON-NLS-1$
                int[] forwardIDs = browser.getIDsOfNames(new String[] { "Refresh" });
                int dispIdMember = forwardIDs[0];
                Variant pVarResult = browser.invoke(dispIdMember);
            }
        }
    };
    itemGoHome.addListener(SWT.Selection, toolbarListener);
    itemBack.addListener(SWT.Selection, toolbarListener);
    itemForward.addListener(SWT.Selection, toolbarListener);
    itemRefresh.addListener(SWT.Selection, toolbarListener);
    itemStop.addListener(SWT.Selection, toolbarListener);
    GridData gdLblToolName = new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);
    labelToolName.setLayoutData(gdLblToolName);
    // $NON-NLS-1$
    labelToolName.setText(Messages.getString("DocumentBrowserComposite.DocumentBrowserTool"));
    // $NON-NLS-1$
    logger.info("The Document browser client composite  * check point - 4 ");
    // IWebBrowser
    final OleAutomation webBrowser = new OleAutomation(oleControlSite);
    // When a new document is loaded, access the document object for the new
    // page.
    int DownloadComplete = 104;
    oleControlSite.addEventListener(DownloadComplete, new OleListener() {

        public void handleEvent(OleEvent event) {
            int[] htmlDocumentID = webBrowser.getIDsOfNames(// $NON-NLS-1$
            new String[] { "Document" });
            if (htmlDocumentID == null)
                return;
            Variant pVarResult = webBrowser.getProperty(htmlDocumentID[0]);
            if (pVarResult == null || pVarResult.getType() == 0)
                return;
            // IHTMLDocument2
            OleAutomation htmlDocument = pVarResult.getAutomation();
            // Request to be notified of click, double click and key down
            // events
            EventDispatch myDispatch = new EventDispatch(EventDispatch.onclick);
            IDispatch idispatch = new IDispatch(myDispatch.getAddress());
            Variant dispatch = new Variant(idispatch);
            htmlDocument.setProperty(EventDispatch.onclick, dispatch);
            myDispatch = new EventDispatch(EventDispatch.ondblclick);
            idispatch = new IDispatch(myDispatch.getAddress());
            dispatch = new Variant(idispatch);
            htmlDocument.setProperty(EventDispatch.ondblclick, dispatch);
            myDispatch = new EventDispatch(EventDispatch.onkeydown);
            idispatch = new IDispatch(myDispatch.getAddress());
            dispatch = new Variant(idispatch);
            htmlDocument.setProperty(EventDispatch.onkeydown, dispatch);
            // Remember to release OleAutomation Object
            htmlDocument.dispose();
        }
    });
    applyTheme();
    // $NON-NLS-1$
    logger.info("The Document browser client composite  * check point - 5");
}
