@Override
protected String go() throws Exception {
    // TODO Auto-generated method stub
    if (this.datavisible.getOfficeid() == 0) {
        this.message = "必须选择所在的事务所,请返回";
        return "message";
    }
    if (lawyers.getZhiyedatestr() != null && !lawyers.getZhiyedatestr().equals("")) {
        try {
            Date date = df.parse(lawyers.getZhiyedatestr());
            lawyers.setZhiyedate(date);
        } catch (Exception e) {
            this.message = "执业日期输入不对,请重新输入:" + lawyers.getZhiyedatestr();
            return "message";
        }
    }
    LawyersService bs = (LawyersService) this.getBean("lawyersService");
    lawyers.setLawyerenname(com.changpeng.common.util.Chinese2Pinyin.to2pinyin(lawyers.getLawyername()));
    if (upload != null && upload.length() != 0) {
        try {
            if (upload.length() > 100 * 1024) {
                debug("删除上传图片成功否:" + upload.delete());
                this.message = "上传的图片大小超出了规定的最大大小100K，请重新选择";
                return "message";
            }
            int index = fileName.lastIndexOf(".");
            String name = System.currentTimeMillis() + fileName.substring(index);
            String indexDir = com.changpeng.common.Constants.PHOTO_SAVE_PATH + lawyers.getDirectunion() + "/";
            File filedir = new File(indexDir);
            if (!filedir.exists()) {
                boolean s = filedir.mkdirs();
                debug("文件路径:::" + indexDir + "创建成功..." + s);
            }
            File file = new File(indexDir + System.getProperty("file.separator") + name);
            upload.renameTo(file);
            debug("=================" + indexDir);
            lawyers.setPhoto(lawyers.getDirectunion() + "/" + name);
            lawyers.setPhotoname(fileName);
        } catch (Exception e) {
            debug("照片上传失败..." + e);
        }
    }
    if (isnew) {
        lawyers.setDirectunion(this.datavisible.getCityid());
        lawyers.setProvinceunion(this.datavisible.getProvinceid());
        lawyers.setTheoffice(this.datavisible.getOfficeid());
        if (bs.isexist(lawyers.getLawyerno(), lawyers.getDirectunion())) {
            this.message = "您所填入的执业证号已重复,请重新填入";
            return "message";
        }
        lawyers.setCreatetime(new java.sql.Timestamp(System.currentTimeMillis()));
        lawyers.setCreateuser(this.getLoginUser().getUserid());
        lawyers.setCreateusername(this.getLoginUser().getUsername());
        lawyers.setPasswd(lawyers.getCertno());
        // if (lawyers.getSystemno() == null || lawyers.getSystemno().equals(""))
        // lawyers.setSystemno(System.currentTimeMillis() / 1000 + "");
        BasicService bservice = (BasicService) this.getBean("basicService");
        SysUnionparams union = (SysUnionparams) bservice.get(SysUnionparams.class, lawyers.getDirectunion());
        if (union != null) {
            float dabiaofen = union.getDabiaofen();
            lawyers.setDabiaofen(dabiaofen);
        }
        // 排除掉输入进去的空格
        lawyers.setLawyerno(lawyers.getLawyerno().trim());
        lawyers.setLoginname(lawyers.getLoginname().trim());
        bs.addLawyer(lawyers);
        this.message = "律师信息新增成功";
        this.opResult = "新增律师信息:" + lawyers.getLawyername();
    } else {
        lawyers.setLawyerno(lawyers.getLawyerno().trim());
        lawyers.setLoginname(lawyers.getLawyerno().trim());
        lawyers.setPasswd(lawyers.getCertno());
        bs.updateLawyers(lawyers);
        this.message = "律师信息修改成功";
        this.opResult = "修改律师信息:" + lawyers.getLawyername();
    }
    this.nextPage = "lawyersList.pl?pageNo=" + pageNo;
    return SUCCESS;
}
