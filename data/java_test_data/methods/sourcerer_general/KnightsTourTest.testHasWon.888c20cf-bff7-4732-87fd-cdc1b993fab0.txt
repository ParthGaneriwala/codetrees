@Test
public void testHasWon() {
    kgame.move(2, 1);
    kgame.move(4, 0);
    kgame.move(6, 1);
    kgame.move(7, 3);
    kgame.move(6, 5);
    kgame.move(7, 7);
    kgame.move(5, 6);
    kgame.move(3, 7);
    kgame.move(1, 6);
    kgame.move(0, 4);
    kgame.move(1, 2);
    kgame.move(2, 0);
    kgame.move(4, 1);
    kgame.move(6, 0);
    kgame.move(7, 2);
    kgame.move(6, 4);
    kgame.move(7, 6);
    kgame.move(5, 7);
    kgame.move(3, 6);
    kgame.move(1, 7);
    kgame.move(0, 5);
    kgame.move(1, 3);
    kgame.move(0, 1);
    kgame.move(2, 2);
    kgame.move(3, 0);
    kgame.move(5, 1);
    kgame.move(7, 0);
    kgame.move(6, 2);
    kgame.move(7, 4);
    kgame.move(6, 6);
    kgame.move(4, 7);
    kgame.move(2, 6);
    kgame.move(0, 7);
    kgame.move(1, 5);
    kgame.move(0, 3);
    kgame.move(1, 1);
    kgame.move(3, 2);
    kgame.move(5, 3);
    kgame.move(4, 5);
    kgame.move(2, 4);
    kgame.move(4, 3);
    kgame.move(5, 5);
    kgame.move(3, 4);
    kgame.move(4, 2);
    kgame.move(5, 0);
    kgame.move(7, 1);
    kgame.move(6, 3);
    kgame.move(7, 5);
    kgame.move(6, 7);
    kgame.move(4, 6);
    kgame.move(2, 7);
    kgame.move(0, 6);
    kgame.move(1, 4);
    kgame.move(0, 2);
    kgame.move(1, 0);
    kgame.move(3, 1);
    kgame.move(5, 2);
    kgame.move(4, 4);
    kgame.move(2, 5);
    kgame.move(3, 3);
    kgame.move(5, 4);
    kgame.move(3, 5);
    kgame.move(2, 3);
    System.out.println(kgame.getBoard());
    assertTrue(kgame.hasWon());
}
