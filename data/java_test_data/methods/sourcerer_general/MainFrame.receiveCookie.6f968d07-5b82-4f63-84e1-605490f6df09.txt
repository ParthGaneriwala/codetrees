public void receiveCookie(List<KeyValuePair> params, List<KeyValuePair> cookies) {
    // System.out.println("Receive " + cookies.size() + " Cookie\n");
    List<KeyValuePair> c = CookieCollector.decomposeCookies(cookies);
    if (cookieTableNeedRecreate) {
        recreateCookieTable(cookieTableRows, c.size());
        tblColumns.clear();
        cbbCookies.removeAllItems();
        allCookieValues = new CookieValues[c.size()];
        for (int i = 0; i < c.size(); i++) {
            String name = c.get(i).key;
            tblColumns.put(name, i);
            cbbCookies.addItem(name);
            tblCookie.getColumnModel().getColumn(i).setHeaderValue(name);
            allCookieValues[i] = new CookieValues(name);
            CookieAnalyzer ca = new CookieAnalyzer(allCookieValues[i]);
            if (!ca.sessionManagement().equals("Unknown"))
                jLabel6.setText("Session Management: " + ca.sessionManagement());
            if (ca.googleAnalytics())
                jLabel7.setText("Google Analytics used");
        }
        nextRow = 0;
        cookieTableNeedRecreate = false;
    }
    Iterator<KeyValuePair> it = c.iterator();
    while (it.hasNext()) {
        KeyValuePair kv = it.next();
        Integer cidx = tblColumns.get(kv.key);
        if (cidx != null) {
            tblCookie.setValueAt(kv.value, nextRow, cidx);
            allCookieValues[cidx].addValue(kv.value);
        }
    // System.out.println("key=" + kv.key + "\tvalue=" + kv.value);
    }
    nextRow++;
    if (characteristics) {
        jLabel3.setText("Number of Cookie Parameters: " + c.size());
        characteristics = false;
    }
}
