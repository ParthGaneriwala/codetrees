public void deleteFrag(Triple frag, ReificationStatementMask fragMask, IDBID my_GID) {
    if (!fragMask.hasOneBit())
        throw new JenaException("Can only delete one fragment");
    int argc = 1;
    PreparedStatement ps = null;
    String stmtStr = "deleteReified";
    if (fragMask.hasSubj())
        stmtStr += "S";
    else if (fragMask.hasPred())
        stmtStr += "P";
    else if (fragMask.hasObj())
        stmtStr += "O";
    else if (fragMask.hasType())
        stmtStr += "T";
    else
        throw new JenaException("Unspecified reification fragment in deleteFrag");
    Node val = frag.getObject();
    String argStr = m_driver.nodeToRDBString(val, false);
    Node stmtURI = frag.getSubject();
    String uriStr = m_driver.nodeToRDBString(stmtURI, false);
    try {
        try {
            ps = m_sql.getPreparedSQLStatement(stmtStr, getTblName());
            ps.clearParameters();
            if (fragMask.hasSubj())
                ps.setString(argc++, argStr);
            else if (fragMask.hasPred())
                ps.setString(argc++, argStr);
            else if (fragMask.hasObj())
                ps.setString(argc++, argStr);
            ps.setString(argc++, my_GID.getID().toString());
            ps.setString(argc, uriStr);
        } catch (Exception e) {
            logger.warn("Getting prepared statement for " + stmtStr + " Caught exception ", e);
            // Rethrow in case there is a recovery option
            throw new JenaException("Exception during database access", e);
        }
        try {
            ps.executeUpdate();
        } catch (Exception e) {
            logger.debug("deleteFrag encountered exception ", e);
            // Rethrow in case there is a recovery option
            throw new JenaException("Exception during database access", e);
        }
    } finally {
        if (ps != null)
            m_sql.returnPreparedSQLStatement(ps);
    }
    return;
}
