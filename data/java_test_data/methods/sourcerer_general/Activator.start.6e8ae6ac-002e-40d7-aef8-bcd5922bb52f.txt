public void start(BundleContext context) throws Exception {
    // ---------streamFeature
    ChristyStreamFeature tlsFeature = new ChristyStreamFeature("starttls", "urn:ietf:params:xml:ns:xmpp-tls", ChristyStreamFeature.SupportedType.afterConnected);
    tlsFeature.setRequired(true);
    tlsFeatureRegistration = context.registerService(ChristyStreamFeature.class.getName(), tlsFeature, null);
    ChristyStreamFeature resourceBindFeature = new ChristyStreamFeature("bind", "urn:ietf:params:xml:ns:xmpp-bind", ChristyStreamFeature.SupportedType.afterAuth);
    resourceBindFeatureRegistration = context.registerService(ChristyStreamFeature.class.getName(), resourceBindFeature, null);
    ChristyStreamFeature sessionFeature = new ChristyStreamFeature("session", "urn:ietf:params:xml:ns:xmpp-session", ChristyStreamFeature.SupportedType.afterAuth);
    sessionFeatureRegistration = context.registerService(ChristyStreamFeature.class.getName(), sessionFeature, null);
    streamFeatureStracker = new ChristyStreamFeatureServiceTracker(context);
    streamFeatureStracker.open();
    // ---------streamFeature
    // sslcontext
    SSLContext sslContext = BogusSSLContextFactory.getInstance(true);
    Hashtable<String, String> prop = new Hashtable<String, String>();
    prop.put("tlsContext", "true");
    sslContextRegistration = context.registerService(SSLContext.class.getName(), sslContext, prop);
    tlsContextServiceTracker = new TlsContextServiceTracker(context);
    tlsContextServiceTracker.open();
    // sslcontext
    // authenticator
    PlainUserAuthenticatorImpl plainUserAuthenticator = new PlainUserAuthenticatorImpl();
    plainUserAuthenticatorRegistration = context.registerService(UserAuthenticator.class.getName(), plainUserAuthenticator, null);
    userAuthenticatorTracker = new UserAuthenticatorTracker(context);
    userAuthenticatorTracker.open();
    // authenticator
    routeMessageParserServiceTracker = new RouteMessageParserServiceTracker(context);
    routeMessageParserServiceTracker.open();
    xmppParserServiceTracker = new XmppParserServiceTracker(context);
    xmppParserServiceTracker.open();
    C2SManagerImpl c2sManager = new C2SManagerImpl(streamFeatureStracker, tlsContextServiceTracker, userAuthenticatorTracker, xmppParserServiceTracker, routeMessageParserServiceTracker);
    // TODO
    c2sManager.setName("c2s_1");
    c2sManager.setDomain("example.com");
    c2sManager.setRouterIp("localhost");
    c2sManager.setRouterPassword("md5password");
    c2sManager.start();
}
