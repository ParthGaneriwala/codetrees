private BasicMap getResultsTotal(String eventSid, Grade g, Category c) {
    // ahora muestro los participantes ordenados por resultado obtenido en la prueba
    String hql = "from Roundresults where round.event.sid=" + eventSid + " and round.number=1" + " and participants.dog.grade.sid=" + g.getSid();
    // para dar menos premios! la pasta es la pasta
    if (Double.valueOf(c.getSid()).doubleValue() >= 0) {
        hql = hql + " and participants.dog.category.sid=" + c.getSid();
    }
    List<Roundresults> results1 = roundresultsManager.findHQL(hql);
    hql = "from Roundresults where round.event.sid=" + eventSid + " and round.number=2" + " and participants.dog.grade.sid=" + g.getSid();
    // para dar menos premios! la pasta es la pasta
    if (Double.valueOf(c.getSid()).doubleValue() >= 0) {
        hql = hql + " and participants.dog.category.sid=" + c.getSid();
    }
    List<Roundresults> results2 = roundresultsManager.findHQL(hql);
    ResultsManager rm = new ResultsManager(settingsManager, this.rangeCalificationManager);
    List<Winner> winners = rm.orderResults(results1, results2);
    if (winners.size() <= 0) {
        return null;
    }
    BasicMap bmResultados = new BasicMap("Resultados");
    bmResultados.put("Round", "General");
    bmResultados.put("Grade", g.getName());
    bmResultados.put("Category", c.getName());
    ArrayList<BasicMap> alresultados = new ArrayList<BasicMap>();
    for (int i = 0; i < winners.size(); i++) {
        Winner w = winners.get(i);
        BasicMap bmWinner = new BasicMap("Resultado");
        bmWinner.put("Position", "" + (i + 1));
        bmWinner.put("Dog", w.participants.getDog().getName());
        bmWinner.put("Guide", w.participants.getDog().getGuide().getFirstname() + " " + w.participants.getDog().getGuide().getLastname());
        bmWinner.put("PathFaultPoints", w.pathFaultPoints);
        bmWinner.put("TimeFaultPoints", w.timeFaultPoints);
        bmWinner.put("TotalFaultPoints", w.getTotalFault());
        alresultados.add(bmWinner);
    }
    bmResultados.put("Resultados", alresultados);
    return bmResultados;
}
