public String executeCommandReset(ActionContext context) {
    // If SSL, then redirect to SSL
    ApplicationPrefs prefs = getApplicationPrefs(context);
    boolean sslEnabled = "true".equals(getPref(context, "SSL"));
    if (sslEnabled && !"https".equals(context.getRequest().getScheme())) {
        String url = ("https://" + RequestUtils.getServerUrl(context.getRequest())) + "/ResetPassword.do";
        context.getRequest().setAttribute("redirectTo", url);
        return "Redirect301";
    }
    // Check parameters
    String email = context.getRequest().getParameter("email");
    if (email == null || email.equals("")) {
        return "ResetError";
    }
    Connection db = null;
    int id = -1;
    User thisUser = null;
    try {
        db = getConnection(context);
        // Save the form and email a confirmation and password
        id = User.getIdByEmailAddress(db, email);
        if (id > -1) {
            thisUser = new User(db, 1, id);
            if (thisUser.getRegistered()) {
                thisUser.resetPassword(context, db);
            } else {
                TeamMemberList teamMemberList = new TeamMemberList();
                teamMemberList.setUserId(thisUser.getId());
                teamMemberList.buildList(db);
                if (teamMemberList.size() > 0) {
                    // Resend the last invitation
                    TeamMember teamMember = teamMemberList.get(teamMemberList.size() - 1);
                    teamMember.setStatus(TeamMember.STATUS_INVITING);
                    processInsertHook(context, teamMember, "concursive.teamMember.sendInvitationToUser");
                } else {
                    id = -1;
                }
            }
        }
    } catch (Exception e) {
        e.printStackTrace(System.out);
    } finally {
        freeConnection(context, db);
    }
    if (id > -1) {
        return "ResetOK";
    } else {
        context.getRequest().setAttribute("actionError", "Email could not be sent to specified address" + (thisUser != null ? ": " + (String) thisUser.getErrors().get("emailError") : ""));
        context.getRequest().setAttribute("emailError", "Check email address");
        return "ResetError";
    }
}
