@RequestMapping("/taskList.do")
public ModelAndView taskList(HttpServletRequest request, HttpServletResponse response) {
    String userid = (String) request.getSession().getAttribute("userid");
    String isAdmin = (String) request.getSession().getAttribute("isAdmin");
    // get the requested page
    int page = ServletRequestUtils.getIntParameter(request, "page", 0);
    // get how many rows we
    int limit = ServletRequestUtils.getIntParameter(request, "rows", 0);
    // want to have into
    // the grid
    // get index row
    String sidx = ServletRequestUtils.getStringParameter(request, "sidx", "");
    // - i.e. user
    // click to sort
    // get the
    String sord = ServletRequestUtils.getStringParameter(request, "sord", "");
    // direction
    int count = 0;
    if ("true".equals(isAdmin))
        count = taskService.readTaskCount("");
    else
        count = taskService.readTaskCount(userid);
    int total_pages = (int) Math.ceil((double) count / limit);
    // do not put $limit*($page - 1)
    int start = limit * page - limit;
    HashMap<String, String> params = new HashMap<String, String>();
    if ("true".equals(isAdmin))
        params.put("userid", "");
    else
        params.put("userid", userid);
    params.put("page", Integer.toString(page));
    params.put("limit", Integer.toString(limit));
    params.put("sidx", sidx);
    params.put("sord", sord);
    params.put("start", Integer.toString(start));
    List<Task> taskList = taskService.readTaskList(params);
    for (Task task : taskList) System.out.println(task);
    ModelAndView model = new ModelAndView("taskList");
    model.addAllObjects(params);
    model.addObject("total_pages", total_pages);
    model.addObject("total_count", count);
    model.addObject("taskList", taskList);
    return model;
}
