@SuppressWarnings("deprecation")
private static List<ToprCreditcard> parseXls(File excel, List errorlist) throws IOException {
    FileInputStream stream = null;
    List<ToprCreditcard> cardList = null;
    try {
        cardList = new ArrayList<ToprCreditcard>();
        stream = new FileInputStream(excel);
        HSSFWorkbook workbook = new HSSFWorkbook(stream);
        // 第一张工作表
        HSSFSheet sheet = workbook.getSheetAt(0);
        // 第一行为表头 不用解析
        for (int i = sheet.getFirstRowNum() + 1; i <= sheet.getLastRowNum(); i++) {
            // java.text.DecimalFormat df = new
            // java.text.DecimalFormat("####.####");
            // 表中每一行
            HSSFRow row = sheet.getRow(i);
            if (row != null) {
                // 第一列为客户姓名，第二列为帐单号，不允许为空 且列数不得小于39列
                if (/* cellnum<27|| */
                cellVal(row.getCell(0)) == null || cellVal(row.getCell(1)) == null || cellVal(row.getCell(0)).equals("") || cellVal(row.getCell(1)).equals("")) {
                    // System.out.println(i+":::::::::"+cellnum);
                    continue;
                } else {
                    ToprCreditcard card = new ToprCreditcard();
                    // 姓名
                    card.setUsername(cellVal(row.getCell(0)));
                    // 帐号
                    card.setCreditcard(cellVal(row.getCell(1)));
                    String msg = "第" + (i + 1) + "行（姓名：" + card.getUsername() + "）数据错误:";
                    boolean iserror = false;
                    // System.out.println(i+"========="+cellnum);
                    // 身份证号
                    card.setIdcard(cellVal(row.getCell(2)));
                    card.setCnfee(cellVal(row.getCell(3)).replace(",", ""));
                    card.setUsafee(cellVal(row.getCell(4)).replace(",", ""));
                    card.setHkfee(cellVal(row.getCell(5)).replace(",", ""));
                    card.setEurfee(cellVal(row.getCell(6)).replace(",", ""));
                    // 当前所欠费用,这里要判断费用是否都正确
                    if (card.getCnfee() != null && !card.getCnfee().equals("") && !NumberUtil.isMoney(card.getCnfee())) {
                        msg += "人民币透支金额不正确:" + card.getCnfee();
                        iserror = true;
                    }
                    if (card.getUsafee() != null && !card.getUsafee().equals("") && !NumberUtil.isMoney(card.getUsafee())) {
                        msg += "，美元透支金额不正确:" + card.getUsafee();
                        iserror = true;
                    }
                    if (card.getHkfee() != null && !card.getHkfee().equals("") && !NumberUtil.isMoney(card.getHkfee())) {
                        msg += "，港币透支金额不正确:" + card.getHkfee();
                        iserror = true;
                    }
                    if (card.getEurfee() != null && !card.getEurfee().equals("") && !NumberUtil.isMoney(card.getEurfee())) {
                        msg += "，欧元透支金额不正确:" + card.getEurfee();
                        iserror = true;
                    }
                    if (iserror) {
                        errorlist.add(msg);
                        continue;
                    }
                    card.setOverstat(cellVal(row.getCell(7)));
                    card.setMaxfee(cellVal(row.getCell(8)).replace(",", ""));
                    String cell9Val = cellVal(row.getCell(9));
                    if (cell9Val != null && !"".equals(cell9Val)) {
                        try {
                            card.setKaihudata(new java.text.SimpleDateFormat("yyyy-MM-dd").format(row.getCell(9).getDateCellValue()));
                        } catch (Exception e) {
                            card.setKaihudata(cell9Val);
                        }
                    }
                    card.setGuiyuanno(cellVal(row.getCell(10)));
                    card.setConsigntype(cellVal(row.getCell(11)));
                    card.setConsignflag(cellVal(row.getCell(12)));
                    card.setApplynum(cellVal(row.getCell(13)));
                    card.setDossiernum(cellVal(row.getCell(14)));
                    card.setBianhao(cellVal(row.getCell(14)));
                    card.setMobileold(cellVal(row.getCell(15)));
                    card.setHomephoneold(cellVal(row.getCell(16)));
                    card.setWorkphoneold(cellVal(row.getCell(17)));
                    card.setCompany(cellVal(row.getCell(18)));
                    card.setCompaddr(cellVal(row.getCell(19)));
                    card.setHomeaddr(cellVal(row.getCell(20)));
                    card.setIdcardaddr(cellVal(row.getCell(21)));
                    card.setBillpostcode(cellVal(row.getCell(22)));
                    card.setBilladdr(cellVal(row.getCell(23)));
                    card.setBillpostaddr(cellVal(row.getCell(24)));
                    card.setEmail(cellVal(row.getCell(25)));
                    card.setContactpeople1(cellVal(row.getCell(26)));
                    card.setContactp1phone1(cellVal(row.getCell(27)));
                    card.setContactp1phone2(cellVal(row.getCell(28)));
                    card.setContactp1phone3(cellVal(row.getCell(29)));
                    card.setContactpeople2(cellVal(row.getCell(30)));
                    card.setContactp2phone1(cellVal(row.getCell(31)));
                    card.setContactp2phone2(cellVal(row.getCell(32)));
                    card.setContactp2phone3(cellVal(row.getCell(33)));
                    card.setCautioner(cellVal(row.getCell(34)));
                    card.setCaucompany(cellVal(row.getCell(35)));
                    card.setCaucompaddr(cellVal(row.getCell(36)));
                    card.setCauhomeaddr(cellVal(row.getCell(37)));
                    card.setCauworkphone(cellVal(row.getCell(38)));
                    card.setCauhomephone(cellVal(row.getCell(39)));
                    card.setCaumobile(cellVal(row.getCell(40)));
                    // 指定退单日期
                    String cell41Val = cellVal(row.getCell(41));
                    if (cell41Val != null && !"".equals(cell41Val))
                        card.setTddate(new java.text.SimpleDateFormat("yyyy-MM-dd").format(row.getCell(41).getDateCellValue()));
                    // String bianhao=cellVal(row.getCell(42));
                    // card.setBianhao(bianhao);
                    cardList.add(card);
                }
            }
        // end if judge row
        }
    // end for row
    } finally {
        if (stream != null)
            stream.close();
    }
    return cardList;
}
