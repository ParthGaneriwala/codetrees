@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    // Internet-Verbindungs Check
    cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);
    gameListIntent = getIntent();
    if (Intent.ACTION_SEARCH.equals(gameListIntent.getAction())) {
        searchString = gameListIntent.getStringExtra(SearchManager.QUERY);
        /*
			 * [{"id":"17951","name":"Classic NES Series: The Legend Of Zelda",
			 * "sysid"
			 * :"2","system":"Game Boy Advance","cnt":"2"},{"id":"17952","name"
			 * :"Classic NES Series: Zelda II"
			 * ,"sysid":"2","system":"Game Boy Advance"
			 * ,"cnt":"10"},{"id":"21372","name": "Zelda: Link's Awakening"
			 * ,"sysid":"1","system":"Game Boy","cnt":"11"}]
			 */
        String gameMatchesx = GetDataFromWeb.universalGameSearch(searchString);
        if (gameMatchesx.length() > 1) {
            setContentView(R.layout.cheatdatabaselist_layout);
            JSONArray jArray = null;
            try {
                jArray = new JSONArray(gameMatchesx);
                gameMatches = new Game[jArray.length()];
                for (int i = 0; i < jArray.length(); i++) {
                    JSONObject jsonObject = jArray.getJSONObject(i);
                    int gameId = jsonObject.getInt("id");
                    String gameName = jsonObject.getString("name");
                    int sysid = jsonObject.getInt("sysid");
                    String system = jsonObject.getString("system");
                    int cheatCount = jsonObject.getInt("cnt");
                    Game game = new Game();
                    game.setGameId(gameId);
                    game.setGameName(gameName.replaceAll("\\\\", ""));
                    game.setAnzahlCheats(cheatCount);
                    game.setSystemId(sysid);
                    game.setSystemName(system);
                    gameMatches[i] = game;
                }
            } catch (JSONException e) {
                Log.e("getGameList", "JSON Parsing Error: " + e);
            }
        } else {
            /*
				 * If nothing has been found display this through a fake
				 * Game-Object
				 */
            gameMatches = new Game[1];
            Game game = new Game();
            game.setGameId(0);
            game.setGameName("Nothing found.");
            game.setSystemName("Please try with a different keyword again.");
            gameMatches[0] = game;
        }
        // Title
        TextView tvTitle = (TextView) this.findViewById(R.id.title);
        tvTitle.setText(getString(R.string.search_results) + ": '" + searchString + "'");
        m_orders = new ArrayList<Game>();
        this.m_adapter = new OrderAdapter(this, R.layout.cheatdatabaselist_layout, m_orders);
        setListAdapter(this.m_adapter);
        // "Loading" PopUp Information
        viewOrders = new Runnable() {

            @Override
            public void run() {
                m_orders = new ArrayList<Game>();
                if (gameMatches.length > 0) {
                    for (int j = 0; j < gameMatches.length; j++) {
                        m_orders.add(gameMatches[j]);
                    }
                }
                runOnUiThread(returnRes);
            }
        };
        Thread thread = new Thread(null, viewOrders);
        thread.start();
        m_ProgressDialog = ProgressDialog.show(UniversalSearch.this, getString(R.string.please_wait) + "...", getString(R.string.retrieving_data) + "...", true);
    }
}
