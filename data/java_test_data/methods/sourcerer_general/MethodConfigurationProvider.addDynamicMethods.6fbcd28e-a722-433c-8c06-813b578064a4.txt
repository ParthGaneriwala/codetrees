protected boolean addDynamicMethods(Map actions, String actionName, ActionConfig actionConfig) throws ConfigurationException {
    String configMethod = actionConfig.getMethodName();
    boolean hasMethod = (configMethod != null) && (configMethod.length() > 0);
    if (hasMethod)
        return false;
    String className = actionConfig.getClassName();
    Set actionMethods = new HashSet();
    Class actionClass;
    ObjectFactory factory = getObjectFactory();
    try {
        actionClass = factory.getClassInstance(className);
    } catch (ClassNotFoundException e) {
        throw new ConfigurationException(e);
    }
    Method[] methods = actionClass.getMethods();
    for (Method method : methods) {
        String returnString = method.getReturnType().getName();
        boolean isString = "java.lang.String".equals(returnString);
        if (isString) {
            Class[] parameterTypes = method.getParameterTypes();
            boolean noParameters = (parameterTypes.length == 0);
            String methodString = method.getName();
            boolean notGetMethod = !((methodString.startsWith("get")) && upperAt(3, methodString));
            boolean notIsMethod = !((methodString.startsWith("is")) && upperAt(2, methodString));
            boolean notToString = !("toString".equals(methodString));
            boolean notExecute = !("execute".equals(methodString));
            boolean qualifies = noParameters && notGetMethod && notIsMethod && notToString && notExecute;
            if (qualifies) {
                actionMethods.add(methodString);
            }
        }
    }
    for (Object actionMethod : actionMethods) {
        String methodName = (String) actionMethod;
        StringBuilder sb = new StringBuilder();
        sb.append(actionName);
        // TODO: Make "!" a configurable character
        sb.append("!");
        sb.append(methodName);
        String newActionName = sb.toString();
        boolean haveAction = actions.containsKey(newActionName);
        if (haveAction)
            continue;
        ActionConfig newActionConfig = new ActionConfig(newActionName, actionConfig.getClassName(), actionConfig.getParams(), actionConfig.getResults(), actionConfig.getInterceptors(), actionConfig.getExceptionMappings());
        newActionConfig.setMethodName(methodName);
        String packageName = actionConfig.getPackageName();
        newActionConfig.setPackageName(packageName);
        PackageConfig packageConfig = configuration.getPackageConfig(packageName);
        packageConfig.addActionConfig(newActionName, actionConfig);
    }
    return (actionMethods.size() > 0);
}
