@Override
protected String go() throws Exception {
    // TODO Auto-generated method stub
    SysUser sysUser = this.getLoginUser();
    if (sysUser == null) {
        result = "解析结果出错!";
        orgresult = "";
        return SUCCESS;
    }
    MemService memService = (MemService) getBean("memService");
    MemDevicecommand command = (MemDevicecommand) memService.get(MemDevicecommand.class, commandId);
    // MemDevice device=(MemDevice)memService.get(MemDevice.class,
    // command.getDeviceid());
    HashMap<String, MemDevice> userListDevice = CommonDatas.LOGINDEVICE.get(sysUser.getUserid() + "");
    MemDevice device = (MemDevice) userListDevice.get(command.getDeviceid() + "");
    if (device == null) {
        device = (MemDevice) memService.get(MemDevice.class, command.getDeviceid());
        System.out.println("对应的设备信息不存在......");
    }
    try {
        if (command.getCommandtype() == 1) {
            Command cmdprocess = (Command) Class.forName(command.getPlugin()).newInstance();
            result = cmdprocess.getresult(memService, device, command, sysUser.getUserid() + "");
            // 
            // System.out.println("111====="+result.indexOf("^p"));
            // System.out.println("2222===="+result.indexOf("\r\n"));
            result = result.replace("\r\n", "<br/>");
            // result.replaceAll("^p", "<br/>").replaceAll("^p","<br/>");
            orgresult = cmdprocess.orgresult;
            orgresult = orgresult.replace("\r\n", "<br/>");
            // orgresult.replaceAll("^p", "<br/>").replaceAll("^p","<br/>");
            System.out.println("result==" + result + ",orgresult==" + orgresult);
        } else {
            int deviceid = device.getDeviceid();
            com.sxit.models.mem.MemDeviceTransit mdt = (MemDeviceTransit) basicService.get(MemDeviceTransit.class, deviceid);
            if (device.getIstransit() == 1 && device.getIshuawei() == 0) {
                orgresult = ClientTZ.getres(device.getIp(), device.getLoginName(), device.getLoginPwd(), mdt.getIp(), mdt.getLoginname(), mdt.getPwd(), command.getCommandscript());
            } else if (device.getIshuawei() == 1 && device.getIstransit() == 0) {
                orgresult = ClientHW.testlogin(device.getIp(), device.getLoginName(), device.getLoginPwd());
            } else if (device.getIshuawei() == 1 && device.getIstransit() == 1) {
                orgresult = com.sxit.memdevice.common.ClientTZHW.getres(device.getIp(), device.getLoginName(), device.getLoginPwd(), mdt.getIp(), mdt.getLoginname(), mdt.getPwd(), command.getCommandscript());
            } else
                orgresult = Client.getres(device.getIp(), device.getLoginName(), device.getLoginPwd(), command.getCommandscript());
            result = orgresult;
            commandtype = command.getCommandtype();
        }
    } catch (Exception e) {
        e.printStackTrace();
        System.out.println(e.getMessage());
        result = "解析结果出错!";
        orgresult = "获取原始结果出错!";
        return SUCCESS;
    }
    // orgresult="解析前的结果";
    return SUCCESS;
}
