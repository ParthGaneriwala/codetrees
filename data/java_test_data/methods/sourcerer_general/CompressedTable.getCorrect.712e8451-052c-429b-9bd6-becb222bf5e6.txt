public boolean getCorrect() {
    // verify compressed tables are ok
    short[] next = getNext();
    short[] check = getCheck();
    short[] base = getBase();
    short[] defaults = getDefault();
    short[] meta = getMeta();
    boolean error = getError();
    DFATable dfa = m_lexer.getDFA();
    int numStates = dfa.size();
    int numGroups = m_lexer.getECS().getGroupCount();
    for (int state = 0; state < numStates; ++state) {
        short[] row = dfa.getRow(state).getStates();
        for (int symbol = 0; symbol < numGroups; ++symbol) {
            // System.out.println ("state: " + state + ", sym: " + symbol);
            int currentState;
            if (defaults == null) {
                if (check[symbol + base[state]] == state)
                    currentState = next[symbol + base[state]];
                else
                    currentState = 0;
            } else if (!error) {
                if (check[symbol + base[state]] == state)
                    currentState = next[symbol + base[state]];
                else
                    currentState = defaults[state];
            } else if (meta == null) {
                currentState = state;
                int e = symbol;
                while (check[e + base[currentState]] != currentState) {
                    currentState = defaults[currentState];
                    if (currentState >= numStates)
                        e = 0;
                }
                currentState = next[e + base[currentState]];
            } else {
                currentState = state;
                int e = symbol;
                while (check[e + base[currentState]] != currentState) {
                    currentState = defaults[currentState];
                    if (currentState >= numStates)
                        e = meta[e];
                }
                currentState = next[e + base[currentState]];
            }
            if (row[symbol] != currentState)
                // throw new RuntimeException ("Compressed table and ecs table do not match");
                return false;
        }
    }
    return true;
}
