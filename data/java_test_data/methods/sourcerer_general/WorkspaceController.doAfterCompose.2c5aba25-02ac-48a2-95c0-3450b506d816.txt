public void doAfterCompose(Component div) {
    self = (Borderlayout) div;
    zhtmlCodeBox = (Textbox) self.getFellow("zhtmlCode");
    javaCodeBox = (Textbox) self.getFellow("javaCode");
    Div buttonDiv = (Div) self.getFellow("buttonDiv");
    VM current = VM.lookupVM();
    File demoFolder = new File(current.getLocalRoot() + "/demos/");
    File[] demos = demoFolder.listFiles();
    if (demos == null)
        throw new RuntimeException("You must have a /demos/ directory!");
    if (demos.length == 0)
        return;
    PriorityQueue<A> buttonSorter = new PriorityQueue<A>(demos.length, new ButtonSorter());
    for (int i = 0; i < demos.length; i++) {
        String demoName = demos[i].getName();
        String[] parts = demoName.split("-");
        int priority = Integer.parseInt(parts[0]);
        A button = new A();
        button.setAttribute("priority", priority);
        button.setDynamicProperty("href", "");
        button.setAttribute("dirName", demoName);
        button.setId("button_" + parts[1]);
        button.addEventListener("onClick", new LoadDemoListener(parts[1]));
        Text buttonLabel = new Text(parts[1]);
        button.appendChild(buttonLabel);
        buttonSorter.add(button);
    }
    while (!buttonSorter.isEmpty()) buttons.add(buttonSorter.remove());
    for (A button : buttons) buttonDiv.appendChild(button);
    setupPage(buttons.get(0));
    Toolbarbutton layoutApply = (Toolbarbutton) self.getFellow("zhtmlApply");
    layoutApply.addEventListener("onClick", new EventListener() {

        public void onEvent(Event event) throws Exception {
            updateLayout(zhtmlCodeBox.getValue());
        }
    });
    Toolbarbutton codeApply = (Toolbarbutton) self.getFellow("codeApply");
    codeApply.addEventListener("onClick", new EventListener() {

        public void onEvent(Event event) throws Exception {
            updateCode(javaCodeBox.getValue());
            updateLayout(zhtmlCodeBox.getValue());
        }
    });
}
