public void verifType() {
    boolean erreur = false;
    String op = pileOp.pop();
    if (op.equals("+") || op.equals("-") || op.equals("*") || op.equals("/")) {
        int a = pileType.pop();
        int b = pileType.pop();
        if (a != Yaka.T_ENTIER && a != Yaka.T_ERREUR) {
            System.err.println("Erreur : premier argument de " + op + "trouv� de type " + Yaka.imageType[a] + ", entier attendu");
            erreur = true;
            Yaka.yvm.correct = false;
        }
        if (b != Yaka.T_ENTIER && b != Yaka.T_ERREUR) {
            System.err.println("Erreur : deuxieme argument de " + op + "trouv� de type " + Yaka.imageType[a] + ", entier attendu");
            erreur = true;
            Yaka.yvm.correct = false;
        }
        if (a == Yaka.T_ERREUR || b == Yaka.T_ERREUR)
            erreur = true;
        if (erreur)
            pileType.push(Yaka.T_ERREUR);
        else
            pileType.push(Yaka.T_ENTIER);
    }
    if (op.equals("<") || op.equals(">") || op.equals("=") || op.equals(">=") || op.equals("<=") || op.equals("<>")) {
        int a = pileType.pop();
        int b = pileType.pop();
        if (a != Yaka.T_ENTIER && a != Yaka.T_ERREUR) {
            System.err.println("Erreur : premier argument de " + op + "trouv� de type " + Yaka.imageType[a] + ", entier attendu");
            erreur = true;
            Yaka.yvm.correct = false;
        }
        if (b != Yaka.T_ENTIER && b != Yaka.T_ERREUR) {
            System.err.println("Erreur : deuxieme argument de " + op + "trouv� de type " + Yaka.imageType[a] + ", entier attendu");
            erreur = true;
            Yaka.yvm.correct = false;
        }
        if (a == Yaka.T_ERREUR || b == Yaka.T_ERREUR)
            erreur = true;
        if (erreur)
            pileType.push(Yaka.T_ERREUR);
        else
            pileType.push(Yaka.T_BOOL);
    }
    if (op.equals("OU") || op.equals("ET")) {
        int a = pileType.pop();
        int b = pileType.pop();
        if (a != Yaka.T_BOOL && a != Yaka.T_ERREUR) {
            System.err.println("Erreur : premier argument de " + op + "trouv� de type " + Yaka.imageType[a] + ", booleen attendu");
            erreur = true;
            Yaka.yvm.correct = false;
        }
        if (b != Yaka.T_BOOL && b != Yaka.T_ERREUR) {
            System.err.println("Erreur : deuxieme argument de " + op + "trouv� de type " + Yaka.imageType[a] + ", booleen attendu");
            erreur = true;
            Yaka.yvm.correct = false;
        }
        if (a == Yaka.T_ERREUR || b == Yaka.T_ERREUR)
            erreur = true;
        if (erreur)
            pileType.push(Yaka.T_ERREUR);
        else
            pileType.push(Yaka.T_BOOL);
    }
    if (op.equals("NON")) {
        int a = pileType.pop();
        if (a != Yaka.T_BOOL && a != Yaka.T_ERREUR) {
            System.err.println("Erreur : argument de " + op + "trouv� de type " + Yaka.imageType[a] + ", booleen attendu");
            erreur = true;
            Yaka.yvm.correct = false;
        }
        if (erreur)
            pileType.push(Yaka.T_ERREUR);
        else
            pileType.push(Yaka.T_BOOL);
    }
    if (op.equals("_")) {
        // correspond au - unaire
        int a = pileType.pop();
        if (a != Yaka.T_ENTIER && a != Yaka.T_ERREUR) {
            System.err.println("Erreur : argument de " + op + "trouv� de type " + Yaka.imageType[a] + ", entier attendu");
            erreur = true;
            Yaka.yvm.correct = false;
        }
        if (erreur)
            pileType.push(Yaka.T_ERREUR);
        else
            pileType.push(Yaka.T_ENTIER);
    }
}
