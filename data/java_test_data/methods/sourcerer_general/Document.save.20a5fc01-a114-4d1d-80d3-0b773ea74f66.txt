Document save(Object target, String encoding) throws IOException {
    BufferedWriter writer = null;
    boolean close = false;
    if (target instanceof OutputStream) {
        OutputStream os = (OutputStream) target;
        OutputStreamWriter osr = isEncoding(encoding) ? new OutputStreamWriter(os, encoding) : new OutputStreamWriter(os);
        writer = new BufferedWriter(osr);
    } else if (target instanceof File) {
        OutputStream os = new FileOutputStream((File) target);
        OutputStreamWriter osr = isEncoding(encoding) ? new OutputStreamWriter(os, encoding) : new OutputStreamWriter(os);
        close = true;
        writer = new BufferedWriter(osr);
    } else if (target instanceof String) {
        OutputStream os = new FileOutputStream((String) target);
        OutputStreamWriter osr = isEncoding(encoding) ? new OutputStreamWriter(os, encoding) : new OutputStreamWriter(os);
        close = true;
        writer = new BufferedWriter(osr);
    } else if (target instanceof BufferedWriter) {
        writer = (BufferedWriter) target;
    } else if (target instanceof Writer) {
        writer = new BufferedWriter(writer);
    } else {
        // NOI18N
        throw new IOException("unhandled save target: " + target);
    }
    Vector lines = this.lines;
    int count = lines.size();
    try {
        for (int i = 0; i < count; i++) {
            writer.write((String) lines.elementAt(i));
            writer.newLine();
        }
        writer.flush();
    } finally {
        if (close) {
            try {
                writer.close();
            } catch (IOException ex) {
            }
        }
    }
    return this;
}
