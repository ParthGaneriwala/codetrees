public ActionForward DepartamentoI(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    // Salidas
    final String SALIDA_0 = "departamento";
    String salida = SALIDA_0;
    Session s = HibernateUtil.getSessionFactory().getCurrentSession();
    Transaction tr = s.beginTransaction();
    try {
        String id = request.getParameter("idDepartamento");
        Long idDepartamento = (id == null) ? (Long) request.getSession().getAttribute("idDepartamento") : new Long(id);
        HttpSession sess = request.getSession();
        FDepartamento fFDepartamento = (FDepartamento) sess.getAttribute("FDepartamento");
        if (fFDepartamento == null) {
            fFDepartamento = new FDepartamento();
            sess.setAttribute("FDepartamento", fFDepartamento);
        } else {
            fFDepartamento.reset(mapping, request);
        }
        Departamento departamento = (Departamento) s.load(Departamento.class, idDepartamento);
        fFDepartamento.setIdDepartamento(departamento.getIdDepartamento());
        fFDepartamento.setNombre(departamento.getNombre());
        fFDepartamento.setDireccion(departamento.getDireccion());
        fFDepartamento.setTelefono(departamento.getTelefono());
        Hibernate.initialize(departamento.getAsignaturas());
        request.setAttribute("L_Asignatura", departamento.getAsignaturas());
        request.getSession().setAttribute("idDepartamento", idDepartamento);
        tr.commit();
    } catch (Exception ex) {
        tr.rollback();
        throw ex;
    }
    return mapping.findForward(salida);
}
