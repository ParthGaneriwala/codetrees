public void run() {
    // creating the search results table
    final int count;
    if (searched != null)
        count = searched.size();
    else
        count = 0;
    // Change the tab name to searching
    shell.getRibbonTabFolder().getTabs().get(0).setName("Search");
    shell.redrawContents();
    if (count > 0) {
        if ((resultsPersonTable != null) && !(resultsPersonTable.isDisposed()))
            resultsPersonTable.dispose();
        if ((resultsMovieTable != null) && !(resultsMovieTable.isDisposed()))
            resultsMovieTable.dispose();
        resultsMovieTable = new Composite(shell.getShell(), SWT.NONE);
        resultsMovieTable.setBackground(new Color(display, 177, 200, 231));
        resultsMovieTable.setLayout(new GridLayout());
        final Table table = new Table(resultsMovieTable, SWT.MULTI | SWT.BORDER | SWT.FULL_SELECTION);
        table.setLinesVisible(true);
        table.setHeaderVisible(true);
        GridData data = new GridData(SWT.FILL, SWT.FILL, true, true);
        data.heightHint = 200;
        table.setLayoutData(data);
        String[] titles = { " ", "Name", "Year", "" };
        for (int i = 0; i < titles.length; i++) {
            TableColumn column = new TableColumn(table, SWT.NONE);
            column.setText(titles[i]);
        }
        for (int i = 0; i < count; i++) {
            TableItem item = new TableItem(table, SWT.NONE);
            item.setText(0, String.valueOf(i + 1));
            item.setText(1, searched.get(i).getName());
            item.setText(2, String.valueOf(searched.get(i).getYear()));
            item.setText(3, String.valueOf(searched.get(i).getId()));
        }
        for (int i = 0; i < titles.length; i++) {
            table.getColumn(i).pack();
        }
        table.getColumn(3).setWidth(0);
        table.getColumn(3).setResizable(false);
        // by double clicking a row you get a new tab with the whole
        // information
        table.addListener(SWT.MouseDoubleClick, new Listener() {

            public void handleEvent(Event event) {
                Point pt = new Point(event.x, event.y);
                TableItem item = table.getItem(pt);
                if (item == null)
                    return;
                for (int i = 0; i < count; i++) {
                    Rectangle rect = item.getBounds(i);
                    if (rect.contains(pt)) {
                        int index = table.indexOf(item);
                        int id = Integer.parseInt(table.getItem(index).getText(3));
                        try {
                            pool.execute(DataManager.getMovieById(id));
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        }
                    }
                }
            }
        });
        resultsMovieTable.setLocation(2, 145 + shell.getShell().getSize().y / 3);
        resultsMovieTable.setSize(shell.getShell().getSize().x - 5, shell.getShell().getSize().y / 3);
    } else {
        // if there were no results
        okMessageBox("No results. Please change your choises and try again.");
    }
}
