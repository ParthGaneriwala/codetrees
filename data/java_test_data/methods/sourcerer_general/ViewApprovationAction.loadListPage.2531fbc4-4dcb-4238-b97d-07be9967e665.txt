private String loadListPage(ActionMapping mapping, ActionForm form, PortletConfig config, RenderRequest req, RenderResponse res) throws Exception {
    log.info("Inside ViewApprovationAction file - Method: list page");
    HttpServletRequest httpReq = PortalUtil.getHttpServletRequest(req);
    boolean flag = ParamUtil.getBoolean(httpReq, "flag");
    boolean flg = ParamUtil.getBoolean(httpReq, "cancelFlg");
    boolean viewFlag = ParamUtil.getBoolean(httpReq, "view");
    boolean editFlag = ParamUtil.getBoolean(httpReq, "edit");
    ThemeDisplay themeDisplay = (ThemeDisplay) req.getAttribute(WebKeys.THEME_DISPLAY);
    String lang = themeDisplay.getLanguageId();
    // code for user manager : start
    boolean isUserManager = isUserManager(themeDisplay);
    req.setAttribute("USER_MANAGER", isUserManager);
    if (lang.equals("en_US")) {
        res.setTitle("Approved Users");
    }
    if (flg)
        flag = false;
    PortletSession ses = req.getPortletSession();
    String page_reference = ParamUtil.getString(req, "page_reference");
    String recIndexFlag = ParamUtil.getString(req, "recIndex");
    String cur_page = ParamUtil.getString(req, "cur_page");
    String order = ParamUtil.getString(req, "order");
    String sortBy = ParamUtil.getString(req, "sortBy");
    String cur_ = ParamUtil.getString(req, "cur");
    List approvationList = null;
    Long userId = CommonUtil.getUserId(req);
    long companyId = PortalUtil.getCompanyId(httpReq);
    if (flag) {
        req.setAttribute("CURPAGE", cur_page);
        req.setAttribute("CUR", cur_);
        String userRecId = ParamUtil.getString(req, "userId");
        req.setAttribute("USERID", userRecId);
        List userRoles = RoleLocalServiceUtil.getUserRelatedRoles(Long.parseLong(userRecId), companyId);
        req.setAttribute("USER_ROLES", userRoles);
        approvationList = DBAction.getTableList("cv_portalrole", null);
    } else {
        if (themeDisplay.getPermissionChecker().isOmniadmin() || isUserManager) {
            approvationList = UserApprovationLocalServiceUtil.userApprovationList(userId, true);
        } else {
            approvationList = UserApprovationLocalServiceUtil.userApprovationList(userId, false);
        }
    }
    req.setAttribute("APPROVATION_LIST", approvationList);
    if (Validator.isNotNull(order) && Validator.isNotNull(sortBy)) {
        req.setAttribute("ORDER", order);
        req.setAttribute("SORTBY", sortBy);
    }
    if (Validator.isNotNull(recIndexFlag)) {
        req.setAttribute("SORTBY", "");
    }
    req.setAttribute("recIndexFlag", recIndexFlag);
    req.setAttribute("PAGE_SIZE", req.getAttribute("PAGESIZE"));
    req.setAttribute("END_INDEX", req.getAttribute("ENDINDEX"));
    if (flag) {
        req.setAttribute("PAGE", "/html/portlet/userapprovation/add_approvation.jsp");
        return "userapprovation.add_approvation";
    } else if (viewFlag) {
        req.setAttribute("PAGE", "/html/portlet/userapprovation/view_approvation.jsp");
        return "userapprovation.view_approvation";
    } else if (editFlag) {
        req.setAttribute("PAGE", "/html/portlet/userapprovation/edit_approvation.jsp");
        return "userapprovation.edit_approvation";
    } else {
        req.setAttribute("PAGE", "/html/portlet/userapprovation/list_approvation.jsp");
        return "userapprovation.list_approvation";
    }
}
