@Test
public void insertarActualizarEliminar() {
    try {
        sucursales = sucursalDao.getSucursales();
        Assert.assertNotNull(sucursales);
        int cantidadInicial = sucursales.size();
        // Se prueba el metodo insertar()
        sucursal = new Sucursal();
        sucursal.setEmpresa(empresa);
        sucursal.setNombre("SEDE SURCO");
        sucursal.setDireccion("CALLE LOMA BELLA 282");
        sucursal.setUrbanizacion("PROLONGACION BENAVIDES");
        sucursal.setTelefonos("2790623");
        sucursal.setPrincipal(Bean.NO);
        sucursal.setActivo(Bean.ACTIVO);
        sucursal.setDepProvDist(new DepProvDist(new UbigeoPK("15", "01", "40"), null, null, null));
        Assert.assertTrue(sucursalDao.insertar(sucursal));
        sucursales = null;
        sucursales = sucursalDao.getSucursales();
        Assert.assertNotNull(sucursales);
        int cantidadFinal = sucursales.size();
        Assert.assertEquals(cantidadFinal, cantidadInicial + 1);
        // Se prueba el m�todo actualizar();
        sucursal.setPrincipal(Bean.SI);
        Assert.assertTrue(sucursalDao.actualizar(sucursal));
        Integer sucursalId = sucursal.getSucursalId();
        sucursal = null;
        sucursal = sucursalDao.getSucursalPorId(sucursalId);
        Assert.assertNotNull(sucursal);
        Assert.assertEquals(sucursal.getPrincipal(), Bean.SI);
        // Se prueba el m�todo eliminar
        Assert.assertTrue(sucursalDao.eliminar(sucursal));
        sucursales = null;
        sucursales = sucursalDao.getSucursales();
        Assert.assertNotNull(sucursales);
        cantidadFinal = sucursales.size();
        Assert.assertEquals(cantidadFinal, cantidadInicial);
    } catch (Exception e) {
        e.printStackTrace();
        Assert.assertTrue(false);
    }
}
