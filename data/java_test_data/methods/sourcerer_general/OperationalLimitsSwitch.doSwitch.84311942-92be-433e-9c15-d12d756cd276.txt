protected T doSwitch(int classifierID, EObject theEObject) {
    switch(classifierID) {
        case OperationalLimitsPackage.ACTIVE_POWER_LIMIT:
            {
                ActivePowerLimit activePowerLimit = (ActivePowerLimit) theEObject;
                T result = caseActivePowerLimit(activePowerLimit);
                if (result == null)
                    result = caseOperationalLimit(activePowerLimit);
                if (result == null)
                    result = caseIdentifiedObject(activePowerLimit);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case OperationalLimitsPackage.OPERATIONAL_LIMIT:
            {
                OperationalLimit operationalLimit = (OperationalLimit) theEObject;
                T result = caseOperationalLimit(operationalLimit);
                if (result == null)
                    result = caseIdentifiedObject(operationalLimit);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case OperationalLimitsPackage.APPARENT_POWER_LIMIT:
            {
                ApparentPowerLimit apparentPowerLimit = (ApparentPowerLimit) theEObject;
                T result = caseApparentPowerLimit(apparentPowerLimit);
                if (result == null)
                    result = caseOperationalLimit(apparentPowerLimit);
                if (result == null)
                    result = caseIdentifiedObject(apparentPowerLimit);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case OperationalLimitsPackage.BRANCH_GROUP:
            {
                BranchGroup branchGroup = (BranchGroup) theEObject;
                T result = caseBranchGroup(branchGroup);
                if (result == null)
                    result = caseIdentifiedObject(branchGroup);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case OperationalLimitsPackage.BRANCH_GROUP_TERMINAL:
            {
                BranchGroupTerminal branchGroupTerminal = (BranchGroupTerminal) theEObject;
                T result = caseBranchGroupTerminal(branchGroupTerminal);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case OperationalLimitsPackage.CURRENT_LIMIT:
            {
                CurrentLimit currentLimit = (CurrentLimit) theEObject;
                T result = caseCurrentLimit(currentLimit);
                if (result == null)
                    result = caseOperationalLimit(currentLimit);
                if (result == null)
                    result = caseIdentifiedObject(currentLimit);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case OperationalLimitsPackage.OPERATIONAL_LIMIT_SET:
            {
                OperationalLimitSet operationalLimitSet = (OperationalLimitSet) theEObject;
                T result = caseOperationalLimitSet(operationalLimitSet);
                if (result == null)
                    result = caseIdentifiedObject(operationalLimitSet);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case OperationalLimitsPackage.OPERATIONAL_LIMIT_TYPE:
            {
                OperationalLimitType operationalLimitType = (OperationalLimitType) theEObject;
                T result = caseOperationalLimitType(operationalLimitType);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case OperationalLimitsPackage.VOLTAGE_LIMIT:
            {
                VoltageLimit voltageLimit = (VoltageLimit) theEObject;
                T result = caseVoltageLimit(voltageLimit);
                if (result == null)
                    result = caseOperationalLimit(voltageLimit);
                if (result == null)
                    result = caseIdentifiedObject(voltageLimit);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        default:
            return defaultCase(theEObject);
    }
}
