@Override
public void run() {
    String[] filePaths = new String[3];
    filePaths[0] = myParent.getSrcFilePath();
    filePaths[1] = addPrefix(filePaths[0], "res");
    filePaths[2] = myParent.getStatisticPath();
    switch(mode) {
        case OPEN_MODE:
            {
                try {
                    IModel model = Model.getInstance();
                    model.createEtalonStatistic(filePaths[2]);
                    System.out.println("Statistic created successful");
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(myParent, ex.getMessage() + "Please choose correct StatisticFile.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                } catch (DataFormatException ex) {
                    JOptionPane.showMessageDialog(myParent, ex.getMessage() + "Please choose correct StatisticFile.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                } catch (ArrayIndexOutOfBoundsException ex) {
                    JOptionPane.showMessageDialog(myParent, ex.getMessage() + "Please choose StatisticFile correctly.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                break;
            }
        case LOAD_MODE:
            {
                Statistic.copyStatistic(filePaths[2]);
                break;
            }
        default:
            {
                throw new UnsupportedOperationException("Wrong MODE_VALUE for AttackThread");
            }
    }
    int attackResult;
    try {
        IModel model = Model.getInstance();
        attackResult = model.attack(filePaths[0], filePaths[1]);
        if (attackResult != MonoAttacker.SUCCESSFUL) {
            return;
        }
        JOptionPane.showMessageDialog(myParent, "Attack successful");
        son.dispose();
        model.removeListener(son);
        myParent.setDstText(filePaths[1]);
    } catch (IOException ex) {
        JOptionPane.showMessageDialog(myParent, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        son.dispose();
        IModel model = Model.getInstance();
        model.removeListener(son);
        return;
    } catch (DataFormatException ex) {
        JOptionPane.showMessageDialog(myParent, ex.getMessage() + "Please choose correct SourceFile.", "Error", JOptionPane.ERROR_MESSAGE);
        son.dispose();
        IModel model = Model.getInstance();
        model.removeListener(son);
        return;
    } catch (InterruptedException ex) {
        ex.printStackTrace();
        son.dispose();
        IModel model = Model.getInstance();
        model.removeListener(son);
        return;
    } catch (ArrayIndexOutOfBoundsException e2) {
        JOptionPane.showMessageDialog(myParent, e2.getMessage() + "Please choose StatisticFile correctly.", "Error", JOptionPane.ERROR_MESSAGE);
        son.dispose();
        IModel model = Model.getInstance();
        model.removeListener(son);
        return;
    }
}
