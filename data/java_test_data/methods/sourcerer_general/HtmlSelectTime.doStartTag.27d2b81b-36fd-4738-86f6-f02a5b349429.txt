public int doStartTag() throws JspException {
    try {
        Locale locale = Locale.getDefault();
        // Retrieve the user's locale from their session
        User thisUser = (User) pageContext.getSession().getAttribute(Constants.SESSION_USER);
        if (thisUser != null) {
            locale = thisUser.getLocale();
        }
        // Calculate the date and time
        boolean is24Hour = false;
        int hour = -1;
        int minute = -1;
        int AMPM = -1;
        Calendar cal = Calendar.getInstance();
        if (timeZone != null) {
            cal.setTimeZone(TimeZone.getTimeZone(timeZone));
        }
        try {
            cal.setTimeInMillis(value.getTime());
        } catch (Exception e) {
            cal.set(Calendar.HOUR, 12);
            cal.set(Calendar.MINUTE, 0);
            cal.set(Calendar.AM_PM, Calendar.PM);
        }
        hour = cal.get(Calendar.HOUR);
        minute = cal.get(Calendar.MINUTE);
        AMPM = cal.get(Calendar.AM_PM);
        // Check if parsing has AM/PM else show 24 hour time
        DateFormat formatter = (DateFormat) DateFormat.getTimeInstance(DateFormat.SHORT, locale);
        if (formatter.format(cal.getTime()).indexOf("M") == -1) {
            is24Hour = true;
            hour = cal.get(Calendar.HOUR_OF_DAY);
        }
        // output the results
        if (is24Hour) {
            // Show 24 hour selector
            this.pageContext.getOut().write(HtmlSelectHours24.getSelect(baseName + "Hour", (hour < 10 ? String.valueOf("0" + hour) : String.valueOf(hour))).toString());
        } else {
            // Show 12 hour selector
            this.pageContext.getOut().write(HtmlSelectHours.getSelect(baseName + "Hour", (hour < 10 ? String.valueOf("0" + hour) : String.valueOf(hour))).toString());
        }
        this.pageContext.getOut().write(":");
        this.pageContext.getOut().write(HtmlSelectMinutesFives.getSelect(baseName + "Minute", (minute < 10 ? String.valueOf("0" + minute) : String.valueOf(minute))).toString());
        if (is24Hour) {
        // Do not show AM/PM
        } else {
            if (AMPM == Calendar.AM) {
                this.pageContext.getOut().write(HtmlSelectAMPM.getSelect(baseName + "AMPM", "AM").toString());
            } else {
                this.pageContext.getOut().write(HtmlSelectAMPM.getSelect(baseName + "AMPM", "PM").toString());
            }
        }
    } catch (Exception e) {
        throw new JspException("HtmlSelectTime Error: " + e.getMessage());
    }
    return SKIP_BODY;
}
