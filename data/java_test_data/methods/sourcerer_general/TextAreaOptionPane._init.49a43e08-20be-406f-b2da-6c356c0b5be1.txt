// }}}
public void _init() {
    /* Font */
    font = new FontSelector(jEdit.getFontProperty("view.font"));
    addComponent(jEdit.getProperty("options.textarea.font"), font);
    /* Text color */
    addComponent(jEdit.getProperty("options.textarea.foreground"), foregroundColor = new ColorWellButton(jEdit.getColorProperty("view.fgColor")), GridBagConstraints.VERTICAL);
    /* Background color */
    addComponent(jEdit.getProperty("options.textarea.background"), backgroundColor = new ColorWellButton(jEdit.getColorProperty("view.bgColor")), GridBagConstraints.VERTICAL);
    /* Caret color, caret blink, block caret */
    blinkCaret = new JCheckBox(jEdit.getProperty("options.textarea" + ".blinkCaret"));
    blinkCaret.setSelected(jEdit.getBooleanProperty("view.caretBlink"));
    blockCaret = new JCheckBox(jEdit.getProperty("options.textarea" + ".blockCaret"));
    blockCaret.setSelected(jEdit.getBooleanProperty("view.blockCaret"));
    Box caretSettings = new Box(BoxLayout.X_AXIS);
    caretSettings.add(new JLabel(jEdit.getProperty("options.textarea.caret")));
    caretSettings.add(Box.createHorizontalStrut(6));
    caretSettings.add(blinkCaret);
    caretSettings.add(blockCaret);
    addComponent(caretSettings, caretColor = new ColorWellButton(jEdit.getColorProperty("view.caretColor")), GridBagConstraints.VERTICAL);
    /* Selection color */
    addComponent(jEdit.getProperty("options.textarea.selection"), selectionColor = new ColorWellButton(jEdit.getColorProperty("view.selectionColor")), GridBagConstraints.VERTICAL);
    /* Multiple selection color */
    addComponent(jEdit.getProperty("options.textarea.multipleSelection"), multipleSelectionColor = new ColorWellButton(jEdit.getColorProperty("view.multipleSelectionColor")), GridBagConstraints.VERTICAL);
    /* Line highlight */
    lineHighlight = new JCheckBox(jEdit.getProperty("options.textarea" + ".lineHighlight"));
    lineHighlight.setSelected(jEdit.getBooleanProperty("view.lineHighlight"));
    addComponent(lineHighlight, lineHighlightColor = new ColorWellButton(jEdit.getColorProperty("view.lineHighlightColor")), GridBagConstraints.VERTICAL);
    /* Structure highlight */
    structureHighlight = new JCheckBox(jEdit.getProperty("options.textarea" + ".structureHighlight"));
    structureHighlight.setSelected(jEdit.getBooleanProperty("view.structureHighlight"));
    addComponent(structureHighlight, structureHighlightColor = new ColorWellButton(jEdit.getColorProperty("view.structureHighlightColor")), GridBagConstraints.VERTICAL);
    /* EOL markers */
    eolMarkers = new JCheckBox(jEdit.getProperty("options.textarea" + ".eolMarkers"));
    eolMarkers.setSelected(jEdit.getBooleanProperty("view.eolMarkers"));
    addComponent(eolMarkers, eolMarkerColor = new ColorWellButton(jEdit.getColorProperty("view.eolMarkerColor")), GridBagConstraints.VERTICAL);
    /* Wrap guide */
    wrapGuide = new JCheckBox(jEdit.getProperty("options.textarea" + ".wrapGuide"));
    wrapGuide.setSelected(jEdit.getBooleanProperty("view.wrapGuide"));
    addComponent(wrapGuide, wrapGuideColor = new ColorWellButton(jEdit.getColorProperty("view.wrapGuideColor")), GridBagConstraints.VERTICAL);
    /* Electric borders */
    electricBorders = new JCheckBox(jEdit.getProperty("options.textarea" + ".electricBorders"));
    electricBorders.setSelected(!"0".equals(jEdit.getProperty("view.electricBorders")));
    addComponent(electricBorders);
    /* Anti-aliasing */
    antiAlias = new JComboBox(AntiAlias.comboChoices);
    antiAlias.setToolTipText(jEdit.getProperty("options.textarea.antiAlias.tooltip"));
    AntiAlias antiAliasValue = new AntiAlias(jEdit.getProperty("view.antiAlias"));
    font.setAntiAliasEnabled(antiAliasValue.val() > 0);
    antiAlias.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent evt) {
            int idx = antiAlias.getSelectedIndex();
            font.setAntiAliasEnabled(idx > 0);
            font.repaint();
        }
    });
    antiAlias.setSelectedIndex(antiAliasValue.val());
    addComponent(jEdit.getProperty("options.textarea" + ".antiAlias"), antiAlias);
    /* Fractional font metrics */
    fracFontMetrics = new JCheckBox(jEdit.getProperty("options.textarea" + ".fracFontMetrics"));
    fracFontMetrics.setSelected(jEdit.getBooleanProperty("view.fracFontMetrics"));
    addComponent(fracFontMetrics);
    /* Strip trailing EOL */
    stripTrailingEOL = new JCheckBox(jEdit.getProperty("options.textArea.stripTrailingEOL"));
    stripTrailingEOL.setSelected(jEdit.getBooleanProperty("stripTrailingEOL"));
    addComponent(stripTrailingEOL);
}
