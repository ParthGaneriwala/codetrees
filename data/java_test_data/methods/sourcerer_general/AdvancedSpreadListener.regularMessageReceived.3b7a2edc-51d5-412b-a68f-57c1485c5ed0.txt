public void regularMessageReceived(SpreadMessage message) {
    ClusterMessage ClusterMSG;
    try {
        // Get the cluster message from the spread message
        ClusterMSG = (ClusterMessage) message.getObject();
    } catch (SpreadException e) {
        e.printStackTrace();
        // Report error to CMM
        CMM.ReceiveUnsupportedMessage();
        return;
    }
    // Interpret the type of the message
    switch(ClusterMSG.getType()) {
        // Application Messages
        case APP_NEW_TASK:
            {
                if (LocalMachineState == MachineState.TRAINING)
                    CMM.StoreMessageWhileTraining(ClusterMSG);
                else if (LocalMachineState == MachineState.ACTIVE) {
                    // Convert the message to a "Application New Task" message object
                    ClusterMessage_AppNewTask msg = (ClusterMessage_AppNewTask) ClusterMSG;
                    // Inform the CMM of a "Application New Task" message
                    CMM.ReceiveAppNewTask(msg.getSenderID(), msg.getTaskContext());
                }
                break;
            }
        case APP_UPDATE_TASK:
            {
                if (LocalMachineState == MachineState.TRAINING)
                    CMM.StoreMessageWhileTraining(ClusterMSG);
                else if (LocalMachineState == MachineState.ACTIVE) {
                    // Convert the message to a "Application Update Task" message object
                    ClusterMessage_AppUpdateTask msg = (ClusterMessage_AppUpdateTask) ClusterMSG;
                    // Inform the CMM of an "Application Update Task" message
                    CMM.ReceiveAppUpdateTask(msg.getSenderID(), msg.getTaskID(), msg.getContextUpdate());
                }
                break;
            }
        case APP_TERMINATE_TASK:
            {
                if (LocalMachineState == MachineState.TRAINING)
                    CMM.StoreMessageWhileTraining(ClusterMSG);
                else if (LocalMachineState == MachineState.ACTIVE) {
                    // Convert the message to a "Application Terminate Task" message object
                    ClusterMessage_AppTerminateTask msg = (ClusterMessage_AppTerminateTask) ClusterMSG;
                    // Inform the CMM of an "Application Terminate Task" message
                    CMM.ReceiveAppTerminateTask(msg.getSenderID(), msg.getTaskID());
                }
                break;
            }
        case APP_MIGRATE_TASK:
            {
                if (LocalMachineState == MachineState.TRAINING)
                    CMM.StoreMessageWhileTraining(ClusterMSG);
                else if (LocalMachineState == MachineState.ACTIVE) {
                    // Convert the message to a "Application Migrate Task" message object
                    ClusterMessage_AppMigrate msg = (ClusterMessage_AppMigrate) ClusterMSG;
                    // Inform the CMM of an "Application Migrate Task" message
                    CMM.ReceiveAppMigrate(msg.getSenderID(), msg.getTaskID());
                }
                break;
            }
        case APP_TRANSFER_TASK:
            {
                if (LocalMachineState == MachineState.TRAINING)
                    CMM.StoreMessageWhileTraining(ClusterMSG);
                else if (LocalMachineState == MachineState.ACTIVE) {
                    // Convert the message to a "Application Transfer Task" message object
                    ClusterMessage_AppTransferTask msg = (ClusterMessage_AppTransferTask) ClusterMSG;
                    // Inform the CMM of an "Application Transfer Task" message
                    CMM.ReceiveAppTransferTask(msg.getSenderID(), msg.getTaskID(), msg.getNewOwnerMachineID());
                }
                break;
            }
        // Proxy Server Messages
        case PROXY_NEW_TASK:
            {
                if (LocalMachineState == MachineState.TRAINING)
                    CMM.StoreMessageWhileTraining(ClusterMSG);
                else if (LocalMachineState == MachineState.ACTIVE) {
                    // Convert the message to a "Proxy New Task" message object
                    ClusterMessage_ProxyNewTask msg = (ClusterMessage_ProxyNewTask) ClusterMSG;
                    // Inform the CMM of a "Proxy New Task" message
                    CMM.ReceiveProxyNewTask(msg.getSenderID(), msg.getProxyContext());
                }
                break;
            }
        case PROXY_MIGRATE_TASK:
            {
                if (LocalMachineState == MachineState.TRAINING)
                    CMM.StoreMessageWhileTraining(ClusterMSG);
                else if (LocalMachineState == MachineState.ACTIVE) {
                    // Convert the message to a "Proxy Migrate Task" message object
                    ClusterMessage_ProxyMigrate msg = (ClusterMessage_ProxyMigrate) ClusterMSG;
                    // Inform the CMM of a "Proxy Migrate Task" message
                    CMM.ReceiveProxyMigrate(msg.getSenderID(), msg.getTaskID());
                }
                break;
            }
        // Training Messages
        case TRAINING_NEW_TASK:
            {
                if (LocalMachineState == MachineState.TRAINING)
                    CMM.StoreMessageWhileTraining(ClusterMSG);
                else {
                    // Convert the message into a "Training New Task" message object
                    ClusterMessage_TrainingNewTask msg = (ClusterMessage_TrainingNewTask) ClusterMSG;
                    // Inform the CMM of a "Training New Task" message
                    CMM.ReceiveTrainingNewTask(msg.getSenderID(), msg.getData());
                }
                break;
            }
        case TRAINING_UPDATE_TASK:
            {
                // Convert the message into a "Training Update Task" message object
                ClusterMessage_TrainingUpdateTask msg = (ClusterMessage_TrainingUpdateTask) ClusterMSG;
                // Inform the CMM of a "Training Update Task" message
                CMM.ReceiveTrainingUpdateTask(msg.getSenderID(), msg.getTaskID(), msg.getData(), msg);
                break;
            }
        case TRAINING_TERMINATE_TASK:
            {
                // Convert the message into a "Training Update Task" message object
                ClusterMessage_TrainingTerminateTask msg = (ClusterMessage_TrainingTerminateTask) ClusterMSG;
                // Inform the CMM of a "Training Update Task" message
                CMM.ReceiveTrainingTerminateTask(msg.getSenderID(), msg.getTaskID(), msg.getTraineeName(), msg);
                break;
            }
        case TRAINING_MIGRATE_TASK:
            {
                // Convert the message to a "Training Migrate Task" message object
                ClusterMessage_TrainingMigrate msg = (ClusterMessage_TrainingMigrate) ClusterMSG;
                // Inform the CMM of a "Training Migrate Task" message
                CMM.ReceiveTrainingMigrate(msg.getSenderID(), msg.getTaskID(), msg.getTraineeName(), msg);
                break;
            }
        // Misc. Messages
        case NEW_SERVER_READY:
            {
                if (LocalMachineState == MachineState.TRAINING)
                    CMM.StoreMessageWhileTraining(ClusterMSG);
                else {
                    // Convert the message to a "New Server Ready" message object
                    ClusterMessage_NewServerReady msg = (ClusterMessage_NewServerReady) ClusterMSG;
                    // Inform the CMM of a "New Server Ready" message
                    CMM.ReceiveNewServerReady(msg.getNewMachineEntry());
                }
                break;
            }
        // Unexpected Message
        default:
            // Inform the CMM that an unsupported message was recieved
            CMM.ReceiveUnsupportedMessage();
    }
}
