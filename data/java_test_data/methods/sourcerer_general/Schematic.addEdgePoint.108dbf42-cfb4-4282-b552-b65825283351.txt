public void addEdgePoint(int sx, int sy, int clicks) {
    SObject clicked;
    Point clickp;
    int cx, cy;
    cx = s2cr(sx);
    cy = s2cr(sy);
    clicked = suggestion(sx, sy);
    clickp = SEdge.getSuggestionPoint(clicked);
    /*
         * When a mouse click happens near a suggestion point (even if the click
         * is not exactly on the suggestion point in schematic coordinates, the 
         * edge point will be added to the suggestion point.  In this case, the
         * ortho point might be a little off.  We set the ortho point to the 
         * suggestion point in this case (if it's near the suggestion point).
         * NOTE: if the mouse is clicked in the middle of nowhere (i.e. we have
         * no suggestion point) then we just use the click point.
         */
    if (clickp != null) {
        ortho_point.x = clickp.x;
        ortho_point.y = clickp.y;
    } else {
        ortho_point.x = cx;
        ortho_point.y = cy;
    }
    if (tedge == null && !started) {
        /*
             * Check to see if any existing objects are sitting where the edge
             * is being started:
             * 
             * - If there is a node terminal, use that as the edge head.
             * - If there is a junction, use that as the edge head.
             * - If there is nothing, create a new junction and use that as head
             *   ONLY if double-clicked
             */
        if (clicked != null) {
            transaction(0);
            started = true;
            nocursor();
            tedge = new SEdge(this);
            tedge.temp.x = cx;
            tedge.temp.y = cy;
            checkpoint(clicked, 0);
            tedge.link(0, clicked, this);
        } else {
            if (clicks >= 2) {
                /*
                     * Start edge at new orphaned junction
                     */
                transaction(0);
                started = true;
                nocursor();
                sjunction = new SJunction(this, cx, cy);
                tedge = new SEdge(this);
                tedge.temp.x = cx;
                tedge.temp.y = cy;
                tedge.link(0, sjunction, null);
                add_internal(sjunction);
                checkpoint(sjunction, 1);
            }
        }
    } else {
        /*
             * Check to see if any existing objects are sitting where the edge
             * is being extended:
             * 
             * - If there is a node terminal, use that as the edge tail.
             * - If there is a junction, use that as the edge tail.
             * - If there is nothing, create a new edge internal point
             * - If there is nothing AND dbl-click, end the edge with a junction
             */
        if (clicked != null) {
            checkpoint(clicked, 0);
            /*
                 * Linking the end tail with whatever is clicked might fail.
                 */
            if (tedge.link(1, clicked, this)) {
                add_internal(tedge);
                checkpoint(tedge, 1);
                tedge = null;
                pcursor();
                started = false;
                transaction(1);
            }
        } else {
            if (clicks >= 2) {
                /*
                     * Finish the edge in new orphaned junction.
                     */
                fjunction = new SJunction(this, cx, cy);
                assert (tedge != null);
                if (tedge.link(1, fjunction, null)) {
                    /* 
                         * Since the first click of the mouse would have added 
                         * an internal point, and then the second click would 
                         * have added the junction, the edge will actually have 
                         * an body point coinciding with the tail junction! We 
                         * have to take care of this here before we add the edge 
                         * to the schematic.
                         */
                    tedge.fixtail();
                    add_internal(tedge);
                    add_internal(fjunction);
                    checkpoint(tedge, 1);
                    checkpoint(fjunction, 1);
                    tedge = null;
                    sjunction = null;
                    fjunction = null;
                    started = false;
                    pcursor();
                    transaction(1);
                }
            } else {
                /*
                     * Add point to the edge if the edge supports multipoint
                     */
                if (tedge.multipoint) {
                    tedge.addPoint(cx, cy);
                }
            }
        }
    }
    repaint();
}
