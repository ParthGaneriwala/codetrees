public static void paintArrow(Graphics g, int x1, int y1, int x2, int y2, Color c) {
    // Forget hyperbolic bending for now
    g.setColor(c);
    int x3 = x1;
    int y3 = y1;
    double dist = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
    if (dist > 10) {
        double adjustDistRatio = (dist - 10) / dist;
        x3 = (int) (x1 + (x2 - x1) * adjustDistRatio);
        y3 = (int) (y1 + (y2 - y1) * adjustDistRatio);
    }
    x3 = (int) ((x3 * 4 + x1) / 5.0);
    y3 = (int) ((y3 * 4 + y1) / 5.0);
    g.drawLine(x3, y3, x2, y2);
    g.drawLine(x1, y1, x3, y3);
    g.drawLine(x1 + 1, y1, x3, y3);
    g.drawLine(x1 + 2, y1, x3, y3);
    g.drawLine(x1 + 3, y1, x3, y3);
    g.drawLine(x1 + 4, y1, x3, y3);
    g.drawLine(x1 - 1, y1, x3, y3);
    g.drawLine(x1 - 2, y1, x3, y3);
    g.drawLine(x1 - 3, y1, x3, y3);
    g.drawLine(x1 - 4, y1, x3, y3);
    g.drawLine(x1, y1 + 1, x3, y3);
    g.drawLine(x1, y1 + 2, x3, y3);
    g.drawLine(x1, y1 + 3, x3, y3);
    g.drawLine(x1, y1 + 4, x3, y3);
    g.drawLine(x1, y1 - 1, x3, y3);
    g.drawLine(x1, y1 - 2, x3, y3);
    g.drawLine(x1, y1 - 3, x3, y3);
    g.drawLine(x1, y1 - 4, x3, y3);
}
