// $ANTLR start "procedure_chamada"
public final gramaticaMM2Parser.procedure_chamada_return procedure_chamada() throws RecognitionException {
    gramaticaMM2Parser.procedure_chamada_return retval = new gramaticaMM2Parser.procedure_chamada_return();
    retval.start = input.LT(1);
    CommonTree root_0 = null;
    Token LEFT_PAREN213 = null;
    Token RIGHT_PAREN215 = null;
    gramaticaMM2Parser.id_return id212 = null;
    gramaticaMM2Parser.lista_args_return lista_args214 = null;
    CommonTree LEFT_PAREN213_tree = null;
    CommonTree RIGHT_PAREN215_tree = null;
    try {
        // C:\\Documents and Settings\\sb\\Desktop\\gramaticaMM2.g:184:19: ( id LEFT_PAREN ( lista_args | ) RIGHT_PAREN )
        // C:\\Documents and Settings\\sb\\Desktop\\gramaticaMM2.g:184:21: id LEFT_PAREN ( lista_args | ) RIGHT_PAREN
        {
            root_0 = (CommonTree) adaptor.nil();
            pushFollow(FOLLOW_id_in_procedure_chamada2038);
            id212 = id();
            state._fsp--;
            adaptor.addChild(root_0, id212.getTree());
            LEFT_PAREN213 = (Token) match(input, LEFT_PAREN, FOLLOW_LEFT_PAREN_in_procedure_chamada2040);
            LEFT_PAREN213_tree = (CommonTree) adaptor.create(LEFT_PAREN213);
            adaptor.addChild(root_0, LEFT_PAREN213_tree);
            // C:\\Documents and Settings\\sb\\Desktop\\gramaticaMM2.g:184:35: ( lista_args | )
            int alt42 = 2;
            int LA42_0 = input.LA(1);
            if (((LA42_0 >= NOT && LA42_0 <= MINUS) || LA42_0 == LEFT_PAREN || LA42_0 == DIGIT_NULL || LA42_0 == ASPA || (LA42_0 >= BOOL && LA42_0 <= LETTER))) {
                alt42 = 1;
            } else if ((LA42_0 == RIGHT_PAREN)) {
                alt42 = 2;
            } else {
                NoViableAltException nvae = new NoViableAltException("", 42, 0, input);
                throw nvae;
            }
            switch(alt42) {
                case 1:
                    // C:\\Documents and Settings\\sb\\Desktop\\gramaticaMM2.g:184:36: lista_args
                    {
                        pushFollow(FOLLOW_lista_args_in_procedure_chamada2043);
                        lista_args214 = lista_args();
                        state._fsp--;
                        adaptor.addChild(root_0, lista_args214.getTree());
                    }
                    break;
                case 2:
                    // C:\\Documents and Settings\\sb\\Desktop\\gramaticaMM2.g:184:47:
                    {
                    }
                    break;
            }
            RIGHT_PAREN215 = (Token) match(input, RIGHT_PAREN, FOLLOW_RIGHT_PAREN_in_procedure_chamada2047);
            RIGHT_PAREN215_tree = (CommonTree) adaptor.create(RIGHT_PAREN215);
            adaptor.addChild(root_0, RIGHT_PAREN215_tree);
        }
        retval.stop = input.LT(-1);
        retval.tree = (CommonTree) adaptor.rulePostProcessing(root_0);
        adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
    } catch (RecognitionException re) {
        reportError(re);
        recover(input, re);
        retval.tree = (CommonTree) adaptor.errorNode(input, retval.start, input.LT(-1), re);
    } finally {
    }
    return retval;
}
