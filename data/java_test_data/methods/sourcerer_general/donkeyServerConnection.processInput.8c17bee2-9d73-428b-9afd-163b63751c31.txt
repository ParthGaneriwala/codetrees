public synchronized void processInput() {
    if (hasInput()) {
        isConnected = true;
        inPacket = new donkeyScannedPacket(getNextPacket());
        byte[] fileHash = null;
        donkeyShares ds;
        donkeySharedFile dsf = null;
        Vector sharedFiles;
        LinkedList blockList = null;
        int command = convert.byteToInt(inPacket.getCommandId());
        switch(command) {
            case 0x38:
                {
                    System.out.println("Server Message: \"" + inPacket.getMessage() + "\"");
                    waiting = true;
                    break;
                }
            case 0x34:
                {
                    System.out.println("Server status: " + inPacket.getStatus()[0] + " Users online, sharing " + inPacket.getStatus()[1] + " files...");
                    donkeyServer.setUsers((int) inPacket.getStatus()[0]);
                    donkeyServer.setFiles((int) inPacket.getStatus()[1]);
                    long statusTime = System.currentTimeMillis() - lastStatusMessage;
                    System.out.println("Delay between status updates:" + (statusTime / 1000) + " seconds.");
                    lastStatusMessage = System.currentTimeMillis();
                    break;
                }
            case 0x33:
                {
                    System.out.print("Serch results received.");
                    try {
                        donkeySearch = new Vector(inPacket.getSearchResults(new InetSocketAddress(getChannel().socket().getInetAddress(), getChannel().socket().getPort())));
                        hasSearch = true;
                        if (dInfo.getDRCT() != null)
                            dInfo.getDRCT().setNewResults(donkeySearch.size());
                    } catch (Exception e) {
                        System.out.println("Error checking results: " + e.toString());
                    }
                    break;
                }
            case 0x35:
                {
                    System.out.print("Server requests push connection to: ");
                    InetSocketAddress address = inPacket.getPushAddress();
                    System.out.println(address.toString());
                    donkeyPushConnection nPC = new donkeyPushConnection(dInfo);
                    dInfo.getDCMT().newConnection(address, nPC);
                    break;
                }
            case 0x01:
                {
                    System.out.println("Server send 0x01...?!?");
                    break;
                }
            case 0x42:
                {
                    System.out.println("Received download sources...");
                    inPacket.addDownloadSources(dInfo.getDDMT(), dInfo);
                    break;
                }
            case 0x40:
                {
                    long id = inPacket.getClientId()[0];
                    System.out.print("ID: " + Long.toString(id));
                    if (id < 100000) {
                        System.out.println(" We are firewalled.");
                    } else {
                        System.out.println(" Not firewalled.");
                    }
                    dInfo.setUserID(id);
                    addOutPacket(CreateDonkeyPacket.command(0x14));
                    addOutPacket(CreateDonkeyPacket.fileOffer(dInfo.getDonkeyShares()));
                    break;
                }
            case 0x58:
                {
                    System.out.println("Server requests file?!?");
                    break;
                }
            case 0x47:
                {
                    break;
                }
            case 0x54:
                {
                    System.out.println("0x54 revc");
                    addOutPacket(CreateDonkeyPacket.command(convert.intToByte(0x55)));
                    break;
                }
            case 0x56:
                {
                    System.out.println("Received 0x56: transfer end.");
                    close();
                    break;
                }
            default:
                {
                    System.out.println("got unknown packet: \"" + inPacket.toString() + "\"");
                }
        }
    }
}
