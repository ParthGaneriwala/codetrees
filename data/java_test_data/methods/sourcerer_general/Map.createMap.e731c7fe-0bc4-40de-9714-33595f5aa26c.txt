private void createMap(boolean boundaries) {
    switch(this.mapType) {
        case Map.FISHBOWL:
            if (boundaries) {
                this.buildMap(Map.fishbowlBounds);
            } else {
                this.buildMap(Map.fishbowlTransitable);
            }
            break;
        case Map.OUTER_FISHBOWL:
            if (boundaries) {
                this.buildMap(Map.outerFishBowlBounds);
            } else {
                this.buildMap(Map.outerFishbowlTransitable);
            }
            break;
        case Map.DISTILLERY:
            if (boundaries) {
                this.buildMap(Map.distilleryBounds);
            } else {
                this.buildMap(Map.distilleryTransitable);
            }
            break;
        case Map.WOLVES_UPPER_LEFT:
            if (boundaries) {
                this.buildMap(Map.wolves1Bounds);
            } else {
                this.buildMap(Map.wolves1Transitable);
            }
            break;
        case Map.WOLVES_UPPER_RIGHT:
            if (boundaries) {
                this.buildMap(Map.wolves2Bounds);
            } else {
                this.buildMap(Map.wolves2Transitable);
            }
            break;
        case Map.WOLVES_LOWER_LEFT:
            if (boundaries) {
                this.buildMap(Map.wolves3Bounds);
            } else {
                this.buildMap(Map.wolves3Transitable);
            }
            break;
        case Map.WOLVES_LOWER_RIGHT:
            if (boundaries) {
                this.buildMap(Map.wolves4Bounds);
            } else {
                this.buildMap(Map.wolves4Transitable);
            }
            break;
        case Map.CCI_COMPUTERS:
            if (boundaries) {
                this.buildMap(Map.boundsCCIComputersTiles);
            } else {
                this.buildMap(Map.transitableCCIComputersTiles);
            }
            break;
        case Map.CCI_RECEIVER:
            if (boundaries) {
                this.buildMap(Map.boundsCCIReceiverTiles);
            } else {
                this.buildMap(Map.transitableCCIReceiverTiles);
            }
            break;
        case Map.OUTER_DISTILLERY:
            if (boundaries) {
                this.buildMap(Map.outerDistilleryBounds);
            } else {
                this.buildMap(Map.outerDistilleryTransitable);
            }
            break;
        case Map.OUTSIDES:
            if (boundaries) {
                this.buildMap(Map.outsidesBounds);
            } else {
                this.buildMap(Map.outsidesTransitable);
            }
            break;
        default:
            System.out.println("Error in map type");
    }
}
