public void process(Connection db, LookupContribution lookupContribution) throws SQLException {
    lastRun = lookupContribution.getRunDate();
    currentRun = new Timestamp(System.currentTimeMillis());
    userPoints = new HashMap<String, Integer>();
    // Page through the updates just in case there are lots of users do 100 at a time...
    PagedListInfo pagedListInfo = new PagedListInfo();
    pagedListInfo.setItemsPerPage(100);
    pagedListInfo.setDefaultSort("issue_id", null);
    // Use the paged list to paged through all users
    TopicList issues = new TopicList();
    issues.setPagedListInfo(pagedListInfo);
    issues.setEnteredRangeStart(lastRun);
    issues.setEnteredRangeEnd(currentRun);
    issues.buildList(db);
    while (issues.size() > 0) {
        for (Topic topic : issues) {
            int userId = topic.getEnteredBy();
            int projectId = topic.getProjectId();
            String userIdAndProjectId = userId + "-" + projectId;
            if (userPoints.containsKey(userIdAndProjectId)) {
                int currentPoints = userPoints.get(userIdAndProjectId);
                currentPoints = currentPoints + lookupContribution.getPointsAwarded();
                userPoints.put(userIdAndProjectId, currentPoints);
            } else {
                userPoints.put(userIdAndProjectId, lookupContribution.getPointsAwarded());
            }
        }
        // Always reset the list or else the records are included on buildList again
        issues.clear();
        if (pagedListInfo.getPage() < pagedListInfo.getNumberOfPages()) {
            pagedListInfo.setCurrentPage(pagedListInfo.getPage() + 1);
            issues.buildList(db);
        }
    }
    updatePoints(db, lookupContribution);
}
