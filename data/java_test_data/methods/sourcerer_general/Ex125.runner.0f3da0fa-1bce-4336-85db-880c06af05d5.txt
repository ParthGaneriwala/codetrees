public static void runner() throws InterruptedException {
    // En typ av lista som automatiskt sköter notifications när operationer utförts
    BlockingQueue<String> buffer = new LinkedBlockingQueue<String>();
    Scanner sc = new Scanner(System.in);
    System.out.println("Antal Prod125er? ");
    System.out.flush();
    Prod125[] p = new Prod125[sc.nextInt()];
    for (int i = 0; i < p.length; i++) {
        System.out.println("Prod125 nr " + (i + 1) + ":");
        System.out.print(" Tidsintervall? ");
        System.out.flush();
        int time = sc.nextInt();
        System.out.print(" Text? ");
        System.out.flush();
        String txt = sc.next();
        // lägger till ny producent
        p[i] = new Prod125(txt, time, buffer);
    }
    System.out.print(" Antal Kons125er? ");
    System.out.flush();
    Kons125[] k = new Kons125[sc.nextInt()];
    for (int i = 0; i < k.length; i++) {
        System.out.println("Kons125 nr " + (i + 1) + ":");
        System.out.print("   Tidsintervall? ");
        System.out.flush();
        int time = sc.nextInt();
        // lägger till ny konsument
        k[i] = new Kons125(time, buffer);
    }
    // ge aktiv tråd högsta prioritet
    Thread.currentThread().setPriority(Thread.MAX_PRIORITY);
    for (int i = 0; i < p.length; i++) {
        // sätter igång trådarna
        p[i].activity.start();
    }
    for (int i = 0; i < k.length; i++) {
        // sätter igång trådarna
        k[i].activity.start();
    }
    Thread.sleep(60000);
    System.out.println("\nAntal kvar i kön: " + buffer.size());
    System.exit(0);
}
