@RequestMapping(value = "/viewreports/{id}", method = RequestMethod.GET)
public ModelAndView getViewReports(@PathVariable("id") String id) {
    ModelAndView model = new ModelAndView("viewreports");
    DataCollectionInfo info = DataCollectionInfo.byKey(id);
    if (info == null || info.getName() == null) {
        model.addObject("error", true);
        if (info == null)
            model.addObject("errorMessage", "There was no form found for ID " + id);
        else
            model.addObject("errorMessage", "The found form had no name");
        model.addObject("formName", "");
        return model;
    } else
        model.addObject("error", false);
    // Query the datastore
    DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();
    Query q = new Query("Report");
    q.addFilter("dataCollectionId", Query.FilterOperator.EQUAL, id);
    // Build the list of results
    PreparedQuery pq = datastore.prepare(q);
    List<ViewReportResult> reports = new ArrayList<ViewReportResult>();
    for (Entity result : pq.asIterable()) {
        ViewReportResult r = new ViewReportResult();
        r.reporterId = result.getProperty("reporterId").toString();
        r.collectionTime = result.getProperty("collectionTime").toString();
        r.reportTime = result.getProperty("reportTime").toString();
        Key k = result.getKey();
        r.id = KeyFactory.keyToString(k);
        reports.add(r);
    }
    model.addObject("reports", reports);
    model.addObject("formName", info.getName());
    return model;
}
