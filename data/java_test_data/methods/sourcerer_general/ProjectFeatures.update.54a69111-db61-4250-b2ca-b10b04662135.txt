public int update(Connection db) throws SQLException {
    if (id == -1) {
        throw new SQLException("ProjectId was not specified");
    }
    int resultCount = 0;
    boolean commit = db.getAutoCommit();
    try {
        if (commit) {
            db.setAutoCommit(false);
        }
        PreparedStatement pst = db.prepareStatement("UPDATE projects " + "SET " + (updateAllowGuests ? "allow_guests = ?, " : "") + (updateAllowParticipants ? "allows_user_observers = ?, " : "") + (updateMembershipRequired ? "membership_required = ?, " : "") + "calendar_enabled = ?, dashboard_enabled = ?, news_enabled = ?, details_enabled = ?, " + "team_enabled = ?, plan_enabled = ?, lists_enabled = ?, discussion_enabled = ?, wiki_enabled = ?, " + "tickets_enabled = ?, documents_enabled = ?, " + "calendar_label = ?, dashboard_label = ?, news_label = ?, details_label = ?, team_label = ?, plan_label = ?, lists_label = ?, " + "discussion_label = ?, wiki_label = ?, tickets_label = ?, documents_label = ?, " + "dashboard_order = ?, calendar_order = ?, news_order = ?, details_order = ?, team_order = ?, plan_order = ?, lists_order = ?, " + "discussion_order = ?, wiki_order = ?, tickets_order = ?, documents_order = ?, " + "badges_enabled = ?, badges_label = ?, badges_order = ?, badges_description = ?, " + "reviews_enabled = ?, reviews_label = ?, reviews_order = ?, reviews_description = ?, " + "classifieds_enabled = ?, classifieds_label = ?, classifieds_order = ?, classifieds_description = ?, " + "ads_enabled = ?, ads_label = ?, ads_order = ?, ads_description = ?, " + "profile_enabled = ?, profile_label = ?, profile_order = ?, profile_description = ?, " + "messages_enabled = ?, messages_label = ?, messages_order = ?, messages_description = ?, " + "webcasts_enabled = ?, webcasts_label = ?, webcasts_order = ?, webcasts_description = ?, " + "modifiedby = ?, modified = CURRENT_TIMESTAMP " + "WHERE project_id = ? ");
        int i = 0;
        if (updateAllowGuests) {
            pst.setBoolean(++i, allowGuests);
        }
        if (updateAllowParticipants) {
            pst.setBoolean(++i, allowParticipants);
        }
        if (updateMembershipRequired) {
            pst.setBoolean(++i, membershipRequired);
        }
        pst.setBoolean(++i, showCalendar);
        pst.setBoolean(++i, showDashboard);
        pst.setBoolean(++i, showNews);
        pst.setBoolean(++i, showDetails);
        pst.setBoolean(++i, showTeam);
        pst.setBoolean(++i, showPlan);
        pst.setBoolean(++i, showLists);
        pst.setBoolean(++i, showDiscussion);
        pst.setBoolean(++i, showWiki);
        pst.setBoolean(++i, showTickets);
        pst.setBoolean(++i, showDocuments);
        pst.setString(++i, labelCalendar);
        pst.setString(++i, labelDashboard);
        pst.setString(++i, labelNews);
        pst.setString(++i, labelDetails);
        pst.setString(++i, labelTeam);
        pst.setString(++i, labelPlan);
        pst.setString(++i, labelLists);
        pst.setString(++i, labelDiscussion);
        pst.setString(++i, labelWiki);
        pst.setString(++i, labelTickets);
        pst.setString(++i, labelDocuments);
        pst.setInt(++i, orderDashboard);
        pst.setInt(++i, orderCalendar);
        pst.setInt(++i, orderNews);
        pst.setInt(++i, orderDetails);
        pst.setInt(++i, orderTeam);
        pst.setInt(++i, orderPlan);
        pst.setInt(++i, orderLists);
        pst.setInt(++i, orderDiscussion);
        pst.setInt(++i, orderWiki);
        pst.setInt(++i, orderTickets);
        pst.setInt(++i, orderDocuments);
        pst.setBoolean(++i, showBadges);
        pst.setString(++i, labelBadges);
        pst.setInt(++i, orderBadges);
        pst.setString(++i, descriptionBadges);
        pst.setBoolean(++i, showReviews);
        pst.setString(++i, labelReviews);
        pst.setInt(++i, orderReviews);
        pst.setString(++i, descriptionReviews);
        pst.setBoolean(++i, showClassifieds);
        pst.setString(++i, labelClassifieds);
        pst.setInt(++i, orderClassifieds);
        pst.setString(++i, descriptionClassifieds);
        pst.setBoolean(++i, showAds);
        pst.setString(++i, labelAds);
        pst.setInt(++i, orderAds);
        pst.setString(++i, descriptionAds);
        pst.setBoolean(++i, showProfile);
        pst.setString(++i, labelProfile);
        pst.setInt(++i, orderProfile);
        pst.setString(++i, descriptionProfile);
        pst.setBoolean(++i, showMessages);
        pst.setString(++i, labelMessages);
        pst.setInt(++i, orderMessages);
        pst.setString(++i, descriptionMessages);
        pst.setBoolean(++i, showWebcasts);
        pst.setString(++i, labelWebcasts);
        pst.setInt(++i, orderWebcasts);
        pst.setString(++i, descriptionWebcasts);
        pst.setInt(++i, modifiedBy);
        pst.setInt(++i, id);
        resultCount = pst.executeUpdate();
        pst.close();
        if (commit) {
            db.commit();
        }
        CacheUtils.invalidateValue(Constants.SYSTEM_PROJECT_CACHE, id);
    } catch (Exception e) {
        if (commit) {
            db.rollback();
        }
        throw new SQLException(e.getMessage());
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
    return resultCount;
}
