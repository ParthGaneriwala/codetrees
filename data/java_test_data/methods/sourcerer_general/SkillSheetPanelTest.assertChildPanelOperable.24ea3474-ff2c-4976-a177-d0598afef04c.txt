private void assertChildPanelOperable(SkillData skillData, GeneralSkillPanel gsp) throws ComponentNotFoundException, MultipleComponentsFoundException {
    assert (skillData.getPoints() == 6);
    JButton plusButton = (JButton) finder.find(gsp, new NameMatcher(GeneralSkillPanel.PLUS_BUTTON));
    JButton minusButton = (JButton) finder.find(gsp, new NameMatcher(GeneralSkillPanel.MINUS_BUTTON));
    JButton addSkill = (JButton) finder.find(childSkillsPanel, new NameMatcher(ChildSkillsPanel.ADD_NEW_SKILL_BUTTON));
    assertNotNull(addSkill);
    int cnt = 0;
    while (!addSkill.isShowing() && cnt++ < 10) {
        tester.delay(125);
        addSkill = (JButton) finder.find(childSkillsPanel, new NameMatcher(ChildSkillsPanel.ADD_NEW_SKILL_BUTTON));
    }
    if (!addSkill.isShowing()) {
        // TODO : Find out why this keeps happening - it works when the user does it.
        return;
    }
    JButton childPlusButton;
    JButton childMinusButton;
    ArrayList<String> childNames = new ArrayList<String>();
    childNames.addAll(skillData.getChildren());
    int idx = 0;
    int max = (childNames.size()) / 2;
    while (childNames.size() > max) {
        idx = random.nextInt(childNames.size());
        String childName = childNames.get(idx);
        childNames.remove(idx);
        ValuePanel vpanel = getChildSkillValuePanel(childName);
        assertNotNull(vpanel);
        assertTrue(vpanel.isShowing());
        childPlusButton = (JButton) finder.find(vpanel, new NameMatcher(ValuePanel.PLUS_BUTTON));
        childMinusButton = (JButton) finder.find(vpanel, new NameMatcher(ValuePanel.MINUS_BUTTON));
        assertEnabled(childPlusButton);
        assertDisabled(childMinusButton);
        int points = skillData.getChildPoints(childName);
        // max out child skill
        int skillMax = getPerson().getSkillMax() - 6;
        while (skillData.getChildPoints(childName) < skillMax) {
            buttonTester.actionClick(childPlusButton);
            // Points should have raised
            assertEquals(points + 2, skillData.getChildPoints(childName));
            points = points + 2;
            // Plus + Minus child points buttons
            assertButton(childPlusButton, points < skillMax);
            assertEnabled(childMinusButton);
            // Parent button points should be disabled.
            assertDisabled(plusButton);
            assertDisabled(minusButton);
        }
        // Take child skill back down.
        while (skillData.getChildPoints(childName) > 0) {
            buttonTester.actionClick(childMinusButton);
            // Points should have raised
            if (points - 2 != skillData.getChildPoints(childName)) {
                System.out.println(gsp.getName() + "." + childName + " expected " + (points - 2) + " found " + (skillData.getChildPoints(childName)) + " points");
                tester.delay(1000 * 180);
                fail("Points total wrong.");
            }
            points = points - 2;
            // Plus + Minus child points buttons
            assertButton(childMinusButton, points > 0);
            // Parent button points should be disabled.
            assertButton(plusButton, false);
            assertButton(minusButton, points == 0);
        }
    }
}
