private byte[] recuperaConteudo(String url, String[] parametros, String[] conteudos) {
    HttpConnection connection = null;
    InputStream inputstream = null;
    byte[] retorno = null;
    String solicitacao = "";
    String cookie;
    try {
        if (parametros != null && conteudos != null) {
            for (int i = 0; i < parametros.length; i++) {
                solicitacao += parametros[i] + "=" + conteudos[i];
                if (i != parametros.length - 1)
                    solicitacao += "&";
            }
        }
        // dadosEnvio = solicitacao.getBytes();
        url = url + "?" + solicitacao;
        connection = (HttpConnection) Connector.open(url);
        cookie = midlet.getCookie();
        if (cookie != null)
            connection.setRequestProperty("Cookie", cookie);
        /*connection.setRequestMethod(HttpConnection.POST);
            connection.setRequestProperty("Content-Length", "" + dadosEnvio.length);
            connection.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
            connection.setRequestProperty("Connection", "close");

            OutputStream os = connection.openOutputStream();

            os.write(dadosEnvio);
            os.flush();
            os.close();*/
        int retornoHttp = connection.getResponseCode();
        if (retornoHttp == HttpConnection.HTTP_OK) {
            if (cookie == null) {
                cookie = connection.getHeaderField("Set-Cookie");
                midlet.setCookie(cookie);
            }
            inputstream = connection.openInputStream();
            int length = (int) connection.getLength();
            if (length != -1) {
                // Neste caso sabemos exatamente quantos bytes voltam
                retorno = new byte[length];
                inputstream.read(retorno);
            } else {
                ByteArrayOutputStream bytestream = new ByteArrayOutputStream();
                int ch;
                while ((ch = inputstream.read()) != -1) {
                    bytestream.write(ch);
                }
                retorno = bytestream.toByteArray();
                bytestream.close();
            }
        }
    } catch (IOException error) {
        return null;
    } finally {
        if (inputstream != null) {
            try {
                inputstream.close();
            } catch (Exception error) {
            /*log error*/
            }
        }
        if (connection != null) {
            try {
                connection.close();
            } catch (Exception error) {
            /*log error*/
            }
        }
    }
    return retorno;
}
