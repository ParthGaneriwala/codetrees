public void transformCamera(float[] d, float[] q) {
    // a new Transform
    Transform3D t = new Transform3D();
    // fill the transform with our current settings
    coord.getTransform(t);
    Quat4f rot = new Quat4f();
    Vector3f trans = new Vector3f();
    // fetch our old values
    t.get(trans);
    t.get(rot);
    System.out.println("rot(pre)=" + rot);
    if (Float.isNaN(rot.x)) {
        System.out.println(t);
    }
    try {
        if (viewMode == INDEPENDENT_VIEW) {
            if (d != null) {
                // move our translation by amount specified
                trans.add(new Vector3f(d));
            }
            if (q != null) {
                // spin our rotation by amount specified
                rot.mul(new Quat4f(q));
            }
            t = new Transform3D(rot, trans, 1);
            t.normalize();
            coord.setTransform(t);
            System.out.println("rot(pos)=" + rot);
        } else if (viewMode == FOLLOWING_VIEW) {
        // fill this in!
        // move AROUND the avatar?
        }
    } catch (Exception e) {
        System.out.println("Exception: " + e);
        System.out.println("q= " + Quaternions.toString(q));
        // System.out.println("rot="+rot);
        System.out.println("transform=" + t);
        Vector3d s = new Vector3d();
        t.getScale(s);
        System.out.println("scale=" + s);
    }
}
