public void CalcDimensions() {
    double o;
    g2b.setFont(font1);
    int max_len = 0;
    for (int i = 0; i < numBars; i++) if (desc[i].length() > max_len) {
        max_len = desc[i].length();
        if (show_percents == 1)
            max_description = g2b.getFontMetrics().stringWidth(desc[i] + "(100.00%)");
        else
            max_description = g2b.getFontMetrics().stringWidth(desc[i]);
    }
    max = 0;
    for (int i = 0; i < numBars; i++) if ((int) value[i] > max)
        max = (int) (value[i]);
    if (legend_rows > numBars)
        legend_rows = numBars;
    int nr_cifre = 1;
    double max1 = max;
    while (max1 / 10 >= 1) {
        max1 = max1 / 10;
        nr_cifre++;
    }
    int font_metrics = g2b.getFontMetrics().stringWidth("a");
    vert_string_l = font_metrics * nr_cifre + 5;
    if (chart_y == -1)
        chart_y = 50;
    if (chart_x == -1) {
        chart_x = chart_x_init;
        if (chart_x < vert_string_l + 10)
            chart_x = vert_string_l + 10;
        if (y_axis_description != null)
            chart_x += 20;
    }
    if (chart_y == -1)
        chart_y = 50;
    if (numBars > 0) {
        if (show_legend == 0) {
            if (chart_w == -1)
                chart_w = screen_w - chart_x - chart_x_init;
            if (chart_h == -1)
                chart_h = screen_h - chart_y - title_pos_y - 20 * oblique_values;
            if (x_axis_description != null)
                chart_h -= 20;
            frame.height = (int) chart_h;
            frame.width = (int) chart_w;
            frame.x = (int) chart_x;
            frame.y = (int) chart_y;
            if (frame.width % (5 * numBars + 1) != 0)
                frame.width -= (frame.width % (5 * numBars + 1));
            hor_step = (5 * (double) frame.width) / (5 * (double) numBars + 1);
            oblic = hor_step / (double) 5;
            if ((frame.height - oblic) % divisions_number != 0)
                frame.height -= (frame.height - oblic) % divisions_number;
            vert_step = ((double) frame.height - oblic) / (double) divisions_number;
        } else if (show_legend_on_right == 0) {
            if (chart_w == -1)
                chart_w = screen_w - chart_x - chart_x_init;
            if (legend_h == -1)
                legend_h = legend_rows * 20;
            if (chart_h == -1)
                chart_h = screen_h - chart_y - legend_h - 30 - 20 * oblique_values;
            if (x_axis_description != null)
                chart_h -= 20;
            if (legend_x == -1)
                legend_x = chart_x;
            if (legend_y == -1)
                legend_y = screen_h - legend_h - 10;
            frame.height = (int) chart_h;
            frame.width = (int) chart_w;
            frame.x = (int) chart_x;
            frame.y = (int) chart_y;
            if (frame.width % (5 * numBars + 1) != 0)
                frame.width -= (frame.width % (5 * numBars + 1));
            hor_step = (5 * (double) frame.width) / (5 * (double) numBars + 1);
            oblic = hor_step / (double) 5;
            if ((frame.height - oblic) % divisions_number != 0)
                frame.height -= (frame.height - oblic) % divisions_number;
            vert_step = ((double) frame.height - oblic) / (double) divisions_number;
        } else {
            if (chart_h == -1) {
                chart_h = screen_h - chart_y - 30 - 20 * oblique_values;
                if (x_axis_description != null)
                    chart_h -= 20;
            }
            if (legend_w == -1)
                legend_w = max_description + latura + 10;
            if (legend_h == -1)
                legend_h = 20 * numBars;
            if (chart_w == -1)
                chart_w = screen_w - chart_x - chart_x_init - legend_w;
            if (legend_x == -1)
                legend_x = chart_w + chart_x + 20;
            if (legend_y == -1)
                legend_y = (screen_h - legend_h) / 2;
            frame.height = (int) chart_h;
            frame.width = (int) chart_w;
            frame.x = (int) chart_x;
            frame.y = (int) chart_y;
            if (frame.width % (5 * numBars + 1) != 0)
                frame.width -= (frame.width % (5 * numBars + 1));
            hor_step = (5 * (double) frame.width) / (5 * (double) numBars + 1);
            oblic = hor_step / (double) 5;
            if ((frame.height - oblic) % divisions_number != 0)
                frame.height -= (frame.height - oblic) % divisions_number;
            vert_step = ((double) frame.height - oblic) / (double) divisions_number;
        }
    } else {
        max = 0;
        o = frame.height / 5;
        frame.width = (int) (screen_w - screen_w / 2 - o);
        frame.x = (int) (screen_w / 12);
        frame.y = (int) ((screen_h - frame.height) / 2);
        vert_step = frame.height;
        oblic = hor_step / 5;
        vert_step = (frame.height - oblic) / divisions_number;
    }
}
