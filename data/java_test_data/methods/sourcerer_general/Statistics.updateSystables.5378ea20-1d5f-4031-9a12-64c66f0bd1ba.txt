public static void updateSystables() throws IOException, RecordException {
    Comparable<Integer> nRows;
    Systables systables = new Systables();
    TableInputBuffer iBuffer = new TableInputBuffer(systables, systables.getFile(), systables.getNbRecords(), 0);
    TableOutputBuffer oBuffer = new TableOutputBuffer(systables, systables.getFile(), systables.getNbRecords(), 1);
    for (int i = 0; i < systables.getNbRecords(); i++) {
        Comparable[] row = iBuffer.read();
        String tableName = (String) row[0];
        Class c;
        try {
            c = Class.forName("edu.concordia.database.tables." + tableName);
            Object o = c.newInstance();
            Table t = (Table) o;
            // FIELD_tabname,
            // FIELD_tabid,
            row[1] = i;
            // FIELD_rowsize,
            row[2] = (Comparable) t.getLengthTotal();
            // FIELD_ncols,
            row[3] = (Comparable) t.getFieldCount();
            // FIELD_nindexes,
            row[4] = 0;
            // FIELD_nrows,
            row[5] = (Comparable) t.getNbRecords();
            // FIELD_npused
            row[6] = (Comparable) t.getPageCount();
            oBuffer.write(row);
        } catch (ClassNotFoundException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (InstantiationException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
    iBuffer.close();
    oBuffer.close();
}
