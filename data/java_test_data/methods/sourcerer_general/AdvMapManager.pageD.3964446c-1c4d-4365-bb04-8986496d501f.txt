protected void pageD() {
    mMapImage = Bitmap.createBitmap(Tile.sWidth * 2, Tile.sHeight * 2, BITMAP_CONFIG);
    Canvas canvas = new Canvas(mMapImage);
    int tileX = this.getViewX() / Tile.sWidth;
    int titleY = this.getViewY() / Tile.sHeight;
    int x = this.getViewX() - tileX * Tile.sWidth;
    int y = this.getViewY() - titleY * Tile.sHeight;
    int tileWidth = (tileX + 1) * Tile.sWidth - this.getViewX();
    int tileHeight = (titleY + 1) * Tile.sHeight - this.getViewY();
    // Upper left tile
    Bitmap bitmap = BitmapFactory.decodeFile(getTileName(0));
    bitmap = Bitmap.createBitmap(bitmap, x, y, tileWidth, tileHeight);
    canvas.drawBitmap(bitmap, x, y, null);
    // Upper right tile
    int widthRight = Tile.sWidth - tileWidth;
    bitmap = BitmapFactory.decodeFile(getTileName(1));
    bitmap = Bitmap.createBitmap(bitmap, 0, y, widthRight, tileHeight);
    canvas.drawBitmap(bitmap, x + tileWidth, y, null);
    // Lower left tile
    int heightLower = Tile.sHeight - tileHeight;
    bitmap = BitmapFactory.decodeFile(getTileName(2));
    bitmap = Bitmap.createBitmap(bitmap, x, 0, tileWidth, heightLower);
    canvas.drawBitmap(bitmap, x, y + tileHeight, null);
    // Lower right tile
    bitmap = BitmapFactory.decodeFile(getTileName(3));
    bitmap = Bitmap.createBitmap(bitmap, 0, 0, widthRight, heightLower);
    canvas.drawBitmap(bitmap, x + tileWidth, y + tileHeight, null);
}
