@Test
public void testMethodInvocationWithCallbackNoReturn() throws Exception {
    Mockery context = new Mockery();
    MockMagnum magnum = new MockMagnum("");
    TestInterface obj = magnum.connect(TestInterface.class);
    final CallbackAndErrorHandler mock = context.mock(CallbackAndErrorHandler.class);
    obj.foo("asdf", Boolean.TRUE, mock);
    CommandSet cs = magnum.getCommandSets().get(0);
    Command c = cs.get(0);
    ClientCommandPreprocessors preproc = new ClientCommandPreprocessors();
    InvocationHandler ch = new InvocationHandler();
    MagRequest r = new MagRequest();
    ClientContext ctx = new ClientContext(r);
    preproc.exec(ctx, cs);
    r.setCommandSet(cs);
    String json = (String) r.getData().get(MagRequest.COMMANDSET);
    cs = CommandSet.fromJson(json);
    c = cs.get(0);
    final TestInterface mockctx = context.mock(TestInterface.class);
    InvocationHandler sh = new InvocationHandler();
    MockServerContext sctx = new MockServerContext();
    sctx.setContextObject(mockctx);
    final HttpServletRequest req = context.mock(HttpServletRequest.class);
    context.checking(new Expectations() {

        {
            oneOf(mockctx).foo(with("asdf"), with(Boolean.TRUE), with(any(CallbackAndErrorHandler.class)));
        }
    });
    context.checking(new Expectations() {

        {
            oneOf(req).getServerName();
            will(returnValue("foo.com"));
            oneOf(req).getServerPort();
            will(returnValue(8888));
        }
    });
    sctx.setRequest(req);
    sh.exec(sctx, c);
    context.assertIsSatisfied();
}
