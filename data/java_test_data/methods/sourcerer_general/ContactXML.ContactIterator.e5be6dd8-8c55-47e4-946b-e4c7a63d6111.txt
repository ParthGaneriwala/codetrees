public void ContactIterator(PersonalContact currentContact, Element element) throws IOException {
    NodeList nodelist = element.getChildNodes();
    // System.out.println(element.getNodeName());
    for (int i = 0; i < nodelist.getLength(); i++) {
        Node node = nodelist.item(i);
        String str = node.getNodeName();
        if (str.equalsIgnoreCase("ContactName")) {
            // System.out.println(i);
            String value = node.getTextContent();
            currentContact.setContactName(value);
            System.out.println("ContactName--" + value);
        } else if (str.equalsIgnoreCase("ISN")) {
            String value = node.getTextContent();
            currentContact.setISN(Integer.parseInt(value));
            System.out.println("ISN----" + value);
        } else // ͷ��Ľ�����ͷ����ͨ��url�õ���
        if (str.equals("HeadImage")) {
            String value = node.getTextContent();
            // BufferedImage headBufferedImage=ImageIO.read(this.getClass().getResource(value));
            BufferedImage headBufferedImage = ImageIO.read(new URL(value));
            HeadImage currentImage = new HeadImage();
            Image tempImage = headBufferedImage.getScaledInstance(130, 115, Image.SCALE_DEFAULT);
            ImageIcon imageIcon = new ImageIcon(tempImage);
            currentImage.setMyImageIcon(imageIcon);
            currentContact.setHeadImage(currentImage);
            System.out.println(tempImage.toString());
            System.out.println("HeadImage" + currentImage.toString());
        } else if (str.equalsIgnoreCase("Telephone")) {
            String value = node.getTextContent();
            ArrayList<String> myphoneNumberList = currentContact.getPhoneNumberList();
            if (myphoneNumberList == null) {
                myphoneNumberList = new ArrayList<String>();
            }
            myphoneNumberList.add(value);
            currentContact.setPhoneNumberList(myphoneNumberList);
            for (int l = 0; l < myphoneNumberList.size(); l++) {
                System.out.println("Telephone" + l + myphoneNumberList.get(l));
            }
        } else if (str.equalsIgnoreCase("Email")) {
            String value = node.getTextContent();
            ArrayList<String> myEmailList = currentContact.getEmailAddresseList();
            if (myEmailList == null) {
                myEmailList = new ArrayList<String>();
            }
            myEmailList.add(value);
            currentContact.setEmailAddresseList(myEmailList);
            for (int l = 0; l < myEmailList.size(); l++) {
                System.out.println("Email" + l + ":" + myEmailList.get(l));
            }
        } else if (str.equalsIgnoreCase("Address")) {
            String value = node.getTextContent();
            ArrayList<String> myAddressList = currentContact.getContactAddressList();
            if (myAddressList == null) {
                myAddressList = new ArrayList<String>();
            }
            myAddressList.add(value);
            currentContact.setContactAddressList(myAddressList);
            for (int l = 0; l < myAddressList.size(); l++) {
                System.out.println("Address" + l + myAddressList.get(l));
            }
        } else if (str.equalsIgnoreCase("Office")) {
            String value = node.getTextContent();
            ArrayList<String> myOfficeList = currentContact.getWorkingDepartmentList();
            if (myOfficeList == null) {
                myOfficeList = new ArrayList<String>();
            }
            myOfficeList.add(value);
            currentContact.setWorkingDepartmentList(myOfficeList);
            for (int l = 0; l < myOfficeList.size(); l++) {
                System.out.println("Office" + l + myOfficeList.get(l));
            }
        } else if (str.equalsIgnoreCase("IMContact")) {
            String value = node.getTextContent();
            ArrayList<String> myimContactList = currentContact.getImContactInformationList();
            if (myimContactList == null) {
                myimContactList = new ArrayList<String>();
            }
            myimContactList.add(value);
            currentContact.setImContactInformationList(myimContactList);
            for (int l = 0; l < myimContactList.size(); l++) {
                System.out.println("IMContact" + l + myimContactList.get(l));
            }
        } else if (str.equalsIgnoreCase("Birthday")) {
            String value = node.getTextContent();
            currentContact.setContactBirthday(value);
            System.out.println("Birthday--" + value);
        } else if (str.equalsIgnoreCase("url")) {
            String value = node.getTextContent();
            ArrayList<String> myurlList = currentContact.getUrlList();
            if (myurlList == null) {
                myurlList = new ArrayList<String>();
            }
            myurlList.add(value);
            currentContact.setUrlList(myurlList);
            for (int l = 0; l < currentContact.getUrlList().size(); l++) {
                System.out.println("URL--" + l + currentContact.getUrlList().get(l));
            }
        } else if (str.equalsIgnoreCase("CommonLabel")) {
            String value = node.getTextContent();
            ArrayList<String> myCommonLabelList = currentContact.getCommonLabelList();
            if (myCommonLabelList == null) {
                myCommonLabelList = new ArrayList<String>();
            }
            myCommonLabelList.add(value);
            currentContact.setCommonLabelList(myCommonLabelList);
            for (int l = 0; l < currentContact.getCommonLabelList().size(); l++) {
                System.out.println("CommonLabel--" + l + currentContact.getCommonLabelList().get(l));
            }
        } else if (str.equalsIgnoreCase("Group")) {
            String value = node.getTextContent();
            ArrayList<String> myGroupList = currentContact.getGroupList();
            if (myGroupList == null) {
                myGroupList = new ArrayList<String>();
            }
            myGroupList.add(value);
            currentContact.setGroupList(myGroupList);
            for (int l = 0; l < currentContact.getGroupList().size(); l++) {
                System.out.println("CommonLabel--" + l + currentContact.getGroupList().get(l));
            }
        }
        // ��ϵ��ǩ����ش���
        if (node instanceof Element && node.getNodeName().equalsIgnoreCase("RelationLabel")) {
            ArrayList<RelationLabel> relationLabelList = currentContact.getRelationLabelList();
            RelationLabel relationLabel = new RelationLabel();
            RelationLabelIterator(relationLabel, (Element) node);
            relationLabelList.add(relationLabel);
            System.out.println("LabelName----" + relationLabel.getLabelName());
            currentContact.setRelationLabelList(relationLabelList);
            System.out.println("Size----" + currentContact.getRelationLabelList().size());
        }
        if (node instanceof Element && !node.getNodeName().equalsIgnoreCase("RelationLabel")) {
            ContactIterator(currentContact, (Element) node);
        }
    }
}
