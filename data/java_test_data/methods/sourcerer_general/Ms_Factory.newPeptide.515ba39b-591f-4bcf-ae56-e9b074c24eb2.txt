public static Peptide newPeptide(String str) {
    if (!Util.isSet(str))
        return null;
    Peptide peptide = new Peptide();
    // Get the name of the peptide chain
    int index = str.indexOf(":");
    if (index >= 0) {
        peptide.setName(str.substring(0, index));
        str = str.substring(index + 1);
    }
    // Get the starting residue number
    int _index = str.indexOf("(");
    index = str.indexOf(")");
    peptide.setNStart((index >= 0 && index > 0) ? Integer.parseInt(str.substring(_index + 1, index)) : 1);
    if (index > 0)
        str = str.substring(index + 1);
    else if (_index >= 0)
        str = str.substring(_index + 1);
    // all location and up_to reference are n_start based
    _index = 0;
    index = str.indexOf("[");
    while (index >= 0) {
        peptide.increBackbone(Ms_Util.validateSequence(str.substring(_index, index)));
        // String aa = peptide.getBackbone().substring(peptide.getLength() - 1).toLowerCase();
        peptide.setSequence(peptide.getSequence().substring(0, peptide.getLength() - 1) + peptide.getSequence().substring(peptide.getLength() - 1));
        _index = index + 1;
        index = str.indexOf("]", _index);
        String _code = str.substring(_index, index).trim();
        if (Util.isSet(_code)) {
            ModifierSet mods = peptide.addAddon(newModifierSet(str.substring(_index, index), peptide.getLength()));
            mods.setLocation(peptide.getLength() + peptide.getNStart() - 1);
        }
        _index = index + 1;
        index = str.indexOf("[", _index);
    }
    // get the last piece
    peptide.increBackbone(Ms_Util.validateSequence(str.substring(_index)));
    peptide.setInput(str);
    return peptide;
}
