@Override
protected void update() {
    FishBowl2D bowl = (FishBowl2D) getEngine();
    if (bowl.isPaused())
        return;
    P2D[] fish_pts = bowl.getFish();
    double bowlsize = bowl.getBowlSize() * 2;
    Graphics g = BuffImg.getGraphics();
    g.setColor(Color.BLACK);
    g.clearRect(0, 0, getWidth(), getHeight());
    for (int i = 0; i < fish_pts.length; i++) {
        int fishRadius = (int) (bowl.getFish(i).getRadius() / 2);
        FishColors[i] = cycleFishColor(bowl, i);
        g.setColor(FishColors[i]);
        double x = (((bowlsize / 2) + fish_pts[i].x) * getWidth()) / bowlsize;
        double y = (((bowlsize / 2) + fish_pts[i].y) * getHeight()) / bowlsize;
        g.fillOval((int) x, (int) y, fishRadius, fishRadius);
        P2D[] tail_pts = bowl.getFish(i).getTail();
        int p = bowl.getFish(i).getTailPos();
        for (int t = 0; t < tail_pts.length; t++) {
            p--;
            if (p < 0)
                p = tail_pts.length;
            double tx = (((bowlsize / 2) + tail_pts[t].x) * getWidth()) / bowlsize;
            double ty = (((bowlsize / 2) + tail_pts[t].y) * getHeight()) / bowlsize;
            int z = (int) (MiscUtil.mapValueToRange(p, 0, tail_pts.length, 1, fishRadius));
            double red = MiscUtil.mapValueToRange(t, 0, tail_pts.length, 0, 255);
            double green = MiscUtil.mapValueToRange(t, 0, tail_pts.length, FishColors[i].getGreen(), 255);
            int blue = FishColors[i].getBlue();
            g.setColor(new Color((int) red, (int) green, blue));
            g.fillOval((int) tx, (int) ty, fishRadius - z, fishRadius - z);
        }
    }
    if (SONIFY) {
        FishSonifyer.sonify(bowl);
    }
}
