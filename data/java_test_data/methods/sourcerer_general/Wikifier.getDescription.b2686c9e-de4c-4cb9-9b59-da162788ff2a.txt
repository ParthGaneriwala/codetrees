public Element getDescription() {
    Element description = wms.doc.createElement("Description");
    description.setAttribute("task", "wikify");
    description.appendChild(wms.createElement("Details", "<p>This service automatically detects the topics mentioned in the given document, and provides links to the appropriate Wikipedia articles. </p>" + "<p> It doesn't just use Wikipedia as a source of information to link to, but also as training data for how best to do it. In other words, it has been trained to make the same decisions as the people who edit Wikipedia. </p>" + "<p> It may not work very well if the document does not fit the model of what it has been trained on. Documents should not be too short, and should be dedicated to a particular topic.</p>"));
    Element paramSource = wms.doc.createElement("Parameter");
    paramSource.setAttribute("name", "source");
    paramSource.appendChild(wms.doc.createTextNode("The document to be wikified (either it's content or a web-accessible URL)"));
    description.appendChild(paramSource);
    Element paramSourceMode = wms.createElement("Parameter", "the type of the source document: <em>" + SOURCE_AUTODETECT + "</em> (detect automatically), <em>" + SOURCE_URL + "</em> (url), <em>" + SOURCE_HTML + "</em> (HTML markup), or <em>" + SOURCE_WIKI + "</em> (MediaWiki markup)");
    paramSourceMode.setAttribute("name", "sourceMode");
    paramSourceMode.setAttribute("optional", "true");
    paramSourceMode.setAttribute("default", "0");
    description.appendChild(paramSourceMode);
    Element paramWrap = wms.doc.createElement("Parameter");
    paramWrap.setAttribute("name", "wrapInXml");
    paramWrap.appendChild(wms.doc.createTextNode("Whether to wrap the result in descriptive xml, or simply return it directly"));
    paramWrap.setAttribute("optional", "true");
    paramWrap.setAttribute("default", "true");
    description.appendChild(paramWrap);
    Element paramMinProbability = wms.doc.createElement("Parameter");
    paramMinProbability.setAttribute("name", "minProbability");
    paramMinProbability.appendChild(wms.doc.createTextNode("The system calculates a probability for each topic of whether a Wikipedian would consider it interesting enough to link to. This parameter specifies the minimum probability a topic must have before it will be linked. "));
    paramMinProbability.setAttribute("optional", "true");
    paramMinProbability.setAttribute("default", String.valueOf(getDefaultMinProbability()));
    description.appendChild(paramMinProbability);
    Element paramRepeatMode = wms.createElement("Parameter", "Specifies whether repeat mentions of the same topic will be linked or ignored: <em>" + DocumentTagger.ALL + "</em> (all mentions are linked), <em>" + DocumentTagger.FIRST + "</em> (only first mention is linked), or <em>" + DocumentTagger.FIRST_IN_REGION + "</em> (only first mention in each region of the page is linked).");
    paramRepeatMode.setAttribute("name", "repeatMode");
    paramRepeatMode.setAttribute("optional", "true");
    paramRepeatMode.setAttribute("default", String.valueOf(getDefaultRepeatMode()));
    description.appendChild(paramRepeatMode);
    Element paramBannedTopics = wms.doc.createElement("Parameter");
    paramBannedTopics.setAttribute("name", "bannedTopics");
    paramBannedTopics.appendChild(wms.doc.createTextNode("A list of topics (titles or ids, separated by ';') that are not allowed to be linked to. "));
    paramBannedTopics.setAttribute("optional", "true");
    paramBannedTopics.setAttribute("default", "null");
    description.appendChild(paramBannedTopics);
    Element paramLinkColor = wms.doc.createElement("Parameter");
    paramLinkColor.setAttribute("name", "linkColor");
    paramLinkColor.appendChild(wms.doc.createTextNode("Specifies color of the added links. This can be specified in any format that would be recognized by css."));
    paramLinkColor.setAttribute("optional", "true");
    paramLinkColor.setAttribute("default", "null, - link color dictated by page style");
    description.appendChild(paramLinkColor);
    Element paramBaseColor = wms.doc.createElement("Parameter");
    paramBaseColor.setAttribute("name", "baseColor");
    paramBaseColor.appendChild(wms.doc.createTextNode("Allows link color to fade into a specified base color if their probability of interest is low. For this to work, both baseColor and and linkColor must be specified as rgb values"));
    paramBaseColor.setAttribute("optional", "true");
    paramBaseColor.setAttribute("default", "null, - the same linkColor is applied to all links, regardless of thier probability");
    description.appendChild(paramBaseColor);
    Element paramTooltips = wms.doc.createElement("Parameter");
    paramTooltips.setAttribute("name", "showTooltips");
    paramTooltips.appendChild(wms.doc.createTextNode("Specifies whether tooltips will be added to describe each link. This is only valid when processing urls, and javascript must be enabled for the tooltips to work."));
    paramTooltips.setAttribute("optional", "true");
    paramTooltips.setAttribute("default", String.valueOf(getDefaultShowTooltips()));
    description.appendChild(paramTooltips);
    return description;
}
