public boolean filterSubscription(Event ev, ContentSubscription sub) {
    if (sub == null)
        return true;
    boolean ret = false;
    // parsiamo sottoscrizione
    // System.out.println("parso sub");
    Vector pairFromSubscription = predicateParser(sub.getCriteria());
    Vector booleanFromSubscription = booleanParser(sub.getCriteria());
    // parsiamo evento.content
    // System.out.println("parso evento");
    Vector pairFromEvent = predicateParser(ev.getContent());
    // Vector booleanFromEvent=booleanParser(ev.getContent());
    int size = pairFromSubscription.size();
    int sizePairOfEvents = pairFromEvent.size();
    // boolean m = false;
    boolean[] boolRes;
    boolRes = new boolean[size];
    for (int i = 0; i < size; i++) {
        Predicate p1 = (Predicate) pairFromSubscription.get(i);
        boolRes[i] = false;
        for (int j = 0; j < sizePairOfEvents; j++) {
            Predicate p2 = (Predicate) pairFromEvent.get(j);
            if (p1.getCompare().toString().equals("==") && p1.getName().toString().equals(p2.getName().toString()) && p1.getCompare().toString().equals(p2.getCompare().toString()) && p1.getValue().toString().equals(p2.getValue().toString())) {
                // System.out.println("p1.name:" + p1.getName().toString() + " " + "p2.name:" + p2.getName().toString());
                // System.out.println("p1.compare:" + p1.getCompare().toString() + " " + "p2.compare:" + p2.getCompare().toString());
                // System.out.println("p1.value:" + p1.getValue().toString() + " " + "p2.value:" + p2.getValue().toString());
                boolRes[i] = true;
            // System.out.println("boolRes[" + i + "]: " + boolRes[i]);
            }
            if (p1.getCompare().toString().equals("<") && p1.getName().toString().equals(p2.getName().toString()) && (Integer.parseInt(p1.getValue().toString()) > Integer.parseInt(p2.getValue().toString()))) {
                // System.out.println("p1.name:" + p1.getName().toString() + " " + "p2.name:" + p2.getName().toString());
                // System.out.println("p1.compare:" + p1.getCompare().toString() + " " + "p2.compare:" + p2.getCompare().toString());
                // System.out.println("p1.value:" + p1.getValue().toString() + " " + "p2.value:" + p2.getValue().toString());
                boolRes[i] = true;
            // System.out.println("boolRes[" + i + "]: " + boolRes[i]);
            }
            if (p1.getCompare().toString().equals(">") && p1.getName().toString().equals(p2.getName().toString()) && (Integer.parseInt(p1.getValue().toString()) < Integer.parseInt(p2.getValue().toString()))) {
                // System.out.println("p1.name:" + p1.getName().toString() + " " + "p2.name:" + p2.getName().toString());
                // System.out.println("p1.compare:" + p1.getCompare().toString() + " " + "p2.compare:" + p2.getCompare().toString());
                // System.out.println("p1.value:" + p1.getValue().toString() + " " + "p2.value:" + p2.getValue().toString());
                boolRes[i] = true;
            // System.out.println("boolRes[" + i + "]: " + boolRes[i]);
            }
            if (p1.getCompare().toString().equals("<=") && p1.getName().toString().equals(p2.getName().toString()) && (Integer.parseInt(p1.getValue().toString()) >= Integer.parseInt(p2.getValue().toString()))) {
                // System.out.println("p1.name:" + p1.getName().toString() + " " + "p2.name:" + p2.getName().toString());
                // System.out.println("p1.compare:" + p1.getCompare().toString() + " " + "p2.compare:" + p2.getCompare().toString());
                // System.out.println("p1.value:" + p1.getValue().toString() + " " + "p2.value:" + p2.getValue().toString());
                boolRes[i] = true;
            // System.out.println("boolRes[" + i + "]: " + boolRes[i]);
            }
            if (p1.getCompare().toString().equals(">=") && p1.getName().toString().equals(p2.getName().toString()) && (Integer.parseInt(p1.getValue().toString()) <= Integer.parseInt(p2.getValue().toString()))) {
                // System.out.println("p1.name:" + p1.getName().toString() + " " + "p2.name:" + p2.getName().toString());
                // System.out.println("p1.compare:" + p1.getCompare().toString() + " " + "p2.compare:" + p2.getCompare().toString());
                // System.out.println("p1.value:" + p1.getValue().toString() + " " + "p2.value:" + p2.getValue().toString());
                boolRes[i] = true;
            // System.out.println("boolRes[" + i + "]: " + boolRes[i]);
            }
        }
    // boolRes[i] = m;
    // System.out.println("2: boolRes[" + i + "]: " + boolRes[i]);
    }
    if (pairFromSubscription.size() == 1) {
        ret = boolRes[0];
    } else {
        boolean f = true;
        for (int j = 0; j < size; j++) {
            if (j > 0) {
                int v = Integer.parseInt(booleanFromSubscription.get(j - 1).toString());
                if (v == 1) {
                    f = boolRes[j] && f;
                }
                if (v == 2) {
                    f = boolRes[j] || f;
                }
            } else {
                f = boolRes[j];
            }
        }
        ret = f;
    }
    return ret;
}
