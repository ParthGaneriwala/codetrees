public ActionForward putTemplateProductToCart(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    if (!isLoggedIn(request)) {
        return mapping.findForward(ForwardConstants.INDEX);
    }
    if (!this.isTokenValid(request)) {
        this.saveToken(request);
        request.setAttribute("type", "1");
        return mapping.findForward("GWC");
    // return mapping.getInputForward();
    } else {
        this.resetToken(request);
    }
    SessionContainer sessionContainer = getSessionContainer(request);
    DynaActionForm data = (DynaActionForm) form;
    // Get the id for the product to be added
    String ids = (String) data.get("ids");
    String photosPath = (String) data.get("photosPath");
    Integer productNo = (Integer) data.get("productNo");
    Integer count = (Integer) data.get("count");
    String selectedTemplate = (String) data.get("selectedTemplate");
    // Default value to add
    int quantity = 1;
    if (count != null) {
        quantity = count.intValue();
    }
    Product product;
    try {
        product = productService.findById(productNo);
        Item item = new Item(product, quantity, IConstants.ITEM_TYPE1, ids, photosPath, selectedTemplate);
        if (product.getCategory() != null && product.getCategory().getId() == 16) {
            // T恤
            String radio = request.getParameter("radio");
            String radio1 = request.getParameter("radio1");
            String radio2 = request.getParameter("radio2");
            item.setDescription("尺码：" + radio);
            if (radio1 != null && !"".equals(radio1)) {
                item.setDescription("男款尺码：" + radio1 + "，女款尺码：" + radio);
            }
            if (radio2 != null && !"".equals(radio2)) {
                item.setDescription("男款尺码：" + radio2 + "，女款尺码：" + radio1 + "，儿童尺码：" + radio);
            }
        }
        sessionContainer.getCart().getItems().add(item);
    } catch (Exception e) {
        System.out.println(e);
        e.printStackTrace();
    }
    request.setAttribute("type", "1");
    request.setAttribute("cartContent", cartContent(sessionContainer.getCart()));
    return mapping.findForward("GWC");
}
