public void attributeRemoved(HttpSessionBindingEvent event) {
    WebApplicationContext ctx = WebApplicationContextUtils.getRequiredWebApplicationContext(event.getSession().getServletContext());
    LoginService loginService = (LoginService) ctx.getBean("loginService");
    StringBuilder stringBuilder = new StringBuilder();
    if (log.isDebugEnabled()) {
        stringBuilder.append("thread: ").append(Thread.currentThread());
        stringBuilder.append(", ");
        stringBuilder.append("instance: ").append(this.hashCode());
        stringBuilder.append(", ");
        stringBuilder.append("name: ");
        stringBuilder.append(event.getName());
        stringBuilder.append(", ");
        stringBuilder.append("value: ");
        stringBuilder.append(event.getValue());
        stringBuilder.append(", ");
        stringBuilder.append("session id: ");
        stringBuilder.append(event.getSession().getId());
        stringBuilder.append(", ");
        stringBuilder.append("soruce: ");
        stringBuilder.append(event.getSource());
        log.debug(stringBuilder.toString());
    }
    if (event.getName().equals(Constants.SESSION_LOGIN_INFO_KEY)) {
        LoginDTO loginDTO = new LoginDTO();
        loginDTO.setSessionId(event.getSession().getId());
        try {
            loginService.logout(loginDTO);
        } catch (Exception e) {
            e.printStackTrace();
            MessageDTO messageDTO = MessageUtil.exceptionToMessageDTO(e);
            if (log.isErrorEnabled()) {
                log.error(messageDTO.getUserMessage(), e);
            }
        }
    }
}
