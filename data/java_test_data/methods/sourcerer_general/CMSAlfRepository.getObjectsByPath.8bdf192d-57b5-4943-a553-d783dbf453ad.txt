public List<ICMSDocument> getObjectsByPath(String ticket, String folderPath, String objectType) throws Exception {
    logger.debug("BEGIN - " + new Exception().getStackTrace()[0].getMethodName());
    List<ICMSDocument> resultList = new ArrayList<ICMSDocument>();
    // have to transform it to fit to technology
    if (objectType.equals("folder")) {
        objectType = Constants.TYPE_FOLDER;
    } else {
        objectType = Constants.createQNameString(CMSAlfHelper.NAMESPACE_CUSTOM_MODEL, objectType);
    }
    logger.debug(" objectType = " + objectType);
    Node folderNode = getWSNodeByPath(folderPath);
    if (folderNode != null) {
        Reference currNodeReference = folderNode.getReference();
        QueryResult nodeChildren = WebServiceFactory.getRepositoryService().queryChildren(currNodeReference);
        ResultSet nodeChildrenResults = nodeChildren.getResultSet();
        ResultSetRow[] rows = nodeChildrenResults.getRows();
        if (rows == null) {
            logger.debug("No query results found.");
        } else {
            Node myNode = null;
            CMSAlfDocument cmsDoc = null;
            for (int x = 0; x < rows.length; x++) {
                ResultSetRow row = rows[x];
                String strResultId = row.getNode().getId();
                String strResultType = row.getNode().getType();
                logger.debug(" strResultType = " + strResultType);
                // TODO: manage subtypes
                if ((objectType != null) & (strResultType.equals(objectType))) {
                    myNode = getWSNodeByUUID(strResultId);
                    cmsDoc = new CMSAlfDocument(myNode);
                    resultList.add(cmsDoc);
                }
            }
        }
    } else {
        logger.warn(" " + folderPath + " : cannot get node");
    }
    logger.debug("END   - " + new Exception().getStackTrace()[0].getMethodName());
    return resultList;
}
