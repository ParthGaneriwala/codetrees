public static void main(String[] args) throws IOException {
    CaptchaService captchaService = new CaptchaService();
    // BufferedImage image4 = ImageIO.read(new URL("http://www.megaupload.com/capgen.php?375b17d3f26737c7"));
    final BufferedImage lettersImages = ImageIO.read(new File("base/src/org/chiripa/base/captcha/letters/megauploadLetters.png"));
    BufferedImage captcha = ImageIO.read(new File("base/src/org/chiripa/base/captcha/test/newCaptcha.gif"));
    // BufferedImage lettersImages = ImageIO.read(new URL("http://wwwq23.megaupload.com/gencap.php?a35846871cb6de03.gif"));
    frame = new JFrame();
    frame.setLayout(new GridLayout(4, 4));
    // lettersImages = filter(lettersImages);
    int degrees = -18;
    // captcha = filter(captcha);
    final ColorSegmentator segmentator = new ColorSegmentator();
    segmentator.setComparator(new Comparator<Segment>() {

        public int compare(Segment o1, Segment o2) {
            return new Integer(o1.getX()).compareTo(o2.getX());
        }
    });
    SortedSet<Segment> sortedSet;
    final Map<Color, SortedSet<Segment>> map = segmentator.segment(lettersImages);
    sortedSet = map.get(Color.BLACK);
    captcha = filter(captcha);
    for (int i = 0; i < 3; i++) {
        BufferedImage bestLetter = null;
        int bestPosition = 0;
        double bestMisses = Integer.MAX_VALUE;
        int position = 0;
        Segment captchaSegment = getLetter(captcha);
        frame.add(new ImageViewer(captcha));
        BufferedImage captchaLetterImage = captcha.getSubimage(captchaSegment.getX(), captchaSegment.getY(), captchaSegment.getWidth(), captchaSegment.getHeight());
        for (Segment segment : sortedSet) {
            double misses = 0;
            BufferedImage letter = null;
            try {
                letter = ImageIO.read(new File("base/src/org/chiripa/base/captcha/letters/" + output_map[position] + ".gif"));
                letter = filter(letter);
            } catch (Exception e) {
            }
            if (letter == null) {
                letter = lettersImages.getSubimage(segment.getX(), segment.getY(), segment.getWidth() + 2, segment.getHeight());
                letter = scale(letter, letter.getWidth(), captchaLetterImage.getHeight());
            }
            for (int y2 = 0; y2 < letter.getHeight() && y2 < captchaLetterImage.getHeight(); y2++) {
                for (int x2 = 0; x2 < letter.getWidth(); x2++) {
                    if (x2 >= captchaLetterImage.getWidth()) {
                        misses += 1;
                        letter.setRGB(x2, y2, Color.YELLOW.getRGB());
                    } else if (new Color(captchaLetterImage.getRGB(x2, y2)).equals(Color.BLACK) && !new Color(letter.getRGB(x2, y2)).equals(Color.BLACK)) {
                        misses += 2;
                        letter.setRGB(x2, y2, Color.RED.getRGB());
                    } else if (!new Color(captchaLetterImage.getRGB(x2, y2)).equals(Color.BLACK) && new Color(letter.getRGB(x2, y2)).equals(Color.BLACK)) {
                        misses = misses + 1;
                        letter.setRGB(x2, y2, Color.GREEN.getRGB());
                    }
                }
            }
            if (bestMisses > misses) {
                bestPosition = position;
                bestMisses = misses;
                bestLetter = letter;
            }
            // frame.add(new ImageViewer(letter));
            // frame.add(new JLabel("[" + output_map[position] + "," + misses + "]"));
            position++;
        }
        frame.add(new ImageViewer(bestLetter));
        frame.add(new ImageViewer(captchaLetterImage));
        frame.add(new JLabel("[" + output_map[bestPosition] + "," + bestMisses + "]"));
        char c = output_map[bestPosition];
        System.out.println("c = " + c + "" + bestMisses);
        int width = bestLetter.getWidth();
        captcha = captcha.getSubimage(width, 0, captcha.getWidth() - width, captcha.getHeight());
        if (bestLetter != null) {
            if (bestMisses < 100) {
                File output = new File("base/src/org/chiripa/base/captcha/letters/" + output_map[bestPosition] + "2.gif");
                if (!output.exists()) {
                    ImageIO.write(captchaLetterImage, "gif", output);
                }
            } else {
                ImageIO.write(captchaLetterImage, "gif", new File("base/src/org/chiripa/base/captcha/letters/?.gif"));
            }
        }
    }
    frame.setSize(300, 900);
    frame.setVisible(true);
}
