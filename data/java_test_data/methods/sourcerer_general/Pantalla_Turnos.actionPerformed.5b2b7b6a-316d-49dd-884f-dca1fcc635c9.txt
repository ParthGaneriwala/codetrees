@Override
public void actionPerformed(ActionEvent e) {
    Object source = e.getSource();
    if (source == btnVolver) {
        parent.setEnabled(true);
        cleanScreen();
        dispose();
    } else if (source == checkPacienteNuevo) {
        if (checkPacienteNuevo.isSelected())
            cambiarEstadoVisibilidad(true);
        else
            cambiarEstadoVisibilidad(false);
    } else if (// ///////********** FALTA TERMINAR ALGUNA COSA PARECE *******////////////
    source == btnBuscar) {
        Vector<Paciente> pacientes;
        if (!txtDni.getText().isEmpty() && controller.isNumeric(txtDni.getText())) {
            Paciente paciente = controller.buscarPacientePorDni(Integer.parseInt(txtDni.getText()));
            pacientes = new Vector<Paciente>();
            pacientes.add(paciente);
        } else {
            pacientes = controller.buscarPacientePorNombreOApellido(txtNombre.getText(), txtApellido.getText());
        }
        if (pacientes.elementAt(0) != null) {
            fmrBuscarPaciente.setVisible(true);
            fmrBuscarPaciente.setTableModel(pacientes);
        } else {
            JOptionPane.showMessageDialog(null, "No se encontraron pacientes al realizar la busqueda.");
        }
    } else if (source == btnAsignarTurno) {
        fmrAsignarTurno.setVisible(true);
        cleanScreen();
    } else if (source == btnCancelarTurno) {
        Vector<Turno> turnosEncontrados;
        turnosEncontrados = controllerCancel.getTurnos();
        if (turnosEncontrados.size() != 0) {
            setEnabled(false);
            fmrCancelarTurno.setVisible(true);
            fmrCancelarTurno.setTableModel(turnosEncontrados);
            cleanScreen();
        } else {
            JOptionPane.showMessageDialog(null, "El paciente no tiene turnos asignados");
        }
    } else if (source == btnCrearPaciente) {
        boolean validar;
        setearDatosPacienteNuevo();
        if (controller.validarNombreYapellido(nombrePaciente, apellidoPaciente) && controller.validarDni(dniPaciente) && controller.validarTelefono(telPaciente)) {
            validar = controller.crearPaciente(dniPaciente, nombrePaciente, apellidoPaciente, telPaciente, obraSocialPaciente);
            if (validar) {
                parent.setEnabled(true);
                dispose();
            }
        }
        checkPacienteNuevo.setSelected(false);
        cambiarEstadoVisibilidad(false);
    } else if (source == comboOdontologo) {
        System.out.println("paso");
        controllerOdontologos.setOdontologoActual(comboOdontologo.getSelectedItem().toString());
    }
}
