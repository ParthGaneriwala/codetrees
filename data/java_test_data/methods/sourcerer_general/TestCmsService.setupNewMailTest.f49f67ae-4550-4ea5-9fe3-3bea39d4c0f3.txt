private void setupNewMailTest() throws Exception {
    configureMinimalGame();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    CrudRootServiceHelper<DbPage> pageCrud = cmsService.getPageCrudRootServiceHelper();
    DbPage dbPage = pageCrud.createDbChild();
    dbPage.setPredefinedType(CmsUtil.CmsPredefinedPage.HOME);
    dbPage.setName("Home");
    DbPage dbMessagePage = pageCrud.createDbChild();
    dbMessagePage.setPredefinedType(CmsUtil.CmsPredefinedPage.MESSAGE);
    dbMessagePage.setName("Message Page");
    // Mail List
    DbContentContainer dbContentContainer = new DbContentContainer();
    dbPage.setContentAndAccessWrites(dbContentContainer);
    dbContentContainer.init(userService);
    DbContentInvokerButton newMailButton = (DbContentInvokerButton) dbContentContainer.getContentCrud().createDbChild(DbContentInvokerButton.class);
    newMailButton.setName("New Mail");
    DbContentInvoker dbContentInvoker = new DbContentInvoker();
    newMailButton.setDbContentInvoker(dbContentInvoker);
    dbContentInvoker.setParent(newMailButton);
    dbContentInvoker.init(userService);
    dbContentInvoker.setSpringBeanName("messengerService");
    dbContentInvoker.setMethodName("sendMail");
    DbExpressionProperty to = dbContentInvoker.getValueCrud().createDbChild();
    to.setName("To");
    to.setExpression("toUser");
    DbExpressionProperty subject = dbContentInvoker.getValueCrud().createDbChild();
    subject.setName("subject");
    subject.setExpression("subject");
    DbExpressionProperty body = dbContentInvoker.getValueCrud().createDbChild();
    body.setName("Message");
    body.setEscapeMarkup(false);
    body.setExpression("body");
    pageCrud.updateDbChild(dbPage);
    pageCrud.updateDbChild(dbMessagePage);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Activate
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    cmsService.activateCms();
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
