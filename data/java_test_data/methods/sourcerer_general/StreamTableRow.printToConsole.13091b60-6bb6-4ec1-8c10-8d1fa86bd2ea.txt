public void printToConsole() {
    String row = "";
    switch(type) {
        case CLELConstants.MODULE_TABLE:
            row = printModuleTable();
            break;
        case CLELConstants.TYPEREF_TABLE:
            row = printTypeRefTable();
            break;
        case CLELConstants.TYPEDEF_TABLE:
            row = printTypeDefTable();
            break;
        case CLELConstants.FIELD_TABLE:
            row = printFieldTable();
            break;
        case CLELConstants.METHODDEF_TABLE:
            row = printMethodDefTable();
            break;
        case CLELConstants.PARAM_TABLE:
            row = printParamTable();
            break;
        case CLELConstants.INTERFACEIMPL_TABLE:
            row = printInterfaceImplTable();
            break;
        case CLELConstants.MEMBERREF_TABLE:
            row = printMemberRefTable();
            break;
        case CLELConstants.CONSTANT_TABLE:
            row = printConstantTable();
            break;
        case CLELConstants.CUSTOMATTRIBUTE_TABLE:
            row = printCustomAttributeTable();
            break;
        case CLELConstants.FIELDMARSHAL_TABLE:
            row = printFieldMarshalTable();
            break;
        case CLELConstants.DECLSECURITY_TABLE:
            row = printDeclSecurityTable();
            break;
        case CLELConstants.CLASSLAYOUT_TABLE:
            row = printClassLayoutTable();
            break;
        case CLELConstants.FIELDLAYOUT_TABLE:
            row = printFieldLayoutTable();
            break;
        case CLELConstants.STANDALONESIG_TABLE:
            row = printStandAloneSigTable();
            break;
        case CLELConstants.EVENTMAP_TABLE:
            row = printEventMapTable();
            break;
        case CLELConstants.EVENT_TABLE:
            row = printEventTable();
            break;
        case CLELConstants.PROPERTYMAP_TABLE:
            row = printPropertyMapTable();
            break;
        case CLELConstants.PROPERTY_TABLE:
            row = printPropertyTable();
            break;
        case CLELConstants.METHODSEMANTICS_TABLE:
            row = printMethodSemanticsTable();
            break;
        case CLELConstants.METHODIMPL_TABLE:
            row = printMethodImplTable();
            break;
        case CLELConstants.MODULEREF_TABLE:
            row = printModuleRefTable();
            break;
        case CLELConstants.TYPESPEC_TABLE:
            row = printTypeSpecTable();
            break;
        case CLELConstants.IMPLMAP_TABLE:
            row = printImplMapTable();
            break;
        case CLELConstants.FIELDRVA_TABLE:
            row = printFieldRVATable();
            break;
        case CLELConstants.ASSEMBLY_TABLE:
            row = printAssemblyTable();
            break;
        case CLELConstants.ASSEMBLYPROCESSOR_TABLE:
            row = printAssemblyProcessorTable();
            break;
        case CLELConstants.ASSEMBLYOS_TABLE:
            row = printAssemblyOSTable();
            break;
        case CLELConstants.ASSEMBLYREF_TABLE:
            row = printAssemblyRefTable();
            break;
        case CLELConstants.ASSEMBLYREFPROCESSOR_TABLE:
            row = printAssemblyRefProcessorTable();
            break;
        case CLELConstants.ASSEMBLYREFOS_TABLE:
            row = printAssemblyRefOSTable();
            break;
        case CLELConstants.FILE_TABLE:
            row = printFileTable();
            break;
        case CLELConstants.EXPORTEDTYPE_TABLE:
            row = printExportedTypeTable();
            break;
        case CLELConstants.MANIFESTRESOURCE_TABLE:
            row = printManifestResourceTable();
            break;
        case CLELConstants.NESTEDCLASS_TABLE:
            row = printNestedClassTable();
            break;
        case CLELConstants.TYPETYPAR_TABLE:
            row = printTypeTyParTable();
            break;
        case CLELConstants.METHODTYPAR_TABLE:
            row = printMethodTyParTable();
            break;
    }
    System.out.println(row);
}
