public String runFlow(ChainFlow chainFlow, ChainContext chainContext) throws FlowException {
    FileWriter theFile = null;
    PrintWriter out = null;
    try {
        String sqlstr = "";
        log.info("Start to run the write log flow [" + chainFlow.getFlowName() + "]");
        chainContext.addSimuList("<font color=blue><b> Start to run the write log flow [" + chainFlow.getFlowCode() + "] </b></font>");
        if ("Y".equals(chainFlow.getSkipYn())) {
            log.info("Write log flow [" + chainFlow.getFlowName() + "]: skipFlag=true");
            chainContext.addSimuList("Write log flow [" + chainFlow.getFlowName() + "]: skipFlag=true<br>=================");
            return "0";
        }
        makeDir();
        List scripts = chainFlow.getScripts();
        if (scripts.size() < 1) {
            log.info("Write log flow [" + chainFlow.getFlowName() + "]: there is no statement");
            chainContext.addSimuList("Write log flow [" + chainFlow.getFlowName() + "]: there is no statement<br>=================");
            return "0";
        }
        String filename = chainFlow.getAttr1();
        log.info("Filename: " + filename);
        chainContext.addSimuList("Filename: " + filename);
        theFile = new FileWriter(this.getPath() + filename, true);
        out = new PrintWriter(theFile);
        for (int i = 0; i < scripts.size(); i++) {
            sqlstr = scripts.get(i).toString();
            Iterator iter = chainContext.getDataMapIterator();
            while (iter.hasNext()) {
                DataMapping dataMapping = (DataMapping) iter.next();
                sqlstr = StringUtils.replace(sqlstr, dataMapping.getFieldName(), dataMapping.getFieldMapping());
            }
            sqlstr = FormulaFactory.getInstance().run(sqlstr);
            out.print(sqlstr + "\r\n");
            chainContext.addSimuList(sqlstr);
        }
        out.close();
        theFile.close();
        log.info("Write Log Flow:: OK");
        chainContext.addSimuList("Write Log Flow:: OK<br>--------------------------------");
        return "0";
    } catch (Exception e) {
        try {
            if (out != null) {
                out.close();
            }
            if (theFile != null) {
                theFile.close();
            }
        } catch (Exception ex) {
        }
        log.error("Write Log Flow :" + e.getMessage());
        try {
            onError(chainFlow, chainContext, 98);
        } catch (Exception ex) {
        }
        return "98";
    }
}
