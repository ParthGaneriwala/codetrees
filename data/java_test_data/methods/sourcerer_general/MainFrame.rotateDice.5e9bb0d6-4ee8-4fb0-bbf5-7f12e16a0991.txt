// GEN-LAST:event_goButtonActionPerformed
private void rotateDice(Image baseImage, String outdir) {
    try {
        String props = outdir + File.separator + "dyna-props.txt";
        PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(props)));
        int tilew = Integer.parseInt(frame.widthTextField.getText());
        int tileh = Integer.parseInt(frame.heightTextField.getText());
        int step = Integer.parseInt(((String) rotateComboBox.getSelectedItem()));
        out.println("dyna.step " + step);
        int totalTiles = 0;
        progressBar.setValue(0);
        progressBar.setMinimum(0);
        progressBar.setMaximum(100);
        progressBar.setStringPainted(true);
        int progress = 0;
        int max = 360 / step;
        for (int angle = 0; angle < 360; angle += step) {
            thetaTextField.setText(angle + "");
            RotateResult result = Helper.rotate(baseImage, angle);
            String folder = outdir + File.separator + angle;
            File dir = new File(folder);
            // dir.mkdir();
            // 
            // dice(result.getImg(), dir.getAbsolutePath(), false);
            Thread.sleep(100);
            // Write out the map properties
            int basew = result.getImg().getWidth(null);
            int baseh = result.getImg().getHeight(null);
            int cols = (int) ((double) basew / (double) tilew + 0.5);
            int rows = (int) ((double) baseh / (double) tileh + 0.5);
            out.println("dyna.dim." + angle + " " + cols + " " + rows + " " + basew + " " + baseh);
            out.print("dyna.affine." + angle + " ");
            double[] params = result.getMatrix();
            for (int i = 0; i < result.getMatrix().length; i++) {
                if (i != 0) {
                    out.print(" ");
                }
                out.print(params[i]);
            }
            out.print("\n");
            out.flush();
            totalTiles += (cols * rows);
            tilesTextField.setText("" + totalTiles);
            progress++;
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}
