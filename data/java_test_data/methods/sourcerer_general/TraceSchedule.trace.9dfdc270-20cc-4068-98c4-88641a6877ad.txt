void trace(AssemStmList l) {
    for (; ; ) {
        AssemLabel lab = (AssemLabel) l.getStm();
        table.remove(lab.getLabel());
        AssemStmList last = getLast(l);
        AssemStm s = last.getStmList().getStm();
        if (s instanceof AssemJump) {
            AssemJump j = (AssemJump) s;
            AssemStmList target = (AssemStmList) table.get(j.getLabel());
            if (target != null) {
                last.setStmList(target);
                l = target;
            } else {
                last.getStmList().setStmList(getNext());
                return;
            }
        } else if (s instanceof AssemCJump) {
            AssemCJump j = (AssemCJump) s;
            AssemStmList t = (AssemStmList) table.get(j.getIfTrueLabel());
            AssemStmList f = (AssemStmList) table.get(j.getIfFalseLabel());
            if (f != null) {
                last.getStmList().setStmList(f);
                l = f;
            } else if (t != null) {
                last.getStmList().setHead(new AssemCJump(AssemCJump.notRel(j.relop), j.getLeft(), j.getRight(), j.getIfFalseLabel(), j.getIfFalseLabel()));
                last.getStmList().setStmList(t);
                l = t;
            } else {
                Label ff = new Label();
                last.getStmList().setHead(new AssemCJump(j.relop, j.getLeft(), j.getRight(), j.getIfTrueLabel(), ff));
                last.getStmList().setStmList(new AssemStmList(new AssemLabel(ff), new AssemStmList(new AssemJump(new AssemName(j.getIfFalseLabel())), getNext())));
                return;
            }
        } else
            throw new Error("Bad basic block in TraceSchedule");
    }
}
