public void init() {
    // autoScroll = true;
    String scrollValue = getMacroDynamicProperty(AUTO_SCROLL);
    if ("false".equals(scrollValue)) {
        autoScroll = false;
    }
    String timeStampValue = getMacroDynamicProperty(TIME_STAMP);
    if ("false".equals(timeStampValue)) {
        timeStampVis = false;
    }
    String outStreamColor = getMacroDynamicProperty(STANDARD_OUT_COLOR);
    if (outStreamColor == null) {
        outStreamColor = "black";
    }
    String errStreamColor = getMacroDynamicProperty(STANDARD_ERR_COLOR);
    if (errStreamColor == null) {
        errStreamColor = "red";
    }
    String logStreamColor = getMacroDynamicProperty(STANDARD_LOG_COLOR);
    if (logStreamColor == null) {
        logStreamColor = "green";
    }
    boolean outVisible = true;
    boolean errVisible = true;
    boolean logVisible = false;
    boolean histVisible = false;
    String outVisibleValue = getMacroDynamicProperty(OUT_VISIBLE);
    if ("false".equals(outVisibleValue)) {
        outVisible = false;
    }
    String errVisibleValue = getMacroDynamicProperty(ERR_VISIBLE);
    if ("false".equals(errVisibleValue)) {
        errVisible = false;
    }
    String logVisibleValue = getMacroDynamicProperty(LOG_VISIBLE);
    if ("true".equals(logVisibleValue)) {
        logVisible = true;
    }
    String distributedViewValue = getMacroDynamicProperty(HISTORY_VISIBLE);
    if ("true".equals(distributedViewValue)) {
        histVisible = true;
    }
    // timeStampVis = false;
    lineChildren = new LinkedList<StreamLine>();
    globalFilter = new GlobalStreamFilter();
    globalFilter.setDistributedVisibility(histVisible);
    streamFormatters = new HashMap<String, StreamFormatter>();
    vmConsole = new Console(VM.currentVM().getStdOut(), VM.currentVM().getError());
    streamFormatters.put(vmConsole.getSystemOutStream().getStreamID(), new StreamFormatter(outStreamColor));
    streamFormatters.put(vmConsole.getSystemErrorStream().getStreamID(), new StreamFormatter(errStreamColor));
    streamFormatters.put(vmConsole.getSystemLogStream().getStreamID(), new StreamFormatter(logStreamColor));
    streamFormatters.get(vmConsole.getSystemLogStream().getStreamID()).setVisibility(logVisible);
    streamFormatters.get(vmConsole.getSystemErrorStream().getStreamID()).setVisibility(errVisible);
    streamFormatters.get(vmConsole.getSystemOutStream().getStreamID()).setVisibility(outVisible);
    Executions.getCurrent().getDesktop().enableServerPush(true);
    CometEvent listener = new ConsoleLinesListener(this, vmConsole);
    Executions.getCurrent().getDesktop().setAttribute(COMET_THREAD, listener);
    CometExecutor.addListener(listener);
    Events.postEvent("onUpdate", getFellow("visToolbar"), vmConsole);
}
