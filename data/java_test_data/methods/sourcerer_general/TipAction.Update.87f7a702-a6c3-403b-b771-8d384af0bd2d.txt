// Update Tip
public ActionForward Update(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    String username = (String) request.getSession().getAttribute("username");
    if (username != null) {
        DynaValidatorForm tipForm = (DynaValidatorForm) form;
        String postID = tipForm.getString("postID");
        String tipID = tipForm.getString("tipID");
        String title = tipForm.getString("title");
        boolean free = (Boolean) tipForm.get("free");
        String content = tipForm.getString("content");
        String uploadDate = tipForm.getString("uploadDate");
        String postType = tipForm.getString("postType");
        // user profile object
        UserProfileDTO user = new UserProfileDTO();
        user.setUsername(username);
        // Post object
        PostDTO postDTO = new PostDTO();
        postDTO.setPostID(postID);
        postDTO.setPostTitle(title);
        postDTO.setFree(free);
        postDTO.setPostType(postType);
        postDTO.setUploadDate(Util.getYMDandTime(uploadDate));
        postDTO.setUserProfile(user);
        // Tip object
        TipDTO tipDTO = new TipDTO();
        tipDTO.setTipID(tipID);
        tipDTO.setPost(postDTO);
        tipDTO.setContent(content);
        // execute
        TipDAO tipDAO = new TipDAO();
        if (tipDAO.updateTip(postDTO, tipDTO)) {
            Collection list3Tips = tipDAO.readLimitByFree(true);
            request.getSession().setAttribute("list3Tips", list3Tips);
            request.setAttribute("message", "Update Tip Successfuly!");
            return mapping.findForward(SUCCESS);
        } else {
            request.setAttribute("message", "Update Tip error!");
            return mapping.findForward(ERROR);
        }
    } else {
        request.setAttribute("message", "Please Login!");
        return mapping.findForward(LOGIN);
    }
}
