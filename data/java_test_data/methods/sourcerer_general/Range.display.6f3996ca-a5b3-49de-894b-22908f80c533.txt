public void display(PApplet theApplet, Controller theController) {
    theApplet.fill(color.getBackground());
    theApplet.noStroke();
    theApplet.rect(0, 0, width, height);
    // if(isInside) {
    theApplet.fill(color.getForeground());
    if (isShowTickMarks) {
        theApplet.rect(minHandle + handleSize / 2, 0, maxHandle - minHandle, height);
        theApplet.fill((isMinHandle) ? color.getActive() : color.getForeground());
        theApplet.triangle(minHandle, 0, minHandle + handleSize, 0, minHandle + handleSize / 2, height);
        theApplet.fill((isMaxHandle) ? color.getActive() : color.getForeground());
        theApplet.triangle(maxHandle, 0, maxHandle + handleSize, 0, maxHandle + handleSize / 2, height);
    } else {
        theApplet.rect(minHandle, 0, maxHandle - minHandle, height);
        theApplet.fill((isMinHandle) ? color.getActive() : color.getForeground());
        theApplet.rect(minHandle, 0, handleSize, height);
        theApplet.fill((isMaxHandle) ? color.getActive() : color.getForeground());
        theApplet.rect(maxHandle, 0, handleSize, height);
    }
    if (isLabelVisible) {
        // if (_myDirection == HORIZONTAL) {
        _myCaptionLabel.draw(theApplet, width + 3, height / 2 - 3);
        _myValueLabel.draw(theApplet, 3, height / 2 - 3);
        _myHighValueLabel.draw(theApplet, width - _myHighValueLabel.getWidth(), height / 2 - 3);
    } else {
        _myCaptionLabel.draw(theApplet, 0, height + 3);
        _myValueLabel.draw(theApplet, width + 4, -(int) _myValuePosition + height - 8);
    }
    if (isShowTickMarks) {
        theApplet.pushStyle();
        theApplet.pushMatrix();
        theApplet.translate((_mySliderMode == FIX) ? 0 : 5, getHeight());
        float x = (getWidth() - ((_mySliderMode == FIX) ? 0 : 10)) / (_myTickMarks.size() - 1);
        for (TickMark tm : _myTickMarks) {
            tm.draw(theApplet);
            theApplet.translate(x, 0);
        }
        theApplet.popMatrix();
        theApplet.popStyle();
    }
}
