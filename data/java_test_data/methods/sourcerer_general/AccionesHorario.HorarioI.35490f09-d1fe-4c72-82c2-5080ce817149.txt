public ActionForward HorarioI(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    // Salidas
    final String SALIDA_0 = "horario";
    String salida = SALIDA_0;
    Session s = HibernateUtil.getSessionFactory().getCurrentSession();
    Transaction tr = s.beginTransaction();
    try {
        String id = request.getParameter("idHorario");
        Long idHorario = (id == null) ? (Long) request.getSession().getAttribute("idHorario") : new Long(id);
        HttpSession sess = request.getSession();
        FHorario fFHorario = (FHorario) sess.getAttribute("FHorario");
        if (fFHorario == null) {
            fFHorario = new FHorario();
            sess.setAttribute("FHorario", fFHorario);
        } else {
            fFHorario.reset(mapping, request);
        }
        Horario horario = (Horario) s.load(Horario.class, idHorario);
        fFHorario.setIdHorario(horario.getIdHorario());
        fFHorario.setOferta(horario.getOferta().getIdOferta());
        fFHorario.setDia(horario.getDia());
        fFHorario.setHora(horario.getHora());
        // Feed for combo listOferta.
        {
            java.util.List<ve.usb.cohesion.runtime.Pair> list = (java.util.List<ve.usb.cohesion.runtime.Pair>) s.createQuery("select new ve.usb.cohesion.runtime.Pair(periodo.nombre, idOferta) " + "from Oferta").list();
            list.add(0, new ve.usb.cohesion.runtime.Pair("Ninguna", 0));
            fFHorario.setListOferta(list);
        }
        request.getSession().setAttribute("idOferta", fFHorario.getOferta());
        request.getSession().setAttribute("idHorario", idHorario);
        tr.commit();
    } catch (Exception ex) {
        tr.rollback();
        throw ex;
    }
    return mapping.findForward(salida);
}
