private void addSplits(ArrayList<S3Item> fileList, SimpleQueue queue, int numSplits) {
    StringBuilder sb = new StringBuilder();
    int mapNum = 0;
    long totalSize = 0;
    for (S3Item item : fileList) {
        totalSize += item.getSize();
    }
    long splitSize = totalSize / numSplits + 1;
    logger.info("Total input file size: " + totalSize + ". Each split size: " + splitSize);
    long currentSize = 0;
    for (S3Item item : fileList) {
        long filePos = 0;
        while (filePos < item.getSize()) {
            long len = Math.min(item.getSize() - filePos, splitSize - currentSize);
            if (sb.length() > 0) {
                sb.append(",");
            }
            sb.append(item.getPath());
            sb.append(",");
            sb.append(filePos);
            sb.append(",");
            sb.append(len);
            filePos += len;
            currentSize += len;
            if (currentSize == splitSize) {
                // prepend mapNum to uniquely identify each message, mapNum is the key, : is the separator
                queue.push(mapNum + Global.separator + sb.toString());
                mapNum++;
                currentSize = 0;
                sb = new StringBuilder();
            }
        }
    }
    if (sb.length() > 0) {
        // prepend mapNum to uniquely identify each message
        queue.push(mapNum + Global.separator + sb.toString());
        mapNum++;
    }
}
