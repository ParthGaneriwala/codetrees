private ExpTreenode simplifyZeroOne(ExpTreenode tempnode) {
    // Simple things: 1*?, ?*1, 0*?, ?*0, 0+?, ?+0, 0-?, ?-0, ?^0, ?^1, 1^?
    if ((tempnode.left != null) && (tempnode.right != null)) {
        if (tempnode.op_str.equals("*")) {
            if (tempnode.left.op_str.equals("#")) {
                if (tempnode.left.num.isZero()) {
                    tempnode = new ExpTreenode(ComplexNumber.makeZero());
                    simplified = true;
                } else if (tempnode.left.num.isOne()) {
                    tempnode = tempnode.right;
                    simplified = true;
                }
            } else if (tempnode.right.op_str.equals("#")) {
                if (tempnode.right.num.isZero()) {
                    tempnode = new ExpTreenode(ComplexNumber.makeZero());
                    simplified = true;
                } else if (tempnode.right.num.isOne()) {
                    tempnode = tempnode.left;
                    simplified = true;
                }
            }
        } else if (tempnode.op_str.equals("+")) {
            if (tempnode.left.op_str.equals("#")) {
                if (tempnode.left.num.isZero()) {
                    tempnode = tempnode.right;
                    simplified = true;
                }
            } else if (tempnode.right.op_str.equals("#")) {
                if (tempnode.right.num.isZero()) {
                    tempnode = tempnode.left;
                    simplified = true;
                }
            }
        } else if (tempnode.op_str.equals("-")) {
            if (tempnode.left.op_str.equals("#")) {
                if (tempnode.left.num.isZero()) {
                    tempnode = new ExpTreenode("-", null, null, tempnode.right);
                    simplified = true;
                }
            } else if (tempnode.right.op_str.equals("#")) {
                if (tempnode.right.num.isZero()) {
                    tempnode = tempnode.left;
                    simplified = true;
                }
            }
        } else if (tempnode.op_str.equals("^")) {
            if (tempnode.right.op_str.equals("#")) {
                if (tempnode.right.num.isZero()) {
                    tempnode = new ExpTreenode("#", ComplexNumber.makeOne(), null, null);
                    simplified = true;
                } else if (tempnode.right.num.isOne()) {
                    tempnode = tempnode.left;
                    simplified = true;
                }
            } else if (tempnode.left.op_str.equals("#")) {
                if (tempnode.left.num.isOne()) {
                    tempnode = new ExpTreenode("#", ComplexNumber.makeOne(), null, null);
                    simplified = true;
                }
            }
        }
    }
    return tempnode;
}
