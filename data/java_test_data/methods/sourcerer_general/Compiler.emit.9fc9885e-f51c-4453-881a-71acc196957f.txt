public void emit(C context, FnExpr fn, GeneratorAdapter gen) {
    for (int i = 0; i < bindingInits.count(); i++) {
        BindingInit bi = (BindingInit) bindingInits.nth(i);
        gen.visitInsn(Opcodes.ACONST_NULL);
        gen.visitVarInsn(OBJECT_TYPE.getOpcode(Opcodes.ISTORE), bi.binding.idx);
    }
    IPersistentSet lbset = PersistentHashSet.EMPTY;
    for (int i = 0; i < bindingInits.count(); i++) {
        BindingInit bi = (BindingInit) bindingInits.nth(i);
        lbset = (IPersistentSet) lbset.cons(bi.binding);
        bi.init.emit(C.EXPRESSION, fn, gen);
        gen.visitVarInsn(OBJECT_TYPE.getOpcode(Opcodes.ISTORE), bi.binding.idx);
    }
    for (int i = 0; i < bindingInits.count(); i++) {
        BindingInit bi = (BindingInit) bindingInits.nth(i);
        FnExpr fe = (FnExpr) bi.init;
        gen.visitVarInsn(OBJECT_TYPE.getOpcode(Opcodes.ILOAD), bi.binding.idx);
        fe.emitLetFnInits(gen, fn, lbset);
    }
    Label loopLabel = gen.mark();
    body.emit(context, fn, gen);
    Label end = gen.mark();
    // gen.visitLocalVariable("this", "Ljava/lang/Object;", null, loopLabel, end, 0);
    for (ISeq bis = bindingInits.seq(); bis != null; bis = bis.next()) {
        BindingInit bi = (BindingInit) bis.first();
        String lname = bi.binding.name;
        if (lname.endsWith("__auto__"))
            lname += RT.nextID();
        Class primc = maybePrimitiveType(bi.init);
        if (primc != null)
            gen.visitLocalVariable(lname, Type.getDescriptor(primc), null, loopLabel, end, bi.binding.idx);
        else
            gen.visitLocalVariable(lname, "Ljava/lang/Object;", null, loopLabel, end, bi.binding.idx);
    }
}
