public void actionPerformed(ActionEvent e) {
    if (e.getSource() == b_browse) {
        jc.setCurrentDirectory(new File("./ressource"));
        int returnVal = jc.showOpenDialog(Fenetre.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            SolAffiche = false;
            fp = new Fenetre_progression();
            new Thread(new Runnable() {

                public void run() {
                    try {
                        Probleme prb;
                        prb = Gestion_fichiers.lire(jc.getSelectedFile());
                        sol = new Solution(prb, nbEssaiTranche, nbEssaiBande);
                        fp.fp.dispose();
                        Affichage2D.tracer_conteneur(sol.cont, 0);
                        SolAffiche = true;
                        Recalculer.setEnabled(true);
                        prb = null;
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                    ;
                }
            }).start();
        }
    } else if (e.getSource() == b_load_sol) {
        jc.setCurrentDirectory(new File("./ressource/sol"));
        int returnVal = jc.showOpenDialog(Fenetre.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                Recalculer.setEnabled(false);
                SolAffiche = false;
                sol = new Solution(Gestion_fichiers.lire_sol(jc.getSelectedFile()));
                Affichage2D.tracer_conteneur(sol.cont, 0);
                SolAffiche = true;
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            ;
        }
    } else if (e.getSource() == Recalculer) {
        SolAffiche = false;
        fp = new Fenetre_progression();
        new Thread(new Runnable() {

            public void run() {
                try {
                    Probleme prb;
                    prb = Gestion_fichiers.lire(jc.getSelectedFile());
                    sol = new Solution(prb, nbEssaiTranche, nbEssaiBande);
                    fp.fp.dispose();
                    Affichage2D.tracer_conteneur(sol.cont, 0);
                    SolAffiche = true;
                    Recalculer.setEnabled(true);
                    prb = null;
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                ;
            }
        }).start();
    } else if (e.getSource() == b_save_sol) {
        jc.setCurrentDirectory(new File("./ressource/sol"));
        int returnVal = jc.showSaveDialog(Fenetre.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                divers.Gestion_fichiers.EcrireSolution(sol, jc.getSelectedFile());
                this.print("Sauvegarde terminee");
            } catch (Exception ex) {
                ex.printStackTrace();
            }
            ;
        }
    } else if (e.getSource() == b_quitter) {
        System.exit(0);
    } else if (e.getSource() == Bmoins) {
        if (nbEssaiBande > 1)
            nbEssaiBande--;
        textEssaiBande.setText("" + nbEssaiBande);
    } else if (e.getSource() == Bplus) {
        nbEssaiBande++;
        textEssaiBande.setText("" + nbEssaiBande);
    } else if (e.getSource() == Tmoins) {
        if (nbEssaiTranche > 1)
            nbEssaiTranche--;
        textEssaiTranche.setText("" + nbEssaiTranche);
    } else if (e.getSource() == Tplus) {
        nbEssaiTranche++;
        textEssaiTranche.setText("" + nbEssaiTranche);
    } else
        System.out.println(e.getSource());
}
