public static void main(String[] args) throws IOException {
    Utilitario util = new Utilitario();
    String so = util.getSO();
    // SELECIONA ARQUIVOS PARA SEREM PROCESSADOS
    JFileChooser arqSel = new JFileChooser(System.getProperties().getProperty("user.dir"));
    arqSel.setFileSelectionMode(JFileChooser.FILES_ONLY);
    arqSel.setMultiSelectionEnabled(true);
    arqSel.setDialogTitle("Selecione os arquivos que contém as seqüências de nucleotídeos (*.seq)");
    arqSel.addChoosableFileFilter(new FiltroSequencia());
    int result = arqSel.showOpenDialog(arqSel);
    // caso o usuario clique em 'cancel'
    if (result == JFileChooser.CANCEL_OPTION)
        System.exit(1);
    // recebe o arquivo selecionado
    File[] arquivos = arqSel.getSelectedFiles();
    // SELECIONA O DIRETORIO DE DESTINO
    JFileChooser destSel = new JFileChooser(System.getProperties().getProperty("user.dir"));
    destSel.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    destSel.setDialogTitle("Selecione o diretório de destino dos arquivos de freqüência");
    int resultDir = destSel.showOpenDialog(destSel);
    // caso o usuario clique em 'cancel'
    if (resultDir == JFileChooser.CANCEL_OPTION)
        System.exit(1);
    // recebe o arquivo selecionado
    File diretorio = destSel.getSelectedFile();
    // COMECA A CONTAR O TEMPO APOS SELECAO DO ARQUIVO E DIRETORIO DESTINO
    long initialTime = System.currentTimeMillis();
    String arquivoOrigem, arquivoDestino, arqOrigemSemExtensao, comando;
    // PROCESSA TODOS OS ARQUIVOS SELECIONADOS
    for (int i = 0; i < arquivos.length; i++) {
        arquivoOrigem = arquivos[i].getPath();
        int idFim = arquivos[i].getName().indexOf(".");
        arqOrigemSemExtensao = arquivos[i].getName().substring(0, idFim);
        if (so.equals("windows"))
            arquivoDestino = diretorio.getPath() + "\\" + arqOrigemSemExtensao + ".frq";
        else
            arquivoDestino = diretorio.getPath() + "/" + arqOrigemSemExtensao + ".frq";
        // executa count.pl que contabiliza as frequencias de cada bigram
        // count.pl faz parte do NSP (Ngram Statistics Package) http://www.d.umn.edu/~tpederse/nsp.html
        // linux
        comando = "perl :/media/files/susan/uel/tcc_estagio/dev/mlp/trunk/codificacaojava/src/codificacaojava/count.pl " + arquivoDestino + " " + arquivoOrigem;
        // comando = "perl C:\\count.pl " + arquivoDestino + " " + arquivoOrigem; // windows
        Runtime.getRuntime().exec(comando);
    }
    float totalTime = ((float) (System.currentTimeMillis() - initialTime)) / 1000;
    System.out.println(totalTime + " segundos");
}
