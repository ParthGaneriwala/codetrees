@SuppressWarnings("unchecked")
public Map<String, String[]> getParameters() throws SunlightException {
    Map<String, String[]> params = new HashMap<String, String[]>();
    for (Field field : LegislatorQuery.class.getDeclaredFields()) {
        LegislatorParam param = field.getAnnotation(LegislatorParam.class);
        if (param != null) {
            String paramName = param.value();
            Object value = null;
            try {
                value = field.get(this);
            } catch (IllegalArgumentException e) {
                throw new SunlightException(e);
            } catch (IllegalAccessException e) {
                throw new SunlightException(e);
            }
            if (value instanceof List) {
                List<?> values = (List<?>) value;
                if (!values.isEmpty()) {
                    if (values.get(0) instanceof String) {
                        params.put(paramName, values.toArray(ArrayUtils.EMPTY_STRING_ARRAY));
                    } else if (values.get(0) instanceof Title) {
                        List<String> stringValues = new ArrayList<String>(values.size());
                        for (Title title : ((List<Title>) values)) {
                            stringValues.add(title.getAbbreviation());
                        }
                        params.put(paramName, stringValues.toArray(ArrayUtils.EMPTY_STRING_ARRAY));
                    } else if (values.get(0) instanceof Gender) {
                        List<String> stringValues = new ArrayList<String>(values.size());
                        for (Gender gender : ((List<Gender>) values)) {
                            stringValues.add(gender.getAbbreviation());
                        }
                        params.put(paramName, stringValues.toArray(ArrayUtils.EMPTY_STRING_ARRAY));
                    } else if (values.get(0) instanceof State) {
                        List<String> stringValues = new ArrayList<String>(values.size());
                        for (State state : ((List<State>) values)) {
                            stringValues.add(state.getAbbreviation());
                        }
                        params.put(paramName, stringValues.toArray(ArrayUtils.EMPTY_STRING_ARRAY));
                    } else if (values.get(0) instanceof Party) {
                        List<String> stringValues = new ArrayList<String>(values.size());
                        for (Party party : ((List<Party>) values)) {
                            stringValues.add(party.getAbbreviation());
                        }
                        params.put(paramName, stringValues.toArray(ArrayUtils.EMPTY_STRING_ARRAY));
                    } else if (values.get(0) instanceof Boolean) {
                        List<String> stringValues = new ArrayList<String>(values.size());
                        for (Boolean boolValue : ((List<Boolean>) values)) {
                            stringValues.add(boolValue.booleanValue() ? "1" : "0");
                        }
                        params.put(paramName, stringValues.toArray(ArrayUtils.EMPTY_STRING_ARRAY));
                    }
                }
            }
        }
    }
    if (params.get("in_office") == null) {
        params.put("all_legislators", new String[] { "1" });
    }
    return params;
}
