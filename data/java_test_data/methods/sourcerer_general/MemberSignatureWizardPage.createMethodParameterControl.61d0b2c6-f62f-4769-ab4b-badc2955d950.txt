protected void createMethodParameterControl() {
    Label methodLabel = new Label(pageComposite, SWT.LEFT);
    ;
    methodLabel.setText("Method Parameters");
    Composite paramComposite = new Composite(pageComposite, SWT.NONE);
    paramComposite.setLayout(new GridLayout(2, false));
    paramComposite.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.GRAB_HORIZONTAL | GridData.VERTICAL_ALIGN_FILL | GridData.GRAB_VERTICAL));
    parameterTable = new Table(paramComposite, SWT.SINGLE | SWT.BORDER | SWT.FULL_SELECTION);
    parameterTable.setLinesVisible(true);
    parameterTable.setHeaderVisible(true);
    parameterTable.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.GRAB_HORIZONTAL | GridData.VERTICAL_ALIGN_FILL | GridData.GRAB_VERTICAL));
    TableColumn typeCol = new TableColumn(parameterTable, SWT.LEFT);
    typeCol.setText("Type");
    typeCol.setWidth(100);
    TableColumn nameCol = new TableColumn(parameterTable, SWT.LEFT);
    nameCol.setText("Parameter Name");
    nameCol.setWidth(100);
    createTableEditor(parameterTable);
    Composite buttonSubComposite = new Composite(paramComposite, SWT.NONE);
    buttonSubComposite.setLayout(new GridLayout(1, false));
    buttonSubComposite.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.GRAB_HORIZONTAL));
    final Button addButton = new Button(buttonSubComposite, SWT.NONE);
    final Button removeButton = new Button(buttonSubComposite, SWT.NONE);
    final Button moveUpButton = new Button(buttonSubComposite, SWT.NONE);
    final Button moveDownButton = new Button(buttonSubComposite, SWT.NONE);
    addButton.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL));
    removeButton.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL));
    moveUpButton.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL));
    moveDownButton.setLayoutData(new GridData(GridData.HORIZONTAL_ALIGN_FILL));
    addButton.setText("Add");
    removeButton.setText("Delete");
    moveUpButton.setText("Move Up");
    moveDownButton.setText("Move Down");
    removeButton.setEnabled(false);
    moveUpButton.setEnabled(false);
    moveDownButton.setEnabled(false);
    new TableSelectionListener(parameterTable, removeButton, moveUpButton, moveDownButton);
    addButton.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            TableItem item = new TableItem(parameterTable, SWT.NONE);
            item.setText(new String[] { "type", "name" });
            validatePage();
        }
    });
    removeButton.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            int index = parameterTable.getSelectionIndex();
            parameterTable.remove(index);
            if (parameterTable.getItemCount() > 0) {
                // there are items left
                if (index > 0) {
                    parameterTable.setSelection(index - 1);
                } else {
                    parameterTable.setSelection(index);
                }
            } else {
                removeButton.setEnabled(false);
                moveUpButton.setEnabled(false);
                moveDownButton.setEnabled(false);
            }
            validatePage();
        }
    });
    moveUpButton.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            // Assert index > 0
            int index = parameterTable.getSelectionIndex();
            int numItems = parameterTable.getItemCount();
            String[] itemToMove = new String[] { parameterTable.getItem(index).getText(0), parameterTable.getItem(index).getText(1) };
            Stack<String[]> tempStack = new Stack<String[]>();
            for (int a = numItems - 1; a > index; a--) {
                tempStack.push(new String[] { new String(parameterTable.getItem(a).getText(0)), new String(parameterTable.getItem(a).getText(1)) });
                parameterTable.remove(a);
            }
            parameterTable.remove(index);
            tempStack.push(new String[] { new String(parameterTable.getItem(index - 1).getText(0)), new String(parameterTable.getItem(index - 1).getText(1)) });
            parameterTable.remove(index - 1);
            TableItem newItem = new TableItem(parameterTable, SWT.NONE);
            newItem.setText(itemToMove);
            while (!tempStack.isEmpty()) {
                newItem = new TableItem(parameterTable, SWT.NONE);
                newItem.setText(tempStack.pop());
            }
            parameterTable.setSelection(index - 1);
            if (index - 1 == 0) {
                moveUpButton.setEnabled(false);
            }
            moveDownButton.setEnabled(true);
        }
    });
    moveDownButton.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            // Assert index < last index entry
            int index = parameterTable.getSelectionIndex();
            int numItems = parameterTable.getItemCount();
            String[] itemBelow = new String[] { parameterTable.getItem(index + 1).getText(0), parameterTable.getItem(index + 1).getText(1) };
            Stack<String[]> tempStack = new Stack<String[]>();
            for (int a = numItems - 1; a > index + 1; a--) {
                tempStack.push(new String[] { new String(parameterTable.getItem(a).getText(0)), new String(parameterTable.getItem(a).getText(1)) });
                parameterTable.remove(a);
            }
            parameterTable.remove(index + 1);
            tempStack.push(new String[] { new String(parameterTable.getItem(index).getText(0)), new String(parameterTable.getItem(index).getText(1)) });
            parameterTable.remove(index);
            TableItem newItem = new TableItem(parameterTable, SWT.NONE);
            newItem.setText(itemBelow);
            while (!tempStack.isEmpty()) {
                newItem = new TableItem(parameterTable, SWT.NONE);
                newItem.setText(tempStack.pop());
            }
            parameterTable.setSelection(index + 1);
            if (index + 1 == parameterTable.getItemCount() - 1) {
                moveDownButton.setEnabled(false);
            }
            moveUpButton.setEnabled(true);
        }
    });
}
