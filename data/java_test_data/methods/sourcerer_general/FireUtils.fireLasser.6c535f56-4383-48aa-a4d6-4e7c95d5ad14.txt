public static void fireLasser(Vector3f position, Vector3f direction) {
    for (Spatial s : balas) {
        GlobalState.scene.detachChild(s);
    }
    balas.clear();
    // 
    Ray ray = new Ray(position, direction);
    // 
    float closestDistance = Float.MAX_VALUE;
    Vector3f closestIntersection = null;
    Spatial closestView = null;
    for (Spatial view : GlobalState.hittableViews) {
        IntersectionRecord intersections = view.getWorldBound().intersectsWhere(ray);
        boolean intersects = intersections.getQuantity() != 0;
        if (intersects) {
            // 
            float distance = Float.MAX_VALUE;
            int closestIndex = -1;
            for (int i = 0; i < intersections.getQuantity(); i++) {
                float aux = intersections.getIntersectionPoint(i).subtract(position).lengthSquared();
                if (aux < distance) {
                    distance = aux;
                    closestIndex = i;
                }
            }
            // 
            if (distance > .1f) {
                if (distance < closestDistance) {
                    closestDistance = distance;
                    closestView = view;
                    closestIntersection = intersections.getIntersectionPoint(closestIndex);
                }
            }
        }
    }
    // 
    if (closestIntersection == null) {
        return;
    }
    // Si me pega
    if (closestView == GlobalState.meSpatial) {
        GlobalState.me.hit(closestIntersection);
        return;
    }
    if (closestView instanceof PlayerView) {
        mostrarImpacto(closestIntersection, ColorRGBA.red);
        ((PlayerView) closestView).hit(closestIntersection);
        return;
    }
    // 
    mostrarImpacto(closestIntersection, ColorRGBA.yellow);
    SoundCache.play("FIRE_CLOSE3");
}
