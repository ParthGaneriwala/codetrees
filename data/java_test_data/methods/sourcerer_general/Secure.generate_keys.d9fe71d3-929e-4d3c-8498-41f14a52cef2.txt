public void generate_keys(int rc4_key_size) throws CryptoException {
    byte[] session_key = new byte[48];
    byte[] temp_hash = new byte[48];
    byte[] input = new byte[48];
    System.arraycopy(this.client_random, 0, input, 0, 24);
    System.arraycopy(this.server_random, 0, input, 24, 24);
    temp_hash = this.hash48(input, this.client_random, this.server_random, 65);
    session_key = this.hash48(temp_hash, this.client_random, this.server_random, 88);
    // changed from 8 - rdesktop 1.2.0
    System.arraycopy(session_key, 0, this.sec_sign_key, 0, 16);
    this.sec_decrypt_key = this.hash16(session_key, this.client_random, this.server_random, 16);
    this.sec_encrypt_key = this.hash16(session_key, this.client_random, this.server_random, 32);
    if (rc4_key_size == 1) {
        logger.info("40 Bit Encryption enabled");
        this.make40bit(this.sec_sign_key);
        this.make40bit(this.sec_decrypt_key);
        this.make40bit(this.sec_encrypt_key);
        this.keylength = 8;
    } else {
        logger.info("128 Bit Encryption enabled");
        this.keylength = 16;
    }
    // changed from 8 - rdesktop 1.2.0
    System.arraycopy(this.sec_decrypt_key, 0, this.sec_decrypt_update_key, 0, 16);
    // changed from 8 - rdesktop 1.2.0
    System.arraycopy(this.sec_encrypt_key, 0, this.sec_encrypt_update_key, 0, 16);
    byte[] key = new byte[this.keylength];
    System.arraycopy(this.sec_encrypt_key, 0, key, 0, this.keylength);
    rc4_enc.engineInitEncrypt(key);
    System.arraycopy(this.sec_decrypt_key, 0, key, 0, this.keylength);
    rc4_dec.engineInitDecrypt(key);
}
