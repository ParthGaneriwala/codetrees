// GEN-LAST:event_jButton1ActionPerformed
private void advanceSearchEvent() {
    Timestamp startDateTS = DateTimeHelper.DateToTimestamp(startDate.getDate());
    Timestamp endDateTS = DateTimeHelper.DateToTimestamp(endDate.getDate());
    if (startDateTS.after(endDateTS)) {
        JOptionPane.showMessageDialog(null, "start date cannot be after " + "end date", "Search Event", JOptionPane.INFORMATION_MESSAGE);
        return;
    }
    String eventName = (String) cmbEvent.getSelectedItem();
    String venueName = (String) cmbVenue.getSelectedItem();
    String location = (String) cmbLocation.getSelectedItem();
    String keyword = this.tfKeyword.getText().trim();
    EventView event = new EventView();
    event.setName(eventName);
    event.setBeginDateTime(startDateTS);
    event.setEndDateTime(endDateTS);
    event.setVenueName(venueName);
    event.setKeywords(keyword);
    event.setLocation(location);
    Collection<EventView> events = null;
    SearchController controller = new SearchController();
    events = controller.advancedSearch(event);
    SearchResultsView srv = new SearchResultsView(events);
    this.getPnlParent().removeAll();
    this.getPnlParent().add(srv);
    this.getPnlParent().validate();
    this.getPnlParent().repaint();
    srv.setPnlParent(this.getPnlParent());
// here should be a DAO to get all events
// create a sql in EventViewDAO
// events = DAOFactory.getInstance().getEventViewDAO().getEventsDOByCombined();
/*
        Collection<Venue> venues = DAOFactory.getInstance().getVenueDAO().getVenuesDO(new Venue());
        if(venues.size() == 0)
        {
        JOptionPane.showMessageDialog(null, "No specified venue found ",
        "Advanced Search Event", JOptionPane.INFORMATION_MESSAGE);
        return;
        }


        
        String eventKeyword = (String) cmbEvent.getSelectedItem();

        Event event = new Event();
        event.setKeywords(eventKeyword);
        event.setBeginDateTime(startDateTS);
        event.setEndDateTime(endDateTS);

        //Collection<Event> events = null;

        Iterator<Venue> venueIterator = venues.iterator();

        while(venueIterator.hasNext())
        {
        event.setVenueID(venueIterator.next().getVenueID());
        events = DAOFactory.getInstance().getEventDAO().getEventsDOByKeyword(event);
        }*/
}
