private void construct() {
    // the graph viewing canvas
    if (ug != null)
        graphCanvas_ = new GraphCanvas(ug);
    else if (domGraph != null)
        graphCanvas_ = new GraphCanvas(domGraph);
    // panel for controls
    LPanel p = new LPanel();
    portScroller_ = new ViewportScroller(90, 90, 500.0, 500.0, 400.0, 400.0, 0.0, 0.0);
    portScroller_.setBackground(Color.lightGray);
    p.constraints.insets.bottom = 0;
    p.addLabel("Viewing Offset", 0, 0, 1.0, 1.0, 0, 0);
    p.constraints.insets.top = p.constraints.insets.bottom = 0;
    p.addComponent(portScroller_, 0, 0, 1.0, 1.0, 0, 0);
    p.constraints.insets.top = p.constraints.insets.bottom = 0;
    JButton centerButton = p.addButton("Center", 0, 0, 1.0, 1.0, 0, 0);
    centerButton.addActionListener(this);
    centerButton.setActionCommand("Center");
    scaleLabel_ = p.addLineLabel("Scale: 1", 0);
    LPanel sp = new LPanel();
    sp.spacing = 0;
    sp.constraints.insets.top = sp.constraints.insets.bottom = 0;
    JButton scale1 = sp.addButton("Scale / 2", 1, -1, 1.0, 1.0, 0, 0);
    scale1.addActionListener(this);
    scale1.setActionCommand("Scale / 2");
    JButton scale2 = sp.addButton("Scale = 1", 1, -1, 1.0, 1.0, 0, 0);
    scale2.addActionListener(this);
    scale2.setActionCommand("Scale = 1");
    JButton scale3 = sp.addButton("Scale * 2", 0, -1, 1.0, 1.0, 0, 0);
    scale3.addActionListener(this);
    scale3.setActionCommand("Scale * 2");
    sp.finish();
    p.addComponent(sp, 0, 0, 1.0, 1.0, 0, 0);
    p.constraints.insets.top = 0;
    AngleControlPanel angc = new AngleControlPanel(180, 76);
    p.addComponent(angc, 0, 0, 1.0, 1.0, 1, 0);
    // super panel is there just to allow controls to be
    // fixed to top instead of centered
    Panel controls_superpanel = new Panel();
    controls_superpanel.add("North", p);
    p.finish();
    add("West", controls_superpanel);
    controls_ = controls_superpanel;
    controls_.setVisible(true);
    // the graph viewing panel (canvas and scrollbars)
    viewingPanel_ = new ScrolledPanel(graphCanvas_);
    validate();
}
