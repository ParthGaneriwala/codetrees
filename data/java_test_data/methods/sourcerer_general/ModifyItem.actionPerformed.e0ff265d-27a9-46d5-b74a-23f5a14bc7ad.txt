public void actionPerformed(ActionEvent arg0) {
    if (model.getActiveUser().getType().equals(UserType.ADMIN)) {
        int index = model.getClothes().indexOf(dialog.getCloth());
        Integer amount, year;
        Double price, wholeSalePrice, retailPrice;
        String imagePath = dialog.getPath();
        String size;
        String code = dialog.getCode();
        if (code.equals("")) {
            JOptionPane.showMessageDialog(null, "No se ha ingresado un c�digo v�lido", " Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!code.equalsIgnoreCase(dialog.getCloth().getCode())) {
            for (Cloth cloth : model.getClothes()) {
                if (cloth.getCode().equalsIgnoreCase(code)) {
                    JOptionPane.showMessageDialog(null, "El codigo ingresado ya existe", " Error!", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        }
        String description = dialog.getDescription();
        if (description.equals("")) {
            JOptionPane.showMessageDialog(null, "No se ha ingresado una descripci�n v�lida", " Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ClothColor color = dialog.getColor();
        try {
            size = dialog.getItemSize();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "No se ha ingresado un tama�o v�lido", " Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            price = Double.parseDouble(dialog.getCost());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "No se ha ingresado un precio v�lido", " Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            amount = Integer.parseInt(dialog.getAmount());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "No se ha ingresado una cantidad v�lida", " Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            wholeSalePrice = Double.parseDouble(dialog.getWholesalePrice());
        } catch (NumberFormatException e) {
            wholeSalePrice = 0.0;
        }
        try {
            retailPrice = Double.parseDouble(dialog.getRetailPrice());
        } catch (NumberFormatException e) {
            retailPrice = 0.0;
        }
        Seasson seasson = dialog.getSeasson();
        Sex sex = dialog.getSex();
        Provider provider = dialog.getProvider();
        year = Integer.parseInt(dialog.getYear());
        dialog.dispose();
        model.modifyItem(index, code, description, color, size, price, amount, seasson, provider, wholeSalePrice, retailPrice, sex, year, imagePath);
    } else {
        JOptionPane.showMessageDialog(null, "Solo el administrador puede modificar los productos", " Error!", JOptionPane.ERROR_MESSAGE);
    }
}
