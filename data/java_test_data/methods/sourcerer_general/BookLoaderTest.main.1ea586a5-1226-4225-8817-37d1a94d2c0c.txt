@Test
public void main() {
    String testBooksPath = randomString();
    String testInitialBook = randomString();
    Object[] options = { "/", ".jar" };
    String testBookSourceExtension = (String) randomOptions(options);
    String[] bookNames = { randomString(), randomString(), randomString() };
    String[] bookCaptions = { randomString(), randomString(), randomString() };
    String[] initialProcesses = { randomString(), randomString(), randomString() };
    String[] actionHandlers = { randomString(), randomString(), randomString() };
    String[] classPaths = { randomString(), randomString(), randomString() };
    String testGroupCaption = randomString();
    String s = "";
    for (int i = 0; i < bookNames.length; i++) {
        s += generateBookNode(bookNames[i], initialProcesses[i], actionHandlers[i], classPaths[i]);
    }
    s = "<?xml version=\"1.0\" encoding=\"windows-1251\" ?>" + "<library>" + "<initial-book>" + testInitialBook + "</initial-book>" + "<books-path>" + testBooksPath + "</books-path>" + "<book-source-extension>" + testBookSourceExtension + "</book-source-extension>" + "<books>" + s + "</books>" + "<groups>" + String.format("<group caption='%s' book='%s'/>", bookCaptions[0], bookNames[0]) + String.format("<group caption='%s' book='%s'/>", bookCaptions[1], bookNames[1]) + String.format("<group caption='%s'>", testGroupCaption) + String.format("<group caption='%s' book='%s'/>", bookCaptions[2], bookNames[2]) + "</group>" + "</groups>" + "</library>";
    Reader reader = new StringReader(s);
    IBookLoader loader = new BookLoader(reader);
    Assert.assertEquals("BooksPath does not match", testBooksPath, loader.getBooksPath());
    Assert.assertEquals("InitialBook does not match", testInitialBook, loader.getInitialBook());
    Assert.assertEquals("BookSourceExtension does not match", testBookSourceExtension, loader.getBookSourceExtension());
    for (int i = 0; i < bookNames.length; i++) {
        testBook(loader, bookNames[i], initialProcesses[i], actionHandlers[i], classPaths[i]);
    }
    List<IBookGroup> groups = loader.getGroups();
    Assert.assertNotNull("getGroups", groups);
    Assert.assertEquals("Count of root items", 3, groups.size());
    testGroup("group 1", groups.get(0), bookNames[0], bookCaptions[0], null);
    testGroup("group 2", groups.get(1), bookNames[1], bookCaptions[1], null);
    testGroup("group 3", groups.get(2), "", testGroupCaption, null);
    Assert.assertEquals("Count of items in the group 3", 1, groups.get(2).getChildren().size());
    IBookGroup group = groups.get(2).getChildren().get(0);
    testGroup("group 3/1", group, bookNames[2], bookCaptions[2], groups.get(2));
}
