private String playTreat(int gamePort, int transmitionPort, String gameId, String clientName, String password) {
    String response = ClientServerProtocol.DENIED;
    try {
        if (!authenticateUser(clientName, password)) {
            return response;
        }
    } catch (Exception e1) {
        response = ClientServerProtocol.SERVPROB;
        return response;
    }
    // check if the client is in the list and not in a game
    OnlineClient theClient = server.clients.getClient(clientName);
    if (theClient != null) {
        if (theClient.getGame() != null) {
            server.printer.print_error("User is already in game, delete old game...");
            server.games.removeGame(theClient.getGame());
            theClient.resetGame();
        }
        theClient.setTransmitPort(transmitionPort);
        // check if the game exists
        Game theGame = server.games.getGame(gameId);
        if (theGame != null) {
            // and has no second player
            // Player thePlayer = theGame.getPlayer(Player.Color.BLUE);
            // if(thePlayer == null){
            theGame.addPlayer(clientName);
            OnlineClient enemy = server.clients.getClient(theGame.getPlayer(Player.Color.RED).getName());
            if (enemy != null) {
                response = ClientServerProtocol.buildCommand(new String[] { ClientServerProtocol.GOGOGO, Integer.toString(enemy.getTCPPort()), enemy.getAddress().getHostAddress(), enemy.getName(), Integer.toString(enemy.getTransmitPort()) });
                server.printer.print_info("Player has been added to the game: " + gameId);
                theClient.setGameForClient(gameId);
                try {
                    if (DataBaseManager.isGameIdExists(gameId)) {
                        server.printer.print_info("Game exists in database - updating the second player...");
                        try {
                            DataBaseManager.updateGamePlayer(gameId, clientName);
                        } catch (GameIdNotExists e) {
                        // CANNOT HAPPEN
                        }
                    } else {
                        server.printer.print_info("Adding the game to database: " + gameId);
                        DataBaseManager.createGame(enemy.getName(), clientName, gameId);
                    }
                } catch (SQLException e) {
                    server.printer.print_error("Cannot insert the game to the database: " + e.getMessage());
                    response = ClientServerProtocol.SERVPROB;
                } catch (GameIdAlreadyExists e) {
                    server.printer.print_error("The game is already in the database: " + e.getMessage());
                    response = ClientServerProtocol.SERVPROB;
                }
            } else {
                server.printer.print_error("WE HAVE PROBLEM IN SERVER MAN");
                response = ClientServerProtocol.SERVPROB;
            }
        } else {
            server.printer.print_error("No such gameId:" + gameId);
            response = ClientServerProtocol.DENIED;
        }
    }
    return response;
}
