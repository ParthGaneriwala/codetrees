public void drawFrame(GL10 gl) {
    gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
    gl.glMatrixMode(GL10.GL_MODELVIEW);
    gl.glLoadIdentity();
    GLU.gluLookAt(gl, 0, 0, 4, 0, 0, 0, 0, 1, 0);
    float[] nAccel = getNewAccel();
    float[] nMag = getNewMag();
    if (nAccel != null && nMag != null) {
        nAccel = VMath.normalize(nAccel);
        nMag = VMath.normalize(nMag);
        if (mWeightedAccel == null)
            mWeightedAccel = nAccel.clone();
        if (mWeightedMag == null)
            mWeightedMag = nMag.clone();
        float alpha = 0.9f;
        for (int i = 0; i < 3; ++i) {
            mWeightedAccel[i] = alpha * mWeightedAccel[i] + (1f - alpha) * nAccel[i];
            mWeightedMag[i] = alpha * mWeightedMag[i] + (1f - alpha) * nMag[i];
        }
        mWeightedAccel = VMath.normalize(mWeightedAccel);
        mWeightedMag = VMath.normalize(mWeightedMag);
        // Distance from the mag point to the horizontal plane
        float magDist = VMath.dotProduct(mWeightedAccel, mWeightedMag);
        // Project the mag vector onto the horizontal plane
        float[] magProj = VMath.normalize(new float[] { mWeightedMag[0] - mWeightedAccel[0] * magDist, mWeightedMag[1] - mWeightedAccel[1] * magDist, mWeightedMag[2] - mWeightedAccel[2] * magDist });
        float[] x = VMath.crossProduct(mWeightedAccel, magProj);
        gl.glMultMatrixf(new float[] { x[0], x[1], x[2], 0, -mWeightedAccel[0], -mWeightedAccel[1], -mWeightedAccel[2], 0, magProj[0], magProj[1], magProj[2], 0, 0, 0, 0, 1 }, 0);
    }
    gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_AMBIENT, lightAmbient, 0);
    gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_DIFFUSE, lightDiffuse, 0);
    gl.glLightfv(GL10.GL_LIGHT0, GL10.GL_POSITION, lightPos, 0);
    gl.glMaterialfv(GL10.GL_FRONT_AND_BACK, GL10.GL_AMBIENT_AND_DIFFUSE, red, 0);
    mArrow.draw(gl);
    gl.glMaterialfv(GL10.GL_FRONT_AND_BACK, GL10.GL_AMBIENT_AND_DIFFUSE, yellow, 0);
    gl.glRotatef(90.0f, 0f, 1f, 0f);
    mArrow.draw(gl);
    gl.glRotatef(90.0f, 0f, 1f, 0f);
    mArrow.draw(gl);
    gl.glRotatef(90.0f, 0f, 1f, 0f);
    mArrow.draw(gl);
}
