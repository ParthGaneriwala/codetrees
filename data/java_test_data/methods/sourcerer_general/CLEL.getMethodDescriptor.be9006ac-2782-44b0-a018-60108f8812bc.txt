public MethodDescriptor getMethodDescriptor(Token t) throws MethodNotFoundException {
    int table = t.getTable();
    int row = t.getRow();
    ClassDescriptor cd;
    int i;
    StreamTable st;
    StreamTableRow r, r1;
    ArrayList<StreamTableRow> rows;
    String n, s;
    if (table == CLELConstants.METHODDEF_TABLE) {
        st = parser.getPoundTildaStream().getStreamTable(CLELConstants.TYPEDEF_TABLE);
        rows = st.getRows();
        for (i = 0; i < rows.size(); i++) {
            r = rows.get(i);
            if (row >= r.getTypeDefMethodList() && ((i == (rows.size() - 1)) || row < rows.get(i + 1).getTypeDefMethodList())) {
                n = getValueStringHeap(r.getTypeDefName());
                s = getValueStringHeap(r.getTypeDefNamespace());
                cd = new ClassDescriptor(n.substring(0, n.length() - 1), s.substring(0, s.length() - 1));
                st = parser.getPoundTildaStream().getStreamTable(CLELConstants.METHODDEF_TABLE);
                rows = st.getRows();
                if (row > 0 && row <= rows.size()) {
                    r = rows.get(row - 1);
                    return new MethodDescriptor(cd, getValueStringHeap(r.getMethodDefName()), getMethodParameters(getBlobFromHeap(r.getMethodDefSignature())));
                }
            }
        }
    } else if (table == CLELConstants.MEMBERREF_TABLE) {
        st = parser.getPoundTildaStream().getStreamTable(CLELConstants.MEMBERREF_TABLE);
        rows = st.getRows();
        if (row > 0 && row <= rows.size()) {
            r = rows.get(row - 1);
            Token class_token = getMemberRefParentToken(r.getMemberRefClass());
            if (class_token.getTable() == CLELConstants.TYPEDEF_TABLE) {
            // ???????????????????????????????
            } else if (class_token.getTable() == CLELConstants.TYPEREF_TABLE) {
                st = parser.getPoundTildaStream().getStreamTable(CLELConstants.TYPEREF_TABLE);
                rows = st.getRows();
                if (class_token.getRow() > 0 && class_token.getRow() <= rows.size()) {
                    r1 = rows.get(class_token.getRow() - 1);
                    cd = new ClassDescriptor(getValueStringHeap(r1.getTypeRefName()), getValueStringHeap(r1.getTypeRefNamespace()));
                    return new MethodDescriptor(cd, getValueStringHeap(r.getMemberRefName()), getMethodParameters(getBlobFromHeap(r.getMemberRefSignature())));
                }
            } else if (class_token.getTable() == CLELConstants.MODULEREF_TABLE) {
            // ???????????????????????????????
            } else if (class_token.getTable() == CLELConstants.METHODDEF_TABLE) {
            // ???????????????????????????????
            } else if (class_token.getTable() == CLELConstants.TYPESPEC_TABLE) {
            // ???????????????????????????????
            }
        }
    }
    throw new MethodNotFoundException("Error: Method was not found");
}
