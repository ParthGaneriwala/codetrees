public Exp visit(MessageSend n, MJType argu) {
    Exp _ret = null;
    Temp t1 = new Temp();
    Temp t2 = new Temp();
    Temp t3 = new Temp();
    int index = -1;
    Exp exp1 = n.f0.accept(this, argu);
    String m_name = (n.f2).f0.toString();
    MJType aux_type;
    if (last_name == null) {
        index = last_type.SearchMetInd(m_name) * 4;
        aux_type = ((MJMethod) last_type.SearchMethod(m_name)).GetRetType();
    } else {
        MJObj new_type = (MJObj) ((MJMethod) argu).SearchType(last_name);
        if (new_type == null)
            new_type = (MJObj) ((MJMethod) argu).SearchClass(last_name);
        index = new_type.SearchMetInd(m_name) * 4;
        aux_type = ((MJMethod) new_type.SearchMethod(m_name)).GetRetType();
    }
    LinkedList<Tree.Exp> argslist = new LinkedList<Tree.Exp>();
    argslist.add(TEMP(t3));
    if (n.f4.present()) {
        argslist = ((Tree.ExpList) (n.f4.accept(this, argu).unEx())).getList();
        argslist.addFirst(TEMP(t3));
    }
    last_name = null;
    if (aux_type instanceof MJObj)
        last_type = (MJObj) aux_type;
    Tree.Stm s1 = MOVE(TEMP(t3), exp1.unEx());
    Tree.Stm s2 = MOVE(TEMP(t1), MEM(TEMP(t3)));
    Tree.Stm s3 = MOVE(TEMP(t2), MEM(BINOP(Tree.BINOP.PLUS, TEMP(t1), CONST(index))));
    return new Ex(CALL(ESEQ(SEQ(SEQ(s1, s2), s3), TEMP(t2)), argslist));
}
