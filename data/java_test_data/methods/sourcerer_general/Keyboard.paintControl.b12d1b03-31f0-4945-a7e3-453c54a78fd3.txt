public void paintControl(PaintEvent pe) {
    GC gc = pe.gc;
    Point canvasSize = canvas.getSize();
    gc.setBackground(GUI.display.getSystemColor(SWT.COLOR_WHITE));
    gc.setForeground(GUI.display.getSystemColor(SWT.COLOR_BLACK));
    // tło
    gc.fillRectangle(0, 0, canvasSize.x, canvasSize.y);
    gc.drawImage(blankKeyboard, 0, 0);
    String[] layout;
    if (CoolKey.getUser().getConfig().getKeyboardLayout() == Config.QWERTY) {
        layout = QWERTY;
    } else {
        layout = Dvorak;
    }
    boolean isShiftCharacter = false;
    // podświetl zwykłe klawisze z układu klawiatury
    for (int j = 0; j < layout.length; j++) {
        // który z kolei klawisz od lewej
        int keyFromLeft = 0;
        int x = ROWS_X_MARGINS[j];
        for (int i = 0; i < layout[j].length(); i++) {
            char c = layout[j].charAt(i);
            char keyChar = nextChar;
            int y = ROWS_Y_MARGINS[j];
            if (Character.isLetter(c)) {
                // podświetlanie liter
                if (POLISH_CHARS.indexOf(nextChar) != -1) {
                    keyChar = POLISH2LATIN_CHARS.charAt(POLISH_CHARS.indexOf(nextChar));
                }
                if (c == keyChar || Character.toUpperCase(c) == keyChar) {
                    if (isMistakeMade) {
                        gc.drawImage(keyMistake, x, y);
                    } else {
                        gc.drawImage(keyHighlighted, x, y);
                    }
                    leftHand = j > 0 ? keyFromLeft < 5 : keyFromLeft < 7;
                    isShiftCharacter = Character.isUpperCase(nextChar);
                }
                gc.drawString("" + Character.toUpperCase(c), x + KEY_X_PADDING, y + KEY_Y_PADDING, true);
            } else {
                // podświetlanie znaków specjalnych
                if (c == keyChar || layout[j].charAt(i + 1) == keyChar) {
                    if (c == '|') {
                        if (isMistakeMade) {
                            gc.drawImage(keyLongMistake, x, y);
                        } else {
                            gc.drawImage(keyLongHighlighted, x, y);
                        }
                    } else {
                        if (isMistakeMade) {
                            gc.drawImage(keyMistake, x, y);
                        } else {
                            gc.drawImage(keyHighlighted, x, y);
                        }
                    }
                    leftHand = j > 0 ? keyFromLeft < 5 : keyFromLeft < 7;
                    isShiftCharacter = c == keyChar;
                }
                gc.drawString("" + c, x + KEY_X_PADDING, y + KEY_Y_TOP_PADDING, true);
                i++;
                c = layout[j].charAt(i);
                gc.drawString("" + c, x + KEY_X_PADDING, y + KEY_Y_BOTTOM_PADDING, true);
            }
            x += KEY_WIDTH;
            keyFromLeft++;
        }
    }
    // podświetl spację
    if (nextChar == ' ') {
        if (isMistakeMade) {
            gc.drawImage(spaceMistake, SPACE_COORDS.x, SPACE_COORDS.y);
        } else {
            gc.drawImage(spaceHighlighted, SPACE_COORDS.x, SPACE_COORDS.y);
        }
    }
    // podświetl Alt Gr
    if (POLISH_CHARS.indexOf(nextChar) != -1) {
        if (isMistakeMade) {
            gc.drawImage(altGrMistake, ALT_GR_COORDS.x, ALT_GR_COORDS.y);
        } else {
            gc.drawImage(altGrHighlighted, ALT_GR_COORDS.x, ALT_GR_COORDS.y);
        }
    }
    // podświetl Shift
    if (isShiftCharacter) {
        if (isMistakeMade) {
            if (leftHand) {
                gc.drawImage(rightShiftMistake, RIGHT_SHIFT_COORDS.x, RIGHT_SHIFT_COORDS.y);
            } else {
                gc.drawImage(leftShiftMistake, LEFT_SHIFT_COORDS.x, LEFT_SHIFT_COORDS.y);
            }
        } else {
            if (leftHand) {
                gc.drawImage(rightShiftHighlighted, RIGHT_SHIFT_COORDS.x, RIGHT_SHIFT_COORDS.y);
            } else {
                gc.drawImage(leftShiftHighlighted, LEFT_SHIFT_COORDS.x, LEFT_SHIFT_COORDS.y);
            }
        }
    }
    // podświetl Enter
    if (nextChar == '\r') {
        if (isMistakeMade) {
            gc.drawImage(enterMistake, ENTER_COORDS.x, ENTER_COORDS.y);
        } else {
            gc.drawImage(enterHighlighted, ENTER_COORDS.x, ENTER_COORDS.y);
        }
    }
}
