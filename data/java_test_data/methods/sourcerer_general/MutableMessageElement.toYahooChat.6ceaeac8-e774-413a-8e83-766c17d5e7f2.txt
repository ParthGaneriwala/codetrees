private void toYahooChat(StringBuffer sb, Stack colStack) {
    switch(type) {
        case NULL:
            break;
        case TEXT:
            sb.append(text);
            break;
        case BOLD:
            sb.append(boldOn);
            break;
        case ITALIC:
            sb.append(italicOn);
            break;
        case COLOUR_INDEX:
            sb.append(_colIdx1(idxColour, colStack));
            break;
        case COLOUR_ABS:
            sb.append(_colAbs1(colour, colStack));
            break;
        case COLOUR_NAME:
            sb.append("<" + namedColour + ">");
            break;
        case UNDERLINE:
            sb.append(underlineOn);
            break;
        case FONT:
            sb.append("<font face=\"" + fontFace + "\" size=\"" + fontSize + "\">");
            break;
        case FADE:
            sb.append("<fade " + _toTransition(transition) + ">");
            break;
        case ALT:
            sb.append("<alt " + _toTransition(transition) + ">");
            break;
    }
    for (int i = 0; i < children.size(); i++) {
        MutableMessageElement el = (MutableMessageElement) children.elementAt(i);
        el.toYahooChat(sb, colStack);
    }
    switch(type) {
        case NULL:
            break;
        case BOLD:
            sb.append(boldOff);
            break;
        case ITALIC:
            sb.append(italicOff);
            break;
        case COLOUR_INDEX:
            if (colStack != null)
                sb.append(_colPop(colStack));
            break;
        case COLOUR_ABS:
            if (colStack != null)
                sb.append(_colPop(colStack));
            break;
        case COLOUR_NAME:
            sb.append("</" + namedColour + ">");
            break;
        case UNDERLINE:
            sb.append(underlineOff);
            break;
        case FONT:
            sb.append("</font>");
            break;
        case FADE:
            sb.append("</fade>");
            break;
        case ALT:
            sb.append("</alt>");
            break;
    }
}
