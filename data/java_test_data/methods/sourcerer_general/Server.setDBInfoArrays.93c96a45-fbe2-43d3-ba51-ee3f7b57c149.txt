private void setDBInfoArrays() {
    IntKeyHashMap dbNumberMap = getDBNameArray();
    int maxDatabases = dbNumberMap.size();
    if (serverProperties.isPropertyTrue(ServerConstants.SC_KEY_REMOTE_OPEN_DB)) {
        int max = serverProperties.getIntegerProperty(ServerConstants.SC_KEY_MAX_DATABASES, ServerConstants.SC_DEFAULT_MAX_DATABASES);
        if (maxDatabases < max) {
            maxDatabases = max;
        }
    }
    dbAlias = new String[maxDatabases];
    dbPath = new String[dbAlias.length];
    dbType = new String[dbAlias.length];
    dbID = new int[dbAlias.length];
    dbActionSequence = new long[dbAlias.length];
    dbProps = new HsqlProperties[dbAlias.length];
    Iterator it = dbNumberMap.keySet().iterator();
    for (int i = 0; it.hasNext(); ) {
        int dbNumber = it.nextInt();
        String path = getDatabasePath(dbNumber, true);
        if (path == null) {
            printWithThread("missing database path: " + dbNumberMap.get(dbNumber));
            continue;
        }
        HsqlProperties dbURL = DatabaseURL.parseURL(path, false, false);
        if (dbURL == null) {
            printWithThread("malformed database path: " + path);
            continue;
        }
        dbAlias[i] = (String) dbNumberMap.get(dbNumber);
        dbPath[i] = dbURL.getProperty("database");
        dbType[i] = dbURL.getProperty("connection_type");
        dbProps[i] = dbURL;
        i++;
    }
}
