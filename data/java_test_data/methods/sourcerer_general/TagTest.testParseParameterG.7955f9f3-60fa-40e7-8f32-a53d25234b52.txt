public void testParseParameterG() throws ParserException {
    Tag tag;
    Tag etag;
    Text snode;
    Node node = null;
    String lin1 = "<G href=\"http://www.iki.fi/kaila\" myParameter yourParameter=\"Kaila\">Kaarle's homepage</G><p>Paragraph</p>";
    createParser(lin1);
    NodeIterator en = parser.elements();
    String a, href, myValue, nice;
    try {
        if (en.hasMoreNodes()) {
            node = en.nextNode();
            tag = (Tag) node;
            a = ((Attribute) (tag.getAttributesEx().elementAt(0))).getName();
            href = tag.getAttribute("HREF");
            myValue = tag.getAttribute("MYPARAMETER");
            nice = tag.getAttribute("YOURPARAMETER");
            assertEquals("The tagname should be G", a, "G");
            assertEquals("Check the http address", href, "http://www.iki.fi/kaila");
            assertEquals("myValue is not null", myValue, null);
            assertEquals("The second parameter value", nice, "Kaila");
        }
        if (en.hasMoreNodes()) {
            node = en.nextNode();
            snode = (Text) node;
            assertEquals("The text of the element", snode.getText(), "Kaarle's homepage");
        }
        if (en.hasMoreNodes()) {
            node = en.nextNode();
            etag = (Tag) node;
            assertEquals("Endtag is G", "/G", etag.getText());
        }
        // testing rest
        if (en.hasMoreNodes()) {
            node = en.nextNode();
            tag = (Tag) node;
            assertEquals("Follow up by p-tag", "p", tag.getText());
        }
        if (en.hasMoreNodes()) {
            node = en.nextNode();
            snode = (Text) node;
            assertEquals("Verify the paragraph text", "Paragraph", snode.getText());
        }
        if (en.hasMoreNodes()) {
            node = en.nextNode();
            etag = (Tag) node;
            assertEquals("Still patragraph endtag", "/p", etag.getText());
        }
    } catch (ClassCastException ce) {
        fail("Bad class element = " + node.getClass().getName());
    }
}
