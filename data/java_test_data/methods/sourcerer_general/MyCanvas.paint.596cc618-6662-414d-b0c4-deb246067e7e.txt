protected void paint(Graphics g) {
    g.setColor(0xffffff);
    g.fillRect(0, 0, largura, altura);
    g.setColor(0x3300CC);
    Font font = Font.getFont(Font.FACE_SYSTEM, Font.STYLE_PLAIN, Font.SIZE_SMALL);
    g.setFont(font);
    double max = valoresReais[0];
    double min = valoresReais[0];
    // calcular valor máximo e mínimo
    for (int i = 0; i < 7; i++) {
        if (valoresReais[i] > max)
            max = valoresReais[i];
        if (valoresReais[i] < min)
            min = valoresReais[i];
    }
    boolean flagMax = false;
    boolean flagMin = false;
    int x1 = 0, y1 = 0, x2 = 0, y2 = 0;
    for (int i = 0; i < 6; i++) {
        x1 = (int) (((largura - largura * 0.1) / 8) * (i + 1));
        x1 = (int) (x1 + largura * 0.05);
        x2 = (int) (((largura - largura * 0.1) / 8) * (i + 2));
        x2 = (int) (x2 + largura * 0.05);
        double proporcao = (max - valoresReais[i]) / (max - min);
        y1 = (int) (altura - (altura - (altura * proporcao)));
        y1 += altura * 0.2;
        proporcao = (max - valoresReais[i + 1]) / (max - min);
        y2 = (int) (altura - (altura - (altura * proporcao)));
        y2 += altura * 0.2;
        // y2 =  (int) (y2 - y2 * 0.1);
        g.fillArc(x1 - 5, y1 - 5, 10, 10, 0, 360);
        g.drawLine(x1, y1, x2, y2);
        if (i == 0) {
            g.drawString(datas[i], getWidth(), 15, Graphics.RIGHT | Graphics.BOTTOM);
        }
        if (valoresReais[i] == max && !flagMax) {
            flagMax = true;
            g.drawString(Double.toString(valoresReais[i]), x1, y1, 0);
        }
        if (valoresReais[i] == min && !flagMin) {
            flagMin = true;
            g.drawString(Double.toString(valoresReais[i]), x1, y1, Graphics.LEFT | Graphics.BOTTOM);
        }
    }
    g.fillArc(x2 - 5, y2 - 5, 10, 10, 0, 360);
    if (valoresReais[6] == max && !flagMax) {
        flagMax = true;
        g.drawString(Double.toString(valoresReais[6]), x1, y1, 0);
    }
    if (valoresReais[6] == min && !flagMin) {
        flagMin = true;
        g.drawString(Double.toString(valoresReais[6]), x1, y1, Graphics.LEFT | Graphics.BOTTOM);
    }
    g.drawString(datas[6], 75, 15, Graphics.RIGHT | Graphics.BOTTOM);
}
