@Override
public Object visit(Body_Proc_Return body_proc_return, Object o) {
    String[] informacoesProcedure = (String[]) o;
    String declVarFunc = informacoesProcedure[0];
    String tipo = informacoesProcedure[1];
    String[] retorno = new String[2];
    Decl_Var var = body_proc_return.getDeclVar();
    String declaracoesVariavel = "";
    if (var != null) {
        declaracoesVariavel = (String) var.accept(this, o);
    }
    String locais = "";
    if (!declaracoesVariavel.equals("")) {
        locais = ".locals init (";
        String[] declaracoes = declaracoesVariavel.split("#");
        int contadorLocais = 0;
        if (contadorLocais == 0)
            locais += "[" + (contadorLocais++) + "] " + tipo + " " + declVarFunc;
        for (String varDeclaracao : declaracoes) {
            if (contadorLocais == 0)
                locais += "[" + (contadorLocais++) + "] " + varDeclaracao;
            else
                locais += ", [" + (contadorLocais++) + "] " + varDeclaracao;
        }
        locais += ")\n";
    } else {
        locais = ".locals init ([0] ";
        locais += tipo + " " + declVarFunc;
        locais += ")\n";
    }
    retorno[0] = locais;
    retorno[1] = (String) body_proc_return.getInitBlocReturn().accept(this, o);
    return retorno;
}
