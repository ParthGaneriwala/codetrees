// documentation inherited
@Override
public boolean tick(float elapsed) {
    // see if we need to start blending out
    if (_counting && (_countdown -= elapsed) <= 0f) {
        blendToWeight(0f, _config.blendOut);
    }
    // update the weight
    super.tick(elapsed);
    if (!isPlaying()) {
        return false;
    }
    // if we're transitioning, update the accumulated portion based on transition time
    if (_transitioning) {
        _accum += (elapsed / _config.transition);
        if (_accum < 1f) {
            // still transitioning
            return false;
        }
        // done transitioning; fix accumulated frames and clear transition flag
        _accum = (_accum - 1f) * _config.transition * getFrameRate();
        _transitioning = false;
    // otherwise, based on frame rate
    } else {
        _accum += (elapsed * getFrameRate());
    }
    // advance the frame index and execute any actions
    int frames = (int) _accum;
    _accum -= frames;
    _fidx += frames;
    if (_fidx < 0) {
        // sanity check
        log.warning("Frame index went negative!", "anim", ((Animation) _parentScope)._name, "fidx", _fidx);
        _fidx = 0;
    }
    executeActions();
    // check for loop or completion
    int fcount = _config.transforms.length;
    if (_config.loop) {
        if (_fidx >= fcount) {
            _fidx %= fcount;
            _eidx = 0;
            executeActions();
        }
    } else if (_fidx >= fcount - 1) {
        _fidx = fcount - 1;
        _accum = 0f;
        _completed = true;
        ((Animation) _parentScope).stopped(true);
        return true;
    }
    return false;
}
