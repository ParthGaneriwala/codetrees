protected void processMetadata(Model metadata) {
    // there may be configuration for the location mapper in the ODM metadata file
    getFileManager().getLocationMapper().processConfig(metadata);
    // first we process the general policy statements for this document manager
    for (ResIterator i = metadata.listResourcesWithProperty(RDF.type, DOC_MGR_POLICY); i.hasNext(); ) {
        Resource policy = i.nextResource();
        // iterate over each policy statement
        for (StmtIterator j = policy.listProperties(); j.hasNext(); ) {
            Statement s = j.nextStatement();
            Property pred = s.getPredicate();
            if (pred.equals(CACHE_MODELS)) {
                setCacheModels(s.getBoolean());
            } else if (pred.equals(PROCESS_IMPORTS)) {
                setProcessImports(s.getBoolean());
            } else if (pred.equals(IGNORE_IMPORT)) {
                addIgnoreImport(s.getResource().getURI());
            } else if (pred.equals(USE_DECLARED_NS_PREFIXES)) {
                setUseDeclaredPrefixes(s.getBoolean());
            }
        }
    }
    // then we look up individual meta-data for particular ontologies
    for (ResIterator i = metadata.listResourcesWithProperty(RDF.type, ONTOLOGY_SPEC); i.hasNext(); ) {
        Resource root = i.nextResource();
        Statement s = root.getProperty(PUBLIC_URI);
        if (s != null) {
            // this will be the key in the mappings
            String publicURI = s.getResource().getURI();
            // there may be a cached copy for this ontology
            s = root.getProperty(ALT_URL);
            if (s != null)
                addAltEntry(publicURI, s.getResource().getURI());
            // there may be a standard prefix for this ontology
            s = root.getProperty(PREFIX);
            if (s != null) {
                // if the namespace doesn't end with a suitable split point character, add a #
                boolean endWithNCNameCh = XMLChar.isNCName(publicURI.charAt(publicURI.length() - 1));
                String prefixExpansion = endWithNCNameCh ? (publicURI + ANCHOR) : publicURI;
                addPrefixMapping(prefixExpansion, s.getString());
            }
            // there may be a language specified for this ontology
            s = root.getProperty(LANGUAGE);
            if (s != null)
                addLanguageEntry(publicURI, s.getResource().getURI());
        } else {
            log.warn("Ontology specification node lists no public URI - node ignored");
        }
    }
}
