public void setMyContact(ContactOperations myContact) {
    // TODO set Image
    if (myContact != null && myContact.getHeadImage() != null) {
        this.setContactHeadImage(myContact.getHeadImage().getMyImageIcon().getImage(), null);
    } else {
        this.setContactHeadImage(PhoneMeConstants.DEFAULT_IMAGE_URL);
        this.currentImagetURL = PhoneMeConstants.DEFAULT_IMAGE_URL;
    }
    if (myContact == null)
        return;
    ArrayList<String> temp = new ArrayList<String>();
    phoneNumberBox.setModel(new DefaultComboBoxModel((String[]) (temp.toArray(new String[0]))));
    if (myContact.getContactName() != null) {
        /*
			 * if(!nameField.isEditable()) { nameField.setVisible(true);
			 * nameField.setText(myContact.getContactName());
			 * nameField.setVisible(false); }
			 */
        // else
        getNameField().setText(myContact.getContactName());
    }
    if (myContact.getPhoneNumberList() != null) {
        phoneNumberBox.setModel(new DefaultComboBoxModel((String[]) (myContact.getPhoneNumberList()).toArray(new String[0])));
    }
    if (myContact.getEmailAddresseList() != null) {
        emailAddressBox.setModel(new DefaultComboBoxModel((String[]) (myContact.getEmailAddresseList()).toArray(new String[0])));
    }
    // TODO set contact Information
    if (myContact.getContactAddressList() != null) {
        contactAddressBox.setModel(new DefaultComboBoxModel((String[]) (myContact.getContactAddressList()).toArray(new String[0])));
    }
    if (myContact.getWorkingDepartmentList() != null) {
        workingDepartmentBox.setModel(new DefaultComboBoxModel((String[]) (myContact.getWorkingDepartmentList()).toArray(new String[0])));
    }
    if (myContact.getImContactInformationList() != null) {
        imContactInformationBox.setModel(new DefaultComboBoxModel((String[]) (myContact.getImContactInformationList()).toArray(new String[0])));
    }
    if (myContact.getContactBirthday() != null) {
        contactBirthdayField.setText(myContact.getContactBirthday());
    }
    if (myContact.getUrlList() != null) {
        urlListBox.setModel(new DefaultComboBoxModel((String[]) (myContact.getUrlList()).toArray(new String[0])));
    }
    if (myContact.getCommonLabelList() != null) {
        commonLabelListBox.setModel(new DefaultComboBoxModel((String[]) (myContact.getCommonLabelList()).toArray(new String[0])));
    }
    if (myContact.getGroupList() != null) {
        groupListBox.setModel(new DefaultComboBoxModel((String[]) (myContact.getGroupList()).toArray(new String[0])));
    }
    localRelationLabelList = myContact.getRelationLabelList();
    HashMap<Integer, ContactOperations> std = DataPool.getInstance().getAllContactISNMap();
    if (localRelationLabelList != null) {
        // init relationLabelList / relationLabelNameList
        relationLabelList = new HashMap<String, ArrayList<Integer>>();
        relationLabelNameList = new HashMap<String, ArrayList<String>>();
        for (RelationLabel t : localRelationLabelList) {
            String name = t.getLabelName();
            int iSN = t.getRelationObjectISN();
            if (relationLabelList.containsKey(name)) {
                relationLabelList.get(name).add(iSN);
                relationLabelNameList.get(name).add(std.get(iSN).getContactName());
            } else {
                ArrayList<Integer> toBeAddISN = new ArrayList<Integer>();
                toBeAddISN.add(iSN);
                relationLabelList.put(name, toBeAddISN);
                ArrayList<String> toBeAddName = new ArrayList<String>();
                toBeAddName.add(std.get(iSN).getContactName());
                relationLabelNameList.put(name, toBeAddName);
            }
        }
        if (relationLabelList.size() != 0 && relationLabelNameList.size() != 0) {
            // init relationLabelListBox / objectContactListBox;
            relationLabelListBox.setModel(new DefaultComboBoxModel((String[]) (relationLabelList.keySet()).toArray(new String[0])));
            objectContactListBox.setModel(new DefaultComboBoxModel((String[]) (relationLabelNameList.get(relationLabelListBox.getItemAt(0))).toArray(new String[0])));
        }
    }
    this.myContact = myContact;
}
