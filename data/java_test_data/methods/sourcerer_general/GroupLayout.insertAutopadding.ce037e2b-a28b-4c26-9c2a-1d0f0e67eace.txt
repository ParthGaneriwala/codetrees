void insertAutopadding(int axis, java.util.List leadingPadding, java.util.List trailingPadding, java.util.List leading, java.util.List trailing, boolean insert) {
    java.util.List newLeadingPadding = new ArrayList(leadingPadding);
    java.util.List newTrailingPadding = new ArrayList(1);
    java.util.List newLeading = new ArrayList(leading);
    java.util.List newTrailing = null;
    for (int counter = 0; counter < springs.size(); counter++) {
        Spring spring = getSpring(counter);
        if (spring instanceof AutopaddingSpring) {
            AutopaddingSpring padding = (AutopaddingSpring) spring;
            padding.setSources(newLeading);
            newLeading.clear();
            if (counter + 1 == springs.size()) {
                if (!(padding instanceof ContainerAutopaddingSpring))
                    trailingPadding.add(padding);
            } else {
                newLeadingPadding.clear();
                newLeadingPadding.add(padding);
            }
            continue;
        }
        if (newLeading.size() > 0 && insert) {
            AutopaddingSpring padding = new AutopaddingSpring();
            springs.add(counter--, padding);
            continue;
        }
        if (spring instanceof ComponentSpring) {
            ComponentSpring cSpring = (ComponentSpring) spring;
            if (!GroupLayout.isVisible(cSpring.getComponent()))
                continue;
            for (int i = 0; i < newLeadingPadding.size(); i++) ((AutopaddingSpring) newLeadingPadding.get(i)).add(cSpring, axis);
            newLeading.clear();
            newLeadingPadding.clear();
            if (counter + 1 == springs.size())
                trailing.add(cSpring);
            else
                newLeading.add(cSpring);
            continue;
        }
        if (spring instanceof Group) {
            if (newTrailing == null)
                newTrailing = new ArrayList(1);
            else
                newTrailing.clear();
            newTrailingPadding.clear();
            ((Group) spring).insertAutopadding(axis, newLeadingPadding, newTrailingPadding, newLeading, newTrailing, insert);
            newLeading.clear();
            newLeadingPadding.clear();
            if (counter + 1 == springs.size()) {
                trailing.addAll(newTrailing);
                trailingPadding.addAll(newTrailingPadding);
            } else {
                newLeading.addAll(newTrailing);
                newLeadingPadding.addAll(newTrailingPadding);
            }
        } else {
            newLeadingPadding.clear();
            newLeading.clear();
        }
    }
}
