public static void getDataAndCreateGraph(Graph graph) {
    try {
        String sparqlNif = "http://rdf.neuinfo.org/sparql";
        SparqlQuery bamsReader = new SparqlQuery(sparqlNif);
        String sparqlTalis = "http://api.talis.com/stores/neurolex/services/sparql";
        SparqlQuery cellReader = new SparqlQuery(sparqlTalis);
        SparqlQuery brainRegionReader = new SparqlQuery(sparqlTalis);
        String[] brainRegions = { "Globus_pallidus", "Caudoputamen", "Central_nucleus_of_amygdala", "Substantia_nigra_compact_part", "Ventral_tegmental_area", "Prelimbic_area", "Lateral_preoptic_area" };
        String[] brainRegionsCellData = { "Globus_pallidus", "Caudoputamen", "Central_nucleus_of_the_amygdala", "Substantia_nigra_pars_compacta", "Ventral_tegmental_area" };
        ConnectionStatementLoader.populate(bamsReader, brainRegions);
        NeuroLexDataLoader.populate(cellReader, brainRegionsCellData);
        BrainRegionDataLoader.populate(brainRegionReader, brainRegionsCellData);
        MultiHashMap<String, String> results = bamsReader.runSelectQuery();
        MultiHashMap<String, String> cellResults = cellReader.runSelectQuery();
        MultiHashMap<String, String> brainRegionResults = brainRegionReader.runSelectQuery();
        Node[] data = ConnectionStatementLoader.createNodesFromResults(brainRegions, results, brainRegionsCellData);
        NeuroLexDataLoader.storeData(data, cellResults);
        BrainRegionDataLoader.storeData(data, brainRegionResults);
        makeConnections(graph, data);
        for (Node node : data) {
            System.out.println("node: " + node.toString() + ", node URL: " + node.getMoreDetailURL());
        }
    } catch (Exception e) {
        System.out.println("Unrecoverable error!");
        e.printStackTrace();
        System.exit(1);
    }
}
