// --------------------------------------------------------------------------
@Test
public void testSvg1() throws IOException {
    File htmlFile = new File(sOutputDir, "Track2D_testSVG1.xhtml");
    int minXAxisValue = 90;
    int maxXAxisValue = 1002;
    Track2D rgTrack = createRandomGenesTrack(minXAxisValue, maxXAxisValue);
    rgTrack.addHighlightRegion((maxXAxisValue - minXAxisValue) / 2, (maxXAxisValue - minXAxisValue) / 2);
    /*
      Track2D snpTrack = createSNPTrack(minXAxisValue, maxXAxisValue);
      snpTrack.addHighlightRegion((maxXAxisValue - minXAxisValue)/2,
                                  (maxXAxisValue - minXAxisValue)/2);
*/
    List<Track2D> tracks = new ArrayList<Track2D>();
    tracks.add(rgTrack);
    // tracks.add(snpTrack);
    String title = "Track2D Examples";
    HTMLDoc htmlDoc = new HTMLDoc(Doctype.XHTML_1_0_TRANSITIONAL);
    HTML html = new HTML(title);
    html.setAttribute("xmlns", XMLNamespace.XHTML.getURI());
    html.setAttribute("xmlns:" + XMLNamespace.SVG.getPrefix(), XMLNamespace.SVG.getURI());
    html.setAttribute("xmlns:" + XMLNamespace.XLINK.getPrefix(), XMLNamespace.XLINK.getURI());
    htmlDoc.setRootNode(html);
    html.getHead().addJavascript(new TooltipJS().generateJS());
    // Add the CSS classes needed for popup menus
    html.getHead().addStyleTag(PopupMenuJS.generateCommonCSS());
    // Add the javascript needed for popup menus
    html.getHead().addJavascript(PopupMenuJS.generateCommonJavascript());
    for (Track2D track : tracks) {
        html.getHead().addSubtag(track.getJavascript());
    }
    Body body = html.getBody();
    body.br(2);
    Center center = body.addCenter();
    center.br(2);
    Table table = center.addTable().setWidth(rgTrack.getImageWidth());
    Th cell = table.addRow().addHeaderCell("Inline SVG Example of Track2D Tracks").setAlign(Align.CENTER).br(2);
    if (rgTrack.hasGenesOnStrand(Strand.FORWARD)) {
        cell.addSubtag(rgTrack.toSVG(Strand.FORWARD));
    // TODO usemap ?
    // String imageMapName = "rgTrackingMap_f";
    // body.addSubtag(rgTrack.getImageMap(Strand.FORWARD).setName(imageMapName));
    }
    /*
      if (snpTrack.hasGenesOnStrand(Strand.FORWARD))
      {
         cell.addSubtag(snpTrack.writeImageAsSvg(Strand.FORWARD));

//         String imageMapName = "snpTrackingMap_f";
//         body.addSubtag(snpTrack.getImageMap(Strand.FORWARD).setName(imageMapName));
      }

      File xAxisImageFile = new File(sOutputDir, "xAxis.jpg");
      FileOutputStream fileStream = new FileOutputStream(xAxisImageFile);
      snpTrack.writeXAxisImageAsJpeg(fileStream);  // TODO
      fileStream.close();

      cell.addImage(xAxisImageFile.getName()).setBorder(0);

*/
    cell.addSubtag(rgTrack.getXAxisAsSVG());
    if (rgTrack.hasGenesOnStrand(Strand.REVERSE)) {
        cell.addSubtag(rgTrack.toSVG(Strand.REVERSE));
    // cell.addSubtag(rgTrack.writeImageAsSvg(Strand.REVERSE));
    // String imageMapName = "rgTrackingMap_r";
    // body.addSubtag(rgTrack.getImageMap(Strand.REVERSE).setName(imageMapName));
    }
    /*
      if (snpTrack.hasGenesOnStrand(Strand.REVERSE))
      {
         cell.addSubtag(snpTrack.writeImageAsSvg(Strand.REVERSE));

//         String imageMapName = "snpTrackingMap_r";
//         body.addSubtag(snpTrack.getImageMap(Strand.REVERSE).setName(imageMapName));
      }
*/
    htmlDoc.toIndentedHTML(new PrintWriter(new FileOutputStream(htmlFile)), 3, 3);
// htmlDoc.toHTML(new PrintWriter(new FileOutputStream(htmlFile)));
}
