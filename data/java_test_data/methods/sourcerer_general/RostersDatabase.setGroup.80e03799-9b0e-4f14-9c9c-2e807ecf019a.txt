public void setGroup(String email, int groupNum) {
    if (isGroupBlocked(groupNum)) {
        try {
            connectRosterDatabase();
            PreparedStatement prep;
            rosterConnection.setAutoCommit(false);
            prep = rosterConnection.prepareStatement("update Roster set isGroupBlocked = ? where Email = ?;");
            prep.setBoolean(1, true);
            prep.setString(2, email);
            prep.addBatch();
            prep.executeBatch();
            rosterConnection.setAutoCommit(true);
            disconnectRosterDatabase();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    } else {
        try {
            connectRosterDatabase();
            PreparedStatement prep;
            rosterConnection.setAutoCommit(false);
            prep = rosterConnection.prepareStatement("update Roster set isGroupBlocked = ? where Email = ?;");
            prep.setBoolean(1, false);
            prep.setString(2, email);
            prep.addBatch();
            prep.executeBatch();
            rosterConnection.setAutoCommit(true);
            disconnectRosterDatabase();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    try {
        connectRosterDatabase();
        PreparedStatement prep;
        rosterConnection.setAutoCommit(false);
        prep = rosterConnection.prepareStatement("update Roster set GroupNumber = ? where Email = ?;");
        prep.setInt(1, groupNum);
        prep.setString(2, email);
        prep.addBatch();
        prep.executeBatch();
        rosterConnection.setAutoCommit(true);
        disconnectRosterDatabase();
    } catch (SQLException e) {
        e.printStackTrace();
    }
}
