public void expandModel(DefaultMutableTreeNode node) {
    try {
        int nodeIndex = nodeCollection.indexOf(node);
        String itemID = ((TreeItem) rawNodesCollection.get(nodeIndex)).getItemID();
        // returns all sub-nodes of the node clicked
        TreeItem[] rawLevel1SubNodes = builder.getAllSubNodesOf(itemID);
        int listIndex = 0;
        // for every sub-node of the node clicked
        for (int j = 0; j < rawLevel1SubNodes.length; j++) {
            // finds the index of the node in the collection of TreeItems maintained
            for (int k = 0; k < rawNodesCollection.size(); k++) {
                if (((TreeItem) rawNodesCollection.get(k)).getItemID().equals(rawLevel1SubNodes[j].getItemID())) {
                    listIndex = k;
                }
            }
            // returns all subNode TreeItems of the current childNode
            TreeItem[] rawLevel2SubNodes = builder.getAllSubNodesOf(rawLevel1SubNodes[j].getItemID());
            /* subsequent code creates arrays for the DefaulMutableTreeNode and
	        	 * IceUserObject elements of the tree nodes.
	        	 * Each node is constructed in a standard manner and then added to the
	        	 * appropriate parent node in the nodeCollection
	        	 * All collections are subsequently updated
	        	 */
            DefaultMutableTreeNode[] treeLevel2MutNodes = new DefaultMutableTreeNode[rawLevel2SubNodes.length];
            IceUserObject[] treeLevel2Branches = new IceUserObject[rawLevel2SubNodes.length];
            for (int k = 0; k < rawLevel2SubNodes.length; k++) {
                treeLevel2MutNodes[k] = new DefaultMutableTreeNode();
                treeLevel2Branches[k] = new IceUserObject(treeLevel2MutNodes[k]);
                treeLevel2Branches[k].setText(rawLevel2SubNodes[k].getLabel());
                treeLevel2MutNodes[k].setUserObject(treeLevel2Branches[k]);
                ((DefaultMutableTreeNode) nodeCollection.get(listIndex)).add(treeLevel2MutNodes[k]);
            }
            updateCollections(treeLevel2MutNodes, treeLevel2Branches, rawLevel2SubNodes);
        }
        checkLeaves();
        // finally the node is added to the nodesLoaded list to ensure it is not
        // loaded again
        nodesLoaded.add(node);
    } catch (Exception ex) {
        DefaultMutableTreeNode test = new DefaultMutableTreeNode();
        IceUserObject testObj = new IceUserObject(test);
        testObj.setText("Exception: " + ex);
        test.setUserObject(testObj);
        rootTreeNode.add(test);
    }
}
