public List<SysRight> getUserMenus(Set<SysRight> rights) {
    // 返回的menus
    Set<SysRight> menus = new HashSet<SysRight>();
    // 然后找到这个menu的上级是不是0或者层级是否1，如果不是，则往上翻，将这个menu对应的上级menu也翻出来
    Iterator<SysRight> menuIterator = rights.iterator();
    // 如果2个的parentcode相同,就不在比较了,因为父级已经找到了
    String parentcode = "";
    while (menuIterator.hasNext()) {
        SysRight menu = menuIterator.next();
        // parentcode + ",实际的上级=" + menu.getParentcode());
        if (!menu.getParentcode().equals(parentcode)) {
            parentcode = menu.getParentcode();
            List<SysRight> parentMenu = RightTree.getParentRights(menu.getRightcode());
            // 这个地方有个问题,就是会多次获得相同的上级信息,找个办法将这个解决掉
            for (int i = 0; i < parentMenu.size(); i++) {
                SysRight sysMenu = parentMenu.get(i);
                // + ",ISMENU=" + sysMenu.getIsmenu());
                if (// 如果这是一个菜单的话,就加入进来
                sysMenu.getIsmenu())
                    menus.add(sysMenu);
            }
        } else {
            LOG.debug("具有同样的上级菜单,不再做出处理");
        }
        // LOG.debug("将自己加入到菜单列表中::" + menu.getRightname());
        if (menu.getIsmenu())
            // menus.add(menu);// 将自己加入到菜单列表中
            menus.add(RightTree.rightMap.get(menu.getRightcode()));
    }
    LOG.debug("menus.size()::::::::::" + menus.size());
    menuIterator = menus.iterator();
    while (menuIterator.hasNext()) {
        SysRight right = menuIterator.next();
        if (right.getHasChild()) {
            List<SysRight> children = RightTree.getDirectChildRights(right.getRightcode(), sysUser.getRightList());
            Collections.sort(children, new RightComparator());
            right.setChildren(children);
        }
    }
    List<SysRight> list = new ArrayList<SysRight>();
    list.addAll(menus);
    // 将菜单排序
    Collections.sort(list, new RightComparator());
    menuIterator = list.iterator();
    while (menuIterator.hasNext()) {
        SysRight right = menuIterator.next();
        List<SysRight> children = right.getChildren();
        if (children != null) {
            LOG.debug("right:" + right.getRightname());
            for (SysRight r : children) {
                LOG.debug("children:" + r.getRightname());
            }
        }
    }
    menus.clear();
    menus = null;
    return list;
}
