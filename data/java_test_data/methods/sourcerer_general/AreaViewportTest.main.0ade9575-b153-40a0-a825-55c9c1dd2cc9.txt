public static void main(String[] args) {
    // TODO fix this
    final GameFrame frame = new GameFrame(new Model(null), false);
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    GameMap map = new GameMap(new GameMapID("Room 1"));
    map.addTerrain(new TerrainRegion(new RectangularRegion(new Angle(), 0, 0, 100, 100), Terrain.SPACE));
    final Entity avatar = new Brute(new CircularRegion(new Point2D(2, 3), 1), 1f, new GraphicID("Brute"), new SoundID("Brute"), false, 0);
    Entity enemy = new Sneak(new CircularRegion(new Point2D(5, 3), 1), 1f, new GraphicID("Brute"), new SoundID("Brute"), false, 0);
    map.add(avatar);
    map.add(enemy);
    PrototypeFactory<GraphicID, Drawable2D<Canvas2DFengGUI>> factory2D = new PrototypeFactory<GraphicID, Drawable2D<Canvas2DFengGUI>>();
    PrototypeFactory<GraphicID, Drawable3D<Canvas3DJOGL>> factory3D = new PrototypeFactory<GraphicID, Drawable3D<Canvas3DJOGL>>();
    GraphicID brute = new GraphicID("Brute");
    IsometricImageBoxGL box = new IsometricImageBoxGL(new File("data/graphics/box.png"), 1, 1, 1);
    TestSphereGL sphere = new TestSphereGL(1);
    TestRoomGL room = new TestRoomGL();
    EntityAnimator<Canvas3DJOGL, Drawable3DGL> em = new EntityAnimator<Canvas3DJOGL, Drawable3DGL>(sphere);
    EnvironmentDrawable<Canvas3DJOGL, Drawable3D<Canvas3DJOGL>> environ = new EnvironmentDrawable<Canvas3DJOGL, Drawable3D<Canvas3DJOGL>>(room);
    factory3D.add(brute, em);
    factory3D.add(new GraphicID("Room 1"), environ);
    // System.out.println(factory3D.containsID(new GraphicID("Brute")));
    frame.addViewable(new AreaViewport<Canvas2DFengGUI, Drawable2DFengGUI, Canvas3DJOGL, Drawable3DGL>(new Model(map, avatar), factory2D, factory3D));
    PhysicsEngine engine = new PhysicsEngine(map);
    Time time = new Time();
    time.addObserver(engine);
    time.start();
    KeyListener listener = new KeyListener() {

        @Override
        public void keyPressed(KeyEvent e) {
            if (e.getKeyChar() == 'w')
                avatar.startMoving(Vector2D.POS_I);
            else if (e.getKeyChar() == 's')
                avatar.stopMoving();
            else {
                // if (GameFrame.FULLSCREEN_EXCLUSIVE
                // && GraphicsEnvironment
                // .getLocalGraphicsEnvironment()
                // .getDefaultScreenDevice()
                // .isFullScreenSupported()) {
                // GraphicsEnvironment.getLocalGraphicsEnvironment()
                // .getDefaultScreenDevice().setFullScreenWindow(
                // null);
                // }
                System.exit(0);
            }
        }

        @Override
        public void keyReleased(KeyEvent e) {
        }

        @Override
        public void keyTyped(KeyEvent e) {
        }
    };
    frame.addKeyListener(listener);
}
