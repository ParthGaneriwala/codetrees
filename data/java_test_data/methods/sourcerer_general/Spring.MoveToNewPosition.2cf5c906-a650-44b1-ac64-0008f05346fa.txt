private static void MoveToNewPosition(DInterferenceGraph G) {
    double A, B, C, D, E, F, dx, dy;
    double xpos, ypos, xfrac, yfrac;
    xpos = mv.getPosition().x;
    ypos = mv.getPosition().y;
    int mvi = enumeration(mv.getPositionInGraph());
    findPartials(G, mv);
    A = partial_xx;
    B = partial_xy;
    C = -(partial_x);
    D = partial_yx;
    E = partial_yy;
    F = -(partial_y);
    dy = (A * F - C * D) / (A * E - B * D);
    dx = (C * E - B * F) / (A * E - B * D);
    while ((dy != 0) && (dx != 0)) {
        if (xpos + dx < xmin)
            xfrac = (xpos - xmin) / dx;
        else if (xpos + dx > xmax)
            xfrac = (xmax - xpos) / dx;
        else
            xfrac = 1;
        if (ypos + dy < ymin)
            yfrac = (ypos - ymin) / dy;
        else if (ypos + dy > ymax)
            yfrac = (ymax - ypos) / dy;
        else
            yfrac = 1;
        double x = xpos + dx;
        double y = ypos + dy;
        if (xfrac < yfrac) {
            xpos += dx * xfrac;
            dx *= (xfrac - 1);
            ypos += dy * xfrac;
            dy *= (1 - xfrac);
        } else if (yfrac < xfrac) {
            ypos += dy * yfrac;
            dy *= (yfrac - 1);
            xpos += dx * yfrac;
            dx *= (1 - yfrac);
        } else {
            xpos += dx;
            dx = 0;
            ypos += dy;
            dy = 0;
        }
    }
    // end while
    mv.setPosition(xpos, ypos);
}
