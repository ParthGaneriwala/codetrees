public boolean delete(Connection db, String baseFilePath) throws SQLException {
    if (this.getId() == -1) {
        throw new SQLException("Ticket ID not specified.");
    }
    boolean commit = db.getAutoCommit();
    try {
        if (commit) {
            db.setAutoCommit(false);
        }
        // Delete any documents
        FileItemList fileList = new FileItemList();
        fileList.setLinkModuleId(Constants.PROJECT_TICKET_FILES);
        fileList.setLinkItemId(this.getId());
        fileList.buildList(db);
        fileList.delete(db, baseFilePath);
        // Delete the ticket log
        PreparedStatement pst = db.prepareStatement("DELETE FROM ticketlog " + "WHERE ticketid = ?");
        pst.setInt(1, this.getId());
        pst.execute();
        // Delete the related project link
        pst = db.prepareStatement("DELETE FROM ticketlink_project " + "WHERE ticket_id = ? ");
        pst.setInt(1, this.getId());
        pst.execute();
        // Delete the distribution list
        pst = db.prepareStatement("DELETE FROM ticket_contacts " + "WHERE ticketid = ? ");
        pst.setInt(1, this.getId());
        pst.execute();
        Viewing.delete(db, id, TABLE, PRIMARY_KEY);
        // Delete the ticket
        pst = db.prepareStatement("DELETE FROM ticket " + "WHERE ticketid = ? ");
        pst.setInt(1, this.getId());
        pst.execute();
        pst.close();
        if (commit) {
            db.commit();
        }
    } catch (SQLException e) {
        if (commit) {
            db.rollback();
        }
        throw new SQLException(e.getMessage());
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
    return true;
}
