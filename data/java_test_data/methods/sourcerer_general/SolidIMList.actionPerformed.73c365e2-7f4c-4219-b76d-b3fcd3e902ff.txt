public void actionPerformed(java.awt.event.ActionEvent e) {
    System.out.println("actionPerformed()");
    JComboBox selectedSearchEngineMode = (JComboBox) e.getSource();
    String aSearchEngineMode = (String) selectedSearchEngineMode.getSelectedItem();
    int optionIndex = selectedSearchEngineMode(aSearchEngineMode);
    switch(optionIndex) {
        case 0:
            {
                optionIndex = 0;
                System.out.println("Contact List Search");
                // if(searchKey.getText()!= null && searchKey.getText() != "")
                // {
                // searchKey.setText("Contact List Search");
                System.out.println("1.listening its Text Field for new input...");
                searchKey.addActionListener(new java.awt.event.ActionListener() {

                    public void actionPerformed(java.awt.event.ActionEvent e) {
                        String UserIDSearchKey = searchKey.getText().trim();
                        System.out.println(UserIDSearchKey);
                        if (UserIDSearchKey != "") {
                            // RosterManager.deleteRoster(tobeRemove,
                            // aRoster);
                            // contactList.setListData(myRoster.getRosterString());
                            // contactList.repaint();
                            searchUser(UserIDSearchKey, 0);
                            contactList.addMouseListener(new java.awt.event.MouseAdapter() {

                                public void mouseClicked(java.awt.event.MouseEvent e) {
                                    if (e.getClickCount() == 2) {
                                        System.out.println("mouseClicked()");
                                        System.out.println("Restoring to all list..");
                                        contactList.setListData(rostCon.getallName());
                                        contactList.repaint();
                                    }
                                }
                            });
                        } else if (UserIDSearchKey == "") {
                            JOptionPane.showMessageDialog(null, "The list is empty!", "Error", 0);
                        }
                    }
                });
            // }
            // aNewSearch = null;
            }
            break;
        case 1:
            {
                System.out.println("Wikipedia Search");
                // searchKey.setText("Wikipedia Search");
                System.out.println("1.listening its Text Field for new input...");
                if (searchKey.getText() != null && !searchKey.getText().equals("")) {
                    System.out.println("xx" + searchKey.getText() + "xx");
                    String wikipemidaSearchKey = searchKey.getText().trim();
                    aWikiSearch = new WikiSearch();
                    aWikiSearch.setWikiSearchInfo("http://en.wikipedia.org/wiki/", wikipemidaSearchKey);
                    aWikiSearch.LaunchWikiSearch();
                    aWikiSearch.clrWikiSearch();
                    searchKey.setText("");
                }
            // aNewSearch = null;
            }
            break;
        case 2:
            {
                // optionIndex = 2;
                System.out.println("Dictionary Search");
                // searchKey.setText("Dictionary Search");
                System.out.println("1.listening the its Text Field for new input...");
                /*if(searchKey.getText() == null || searchKey.getText() == "")
								{
									searchKey.addActionListener(new java.awt.event.ActionListener() {
											public void actionPerformed(
													java.awt.event.ActionEvent e) {
												String dictionaryUrl = "http://dictionary.reference.com/browse/";
												String dictionarySearchKey = searchKey.getText().trim();
												aDictionarySearch = new DictionarySearch();
												aDictionarySearch.setDictionarySearchInfo(dictionaryUrl,dictionarySearchKey);
												aDictionarySearch.LaunchDictionarySearch();
												aDictionarySearch.clrDictionarySearch();
												searchKey.setText("");

											}
										});

								}*/
                if (searchKey.getText() != null && !searchKey.getText().equals("")) {
                    String dictionarySearchKey = searchKey.getText().trim();
                    aDictionarySearch = new DictionarySearch();
                    aDictionarySearch.setDictionarySearchInfo("http://dictionary.reference.com/browse/", dictionarySearchKey);
                    aDictionarySearch.LaunchDictionarySearch();
                    aDictionarySearch.clrDictionarySearch();
                    searchKey.setText("");
                }
            }
            break;
    }
}
