public void WriteBackChips() {
    String recordChipsString = "New personal bests for:";
    boolean atLeastOneNewRecord = false;
    DataOutputStream dosr2b = null;
    try {
        dosr2b = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(ORDERBOOK_DB)));
        for (int j = 2; j < orderBook[0].size(); j++) {
            dosr2b.writeInt(orderBook[0].elementAt(j));
            dosr2b.writeInt(orderBook[1].elementAt(j));
            dosr2b.writeInt(orderBook[2].elementAt(j));
            dosr2b.writeLong(orderBookTimeStamp.elementAt(j));
        }
        dosr2b.writeInt(99999);
        dosr2b.writeInt(0);
        dosr2b.writeInt(0);
        dosr2b.writeLong(System.currentTimeMillis());
    } catch (IOException e) {
        logException(e);
    } finally {
        FileHelper.closeQuietly(dosr2b);
    }
    DataOutputStream dosuu = null;
    try {
        dosuu = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(JACKPOT_DB)));
        dosuu.writeFloat(slotJackpot);
    } catch (IOException e) {
        logException(e);
    } finally {
        FileHelper.closeQuietly(dosuu);
    }
    String bTitle = "";
    for (int i = 0; i < userService.maxID; i++) {
        if (userService.users[i].getTotalValue() > userService.users[i].recordChips) {
            if (userService.users[i].getMasterPoints() > 9) {
                if (userService.users[i].getMasterPoints() > 29) {
                    bTitle = "(BGM)";
                } else {
                    bTitle = "(BM)";
                }
            } else {
                bTitle = "";
            }
            for (int j = 1; j < 40; j++) {
                if (userService.users[i].getTotalValue() >= (50000 * j)) {
                    if (userService.users[i].recordChips < j * 50000) {
                        if (userService.users[i].getMasterPoints() == 0) {
                            userService.masterHandleList[userService.masterCounter] = userService.users[i].handle;
                            userService.masterPointsList[userService.masterCounter] = userService.users[i].getMasterPoints() + 1;
                            userService.masterCounter = userService.masterCounter + 1;
                        }
                        userService.users[i].awardMasterPoints(1);
                        tellChannel("" + userService.users[i].handle + bTitle + " broke " + (j * 50000) + " chips and receives one Master point.");
                        sendLine("message " + userService.users[i].handle + " Congratulations on breaking " + (j * 50000) + " chips for the first time. You receive one Master point.");
                        break;
                    }
                } else {
                    break;
                }
            }
            userService.users[i].recordChips = userService.users[i].getTotalValue();
            recordChipsString = recordChipsString.concat(" " + userService.users[i].handle + bTitle + "(" + ((int) (Math.floor(userService.users[i].recordChips))) + ")");
            atLeastOneNewRecord = true;
        }
    }
    if (atLeastOneNewRecord) {
        tellChannel(recordChipsString);
    // sendLine("message Regionchamp "+recordChipsString.substring(9));
    }
    userService.savePlayerData();
}
