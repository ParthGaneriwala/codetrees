public static String makePackedStringSource(byte[] bi) {
    byte[] ba = to7Bit(bi);
    StringBuffer buf = new StringBuffer("String XXX = \\\n\"");
    int lineCount = 0;
    int i = 0;
    int len = ba.length;
    while (i < len) {
        int b = ba[i] & 0xff;
        if (b == '\b') {
            // backspace
            lineCount += 2;
            buf.append(bs);
            buf.append('b');
        } else if (b == '\t') {
            // tab
            lineCount += 2;
            buf.append(bs);
            buf.append('t');
        } else if (b == '\n') {
            // newline
            lineCount += 2;
            buf.append(bs);
            buf.append('n');
        } else if (b == '\f') {
            // formfeed
            lineCount += 2;
            buf.append(bs);
            buf.append('f');
        } else if (b == '\r') {
            // carriage return
            lineCount += 2;
            buf.append(bs);
            buf.append('r');
        } else if (b < 32) {
            // other control characters
            lineCount += 4;
            buf.append(bs);
            buf.append('0');
            if (b < 8) {
                // add leading zero
                buf.append('0');
                buf.append((char) (48 + b));
            } else {
                String octalRep = Integer.toString(b, 8);
                buf.append(octalRep);
            }
        } else if (b == '\"' || b == bs) {
            lineCount += 2;
            buf.append(bs);
            buf.append((char) b);
        } else {
            // ordinary printable characters
            lineCount++;
            buf.append((char) b);
        }
        if (lineCount > 59) {
            // line wrap at 60 characters
            lineCount = 0;
            buf.append("\" +\n\"");
        }
        ++i;
    }
    if (lineCount != 0)
        buf.append("\";\n");
    return buf.toString();
}
