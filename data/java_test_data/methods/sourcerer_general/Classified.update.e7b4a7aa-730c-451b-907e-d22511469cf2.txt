public int update(Connection db, boolean override) throws SQLException {
    if (this.getId() == -1) {
        throw new SQLException("ID was not specified");
    }
    if (!isValid()) {
        return -1;
    }
    int resultCount = 0;
    StringBuffer sql = new StringBuffer();
    sql.append("UPDATE project_classified " + "SET project_category_id = ?, " + "classified_category_id = ?,  " + "project_id = ?,  " + "title = ?, " + "description = ?, " + "amount = ?, " + "amount_currency = ?, " + "publish_date = ?, " + "expiration_date = ?, " + "enabled = ?, " + "modifiedby = ?, " + "modified = CURRENT_TIMESTAMP " + "WHERE classified_id = ? ");
    if (!override) {
        sql.append("AND modified = ? ");
    }
    int i = 0;
    PreparedStatement pst = db.prepareStatement(sql.toString());
    DatabaseUtils.setInt(pst, ++i, projectCategoryId);
    DatabaseUtils.setInt(pst, ++i, categoryId);
    DatabaseUtils.setInt(pst, ++i, projectId);
    pst.setString(++i, title);
    pst.setString(++i, description);
    DatabaseUtils.setDouble(pst, ++i, amount);
    pst.setString(++i, amountCurrency);
    pst.setTimestamp(++i, publishDate);
    pst.setTimestamp(++i, expirationDate);
    pst.setBoolean(++i, enabled);
    pst.setInt(++i, this.getModifiedBy());
    pst.setInt(++i, this.getId());
    if (!override) {
        pst.setTimestamp(++i, modified);
    }
    resultCount = pst.executeUpdate();
    pst.close();
    if (attachmentList != null) {
        FileItemList.convertTempFiles(db, Constants.PROJECT_CLASSIFIEDS_FILES, this.getModifiedBy(), id, attachmentList);
    }
    return resultCount;
}
