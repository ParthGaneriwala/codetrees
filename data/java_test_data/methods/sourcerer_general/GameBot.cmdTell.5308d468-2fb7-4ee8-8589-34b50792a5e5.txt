public boolean cmdTell(String handle, String msg) {
    if (mgrCmd(handle, msg))
        return true;
    B b = getPlayer(handle);
    if (b == null)
        b = getObs(handle);
    if (b != null && (msg.startsWith("#") || msg.toLowerCase().startsWith("kib") || msg.equalsIgnoreCase("say"))) {
        b.loudSpam(handle + ": " + msg.substring(1).trim());
        return true;
    }
    StringTokenizer ST = new StringTokenizer(msg);
    String S = "";
    if (ST.countTokens() > 0)
        S = ST.nextToken();
    switch(ST.countTokens()) {
        case 0:
            if (S.equalsIgnoreCase("Boards"))
                Serv.qSay(handle, showBoards());
            else if (S.equalsIgnoreCase("Open")) {
                openBoard(handle);
                joinBoard(handle, handle);
            } else if (S.equalsIgnoreCase("Start"))
                startBoard(handle);
            else if (S.equalsIgnoreCase("Close"))
                closeBoard(handle, true);
            else if (S.equalsIgnoreCase("Leave"))
                leaveBoard(handle);
            else if (S.equalsIgnoreCase("Unobs") && b != null)
                unobsBoard(handle, b.creator);
            else if (S.equalsIgnoreCase("players")) {
                Serv.say(handle, "Players at your board:");
                if (b != null)
                    Serv.qSay(handle, b.showPlayers());
                else
                    Serv.say(handle, "(No board)");
            } else if (S.equalsIgnoreCase("board")) {
                Serv.say(handle, "Current Board: ");
                if (b != null)
                    Serv.qSay(handle, b.showBoard(handle));
                else
                    Serv.say(handle, "(No board)");
            } else if (S.equalsIgnoreCase("show")) {
                // Serv.say(handle,"Your props:");
                if (b != null)
                    Serv.qSay(handle, b.showPlayer(handle));
                else
                    Serv.say(handle, "(No board)");
            } else if (S.equalsIgnoreCase("THREADS")) {
                Serv.qSay(handle, showThreads());
            } else if (S.equalsIgnoreCase("DUMP")) {
                Serv.qSay(handle, dump());
            } else
                return false;
            break;
        case 1:
            if (S.equalsIgnoreCase("Join"))
                joinBoard(handle, ST.nextToken());
            else if (S.equalsIgnoreCase("Obs"))
                obsBoard(handle, ST.nextToken());
            else if (S.equalsIgnoreCase("Unobs"))
                unobsBoard(handle, ST.nextToken());
            else if (S.equalsIgnoreCase("show")) {
                String p = ST.nextToken();
                Serv.say(handle, p + "'s props:");
                if (b != null)
                    Serv.qSay(handle, b.showPlayer(p));
                else
                    Serv.say(handle, "(No board)");
            } else if (b != null && S.equalsIgnoreCase("Verb")) {
                int v = MiscUtil.strToInt(ST.nextToken());
                Player p = b.getPlayer(handle);
                if (p != null && v >= 0 && v <= Player.MAXVERB) {
                    p.VERBOSITY = v;
                    Serv.say(handle, "Verbosity set to: " + v);
                } else
                    Serv.say(handle, "Bad verbosity, bud.");
            } else
                return false;
            break;
        default:
            return false;
    }
    return true;
}
