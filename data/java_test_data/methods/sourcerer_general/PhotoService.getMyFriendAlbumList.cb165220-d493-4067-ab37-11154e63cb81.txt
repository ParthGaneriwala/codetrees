public List getMyFriendAlbumList(int userid) {
    String sql = "select a.albumid,a.userid,a.photo_count,a.private_flag,a.create_time,a.album_name,a.url from sns_photo_album a inner join core_friend b on a.userid=b.friend_userid where b.userid=" + userid + " order by a.userid";
    List list = basicDAO.findBySqlQuery(sql);
    List<SnsPhotoAlbum> result = new ArrayList();
    int len = list == null ? 0 : list.size();
    int j = 0;
    boolean isnew = true;
    for (int i = 0; i < len; i++) {
        Object[] obj = (Object[]) list.get(i);
        SnsPhotoAlbum album = new SnsPhotoAlbum();
        album.setAlbumid(Integer.parseInt(obj[0].toString()));
        album.setUserid(Integer.parseInt(obj[1].toString()));
        album.setPhotoCount(obj[2] == null ? 0 : Integer.parseInt(obj[2].toString()));
        album.setPrivateFlag(obj[3] == null ? null : obj[3].toString());
        album.setCreateTime(obj[4] == null ? null : (Timestamp) obj[4]);
        album.setAlbumName((String) obj[5]);
        album.setUrl((String) obj[6]);
        // 第一次加入一个相册
        if (isnew && !album.getPrivateFlag().equals("2")) {
            result.add(album);
            j++;
            isnew = false;
        } else {
            if (j > 0) {
                // 判读是否是同一个人的相册
                if ((int) ((SnsPhotoAlbum) result.get(j - 1)).getUserid() == (int) album.getUserid()) {
                    // 判读这个相册是否比之前那个相册新 && 这个相册是否允许查看
                    if (((SnsPhotoAlbum) result.get(j - 1)).getCreateTime().before(album.getCreateTime()) && !album.getPrivateFlag().equals("2")) {
                        result.remove(j - 1);
                        result.add(album);
                    }
                } else // 若不是同一个人的相册并允许查看
                if (!album.getPrivateFlag().equals("2")) {
                    result.add(album);
                    j++;
                }
            }
        }
    }
    return result;
}
