private final int jjMoveNfa_0(int startState, int curPos) {
    int[] nextStates;
    int startsAt = 0;
    jjnewStateCnt = 22;
    int i = 1;
    jjstateSet[0] = startState;
    int j, kind = 0x7fffffff;
    for (; ; ) {
        if (++jjround == 0x7fffffff)
            ReInitRounds();
        if (curChar < 64) {
            long l = 1L << curChar;
            MatchLoop: do {
                switch(jjstateSet[--i]) {
                    case 0:
                        if ((0x3ff000000000000L & l) != 0L) {
                            if (kind > 10)
                                kind = 10;
                            jjCheckNAdd(14);
                        } else if ((0x2400L & l) != 0L) {
                            if (kind > 4)
                                kind = 4;
                        } else if (curChar == 39)
                            jjstateSet[jjnewStateCnt++] = 16;
                        else if (curChar == 36)
                            jjCheckNAdd(14);
                        else if (curChar == 38)
                            jjCheckNAdd(12);
                        else if (curChar == 37)
                            jjCheckNAdd(8);
                        else if (curChar == 40)
                            jjstateSet[jjnewStateCnt++] = 4;
                        if (curChar == 13)
                            jjstateSet[jjnewStateCnt++] = 1;
                        break;
                    case 1:
                        if (curChar == 10 && kind > 4)
                            kind = 4;
                        break;
                    case 2:
                        if (curChar == 13)
                            jjstateSet[jjnewStateCnt++] = 1;
                        break;
                    case 3:
                        if (curChar == 40)
                            jjstateSet[jjnewStateCnt++] = 4;
                        break;
                    case 5:
                        if ((0x3ff000000000000L & l) != 0L)
                            jjAddStates(0, 1);
                        break;
                    case 6:
                        if (curChar == 41 && kind > 6)
                            kind = 6;
                        break;
                    case 7:
                        if (curChar == 37)
                            jjCheckNAdd(8);
                        break;
                    case 8:
                        if ((0x3000000000000L & l) == 0L)
                            break;
                        if (kind > 7)
                            kind = 7;
                        jjCheckNAdd(8);
                        break;
                    case 10:
                        if ((0xff000000000000L & l) == 0L)
                            break;
                        if (kind > 8)
                            kind = 8;
                        jjstateSet[jjnewStateCnt++] = 10;
                        break;
                    case 11:
                        if (curChar == 38)
                            jjCheckNAdd(12);
                        break;
                    case 12:
                        if ((0x3ff000000000000L & l) == 0L)
                            break;
                        if (kind > 9)
                            kind = 9;
                        jjCheckNAdd(12);
                        break;
                    case 13:
                        if (curChar == 36)
                            jjCheckNAdd(14);
                        break;
                    case 14:
                        if ((0x3ff000000000000L & l) == 0L)
                            break;
                        if (kind > 10)
                            kind = 10;
                        jjCheckNAdd(14);
                        break;
                    case 15:
                        if (curChar == 39)
                            jjstateSet[jjnewStateCnt++] = 16;
                        break;
                    case 16:
                        jjstateSet[jjnewStateCnt++] = 17;
                        break;
                    case 17:
                        if (curChar == 39 && kind > 11)
                            kind = 11;
                        break;
                    case 19:
                        if ((0x3ff000000000000L & l) == 0L)
                            break;
                        if (kind > 5)
                            kind = 5;
                        jjstateSet[jjnewStateCnt++] = 19;
                        break;
                    case 20:
                        if ((0x3ff000000000000L & l) != 0L)
                            jjAddStates(2, 3);
                        break;
                    case 21:
                        if (curChar == 58 && kind > 12)
                            kind = 12;
                        break;
                    default:
                        break;
                }
            } while (i != startsAt);
        } else if (curChar < 128) {
            long l = 1L << (curChar & 077);
            MatchLoop: do {
                switch(jjstateSet[--i]) {
                    case 0:
                        if ((0x7fffffe87fffffeL & l) != 0L) {
                            if (kind > 5)
                                kind = 5;
                            jjCheckNAddStates(4, 6);
                        } else if (curChar == 64)
                            jjstateSet[jjnewStateCnt++] = 10;
                        if ((0x7e0000007eL & l) != 0L) {
                            if (kind > 10)
                                kind = 10;
                            jjCheckNAdd(14);
                        }
                        break;
                    case 4:
                    case 5:
                        if ((0x7fffffe87fffffeL & l) != 0L)
                            jjCheckNAddTwoStates(5, 6);
                        break;
                    case 9:
                        if (curChar == 64)
                            jjstateSet[jjnewStateCnt++] = 10;
                        break;
                    case 14:
                        if ((0x7e0000007eL & l) == 0L)
                            break;
                        if (kind > 10)
                            kind = 10;
                        jjCheckNAdd(14);
                        break;
                    case 16:
                        jjstateSet[jjnewStateCnt++] = 17;
                        break;
                    case 18:
                        if ((0x7fffffe87fffffeL & l) == 0L)
                            break;
                        if (kind > 5)
                            kind = 5;
                        jjCheckNAddStates(4, 6);
                        break;
                    case 19:
                        if ((0x7fffffe87fffffeL & l) == 0L)
                            break;
                        if (kind > 5)
                            kind = 5;
                        jjCheckNAdd(19);
                        break;
                    case 20:
                        if ((0x7fffffe87fffffeL & l) != 0L)
                            jjCheckNAddTwoStates(20, 21);
                        break;
                    default:
                        break;
                }
            } while (i != startsAt);
        } else {
            int i2 = (curChar & 0xff) >> 6;
            long l2 = 1L << (curChar & 077);
            MatchLoop: do {
                switch(jjstateSet[--i]) {
                    case 16:
                        if ((jjbitVec0[i2] & l2) != 0L)
                            jjstateSet[jjnewStateCnt++] = 17;
                        break;
                    default:
                        break;
                }
            } while (i != startsAt);
        }
        if (kind != 0x7fffffff) {
            jjmatchedKind = kind;
            jjmatchedPos = curPos;
            kind = 0x7fffffff;
        }
        ++curPos;
        if ((i = jjnewStateCnt) == (startsAt = 22 - (jjnewStateCnt = startsAt)))
            return curPos;
        try {
            curChar = input_stream.readChar();
        } catch (java.io.IOException e) {
            return curPos;
        }
    }
}
