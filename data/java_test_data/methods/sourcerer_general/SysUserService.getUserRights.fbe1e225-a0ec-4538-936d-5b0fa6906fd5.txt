private Set<SysRight> getUserRights(SysUser sysuser) {
    Set<SysRight> rightList = new HashSet<SysRight>();
    Map<String, SysRight> rightMap = new HashMap<String, SysRight>();
    // if (!sysuser.getLoginname().equals("admin")) {
    // 得到已经绑定好了的每人的权限
    Set<SysRight> rights = sysuser.getSysRights();
    // SysRole roles = sysUser.getSysRole(); // 这个人的登录权限都从sys_user_rights中得来
    if (rights != null && rights.size() != 0) {
        // 绑定了权限
        Iterator<SysRight> rightIterator = rights.iterator();
        while (rightIterator.hasNext()) {
            // 根据sys_user_right得到right信息
            SysRight right = rightIterator.next();
            rightList.add(right);
            rightMap.put(right.getRightcode(), right);
            LOG.debug(sysuser.getLoginname() + "绑定的权限::" + right.getRightcode() + "-" + right.getRightname());
        }
    }
    // if (roles != null && roles.size() != 0) {// 绑定了角色
    // Iterator<SysRole> roleIterator = roles.iterator();
    // while (roleIterator.hasNext()) {
    SysRole role = sysUser.getSysRole();
    LOG.debug(sysuser.getLoginname() + "绑定的角色::" + role.getRolename());
    Set<SysRight> rolerights = role.getSysRights();
    // 如果设定了角色的话,则一定就有权限
    Iterator<SysRight> rolerightIterator = rolerights.iterator();
    while (rolerightIterator.hasNext()) {
        SysRight right = rolerightIterator.next();
        LOG.debug("---" + role.getRolename() + "绑定的权限::" + right.getRightcode() + "-" + right.getRightname());
        rightList.add(right);
        rightMap.put(right.getRightcode(), right);
    }
    // 排除掉所在部门的功能
    SysGroup group = sysuser.getSysGroup();
    List excluderightcodes = new ArrayList();
    if (group != null && group.getGrouptype() >= 3) {
        excluderightcodes = sysUserDAO.find("select a.rightcode from SysGroupExcludeRights a where a.groupid=" + group.getGroupid());
    } else if (group != null && group.getGrouptype() == 2) {
        excluderightcodes = sysUserDAO.find("select a.rightcode from SysGroupExcludeRights a where a.groupid=" + group.getGroupid() + " or (a.groupid=" + group.getParentid() + " and a.recursion=1)");
    } else if (group != null && group.getGrouptype() == 1) {
        excluderightcodes = sysUserDAO.find("select a.rightcode from SysGroupExcludeRights a where a.groupid=" + group.getGroupid() + " or (a.groupid=" + group.getParentid() + " and a.recursion=1) or (a.groupid=" + group.getDirectgroup() + " and a.recursion=1)");
    }
    Iterator<String> iterator = rightMap.keySet().iterator();
    while (iterator.hasNext()) {
        String code = iterator.next();
        SysRight right = rightMap.get(code);
        if (excluderightcodes.contains(code))
            rightList.remove(right);
    }
    rightMap.clear();
    rightMap = null;
    return rightList;
}
