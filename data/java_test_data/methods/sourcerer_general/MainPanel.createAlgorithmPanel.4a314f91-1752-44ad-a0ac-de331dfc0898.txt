private JScrollPane createAlgorithmPanel() {
    JPanel choicePanel = new JPanel();
    choicePanel.setLayout(new BoxLayout(choicePanel, BoxLayout.Y_AXIS));
    JRadioButton algorithm1 = new JRadioButton("MCODE", currentParameters.getAlgorithm().equals(ParameterSet.MCODE));
    JRadioButton EAGLEButton = new JRadioButton("EAGLE", currentParameters.getAlgorithm().equals(ParameterSet.EAGLE));
    JRadioButton FAGECButton = new JRadioButton("FAG-EC", currentParameters.getAlgorithm().equals(ParameterSet.FAGEC));
    algorithm1.setToolTipText("Use K-Core-based MCODE algorithm.\nA K-Core is a subgraph with minimum degree of k");
    EAGLEButton.setToolTipText("Use maximal clique-based EAGLE algorithm.\n Overlapped clusters can be identified");
    FAGECButton.setToolTipText("Use fast hierarchical agglomerative FAG-EC algorithm");
    algorithm1.setActionCommand(ParameterSet.MCODE);
    EAGLEButton.setActionCommand(ParameterSet.EAGLE);
    FAGECButton.setActionCommand(ParameterSet.FAGEC);
    algorithm1.addActionListener(new AlgorithmAction());
    EAGLEButton.addActionListener(new AlgorithmAction());
    FAGECButton.addActionListener(new AlgorithmAction());
    ButtonGroup algorithmOptions = new ButtonGroup();
    algorithmOptions.add(algorithm1);
    algorithmOptions.add(EAGLEButton);
    algorithmOptions.add(FAGECButton);
    choicePanel.add(FAGECButton);
    choicePanel.add(algorithm1);
    choicePanel.add(EAGLEButton);
    choicePanel.setToolTipText("Please select an algorithm");
    JPanel options = new JPanel();
    options.setLayout(new BoxLayout(options, BoxLayout.Y_AXIS));
    option1 = createOptionsPanel1();
    option1.setVisible(currentParameters.getAlgorithm().equals("MCODE"));
    EAGLE = new EAGLEpanel();
    EAGLE.setVisible(currentParameters.getAlgorithm().equals("EAGLE"));
    FAGEC = new FAGECPanel();
    FAGEC.setVisible(currentParameters.getAlgorithm().equals("FAG-EC"));
    options.add(option1);
    options.add(EAGLE);
    options.add(FAGEC);
    JPanel p = new JPanel();
    p.setLayout(new BorderLayout());
    p.add(choicePanel, BorderLayout.NORTH);
    p.add(options, BorderLayout.CENTER);
    JScrollPane scrollPanel = new JScrollPane(p);
    scrollPanel.setBorder(BorderFactory.createTitledBorder("Algorithm"));
    return scrollPanel;
}
