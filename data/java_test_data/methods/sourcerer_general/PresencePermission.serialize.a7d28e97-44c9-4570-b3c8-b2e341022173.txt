public void serialize(final javax.xml.namespace.QName parentQName, final org.apache.axiom.om.OMFactory factory, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
    java.lang.String prefix = parentQName.getPrefix();
    java.lang.String namespace = parentQName.getNamespaceURI();
    if (namespace != null) {
        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
        if (writerPrefix != null) {
            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
        } else {
            if (prefix == null) {
                prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
            }
            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
            xmlWriter.writeNamespace(prefix, namespace);
            xmlWriter.setPrefix(prefix, namespace);
        }
    } else {
        xmlWriter.writeStartElement(parentQName.getLocalPart());
    }
    if (localPresenceAttribute == null) {
        throw new RuntimeException("presenceAttribute cannot be null!!");
    }
    localPresenceAttribute.serialize(new javax.xml.namespace.QName("http://www.tid.es/schema/parlayx/presence/notification/v1_1", "presenceAttribute"), factory, xmlWriter);
    namespace = "http://www.tid.es/schema/parlayx/presence/notification/v1_1";
    if (!namespace.equals("")) {
        prefix = xmlWriter.getPrefix(namespace);
        if (prefix == null) {
            prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
            xmlWriter.writeStartElement(prefix, "decision", namespace);
            xmlWriter.writeNamespace(prefix, namespace);
            xmlWriter.setPrefix(prefix, namespace);
        } else {
            xmlWriter.writeStartElement(namespace, "decision");
        }
    } else {
        xmlWriter.writeStartElement("decision");
    }
    if (false) {
        throw new RuntimeException("decision cannot be null!!");
    } else {
        xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDecision));
    }
    xmlWriter.writeEndElement();
    xmlWriter.writeEndElement();
}
