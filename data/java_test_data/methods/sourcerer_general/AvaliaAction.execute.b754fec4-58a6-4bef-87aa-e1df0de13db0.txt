@Override
public String execute() {
    clearErrorsAndMessages();
    if (adicionar != null) {
        adicionar = null;
        div = 0;
        if (nota01 > 0) {
            div = 1;
            if (nota01 > 10 || nota02 > 10 || nota03 > 10) {
                addActionMessage("As notas devem ser inferiores a 10.");
                return "view";
            } else {
                media = (nota01 + nota02 + nota03) / div;
                div = 0;
            }
            if (nota02 > 0) {
                div = 2;
                if (nota01 > 10 || nota02 > 10 || nota03 > 10) {
                    addActionMessage("As notas devem ser inferiores a 10.");
                    return "view";
                } else {
                    media = (nota01 + nota02 + nota03) / div;
                    div = 0;
                }
                if (nota03 > 0) {
                    div = 3;
                    if (nota01 > 10 || nota02 > 10 || nota03 > 10) {
                        addActionMessage("As notas devem ser inferiores a 10.");
                        return "view";
                    } else {
                        media = (nota01 + nota02 + nota03) / div;
                        div = 0;
                    }
                }
            }
        }
        /*if (nota01 != null && nota02 != null && nota03 != null)	{
				if (nota01 > 10 || nota02 > 10 || nota03 > 10)
				{
					addActionMessage("As notas devem ser inferiores a 10.");
					return "view";
				}
				media = (nota01 + nota02 + nota03)/3;
			}
			else{
				addActionMessage("Todas as notas devem ser preeenchidas");
				return "view";
			}*/
        Aluno aluno = recuperarAlunoAtualizado();
        Avalia avalia = new Avalia(nota01, nota02, nota03, media);
        TrabalhoPostado postado = trabalhoPostadoFacade.consultar(idPostado);
        avalia.setPostado(postado);
        avalia.setAluno(aluno);
        avaliaFacade.salvar(avalia);
        avalias = avaliaFacade.consultarAlunoTarefa(aluno.getId(), idTarefa);
        addActionMessage("A avalia��o foi adicionada corretamente.");
        return "view";
    }
    if (consultar != null) {
        consultar = null;
        if (idAvalia == null) {
            addActionMessage("Uma avalia��o deve ser selecionada.");
            return "view";
        }
        Avalia a = avaliaFacade.consultar(idAvalia);
        if (a != null) {
            id = a.getId();
            nota01 = a.getNota01();
            nota02 = a.getNota02();
            nota03 = a.getNota03();
            media = a.getMedia();
            idPostado = a.getPostado().getId();
            return "view";
        }
    }
    if (editar != null) {
        editar = null;
        div = 0;
        if (nota01 > 0) {
            div = 1;
            if (nota01 > 10 || nota02 > 10 || nota03 > 10) {
                addActionMessage("As notas devem ser inferiores a 10.");
                return "view";
            } else {
                media = (nota01 + nota02 + nota03) / div;
                div = 0;
            }
            if (nota02 > 0) {
                div = 2;
                if (nota01 > 10 || nota02 > 10 || nota03 > 10) {
                    addActionMessage("As notas devem ser inferiores a 10.");
                    return "view";
                } else {
                    media = (nota01 + nota02 + nota03) / div;
                    div = 0;
                }
                if (nota03 > 0) {
                    div = 3;
                    if (nota01 > 10 || nota02 > 10 || nota03 > 10) {
                        addActionMessage("As notas devem ser inferiores a 10.");
                        return "view";
                    } else {
                        media = (nota01 + nota02 + nota03) / div;
                        div = 0;
                    }
                }
            }
        }
        /*if (nota01 != null && nota02 != null && nota03 != null)	{
				if (nota01 > 10 || nota02 > 10 || nota03 > 10)
				{
					addActionMessage("As notas devem ser inferiores a 10.");
					return "view";
				}
				media = (nota01 + nota02 + nota03)/3;
			}
			else{
				addActionMessage("Todas as notas devem ser preeenchidas.");
				return "view";
			}*/
        if (idAvalia == null) {
            addActionMessage("Uma avalia��o deve ser selecionada.");
            return "view";
        }
        Aluno aluno = recuperarAlunoAtualizado();
        Avalia a = avaliaFacade.consultar(idAvalia);
        a.setNota01(nota01);
        a.setNota02(nota02);
        a.setMedia(media);
        a.setId(idAvalia);
        avaliaFacade.alterar(a);
        avalias = avaliaFacade.consultarAlunoTarefa(aluno.getId(), idTarefa);
        addActionMessage("A avalia��o foi editada corretamente.");
        return "view";
    }
    if (remover != null) {
        remover = null;
        Aluno aluno = recuperarAlunoAtualizado();
        Avalia a = avaliaFacade.consultar(idAvalia);
        if (a != null) {
            avaliaFacade.remover(a);
        }
        avalias = avaliaFacade.consultarAlunoTarefa(aluno.getId(), idTarefa);
        addActionMessage("A avalia��o foi removida corretamente.");
        return "view";
    }
    if (menu != null) {
        menu = null;
        return "menu";
    }
    return "menu";
}
