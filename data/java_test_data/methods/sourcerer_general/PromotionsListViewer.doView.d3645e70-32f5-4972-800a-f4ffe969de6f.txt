public String doView(RenderRequest request, RenderResponse response) throws Exception {
    // The JSP to show upon success
    String defaultView = VIEW_PAGE;
    // Determine the project container to use
    Project project = findProject(request);
    // Check the user's permissions
    User user = getUser(request);
    if (!ProjectUtils.hasAccess(project.getId(), user, "project-ads-view")) {
        throw new PortletException("Unauthorized to view in this project");
    }
    // Determine the database connection to use
    Connection db = useConnection(request);
    // Determine the paging url
    PortletURL renderURL = response.createRenderURL();
    renderURL.setParameter("portlet-action", "show");
    renderURL.setParameter("portlet-object", "promotions");
    String url = renderURL.toString();
    // Paging will be used for remembering several list view settings
    PagedListInfo pagedListInfo = getPagedListInfo(request, PAGED_LIST_INFO);
    pagedListInfo.setLink(url);
    // Load the records
    AdList adList = new AdList();
    adList.setProjectId(project.getId());
    adList.setPagedListInfo(pagedListInfo);
    // Limit the records displayed based on access
    if ("archived".equals(pagedListInfo.getListView()) && ProjectUtils.hasAccess(project.getId(), user, "project-ads-add")) {
        adList.setArchivedAds(Constants.TRUE);
    } else if ("unreleased".equals(pagedListInfo.getListView()) && ProjectUtils.hasAccess(project.getId(), user, "project-ads-add")) {
        adList.setUnreleasedAds(Constants.TRUE);
    } else if ("unpublished".equals(pagedListInfo.getListView()) && ProjectUtils.hasAccess(project.getId(), user, "project-ads-add")) {
        adList.setDraft(Constants.TRUE);
    } else {
        if (ProjectUtils.hasAccess(project.getId(), user, "project-ads-add")) {
            // show ALL records
            adList.setOverviewAll(true);
        } else {
            // show CURRENT records
            adList.setCurrentAds(Constants.TRUE);
        }
    }
    // Set the sort order
    pagedListInfo.setColumnToSortBy("a.expiration_date asc, a.publish_date desc");
    // Determine the current view
    String filter = getPageView(request);
    String filterParam = getPageParameter(request);
    // By Category
    if ("category".equals(filter)) {
        if ("-1".equals(filterParam)) {
            adList.setCheckNullCategoryId(true);
        } else {
            adList.setCategoryId(filterParam);
        }
    }
    // By Author
    if ("author".equals(filter)) {
        adList.setEnteredBy(filterParam);
    }
    // By Date
    if ("date".equals(filter)) {
        adList.setPublishedYearMonth(filterParam);
    }
    adList.buildList(db);
    request.setAttribute(PROMOTIONS_LIST, adList);
    // Record view
    PortalUtils.processSelectHook(request, adList);
    // JSP view
    return defaultView;
}
