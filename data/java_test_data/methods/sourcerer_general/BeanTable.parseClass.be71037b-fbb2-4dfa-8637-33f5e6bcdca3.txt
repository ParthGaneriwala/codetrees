private void parseClass() {
    methods = new LinkedHashMap();
    Method[] m = bean.getMethods();
    int modifiers;
    ArrayList columns = new ArrayList();
    String name;
    for (int i = 0; i < m.length; i++) {
        name = m[i].getName();
        modifiers = m[i].getModifiers();
        if ((name.startsWith("get")) && (!name.equals("getClass")) && (m[i].getParameterTypes().length == 0) && (!Modifier.isStatic(modifiers))) {
            methods.put(name, m[i]);
            methods.put(name.substring(3), m[i].getReturnType());
            columns.add(name.substring(3));
        } else if (name.startsWith("set")) {
            methods.put(name, m[i]);
        } else if (name.startsWith("avo")) {
            methods.put(name, m[i]);
        } else if ((name.startsWith("is")) && (m[i].getParameterTypes().length == 0) && (!Modifier.isStatic(modifiers))) {
            methods.put(name, m[i]);
            methods.put(name.substring(2), m[i].getReturnType());
            columns.add(name.substring(2));
        } else if ((name.startsWith("has")) && (!name.equals("hashCode")) && (m[i].getParameterTypes().length == 0) && (!Modifier.isStatic(modifiers))) {
            methods.put(name, m[i]);
            methods.put(name.substring(3), m[i].getReturnType());
            columns.add(name.substring(3));
        }
    }
    if (names == null) {
        names = new String[columns.size()];
        for (int i = 0; i < columns.size(); i++) {
            names[i] = (String) columns.get(i);
        }
    }
}
