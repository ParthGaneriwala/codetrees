public void actionPerformed(ActionEvent e) {
    // the key is the attribute value and the value is the number of times that value appears in the cluster
    HashMap attributeEnumerations = new HashMap();
    // First we want to see which attribute was selected in the combo box
    String attributeName = (String) ((JComboBox) e.getSource()).getSelectedItem();
    int selectionIndex = (int) ((JComboBox) e.getSource()).getSelectedIndex();
    // If its the generic 'please select' option then we don't do any enumeration
    if (!attributeName.equals("Please Select")) {
        // otherwise, we want to get the selected attribute's value for each node in the selected cluster
        for (Iterator i = complexes[selectedRow].getGPCluster().nodesIterator(); i.hasNext(); ) {
            Node node = (Node) i.next();
            // The attribute value will be stored as a string no matter what it is but we need an array list
            // because some attributes are maps or lists of any size
            ArrayList attributeValue = new ArrayList();
            // When we find the type, we get its value(s)
            if (Cytoscape.getNodeAttributes().getType(attributeName) == CyAttributes.TYPE_STRING) {
                attributeValue.add(Cytoscape.getNodeAttributes().getStringAttribute(node.getIdentifier(), attributeName));
            } else if (Cytoscape.getNodeAttributes().getType(attributeName) == CyAttributes.TYPE_FLOATING) {
                attributeValue.add(Cytoscape.getNodeAttributes().getDoubleAttribute(node.getIdentifier(), attributeName));
            } else if (Cytoscape.getNodeAttributes().getType(attributeName) == CyAttributes.TYPE_INTEGER) {
                attributeValue.add(Cytoscape.getNodeAttributes().getIntegerAttribute(node.getIdentifier(), attributeName));
            } else if (Cytoscape.getNodeAttributes().getType(attributeName) == CyAttributes.TYPE_BOOLEAN) {
                attributeValue.add(Cytoscape.getNodeAttributes().getBooleanAttribute(node.getIdentifier(), attributeName));
            } else if (Cytoscape.getNodeAttributes().getType(attributeName) == CyAttributes.TYPE_SIMPLE_LIST) {
                List valueList = Cytoscape.getNodeAttributes().getListAttribute(node.getIdentifier(), attributeName);
                for (Iterator vli = valueList.iterator(); vli.hasNext(); ) {
                    attributeValue.add(vli.next());
                }
            } else if (Cytoscape.getNodeAttributes().getType(attributeName) == CyAttributes.TYPE_SIMPLE_MAP) {
                Map valueMap = Cytoscape.getNodeAttributes().getMapAttribute(node.getIdentifier(), attributeName);
                for (Iterator vmki = valueMap.keySet().iterator(); vmki.hasNext(); ) {
                    String key = (String) vmki.next();
                    Object value = valueMap.get(key);
                    attributeValue.add(new String(key + " -> " + value));
                }
            }
            // Next we must make a non-repeating list with the attribute values and enumerate the repetitions
            for (Iterator avi = attributeValue.iterator(); avi.hasNext(); ) {
                Object aviElement = avi.next();
                if (aviElement != null) {
                    String value = aviElement.toString();
                    if (!attributeEnumerations.containsKey(value)) {
                        // If the attribute value appears for the first time, we give it an enumeration of 1 and add it to the enumerations
                        attributeEnumerations.put(value, new Integer(1));
                    } else {
                        // If it already appeared before, we want to add to the enumeration of the value
                        Integer enumeration = (Integer) attributeEnumerations.get(value);
                        enumeration = new Integer(enumeration.intValue() + 1);
                        attributeEnumerations.put(value, enumeration);
                    }
                }
            }
        }
    }
    modelEnumerator.listIt(attributeEnumerations);
    // Finally we make sure that the selection is stored so that all the cluster explorations are looking at the already selected attribute
    enumerationSelection = selectionIndex;
}
