public synchronized void wallBounce(String line) {
    StringTokenizer ST = new StringTokenizer(line);
    ST.nextToken(DG_DELIM);
    int id = Integer.parseInt(ST.nextToken(DG_DELIM));
    int t = Integer.parseInt(ST.nextToken(DG_DELIM));
    int h = Integer.parseInt(ST.nextToken(DG_DELIM));
    int s = Integer.parseInt(ST.nextToken(DG_DELIM));
    int x = Integer.parseInt(ST.nextToken(DG_DELIM));
    int y = Integer.parseInt(ST.nextToken(DG_DELIM));
    Point3d p = getPlank(s, x, y);
    int coord = 4 * coordMap[s][x][y];
    if (DEBUG) {
        blurb("Boink: " + id + "," + t + ": " + p);
        blurb(s + "," + x + "," + y);
        blurb("Coord: " + coord);
    }
    Point3d pt = setPlank(disco, coord, s, p);
    // check for powerup
    if (h < 0)
        undoPower(-h - 1, pt);
    else if (h > maxHits) {
        disco.setCoordinates(coord, NULL_COORD);
        newPower((h - maxHits) - 1, s, p);
    } else {
        // set colors
        Color3f c = new Color3f(cageCols[s]);
        c.scale(h / (float) maxHits);
        Color3f rc = new Color3f((float) (Math.random() * c.x), (float) (Math.random() * c.y), (float) (Math.random() * c.z));
        disco.setColor(coord, c);
        disco.setColor(coord + 1, c);
        disco.setColor(coord + 2, rc);
        disco.setColor(coord + 3, c);
    }
}
