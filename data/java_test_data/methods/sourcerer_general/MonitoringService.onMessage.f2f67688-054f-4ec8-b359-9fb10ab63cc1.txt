public void onMessage(Message message) {
    try {
        boolean flag1 = false;
        boolean flag2 = false;
        TextMessage msg = (TextMessage) message;
        String expression = msg.getText();
        String delim = "[\"]";
        String[] tokens = expression.split(delim);
        int val_systolic = Integer.parseInt(tokens[7].trim());
        int val_dystolic = Integer.parseInt(tokens[11].trim());
        if (compareList1.size() < NUMBER_CACHED_VALUES) {
            compareList1.add(val_systolic);
        } else {
            int avg_systolic = average(compareList1);
            int avg_dystolic = average(compareList2);
            int diff = 0;
            if (val_systolic > avg_systolic) {
                diff = val_systolic - avg_systolic;
            } else {
                diff = avg_systolic - val_systolic;
            }
            if (diff > avg_systolic / DEVIATION) {
                flag1 = true;
            }
            compareList1.remove(0);
            compareList1.add(val_systolic);
        }
        if (compareList2.size() < NUMBER_CACHED_VALUES) {
            compareList2.add(val_dystolic);
        } else {
            int avg_dystolic = average(compareList2);
            int diff = 0;
            if (val_dystolic > avg_dystolic) {
                diff = val_dystolic - avg_dystolic;
            } else {
                diff = avg_dystolic - val_dystolic;
            }
            if (diff > avg_dystolic / DEVIATION) {
                flag2 = true;
            }
            compareList2.remove(0);
            compareList2.add(val_dystolic);
        }
        if (flag1 || flag2) {
            send("{ \"patientID\" : \"" + Integer.toString((int) patientId) + "\",\"message\" : \"The patient needs assistance\" }");
        }
    } catch (JMSException e) {
        System.err.println("Error in OnMessage for Blood Pressure : Monitoring Service: " + e.getMessage());
    }
}
