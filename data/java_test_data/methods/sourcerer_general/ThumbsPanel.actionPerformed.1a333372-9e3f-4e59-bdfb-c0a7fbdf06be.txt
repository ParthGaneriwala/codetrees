public void actionPerformed(ActionEvent e) {
    JMenuItem itemClicked = (JMenuItem) e.getSource();
    if (itemClicked.getText().equals(GOOD_TEXT)) {
        _organism.setFitness(1.0);
        this.setBorder(BorderFactory.createLineBorder(Color.YELLOW, 5));
    } else if (itemClicked.getText().equals(GREAT_TEXT)) {
        _organism.setFitness(2.0);
        this.setBorder(BorderFactory.createLineBorder(Color.GREEN, 5));
    } else if (itemClicked.getText().equals(BAD_TEXT)) {
        _organism.setFitness(0.0);
        this.setBorder(BorderFactory.createLineBorder(Color.RED, 5));
    } else if (itemClicked.getText().equals(SAVE_COMPOSITION)) {
        File f = null;
        int returnVal = _fc.showSaveDialog(ThumbsPanel.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            f = _fc.getSelectedFile();
        } else {
            f = new File(System.getProperty("user.home") + System.getProperty("path.seperator") + _organism.toString() + ".jpg");
        }
        try {
            ImageUtils.writeImage(_organism.getComposition().getImage(), f);
        } catch (IOException e1) {
            // TODO Auto-generated catch block
            e1.printStackTrace();
        }
    } else if (itemClicked.getText().equals(VIEW_TREE)) {
        JFrame treeFrame = new JFrame();
        JTree treePane = new JTree(_organism.getComposition().getRoot().generateJTreeNode());
        treeFrame.setContentPane(new JScrollPane(treePane));
        treeFrame.setSize(300, 400);
        treeFrame.setVisible(true);
    } else if (itemClicked.getText().equals(LARGE_VIEW)) {
        JFrame imFrame = new JFrame();
        BufferedImage im = _organism.getComposition().getImage();
        JPanel imPanel = new JPanel(new GridLayout(1, 1));
        imPanel.add(new JLabel(new ImageIcon(im)));
        imFrame.setSize(im.getWidth(), im.getHeight());
        imFrame.setContentPane(imPanel);
        imFrame.setVisible(true);
    }
}
