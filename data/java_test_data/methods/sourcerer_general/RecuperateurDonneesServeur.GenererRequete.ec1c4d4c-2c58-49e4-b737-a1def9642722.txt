private String GenererRequete(TypeDonnee typeDonnee, ParametresQuery parametres) {
    StringBuilder requete = new StringBuilder();
    if (typeDonnee == TypeDonnee.LIGNECOMPTEREEL || typeDonnee == TypeDonnee.LIGNECOMPTEVIRTUEL) {
        int nocompte;
        if (typeDonnee == TypeDonnee.LIGNECOMPTEREEL) {
            nocompte = parametres.getComptes().get(0).getNoCompte();
        } else {
            ProprietaireInfos pprincipale = parametres.getProprietaires().get(0);
            Proprietaire p = Proprietaire.ChargerProprietaire(pprincipale);
            nocompte = p.RenvoyerCompteVirtuel(Monnaie.ChargerMonnaie(parametres.getMonnaies().get(0))).getNoCompte();
        }
        Date date = parametres.getDates().get(0);
        int nombreligne = parametres.getNombredeligne();
        int offset = parametres.getOffset();
        requete.append(String.format("SELECT * FROM transactions WHERE NoCompte = %d", nocompte));
        if (parametres.getNombreProprietaire() > 1) {
            requete.append(String.format(" AND Tiers = '%s'", parametres.getProprietaires().get(1).getNom()));
        }
        if (parametres.getNombreCategories() == 1) {
            // TODO(Clairette): Faire un truc pour pouvoir mettre plus que une categorie ici.
            String toutesLesCategories = parametres.getCategories().get(0).getDescendanceSousFormeDeString();
            requete.append(String.format(" AND Categorie IN (%s)", toutesLesCategories));
        }
        requete.append(String.format(" AND Date <= '%s' ORDER BY Date DESC, NoTransaction DESC", SQL_DATE_FORMAT.format(date)));
        requete.append(String.format(" LIMIT %d OFFSET %d", nombreligne, offset));
    } else if (typeDonnee.getVraiNom().equals("lignes dettes")) {
        ProprietaireInfos pprincipale = parametres.getProprietaires().get(0);
        MonnaieInfos monnaie = parametres.getMonnaies().get(0);
        CategorieInfos categorie = parametres.getCategories().get(0);
        Proprietaire p = Proprietaire.ChargerProprietaire(pprincipale);
        Monnaie m = Monnaie.ChargerMonnaie(monnaie);
        Compte c = p.RenvoyerCompteVirtuel(m);
        String ToutesLesCategories = categorie.getDescendanceSousFormeDeString();
        requete.append(String.format("SELECT Tiers,SUM(Somme) FROM transactions WHERE NoCompte = %d AND Categorie IN (%s) " + "GROUP BY Tiers", c.getNoCompte(), ToutesLesCategories));
    } else {
        throw new MonException("Serveur: Le type d'operation n'a pas ete reconnu");
    }
    return requete.toString();
}
