protected static void skinVertices(float[] source, float[] dest, Matrix4f[] boneMatrices, int[] boneIndices, float[] boneWeights, int nidx, int vidx, int dinc) {
    for (int sidx = 0, bidx = 0; sidx < source.length; ) {
        // retrieve the source normal and vertex
        float snx = source[sidx++], sny = source[sidx++], snz = source[sidx++];
        float svx = source[sidx++], svy = source[sidx++], svz = source[sidx++];
        // blend in the normal and vertex as transformed by each indexed bone matrix
        float dnx = 0f, dny = 0f, dnz = 0f;
        float dvx = 0f, dvy = 0f, dvz = 0f;
        for (int ii = 0; ii < 4; ii++) {
            Matrix4f m = boneMatrices[boneIndices[bidx]];
            float weight = boneWeights[bidx++];
            float m00 = m.m00, m10 = m.m10, m20 = m.m20;
            float m01 = m.m01, m11 = m.m11, m21 = m.m21;
            float m02 = m.m02, m12 = m.m12, m22 = m.m22;
            dnx += (m00 * snx + m10 * sny + m20 * snz) * weight;
            dny += (m01 * snx + m11 * sny + m21 * snz) * weight;
            dnz += (m02 * snx + m12 * sny + m22 * snz) * weight;
            dvx += (m00 * svx + m10 * svy + m20 * svz + m.m30) * weight;
            dvy += (m01 * svx + m11 * svy + m21 * svz + m.m31) * weight;
            dvz += (m02 * svx + m12 * svy + m22 * svz + m.m32) * weight;
        }
        // write the blended normal
        dest[nidx] = dnx;
        dest[nidx + 1] = dny;
        dest[nidx + 2] = dnz;
        nidx += dinc;
        // and vertex
        dest[vidx] = dvx;
        dest[vidx + 1] = dvy;
        dest[vidx + 2] = dvz;
        vidx += dinc;
    }
}
