protected void onRender(Element parent, int index) {
    super.onRender(parent, index);
    add(contentPanel);
    contentPanel.createPanel(IAttribute.NAME, "属性名称:", new TextBox());
    contentPanel.createPanel(IAttribute.GOODSTYPE, "所属商品类型：", lstGoodsType);
    // 加一个判断，动态创建属性分组控件
    // 。。。。
    // 。。。。
    List<ChoicePanel.Item> indexItems = new ArrayList<ChoicePanel.Item>();
    indexItems.add(new ChoicePanel.Item("不需要检索", "0"));
    indexItems.add(new ChoicePanel.Item("关键字检索", "1"));
    indexItems.add(new ChoicePanel.Item("范围检索", "2"));
    ChoicePanel showIndex = new ChoicePanel("0", indexItems);
    contentPanel.createPanel(IAttribute.INDEX, "能否进行检索:", showIndex);
    List<ChoicePanel.Item> linkedItems = new ArrayList<ChoicePanel.Item>();
    linkedItems.add(new ChoicePanel.Item("否", "0"));
    linkedItems.add(new ChoicePanel.Item("是", "1"));
    ChoicePanel showLinked = new ChoicePanel("0", linkedItems);
    contentPanel.createPanel(IAttribute.LINKED, "相同属性值的商品是否关联：", showLinked);
    List<ChoicePanel.Item> typeItems = new ArrayList<ChoicePanel.Item>();
    typeItems.add(new ChoicePanel.Item("否", "0"));
    typeItems.add(new ChoicePanel.Item("是", "1"));
    ChoicePanel showType = new ChoicePanel("0", typeItems);
    contentPanel.createPanel(IAttribute.TYPE, "属性是否可选：", showType);
    List<ChoicePanel.Item> inputTypeItems = new ArrayList<ChoicePanel.Item>();
    inputTypeItems.add(new ChoicePanel.Item("手工录入", "0"));
    inputTypeItems.add(new ChoicePanel.Item("从下面的列表中选择（一行代表一个可选值）", "1"));
    inputTypeItems.add(new ChoicePanel.Item("多行文本框", "2"));
    ChoicePanel showInputType = new ChoicePanel("0", inputTypeItems);
    contentPanel.createPanel(IAttribute.INPUTTYPE, "该属性值的录入方式：", showInputType);
    TextArea valuesArea = new TextArea();
    valuesArea.setSize("200", "100");
    contentPanel.createPanel(IAttribute.VALUES, "可选值列表：", valuesArea);
    HorizontalPanel panel = new HorizontalPanel();
    panel.setSpacing(10);
    btnNew.setText("确定");
    btnCancel.setText("重置");
    panel.add(btnNew);
    panel.add(btnCancel);
    contentPanel.createPanel(null, null, panel);
    btnNew.addClickListener(new ClickListener() {

        public void onClick(Widget sender) {
            String id = attribute != null ? attribute.getString(IGoodsType.ID) : null;
            attribute = new BeanObject(ModelNames.ATTRIBUTE, contentPanel.getValues());
            if (editting) {
                new UpdateService().updateBean(id, attribute, null);
                iShop.getInstance().displayGoodsTypeInfo();
                Info.display("恭喜", "完成编辑属性.");
            } else {
                new CreateService().createBean(attribute, new CreateService.Listener() {

                    public synchronized void onSuccess(String id) {
                        iShop.getInstance().displayGoodsTypeInfo();
                        Info.display("恭喜", "完成添加属性.");
                    }
                });
            }
        }
    });
    btnCancel.addClickListener(new ClickListener() {

        public void onClick(Widget sender) {
            contentPanel.clearValues();
        }
    });
}
