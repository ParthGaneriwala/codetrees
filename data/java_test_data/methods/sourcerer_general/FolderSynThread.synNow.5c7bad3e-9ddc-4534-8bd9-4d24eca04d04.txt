public static void synNow() {
    String path = peer.Config.getSynPath();
    File folderFile = new File(path);
    if (!folderFile.exists()) {
        folderFile.mkdir();
    }
    for (int i = 0; i < 5; i++) {
        try {
            URL url = null;
            url = new URL(Config.synFolderUrl);
            URLConnection ucn = url.openConnection();
            if ((ucn.getLastModified() - Config.getLastFolderSynTime()) / 1000 > 0 | !folderFile.exists() | first) {
                FilterInputStream in = (FilterInputStream) url.openStream();
                String fn = "synfolder" + peer.tools.RandomNum.randomInt() + ".zip";
                final File file = new File(fn);
                FileOutputStream out = new FileOutputStream(file);
                byte[] bytes = new byte[1024];
                int c;
                while ((c = in.read(bytes)) != -1) {
                    out.write(bytes, 0, c);
                }
                in.close();
                out.close();
                FileTools.cleanDir(path);
                try {
                    FileTools.unZip(fn, path);
                } catch (Exception e) {
                    e.printStackTrace();
                }
                file.delete();
                Config.setLastFolderSynTime(ucn.getLastModified());
            }
            Config.updateSynFolderLink();
            break;
        } catch (IOException e1) {
            // e1.printStackTrace();
            try {
                Thread.sleep(5000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}
