public void setDate(String d, TimeZone dftTMZ) throws DateParseException {
    String[] ds = StringTools.parseString(d, " _");
    String dt = (ds.length > 0) ? ds[0] : "";
    String tm = (ds.length > 1) ? ds[1] : "";
    String tz = (ds.length > 2) ? ds[2] : "";
    // Valid format: "YYYY/MM/DD [HH:MM:SS] [PST]"
    // Print.logInfo("Parsing " + dt + " " + tm + " " + tz);
    /* time-zone */
    TimeZone timeZone = null;
    if (ds.length > 2) {
        if (tz.equals("+0000") || tz.equals("-0000")) {
            timeZone = DateTime.getGMTTimeZone();
        } else if (DateTime.isValidTimeZone(tz)) {
            timeZone = DateTime.getTimeZone(tz);
        } else {
            throw new DateParseException("Invalid TimeZone: " + tz);
        }
    } else if ((ds.length > 1) && DateTime.isValidTimeZone(tm)) {
        tz = tm;
        tm = "";
        timeZone = DateTime.getTimeZone(tz);
    } else {
        timeZone = (dftTMZ != null) ? dftTMZ : this.getTimeZone();
    }
    // Print.logInfo("Timezone = " + timeZone);
    this.setTimeZone(timeZone);
    Calendar calendar = new GregorianCalendar(timeZone);
    /* date */
    int yr = -1, mo = -1, dy = -1;
    int d1 = dt.indexOf('/'), d2 = (d1 > 0) ? dt.indexOf('/', d1 + 1) : -1;
    if ((d1 > 0) && (d2 > d1)) {
        /* year */
        String YR = dt.substring(0, d1);
        yr = StringTools.parseInt(YR, -1);
        if ((yr >= 0) && (yr <= 49)) {
            yr += 2000;
        } else if ((yr >= 50) && (yr <= 99)) {
            yr += 1900;
        }
        if ((yr < 1900) || (yr > 2100)) {
            throw new DateParseException("Date/Year out of range: " + YR);
        }
        /* month */
        String MO = dt.substring(d1 + 1, d2);
        // 0 indexed
        mo = StringTools.parseInt(MO, -1) - 1;
        if ((mo < 0) || (mo > 11)) {
            throw new DateParseException("Date/Month out of range: " + MO);
        }
        /* seconds */
        String DY = dt.substring(d2 + 1);
        dy = StringTools.parseInt(DY, -1);
        if ((dy < 1) || (dy > 31)) {
            throw new DateParseException("Date/Day out of range: " + DY);
        }
    } else {
        throw new DateParseException("Invalid date format (Y/M/D): " + dt);
    }
    /* time */
    if (tm.equals("")) {
        // Print.logInfo("Just using YMD:" + yr + "/" + mo + "/" + dy);
        calendar.set(yr, mo, dy);
    } else {
        int hr = -1, mn = -1, sc = -1;
        int t1 = tm.indexOf(':'), t2 = (t1 > 0) ? tm.indexOf(':', t1 + 1) : -1;
        if (t1 > 0) {
            /* hour */
            String HR = tm.substring(0, t1);
            hr = StringTools.parseInt(HR, -1);
            if ((hr < 0) || (hr > 23)) {
                throw new DateParseException("Time/Hour out of range: " + HR);
            }
            if (t2 > t1) {
                /* minute */
                String MN = tm.substring(t1 + 1, t2);
                mn = StringTools.parseInt(MN, -1);
                if ((mn < 0) || (mn > 59)) {
                    throw new DateParseException("Time/Minute out of range: " + MN);
                }
                /* second */
                String SC = tm.substring(t2 + 1);
                sc = StringTools.parseInt(SC, -1);
                if ((sc < 0) || (sc > 59)) {
                    throw new DateParseException("Time/Second out of range: " + SC);
                }
                // Print.logInfo("Setting YMDHMS:" + yr + "/" + mo + "/" + dy+ " " + hr + ":" + mn + ":" + sc);
                calendar.set(yr, mo, dy, hr, mn, sc);
            } else {
                /* minute */
                String MN = tm.substring(t1 + 1);
                mn = StringTools.parseInt(MN, -1);
                if ((mn < 0) || (mn > 59)) {
                    throw new DateParseException("Time/Minute out of range: " + MN);
                }
                // Print.logInfo("Setting YMDHM:" + yr + "/" + mo + "/" + dy+ " " + hr + ":" + mn);
                calendar.set(yr, mo, dy, hr, mn);
            }
        } else {
            throw new DateParseException("Invalid time format (H:M:S): " + tm);
        }
    }
    /* ok */
    this.setTimeMillis(calendar.getTime().getTime());
}
