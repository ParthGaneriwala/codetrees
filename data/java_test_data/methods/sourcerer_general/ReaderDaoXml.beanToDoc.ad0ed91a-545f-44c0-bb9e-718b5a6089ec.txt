private Document beanToDoc(ReaderBean reader) {
    Document doc = XmlUtil.createDocument();
    Element root = doc.createElement("reader");
    doc.appendChild(root);
    XmlUtil.addElement(root, "name", reader.getName());
    XmlUtil.addElement(root, "auto-mode", reader.getAntenna());
    XmlUtil.addElement(root, "start-type", reader.getStartType());
    XmlUtil.addElement(root, "interval", reader.getInterval());
    XmlUtil.addElement(root, "antenna", reader.getAntenna());
    XmlUtil.addElement(root, "readerid", reader.getReaderid());
    XmlUtil.addElement(root, "chain-name", reader.getChainName());
    XmlUtil.addElement(root, "time-filter", reader.getTimeFilter());
    XmlUtil.addElement(root, "createdDate", DateUtil.getDateTime(reader.getCreatedDate()));
    Element driverElement = doc.createElement("driver");
    root.appendChild(driverElement);
    XmlUtil.addElement(driverElement, "communication-type", reader.getCommunicationType());
    XmlUtil.addElement(driverElement, "class", reader.getDriverClass());
    Element propertiesElement = doc.createElement("properties");
    driverElement.appendChild(propertiesElement);
    Properties p = reader.getP();
    Set<Object> propertySet = p.keySet();
    Iterator<Object> it = propertySet.iterator();
    while (it.hasNext()) {
        String name = (String) it.next();
        String value = p.getProperty(name);
        Element propertyElement = doc.createElement("property");
        XmlUtil.addElement(propertyElement, "name", name);
        XmlUtil.addElement(propertyElement, "value", value);
        propertiesElement.appendChild(propertyElement);
    }
    return doc;
}
