public void visit(Eprimcall n) throws TypeError {
    if (n.isMethodCall) {
        this.Emit("PUSHL " + this.mOffsetCurrentObject);
        this.VisitMethodCall(n.f, n.className, n.typeList, n.args, this.mOffsetCurrentObject, n.compatibleArgsList);
        return;
    }
    String typeRet = this.GetSymbolTable().GetPrimitiveType(n.f);
    if (typeRet.equals("unit")) {
        this.Emit("PUSHN 1");
    }
    if (n.f.equals(UtilsManager.msPrint)) {
        int count = n.typeList.size() - 1;
        for (int i = 0; i < count; i++) {
            String type = n.typeList.elementAt(i + 1);
            n.args.ElementAt(i).accept(this);
            if (type.equals("bool")) {
                String label_else = this.GetLabel();
                this.Emit("JZ " + label_else);
                String label_fin = this.GetLabel();
                this.Emit("PUSHS \"true\"");
                this.Emit("JUMP " + label_fin);
                this.EmitLabel(label_else);
                this.Emit("PUSHS \"false\"");
                this.EmitLabel(label_fin);
                this.Emit("WRITES ");
                continue;
            }
            if (type.equals("int")) {
                this.Emit("WRITEI");
                continue;
            }
            if (type.equals("string")) {
                this.Emit("WRITES");
                continue;
            }
        }
        return;
    }
    for (Iterator it = n.args.iterator(); it.hasNext(); ) {
        ((Expr) it.next()).accept(this);
    }
    this.Emit(this.GetUtils().GetCodeFromPrimitiveName(n.f));
}
