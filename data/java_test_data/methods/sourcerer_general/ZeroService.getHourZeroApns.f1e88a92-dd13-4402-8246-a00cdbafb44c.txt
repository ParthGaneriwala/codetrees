// /**
// * 得到某一天某个小时的流量为0的cell
// *
// * @param apnid
// * @param pageNo
// * @param pageSize
// * @return
// */
// public PaginationSupport getHourZeroCells(final String date, String hour,
// String orderby, int pageNo, int pageSize) {
// 
// String start = date + " " + hour + ":00:00";
// String end = date + " " + hour + ":59:59";
// long _start = com.sxit.stat.util.StatUtil.getDateHourTime(start) / 1000;
// long _end = com.sxit.stat.util.StatUtil.getDateHourTime(end) / 1000;
// 
// // int _start = getDfSec(start);
// // int _end = getDfSec(end);
// 
// int startIndex = (pageNo - 1) * pageSize;
// String countsql = "select count(*) from zero_cell where dayflag=0 and
// stattime>=" + _start + " and stattime<="
// + _end;
// String sql = "select * from(select a.*,rownum rn from(select * from
// zero_cell where dayflag=0 and stattime>="
// + _start + " and stattime<=" + _end + orderby + ") a where rownum<=" +
// (startIndex + pageSize)
// + ") where rn>" + startIndex;
// 
// int totalCount = jdbcTemplate.queryForInt(countsql);
// 
// Object object = jdbcTemplate.query(sql, new ResultSetExtractor() {
// public Object extractData(ResultSet rs) throws SQLException,
// DataAccessException {
// List list = new ArrayList();
// while (rs.next()) {
// ZeroCell model = new ZeroCell();
// model.setCellid(rs.getString("cellid"));
// model.setLac(rs.getString("lac"));
// 
// model.setAllvolume(rs.getFloat("allvolume"));
// model.setHistoryvolume(rs.getFloat("Historyvolume"));
// model.setPrehistoryvolume(rs.getFloat("Prehistoryvolume"));
// model.setStattime(rs.getInt("stattime"));
// model.setDayflag(1);
// list.add(model);
// }
// return list;
// }
// });
// List list = (List) object;
// 
// PaginationSupport ps = new PaginationSupport(list, totalCount, pageSize,
// startIndex);
// return ps;
// }
public List getHourZeroApns(final String date, String orderby, int starthour, int endhour) {
    String start = date + " " + starthour + ":00:00";
    String end = date + " " + endhour + ":00:00";
    if (orderby == null || orderby.equals(""))
        orderby = " order by orderby";
    // int _start = getDfSec(start);
    // int _end = getDfSec(end);
    Date thedate = com.sxit.stat.util.StatUtil.getDate(date);
    String date1 = df.format(com.sxit.stat.util.StatUtil.getPrevCountDate(thedate, 1));
    String date2 = df.format(com.sxit.stat.util.StatUtil.getPrevCountDate(thedate, 2));
    int _start = (int) (com.sxit.stat.util.StatUtil.getDateHourTime(start) / 1000);
    int _endstart = (int) (com.sxit.stat.util.StatUtil.getDateHourTime(end) / 1000);
    long _end = com.sxit.stat.util.StatUtil.getHourAfterTime(_endstart);
    int count = endhour - starthour + 1;
    // int startIndex = (pageNo - 1) * pageSize;
    // String countsql = "select count(*) from(select count(apnni) from
    // stat_apn_zero where dayflag=0 and stattime>="
    // + _start + " and stattime<=" + _end + " group by apnni having
    // count(apnni)>=" + count + ")";
    // System.out.println(countsql);
    String sql = "select stat_apn_zero.apnni,sum(allvolume) as allvolume from stat_apn_zero ,set_apn where stat_apn_zero.apnni=set_apn.apnni and dayflag=0 and stattime>=" + _start + " and stattime<=" + _end + " group by stat_apn_zero.apnni,set_apn.orderby having count(stat_apn_zero.apnni)>=" + count + orderby;
    System.out.println(sql);
    // int totalCount = jdbcTemplate.queryForInt(countsql);
    final Map<String, ZeroApn> zeroapnlist = new HashMap<String, ZeroApn>();
    final List<String> apnlist = new ArrayList<String>();
    Object object = jdbcTemplate.query(sql, new ResultSetExtractor() {

        public Object extractData(ResultSet rs) throws SQLException, DataAccessException {
            // List list = new ArrayList();
            while (rs.next()) {
                ZeroApn model = new ZeroApn();
                model.setApnni(rs.getString("apnni"));
                if (com.sxit.netquality.service.BasicSetService.ALL_APNS.containsKey(model.getApnni()))
                    model.setAllvolume((float) com.sxit.netquality.service.BasicSetService.ALL_APNS.get(model.getApnni()).getAllvolume());
                if (model.getAllvolume() > 0) {
                    // 总流量大于0的才显示
                    // model.set(rs.getFloat("allvolume"));
                    // model.setHistoryvolume(rs.getFloat("Historyvolume"));
                    // model.setPrehistoryvolume(rs.getFloat("Prehistoryvolume"));
                    // model.setStattime(rs.getInt("stattime"));
                    model.setDayflag(0);
                    // list.add(model);
                    zeroapnlist.put(model.getApnni(), model);
                    apnlist.add(model.getApnni());
                }
            }
            return null;
        }
    });
    getDateApnVolume(date1, apnlist, zeroapnlist, 1);
    getDateApnVolume(date2, apnlist, zeroapnlist, 2);
    List list = new ArrayList();
    for (String apnni : apnlist) {
        list.add(zeroapnlist.get(apnni));
    }
    zeroapnlist.clear();
    apnlist.clear();
    return list;
}
