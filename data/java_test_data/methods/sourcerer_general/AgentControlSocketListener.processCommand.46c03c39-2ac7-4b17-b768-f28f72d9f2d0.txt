public void processCommand(String cmd, PrintStream out) throws IOException {
    String[] words = cmd.split(" ");
    log.info("command from " + connection.getRemoteSocketAddress() + ":" + cmd);
    if (words[0].equalsIgnoreCase("help")) {
        out.println("you're talking to the Chukwa agent.  Commands available: ");
        out.println("add [adaptorname] [args] [offset] -- start an adaptor");
        out.println("shutdown [adaptornumber]  -- graceful stop");
        out.println("stop [adaptornumber]  -- abrupt stop");
        out.println("list -- list running adaptors");
        out.println("close -- close this connection");
        out.println("stopagent -- stop the whole agent process");
        out.println("help -- print this message");
        out.println("\t Command names are case-blind.");
    } else if (words[0].equalsIgnoreCase("close")) {
        connection.close();
    } else if (words[0].equalsIgnoreCase("add")) {
        long newID = agent.processCommand(cmd);
        if (newID != -1)
            out.println("OK add completed; new ID is " + newID);
        else
            out.println("failed to start adaptor...check logs for details");
    } else if (words[0].equalsIgnoreCase("shutdown")) {
        if (words.length < 2) {
            out.println("need to specify an adaptor to shut down, by number");
        } else {
            long num = Long.parseLong(words[1]);
            long offset = agent.stopAdaptor(num, true);
            if (offset != -1)
                out.println("OK adaptor " + num + " stopping gracefully at " + offset);
            else
                out.println("FAIL: perhaps adaptor " + num + " does not exist");
        }
    } else if (words[0].equalsIgnoreCase("stop")) {
        if (words.length < 2) {
            out.println("need to specify an adaptor to shut down, by number");
        } else {
            long num = Long.parseLong(words[1]);
            agent.stopAdaptor(num, false);
            out.println("OK adaptor " + num + " stopped");
        }
    } else if (words[0].equalsIgnoreCase("list")) {
        Map<Long, Adaptor> adaptorsByNumber = agent.getAdaptorList();
        System.out.println("number of adaptors: " + adaptorsByNumber.size());
        synchronized (adaptorsByNumber) {
            for (Map.Entry<Long, Adaptor> a : adaptorsByNumber.entrySet()) {
                try {
                    out.print(a.getKey());
                    out.print(") ");
                    out.print(" ");
                    out.println(formatAdaptorStatus(a.getValue()));
                } catch (AdaptorException e) {
                    log.error(e);
                }
            }
            out.println("");
        }
    } else if (words[0].equalsIgnoreCase("stopagent")) {
        out.println("stopping agent process.");
        connection.close();
        agent.shutdown(true);
    } else {
        log.warn("unknown command " + words[0]);
        out.println("unknown command" + words[0]);
        out.println("say 'help' for a list of legal commands");
    }
    out.flush();
}
