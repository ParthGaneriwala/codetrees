public static void startJob(StdScheduler quartz, ReaderForm2 form) throws Exception {
    HopelaEvenListener even = coms.remove(form.getName());
    if (even != null) {
        even.closePort();
        even = null;
    }
    even = new HopelaEvenListener();
    even.setBaudRate(115200);
    even.setCom(form.getComPort());
    even.setRadix(16);
    even.setProcessReturn(true);
    if (form.getModel().toUpperCase().equals("command".toUpperCase())) {
        if (!HopelaHelper.setAntenna(form.getComPort(), form.getAntenna(), 16)) {
            throw new Exception("Cannot read tag, please check the configuration!");
        }
        if (!HopelaHelper.testReadHopelaTag(form.getComPort(), 16)) {
            throw new Exception("Cannot read tag, please check the configuration!");
        }
        even.openPort();
        coms.put(form.getName(), even);
        JobDetail jobDetail = quartz.getJobDetail(form.getName(), null);
        if (jobDetail == null) {
            jobDetail = new JobDetail(form.getName(), null, HopelaJob.class);
        } else {
            quartz.deleteJob(form.getName(), null);
        }
        jobDetail.getJobDataMap().put("even", even);
        SimpleTrigger st = new SimpleTrigger();
        st.setStartTime(new Date());
        st.setRepeatCount(SimpleTrigger.REPEAT_INDEFINITELY);
        st.setRepeatInterval(30);
        st.setName("hopelaTrigger");
        quartz.scheduleJob(jobDetail, st);
    } else {
        if (HopelaHelper.setWritePara(form.getComPort(), "40 22 09 08 A0 01 03 03 02 00 00 FF 04 03 02 1E 04 1C 05 02 3F 02 00 2C EE 12 00 14 0E 0F 01 AC EE 12 00 4C", 16)) {
            even.openPort();
            coms.put(form.getName(), even);
        }
    }
}
