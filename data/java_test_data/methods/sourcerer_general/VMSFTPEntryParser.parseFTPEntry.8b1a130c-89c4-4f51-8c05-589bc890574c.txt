public FTPFile parseFTPEntry(String entry) {
    // one block in VMS equals 512 bytes
    long longBlock = 512;
    if (matches(entry)) {
        FTPFile f = new FTPFile();
        f.setRawListing(entry);
        String name = group(1);
        String size = group(2);
        String datestr = group(3) + " " + group(4);
        String owner = group(5);
        String[] permissions = new String[3];
        permissions[0] = group(9);
        permissions[1] = group(10);
        permissions[2] = group(11);
        try {
            f.setTimestamp(super.parseTimestamp(datestr));
        } catch (ParseException e) {
        // intentionally do nothing
        }
        String grp;
        String user;
        StringTokenizer t = new StringTokenizer(owner, ",");
        switch(t.countTokens()) {
            case 1:
                grp = null;
                user = t.nextToken();
                break;
            case 2:
                grp = t.nextToken();
                user = t.nextToken();
                break;
            default:
                grp = null;
                user = null;
        }
        if (name.lastIndexOf(".DIR") != -1) {
            f.setType(FTPFile.DIRECTORY_TYPE);
        } else {
            f.setType(FTPFile.FILE_TYPE);
        }
        // Check also for versions to be returned or not
        if (isVersioning()) {
            f.setName(name);
        } else {
            name = name.substring(0, name.lastIndexOf(";"));
            f.setName(name);
        }
        // size is retreived in blocks and needs to be put in bytes
        // for us humans and added to the FTPFile array
        long sizeInBytes = Long.parseLong(size) * longBlock;
        f.setSize(sizeInBytes);
        f.setGroup(grp);
        f.setUser(user);
        // iterate for OWNER GROUP WORLD permissions
        for (int access = 0; access < 3; access++) {
            String permission = permissions[access];
            f.setPermission(access, FTPFile.READ_PERMISSION, permission.indexOf('R') >= 0);
            f.setPermission(access, FTPFile.WRITE_PERMISSION, permission.indexOf('W') >= 0);
            f.setPermission(access, FTPFile.EXECUTE_PERMISSION, permission.indexOf('E') >= 0);
        }
        return f;
    }
    return null;
}
