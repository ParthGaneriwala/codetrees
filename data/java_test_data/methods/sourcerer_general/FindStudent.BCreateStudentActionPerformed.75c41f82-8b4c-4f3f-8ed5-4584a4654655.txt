// </editor-fold>
private void BCreateStudentActionPerformed(java.awt.event.ActionEvent evt) {
    try {
        SjsuUniversity sjsu = (SjsuUniversity) Naming.lookup("rmi://localhost/SJSU");
        StudentSearchCriteria temp = new StudentSearchCriteria();
        StudentSearchCriteria criteria = temp.getStudentSearchCriteriaInstance();
        ArrayList<StudentVO> student;
        if ((TStudentID.getText() != null) && (!TStudentID.getText().equals(""))) {
            criteria.searchByStudentId(TStudentID.getText());
        }
        if ((TFirstName.getText() != null) && (!TFirstName.getText().equals(""))) {
            criteria.searchByFirstName(TFirstName.getText());
        }
        if ((TLastName.getText() != null) && (!TLastName.getText().equals(""))) {
            criteria.searchByLastName(TLastName.getText());
        }
        if ((TAddress.getText() != null) && (!TAddress.getText().equals(""))) {
            criteria.searchByAddress(TAddress.getText());
        }
        if ((TCity.getText() != null) && (!TCity.getText().equals(""))) {
            criteria.searchByCity(TCity.getText());
        }
        if ((TZip.getText() != null) && (!TZip.getText().equals(""))) {
            criteria.searchByZip(Integer.parseInt(TZip.getText()));
        }
        if ((CState.getSelectedItem() != null) && (!CState.getSelectedItem().equals(""))) {
            criteria.searchByState(CState.getSelectedItem().toString());
        }
        if ((CStudentType.getSelectedItem() != null) && (!CStudentType.getSelectedItem().equals(""))) {
            criteria.searchByStudentType(CStudentType.getSelectedItem().toString());
        }
        student = sjsu.findStudents(criteria);
        for (Iterator iter = student.iterator(); iter.hasNext(); ) {
            StudentVO element = (StudentVO) iter.next();
            element.getFisrtName();
            element.getStudentId();
        }
        FindStudentResult list = new FindStudentResult(student);
        list.setSize(900, 700);
        list.setVisible(true);
        this.setVisible(false);
    } catch (Exception e) {
        e.printStackTrace();
    }
}
