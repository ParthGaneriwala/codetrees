// }}}
// {{{ paint() method
@Override
public void paint(Graphics _gfx) {
    Graphics2D gfx = textArea.repaintMgr.getGraphics();
    gfx.setRenderingHints(renderingHints);
    fontRenderContext = gfx.getFontRenderContext();
    Rectangle clipRect = _gfx.getClipBounds();
    JEditBuffer buffer = textArea.getBuffer();
    int lineHeight = fm.getHeight();
    if (lineHeight == 0 || buffer.isLoading()) {
        _gfx.setColor(getBackground());
        _gfx.fillRect(clipRect.x, clipRect.y, clipRect.width, clipRect.height);
    } else {
        long prepareTime = System.currentTimeMillis();
        FastRepaintManager.RepaintLines lines = textArea.repaintMgr.prepareGraphics(clipRect, textArea.getFirstLine(), gfx);
        prepareTime = (System.currentTimeMillis() - prepareTime);
        long linesTime = System.currentTimeMillis();
        int numLines = (lines.last - lines.first + 1);
        int y = lines.first * lineHeight;
        gfx.fillRect(0, y, getWidth(), numLines * lineHeight);
        extensionMgr.paintScreenLineRange(textArea, gfx, lines.first, lines.last, y, lineHeight);
        linesTime = (System.currentTimeMillis() - linesTime);
        textArea.repaintMgr.setFastScroll(clipRect.equals(new Rectangle(0, 0, getWidth(), getHeight())));
        long blitTime = System.currentTimeMillis();
        textArea.repaintMgr.paint(_gfx);
        blitTime = (System.currentTimeMillis() - blitTime);
        if (Debug.PAINT_TIMER && numLines >= 1)
            Log.log(Log.DEBUG, this, "repainting " + numLines + " lines took " + prepareTime + "/" + linesTime + "/" + blitTime + " ms");
    }
    textArea.updateMaxHorizontalScrollWidth();
}
