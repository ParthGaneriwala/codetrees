protected String go() throws JDBCException, HibernateException {
    // ServletActionContext c=null;
    if (thecontent == null) {
        this.message = "材料内容不能为空,请务必输入";
        return "message";
    }
    Timestamp timestamp = new java.sql.Timestamp(System.currentTimeMillis());
    if (upload != null) {
        for (int i = 0; i < upload.length; i++) {
            File uploadfile = upload[i];
            if (uploadfile == null)
                continue;
            String extendPath = "/uploads/";
            String name = new java.text.SimpleDateFormat("yyyyMMddHHmmss").format(new java.util.Date());
            String toPath = ServletActionContext.getServletContext().getRealPath("") + extendPath;
            String ext = getExtention(this.uploadFileName[i]);
            String filename = name + ext;
            try {
                // 创建目录
                FileUtils.forceMkdir(new File(toPath));
                File dest = new File(toPath + filename);
                // 移动文件
                FileUtils.copyFile(uploadfile, dest);
                // 将上传的文件保存
                TlawFiles file = new TlawFiles();
                file.setFilename(this.uploadFileName[i]);
                file.setPath(toPath + filename);
                file.setRemarks("上传的诉讼材料文件");
                file.setUploadtime(new java.sql.Timestamp(System.currentTimeMillis()));
                file.setUploaduserid(this.curuser.getUserid());
                file.setUploadusername(this.curuser.getUsername());
                file.setType(2);
                file.setNodeid(nodeid);
                file.setActionid(actionid);
                file.setActionid(actionid);
                getSession().save(file);
            } catch (IOException e) {
                message = "文件上传错误：" + e.getMessage();
            }
        }
    }
    if (isedit) {
        susong = (TlawSusong) getSession().get(TlawSusong.class, caseid);
        susong.setThecontent(Hibernate.createClob(thecontent));
        getSession().update(susong);
        message = "诉讼案件诉状材料修改成功";
        super.saveOperlog("修改案件诉状材料", 2);
    } else {
        susong = new TlawSusong();
        susong.setCaseid(caseid);
        susong.setThecontent(Hibernate.createClob(thecontent));
        susong.setCreatetime(timestamp);
        susong.setCreateuserid(this.curuser.getUserid());
        susong.setCreateusername(this.curuser.getUsername());
        susong.setCreateuserid(this.curuser.getUserid());
        susong.setCreateusername(this.curuser.getUsername());
        super.saveOperlog("记录案件诉状材料", 1);
        getSession().save(susong);
        // 提交了诉状材料后,更新案件的状体为审批状态
        // getSession().createSQLQuery("update tlaw_lawcase set nodeid=21004
        // where caseid="+caseid).executeUpdate();
        com.changpeng.lawcase.service.LawcaseService.updateStageDate(getSession(), caseid, "susongtijiaodate", dfyyyymmdd.format(new java.util.Date()));
        this.message = "诉讼案件诉状材料新增成功";
    }
    // TwflNode node = (TwflNode) getSession().get(TwflNode.class, nodeid);
    // Set<TwflDirection> directons = node.getToNode();
    // Iterator<TwflDirection> tonodes = directons.iterator();
    // if (directons.size() == 1) {
    // nodeid = tonodes.next().getToNode().getNodeid();
    // } else {
    // while (tonodes.hasNext()) {
    // TwflDirection d = tonodes.next();
    // if (d.getDescription() != null && tonext != null &&
    // d.getDescription().equals(tonext))
    // nodeid = d.getToNode().getNodeid();
    // }
    // }
    TwflNode nextnode = com.changpeng.lawcase.util.LawcaseUtil.getNextNode(getSession(), nodeid, tonext);
    if (nextnode == null) {
        this.message = "下一个节点为空,请联系管理员";
        return "message";
    }
    this.nodeid = nextnode.getNodeid();
    this.btnvalue = "提交到下一节点:" + nextnode.getNodename();
    return "flowmessage";
}
