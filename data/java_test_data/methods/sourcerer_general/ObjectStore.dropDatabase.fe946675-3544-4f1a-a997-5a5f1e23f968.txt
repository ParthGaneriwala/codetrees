public boolean dropDatabase(String dbname) {
    boolean success = false;
    boolean commited = false;
    try {
        openTransaction();
        // first drop tables
        dbname = dbname.toLowerCase();
        LOG.info("Dropping database along with all tables " + dbname);
        Query q1 = pm.newQuery(MTable.class, "database.name == dbName");
        q1.declareParameters("java.lang.String dbName");
        List<MTable> mtbls = (List<MTable>) q1.execute(dbname.trim());
        pm.deletePersistentAll(mtbls);
        // then drop the database
        Query query = pm.newQuery(MDatabase.class, "name == dbName");
        query.declareParameters("java.lang.String dbName");
        query.setUnique(true);
        MDatabase db = (MDatabase) query.execute(dbname.trim());
        pm.retrieve(db);
        // MDatabase db = (MDatabase) pm.getObjectById(id);
        if (db != null)
            pm.deletePersistent(db);
        commited = commitTransaction();
        success = true;
    } catch (JDOObjectNotFoundException e) {
        LOG.debug("database not found " + dbname, e);
        commited = commitTransaction();
    } finally {
        if (!commited) {
            rollbackTransaction();
            success = false;
        }
    }
    return success;
}
