public static void approvationMail(ClivetRegistration clivetRegistration, String type, long userId, long toId) {
    try {
        User userObj = UserLocalServiceUtil.getUserById(toId);
        User user = UserLocalServiceUtil.getUserById(userId);
        Company company = CompanyLocalServiceUtil.getCompanyById(user.getCompanyId());
        String fromName = PrefsPropsUtil.getString(user.getCompanyId(), PropsKeys.ADMIN_EMAIL_FROM_NAME);
        String fromAddress = PrefsPropsUtil.getString(user.getCompanyId(), PropsKeys.ADMIN_EMAIL_FROM_ADDRESS);
        String toName = user.getFirstName();
        String toAddress = user.getEmailAddress();
        String body = "";
        String subject = "";
        subject = PrefsPropsUtil.getContent(user.getCompanyId(), "email.message.approvationSubject");
        if (type.equals("role")) {
            body = PrefsPropsUtil.getContent(user.getCompanyId(), "email.message.role");
            body = StringUtil.replace(body, new String[] { "[$FROM_ADDRESS$]", "[$FROM_NAME$]", "[$PORTAL_URL$]", "[$TO_NAME$]", "[$EMAIL$]" }, new String[] { fromAddress, fromName, company.getVirtualHost(), toName, userObj.getEmailAddress() });
        }
        if (type.equals("active")) {
            body = PrefsPropsUtil.getContent(user.getCompanyId(), "email.message.active");
            body = StringUtil.replace(body, new String[] { "[$FROM_ADDRESS$]", "[$FROM_NAME$]", "[$PORTAL_URL$]", "[$TO_NAME$]", "[$EMAIL$]" }, new String[] { fromAddress, fromName, company.getVirtualHost(), toName, userObj.getEmailAddress() });
        }
        if (type.equals("deactive")) {
            body = PrefsPropsUtil.getContent(user.getCompanyId(), "email.message.deactive");
            body = StringUtil.replace(body, new String[] { "[$FROM_ADDRESS$]", "[$FROM_NAME$]", "[$PORTAL_URL$]", "[$TO_NAME$]", "[$EMAIL$]" }, new String[] { fromAddress, fromName, company.getVirtualHost(), toName, userObj.getEmailAddress() });
        }
        InternetAddress from = new InternetAddress(fromAddress, fromName);
        InternetAddress to = new InternetAddress(toAddress, toName);
        MailMessage message = new MailMessage(from, to, subject, body, true);
        MailService mailService = (MailService) PortalBeanLocatorUtil.locate(MailService.class.getName() + ".impl");
        mailService.sendEmail(message);
    } catch (Exception e) {
        e.printStackTrace();
        _log.error("Approvation Email server is not configured......");
    }
}
