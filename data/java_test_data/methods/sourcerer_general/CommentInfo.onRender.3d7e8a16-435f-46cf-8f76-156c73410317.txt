protected void onRender(Element parent, int index) {
    super.onRender(parent, index);
    System.out.println("----------CommentInfo");
    commentInfo.setWidth("100%");
    replyInfo.setWidth("100%");
    replyInput.setWidth("100%");
    add(commentInfo);
    add(replyInfo);
    add(replyInput);
    replyInput.setHorizontalAlignment(replyInput.ALIGN_CENTER);
    replyInput.add(new HTML("<font textAlign = 'center'><b>回复评论</b></font>"));
    replyInput.add(contentPanel);
    replyInput.add(new HTML("<font textAlign = 'center'>提示: 此条评论若已有回复, 如果继续回复将更新原来回复的内容!</font>"));
    TextBox userName = new TextBox();
    userName.setReadOnly(true);
    TextBox email = new TextBox();
    email.setReadOnly(true);
    contentPanel.createPanel(IComment.USERNAME, "用户名:", userName);
    contentPanel.createPanel(IComment.EMAIL, "Email:", email);
    final TextArea commentArea = new TextArea();
    commentArea.setSize("350", "100");
    contentPanel.createPanel(IComment.CONTENT, "回复内容:", commentArea);
    HorizontalPanel panel = new HorizontalPanel();
    panel.setSpacing(10);
    btnNew.setText("确定");
    btnCancel.setText("重置");
    panel.add(btnNew);
    panel.add(btnCancel);
    contentPanel.createPanel(null, null, panel);
    // 点击确定进行回复或更新回复
    btnNew.addClickListener(new ClickListener() {

        public void onClick(Widget sender) {
            if (comment != null && comment.getString(IComment.ID) != null) {
                if ((replyBeanObject == null)) {
                    String id = comment.getString(IComment.ID);
                    Map<String, Object> replyComment = new HashMap<String, Object>();
                    replyComment = contentPanel.getValues();
                    replyComment.put(IComment.PARENT, id);
                    Date currentTime = new Date();
                    Timestamp nowTime = new Timestamp(currentTime.getTime());
                    replyComment.put(IComment.ADDTIME, nowTime);
                    replyComment.put(IComment.IDVALUE, comment.getString(IComment.IDVALUE));
                    replyComment.put(IComment.COMMENTTYPE, comment.getString(IComment.COMMENTTYPE));
                    BeanObject replyCommentBean = new BeanObject(ModelNames.COMMENT, replyComment);
                    new CreateService().createBean(replyCommentBean, new CreateService.Listener() {

                        public void onSuccess(String id) {
                            iShop.getInstance().displayCommentInfo(comment);
                            Info.display("恭喜", "完成评论回复.");
                        }
                    });
                } else {
                    Map<String, Object> replyChange = new HashMap<String, Object>();
                    replyChange = contentPanel.getValues();
                    BeanObject replyChangeBean = new BeanObject(ModelNames.COMMENT, replyChange);
                    new UpdateService().updateBean(replyBeanObject.getString(IComment.ID), replyChangeBean, new UpdateService.Listener() {

                        public void onSuccess(Boolean success) {
                            if (success) {
                                iShop.getInstance().displayCommentInfo(comment);
                                Info.display("恭喜", "完成回复更新.");
                            } else {
                                iShop.getInstance().displayUserComments();
                                Info.display("对不起", "系统错误，操作未完成.");
                            }
                        }
                    });
                    replyBeanObject = null;
                }
            }
        }
    });
    // 重置
    btnCancel.addClickListener(new ClickListener() {

        public void onClick(Widget sender) {
            commentArea.setText("");
        }
    });
    // 允许显示或禁止显示
    btnAllow.addClickListener(new ClickListener() {

        public void onClick(Widget sender) {
            String id = comment != null ? comment.getString(IComment.ID) : null;
            Map<String, Object> value = new HashMap<String, Object>();
            if (comment.getString(IComment.STATUS).equals("false")) {
                value.put(IComment.STATUS, true);
                comment.set(IComment.STATUS, "true");
                btnAllow.setText("禁止显示");
            } else if (comment.getString(IComment.STATUS).equals("true")) {
                value.put(IComment.STATUS, false);
                comment.set(IComment.STATUS, "false");
                btnAllow.setText("允许显示");
            } else {
                iShop.getInstance().displayUserComments();
                Info.display("Error", "Sorry系统错误！");
            }
            comment = new BeanObject(ModelNames.COMMENT, value);
            new UpdateService().updateBean(id, comment, null);
        }
    });
}
