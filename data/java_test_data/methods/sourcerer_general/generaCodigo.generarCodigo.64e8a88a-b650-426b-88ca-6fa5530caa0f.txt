public void generarCodigo() {
    instruccion inst;
    _pw.println(";Codigo generado en ENS2001.");
    _pw.println(";Grupo 1");
    _pw.println(";");
    _pw.println(";Ponemos el puntero de pila depues de la zona de datos del programa principal");
    // Calcular el tamaï¿½o total de los datos
    _pw.println("			MOVE #4000,.sp");
    _pw.println(";Colocam");
    _pw.println("			BR /INICIO	;Saltamos al inicio del programa");
    _pw.println(";********Declaracion de procedimientos");
    // inst = recuperaInstruccion();
    for (int i = 0; i < codigo.size(); i++) {
        inst = recuperaInstruccion(i);
        if (flagPrincipal && inst.getTipo() != TIPO_INI_PROC) {
            _pw.println(";************* PROGRAMA PRINCIPAL *******");
            _pw.print("INICIO:");
            _pw.println(";Colocamos el puntero en la zona de datos del programa principal");
            _pw.println("			MOVE #2002,.iy");
            _pw.println(";Colocamos el enlace de acceso del ambito principal");
            _pw.println("			MOVE #2000,#-2[.iy]");
            flagPrincipal = false;
        }
        System.out.println(inst.getArg1() + " " + inst.getArg2() + " " + inst.getResultado() + " " + inst.getTipo());
        switch(inst.getTipo()) {
            case TIPO_SUMA:
                generaSuma(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_RESTA:
                generaResta(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_MULT:
                generaMult(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_DIV_ENT:
                generaDivEnt(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_DIV:
                generaDiv(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_MOD:
                generaMod(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_NOT:
                generaNot(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_AND:
                generaAnd(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_OR:
                generaOr(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_COPIA:
                generaCopia(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_SALTO_INC:
                generaSaltoInc(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_SALTO_COND1:
                generaSaltoCond1(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_SALTO_COND2:
                generaSaltoCond2(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_SALTO_COND3:
                generaSaltoCond3(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_SALTO_COND4:
                generaSaltoCond4(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_SALTO_COND5:
                generaSaltoCond5(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_SALTO_COND6:
                generaSaltoCond6(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_ETIQUETA:
                generaEtiqueta(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_PARAMS:
                generaParams(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_CALL:
                generaCall(inst.getArg1(), inst.getArg2(), inst.getResultado());
                break;
            case TIPO_INI_PROC:
                generaIniProc(inst.getArg1(), inst.getArg2(), inst.getResultado());
                flagPrincipal = false;
                break;
            case TIPO_FIN_PROC:
                generaFinProc(inst.getArg1(), inst.getArg2(), inst.getResultado());
                flagPrincipal = true;
                break;
        }
    }
    _pw.println("SALIR:		halt");
    _pw.println("end");
    _pw.close();
}
