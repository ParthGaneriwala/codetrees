private Map<String, String> parameters(Post p, boolean tagsRequired, boolean includeOptionalFields) {
    if (p == null) {
        throw new ConnoteaRuntimeException("post is null");
    }
    String uri = null;
    try {
        uri = p.getBookmark().getLink().getTargetRef().toString();
    } catch (Exception e) {
        throw new ConnoteaRuntimeException("could not required field URI from post: " + p);
    }
    if (isBlank(uri)) {
        throw new ConnoteaRuntimeException("required field URI is blank for post: " + p);
    }
    Map<String, String> params = new HashMap<String, String>();
    LOG.debug("adding URI to params: " + uri);
    params.put("uri", uri);
    if (tagsRequired) {
        if (isEmpty(p.getSubjects()) || ((p.getBookmark() == null) || isEmpty(p.getBookmark().getTags()))) {
            throw new ConnoteaRuntimeException("both post subjects and bookmark tags are null or empty: at least one valid element in either is required for post: " + p);
        }
        String tags = tags(p);
        params.put("tags", tags);
        LOG.debug("added tags to params: " + tags);
    }
    if (includeOptionalFields) {
        String usertitle = p.getTitle();
        if (usertitle != null) {
            if (isBlank(usertitle) && LOG.isWarnEnabled()) {
                LOG.warn("empty string provided for post title: " + "current field value *may* be deleted!");
            }
            params.put("usertitle", usertitle);
            LOG.debug("added usertitle param: " + usertitle);
        }
        String description = p.getDescription();
        if (description != null) {
            if (isBlank(description) && LOG.isWarnEnabled()) {
                LOG.warn("empty string provided for post description: " + "current field value *may* be deleted!");
            }
            params.put("description", description);
            LOG.debug("added description param: " + description);
        }
        String mywork = (p.isMyWork()) ? "1" : "0";
        params.put("mywork", mywork);
        LOG.debug("added mywork param: " + mywork);
        String privato = (p.isPrivate()) ? "1" : "0";
        params.put("private", privato);
        LOG.debug("added private param: " + privato);
        // TODO implement support for removal of "lastcomment"
        if (isNotEmpty(p.getComments())) {
            LOG.debug("attempting to use comment at index 0 as post comment field value");
            String comment = p.getComments().get(0).getEntry();
            if (comment != null) {
                if (isBlank(comment) && LOG.isWarnEnabled()) {
                    LOG.warn("empty string provided for comment entry: " + "current field value *may* be deleted");
                }
                params.put("comment", comment);
                LOG.debug("added comment param: " + comment);
            }
        }
    }
    return null;
}
