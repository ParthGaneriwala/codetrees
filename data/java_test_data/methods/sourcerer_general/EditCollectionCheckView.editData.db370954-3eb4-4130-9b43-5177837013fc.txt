private void editData() {
    int amt = -9999;
    String part = particular.getText();
    boolean er = true;
    int amtLength = this.amount.getText().length();
    if (amtLength != 0) {
        if (amtLength > 15) {
            er = false;
            JOptionPane.showMessageDialog(null, "PR number is too long.", "Error", JOptionPane.WARNING_MESSAGE);
        } else if (!CollectionController.isNumeric(this.amount.getText())) {
            er = false;
            JOptionPane.showMessageDialog(null, "Amount should only consists of digits.", "Error", JOptionPane.WARNING_MESSAGE);
        } else {
            amt = Integer.parseInt(this.amount.getText());
            if (amt == 0) {
                er = false;
                JOptionPane.showMessageDialog(null, "The amount should not be equal to zero.", "Error", JOptionPane.WARNING_MESSAGE);
            }
        }
    }
    if (er) {
        int id = CollectionController.validateDataToBeAdded(numKey, amt, part);
        switch(id) {
            case 1:
                JOptionPane.showMessageDialog(null, "No PR number entered.", "Error", JOptionPane.WARNING_MESSAGE);
                break;
            case 2:
                JOptionPane.showMessageDialog(null, "No PR number and amount entered.", "Error", JOptionPane.WARNING_MESSAGE);
                break;
            case 3:
                JOptionPane.showMessageDialog(null, "No PR number, amount, and particular entered.", "Error", JOptionPane.WARNING_MESSAGE);
                break;
            case 4:
                JOptionPane.showMessageDialog(null, "No PR number and particular entered.", "Error", JOptionPane.WARNING_MESSAGE);
                break;
            case 5:
                JOptionPane.showMessageDialog(null, "No amount and particular entered.", "Error", JOptionPane.WARNING_MESSAGE);
                break;
            case 6:
                JOptionPane.showMessageDialog(null, "No amount entered.", "Error", JOptionPane.WARNING_MESSAGE);
                break;
            case 7:
                JOptionPane.showMessageDialog(null, "No particular entered.", "Error", JOptionPane.WARNING_MESSAGE);
                break;
            case 8:
                try {
                    if (CollectionController.editCollectionCheck(numKey, amt, part, DateController.getDate()))
                        if (ActivitiesController.addActivity(DateController.getToday(), "Data deleted in collection check table.")) {
                            JOptionPane.showMessageDialog(null, "Data Edited", "Successful", JOptionPane.DEFAULT_OPTION);
                            amount.setText(null);
                            particular.setText(null);
                            this.collectionView.populateTable();
                        } else
                            JOptionPane.showMessageDialog(null, "An error happened.", "Error", JOptionPane.DEFAULT_OPTION);
                    closeframe();
                } catch (Exception a) {
                    a.printStackTrace();
                }
                break;
        }
    // end of switch
    }
}
