@Test
public void testIntersecao() {
    TipoPolimorfico tq;
    tq = new TipoPolimorfico();
    assertEquals(TipoPrimitivo.BOOLEANO, tq.intersecao(TipoPrimitivo.BOOLEANO));
    tq = new TipoPolimorfico();
    assertEquals(TipoPrimitivo.INTEIRO, tq.intersecao(TipoPrimitivo.INTEIRO));
    tq = new TipoPolimorfico();
    assertEquals(TipoPrimitivo.STRING, tq.intersecao(TipoPrimitivo.STRING));
    tq = new TipoPolimorfico();
    assertEquals(TipoPrimitivo.BOOLEANO, TipoPrimitivo.BOOLEANO.intersecao(tq));
    tq = new TipoPolimorfico();
    assertEquals(TipoPrimitivo.INTEIRO, TipoPrimitivo.INTEIRO.intersecao(tq));
    tq = new TipoPolimorfico();
    assertEquals(TipoPrimitivo.STRING, TipoPrimitivo.STRING.intersecao(tq));
    tq = new TipoPolimorfico();
    tq.eIgual(TipoPrimitivo.BOOLEANO);
    assertEquals(TipoPrimitivo.BOOLEANO, tq.intersecao(TipoPrimitivo.BOOLEANO));
    tq = new TipoPolimorfico();
    tq.eIgual(TipoPrimitivo.INTEIRO);
    assertEquals(TipoPrimitivo.INTEIRO, tq.intersecao(TipoPrimitivo.INTEIRO));
    tq = new TipoPolimorfico();
    tq.eIgual(TipoPrimitivo.STRING);
    assertEquals(TipoPrimitivo.STRING, tq.intersecao(TipoPrimitivo.STRING));
    tq = new TipoPolimorfico();
    tq.eIgual(TipoPrimitivo.BOOLEANO);
    assertEquals(TipoPrimitivo.BOOLEANO, TipoPrimitivo.BOOLEANO.intersecao(tq));
    tq = new TipoPolimorfico();
    tq.eIgual(TipoPrimitivo.INTEIRO);
    assertEquals(TipoPrimitivo.INTEIRO, TipoPrimitivo.INTEIRO.intersecao(tq));
    tq = new TipoPolimorfico();
    tq.eIgual(TipoPrimitivo.STRING);
    assertEquals(TipoPrimitivo.STRING, TipoPrimitivo.STRING.intersecao(tq));
// assertSame(Tipo.TIPO_BOOLEANO, Tipo.TIPO_BOOLEANO.intersecao(Tipo.TIPO_BOOLEANO));
// assertSame(Tipo.TIPO_INTEIRO, Tipo.TIPO_INTEIRO.intersecao(Tipo.TIPO_INTEIRO));
// assertSame(Tipo.TIPO_STRING, Tipo.TIPO_STRING.intersecao(Tipo.TIPO_STRING));
// 
// assertNull(Tipo.TIPO_BOOLEANO.intersecao(Tipo.TIPO_INTEIRO));
// assertNull(Tipo.TIPO_BOOLEANO.intersecao(Tipo.TIPO_STRING));
// assertNull(Tipo.TIPO_INTEIRO.intersecao(Tipo.TIPO_STRING));
// 
// assertNull(Tipo.TIPO_INTEIRO.intersecao(Tipo.TIPO_BOOLEANO));
// assertNull(Tipo.TIPO_STRING.intersecao(Tipo.TIPO_BOOLEANO));
// assertNull(Tipo.TIPO_STRING.intersecao(Tipo.TIPO_INTEIRO));
}
