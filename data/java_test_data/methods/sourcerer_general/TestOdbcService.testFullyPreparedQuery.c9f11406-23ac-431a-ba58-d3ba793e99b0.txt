public void testFullyPreparedQuery() {
    try {
        ResultSet rs;
        PreparedStatement ps = netConn.prepareStatement("SELECT i, 3, vc, 'str' FROM nullmix WHERE i < ? OR i > ? " + "ORDER BY i");
        ps.setInt(1, 10);
        ps.setInt(2, 30);
        rs = ps.executeQuery();
        assertTrue("No rows fetched", rs.next());
        assertEquals("str", rs.getString(4));
        assertEquals(5, rs.getInt(1));
        assertEquals(3, rs.getInt(2));
        assertEquals("five", rs.getString(3));
        assertTrue("Not enough rows fetched", rs.next());
        assertEquals(3, rs.getInt(2));
        assertEquals(40, rs.getInt(1));
        assertEquals("forty", rs.getString(3));
        assertEquals("str", rs.getString(4));
        assertFalse("Too many rows fetched", rs.next());
        rs.close();
        ps.setInt(1, 16);
        ps.setInt(2, 100);
        rs = ps.executeQuery();
        assertTrue("No rows fetched", rs.next());
        assertEquals("str", rs.getString(4));
        assertEquals(5, rs.getInt(1));
        assertEquals(3, rs.getInt(2));
        assertEquals("five", rs.getString(3));
        assertTrue("No rows fetched", rs.next());
        assertEquals("str", rs.getString(4));
        assertEquals(10, rs.getInt(1));
        assertEquals(3, rs.getInt(2));
        assertEquals("ten", rs.getString(3));
        assertTrue("No rows fetched", rs.next());
        assertEquals("str", rs.getString(4));
        assertEquals(15, rs.getInt(1));
        assertEquals(3, rs.getInt(2));
        assertEquals("fifteen", rs.getString(3));
        assertFalse("Too many rows fetched", rs.next());
        rs.close();
        // Verify server state still good
        verifySimpleQueryOutput();
    } catch (SQLException se) {
        junit.framework.AssertionFailedError ase = new junit.framework.AssertionFailedError(se.getMessage());
        ase.initCause(se);
        throw ase;
    }
}
