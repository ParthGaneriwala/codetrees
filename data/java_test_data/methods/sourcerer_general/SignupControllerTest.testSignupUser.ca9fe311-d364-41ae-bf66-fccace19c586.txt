public void testSignupUser() throws Exception {
    MockHttpServletRequest request = newPost("/signup.html");
    request.addParameter("username", "self-registered");
    request.addParameter("password", "Password1");
    request.addParameter("confirmPassword", "Password1");
    request.addParameter("firstName", "First");
    request.addParameter("lastName", "Last");
    request.addParameter("address.city", "Denver");
    request.addParameter("address.country", "USA");
    request.addParameter("address.postalCode", "80210");
    request.addParameter("address.stateId", "OR");
    // request.addParameter("address.countyId", "051");
    request.addParameter("email", "pchapman@redsidesoftware.net");
    request.addParameter("website", "http://www.redsidesoftware.com");
    request.addParameter("passwordHint", "Password is one with you.");
    HttpServletResponse response = new MockHttpServletResponse();
    // start SMTP Server
    Wiser wiser = new Wiser();
    wiser.setPort(getSmtpPort());
    wiser.start();
    logger.debug("About to submit...");
    ModelAndView mv = c.handleRequest(request, response);
    Errors errors = (Errors) mv.getModel().get(BindException.MODEL_KEY_PREFIX + "user");
    assertTrue("no errors returned in model", errors == null);
    // verify an account information e-mail was sent
    wiser.stop();
    assertTrue(wiser.getMessages().size() == 1);
    // verify that success messages are in the request
    assertNotNull(request.getSession().getAttribute("successMessages"));
    assertNotNull(request.getSession().getAttribute(Constants.REGISTERED));
    SecurityContextHolder.getContext().setAuthentication(null);
}
