public ActionForward upload(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
    try {
        request.setCharacterEncoding("UTF-8");
        FileItemFactory factory = new DiskFileItemFactory();
        ServletFileUpload upload = new ServletFileUpload(factory);
        // upload.setHeaderEncoding(request.getCharacterEncoding());
        if (!isLoggedIn(request)) {
            return mapping.findForward(ForwardConstants.INDEX);
        }
        SessionContainer session = getSessionContainer(request);
        Customer customer = session.getCustomer();
        String albumId = request.getParameter("albumId");
        System.out.println(albumId);
        Album album = null;
        if (albumId == null || "".equals(albumId)) {
            albumId = "default";
        } else {
            album = albumService.findAlbumById(Integer.parseInt(albumId));
        }
        String path = this.getServlet().getServletContext().getRealPath("/").concat("userphoto").concat(File.separator).concat(customer.getEmail()).concat(File.separator).concat(albumId).concat(File.separator);
        FileUtil.makeDirectory(path);
        System.out.println("上传的相片路径：" + path);
        List items = (List) upload.parseRequest(request);
        List<AlbumPhoto> albumPhotos = new ArrayList<AlbumPhoto>();
        for (int i = 0; i < items.size(); i++) {
            FileItem file = (FileItem) items.get(i);
            if (!file.isFormField()) {
                // boolean isInMemory = item.isInMemory();
                if (file.getName() != null && !"".equals(file.getName())) {
                    System.out.println("-------- final--------");
                    String fileName = file.getName();
                    String suffix = fileName.substring(fileName.lastIndexOf("."));
                    // 照片的命名是当前时间加上文件的扩展名
                    long date = new Date().getTime();
                    String name = date + suffix;
                    getListInSession(request).add(fileName);
                    getListInSession(request).add(UUID.randomUUID());
                    Photo photo = new Photo();
                    String relativePathFileName = Context.getUploadPath().concat(customer.getEmail()).concat("/").concat(albumId).concat("/").concat(name);
                    photo.setName(name);
                    photo.setBigImgPath(relativePathFileName);
                    AlbumPhoto albumPhoto = new AlbumPhoto();
                    albumPhoto.setPhoto(photo);
                    albumPhoto.setAlbum(album);
                    albumPhotos.add(albumPhoto);
                    photo.setAlbumPhotos(albumPhotos);
                    System.out.println(relativePathFileName);
                    uploadFile(file.getInputStream(), path.concat(name));
                    // 缩小图片
                    PicCompression pn = new PicCompression();
                    String smallImg = pn.proce1(path + name, 300, 1);
                    String relativePathFileName2 = Context.getUploadPath().concat(customer.getEmail()).concat("/").concat(albumId).concat("/").concat(smallImg);
                    photo.setPath(relativePathFileName2);
                    String smallImg2 = pn.proce2(path + name, 90, 1);
                    String relativePathFileName3 = Context.getUploadPath().concat(customer.getEmail()).concat("/").concat(albumId).concat("/").concat(smallImg2);
                    photo.setDescription(relativePathFileName3);
                    // System.out.println(relativePathFileName2);
                    photoService.savePhoto(photo);
                    // 更新相册封面图
                    album.setPhotopath(relativePathFileName3);
                }
            }
        }
        albumService.updateAlbum(album);
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    return mapping.findForward("upfile");
}
