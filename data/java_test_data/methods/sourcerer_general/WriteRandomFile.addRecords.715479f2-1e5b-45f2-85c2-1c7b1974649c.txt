// end method
public void addRecords() {
    RandomAccessHardwareRecord record = new RandomAccessHardwareRecord();
    int recordNumber = 0;
    String toolName;
    int quantity;
    double cost;
    Scanner input = new Scanner(System.in);
    System.out.printf("%s\n%s\n%s\n%s\n\n", "To terminate input, type the end-of-file indicator ", "when you are prompted to enter input.", "On UNIX/Linux/Mac OS X type <ctrl> d then press Enter", "On Windows type <ctrl> z then press Enter");
    System.out.printf("%s %s\n%s", "Enter record number (1-100),", "tool name, quantity and cost.", "? ");
    while (input.hasNext()) {
        try {
            // read record number
            recordNumber = input.nextInt();
            // read tool name
            toolName = input.next();
            // read quantity
            quantity = input.nextInt();
            // read cost
            cost = input.nextDouble();
            if (recordNumber > 0 && recordNumber <= NUMBER_RECORDS) {
                record.setRecordNumber(recordNumber);
                record.setToolName(toolName);
                record.setQuantity(quantity);
                record.setCost(cost);
                output.seek((recordNumber - 1) * RandomAccessHardwareRecord.SIZE);
                record.write(output);
            } else
                // end if
                System.out.println("Account must be between 0 and 100.");
        }// end try
         catch (IOException ioException) {
            System.err.println("Error writing to file.");
            return;
        }// end catch
         catch (NoSuchElementException elementException) {
            System.err.println("Invalid input. Please try again.");
            input.nextLine();
        }
        // end catch
        System.out.printf("%s %s\n%s", "Enter record number (1-100),", "tool name, quantity and cost.", "? ");
    }
// end while
}
