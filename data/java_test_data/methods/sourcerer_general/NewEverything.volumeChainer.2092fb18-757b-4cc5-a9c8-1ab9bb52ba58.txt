private static int volumeChainer(JobInformable jbm, JobInformable jbc, JobInformable jbf, JobInformable jbp, String[] args) {
    String[] argsVBM = null;
    argsVBM = new String[2];
    argsVBM[0] = args[0];
    argsVBM[1] = args[1];
    String[] argsVBC = null;
    argsVBC = new String[3];
    argsVBC[0] = args[1];
    argsVBC[1] = args[0];
    argsVBC[2] = args[2];
    String[] argsVBF = null;
    argsVBF = new String[3];
    argsVBF[0] = args[2];
    argsVBF[1] = args[0];
    argsVBF[2] = args[3];
    String[] argsVBP = null;
    argsVBP = new String[2];
    argsVBP[0] = args[3];
    argsVBP[1] = args[4];
    int status = 0;
    LOG.info("Running VolumeByMethod");
    status = JobRunner.startJob(argsVBM, jbm);
    if (status == 0) {
        VolumeByClassMisc jc = new VolumeByClassMisc();
        String tempClassFolder = "tmpClsLoc/";
        LOG.info("Running VolumeByClass");
        status = JobRunner.startJob(argsVBC, jc, jbc, tempClassFolder);
        if (status == 0) {
            VolumeByFileMisc jf = new VolumeByFileMisc();
            String tempFileFolder = "tmpFile/";
            LOG.info("Running VolumeByFile");
            status = JobRunner.startJob(argsVBF, jf, jbf, tempFileFolder);
            if (status == 0) {
                LOG.info("Running VolumeByPackage");
                status = JobRunner.startJob(argsVBP, jbp);
            }
        }
    }
    return status;
}
