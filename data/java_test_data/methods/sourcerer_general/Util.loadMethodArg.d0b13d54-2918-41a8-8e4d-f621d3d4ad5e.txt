private static Class loadMethodArg(String className) {
    Class cls = null;
    className = className.replace('/', '.');
    try {
        if (className.equals("int")) {
            cls = Integer.TYPE;
        } else if (className.equals("int[]")) {
            cls = Class.forName("[I");
        } else if (className.equals("char")) {
            cls = Character.TYPE;
        } else if (className.equals("char[]")) {
            cls = Class.forName("[C");
        } else if (className.equals("double")) {
            cls = Double.TYPE;
        } else if (className.equals("double[]")) {
            cls = Class.forName("[D");
        } else if (className.equals("boolean")) {
            cls = Boolean.TYPE;
        } else if (className.equals("boolean[]")) {
            cls = Class.forName("[Z");
        } else if (className.equals("short")) {
            cls = Short.TYPE;
        } else if (className.equals("short[]")) {
            cls = Class.forName("[S");
        } else if (className.equals("byte")) {
            cls = Byte.TYPE;
        } else if (className.equals("byte[]")) {
            cls = Class.forName("[B");
        } else if (className.equals("long")) {
            cls = Long.TYPE;
        } else if (className.equals("long[]")) {
            cls = Class.forName("[J");
        } else if (className.equals("float")) {
            cls = Float.TYPE;
        } else if (className.equals("float[]")) {
            cls = Class.forName("[F");
        } else if (className.endsWith("[]")) {
            className = "[L" + className.substring(0, className.length() - 2) + ";";
        }
        if (cls == null) {
            cls = ClassLoaderBridge.loadClass(className);
        }
    } catch (Exception e) {
    // synthetic class
    }
    return cls;
}
