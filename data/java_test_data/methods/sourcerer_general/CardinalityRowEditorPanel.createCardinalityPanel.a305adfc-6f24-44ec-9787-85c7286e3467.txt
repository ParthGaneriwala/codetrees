protected JComponent createCardinalityPanel() {
    maxEnabled = new JCheckBox("max", false);
    maxEnabled.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent actionEvent) {
            maxCardinalitySpinner.setEnabled(maxEnabled.isSelected());
        }
    });
    minCardinalitySpinner = new JSpinner(new SpinnerNumberModel(1, 0, null, 1));
    minCardinalitySpinner.addChangeListener(minSpinnerChangeListener);
    maxCardinalitySpinner = new JSpinner(new SpinnerNumberModel(1, 0, null, 1));
    maxCardinalitySpinner.addChangeListener(maxSpinnerChangeListener);
    maxCardinalitySpinner.setEnabled(false);
    JComponent minCardinalitySpinnerEditor = minCardinalitySpinner.getEditor();
    JComponent maxCardinalitySpinnerEditor = maxCardinalitySpinner.getEditor();
    Dimension prefSize = minCardinalitySpinnerEditor.getPreferredSize();
    minCardinalitySpinnerEditor.setPreferredSize(new Dimension(50, prefSize.height));
    maxCardinalitySpinnerEditor.setPreferredSize(new Dimension(50, prefSize.height));
    JPanel minSpinnerHolder = new JPanel(new BorderLayout(4, 4));
    minSpinnerHolder.setBorder(BorderFactory.createEmptyBorder(0, 10, 0, 0));
    minSpinnerHolder.add(new JLabel("min"), BorderLayout.WEST);
    minSpinnerHolder.add(minCardinalitySpinner, BorderLayout.EAST);
    JPanel maxSpinnerHolder = new JPanel(new BorderLayout(4, 4));
    maxSpinnerHolder.setBorder(BorderFactory.createEmptyBorder(0, 10, 0, 0));
    maxSpinnerHolder.add(maxEnabled, BorderLayout.WEST);
    maxSpinnerHolder.add(maxCardinalitySpinner, BorderLayout.EAST);
    JPanel spinnerAlignmentPanel = new JPanel();
    spinnerAlignmentPanel.setBorder(ComponentFactory.createTitledBorder("Cardinality"));
    spinnerAlignmentPanel.add(minSpinnerHolder);
    spinnerAlignmentPanel.add(maxSpinnerHolder);
    return spinnerAlignmentPanel;
}
