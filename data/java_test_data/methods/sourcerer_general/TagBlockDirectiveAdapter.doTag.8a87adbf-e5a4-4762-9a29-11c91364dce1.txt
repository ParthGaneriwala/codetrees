private void doTag(Tag tag, Object param, List elements, WebContext context) throws Exception {
    try {
        // ---- init ----
        PageContextImpl pageContext = new PageContextImpl(context);
        pageContext.pushBody(context.getOut());
        tag.setPageContext(pageContext);
        Tag parentTag = (Tag) pageContext.findParentTag(Tag.class);
        if (parentTag != null)
            tag.setParent(parentTag);
        TagUtils.initTag(tag, ParameterUtils.getParameters(param));
        pageContext.pushTag(tag);
        // ---- start ----
        int s = tag.doStartTag();
        if (s == Tag.EVAL_BODY_INCLUDE || (s == BodyTag.EVAL_BODY_BUFFERED && tag instanceof BodyTag)) {
            // ---- body ----
            if (s == BodyTag.EVAL_BODY_BUFFERED && tag instanceof BodyTag) {
                BodyTag bodyTag = (BodyTag) tag;
                bodyTag.setBodyContent(new BodyContentImpl(pageContext.getOut(), false));
                bodyTag.doInitBody();
            }
            DirectiveUtils.renderAll(elements, context);
            // ---- iteration ----
            if (tag instanceof IterationTag) {
                IterationTag iterationTag = (IterationTag) tag;
                int a = iterationTag.doAfterBody();
                for (; ; ) {
                    if (a == Tag.SKIP_BODY) {
                        if (tag instanceof BodyTag)
                            pageContext.popBody();
                        break;
                    } else if (a != IterationTag.EVAL_BODY_AGAIN) {
                        Assert.fail("TagBlockDirectiveAdapter.after.body.illegal.return.value", new Object[] { new Integer(s), tag.getClass().getName() });
                    }
                    DirectiveUtils.renderAll(elements, context);
                    a = iterationTag.doAfterBody();
                }
            }
        } else if (s != Tag.SKIP_BODY) {
            Assert.fail("TagBlockDirectiveAdapter.start.tag.illegal.return.value", new Object[] { new Integer(s), tag.getClass().getName() });
        }
        // ---- end ----
        int e = tag.doEndTag();
        if (e == Tag.SKIP_PAGE) {
            throw new IgnoreException();
        } else if (e != Tag.EVAL_PAGE) {
            Assert.fail("TagBlockDirectiveAdapter.start.tag.illegal.return.value", new Object[] { new Integer(s), tag.getClass().getName() });
        }
    } finally {
        // ---- release ----
        tag.release();
    }
}
