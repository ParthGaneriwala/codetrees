public boolean insert(Connection db) throws SQLException {
    if (!isValid()) {
        return false;
    }
    Exception errorMessage = null;
    boolean commit = db.getAutoCommit();
    try {
        if (commit) {
            db.setAutoCommit(false);
        }
        StringBuffer sql = new StringBuffer();
        sql.append("INSERT INTO badge " + "(" + (id > -1 ? "badge_id, " : "") + "badge_category_id, " + "title, " + "description, " + "logo_id, " + "email1, " + "email2, " + "email3, " + "business_phone, " + "business_phone_ext, " + "web_page, " + "addrline1, " + "addrline2, " + "addrline3, " + "city, " + "state, " + "country, " + "postalcode, " + "latitude, " + "longitude, " + "enabled, " + "read_count, " + "read_date, " + "rating_count, " + "rating_value, " + "rating_avg, " + "enteredby, " + "modifiedby," + "system_assigned," + "system_constant ");
        if (entered != null) {
            sql.append(", entered ");
        }
        if (modified != null) {
            sql.append(", modified ");
        }
        sql.append(") VALUES (");
        if (id > -1) {
            sql.append("?, ");
        }
        sql.append("?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?  ");
        if (entered != null) {
            sql.append(",? ");
        }
        if (modified != null) {
            sql.append(",? ");
        }
        sql.append(")");
        int i = 0;
        PreparedStatement pst = db.prepareStatement(sql.toString());
        if (id > -1) {
            pst.setInt(++i, id);
        }
        DatabaseUtils.setInt(pst, ++i, categoryId);
        pst.setString(++i, title);
        pst.setString(++i, description);
        DatabaseUtils.setInt(pst, ++i, logoId);
        pst.setString(++i, email1);
        pst.setString(++i, email2);
        pst.setString(++i, email3);
        pst.setString(++i, businessPhone);
        pst.setString(++i, businessPhoneExt);
        pst.setString(++i, webPage);
        pst.setString(++i, addrline1);
        pst.setString(++i, addrline2);
        pst.setString(++i, addrline3);
        pst.setString(++i, city);
        pst.setString(++i, state);
        pst.setString(++i, country);
        pst.setString(++i, postalCode);
        pst.setDouble(++i, latitude);
        pst.setDouble(++i, longitude);
        pst.setBoolean(++i, enabled);
        DatabaseUtils.setInt(pst, ++i, readCount);
        pst.setTimestamp(++i, readDate);
        DatabaseUtils.setInt(pst, ++i, ratingCount);
        DatabaseUtils.setInt(pst, ++i, ratingValue);
        DatabaseUtils.setDouble(pst, ++i, ratingAvg);
        pst.setInt(++i, enteredBy);
        pst.setInt(++i, modifiedBy);
        pst.setBoolean(++i, systemAssigned);
        DatabaseUtils.setInt(pst, ++i, systemConstant);
        if (entered != null) {
            pst.setTimestamp(++i, entered);
        }
        if (modified != null) {
            pst.setTimestamp(++i, modified);
        }
        pst.execute();
        pst.close();
        id = DatabaseUtils.getCurrVal(db, "badge_badge_id_seq", id);
        if (commit) {
            db.commit();
        }
    } catch (Exception e) {
        e.printStackTrace(System.out);
        errorMessage = e;
        if (commit) {
            db.rollback();
        }
    } finally {
        if (commit) {
            db.setAutoCommit(true);
        }
    }
    if (errorMessage != null) {
        throw new SQLException(errorMessage.getMessage());
    }
    return true;
}
