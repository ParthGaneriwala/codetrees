public static void replayGame() {
    if (PLAYER == 3) {
        full = 0;
        for (int i = 0; i < 6; i++) {
            for (int j = 0; j < 7; j++) {
                jlbl[i][j].setIcon(img);
            }
        }
    } else // informing the Server with the Replay status
    {
        // playing mp3 file
        File filename = new File("src/sounds/alert.mp3");
        MP3 mp3 = new MP3(filename);
        mp3.play();
        String[] options = { "Yes", "No", "Exit" };
        int option = JOptionPane.showOptionDialog(null, "Are you sure you want to replay?", "Replay?", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[1]);
        if (option == 0) {
            full = 0;
            for (int i = 0; i < 6; i++) {
                for (int j = 0; j < 7; j++) {
                    jlbl[i][j].setIcon(img);
                }
            }
            try {
                out.writeUTF(0 + "x" + 0 + "x" + 3);
            } catch (IOException e) {
                // playing
                File filename1 = new File("src/sounds/alert.mp3");
                // mp3
                // file
                MP3 mp31 = new MP3(filename1);
                mp31.play();
                cleanUp();
                System.exit(1);
            }
        } else if (option == 2) {
            // playing mp3
            File filename2 = new File("src/sounds/alert.mp3");
            // file
            MP3 mp32 = new MP3(filename2);
            mp32.play();
            String[] eOptions = { "Yes", "No" };
            int eOption = JOptionPane.showOptionDialog(null, "Are you sure you want to exit?", "Exit?", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, eOptions, eOptions[1]);
            if (eOption == 0) {
                cleanUp();
                System.exit(0);
            }
        }
    }
}
