public void initializeFromQuartet(QuartetTree qt, Quartet q) {
    eiTable = new int[1000][1000];
    eIndex = 0;
    node_count = 0;
    node_id = 0;
    qNodes[node_count++] = qt.root;
    qt.root.id = node_id++;
    qt.root.adj[0] = new QNode(-1, qt.root, null, null, node_id++);
    qNodes[node_count++] = qt.root.adj[0];
    rootEdge = new TreeEdge(qt.root, qt.root.adj[0]);
    labelEdge(qt.root, qt.root.adj[0]);
    qt.root.adj[1] = new QNode(q.nodes[0], qt.root, null, null, node_id++);
    qNodes[node_count++] = qt.root.adj[1];
    labelEdge(qt.root, qt.root.adj[1]);
    qt.root.adj[2] = new QNode(q.nodes[1], qt.root, null, null, node_id++);
    qNodes[node_count++] = qt.root.adj[2];
    labelEdge(qt.root, qt.root.adj[2]);
    qt.root.adj[0].adj[1] = new QNode(q.nodes[2], qt.root.adj[0], null, null, node_id++);
    qNodes[node_count++] = qt.root.adj[0].adj[1];
    labelEdge(qt.root.adj[0], qt.root.adj[0].adj[1]);
    qt.root.adj[0].adj[2] = new QNode(q.nodes[3], qt.root.adj[0], null, null, node_id++);
    qNodes[node_count++] = qt.root.adj[0].adj[2];
    labelEdge(qt.root.adj[0], qt.root.adj[0].adj[2]);
}
