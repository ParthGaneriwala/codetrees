protected List<VirtualElement> getElementsStructure() throws InvalidMetadataFormatException {
    XLSSheets sheet = XLSSheets.findSheet(modulesSheet.getName());
    if (sheet == null) {
        handleFormatError("Sheet not found! Check sheets names. ", sheet);
        return null;
    }
    Map<VirtualElement, String> parents = new HashMap<VirtualElement, String>();
    Map<VirtualElement, Integer> rows = new HashMap<VirtualElement, Integer>();
    List<VirtualElement> elements = new ArrayList<VirtualElement>();
    for (int i = HEADER_ROWS_NR; i < modulesSheet.getRows(); i++) {
        String name = modulesSheet.getCell(S_NAME_COL_NR, i).getContents().trim();
        String typeName = modulesSheet.getCell(S_TYPE_COL_NR, i).getContents().trim();
        String parentName = modulesSheet.getCell(S_PARENT_COL_NR, i).getContents().trim();
        if (name.equals("") && typeName.equals("") && parentName.equals(""))
            continue;
        if (name.equals("")) {
            handleFormatError("Element identifier cannot be empty!", sheet, S_NAME_COL_NR, i);
        }
        if (typeName.equals(""))
            handleFormatError("Element type name cannot be empty!", sheet, S_TYPE_COL_NR, i);
        ElementType et = typeMap.get(typeName);
        if (et == null) {
            handleFormatError("Element type named " + typeName + " not found.", sheet, S_TYPE_COL_NR, i);
            continue;
        }
        VirtualElement ve = new VirtualElement(et);
        ve.setName(name);
        parents.put(ve, parentName);
        // rows.add(i - HEADER_ROWS, ve);
        rows.put(ve, Integer.valueOf(i));
        if (elementMap.containsKey(name)) {
            handleFormatError("Duplicate definition of element: " + name, sheet, E_IDENTIFIER_COL_NR, i);
            continue;
        }
        // if (cable)
        // cableMap.put(name, ve);
        // else
        elementMap.put(name, ve);
        elements.add(ve);
        int location = LOCATION_NOT_AVAILABLE;
        String locationStr = modulesSheet.getCell(S_LOCATION_COL_NR, i).getContents().trim();
        try {
            if (!locationStr.equals(""))
                location = Integer.parseInt(locationStr);
        } catch (NumberFormatException e) {
            handleFormatError("Position " + "should be an long integer value! Was: " + locationStr, sheet, S_LOCATION_COL_NR, i, e);
        }
        ve.setLocation(location);
    }
    for (VirtualElement virtualElement : elements) {
        String parentName = parents.get(virtualElement);
        int i = rows.get(virtualElement).intValue();
        VirtualElement parent = elementMap.get(parentName);
        if (!parentName.equals("") && parent == null)
            handleFormatError("Element's parent, named " + parentName + " not found.", sheet, S_PARENT_COL_NR, i);
        virtualElement.setParent(parent);
    }
    return elements;
}
