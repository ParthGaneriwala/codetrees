protected void handleMouseClickEvent(MouseEvent me) {
    TextFlow textObj = (TextFlow) me.getSource();
    String text = textObj.getText();
    IModelElement key = null;
    HashMap<IModelElement, String> msgMap = ConsoleModel.getMap();
    if (null != msgMap) {
        Iterator It = msgMap.keySet().iterator();
        while (It.hasNext()) {
            IModelElement elementkey = (IModelElement) (It.next());
            // System.out.println(consoleMap.get(elementkey));
            String message = msgMap.get(elementkey);
            if (message.equals(text)) {
                key = elementkey;
                break;
            }
        }
        if (key != null) {
            // get the flow page for current text flow on which mouse is clicked
            FlowPage currentfp = (FlowPage) textObj.getParent();
            boolean bvisible = true;
            // Do nothing
            if (null == currentfp) {
                return;
            }
            // set the b/g color of the cuurent message to yellow
            currentfp.setBackgroundColor(myYellow);
            currentfp.setOpaque(true);
            String elementString = key.toString().trim() + ", ";
            if (key instanceof SolvabilityStatus) {
                elementString = "Solvability Status, ";
            }
            // if oldfp is null, i.e first click
            if (oldfp == null) {
                oldfp = currentfp;
            // Clicked on a new annotation. log this as message read
            // ProcessModelConstants.log.Write("Read, ",elementString, text);
            } else // if click is done on new messge, change the b/g color of old flow page to white
            if (oldfp != currentfp) {
                oldfp.setBackgroundColor(ColorConstants.white);
                oldfp.setOpaque(true);
                // update the oldfp with current fp
                oldfp = currentfp;
            // Clicked on a new annotation. log this as message read
            // ProcessModelConstants.log.Write("Read, ",elementString, text);
            } else // means currentfp == oldfp, clicked twice on the same message
            {
                // reset the b/g color to white
                currentfp.setBackgroundColor(ColorConstants.white);
                currentfp.setOpaque(true);
                // update the old fp. Now nothig is highlighted
                oldfp = null;
                // hide the tooltip
                bvisible = false;
            }
            /**
             * ** manipulation of tool tip begins ****
             */
            // get the annotation figure
            AnnotationFig fig = AnnotationPart.getAnnotationFig(key);
            // If message is of solvbility status, highlight solvability pane
            if (key instanceof SolvabilityStatus) {
                AnnotationPart.setSolvabilityBgColor();
            } else {
                if (null != fig) {
                    // get the location of annotation fig
                    Point location = new Point(fig.getLocation());
                    String msgtoShow = (text.substring(2));
                    msgtoShow.trim();
                    // call the handlemouseevent() of annotation part to show the tooltip
                    AnnotationPart.togglebgColor(fig);
                    AnnotationPart.handlemouseClick(location, msgtoShow, bvisible);
                }
            }
        /**
         * ** manipulation of tool tip ends ****
         */
        }
    }
}
