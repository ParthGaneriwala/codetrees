@Override
protected String go() throws Exception {
    Date thedate = null;
    if (date == null || date.equals("")) {
        thedate = com.sxit.stat.util.StatUtil.getPrevDate();
        date = df.format(thedate);
    } else {
        // try {
        // thedate = df.parse(date);
        // } catch (Exception e) {
        // thedate = com.sxit.stat.util.StatUtil.getPrevDate();
        // }
        thedate = com.sxit.stat.util.StatUtil.getDate(date);
    }
    if (hour == null || hour.equals("")) {
        hour = dfhour.format(new Date());
    }
    UseractionService actionservice = (UseractionService) this.getBean("useractionService");
    if (orderfield == null || orderfield.equals("")) {
        orderfield = "errcount";
        ascdesc = "desc";
    }
    String stattime = "";
    if (flag.equals("1")) {
        stattime = dfyyyyMMdd.format(thedate);
    // long _start = com.sxit.stat.util.StatUtil.getDateTime(thedate);
    // start = (int) (_start / 1000);
    // end = (int) (com.sxit.stat.util.StatUtil.getOneDayAfter(_start) /
    // 1000);
    } else {
        stattime = dfyyyyMMdd.format(thedate) + hour;
    // 
    // date = df.format(new Date());
    // String _date = date + " " + hour + "00:00";
    // start = UseractionService.getDfSec(_date);
    // end = start + 60 * 60;
    }
    // this.resultList = actionservice.getPdpErrorTopList(start, end,
    // getOrderby());
    // this.resultList = actionservice.getPdpErrorTopList(stattime,
    // getOrderby());
    // if (this.resultType.equals("list"))
    // return SUCCESS;
    // else
    // return "excel";
    String result = SUCCESS;
    List _resultList = null;
    if (firstpage.equals("yes")) {
        _resultList = actionservice.getPdpErrorTopList(stattime, getOrderby());
        set("_resultList", _resultList);
    } else {
        _resultList = (List) get("_resultList");
    }
    if (resultType.equals("list")) {
        int totalCount = _resultList.size();
        int startIndex = (pageNo - 1) * pageSize;
        List list = new ArrayList();
        for (int i = startIndex; i < totalCount && i < startIndex + pageSize; i++) {
            list.add(_resultList.get(i));
        }
        this.page = new PaginationSupport(list, totalCount, pageSize, startIndex);
        resultList = list;
        result = SUCCESS;
    } else {
        resultList = _resultList;
        result = "excel";
    }
    return result;
}
