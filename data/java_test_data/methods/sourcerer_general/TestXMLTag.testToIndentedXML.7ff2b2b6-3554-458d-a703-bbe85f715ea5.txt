@Test
public void testToIndentedXML() {
    InputStream inputStream = null;
    XMLTag tag = null;
    inputStream = new ByteArrayInputStream(sTestXML8.getBytes());
    tag = new XMLTag(inputStream);
    // //////////////
    System.out.println(tag.toIndentedXML(0, 2));
    Assert.assertEquals("Incorrect indented XML 8 returned.", sTestXML8_indented, tag.toIndentedXML(0, 2));
    inputStream = new ByteArrayInputStream(sTestXML9.getBytes());
    tag = new XMLTag(inputStream);
    // //////////////
    System.out.println(tag.toIndentedXML(0, 2));
    Assert.assertEquals("Incorrect indented XML 9 returned.", sTestXML9_indented, tag.toIndentedXML(0, 2));
    inputStream = new ByteArrayInputStream(sTestXML10.getBytes());
    tag = new XMLTag(inputStream);
    // //////////////
    System.out.println(tag.toIndentedXML(0, 2));
    Assert.assertEquals("Incorrect indented XML 10 returned.", sTestXML10_indented, tag.toIndentedXML(0, 2));
    inputStream = new ByteArrayInputStream(sTestXML11.getBytes());
    tag = new XMLTag(inputStream);
    // //////////////
    System.out.println(tag.toIndentedXML(0, 2));
    Assert.assertEquals("Incorrect indented XML 11 returned.", sTestXML11_indented, tag.toIndentedXML(0, 2));
    inputStream = new ByteArrayInputStream(sTestXML5.getBytes());
    tag = new XMLTag(inputStream);
    // //////////////
    System.out.println(tag.toIndentedXML(0, 2));
    Assert.assertEquals("Incorrect indented XML 5 returned.", sTestXML5_indented, tag.toIndentedXML(0, 2));
}
