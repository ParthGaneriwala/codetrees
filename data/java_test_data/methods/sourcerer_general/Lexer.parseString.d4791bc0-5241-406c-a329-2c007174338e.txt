protected Node parseString(int start, boolean quotesmart) throws ParserException {
    boolean done;
    char ch;
    char quote;
    done = false;
    quote = 0;
    while (!done) {
        ch = mPage.getCharacter(mCursor);
        if (Page.EOF == ch)
            done = true;
        else if (// escape
        0x1b == ch) {
            ch = mPage.getCharacter(mCursor);
            if (Page.EOF == ch)
                done = true;
            else if ('$' == ch) {
                ch = mPage.getCharacter(mCursor);
                if (Page.EOF == ch)
                    done = true;
                else if ('B' == ch)
                    scanJIS(mCursor);
                else {
                    mPage.ungetCharacter(mCursor);
                    mPage.ungetCharacter(mCursor);
                }
            } else
                mPage.ungetCharacter(mCursor);
        } else if (quotesmart && (0 == quote) && (('\'' == ch) || ('"' == ch)))
            // enter quoted state
            quote = ch;
        else // patch from Gernot Fricke to handle escaped closing quote
        if (quotesmart && (0 != quote) && ('\\' == ch)) {
            // try to consume escape
            ch = mPage.getCharacter(mCursor);
            if ((Page.EOF != ch) && // escaped backslash
            ('\\' != ch) && // escaped quote character
            (ch != quote))
                // ( reflects ["] or [']  whichever opened the quotation)
                // unconsume char if char not an escape
                mPage.ungetCharacter(mCursor);
        } else if (quotesmart && (ch == quote))
            // exit quoted state
            quote = 0;
        else if (quotesmart && (0 == quote) && (ch == '/')) {
            // handle multiline and double slash comments (with a quote)
            // in script like:
            // I can't handle single quotations.
            ch = mPage.getCharacter(mCursor);
            if (Page.EOF == ch)
                done = true;
            else if ('/' == ch) {
                do ch = mPage.getCharacter(mCursor); while ((Page.EOF != ch) && ('\n' != ch));
            } else if ('*' == ch) {
                do {
                    do ch = mPage.getCharacter(mCursor); while ((Page.EOF != ch) && ('*' != ch));
                    ch = mPage.getCharacter(mCursor);
                    if (ch == '*')
                        mPage.ungetCharacter(mCursor);
                } while ((Page.EOF != ch) && ('/' != ch));
            } else
                mPage.ungetCharacter(mCursor);
        } else if ((0 == quote) && ('<' == ch)) {
            ch = mPage.getCharacter(mCursor);
            if (Page.EOF == ch)
                done = true;
            else // the order of these tests might be optimized for speed:
            if ('/' == ch || Character.isLetter(ch) || '!' == ch || '%' == ch || '?' == ch) {
                done = true;
                mPage.ungetCharacter(mCursor);
                mPage.ungetCharacter(mCursor);
            } else {
                // it's not a tag, so keep going, but check for quotes
                mPage.ungetCharacter(mCursor);
            }
        }
    }
    return (makeString(start, mCursor.getPosition()));
}
