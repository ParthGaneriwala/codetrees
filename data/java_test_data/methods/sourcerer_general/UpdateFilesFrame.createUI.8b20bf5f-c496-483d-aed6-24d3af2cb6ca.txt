protected void createUI() {
    setTitle(Config.getString("team.update.title"));
    updateListModel = new DefaultListModel();
    // setIconImage(BlueJTheme.getIconImage());
    setLocation(Config.getLocation("bluej.updatedisplay"));
    // save position when window is moved
    addComponentListener(new ComponentAdapter() {

        public void componentMoved(ComponentEvent event) {
            Config.putLocation("bluej.updatedisplay", getLocation());
        }
    });
    topPanel = new JPanel();
    JScrollPane updateFileScrollPane = new JScrollPane();
    {
        topPanel.setLayout(new BorderLayout());
        JLabel updateFilesLabel = new JLabel(Config.getString("team.update.files"));
        updateFilesLabel.setBorder(BorderFactory.createEmptyBorder(0, 0, 10, 0));
        topPanel.add(updateFilesLabel, BorderLayout.NORTH);
        updateFiles = new JList(updateListModel);
        updateFiles.setCellRenderer(new FileRenderer(project));
        updateFiles.setEnabled(false);
        updateFileScrollPane.setViewportView(updateFiles);
        topPanel.add(updateFileScrollPane, BorderLayout.CENTER);
    }
    bottomPanel = new JPanel();
    {
        bottomPanel.setLayout(new BorderLayout());
        updateAction = new UpdateAction(this);
        updateButton = BlueJTheme.getOkButton();
        updateButton.setAction(updateAction);
        updateButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                includeLayoutCheckbox.setEnabled(false);
            }
        });
        getRootPane().setDefaultButton(updateButton);
        JButton closeButton = BlueJTheme.getCancelButton();
        closeButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                updateAction.cancel();
                updateWorker.abort();
                setVisible(false);
            }
        });
        DBox buttonPanel = new DBox(DBoxLayout.X_AXIS, 0, BlueJTheme.commandButtonSpacing, 0.5f);
        buttonPanel.setBorder(BlueJTheme.generalBorder);
        progressBar = new ActivityIndicator();
        progressBar.setRunning(false);
        DBox checkBoxPanel = new DBox(DBoxLayout.Y_AXIS, 0, BlueJTheme.commandButtonSpacing, 0.5f);
        includeLayoutCheckbox = new JCheckBox(Config.getString("team.update.includelayout"));
        includeLayoutCheckbox.setEnabled(false);
        includeLayoutCheckbox.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                JCheckBox layoutCheck = (JCheckBox) e.getSource();
                includeLayout = layoutCheck.isSelected();
                resetForcedFiles();
                if (includeLayout) {
                    addModifiedLayouts();
                    if (!updateButton.isEnabled()) {
                        updateAction.setEnabled(true);
                    }
                } else // unselected
                {
                    removeModifiedLayouts();
                    if (isUpdateListEmpty()) {
                        updateAction.setEnabled(false);
                    }
                }
            }
        });
        checkBoxPanel.add(includeLayoutCheckbox);
        checkBoxPanel.add(buttonPanel);
        buttonPanel.add(progressBar);
        buttonPanel.add(updateButton);
        buttonPanel.add(closeButton);
        bottomPanel.add(checkBoxPanel, BorderLayout.SOUTH);
    }
    DBox mainPanel = new DBox(DBox.Y_AXIS, 0.5f);
    mainPanel.setBorder(BlueJTheme.dialogBorder);
    mainPanel.add(topPanel);
    mainPanel.add(bottomPanel);
    getContentPane().add(mainPanel);
    pack();
}
