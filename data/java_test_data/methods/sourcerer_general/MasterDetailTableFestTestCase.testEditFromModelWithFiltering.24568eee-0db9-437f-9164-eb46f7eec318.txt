@Test
public void testEditFromModelWithFiltering() {
    MasterDetailTablePanel panel = new MasterDetailTablePanel();
    CobeanTestUtil.setComponentNamesFromPropertyNames(panel);
    ShowcaseTestFrame frame = new ShowcaseTestFrame(panel);
    FrameFixture frameFix = new FrameFixture(frame);
    try {
        frameFix.show();
        MasterDetailTableShowcase sc = new MasterDetailTableShowcase();
        sc.setService(ExamplesUtil.createTestService());
        sc.init(panel);
        final JTextComponentFixture filterTextBox = frameFix.textBox("filterText");
        final JTextComponentFixture titleTextBox = frameFix.textBox("titleTextField");
        final JTextComponentFixture yearTextBox = frameFix.textBox("yearTextField");
        final JTextComponentFixture authorTextBox = frameFix.textBox("authorTextField");
        // Filter some books
        {
            filterTextBox.enterText("The");
            pause(200);
        }
        // select one book
        {
            sc.getModel().setSelectedBook(sc.getModel().getBooks().get(12));
            pause(200);
            titleTextBox.requireText("The Cost of Living");
            yearTextBox.requireText("1999");
            authorTextBox.requireText("Arunhati Roy");
            assertEquals("The Cost of Living", sc.getModel().getSelectedBook().getTitle());
            assertEquals(1999, sc.getModel().getSelectedBook().getYear().intValue());
            assertEquals("Arunhati Roy", sc.getModel().getSelectedBook().getAuthor().getName());
        }
        // select another book
        {
            sc.getModel().setSelectedBook(sc.getModel().getBooks().get(16));
            pause(200);
            titleTextBox.requireText("The Humble Administrator's Garden");
            yearTextBox.requireText("1985");
            authorTextBox.requireText("Vikram Seth");
            assertEquals("The Humble Administrator's Garden", sc.getModel().getSelectedBook().getTitle());
            assertEquals(1985, sc.getModel().getSelectedBook().getYear().intValue());
            assertEquals("Vikram Seth", sc.getModel().getSelectedBook().getAuthor().getName());
        }
        // edit selected title
        {
            titleTextBox.setText("Adam Eva");
            yearTextBox.focus();
            pause(200);
            yearTextBox.requireText("1985");
            authorTextBox.requireText("Vikram Seth");
            assertEquals("Adam Eva", sc.getModel().getSelectedBook().getTitle());
            assertEquals(1985, sc.getModel().getSelectedBook().getYear().intValue());
            assertEquals("Vikram Seth", sc.getModel().getSelectedBook().getAuthor().getName());
        }
        // edit selected year
        {
            yearTextBox.setText("1000");
            titleTextBox.focus();
            pause(200);
            titleTextBox.requireText("Adam Eva");
            yearTextBox.requireText("1000");
            authorTextBox.requireText("Vikram Seth");
            assertEquals("Adam Eva", sc.getModel().getSelectedBook().getTitle());
            assertEquals(1000, sc.getModel().getSelectedBook().getYear().intValue());
            assertEquals("Vikram Seth", sc.getModel().getSelectedBook().getAuthor().getName());
        }
        // reselect the first book
        {
            sc.getModel().setSelectedBook(sc.getModel().getBooks().get(12));
            pause(200);
            titleTextBox.requireText("The Cost of Living");
            yearTextBox.requireText("1999");
            authorTextBox.requireText("Arunhati Roy");
            assertEquals("The Cost of Living", sc.getModel().getSelectedBook().getTitle());
            assertEquals(1999, sc.getModel().getSelectedBook().getYear().intValue());
            assertEquals("Arunhati Roy", sc.getModel().getSelectedBook().getAuthor().getName());
        }
        // reselect the edited book after ceaning the filter
        {
            filterTextBox.deleteText();
            pause(200);
            sc.getModel().setSelectedBook(sc.getModel().getBooks().get(16));
            pause(200);
            titleTextBox.requireText("Adam Eva");
            yearTextBox.requireText("1000");
            authorTextBox.requireText("Vikram Seth");
            assertEquals("Adam Eva", sc.getModel().getSelectedBook().getTitle());
            assertEquals(1000, sc.getModel().getSelectedBook().getYear().intValue());
            assertEquals("Vikram Seth", sc.getModel().getSelectedBook().getAuthor().getName());
        }
    } finally {
        frameFix.cleanUp();
    }
}
