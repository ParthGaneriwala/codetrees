public void testMerge() {
    // final Extracts extracts = mock(Extracts.class);
    // checking(new Expectations() {{
    // oneOf(extracts).getJiraExtract();
    // }});
    Extracts extracts = new Extracts();
    RevisionInfos svnExtract = new RevisionInfos();
    svnExtract.addSource(initSourceInfo("ENT-324"));
    svnExtract.addSource(initSourceInfo("ENT-963"));
    svnExtract.addSource(initSourceInfo("ENT-387"));
    svnExtract.addSource(initSourceInfo("QC-56"));
    extracts.getVCSExtract().add(svnExtract);
    TasksList jiraExtract = new TasksList();
    jiraExtract.addTask(new TaskInfos("ENT-324"));
    jiraExtract.addTask(new TaskInfos("ENT-387"));
    extracts.getTasksExtract().add(jiraExtract);
    TasksList qcExtract = new TasksList();
    qcExtract.addTask(new TaskInfos("QC-39"));
    qcExtract.addTask(new TaskInfos("QC-56"));
    extracts.getTasksExtract().add(qcExtract);
    ReleaseInfos releaseInfos = new ReleaseInfos();
    releaseInfos.setExtracts(extracts);
    releaseInfos.merge();
    MergeResult res = releaseInfos.getMergeResult();
    assertEquals(3, res.getAgreedContent().size());
    assertEquals("ENT-324", res.getAgreedContent().get(0).getId());
    assertEquals("ENT-387", res.getAgreedContent().get(1).getId());
    assertEquals("QC-56", res.getAgreedContent().get(2).getId());
    assertEquals(1, res.getProblematicContent().size());
    assertEquals("QC-39", res.getProblematicContent().get(0).getId());
    assertEquals(1, res.getOrphanContent().size());
    assertEquals("ENT-963", res.getOrphanContent().get(0).getTaskId());
}
