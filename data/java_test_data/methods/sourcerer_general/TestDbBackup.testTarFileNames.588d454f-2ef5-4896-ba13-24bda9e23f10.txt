public void testTarFileNames() throws SQLException, IOException, TarMalformatException {
    boolean caught;
    try {
        setupConn("db1");
        conn.createStatement().executeUpdate("INSERT INTO t VALUES(2)");
        conn.commit();
        // #1:  COMPRESSED -> no-extension
        caught = false;
        try {
            conn.createStatement().executeUpdate("BACKUP DATABASE TO '" + baseDir.getAbsolutePath() + "/x/bad' BLOCKING COMPRESSED");
        } catch (SQLException se) {
            caught = true;
        }
        if (!caught) {
            fail("BACKUP did not throw even though requested compression " + "to file '/x/bad'");
        }
        // #2:  NOT COMPRESSED -> no-extension
        caught = false;
        try {
            conn.createStatement().executeUpdate("BACKUP DATABASE TO '" + baseDir.getAbsolutePath() + "/x/bad' BLOCKING NOT COMPRESSED");
        } catch (SQLException se) {
            caught = true;
        }
        if (!caught) {
            fail("BACKUP did not throw even though requested " + "no-compression to file '/x/bad'");
        }
        // #3:  COMPRESSED -> *.txt
        caught = false;
        try {
            conn.createStatement().executeUpdate("BACKUP DATABASE TO '" + baseDir.getAbsolutePath() + "/x/bad.txt' BLOCKING COMPRESSED");
        } catch (SQLException se) {
            caught = true;
        }
        if (!caught) {
            fail("BACKUP did not throw even though requested compression " + "to file '/x/bad.txt'");
        }
        // #4:  NOT COMPRESSED -> *.txt
        caught = false;
        try {
            conn.createStatement().executeUpdate("BACKUP DATABASE TO '" + baseDir.getAbsolutePath() + "/x/bad.txt' BLOCKING NOT COMPRESSED");
        } catch (SQLException se) {
            caught = true;
        }
        if (!caught) {
            fail("BACKUP did not throw even though requested " + "no-compression to file '/x/bad.txt'");
        }
        // #5:  DEFAULT -> *.tar
        caught = false;
        try {
            conn.createStatement().executeUpdate("BACKUP DATABASE TO '" + baseDir.getAbsolutePath() + "/x/bad.tar' BLOCKING");
        } catch (SQLException se) {
            caught = true;
        }
        if (!caught) {
            fail("BACKUP did not throw even though requested default " + "to file '/x/bad.tar'");
        }
        // #6:  COMPRESSION -> *.tar
        caught = false;
        try {
            conn.createStatement().executeUpdate("BACKUP DATABASE TO '" + baseDir.getAbsolutePath() + "/x/bad.tar' BLOCKING COMPRESSED");
        } catch (SQLException se) {
            caught = true;
        }
        if (!caught) {
            fail("BACKUP did not throw even though requested compression " + "to file '/x/bad.tar'");
        }
        // #7:  NOT COMPRESSED -> *.tar.gz
        caught = false;
        try {
            conn.createStatement().executeUpdate("BACKUP DATABASE TO '" + baseDir.getAbsolutePath() + "/x/bad.tar.gz' BLOCKING NOT COMPRESSED");
        } catch (SQLException se) {
            caught = true;
        }
        if (!caught) {
            fail("BACKUP did not throw even though requested " + "non-compression to file '/x/bad.tar.gz'");
        }
        // #8:  NOT COMPRESSED -> *.tgz
        caught = false;
        try {
            conn.createStatement().executeUpdate("BACKUP DATABASE TO '" + baseDir.getAbsolutePath() + "/x/bad.tgz' BLOCKING NOT COMPRESSED");
        } catch (SQLException se) {
            caught = true;
        }
        if (!caught) {
            fail("BACKUP did not throw even though requested " + "non-compression to file '/x/bad.tgz'");
        }
        // Finally run a test to ensure that the attempts above didn't
        // fail for some unexpected reason.
        conn.createStatement().executeUpdate("BACKUP DATABASE TO '" + baseDir.getAbsolutePath() + "/positivetest.tar' BLOCKING NOT COMPRESSED");
    } finally {
        shutdownAndCloseConn();
    }
}
