public void onSubmit() {
    try {
        String date = (String) dateModel.getObject();
        String or = (String) orModel.getObject();
        String name = (String) nameModel.getObject();
        String assessment = (String) assessmentModel.getObject();
        String fines = (String) finesModel.getObject();
        String collector = (String) collectorModel.getObject();
        String auditor = (String) auditorModel.getObject();
        String uploader = ((Sessions) getSession()).getDesc();
        Date today = new Date();
        Timestamp timestamp = new Timestamp(today.getTime());
        String ts = timestamp.toString();
        ScheduleCollections sc = new ScheduleCollections();
        sc.setDate(date);
        sc.setOrNumber(or);
        sc.setName(name);
        float newAssessment = Float.valueOf(assessment);
        sc.setAssessment(newAssessment);
        float newFines = Float.valueOf(fines);
        sc.setFines(newFines);
        sc.setCollector(collector);
        sc.setAuditor(auditor);
        sc.setUploader(uploader);
        sc.setDateCreated(ts);
        sc.setStatus("PENDING");
        sqlMap.insert("ScheduleCollections.insert", sc);
        Logs log = new Logs();
        log.setLog_activity("Schedule Of Collections: " + or);
        log.setLog_officer(uploader);
        log.setLog_time(ts);
        sqlMap.insert("Logs.insert", log);
        BookKeepersSubsidiaryList page = new BookKeepersSubsidiaryList();
        setResponsePage(page);
        error("added");
    } catch (SQLException e) {
        error("Fill up necessary fields");
        e.printStackTrace();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
