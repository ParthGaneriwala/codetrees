@Override
public void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.main);
    // On cr�� le format des montant
    formatMontants = new DecimalFormat();
    formatMontants.setMaximumFractionDigits(2);
    formatMontants.setMinimumFractionDigits(2);
    /* --- initialisation � la cr�ation de l'activit� --- */
    boutonAccueil = (Button) findViewById(R.id.btn_accueil);
    boutonAccueil.setOnClickListener(new OnClickListener() {

        @Override
        public void onClick(View v) {
            // On veut afficher la vue Liste_comptes
            Intent intent = new Intent(main.this, ListeComptes.class);
            main.this.startActivityForResult(intent, 1000);
            Log.i("PERSO", "on ouvre la liste des comptes");
            Toast.makeText(main.this, "solde du compte : " + gestBD.getCompteByName("CompteBidon").getSoldeCourant(), Toast.LENGTH_LONG).show();
        }
    });
    /* --- TESTS DE LA LOGIQUE METIER --- */
    gestionnaire = new GestionComptes();
    Compte compteCourant = new Compte("compte courant");
    // -- On ajoute des comptes
    gestionnaire.ajouterCompte(compteCourant);
    gestionnaire.setCompteCourant(compteCourant);
    Log.i("TEST", "le compte courant est : " + gestionnaire.getCompteCourant());
    // cr�ation d'un type d'op�ration par d�faut
    TypeOperation typeDefaut = new TypeOperation();
    typeDefaut.setLibelleDefaut("Libelle officiel Operation");
    typeDefaut.setLibellePerso("Operation non renseign�e");
    typeDefaut.setNom("Type par d�faut");
    gestionnaire.ajouterTypeOperation(typeDefaut);
    Compte compteBidon = new Compte("CompteBidon", 1000.0);
    compteBidon.ajouterOperation(new Operation(typeDefaut, 50.0, NatureOperation.debit));
    compteBidon.ajouterOperation(new Operation(typeDefaut, 80.0, NatureOperation.credit));
    gestionnaire.ajouterCompte(compteBidon);
    gestionnaire.ajouterCompte(new Compte("PEL"));
    gestionnaire.ajouterCompte(new Compte("CEL", 1570.50));
    // un type d'op�ration
    TypeOperation typeEssence = new TypeOperation();
    typeEssence.setLibelleDefaut("ELF carburant");
    typeEssence.setLibellePerso("plein d'essence de ma renault 21 turbo");
    typeEssence.setNature(NatureOperation.debit);
    typeEssence.setNom("Essence");
    gestionnaire.ajouterTypeOperation(typeEssence);
    gestionnaire.getCompteCourant().ajouterOperation(new Operation(typeEssence, 80.0, NatureOperation.debit));
    Operation salaire = new Operation(typeDefaut, 712.00, NatureOperation.credit);
    salaire.setLibelleDefaut("SALAIRE");
    salaire.setLibellePerso("salaire septime");
    gestionnaire.getCompteCourant().ajouterOperation(salaire);
    /* test de la base de donn�es */
    gestBD = new GestionPersistance(getBaseContext());
    gestBD.insertCompte(compteBidon);
    // On affiche le compte courant
    Log.i("TEST", "le compte courant est : " + gestionnaire.getCompteCourant());
}
