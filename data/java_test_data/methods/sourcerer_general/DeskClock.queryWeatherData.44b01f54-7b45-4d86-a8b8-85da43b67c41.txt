private void queryWeatherData() {
    // assume it's not present on the device.
    if (mGenieResources == null)
        return;
    Uri queryUri = new Uri.Builder().scheme(android.content.ContentResolver.SCHEME_CONTENT).authority(WEATHER_CONTENT_AUTHORITY).path(WEATHER_CONTENT_PATH).appendPath(new Long(System.currentTimeMillis()).toString()).build();
    if (DEBUG)
        Log.d(LOG_TAG, "querying genie: " + queryUri);
    Cursor cur;
    try {
        cur = managedQuery(queryUri, WEATHER_CONTENT_COLUMNS, null, null, null);
    } catch (RuntimeException e) {
        Log.e(LOG_TAG, "Weather query failed", e);
        cur = null;
    }
    if (cur != null && cur.moveToFirst()) {
        if (DEBUG) {
            java.lang.StringBuilder sb = new java.lang.StringBuilder("Weather query result: {");
            for (int i = 0; i < cur.getColumnCount(); i++) {
                if (i > 0)
                    sb.append(", ");
                sb.append(cur.getColumnName(i)).append("=").append(cur.getString(i));
            }
            sb.append("}");
            Log.d(LOG_TAG, sb.toString());
        }
        mWeatherIconDrawable = mGenieResources.getDrawable(cur.getInt(cur.getColumnIndexOrThrow("iconResId")));
        mWeatherLocationString = cur.getString(cur.getColumnIndexOrThrow("location"));
        // any of these may be NULL
        final int colTemp = cur.getColumnIndexOrThrow("temperature");
        final int colHigh = cur.getColumnIndexOrThrow("highTemperature");
        final int colLow = cur.getColumnIndexOrThrow("lowTemperature");
        mWeatherCurrentTemperatureString = cur.isNull(colTemp) ? "\u2014" : String.format("%d\u00b0", cur.getInt(colTemp));
        mWeatherHighTemperatureString = cur.isNull(colHigh) ? "\u2014" : String.format("%d\u00b0", cur.getInt(colHigh));
        mWeatherLowTemperatureString = cur.isNull(colLow) ? "\u2014" : String.format("%d\u00b0", cur.getInt(colLow));
    } else {
        Log.w(LOG_TAG, "No weather information available (cur=" + cur + ")");
        mWeatherIconDrawable = null;
        mWeatherLocationString = getString(R.string.weather_fetch_failure);
        mWeatherCurrentTemperatureString = mWeatherHighTemperatureString = mWeatherLowTemperatureString = "";
    }
    mHandy.sendEmptyMessage(UPDATE_WEATHER_DISPLAY_MSG);
}
