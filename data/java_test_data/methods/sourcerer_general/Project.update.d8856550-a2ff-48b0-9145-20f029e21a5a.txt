public int update(Connection db) throws SQLException {
    if (this.getId() == -1) {
        throw new SQLException("ID was not specified");
    }
    if (!isValid()) {
        return -1;
    }
    // Compare with the previous project
    Project previousProject = ProjectUtils.loadProject(id);
    // Make data consistent
    ProjectUtils.formatAddress(this);
    ProjectUtils.formatPhoneNumbers(this);
    ProjectUtils.formatWebAddress(this);
    // Check the uniqueId
    if (!StringUtils.hasText(uniqueId)) {
        uniqueId = previousProject.getUniqueId();
    }
    if (!StringUtils.hasText(uniqueId) || !uniqueId.equals(previousProject.getUniqueId())) {
        // generate from the title
        if (StringUtils.hasText(uniqueId)) {
            // Example: godfathers-pizza-2
            uniqueId = ProjectUtils.updateUniqueId(db, id, uniqueId);
        } else {
            // Example: Godfather's Pizza
            uniqueId = ProjectUtils.updateUniqueId(db, id, title);
        }
    }
    // See if the state is changing...
    Timestamp previousApprovalDate = previousProject.getApprovalDate();
    boolean previouslyApproved = (previousApprovalDate != null);
    Timestamp previousCloseDate = previousProject.getCloseDate();
    boolean previouslyClosed = (previousCloseDate != null);
    // Update the project
    int resultCount = 0;
    PreparedStatement pst = db.prepareStatement("UPDATE projects " + "SET department_id = ?, category_id = ?, title = ?, shortdescription = ?, requestedby = ?, " + "requesteddept = ?, requestdate = ?, " + "approvaldate = ?, closedate = ?, owner = ?, est_closedate = ?, budget = ?, " + "budget_currency = ?, template = ?, " + (features.getUpdateAllowGuests() ? "allow_guests = ?, " : "") + (features.getUpdateAllowParticipants() ? "allows_user_observers = ?, " : "") + (features.getUpdateMembershipRequired() ? "membership_required = ?, " : "") + (level > -1 ? "level = ?, " : "") + "description = ?, " + "address_to = ?, addrline1 = ?, addrline2 = ?, addrline3 = ?, city = ?, state = ?, country = ?, postalcode = ?, " + "latitude = ?, longitude = ?, " + "email1 = ?, email2 = ?, email3 = ?, " + "home_phone = ?, home_phone_ext = ?, home2_phone = ?, home2_phone_ext = ?, home_fax = ?, " + "business_phone = ?, business_phone_ext = ?, business2_phone = ?, business2_phone_ext = ?, business_fax = ?, " + "mobile_phone = ?, pager_number = ?, car_phone = ?, radio_phone = ?, web_page = ?, twitter_id = ?, " + "subcategory1_id = ?, subcategory2_id = ?, subcategory3_id = ?, keywords = ?, " + "facebook_page = ?, youtube_channel_id = ?, ustream_id = ?, livestream_id = ?, justintv_id = ?, qik_id = ?, " + "modifiedby = ?, modified = CURRENT_TIMESTAMP " + "WHERE project_id = ? " + "AND modified = ? ");
    int i = 0;
    DatabaseUtils.setInt(pst, ++i, departmentId);
    DatabaseUtils.setInt(pst, ++i, categoryId);
    pst.setString(++i, title);
    pst.setString(++i, shortDescription);
    pst.setString(++i, requestedBy);
    pst.setString(++i, requestedByDept);
    DatabaseUtils.setTimestamp(pst, ++i, requestDate);
    if (previouslyApproved && approved) {
        pst.setTimestamp(++i, previousApprovalDate);
    } else if (!previouslyApproved && approved) {
        approvalDate = new Timestamp(System.currentTimeMillis());
        approvalDate.setNanos(0);
        pst.setTimestamp(++i, approvalDate);
    } else if (!approved) {
        pst.setNull(++i, java.sql.Types.DATE);
    }
    if (previouslyClosed && closed) {
        pst.setTimestamp(++i, previousCloseDate);
    } else if (!previouslyClosed && closed) {
        closeDate = new Timestamp(System.currentTimeMillis());
        closeDate.setNanos(0);
        pst.setTimestamp(++i, closeDate);
    } else if (!closed) {
        pst.setNull(++i, java.sql.Types.DATE);
    }
    DatabaseUtils.setInt(pst, ++i, owner);
    DatabaseUtils.setTimestamp(pst, ++i, estimatedCloseDate);
    DatabaseUtils.setDouble(pst, ++i, budget);
    pst.setString(++i, budgetCurrency);
    pst.setBoolean(++i, template);
    if (features.getUpdateAllowGuests()) {
        pst.setBoolean(++i, features.getAllowGuests());
    }
    if (features.getUpdateAllowParticipants()) {
        pst.setBoolean(++i, features.getAllowParticipants());
    }
    if (features.getUpdateMembershipRequired()) {
        pst.setBoolean(++i, features.getMembershipRequired());
    }
    if (level > -1) {
        pst.setInt(++i, level);
    }
    pst.setString(++i, description);
    pst.setString(++i, addressTo);
    pst.setString(++i, addressLine1);
    pst.setString(++i, addressLine2);
    pst.setString(++i, addressLine3);
    pst.setString(++i, city);
    pst.setString(++i, state);
    pst.setString(++i, country);
    pst.setString(++i, postalCode);
    DatabaseUtils.setDouble(pst, ++i, latitude);
    DatabaseUtils.setDouble(pst, ++i, longitude);
    pst.setString(++i, email1);
    pst.setString(++i, email2);
    pst.setString(++i, email3);
    pst.setString(++i, homePhone);
    pst.setString(++i, homePhoneExt);
    pst.setString(++i, home2Phone);
    pst.setString(++i, home2PhoneExt);
    pst.setString(++i, homeFax);
    pst.setString(++i, businessPhone);
    pst.setString(++i, businessPhoneExt);
    pst.setString(++i, business2Phone);
    pst.setString(++i, business2PhoneExt);
    pst.setString(++i, businessFax);
    pst.setString(++i, mobilePhone);
    pst.setString(++i, pagerNumber);
    pst.setString(++i, carPhone);
    pst.setString(++i, radioPhone);
    pst.setString(++i, webPage);
    pst.setString(++i, twitterId);
    DatabaseUtils.setInt(pst, ++i, subCategory1Id);
    DatabaseUtils.setInt(pst, ++i, subCategory2Id);
    DatabaseUtils.setInt(pst, ++i, subCategory3Id);
    pst.setString(++i, keywords);
    pst.setString(++i, facebookPage);
    pst.setString(++i, youtubeChannelId);
    pst.setString(++i, ustreamId);
    pst.setString(++i, livestreamId);
    pst.setString(++i, justintvId);
    pst.setString(++i, qikId);
    pst.setInt(++i, this.getModifiedBy());
    pst.setInt(++i, this.getId());
    pst.setTimestamp(++i, modified);
    resultCount = pst.executeUpdate();
    pst.close();
    CacheUtils.invalidateValue(Constants.SYSTEM_PROJECT_NAME_CACHE, id);
    CacheUtils.invalidateValue(Constants.SYSTEM_PROJECT_CACHE, id);
    if (profile && owner > -1) {
        CacheUtils.invalidateValue(Constants.SYSTEM_USER_CACHE, owner);
    }
    return resultCount;
}
