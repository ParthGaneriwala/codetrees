public List<Chord> importChords(InputStream inputStream) throws XmlPullParserException, IOException {
    List<Chord> importedChords = new ArrayList<Chord>();
    XmlPullParserFactory factory = XmlPullParserFactory.newInstance();
    factory.setNamespaceAware(false);
    XmlPullParser parser = factory.newPullParser();
    // Some variables to use when building the chord
    String chordName = null;
    String variantName = null;
    String fingeringName = null;
    // int used when naming unnamed fingerings
    int fingeringCount = 0;
    boolean isCommon = false;
    int[] fingering;
    parser.setInput(new InputStreamReader(inputStream));
    int eventType = parser.getEventType();
    while (eventType != XmlPullParser.END_DOCUMENT) {
        if (eventType == XmlPullParser.START_TAG) {
            String currentTag = parser.getName();
            if (currentTag.equalsIgnoreCase(CHORD_ELEMENT)) {
                chordName = parser.getAttributeValue(null, CHORD_NAME_ATTRIBUTE);
            } else if (currentTag.equalsIgnoreCase(VARIANT_ELEMENT)) {
                variantName = parser.getAttributeValue(null, VARIANT_NAME_ATTRIBUTE);
            } else if (currentTag.equalsIgnoreCase(FINGERING_ELEMENT)) {
                // Get the name of the fingering, or assign a number if there was none provided
                fingeringName = parser.getAttributeValue(null, FINGERING_NAME_ATTRIBUTE);
                if (fingeringName == null) {
                    fingeringName = "" + fingeringCount++;
                }
                // Get whether or not this is a common fingering
                String isCommonString = parser.getAttributeValue(null, FINGERING_COMMON_ATTRIBUTE);
                if (isCommonString != null) {
                    isCommon = Boolean.parseBoolean(isCommonString);
                }
                // Decode the fingering data
                parser.next();
                String encodedFingeringString = parser.getText();
                fingering = DecodeFingeringString(encodedFingeringString);
                // TODO - This is a terrible hack to avoid loading chords we can't display properly ATM
                boolean load = true;
                for (int i : fingering) {
                    if (i > 7) {
                        load = false;
                        break;
                    }
                }
                if (load) {
                    // Generate the new chord and add it to the output set
                    Chord newChord = new Chord(chordName, variantName, fingeringName, isCommon, fingering);
                    importedChords.add(newChord);
                }
            }
        } else if (eventType == XmlPullParser.END_TAG) {
            // Reset the cache values
            String currentTag = parser.getName();
            if (currentTag.equalsIgnoreCase(CHORD_ELEMENT)) {
                chordName = null;
            } else if (currentTag.equalsIgnoreCase(VARIANT_ELEMENT)) {
                variantName = null;
                fingeringCount = 0;
            } else if (currentTag.equalsIgnoreCase(FINGERING_ELEMENT)) {
                fingeringName = null;
                fingering = null;
                isCommon = false;
            }
        }
        eventType = parser.next();
    }
    return importedChords;
}
