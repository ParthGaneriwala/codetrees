/**
 * ��ע��ɹ�����Ӧ,˵����Ҳ���Ƕ�clientTransaction.sendRequest();����Ӧ
 */
public void processOK(Response responseCloned, ClientTransaction clientTransaction) {
    InstantMessagingGUI imGUI = imUA.getInstantMessagingGUI();
    ListenerInstantMessaging listenerIM = imGUI.getListenerInstantMessaging();
    JMenu signMenu = imGUI.getSignMenu();
    JRadioButtonMenuItem offlineJRadioButtonMenuItem = imGUI.getOfflineJRadioButtonMenuItem();
    JRadioButtonMenuItem onlineJRadioButtonMenuItem = imGUI.getOnlineJRadioButtonMenuItem();
    JLabel statusLabel = imGUI.getStatusLabel();
    ExpiresHeader expiresHeader = (ExpiresHeader) responseCloned.getHeader(ExpiresHeader.NAME);
    System.out.println("haha" + ExpiresHeader.NAME);
    if (expiresHeader == null || expiresHeader.getExpires() != 0) {
        if (!isRegistered()) {
            // ��û�е�¼���������������ɵ�¼�����
            DebugIM.println("process OK for REGISTER (to signIn) in progress");
            // WE are registered!!!!
            imGUI.setTitle("Sip IM Client");
            signMenu.setText(" Sign Out ");
            signMenu.setToolTipText(" Sign Out");
            signIn = true;
            DebugIM.println("processing done: signed In");
            // WE have to block all the configurations until we unregister
            imGUI.blockProperties();
            // We have to update our status and notice all the buddies!
            // �����еĺ��ѷ���Ϣ�������ǣ��ҵ�½��
            statusLabel.setText(" online ");
            onlineJRadioButtonMenuItem.setSelected(true);
            listenerIM.setLocalStatus("online");
            BuddyList buddyList = imGUI.getBuddyList();
            Vector buddies = buddyList.getBuddies();
            // WE have to subscribe to all our buddies!!!
            // �������к��ѵ�����״̬
            IMSubscribeProcessing imSubscribeProcessing = imUA.getIMSubscribeProcessing();
            imSubscribeProcessing.sendSubscribeToAllPresentities(buddies, false);
            // WE have to notify all our subscribers!!!!
            // �����к��ѷ���notify
            IMNotifyProcessing imNotifyProcessing = imUA.getIMNotifyProcessing();
            imNotifyProcessing.sendNotifyToAllSubscribers("open", "online");
            // We have to reopen all our Chat sessions!!!
            ChatSessionManager chatSessionManager = listenerIM.getChatSessionManager();
        // chatSessionManager.reOpenAllActiveSessions();
        } else {
            DebugIM.println("Dropping OK retransmission for REGISTER, we are already logged in.");
        }
    } else {
        // �Ѿ������˵ǳ�
        DebugIM.println("process OK for REGISTER (to signOut) in progress");
        // WE are logged out:
        imGUI.setTitle("NIST-SIP Instant Messaging: User unregistered");
        signMenu.setText(" Sign In ");
        signMenu.setToolTipText("Sign In ");
        signIn = false;
        DebugIM.println("processing done: signed Out");
        // WE have to block all the configurations until we unregister
        imGUI.unblockProperties();
        // WE have to update our status and notice all the buddies!
        statusLabel.setText(" offline ");
        offlineJRadioButtonMenuItem.setSelected(true);
        listenerIM.setLocalStatus(" ���� ");
        // WE have to notify all our subscribers!!!!
        IMNotifyProcessing imNotifyProcessing = imUA.getIMNotifyProcessing();
        imNotifyProcessing.sendNotifyToAllSubscribers("closed", "offline");
        // WE put all the contacts offline:
        BuddyList buddyList = imGUI.getBuddyList();
        buddyList.changeAllBuddiesStatus("offline");
        // Vector buddies=buddyList.getBuddies();
        // WE have to send unSUBSCRIBE to all our buddies!
        // IMSubscribeProcessing
        // imSubscribeProcessing=imUA.getIMSubscribeProcessing();
        // imSubscribeProcessing.sendSubscribeToAllPresentities(buddies,true);
        // We have to close all our Chat sessions!!!
        ChatSessionManager chatSessionManager = listenerIM.getChatSessionManager();
        chatSessionManager.closeAllActiveSessions();
    }
}
