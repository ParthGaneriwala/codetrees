private void printAllTaskAttempts(String taskType) {
    Map<String, JobHistory.Task> tasks = job.getAllTasks();
    StringBuffer taskList = new StringBuffer();
    taskList.append("\n").append(taskType);
    taskList.append(" task list for ").append(jobId);
    taskList.append("\nTaskId\t\tStartTime");
    if (Values.REDUCE.name().equals(taskType)) {
        taskList.append("\tShuffleFinished\tSortFinished");
    }
    taskList.append("\tFinishTime\tHostName\tError\tTaskLogs");
    taskList.append("\n====================================================");
    System.out.println(taskList.toString());
    for (JobHistory.Task task : tasks.values()) {
        for (JobHistory.TaskAttempt attempt : task.getTaskAttempts().values()) {
            if (taskType.equals(task.get(Keys.TASK_TYPE))) {
                taskList.setLength(0);
                taskList.append(attempt.get(Keys.TASK_ATTEMPT_ID)).append("\t");
                taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat, attempt.getLong(Keys.START_TIME), 0)).append("\t");
                if (Values.REDUCE.name().equals(taskType)) {
                    ReduceAttempt reduceAttempt = (ReduceAttempt) attempt;
                    taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat, reduceAttempt.getLong(Keys.SHUFFLE_FINISHED), reduceAttempt.getLong(Keys.START_TIME)));
                    taskList.append("\t");
                    taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat, reduceAttempt.getLong(Keys.SORT_FINISHED), reduceAttempt.getLong(Keys.SHUFFLE_FINISHED)));
                }
                taskList.append(StringUtils.getFormattedTimeWithDiff(dateFormat, attempt.getLong(Keys.FINISH_TIME), attempt.getLong(Keys.START_TIME)));
                taskList.append("\t");
                taskList.append(attempt.get(Keys.HOSTNAME)).append("\t");
                taskList.append(attempt.get(Keys.ERROR));
                String taskLogsUrl = JobHistory.getTaskLogsUrl(attempt);
                taskList.append(taskLogsUrl != null ? taskLogsUrl : "n/a");
                System.out.println(taskList.toString());
            }
        }
    }
}
