@Override
protected void onSetUp() throws Exception {
    super.onSetUp();
    smtpPort = smtpPort + (int) (Math.random() * 100);
    // Set up a new thread context class loader
    threadContextClassLoader = Thread.currentThread().getContextClassLoader();
    Thread.currentThread().setContextClassLoader(new URLClassLoader(new URL[0], this.getClass().getClassLoader()));
    // Set up Servlet API Objects
    servletContext = new MockServletContext();
    config = new MockServletConfig(servletContext);
    session = new MockHttpSession();
    session.setServletContext(servletContext);
    request = new MockHttpServletRequest(session);
    request.setServletContext(servletContext);
    request.setLocale(new Locale("en"));
    response = new MockHttpServletResponse();
    // Set up JSF API Objects
    FactoryFinder.releaseFactories();
    FactoryFinder.setFactory(FactoryFinder.APPLICATION_FACTORY, "org.apache.shale.test.mock.MockApplicationFactory");
    FactoryFinder.setFactory(FactoryFinder.FACES_CONTEXT_FACTORY, "org.apache.shale.test.mock.MockFacesContextFactory");
    FactoryFinder.setFactory(FactoryFinder.LIFECYCLE_FACTORY, "org.apache.shale.test.mock.MockLifecycleFactory");
    FactoryFinder.setFactory(FactoryFinder.RENDER_KIT_FACTORY, "org.apache.shale.test.mock.MockRenderKitFactory");
    externalContext = new MockExternalContext(servletContext, request, response);
    lifecycleFactory = (MockLifecycleFactory) FactoryFinder.getFactory(FactoryFinder.LIFECYCLE_FACTORY);
    lifecycle = (MockLifecycle) lifecycleFactory.getLifecycle(LifecycleFactory.DEFAULT_LIFECYCLE);
    facesContextFactory = (MockFacesContextFactory) FactoryFinder.getFactory(FactoryFinder.FACES_CONTEXT_FACTORY);
    facesContext = (MockFacesContext) facesContextFactory.getFacesContext(servletContext, request, response, lifecycle);
    externalContext = (MockExternalContext) facesContext.getExternalContext();
    UIViewRoot root = new UIViewRoot();
    root.setViewId("/viewId");
    root.setRenderKitId(RenderKitFactory.HTML_BASIC_RENDER_KIT);
    facesContext.setViewRoot(root);
    ApplicationFactory applicationFactory = (ApplicationFactory) FactoryFinder.getFactory(FactoryFinder.APPLICATION_FACTORY);
    application = (MockApplication) applicationFactory.getApplication();
    facesContext.setApplication(application);
    RenderKitFactory renderKitFactory = (RenderKitFactory) FactoryFinder.getFactory(FactoryFinder.RENDER_KIT_FACTORY);
    renderKit = new MockRenderKit();
    renderKitFactory.addRenderKit(RenderKitFactory.HTML_BASIC_RENDER_KIT, renderKit);
    application.setMessageBundle(Constants.BUNDLE_KEY);
    // set supported locales
    List<Locale> list = new ArrayList<Locale>();
    list.add(new Locale("en"));
    list.add(new Locale("fr"));
    list.add(new Locale("de"));
    list.add(new Locale("es"));
    application.setSupportedLocales(list);
    // change the port on the mailSender so it doesn't conflict with an
    // existing SMTP server on localhost
    JavaMailSenderImpl mailSender = (JavaMailSenderImpl) applicationContext.getBean("mailSender");
    mailSender.setPort(getSmtpPort());
    mailSender.setHost("localhost");
}
