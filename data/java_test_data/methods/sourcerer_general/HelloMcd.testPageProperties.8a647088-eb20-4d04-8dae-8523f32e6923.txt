private void testPageProperties() {
    log.setLevel(Level.DEBUG);
    PageDescription newPage = new PageDescription();
    newPage.setPageUri("http://www.nerdpod.org");
    newPage.setTitle("NerdPod.org Home Page");
    newPage.setLabel("my first semantic web page");
    PropertyDescription prop1 = new PropertyDescription();
    PredicateDescription pred1 = new PredicateDescription();
    pred1.setUri(RDFS.isDefinedBy.getURI());
    prop1.setSubjectUri(newPage.getPageUri());
    prop1.setPredicate(pred1);
    prop1.setObjectUri("http://www.nerdpod.org/definition");
    prop1.setPredicate(pred1);
    newPage.addObjectProperty(prop1);
    newPage.persist();
    newPage.setTitle("Second Title");
    newPage.persist();
    newPage.persist();
    PageDescription thePage = new PageDescription("http://www.nerdpod.org");
    log.debug("Page URI = " + thePage.getPageUri());
    log.debug("Title = " + thePage.getTitle());
    log.debug("Label = " + thePage.getLabel());
    log.debug(thePage.getRdfDescription());
    if (thePage.getObjectProperties() != null) {
        for (PropertyDescription prop : thePage.getObjectProperties()) {
            log.debug("Found property " + prop.getObjectUri());
            log.debug("Predicate " + prop.getPredicate().getUri());
            log.debug("With title " + prop.getObjectTitle());
            log.debug("------------");
        }
    }
    GraphStore gs = GraphStore.getInstance();
    log.debug(gs.getDataModel());
}
