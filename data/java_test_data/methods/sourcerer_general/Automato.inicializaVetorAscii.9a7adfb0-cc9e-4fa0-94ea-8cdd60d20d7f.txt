public void inicializaVetorAscii() {
    vetorAscii = new int[256];
    for (int i = 0; i < vetorAscii.length; i++) {
        // inicializa todo o vetor com o retorno de erro pois todos os valores não mapeados são erro.
        vetorAscii[i] = 24;
    }
    for (int i = 48; i <= 57; i++) {
        // inicializando posições referentes aos dígitos
        vetorAscii[i] = 1;
    }
    for (int i = 65; i <= 90; i++) {
        // inicializando posições referentes às letras maiúsculas
        vetorAscii[i] = 0;
    }
    for (int i = 97; i <= 122; i++) {
        // inicializando posições referentes às letras minúsculas
        vetorAscii[i] = 0;
    }
    // +
    vetorAscii[43] = 2;
    // -
    vetorAscii[45] = 3;
    // /
    vetorAscii[47] = 4;
    // *
    vetorAscii[42] = 5;
    // =
    vetorAscii[61] = 6;
    // !
    vetorAscii[33] = 7;
    // >
    vetorAscii[62] = 8;
    // <
    vetorAscii[60] = 9;
    // &
    vetorAscii[38] = 10;
    // |
    vetorAscii[124] = 11;
    // .
    vetorAscii[46] = 12;
    // ;
    vetorAscii[59] = 13;
    // (
    vetorAscii[40] = 14;
    // )
    vetorAscii[41] = 15;
    // {
    vetorAscii[123] = 16;
    // }
    vetorAscii[125] = 17;
    // [
    vetorAscii[91] = 18;
    // ]
    vetorAscii[93] = 19;
    // " "
    vetorAscii[32] = 20;
    // \r
    vetorAscii[10] = 21;
    // \n
    vetorAscii[13] = 21;
    // \r vai ser tratado como um \n
    vetorAscii[10] = 21;
    // \t
    vetorAscii[9] = 22;
    // _
    vetorAscii[95] = 23;
    // "EOT"
    vetorAscii[4] = 25;
    // ,
    vetorAscii[44] = 26;
    // "
    vetorAscii[34] = 27;
}
