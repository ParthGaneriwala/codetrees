public void parseResponseBody(byte[] packet) {
    byte[] length = new byte[4];
    System.arraycopy(packet, 0, length, 0, 4);
    this.totalLength = Common.bytes4ToInt(length);
    if (log.isDebugEnabled()) {
        log.debug("���ذ����Ƚ�����Ϊ:" + totalLength);
    }
    byte[] commandid = new byte[4];
    System.arraycopy(packet, 4, commandid, 0, 4);
    this.commandID = Common.bytes4ToInt(commandid);
    if (log.isDebugEnabled()) {
        log.debug("���������ֽ�����=" + commandID + "��ʵ��=" + CommandID.CMPP_DELIVER);
    }
    byte[] seqid = new byte[4];
    System.arraycopy(packet, 8, seqid, 0, 4);
    this.sequenceID = Common.bytes4ToInt(seqid);
    if (log.isDebugEnabled()) {
        log.debug("���ذ����кŽ�����Ϊ:" + sequenceID);
    }
    System.arraycopy(packet, 12, msg_Id, 0, 8);
    byte[] dest = new byte[21];
    System.arraycopy(packet, 20, dest, 0, 21);
    this.dest_Id = new String(dest);
    byte[] service = new byte[10];
    System.arraycopy(packet, 41, service, 0, 10);
    this.service_Id = new String(service);
    this.tp_pid = packet[51];
    this.tp_udhi = packet[52];
    this.msg_Fmt = packet[53];
    // byte[] src = new byte[32];
    // System.arraycopy(packet, 42 + 12, src, 0, 32);
    // this.src_terminal_Id = new String(src);
    byte[] src = new byte[21];
    System.arraycopy(packet, 54, src, 0, 21);
    this.src_terminal_Id = new String(src);
    this.registered_Delivery = packet[75];
    this.msg_Length = packet[76];
    if (msg_Length < 0)
        msg_Length = 256 + msg_Length;
    byte[] content = new byte[this.msg_Length];
    if (log.isDebugEnabled())
        log.debug("deliver�����ݳ���Ϊ:" + content.length);
    System.arraycopy(packet, 77, content, 0, content.length);
    if (this.registered_Delivery == 1) {
        report = new CMPPReport();
        System.arraycopy(content, 0, report.msg_Id, 0, 8);
        log.info("���ص���״̬����,��Ӧmsgid=" + Common.bytes8ToLong(report.msg_Id));
        byte[] state = new byte[7];
        System.arraycopy(content, 8, state, 0, 7);
        report.stat = new String(state);
        byte[] subtime = new byte[10];
        System.arraycopy(content, 15, subtime, 0, 10);
        report.submit_time = new String(subtime);
        byte[] donetime = new byte[10];
        System.arraycopy(content, 25, donetime, 0, 10);
        report.done_time = new String(donetime);
        // byte[] destre = new byte[32];
        // System.arraycopy(content, 35, destre, 0, 32);
        // report.dest_terminal_Id = new String(destre);
        byte[] destre = new byte[21];
        System.arraycopy(content, 35, destre, 0, 21);
        report.dest_terminal_Id = new String(destre);
        byte[] seqre = new byte[4];
        System.arraycopy(content, 56, destre, 0, 4);
        report.smsc_sequence = Common.bytes4ToInt(seqre);
    } else {
        // try {
        // this.msg_Content = new String(content, "gb2312");
        // }
        // catch (UnsupportedEncodingException e) {
        // log.error("ϵͳ��֧��gb2312�ַ���,����ϵͳĬ���ַ���");
        // this.msg_Content = new String(content);
        // }
        this.msg_Content = content;
    }
    byte[] reserver = new byte[8];
    // System.arraycopy(packet, 78 + content.length , linkid, 0, 20);
    // linkID = new String(linkid);
    System.arraycopy(packet, 77 + content.length, reserver, 0, 8);
    reserved = new String(reserver);
    log.info("deliver��Ϣ�����ɹ�,msgid=" + bytes2hex(msg_Id));
}
