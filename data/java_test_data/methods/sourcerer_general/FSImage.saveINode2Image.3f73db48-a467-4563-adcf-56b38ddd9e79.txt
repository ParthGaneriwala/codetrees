private static void saveINode2Image(ByteBuffer name, INode node, DataOutputStream out) throws IOException {
    int nameLen = name.position();
    out.writeShort(nameLen);
    out.write(name.array(), name.arrayOffset(), nameLen);
    if (!node.isDirectory()) {
        // write file inode
        INodeFile fileINode = (INodeFile) node;
        out.writeShort(fileINode.getReplication());
        out.writeLong(fileINode.getModificationTime());
        out.writeLong(fileINode.getAccessTime());
        out.writeLong(fileINode.getPreferredBlockSize());
        Block[] blocks = fileINode.getBlocks();
        out.writeInt(blocks.length);
        for (Block blk : blocks) blk.write(out);
        FILE_PERM.fromShort(fileINode.getFsPermissionShort());
        PermissionStatus.write(out, fileINode.getUserName(), fileINode.getGroupName(), FILE_PERM);
    } else {
        // write directory inode
        // replication
        out.writeShort(0);
        out.writeLong(node.getModificationTime());
        // access time
        out.writeLong(0);
        // preferred block size
        out.writeLong(0);
        // # of blocks
        out.writeInt(-1);
        out.writeLong(node.getNsQuota());
        out.writeLong(node.getDsQuota());
        FILE_PERM.fromShort(node.getFsPermissionShort());
        PermissionStatus.write(out, node.getUserName(), node.getGroupName(), FILE_PERM);
    }
}
