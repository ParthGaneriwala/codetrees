protected T doSwitch(int classifierID, EObject theEObject) {
    switch(classifierID) {
        case FMMPackage.FSTRUCTURE:
            {
                FStructure fStructure = (FStructure) theEObject;
                T result = caseFStructure(fStructure);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case FMMPackage.FDECLARABLE:
            {
                FDeclarable fDeclarable = (FDeclarable) theEObject;
                T result = caseFDeclarable(fDeclarable);
                if (result == null)
                    result = caseFStructure(fDeclarable);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case FMMPackage.FINSTANTIABLE:
            {
                FInstantiable fInstantiable = (FInstantiable) theEObject;
                T result = caseFInstantiable(fInstantiable);
                if (result == null)
                    result = caseFStructure(fInstantiable);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case FMMPackage.FSEMANTIC_LINK:
            {
                FSemanticLink fSemanticLink = (FSemanticLink) theEObject;
                T result = caseFSemanticLink(fSemanticLink);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case FMMPackage.FSTRUCTURAL_SEMANTIC_LINK:
            {
                FStructuralSemanticLink<?> fStructuralSemanticLink = (FStructuralSemanticLink<?>) theEObject;
                T result = caseFStructuralSemanticLink(fStructuralSemanticLink);
                if (result == null)
                    result = caseFSemanticLink(fStructuralSemanticLink);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case FMMPackage.FSTRUCTURE_DECLARATION:
            {
                FStructureDeclaration fStructureDeclaration = (FStructureDeclaration) theEObject;
                T result = caseFStructureDeclaration(fStructureDeclaration);
                if (result == null)
                    result = caseFStructuralSemanticLink(fStructureDeclaration);
                if (result == null)
                    result = caseFSemanticLink(fStructureDeclaration);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case FMMPackage.FSTRUCTURE_INSTANTIATION:
            {
                FStructureInstantiation fStructureInstantiation = (FStructureInstantiation) theEObject;
                T result = caseFStructureInstantiation(fStructureInstantiation);
                if (result == null)
                    result = caseFStructuralSemanticLink(fStructureInstantiation);
                if (result == null)
                    result = caseFSemanticLink(fStructureInstantiation);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case FMMPackage.FSOURCE_REFERENCE:
            {
                FSourceReference fSourceReference = (FSourceReference) theEObject;
                T result = caseFSourceReference(fSourceReference);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case FMMPackage.FPATTERN:
            {
                FPattern fPattern = (FPattern) theEObject;
                T result = caseFPattern(fPattern);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case FMMPackage.FROLE:
            {
                FRole<?> fRole = (FRole<?>) theEObject;
                T result = caseFRole(fRole);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        case FMMPackage.FFRAMEWORK:
            {
                FFramework fFramework = (FFramework) theEObject;
                T result = caseFFramework(fFramework);
                if (result == null)
                    result = defaultCase(theEObject);
                return result;
            }
        default:
            return defaultCase(theEObject);
    }
}
