protected void initParams(Database database, String baseFileName) {
    this.dataFileName = dataFileName;
    this.database = database;
    fa = FileUtil.getFileUtil();
    HsqlProperties tableprops = HsqlProperties.delimitedArgPairsToProps(baseFileName, "=", ";", "textdb");
    HsqlDatabaseProperties dbProps = database.getProperties();
    // -- Get file name
    switch(tableprops.errorCodes.length) {
        case 0:
            throw Error.error(ErrorCode.X_S0501);
        case 1:
            // source file name is the only key without a value
            this.dataFileName = tableprops.errorKeys[0].trim();
            break;
        default:
            throw Error.error(ErrorCode.X_S0502);
    }
    // -- Get separators: from database properties, then from table properties
    fs = dbProps.getStringProperty(HsqlDatabaseProperties.textdb_fs);
    fs = tableprops.getProperty(HsqlDatabaseProperties.textdb_fs, fs);
    vs = dbProps.getStringProperty(HsqlDatabaseProperties.textdb_vs);
    vs = tableprops.getProperty(HsqlDatabaseProperties.textdb_vs, vs);
    lvs = dbProps.getStringProperty(HsqlDatabaseProperties.textdb_lvs);
    lvs = tableprops.getProperty(HsqlDatabaseProperties.textdb_lvs, lvs);
    if (vs == null) {
        vs = fs;
    }
    if (lvs == null) {
        lvs = fs;
    }
    fs = translateSep(fs);
    vs = translateSep(vs);
    lvs = translateSep(lvs);
    if (fs.length() == 0 || vs.length() == 0 || lvs.length() == 0) {
        throw Error.error(ErrorCode.X_S0503);
    }
    // -- Get booleans
    ignoreFirst = dbProps.isPropertyTrue(HsqlDatabaseProperties.textdb_ignore_first);
    ignoreFirst = tableprops.isPropertyTrue(HsqlDatabaseProperties.textdb_ignore_first, ignoreFirst);
    isQuoted = dbProps.isPropertyTrue(HsqlDatabaseProperties.textdb_quoted);
    isQuoted = tableprops.isPropertyTrue(HsqlDatabaseProperties.textdb_quoted, isQuoted);
    isAllQuoted = dbProps.isPropertyTrue(HsqlDatabaseProperties.textdb_all_quoted);
    isAllQuoted = tableprops.isPropertyTrue(HsqlDatabaseProperties.textdb_all_quoted, isAllQuoted);
    stringEncoding = dbProps.getStringProperty(HsqlDatabaseProperties.textdb_encoding);
    stringEncoding = tableprops.getProperty(HsqlDatabaseProperties.textdb_encoding, stringEncoding);
    // -- Get size and scale
    int cacheScale = tableprops.getIntegerProperty(HsqlDatabaseProperties.textdb_cache_scale, dbProps.getIntegerProperty(HsqlDatabaseProperties.textdb_cache_scale));
    int cacheSizeScale = tableprops.getIntegerProperty(HsqlDatabaseProperties.textdb_cache_size_scale, dbProps.getIntegerProperty(HsqlDatabaseProperties.textdb_cache_size_scale));
    int lookupTableLength = 1 << cacheScale;
    int avgRowBytes = 1 << cacheSizeScale;
    maxCacheRows = lookupTableLength * 3;
    maxCacheBytes = maxCacheRows * avgRowBytes;
    maxDataFileSize = Integer.MAX_VALUE;
    cachedRowPadding = 1;
    cacheFileScale = 1;
}
