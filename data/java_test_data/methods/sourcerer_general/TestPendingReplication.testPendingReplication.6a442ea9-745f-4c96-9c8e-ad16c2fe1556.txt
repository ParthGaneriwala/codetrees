public void testPendingReplication() {
    // 10 seconds
    int timeout = 10;
    PendingReplicationBlocks pendingReplications;
    pendingReplications = new PendingReplicationBlocks(timeout * 1000);
    // 
    for (int i = 0; i < 10; i++) {
        Block block = new Block(i, i, 0);
        pendingReplications.add(block, i);
    }
    assertEquals("Size of pendingReplications ", 10, pendingReplications.size());
    // 
    // remove one item and reinsert it
    // 
    Block blk = new Block(8, 8, 0);
    // removes one replica
    pendingReplications.remove(blk);
    assertEquals("pendingReplications.getNumReplicas ", 7, pendingReplications.getNumReplicas(blk));
    for (int i = 0; i < 7; i++) {
        // removes all replicas
        pendingReplications.remove(blk);
    }
    assertTrue(pendingReplications.size() == 9);
    pendingReplications.add(blk, 8);
    assertTrue(pendingReplications.size() == 10);
    // 
    for (int i = 0; i < 10; i++) {
        Block block = new Block(i, i, 0);
        int numReplicas = pendingReplications.getNumReplicas(block);
        assertTrue(numReplicas == i);
    }
    // 
    // verify that nothing has timed out so far
    // 
    assertTrue(pendingReplications.getTimedOutBlocks() == null);
    // 
    try {
        Thread.sleep(1000);
    } catch (Exception e) {
    }
    for (int i = 10; i < 15; i++) {
        Block block = new Block(i, i, 0);
        pendingReplications.add(block, i);
    }
    assertTrue(pendingReplications.size() == 15);
    // 
    // Wait for everything to timeout.
    // 
    int loop = 0;
    while (pendingReplications.size() > 0) {
        try {
            Thread.sleep(1000);
        } catch (Exception e) {
        }
        loop++;
    }
    System.out.println("Had to wait for " + loop + " seconds for the lot to timeout");
    // 
    // Verify that everything has timed out.
    // 
    assertEquals("Size of pendingReplications ", 0, pendingReplications.size());
    Block[] timedOut = pendingReplications.getTimedOutBlocks();
    assertTrue(timedOut != null && timedOut.length == 15);
    for (int i = 0; i < timedOut.length; i++) {
        assertTrue(timedOut[i].getBlockId() < 15);
    }
}
