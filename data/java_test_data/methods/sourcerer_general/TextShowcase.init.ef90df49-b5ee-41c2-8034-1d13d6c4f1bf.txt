@Override
public void init(final TextPanel view) {
    model = service.loadAllAuthors().get(7);
    {
        DefaultTextInitializer<String> ini = new DefaultTextInitializer<String>();
        ini.setCoTextComponent(view.getNameTextField());
        ini.setCoFailureComponent(view.getNameFailureTextField());
        ini.setCoResetButton(view.getResetButton());
        ICobean<String> cobean = ini.initialize();
        BoundPropBinding binding = new BoundPropBinding();
        binding.setModelPath("name");
        binding.setCompProperty("value");
        model = binding.bind(model, cobean);
    }
    {
        DefaultTextInitializer<Date> ini = new DefaultTextInitializer<Date>();
        ini.setCoTextComponent(view.getBirthdayTextField());
        ini.setCoFailureComponent(view.getBirthdayFailureTextField());
        ini.setCoResetButton(view.getResetButton());
        ini.setConverter(new DateTextConverter("dd.MM.yyyy"));
        ICobean<Date> cobean = ini.initialize();
        BoundPropBinding binding = new BoundPropBinding();
        binding.setModelPath("birthday");
        binding.setCompProperty("value");
        model = binding.bind(model, cobean);
    }
    {
        DefaultTextInitializer<Long> ini = new DefaultTextInitializer<Long>();
        ini.setCoTextComponent(view.getIdTextField());
        ini.setCoFailureComponent(view.getIdFailureTextField());
        ini.setCoResetButton(view.getResetButton());
        ini.setConverter(new LongTextConverter());
        ICobean<Long> cobean = ini.initialize();
        BoundPropBinding binding = new BoundPropBinding();
        binding.setModelPath("id");
        binding.setCompProperty("value");
        model = binding.bind(model, cobean);
    }
    view.getShowObjectButton().addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            JOptionPane.showMessageDialog(view, model);
        }
    });
    view.getUppercaseButton().addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            final String name = model.getName();
            if (name != null) {
                model.setName(name.toUpperCase());
            }
        }
    });
    view.getLowercaseButton().addActionListener(new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            final String name = model.getName();
            if (name != null) {
                model.setName(name.toLowerCase());
            }
        }
    });
}
