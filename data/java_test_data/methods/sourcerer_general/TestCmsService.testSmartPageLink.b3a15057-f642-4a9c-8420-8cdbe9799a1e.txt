@Test
@DirtiesContext
public void testSmartPageLink() throws Exception {
    configureMinimalGame();
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    CrudRootServiceHelper<DbPage> pageCrud = cmsService.getPageCrudRootServiceHelper();
    DbPage dbPage = pageCrud.createDbChild();
    dbPage.setPredefinedType(CmsUtil.CmsPredefinedPage.HOME);
    dbPage.setName("Home");
    DbPage dbPage2 = pageCrud.createDbChild();
    dbPage2.setName("Page 2");
    DbContentStaticHtml dbContentStaticHtml = new DbContentStaticHtml();
    dbContentStaticHtml.setHtml("This is page two");
    dbPage2.setContentAndAccessWrites(dbContentStaticHtml);
    // Smart link
    DbContentSmartPageLink smartPageLink = new DbContentSmartPageLink();
    dbPage.setContentAndAccessWrites(smartPageLink);
    smartPageLink.init(userService);
    smartPageLink.setAccessDeniedString("No access");
    smartPageLink.setButtonName("Button Name");
    smartPageLink.setDbPage(dbPage2);
    smartPageLink.setEnableAccess(DbContent.Access.REGISTERED_USER);
    smartPageLink.setSpringBeanName("messengerService");
    smartPageLink.setPropertyExpression("unreadMails");
    smartPageLink.setString0("Nothing");
    smartPageLink.setString1("Single");
    smartPageLink.setStringN("Multi $");
    pageCrud.updateDbChild(dbPage);
    pageCrud.updateDbChild(dbPage2);
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Activate
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    cmsService.activateCms();
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Verify not logged in
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    tester.startPage(CmsPage.class);
    tester.assertLabel("form:content:label", "No access");
    tester.assertDisabled("form:content:button");
    Button button = (Button) tester.getComponentFromLastRenderedPage("form:content:button");
    Assert.assertEquals("Button Name", button.getValue());
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Verify logged in 0 mail
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    userService.createUser("test", "test", "test", "");
    userService.login("test", "test");
    tester.startPage(CmsPage.class);
    tester.assertLabel("form:content:label", "Nothing");
    tester.assertEnabled("form:content:button");
    button = (Button) tester.getComponentFromLastRenderedPage("form:content:button");
    Assert.assertEquals("Button Name", button.getValue());
    // Click mail button
    tester.newFormTester("form").submit("content:button");
    tester.assertLabel("form:content", "This is page two");
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Verify logged in 1 mail
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    userService.login("test", "test");
    messengerService.sendMail("test", "subject", "body");
    tester.startPage(CmsPage.class);
    tester.assertLabel("form:content:label", "Single");
    tester.assertEnabled("form:content:button");
    button = (Button) tester.getComponentFromLastRenderedPage("form:content:button");
    Assert.assertEquals("Button Name", button.getValue());
    // Click mail button
    tester.newFormTester("form").submit("content:button");
    tester.assertLabel("form:content", "This is page two");
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
    // Verify logged in 2 mails
    beginHttpSession();
    beginHttpRequestAndOpenSessionInViewFilter();
    userService.login("test", "test");
    messengerService.sendMail("test", "subject", "body");
    tester.startPage(CmsPage.class);
    tester.assertLabel("form:content:label", "Multi 2");
    tester.assertEnabled("form:content:button");
    button = (Button) tester.getComponentFromLastRenderedPage("form:content:button");
    Assert.assertEquals("Button Name", button.getValue());
    // Click mail button
    tester.newFormTester("form").submit("content:button");
    tester.assertLabel("form:content", "This is page two");
    endHttpRequestAndOpenSessionInViewFilter();
    endHttpSession();
}
