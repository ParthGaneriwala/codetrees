final void printRequest(int cid, Result r) {
    if (isSilent()) {
        return;
    }
    StringBuffer sb = new StringBuffer();
    sb.append(cid);
    sb.append(':');
    switch(r.getType()) {
        case ResultConstants.PREPARE:
            {
                sb.append("SQLCLI:SQLPREPARE ");
                sb.append(r.getMainString());
                break;
            }
        case ResultConstants.EXECDIRECT:
            {
                sb.append(r.getMainString());
                break;
            }
        case ResultConstants.EXECUTE:
            {
                sb.append("SQLCLI:SQLEXECUTE:");
                sb.append(r.getStatementID());
                /*
                if (r.getSize() == 1) {
                    sb.append('\n');
                    StringUtil.appendStringValueOf(r.getParameterData(), sb, true);
                }
*/
                break;
            }
        case ResultConstants.BATCHEXECUTE:
            sb.append("SQLCLI:SQLEXECUTE:");
            sb.append("BATCHMODE:");
            sb.append(r.getStatementID());
            break;
        case ResultConstants.UPDATE_RESULT:
            {
                sb.append("SQLCLI:RESULTUPDATE:");
                sb.append(r.getStatementID());
                break;
            }
        case ResultConstants.FREESTMT:
            {
                sb.append("SQLCLI:SQLFREESTMT:");
                sb.append(r.getStatementID());
                break;
            }
        case ResultConstants.GETSESSIONATTR:
            {
                sb.append("HSQLCLI:GETSESSIONATTR");
                break;
            }
        case ResultConstants.SETSESSIONATTR:
            {
                sb.append("HSQLCLI:SETSESSIONATTR:");
                break;
            }
        case ResultConstants.ENDTRAN:
            {
                sb.append("SQLCLI:SQLENDTRAN:");
                switch(r.getActionType()) {
                    case ResultConstants.TX_COMMIT:
                        sb.append("COMMIT");
                        break;
                    case ResultConstants.TX_ROLLBACK:
                        sb.append("ROLLBACK");
                        break;
                    case ResultConstants.TX_SAVEPOINT_NAME_RELEASE:
                        sb.append("SAVEPOINT_NAME_RELEASE ");
                        sb.append(r.getMainString());
                        break;
                    case ResultConstants.TX_SAVEPOINT_NAME_ROLLBACK:
                        sb.append("SAVEPOINT_NAME_ROLLBACK ");
                        sb.append(r.getMainString());
                        break;
                    default:
                        sb.append(r.getActionType());
                }
                break;
            }
        case ResultConstants.STARTTRAN:
            {
                sb.append("SQLCLI:SQLSTARTTRAN");
                break;
            }
        case ResultConstants.DISCONNECT:
            {
                sb.append("SQLCLI:SQLDISCONNECT");
                break;
            }
        case ResultConstants.SETCONNECTATTR:
            {
                sb.append("SQLCLI:SQLSETCONNECTATTR:");
                switch(r.getConnectionAttrType()) {
                    case ResultConstants.SQL_ATTR_SAVEPOINT_NAME:
                        {
                            sb.append("SQL_ATTR_SAVEPOINT_NAME ");
                            sb.append(r.getMainString());
                            break;
                        }
                    default:
                        {
                            sb.append(r.getConnectionAttrType());
                        }
                }
                break;
            }
        default:
            {
                sb.append("SQLCLI:MODE:");
                sb.append(r.getType());
                break;
            }
    }
    print(sb.toString());
}
