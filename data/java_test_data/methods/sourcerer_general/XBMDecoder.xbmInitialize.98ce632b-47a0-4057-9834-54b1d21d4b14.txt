private void xbmInitialize(int w, int h, int[] bits, Color fg, Color bg, boolean trans) throws JimiException {
    int width = w;
    int height = h;
    IndexColorModel colorModel;
    // create color map
    byte[] colormap = new byte[6];
    int transIndex = -1;
    // color component 0 is for background
    if (trans) {
        // color component 0: transparent
        transIndex = 0;
        colormap[0] = (byte) 0xff;
        colormap[1] = (byte) 0xff;
        colormap[2] = (byte) 0xff;
    } else {
        // color component 0: background
        colormap[0] = (byte) bg.getRed();
        colormap[1] = (byte) bg.getGreen();
        colormap[2] = (byte) bg.getBlue();
    }
    // color component 1: foreground
    colormap[3] = (byte) fg.getRed();
    colormap[4] = (byte) fg.getGreen();
    colormap[5] = (byte) fg.getBlue();
    // create color model
    colorModel = new IndexColorModel(8, 2, colormap, 0, false, transIndex);
    // allocate pixels
    pixels_ = new byte[width * height];
    // loop for xbm bitmap and create pixels
    int index = 0;
    int byteIndex = 0;
    int jMax = width / 8;
    try {
        for (int i = 0; i < height; i++) {
            for (int j = 0; j < jMax; j++) {
                byte bitByte = (byte) bits[byteIndex];
                for (int k = 0; k < 8; k++) {
                    int pixel = bitByte & (1 << k);
                    pixels_[index] = (pixel != 0) ? (byte) 1 : (byte) 0;
                    index++;
                }
                byteIndex++;
            }
        }
    } catch (Exception e) {
        throw new JimiException(e.getMessage());
    }
    // send information to JimiImage
    jimiImage_.setSize(width, height);
    jimiImage_.setColorModel(colorModel);
    jimiImage_.setPixels();
    jimiImage_.setChannel(0, 0, 0, width, height, pixels_, 0, width);
    setProgress(100);
}
