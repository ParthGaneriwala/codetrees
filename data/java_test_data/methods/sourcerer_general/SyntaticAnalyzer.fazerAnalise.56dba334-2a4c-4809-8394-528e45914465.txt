public boolean fazerAnalise() {
    // transicao com consumo de token
    ResultadoTransicao transicaoToken = null;
    // transicao epsilon
    ResultadoTransicao transicaoVazia = null;
    // Escreve o inicio do programa
    semantico.inicioPrograma();
    token = lexico.getNextToken();
    boolean read = true;
    /*
		 * Enquanto nao for o final do arquivo ou nao tiver transacao vazia com estado de aceitacao, 
		 * 	continuar lendo os tokens 
		 */
    while (token.tag != Tag.EOF || (transicaoVazia != null && !maquinaAtual.isEstadoAceitacao())) {
        // System.out.println("======================================================");
        // System.out.println("wordRead: " + lexico.wordRead);
        // System.out.println("line number: " + lexico.getLineNumber());
        // System.out.println("Tag: " + token.tag);
        read = true;
        // verifica transicao
        transicaoToken = maquinaAtual.fazTransicao(token);
        if (transicaoToken == null) {
            // nao ha transicao com consumo de token
            transicaoVazia = maquinaAtual.fazTransicao(null);
            if (transicaoVazia == null) {
                // faz transicao vazia
                if (maquinaAtual.isEstadoAceitacao() && pilhaMaquinas.size() > 0) {
                    maquinaAtual = pilhaMaquinas.pop();
                    read = false;
                } else {
                    return false;
                }
            } else {
                // Faz a transicao sem consumo
                read = false;
                if (transicaoVazia.getSubmaquina() != null) {
                    maquinaAtual.setEstadoAtual(transicaoVazia.getProximoEstado());
                    pilhaMaquinas.push(maquinaAtual);
                    maquinaAtual = SubMaquina.geraSubMaquina(transicaoVazia.getSubmaquina(), lexico);
                } else {
                    maquinaAtual.setEstadoAtual(transicaoVazia.getProximoEstado());
                }
                semantico.fazerAcaoSemantica(transicaoVazia.getAcaoSemantica());
            }
        } else {
            // Faz a transicao com consumo
            maquinaAtual.setEstadoAtual(transicaoToken.getProximoEstado());
            semantico.fazerAcaoSemantica(transicaoToken.getAcaoSemantica());
        }
        if (read) {
            token = lexico.getNextToken();
        }
        transicaoVazia = maquinaAtual.fazTransicao(null);
    }
    if (maquinaAtual.isEstadoAceitacao()) {
        semantico.terminaPrograma();
        semantico.criaMaravilhosoArquivoASM();
        return true;
    } else {
        return false;
    }
}
