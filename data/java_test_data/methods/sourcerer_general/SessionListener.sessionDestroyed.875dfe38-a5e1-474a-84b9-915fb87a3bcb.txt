@SuppressWarnings("unchecked")
public void sessionDestroyed(HttpSessionEvent hse) {
    HttpSession session = hse.getSession();
    Database db = new Database();
    Attributes attr = (Attributes) session.getAttribute("attr");
    if (attr != null) {
        String sql = "select * from session_log where session_log_id = 0";
        ResultSet rs = null;
        try {
            rs = db.dbQuery(sql, true);
            rs.moveToInsertRow();
            rs.updateInt("user_id", attr.getUserId());
            rs.updateString("agent", attr.getBrowser() == null ? "Unknown" : attr.getBrowser());
            rs.updateString("host", attr.getInfo() == null ? "Unknown" : attr.getInfo());
            rs.updateTimestamp("created", new Timestamp(session.getCreationTime()));
            rs.updateTimestamp("destroyed", new Timestamp(System.currentTimeMillis()));
            String reason = (String) session.getAttribute("reason");
            if (reason == null)
                reason = "Session Timeout";
            rs.updateString("reason", reason);
            rs.insertRow();
        } catch (Exception e) {
            log.warn("sessionDestroyed: ERROR " + e.getMessage(), e);
        } finally {
            try {
                if (rs != null)
                    rs.getStatement().close();
                if (db != null)
                    db.disconnect();
            } catch (SQLException e) {
            }
        }
    }
    Map<String, HttpSession> st = (Map<String, HttpSession>) session.getServletContext().getAttribute("st");
    if (st != null) {
        st.remove(session.getId());
    }
}
