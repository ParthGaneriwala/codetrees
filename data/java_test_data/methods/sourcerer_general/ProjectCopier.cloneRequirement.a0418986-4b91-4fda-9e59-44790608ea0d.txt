public static Requirement cloneRequirement(CloneBean bean, Connection db, int groupId, int userId, int requirementId) throws SQLException {
    Requirement requirement = null;
    try {
        db.setAutoCommit(false);
        // Load permissions and resources for this member
        if (System.getProperty("DEBUG") != null) {
            System.out.println("ProjectCopier-> RequirementId: " + requirementId);
        }
        Project project = new Project(db, bean.getProjectId());
        TeamMember member = new TeamMember(db, project.getId(), userId);
        User user = UserUtils.loadUser(userId);
        LookupList roleList = new LookupList(db, "lookup_project_role");
        // Load old requirement, change some values, save as new requirement
        requirement = new Requirement(db, requirementId);
        // Outlines, Activities, Activity Folders (no notes yet)
        if (hasPermission(db, project, user, member, "project-plan-view", roleList)) {
            requirement.setEnteredBy(userId);
            requirement.setModifiedBy(userId);
            requirement.setEntered((Timestamp) null);
            requirement.setModified((Timestamp) null);
            requirement.setShortDescription(requirement.getShortDescription() + " (copy)");
            boolean resetStatus = false;
            long offset = 0;
            if (bean.getResetActivityStatus()) {
                resetStatus = true;
            }
            requirement.clone(db, project.getId(), offset, resetStatus);
        }
        db.commit();
    } catch (Exception e) {
        System.out.println("ProjectCopier-> ERROR: " + e.getMessage());
        e.printStackTrace(System.out);
        db.rollback();
    } finally {
        db.setAutoCommit(true);
    }
    return requirement;
}
