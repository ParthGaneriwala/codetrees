public static void restore(MBoard b) {
    String F = Monopoly.DBPath + b.creator + ".bak";
    if (new File(F).exists() == false) {
        Monopoly.MonoBot.Serv.say(b.creator, "Backup not found.");
        return;
    }
    StringTokenizer ST;
    MPlayer mp = null;
    List<String> V = FileHelper.readFile(F);
    b.players.removeAllElements();
    ST = new StringTokenizer(V.get(0));
    int np = MiscUtil.strToInt(ST.nextToken());
    // skips turn, d'oh
    ST.nextToken();
    b.pot = MiscUtil.strToInt(ST.nextToken());
    for (int x = 1; x <= np; x++) {
        ST = new StringTokenizer(V.get(x));
        mp = new MPlayer(ST.nextToken(), MiscUtil.strToInt(ST.nextToken()), b);
        // mp.pokerbet = MiscUtil.strToInt(ST.nextToken());
        ST.nextToken();
        mp.token = MiscUtil.strToInt(ST.nextToken());
        mp.loc = MiscUtil.strToInt(ST.nextToken());
        b.players.addElement(mp);
    }
    b.style = V.get(np + 1);
    for (int x = np + 2; x < np + 30; x++) {
        ST = new StringTokenizer(V.get(x));
        int p = MiscUtil.strToInt(ST.nextToken());
        int t = MiscUtil.strToInt(ST.nextToken());
        b.props[p].owner = b.getByTok(t);
        int h = MiscUtil.strToInt(ST.nextToken());
        if (h < 0)
            b.props[p].morg = true;
        else
            b.props[p].houses = h;
    }
    b.spam("Board restored.");
}
