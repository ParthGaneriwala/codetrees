public List getList(HttpServletRequest request) {
    // 获取翻页结果集合
    logger.debug("1. 获取查询条件.....");
    // 获取查询条件
    String moduleId = "%";
    if (request.getParameter("moduleId") != null)
        moduleId = request.getParameter("moduleId");
    String modelId = "%";
    if (request.getParameter("modelId") != null)
        modelId = request.getParameter("modelId");
    String serviceId = "%";
    if (request.getParameter("serviceId") != null)
        serviceId = request.getParameter("serviceId");
    String result = "%";
    if (request.getParameter("result") != null)
        result = request.getParameter("result");
    String operatorName = "%";
    if (request.getParameter("operatorName") != null)
        operatorName = request.getParameter("operatorName");
    String detail = "%";
    if (request.getParameter("detail") != null)
        detail = request.getParameter("detail");
    logger.debug("detail: " + detail);
    Timestamp startTime;
    if (request.getParameter("startTime") != null) {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            startTime = new Timestamp(sdf.parse(request.getParameter("startTime")).getTime());
        } catch (ParseException pe) {
            logger.error("startTime转换Timestamp失败：" + pe.toString());
            startTime = new Timestamp((new Date()).getTime());
            startTime.setHours(0);
            startTime.setMinutes(0);
        }
    } else {
        startTime = new Timestamp((new Date()).getTime());
        startTime.setHours(0);
        startTime.setMinutes(0);
    }
    Timestamp endTime;
    if (request.getParameter("endTime") != null) {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            endTime = new Timestamp(sdf.parse(request.getParameter("endTime")).getTime());
            endTime.setDate(endTime.getDate() + 1);
        } catch (ParseException pe) {
            logger.error("endTime转换Timestamp失败：" + pe.toString());
            endTime = new Timestamp((new Date()).getTime());
            endTime.setDate(endTime.getDate() + 1);
            endTime.setHours(0);
            endTime.setMinutes(0);
        }
    } else {
        endTime = new Timestamp((new Date()).getTime());
        endTime.setDate(endTime.getDate() + 1);
        endTime.setHours(0);
        endTime.setMinutes(0);
    }
    String orderBy = "operatingTime";
    if (request.getParameter("orderBy") != null)
        orderBy = request.getParameter("orderBy");
    String sortType = "desc";
    if (request.getParameter("sortType") != null)
        sortType = request.getParameter("sortType");
    logger.debug("2. 获取查询条件完毕,开始查询.....");
    List rs = this.operatingLogManager.findOperatingLogs(moduleId, modelId, serviceId, result, "%" + operatorName + "%", detail, startTime, endTime, orderBy, sortType);
    return rs;
}
