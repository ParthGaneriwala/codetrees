public void initialise() {
    setLayout(new BorderLayout());
    setMinimumSize(new Dimension(300, 200));
    setModal(true);
    final ResourceBundle resources = ResourceBundle.getBundle(CheckStyleConstants.RESOURCE_BUNDLE);
    propertiesTable.setToolTipText(resources.getString("config.file.properties.tooltip"));
    final JScrollPane propertiesScrollPane = new JScrollPane(propertiesTable, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
    propertiesScrollPane.setBorder(new EmptyBorder(8, 8, 4, 8));
    propertiesScrollPane.setPreferredSize(new Dimension(500, 400));
    final JButton okayButton = new JButton(new OkayAction());
    final JButton cancelButton = new JButton(new CancelAction());
    final JPanel bottomPanel = new JPanel(new GridBagLayout());
    bottomPanel.setBorder(new EmptyBorder(4, 8, 8, 8));
    bottomPanel.add(Box.createHorizontalGlue(), new GridBagConstraints(0, 0, 1, 1, 1.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(4, 4, 4, 4), 0, 0));
    if (IDEAUtilities.isMacOSX()) {
        bottomPanel.add(cancelButton, new GridBagConstraints(1, 0, 1, 1, 0.0, 0.0, GridBagConstraints.EAST, GridBagConstraints.NONE, new Insets(4, 4, 4, 4), 0, 0));
        bottomPanel.add(okayButton, new GridBagConstraints(2, 0, 1, 1, 0.0, 0.0, GridBagConstraints.EAST, GridBagConstraints.NONE, new Insets(4, 4, 4, 4), 0, 0));
    } else {
        bottomPanel.add(okayButton, new GridBagConstraints(1, 0, 1, 1, 0.0, 0.0, GridBagConstraints.EAST, GridBagConstraints.NONE, new Insets(4, 4, 4, 4), 0, 0));
        bottomPanel.add(cancelButton, new GridBagConstraints(2, 0, 1, 1, 0.0, 0.0, GridBagConstraints.EAST, GridBagConstraints.NONE, new Insets(4, 4, 4, 4), 0, 0));
    }
    add(propertiesScrollPane, BorderLayout.CENTER);
    add(bottomPanel, BorderLayout.SOUTH);
    getRootPane().setDefaultButton(okayButton);
    pack();
    final Toolkit toolkit = Toolkit.getDefaultToolkit();
    setLocation((toolkit.getScreenSize().width - getSize().width) / 2, (toolkit.getScreenSize().height - getSize().height) / 2);
}
