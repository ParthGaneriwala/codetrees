private static void createData(int s, int baseBand, int numBack, int numLine, int numPoly) {
    lines.clear();
    polygons.clear();
    size = s;
    baseBandwidth = baseBand;
    // this may not be needed, but just to be sure.
    bandwidth = baseBand;
    loadLines(new File("C:/jconley/data/PA_stuff/testSeeds/rivers.shp"));
    loadLines(new File("C:/jconley/data/PA_stuff/testSeeds/roads.shp"));
    loadShapes(new File("C:/jconley/data/PA_stuff/testSeeds/cities.shp"));
    loadShapes(new File("C:/jconley/data/PA_stuff/testSeeds/soil1.shp"));
    loadShapes(new File("C:/jconley/data/PA_stuff/testSeeds/soil2.shp"));
    initArrays();
    createBackgroundCases(numBack);
    Iterator lineIt = lines.iterator();
    while (lineIt.hasNext()) {
        createLineCases(numLine, (MultiLineString) lineIt.next());
    // System.out.println("finished another line");
    }
    Iterator polyIt = polygons.iterator();
    while (polyIt.hasNext()) {
        // System.out.println("finished another polygon");
        createPolygonCases(numPoly, (MultiPolygon) polyIt.next());
    }
    try {
        String outFileName = "s" + size + "bw" + baseBand + "bk" + numBack + "l" + numLine + "p" + numPoly + ".csv";
        FileWriter outFile = new FileWriter("C:/jconley/diss/synthData/grid/" + outFileName);
        outFile.write("x, y, pop, cases" + '\n');
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                outFile.write(i + ", " + j + ", " + popArray[i][j] + ", " + caseArray[i][j] + '\n');
            }
        }
        outFile.close();
        System.out.println("wrote " + outFileName);
    } catch (IOException ioe) {
        System.out.println("IOException when saving file: " + ioe.getMessage());
    }
}
