private static final void processSyntax(TextView tv, String code, Range r) {
    // TODO correct this -3 correction
    final int codeStart = r.getStart() - 3;
    // :) Wave's fault
    int state = 0, i = 0, start = -1, end = -1;
    while (i < code.length()) {
        switch(state) {
            case 0:
                switch(code.charAt(i)) {
                    case '/':
                        state = 1;
                        break;
                    case '"':
                        state = 5;
                        // memorizing the beginning of the string
                        start = i;
                        break;
                    case '\'':
                        state = 6;
                        // memorizing the beginning of the string
                        start = i;
                        break;
                    case '<':
                        state = 7;
                        break;
                    case '@':
                        state = 13;
                        // memorizing the beginning of the Java annotation
                        start = i;
                        break;
                }
                break;
            case 1:
                switch(code.charAt(i)) {
                    case '/':
                        // we have a comment? '//'
                        state = 2;
                        // memorizing the beginning of the comment
                        start = i - 1;
                        break;
                    case '*':
                        // we have a comment? '/*'
                        state = 3;
                        // memorizing the beginning of the comment
                        start = i - 1;
                        break;
                    default:
                        state = 0;
                }
                break;
            case 2:
                switch(code.charAt(i)) {
                    case '\n':
                        // comment is over
                        state = 0;
                        // memorizing the end of the comment
                        end = i;
                        tv.setAnnotation(new Range(codeStart + start, codeStart + end), ANNOTATION_FONT_WEIGHT, VALUE_NORMAL);
                        break;
                }
                break;
            case 3:
                switch(code.charAt(i)) {
                    case '*':
                        // this might be part of '*/' but we have to make sure in
                        state = 4;
                        // state 4
                        break;
                }
                break;
            case 4:
                switch(code.charAt(i)) {
                    case '/':
                        // comment is over
                        state = 0;
                        // memorizing the end of the comment
                        end = i + 1;
                        tv.setAnnotation(new Range(codeStart + start, codeStart + end), ANNOTATION_FONT_WEIGHT, VALUE_NORMAL);
                        break;
                }
                break;
            case 5:
                switch(code.charAt(i)) {
                    case '"':
                        state = 0;
                        end = i + 1;
                        Range stringRange = new Range(codeStart + start, codeStart + end);
                        tv.setAnnotation(stringRange, ANNOTATION_FONT_STYLE, VALUE_ITALIC);
                        tv.setAnnotation(stringRange, ANNOTATION_COLOR, COLOR_STRING);
                        break;
                }
                break;
            case 6:
                switch(code.charAt(i)) {
                    case '\'':
                        state = 0;
                        end = i + 1;
                        Range stringRange = new Range(codeStart + start, codeStart + end);
                        tv.setAnnotation(stringRange, ANNOTATION_FONT_STYLE, VALUE_ITALIC);
                        tv.setAnnotation(stringRange, ANNOTATION_COLOR, COLOR_STRING);
                        break;
                }
                break;
            case 7:
                switch(code.charAt(i)) {
                    case '!':
                        // we might have an XML comment: '<!-- bla -->'
                        state = 8;
                        break;
                    default:
                        state = 0;
                }
                break;
            case 8:
                switch(code.charAt(i)) {
                    case '-':
                        state = 9;
                        break;
                    default:
                        state = 0;
                }
                break;
            case 9:
                switch(code.charAt(i)) {
                    case '-':
                        state = 10;
                        // the start of an XML comment: '<!-- bla -->'
                        start = i - 3;
                        break;
                    default:
                        state = 0;
                }
                break;
            case 10:
                switch(code.charAt(i)) {
                    case '-':
                        // the XML comment might end
                        state = 11;
                        break;
                }
                break;
            case 11:
                switch(code.charAt(i)) {
                    case '-':
                        // the XML comment might end
                        state = 12;
                        break;
                }
                break;
            case 12:
                switch(code.charAt(i)) {
                    case '>':
                        // the XML has ended
                        state = 0;
                        end = i + 1;
                        tv.setAnnotation(new Range(codeStart + start, codeStart + end), ANNOTATION_FONT_WEIGHT, VALUE_NORMAL);
                        break;
                }
                break;
            case 13:
                switch(code.charAt(i)) {
                    case '\n':
                        // the Java annotation has ended
                        state = 0;
                        end = i;
                        tv.setAnnotation(new Range(codeStart + start, codeStart + end), ANNOTATION_COLOR, COLOR_ANNOTATION);
                        break;
                }
                break;
        }
        i++;
    }
}
