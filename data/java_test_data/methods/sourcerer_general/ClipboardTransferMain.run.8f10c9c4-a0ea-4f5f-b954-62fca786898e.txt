@Override
public void run() {
    try {
        client.setSoTimeout(5000);
        ObjectInputStream in = new ObjectInputStream(client.getInputStream());
        ClipCommand command = (ClipCommand) in.readObject();
        ClipResult result = new ClipResult();
        if (ClipCommand.CMD_SHUTDOWN.equals(command.getCmdCode())) {
            tostop = true;
            result.setSuccess(true);
        } else if (ClipCommand.CMD_GET_CLIP.equals(command.getCmdCode())) {
            Clipboard sysc = Toolkit.getDefaultToolkit().getSystemClipboard();
            Transferable clipT = sysc.getContents(null);
            if (ClipboardUtils.isClipboardText(clipT)) {
                result.setAttr(ClipCommand.ATTR_DATA_FLAVOR, "string");
                result.setAttr(ClipCommand.ATTR_DATA, ClipboardUtils.getClipboardText(clipT));
                result.setSuccess(true);
            } else if (ClipboardUtils.isClipboardImage(clipT)) {
                result.setAttr(ClipCommand.ATTR_DATA_FLAVOR, "image");
                Image image = ClipboardUtils.getClipboardImage(clipT);
                result.setAttr(ClipCommand.ATTR_DATA, toByteArray(image));
                result.setSuccess(true);
            } else {
                if (ClipboardUtils.isClipboardNotEmpty(clipT)) {
                    result.setMessage("服务端未支持当前的剪切板类型");
                } else {
                    result.setMessage("服务端剪切板内容为空");
                }
                result.setSuccess(false);
            }
        } else if (ClipCommand.CMD_SET_CLIP.equals(command.getCmdCode())) {
            if (modifyClipChk.isSelected()) {
                if ("string".equals(command.getAttr(ClipCommand.ATTR_DATA_FLAVOR))) {
                    String data = (String) command.getAttr(ClipCommand.ATTR_DATA);
                    ClipboardUtils.setSystemClipboardText(data);
                } else if ("image".equals(command.getAttr(ClipCommand.ATTR_DATA_FLAVOR))) {
                    byte[] data = (byte[]) command.getAttr(ClipCommand.ATTR_DATA);
                    ClipboardUtils.setSystemClipboardImage(toImage(data));
                } else {
                    result.setMessage("接收到未支持的剪切板类型:" + command.getAttr(ClipCommand.ATTR_DATA_FLAVOR));
                    result.setSuccess(false);
                }
                result.setSuccess(true);
                updateMessage("接收剪切板成功，剪切板类型：" + command.getAttr(ClipCommand.ATTR_DATA_FLAVOR));
            } else {
                result.setSuccess(false);
                result.setMessage("服务端禁止设置剪切板");
            }
        } else {
            result.setSuccess(false);
            result.setMessage("服务端禁止设置剪切板");
        }
        ObjectOutputStream out = new ObjectOutputStream(client.getOutputStream());
        out.writeObject(result);
        in.close();
        out.close();
        client.close();
    } catch (Exception e) {
        e.printStackTrace();
        ClipResult result = new ClipResult();
        result.setSuccess(false);
        result.setMessage(e.getMessage());
        try {
            ObjectOutputStream out = new ObjectOutputStream(client.getOutputStream());
            out.writeObject(result);
            client.close();
        } catch (IOException e1) {
            e1.printStackTrace();
        }
    }
}
