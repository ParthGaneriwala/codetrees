protected JDialog createDialog(Component parentComponent, final ShowOnStartupChoice choice, boolean showPreviousButton) {
    String title = UIManager.getString("TipOfTheDay.dialogTitle");
    final JDialog dialog;
    Window window;
    if (parentComponent == null) {
        window = JOptionPane.getRootFrame();
    } else {
        window = (parentComponent instanceof Window) ? (Window) parentComponent : SwingUtilities.getWindowAncestor(parentComponent);
    }
    if (window instanceof Frame) {
        dialog = new JDialog((Frame) window, title, true);
    } else {
        dialog = new JDialog((Dialog) window, title, true);
    }
    dialog.getContentPane().setLayout(new BorderLayout(10, 10));
    dialog.getContentPane().add("Center", tipPane);
    ((JComponent) dialog.getContentPane()).setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
    final JCheckBox showOnStartupBox;
    // tip controls
    JPanel controls = new JPanel(new BorderLayout());
    dialog.getContentPane().add("South", controls);
    if (choice != null) {
        showOnStartupBox = new JCheckBox(UIManager.getString("TipOfTheDay.showOnStartupText"), choice.isShowingOnStartup());
        controls.add("Center", showOnStartupBox);
    } else {
        showOnStartupBox = null;
    }
    JPanel buttons = new JPanel(new ButtonAreaLayout(9));
    controls.add("East", buttons);
    if (showPreviousButton) {
        JButton previousTipButton = new JButton(UIManager.getString("TipOfTheDay.previousTipText"));
        buttons.add(previousTipButton);
        previousTipButton.addActionListener(getActionMap().get("previousTip"));
    }
    JButton nextTipButton = new JButton(UIManager.getString("TipOfTheDay.nextTipText"));
    buttons.add(nextTipButton);
    nextTipButton.addActionListener(getActionMap().get("nextTip"));
    JButton closeButton = new JButton(UIManager.getString("TipOfTheDay.closeText"));
    buttons.add(closeButton);
    final ActionListener saveChoice = new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            if (choice != null) {
                choice.setShowingOnStartup(showOnStartupBox.isSelected());
            }
            dialog.setVisible(false);
        }
    };
    closeButton.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            dialog.setVisible(false);
            saveChoice.actionPerformed(null);
        }
    });
    dialog.getRootPane().setDefaultButton(closeButton);
    dialog.addWindowListener(new WindowAdapter() {

        public void windowClosing(WindowEvent e) {
            saveChoice.actionPerformed(null);
        }
    });
    ((JComponent) dialog.getContentPane()).registerKeyboardAction(saveChoice, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_IN_FOCUSED_WINDOW);
    dialog.pack();
    dialog.setLocationRelativeTo(parentComponent);
    return dialog;
}
