public boolean insert(Connection db) throws SQLException {
    if (!isValid()) {
        return false;
    }
    StringBuffer sql = new StringBuffer();
    sql.append("INSERT INTO project_folders " + "(link_module_id, link_item_id, subject, description, parent_id, ");
    if (entered != null) {
        sql.append("entered, ");
    }
    if (modified != null) {
        sql.append("modified, ");
    }
    sql.append("enteredby, modifiedby, display) " + "VALUES (?, ?, ?, ?, ?, ");
    if (entered != null) {
        sql.append("?, ");
    }
    if (modified != null) {
        sql.append("?, ");
    }
    sql.append("?, ?, ?) ");
    int i = 0;
    PreparedStatement pst = db.prepareStatement(sql.toString());
    pst.setInt(++i, linkModuleId);
    pst.setInt(++i, linkItemId);
    pst.setString(++i, subject);
    pst.setString(++i, description);
    DatabaseUtils.setInt(pst, ++i, parentId);
    if (entered != null) {
        pst.setTimestamp(++i, entered);
    }
    if (modified != null) {
        pst.setTimestamp(++i, modified);
    }
    pst.setInt(++i, enteredBy);
    pst.setInt(++i, modifiedBy);
    DatabaseUtils.setInt(pst, ++i, display);
    pst.execute();
    pst.close();
    id = DatabaseUtils.getCurrVal(db, "project_folders_folder_id_seq", -1);
    if (subFolders != null) {
        Iterator subI = subFolders.iterator();
        while (subI.hasNext()) {
            FileFolder thisFolder = (FileFolder) subI.next();
            thisFolder.setLinkItemId(linkItemId);
            thisFolder.setParentId(id);
            thisFolder.setId(-1);
        }
    }
    return true;
}
