public void paintComponent(Graphics g2) {
    super.paintComponent(g2);
    int w = res.sWidth.getIntValue();
    int h = res.sHeight.getIntValue();
    int tw = MapEditor.TILE_WIDTH;
    int th = MapEditor.TILE_HEIGHT;
    int zw = scale(w * tw);
    int zh = scale(h * th);
    BufferedImage bi = new BufferedImage(w * tw, h * th, BufferedImage.TYPE_3BYTE_BGR);
    Graphics g = bi.getGraphics();
    g.setColor(Color.BLACK);
    g.fillRect(0, 0, w * tw, h * th);
    if (res.fShow.isSelected()) {
        for (Map.Entry<Point, Integer> e : floors.entrySet()) {
            Point p = e.getKey();
            Integer i = e.getValue();
            if (res.cShow.isSelected() && ceilings.get(e) != null)
                continue;
            if (i == null || i.equals(new Integer(0)))
                continue;
            g.drawImage(res.floor.getImage(i), p.x * tw, p.y * th, null);
        }
    }
    if (res.oShow.isSelected()) {
        for (Map.Entry<Point, Integer> e : objects.entrySet()) {
            Point p = e.getKey();
            Integer i = e.getValue();
            if (res.cShow.isSelected() && ceilings.get(e) != null)
                continue;
            if (i == null || i.equals(new Integer(0)))
                continue;
            g.drawImage(res.object.getImage(i), p.x * tw, p.y * th, null);
        }
    }
    if (res.cShow.isSelected()) {
        for (Map.Entry<Point, Integer> e : ceilings.entrySet()) {
            Point p = e.getKey();
            Integer i = e.getValue();
            if (i == null || i.equals(new Integer(0)))
                continue;
            g.drawImage(res.ceiling.getImage(i), p.x * tw, p.y * th, null);
        }
    }
    g2.drawImage(bi, 0, 0, zw, zh, null);
    if (res.sGrid.isSelected()) {
        g2.setColor(res.sColor.getSelectedColor());
        for (int x = 1; x < w; x++) g2.drawLine(scale(x * tw), 0, scale(x * tw), zh - 1);
        for (int y = 1; y < h; y++) g2.drawLine(0, scale(y * th), zw - 1, scale(y * th));
    }
    if (dragStart != null) {
        if (dragger == null)
            dragger = MapEditor.getImage("actions/run.png");
        g2.drawImage(dragger, dragStart.x - dragger.getWidth() / 2, dragStart.y - dragger.getHeight() / 2, null);
    }
}
