@Override
public void onMouseMove(MouseMoveEvent event) {
    int width;
    int height;
    int x = getAbsoluteLeft();
    int y = getAbsoluteTop();
    switch(direction) {
        case NORTH:
            y = event.getClientY();
            width = getOffsetWidth();
            height = +getAbsoluteTop() + getOffsetHeight() - event.getClientY();
            break;
        case EAST:
            width = event.getClientX() - getAbsoluteLeft();
            height = getOffsetHeight();
            break;
        case SOUTH:
            width = getOffsetWidth();
            height = event.getClientY() - getAbsoluteTop();
            break;
        case WEST:
            x = event.getClientX();
            width = getAbsoluteLeft() + getOffsetWidth() - event.getClientX();
            height = getOffsetHeight();
            break;
        case NORTH_EAST:
            y = event.getClientY();
            height = getAbsoluteTop() + getOffsetHeight() - event.getClientY();
            width = event.getClientX() - getAbsoluteLeft();
            break;
        case SOUTH_EAST:
            width = event.getClientX() - getAbsoluteLeft();
            height = event.getClientY() - getAbsoluteTop();
            break;
        case SOUTH_WEST:
            x = event.getClientX();
            height = event.getClientY() - getAbsoluteTop();
            width = getAbsoluteLeft() + getOffsetWidth() - event.getClientX();
            break;
        case NORTH_WEST:
            y = event.getClientY();
            x = event.getClientX();
            height = getAbsoluteTop() + getOffsetHeight() - event.getClientY();
            width = getAbsoluteLeft() + getOffsetWidth() - event.getClientX();
            break;
        default:
            throw new IllegalArgumentException(this + " unknown direction " + direction);
    }
    Rectangle rectangle = specialResize(new Rectangle(x, y, width, height));
    RootPanel.get().setWidgetPosition(this, rectangle.getStart().getX(), rectangle.getStart().getY());
    setPixelSize(rectangle.getWidth(), rectangle.getHeight());
    hasMoved = true;
    // IE6 need this to prevent losing of image
    DOM.setCapture(this.getElement());
    MapWindow.getInstance().onMouseMove(event);
    if (allowedToPlace(rectangle)) {
        marker.setVisible(false);
    } else {
        marker.setVisible(true);
    }
}
