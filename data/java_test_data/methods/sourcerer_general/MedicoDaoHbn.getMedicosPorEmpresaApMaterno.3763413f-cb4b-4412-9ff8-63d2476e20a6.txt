public List<Medico> getMedicosPorEmpresaApMaterno(Integer empresaId, String apellidoMaterno, boolean aplicarLike) throws DaoException {
    if (empresaId == null) {
        throw new DaoException("consultorio.dao.error.1100", locale);
    }
    if (apellidoMaterno == null || apellidoMaterno.isEmpty()) {
        throw new DaoException("consultorio.dao.error.1404", locale);
    }
    List<Medico> medicos = null;
    Session hs = null;
    Transaction htx = null;
    SessionFactory hsf = null;
    apellidoMaterno = apellidoMaterno.toUpperCase(locale);
    try {
        hsf = HibernateUtil.getSessionFactory();
        hs = hsf.getCurrentSession();
        htx = hs.beginTransaction();
        Query hqlQuery = null;
        StringBuilder query = new StringBuilder();
        query.append("select m from Medico m where m.empresa = :empresaId and ");
        query.append("UPPER(m.apellidoMaterno) ");
        if (aplicarLike) {
            query.append("like :apellidoMaterno");
        } else {
            query.append("= :apellidoMaterno");
        }
        hqlQuery = hs.createQuery(query.toString());
        if (aplicarLike) {
            StringBuffer param01 = new StringBuffer("%").append(apellidoMaterno).append("%");
            hqlQuery.setParameter("empresaId", empresaId, Hibernate.INTEGER);
            hqlQuery.setParameter("apellidoMaterno", param01.toString(), Hibernate.STRING);
        } else {
            hqlQuery.setParameter("empresaId", empresaId, Hibernate.INTEGER);
            hqlQuery.setParameter("apellidoMaterno", apellidoMaterno, Hibernate.STRING);
        }
        medicos = hqlQuery.list();
        htx.commit();
    } catch (HibernateException e) {
        if (htx != null && htx.isActive()) {
            try {
                htx.rollback();
            } catch (HibernateException e2) {
                throw new DaoException("consultorio.dao.error.0001", locale);
            }
        }
        medicos = new ArrayList<Medico>();
        e.printStackTrace();
        throw new DaoException(e.hashCode(), e.getMessage());
    }
    return medicos;
}
