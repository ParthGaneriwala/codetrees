@Override
public void createPartControl(Composite parent) {
    Color bgColor = parent.getDisplay().getSystemColor(SWT.COLOR_LIST_BACKGROUND);
    Color fgColor = parent.getDisplay().getSystemColor(SWT.COLOR_LIST_FOREGROUND);
    /* adds the main area */
    Composite mainArea = new Composite(parent, SWT.NONE);
    mainArea.setLayout(new GridLayout(1, true));
    mainArea.setBackground(bgColor);
    /* adds the title label */
    Label countLabel = new Label(mainArea, SWT.NONE);
    countLabel.setFont(JFaceResources.getHeaderFont());
    countLabel.setBackground(bgColor);
    countLabel.setForeground(JFaceResources.getColorRegistry().get(JFacePreferences.COUNTER_COLOR));
    countLabel.setLayoutData(new GridData(SWT.FILL, SWT.BEGINNING, true, false));
    int legislatorCount = getLegislators().size();
    if (legislatorCount == 1) {
        countLabel.setText("1 legislator found");
    } else {
        countLabel.setText(legislatorCount + " legislators found");
    }
    /* adds the result table */
    Table table = new Table(mainArea, SWT.FULL_SELECTION | SWT.MULTI | SWT.BORDER | SWT.V_SCROLL | SWT.H_SCROLL);
    table.setBackground(bgColor);
    table.setForeground(fgColor);
    table.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true));
    table.setLayout(new GridLayout(1, true));
    table.setHeaderVisible(true);
    table.setLinesVisible(true);
    for (Property prop : Property.values()) {
        addColumn(table, prop);
    }
    tableViewer = new TableViewer(table);
    tableViewer.setContentProvider(new ArrayContentProvider());
    tableViewer.setLabelProvider(new TableLabelProvider());
    tableViewer.setInput(getLegislators());
    MenuManager menuManager = new MenuManager();
    Menu menu = menuManager.createContextMenu(table);
    table.setMenu(menu);
    getSite().registerContextMenu(menuManager, tableViewer);
    getSite().setSelectionProvider(tableViewer);
    tableViewer.addDoubleClickListener(new IDoubleClickListener() {

        public void doubleClick(DoubleClickEvent event) {
            CommandUtils.executeCommand("com.abso.sunlight.explorer.commands.ShowLegislatorDetailsCommand", new HashMap<String, Object>(), getSite().getShell());
        }
    });
    for (TableColumn col : table.getColumns()) {
        col.pack();
    }
    sort(Property.FIRST_NAME);
    sort(Property.LAST_NAME);
}
