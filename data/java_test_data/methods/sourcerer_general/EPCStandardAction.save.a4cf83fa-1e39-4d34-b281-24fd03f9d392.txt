public ActionForward save(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    if (log.isDebugEnabled()) {
        log.debug("Entering 'save' method");
    }
    ActionMessages errors = form.validate(mapping, request);
    if (!errors.isEmpty()) {
        saveErrors(request, errors);
        return mapping.findForward("failure");
    }
    // Extract attributes and parameters we will need
    ActionMessages messages = new ActionMessages();
    EPCStandardForm epcStandardForm = (EPCStandardForm) form;
    if (epcStandardForm.getEpcStandardLength() <= 0) {
        errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("errors.epc.length4"));
        saveErrors(request, errors);
        updateFormBean(mapping, request, epcStandardForm);
        return mapping.findForward("failure");
    }
    String epcStandardId = epcStandardForm.getEpcStandardId();
    EPC epc = new EPC();
    EPCStandard epcStandard = new EPCStandard();
    // Exceptions are caught by ActionExceptionHandler
    // all we need to persist is the parent object
    EPCStandardManager mgr = (EPCStandardManager) getBean("epcStandardManager");
    EPCManager epcMgr = (EPCManager) getBean("epcManager");
    if (epcStandardId != null && !epcStandardId.trim().equals("")) {
        epcStandard = (EPCStandard) mgr.getEpcStandard(Long.parseLong(epcStandardForm.getEpcStandardId()));
        // epcStandard.getEpc().setEpcName(epcStandardForm.getEpcStandardName());
        epcStandard.setEpcStandardDescription(epcStandardForm.getEpcStandardDescription());
        epcStandard.setEpcStandardLength(epcStandardForm.getEpcStandardLength());
    } else {
        // epc.setEpcName(epcStandardForm.getEpcStandardName());
        BeanUtils.copyProperties(epcStandard, epcStandardForm);
        EPC tempEpc = epcMgr.getEpc(epcStandardForm.getEpcStandardName());
        if (tempEpc != null) {
            errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("errors.existing.standardEpc", epcStandardForm.getEpcStandardName()));
            saveErrors(request, errors);
            updateFormBean(mapping, request, epcStandardForm);
            return mapping.findForward("failure");
        }
        epc.setEpcName(epcStandardForm.getEpcStandardName());
        epc.setEpcType("Standard");
        epc.setEpcDataType(epcStandardForm.getEpcDataType());
        epc.initAudit(this.getLoginUser());
        epcStandard.setEpc(epc);
        epcStandard.setEpcStandardHeaderValue(epcStandardForm.getEpcStandardHeaderValue());
        try {
            epcMgr.saveEpc(epc);
        } catch (Exception e) {
            log.warn(e.getMessage());
            errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("errors.epcStandard.save", e.getMessage()));
            saveErrors(request, errors);
            BeanUtils.copyProperties(epcStandardForm, convert(epcStandard));
            updateFormBean(mapping, request, epcStandardForm);
            return mapping.findForward("others");
        }
    }
    epcStandard.initAudit(this.getLoginUser());
    try {
        mgr.saveEpcStandard(epcStandard);
    } catch (Exception e) {
        log.warn(e.getMessage());
        errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("errors.epcStandard.save", e.getMessage()));
        saveErrors(request, errors);
        BeanUtils.copyProperties(epcStandardForm, convert(epcStandard));
        updateFormBean(mapping, request, epcStandardForm);
        return mapping.findForward("failure");
    }
    BeanUtils.copyProperties(epcStandardForm, convert(epcStandard));
    updateFormBean(mapping, request, epcStandardForm);
    // add success messages
    if (epcStandardId == null || epcStandardId.trim().equals("")) {
        messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("epcStandard.added", epcStandard.getEpc().getEpcName()));
        saveMessages(request.getSession(), messages);
        return mapping.findForward("success");
    } else {
        messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage("epcStandard.updated", epcStandard.getEpc().getEpcName()));
        saveMessages(request.getSession(), messages);
        return mapping.findForward("success");
    }
}
