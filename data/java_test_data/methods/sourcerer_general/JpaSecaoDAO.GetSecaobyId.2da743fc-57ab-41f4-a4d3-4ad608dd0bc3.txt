public SecaoAprovacaoCadastroVO GetSecaobyId(int secId) {
    SecaoAprovacaoCadastroVO secaoAprovacaoCadastroVO = new SecaoAprovacaoCadastroVO();
    try {
        ArrayList colAprovacao = new ArrayList();
        ArrayList colCadastro = new ArrayList();
        // Retorna os dados da seção e a página associada a seção
        // 
        String hqlSelect = "select tbsecao from TbSecao as tbsecao" + // evita lazy loading - pre load do sub-objeto
        " join fetch tbsecao.tbPagina" + " where tbsecao.secId = :secid";
        List resultListSecaoPagina = em.createQuery(hqlSelect).setParameter("secid", secId).getResultList();
        Iterator iterSecaoPagina = resultListSecaoPagina.iterator();
        if (iterSecaoPagina.hasNext()) {
            TbSecao elementTbSecao = null;
            elementTbSecao = (TbSecao) iterSecaoPagina.next();
            // Copia dados para o SecaoVO
            SecaoVO itemSecaoVO = new SecaoVO();
            itemSecaoVO.setSecId(new Integer(secId));
            try {
                BeanUtils.copyProperties(itemSecaoVO, elementTbSecao);
            } catch (Exception e) {
                e.printStackTrace();
            }
            secaoAprovacaoCadastroVO.setSecaoVO(itemSecaoVO);
            // Copia dados para o PaginaVO
            PaginaVO itemPaginaVO = new PaginaVO();
            try {
                BeanUtils.copyProperties(itemPaginaVO, elementTbSecao.getTbPagina());
            } catch (Exception e) {
                e.printStackTrace();
            }
            secaoAprovacaoCadastroVO.setPaginaVO(itemPaginaVO);
            // Retorna todos os grupos de usuários que podem cadastrar conteúdo
            // 
            hqlSelect = "select tbrelgruposecaocadastro from TbRelGrupoSecaoCadastro as tbrelgruposecaocadastro" + // evita lazy loading - pre load do sub-objeto
            " left outer join fetch tbrelgruposecaocadastro.tbGrupo" + " where tbrelgruposecaocadastro.tbSecao.secId = :secid";
            List resultListGrupoUsuario = em.createQuery(hqlSelect).setParameter("secid", secId).getResultList();
            for (Iterator iter = resultListGrupoUsuario.iterator(); iter.hasNext(); ) {
                TbRelGrupoSecaoCadastro element = (TbRelGrupoSecaoCadastro) iter.next();
                GrupoVO item = new GrupoVO();
                if (element.getTbGrupo().getGruId().intValue() == UtilsDAO.C_GRUPO_TODOS) {
                    // Grupo TODOS: repassa a camada de view de forma transparente
                    item.setGruId(new Integer(UtilsDAO.C_GRUPO_TODOS));
                    item.setGruNmGrupo("Todos");
                    item.setGruDsGrupo("Todos");
                } else {
                    try {
                        BeanUtils.copyProperties(item, element.getTbGrupo());
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
                colCadastro.add(item);
            }
            secaoAprovacaoCadastroVO.setGrupoCadastroVO(colCadastro);
            // Retorna todos os grupos de usuários que podem aprovar conteúdo
            // 
            hqlSelect = "select tbrelgruposecaoaprovacao from TbRelGrupoSecaoAprovacao as tbrelgruposecaoaprovacao" + // evita lazy loading - pre load do sub-objeto
            " left outer join fetch tbrelgruposecaoaprovacao.tbGrupo" + " where tbrelgruposecaoaprovacao.tbSecao.secId = :secid";
            List resultListGrupoUsuarioAprovador = em.createQuery(hqlSelect).setParameter("secid", secId).getResultList();
            // Copia dados para o VO
            for (Iterator iter = resultListGrupoUsuarioAprovador.iterator(); iter.hasNext(); ) {
                TbRelGrupoSecaoAprovacao element = (TbRelGrupoSecaoAprovacao) iter.next();
                GrupoVO item = new GrupoVO();
                if (element.getTbGrupo().getGruId().intValue() == UtilsDAO.C_GRUPO_TODOS) {
                    // Grupo TODOS: repassa a camada de view de forma transparente
                    item.setGruId(new Integer(UtilsDAO.C_GRUPO_TODOS));
                    item.setGruNmGrupo(UtilsDAO.C_DS_GRUPO_TODOS);
                    item.setGruDsGrupo(UtilsDAO.C_DS_GRUPO_TODOS);
                } else {
                    try {
                        BeanUtils.copyProperties(item, element.getTbGrupo());
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
                colAprovacao.add(item);
            }
            secaoAprovacaoCadastroVO.setGrupoAprovacaoVO(colAprovacao);
        }
    } catch (Exception e) {
        throw new EJBException(e);
    }
    return secaoAprovacaoCadastroVO;
}
