@Override
public void pageContext(Context pageContext, Page page) {
    // generatedEntityFieldsInController - true or false
    {
        List<Entity> retVal = new ArrayList<Entity>();
        Set<Entity> alreadyGeneratedEntities = new HashSet<Entity>();
        // enties for page parameters linked to primary keys are banned
        for (PageParameter pageParameter : page.getParameters()) {
            if (pageParameter.getEntityProperty() != null && pageParameter.getEntityProperty().isPrimaryKey()) {
                alreadyGeneratedEntities.add(pageParameter.getEntityProperty().getEntity());
            }
        }
        // banned
        for (Output output : page.getOutputs()) {
            if (output.getId().equals(output.getEntity().getId())) {
                alreadyGeneratedEntities.add(output.getEntity());
            }
        }
        // generated
        for (Entity entity : page.getInputEntities()) {
            if (alreadyGeneratedEntities.contains(entity)) {
                continue;
            }
            retVal.add(entity);
        }
        pageContext.put("generatedEntityFieldsInController", retVal);
    }
    {
        // page controller
        PageController pageController = new PageController(page);
        // enties for page parameters linked to primary keys
        for (PageParameter pageParameter : page.getParameters()) {
            if (pageParameter.getEntityProperty() != null) {
                PageEntity pageEntity = PageEntity.create(pageParameter.getEntityProperty().getEntity());
                pageEntity.setPageParameter(pageParameter);
                if (pageParameter.getEntityProperty().isPrimaryKey()) {
                    pageEntity.setType(Type.PARAM_PRIMARY_KEY);
                } else {
                    pageEntity.setType(Type.PARAM_OTHER);
                }
                pageController.getPageEntities().add(pageEntity);
            }
        }
        // entities linked to outputs with entity id equal to output id
        for (Output output : page.getOutputs()) {
            PageEntity pageEntity = PageEntity.create(output.getEntity());
            pageEntity.setType(Type.OUTPUT);
            pageEntity.setOutput(output);
            pageController.getPageEntities().add(pageEntity);
        }
        // consider all input entities
        for (Entity entity : page.getInputEntities()) {
            PageEntity pageEntity = PageEntity.create(entity);
            pageEntity.setType(Type.INPUT);
            pageController.getPageEntities().add(pageEntity);
        }
        pageController.analyzeAndSetPageEntityVariableNames();
        // all entity lists which need to be generated
        for (OutputList outputList : page.getOutputLists()) {
            PageEntityList pageEntityList = new PageEntityList();
            pageEntityList.setOutputList(outputList);
            pageEntityList.setId(outputList.getId());
            pageController.getPageEntityLists().add(pageEntityList);
        }
        pageContext.put("controller", pageController);
    }
    // navigation url
    {
        String url = page.getId() + "${pageSuffix}";
        for (int i = 0; i < page.getParameters().size(); i++) {
            PageParameter parameter = page.getParameters().get(i);
            if (i == 0) {
                url = url + "?";
            } else {
                url = url + "&";
            }
            url += parameter.getId() + "=${" + parameter.getId() + "}";
        }
        pageContext.put("navigationUrl", url);
        page.setNavigationUrl(url);
    }
}
