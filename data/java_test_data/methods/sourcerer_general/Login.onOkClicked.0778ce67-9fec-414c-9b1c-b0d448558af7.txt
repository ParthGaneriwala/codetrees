public boolean onOkClicked() {
    System.out.println("\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ STARTING Authentication");
    if (form.isValid()) {
        User user = new User();
        form.copyTo(user);
        // create a UsernamePasswordToken using the username and password provided by the user
        // See:  http://incubator.apache.org/shiro/static/current/apidocs/org/apache/shiro/authc/UsernamePasswordToken.html
        UsernamePasswordToken token = new UsernamePasswordToken(user.getUsername(), user.getPassword());
        try {
            // get the user (aka subject) associated with this request.
            // See: http://incubator.apache.org/shiro/static/current/apidocs/org/apache/shiro/subject/Subject.html#login(org.apache.shiro.authc.AuthenticationToken)
            Subject subject = SecurityUtils.getSubject();
            subject.login(token);
            // clear the information stored in the token
            // see: http://incubator.apache.org/shiro/static/current/apidocs/org/apache/shiro/authc/UsernamePasswordToken.html#clear()
            token.clear();
            String redirect = redirectField.getValue();
            if (StringUtils.isNotBlank(redirect)) {
                setRedirect(redirect);
            } else {
                setRedirect("/secure/index.html");
            }
        } catch (UnknownAccountException uae) {
            // no account for the submitted username – retry?
            uae.printStackTrace();
            form.setError(uae.getMessage());
        } catch (IncorrectCredentialsException ice) {
            // submitted password was incorrect - retry?
            ice.printStackTrace();
            form.setError(ice.getMessage());
        } catch (LockedAccountException lae) {
            // account currently locked – unusable – nice error msg.
            lae.printStackTrace();
            form.setError(lae.getMessage());
        } catch (ExcessiveAttemptsException eae) {
            // too many unsuccessful login accounts. Lock it?
            eae.printStackTrace();
            form.setError(eae.getMessage());
        } catch (AuthenticationException ae) {
            // unexpected error?
            ae.printStackTrace();
            form.setError("Login NOT SUCCESSFUL - cause not known!");
        }
    }
    return true;
}
