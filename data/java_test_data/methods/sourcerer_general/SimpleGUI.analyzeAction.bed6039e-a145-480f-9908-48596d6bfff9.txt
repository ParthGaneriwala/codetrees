private void analyzeAction() {
    ImageTreeGenerator itg = new ImageTreeGenerator();
    itg.setCoverage(coverage);
    int max = (int) Math.ceil(coverage.getSampleDimension(0).getMaximumValue());
    int min = (int) Math.floor(coverage.getSampleDimension(0).getMinimumValue());
    double increment = (double) (max - min) / 5d;
    double[] thresholds = new double[5];
    for (int i = 0; i < 5; i++) {
        thresholds[i] = min + i * increment;
    }
    itg.setThresholds(thresholds);
    itg.setShapeClassifier(classifier);
    DefaultTreeModel tree = itg.createMomentTree();
    TreeAnalyzer analyzer = new TreeAnalyzer();
    analyzer.setTree(tree);
    analyzer.setBinaryCoverages(itg.getBinaries());
    analyzer.setShapeClassifier(classifier);
    // this method also changes the user objects of the tree.  Just so you know.
    ClassifiedRaster[] rasters = analyzer.analyze();
    for (int i = 0; i < rasters.length; i++) {
        System.out.println(rasters[i].toFileString());
    }
    // how about displaying the tree in a tree viewer?  Need to put a sensible toString() method into ClassifiedRaster, then.
    JTree jtree = new JTree(tree);
    JFrame frame = new JFrame();
    frame.setPreferredSize(new java.awt.Dimension(400, 200));
    frame.getContentPane().add(new JScrollPane(jtree));
    frame.setVisible(true);
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
}
