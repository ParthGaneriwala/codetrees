private Result processExplainPlan() throws IOException, HsqlException {
    // PRE:  we assume only one DML or DQL has been submitted
    // and simply ignore anything following the first
    // sucessfully compliled statement
    String token;
    Parser parser;
    int cmd;
    CompiledStatement cs;
    Result result;
    String line;
    LineNumberReader lnr;
    tokenizer.getThis(Token.T_PLAN);
    tokenizer.getThis(Token.T_FOR);
    parser = new Parser(session, database, tokenizer);
    token = tokenizer.getSimpleToken();
    cmd = Token.get(token);
    result = Result.newSingleColumnResult("OPERATION", Types.VARCHAR);
    int brackets = 0;
    switch(cmd) {
        case Token.OPENBRACKET:
            brackets = parser.parseOpenBracketsSelect() + 1;
        case Token.SELECT:
            cs = parser.compileSelectStatement(brackets);
            break;
        case Token.INSERT:
            cs = parser.compileInsertStatement();
            break;
        case Token.UPDATE:
            cs = parser.compileUpdateStatement();
            break;
        case Token.DELETE:
            cs = parser.compileDeleteStatement();
            break;
        case Token.CALL:
            cs = parser.compileCallStatement();
            break;
        default:
            // for other operations
            return result;
    }
    lnr = new LineNumberReader(new StringReader(cs.describe(session)));
    while (null != (line = lnr.readLine())) {
        result.add(new Object[] { line });
    }
    return result;
}
