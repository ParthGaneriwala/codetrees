public static List<String> getSubClassFromDataModel(Class superclass, boolean filterWf) {
    String jarFile = "C:/Documents and Settings/ocquidant/Travail/" + "eclipseWS/DataModelDist/lib/datamodel.jar";
    List<String> list = new ArrayList<String>(1000);
    if (classNames == null) {
        long start = System.nanoTime();
        try {
            ZipFile zf = new ZipFile(jarFile);
            Enumeration e = zf.entries();
            while (e.hasMoreElements()) {
                ZipEntry ze = (ZipEntry) e.nextElement();
                String name = ze.getName();
                if (name.endsWith(".class")) {
                    if (name.contains("reservoir/model")) {
                        if (filterWf == true && name.contains("model/workflow")) {
                            continue;
                        }
                        String s = name.substring(0, name.length() - 6);
                        s = s.replace('/', '.');
                        LogUtils.info("s=" + s, null);
                        list.add(s);
                    }
                }
            }
            zf.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        classNames = new String[list.size()];
        list.toArray(classNames);
        long end = System.nanoTime();
        LogUtils.info("Found: " + classNames.length + " classes in " + (end - start) / 1e6 + " ms", null);
    }
    List<String> result = list;
    if (superclass != null) {
        long start = System.nanoTime();
        try {
            result = new ArrayList<String>();
            for (int i = 0; i < classNames.length; i++) {
                Class clazz = Class.forName(classNames[i]);
                Class sclazz = clazz.getSuperclass();
                if (sclazz != null && sclazz.equals(superclass)) {
                    result.add(classNames[i]);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        long end = System.nanoTime();
        LogUtils.info("Scanning in: " + (end - start) / 1e6 + " ms", null);
    }
    return result;
}
