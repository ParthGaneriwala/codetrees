@Override
public void onCreate(Bundle savedInstanceState) {
    Log.d(TAG, "onCreate");
    super.onCreate(savedInstanceState);
    // If no data was given in the intent (because we were started
    // as a MAIN activity), then use our default content provider.
    Intent intent = getIntent();
    if (intent.getData() == null) {
        intent.setData(Products.CONTENT_URI);
    }
    setContentView(R.layout.products_list);
    setDefaultKeyMode(DEFAULT_KEYS_SEARCH_LOCAL);
    mInstructionsText = (TextView) findViewById(R.id.instructions);
    // Inform the list we provide context menus for items
    getListView().setOnCreateContextMenuListener(this);
    getListView().setTextFilterEnabled(true);
    String selection = null;
    String[] selectionArgs = null;
    // View a product of the list
    if (Intent.ACTION_VIEW.equals(intent.getAction())) {
        // from click on search results
        Uri uri = intent.getData();
        Log.d(TAG, "ACTION_VIEW " + uri);
        // startActivity(new Intent(Intent.ACTION_EDIT, uri));
        setResult(RESULT_OK, new Intent().setData(uri));
        finish();
    } else // View all products corresponding to a query
    if (Intent.ACTION_SEARCH.equals(intent.getAction())) {
        String query = intent.getStringExtra(SearchManager.QUERY);
        selection = ProductsNames.NAME + " LIKE  '?";
        selectionArgs = new String[] { "%" + query + "%" };
        setTitle("ProductSearch for: " + query);
        mInstructionsText.setVisibility(View.GONE);
    }
    // Perform a managed query. The Activity will handle closing and re-querying the cursor when needed.
    mCursor = managedQuery(getIntent().getData(), PROJECTION, selection, selectionArgs, Products.DEFAULT_SORT_ORDER);
    if (mCursor.getCount() == 0) {
        mInstructionsText.setVisibility(View.VISIBLE);
    } else {
        mInstructionsText.setVisibility(View.GONE);
    }
    // Set product list adapter
    mAdapter = new ProductsAdapter(this, R.layout.product_item, mCursor, new String[] { ProductsNames.NAME, ProductsBrands.BRAND }, new int[] { R.id.name, R.id.brand });
    setListAdapter(mAdapter);
    // For debugging purposes
    Log.d(TAG, intent.toString());
    if (intent.getExtras() != null) {
        Log.d(TAG, intent.getExtras().keySet().toString());
    }
}
