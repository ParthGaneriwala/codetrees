public void testTestPlanAndCollection() throws Exception {
    TestPlanCollection collection = new TestPlanCollection();
    TestPlan testPlan1 = new TestPlan("TestPlan1");
    TestPlan testPlan2 = new TestPlan("TestPlan2");
    TestPlan testPlan3 = new TestPlan("TestPlan2");
    assertEquals(0, testPlan2.compareTo(testPlan3));
    TestGroup group1 = new TestGroup("TestGroup1");
    TestGroup group2 = new TestGroup("TestGroup1");
    Product product = new Product("Product");
    Product newProduct = new Product("newProduct");
    Attachment attachment = new Attachment("name", ".txt", "path");
    try {
        collection.add(null);
        fail();
    } catch (AssertionError e) {
    }
    assertTrue(collection.add(testPlan1));
    assertTrue(collection.add(testPlan2));
    assertTrue(collection.remove(testPlan1));
    assertFalse(collection.remove(testPlan1));
    assertFalse("Should not add second testplan with same name", collection.add(testPlan3));
    // Setters Test
    testPlan1.setDescription("Description");
    testPlan1.setName("TestPlanName");
    testPlan1.setProduct(product);
    // Copy Constructor Test and Getters Test
    testPlan3 = new TestPlan(testPlan1, "newName");
    assertEquals("Description", testPlan3.getDescription());
    assertEquals(product, testPlan3.getProduct());
    testPlan3.setName("NewName");
    assertEquals("TestPlanName", testPlan1.toString());
    testPlan3.setProduct(newProduct);
    assertEquals(product, testPlan1.getProduct());
    assertTrue(collection.getTestPlan("TestPlan2").addTestGroup(group1));
    assertFalse(collection.getTestPlan("TestPlan2").addTestGroup(group2));
    assertEquals(1, collection.getTestPlan("TestPlan2").getTestGroupSize());
    assertTrue(testPlan2.removeTestGroup(group1));
    assertFalse(testPlan2.removeTestGroup(new TestGroup("bunk")));
    assertEquals(0, collection.getTestPlans().iterator().next().getTestGroupCollection().getTestGroups().size());
    try {
        collection.nameIsPresentInGroup(null);
        fail();
    } catch (AssertionError e) {
    }
    try {
        Attachment notAnAttachment = null;
        testPlan2.addAttachment(notAnAttachment);
        fail();
    } catch (AssertionError e) {
    }
    try {
        testPlan2.removeAttachment(null);
        fail();
    } catch (AssertionError e) {
    }
    testPlan2.addAttachment(attachment);
    assertEquals(1, testPlan2.getAttachmentCollection().getAttachments().size());
    testPlan2.removeAttachment(attachment);
    product.setName("testProduct");
    testPlan2.setProduct(product);
}
