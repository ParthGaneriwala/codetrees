// private void flushEvents() {
// Event e;
// while ((e = eventQueue.poll()) != null) {
// fireEvent(e);
// }
// }
void fireEvent(Event e) {
    IoSession session = getSession();
    EventType type = e.getType();
    Object data = e.getData();
    if (type == EventType.RECEIVED) {
        SimPipeSessionImpl s = (SimPipeSessionImpl) session;
        if (sessionOpened && s.getTrafficMask().isReadable() && s.getLock().tryLock()) {
            try {
                int byteCount = 1;
                if (data instanceof ByteBuffer) {
                    byteCount = ((ByteBuffer) data).remaining();
                }
                s.increaseReadBytes(byteCount);
                super.fireMessageReceived(s, data);
            } finally {
                s.getLock().unlock();
            }
            flushPendingDataQueues(s);
        } else {
            s.pendingDataQueue.add(data);
        }
    } else if (type == EventType.WRITE) {
        super.fireFilterWrite(session, (WriteRequest) data);
    } else if (type == EventType.SENT) {
        super.fireMessageSent(session, (WriteRequest) data);
    } else if (type == EventType.EXCEPTION) {
        super.fireExceptionCaught(session, (Throwable) data);
    } else if (type == EventType.IDLE) {
        super.fireSessionIdle(session, (IdleStatus) data);
    } else if (type == EventType.OPENED) {
    // super.fireSessionOpened(session);
    // sessionOpened = true;
    } else if (type == EventType.CREATED) {
        super.fireSessionCreated(session);
        super.fireSessionOpened(session);
        sessionOpened = true;
    } else if (type == EventType.CLOSED) {
        super.fireSessionClosed(session);
    } else if (type == EventType.CLOSE) {
        super.fireFilterClose(session);
    }
}
