@SuppressWarnings("unchecked")
public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
    Component toReturn = this.defaultListCellRenderer.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
    if (value instanceof AbstractOWLFrameSectionRow) {
        AbstractOWLFrameSectionRow<Object, OWLAnnotationAxiom<OWLDataProperty>, ? extends Object> row = (AbstractOWLFrameSectionRow) value;
        OWLAnnotationAxiom axiom = row.getAxiom();
        OWLAnnotation annotation = axiom.getAnnotation();
        String uriString = annotation.getAnnotationURI().toString();
        NamespaceUtil nsUtil = new NamespaceUtil();
        String localName = nsUtil.split(uriString, null)[1];
        String annotationValue = annotation.getAnnotationValueAsConstant().getLiteral();
        ParserFactory.initParser(annotationValue, this.owlEditorKit.getModelManager());
        try {
            SimpleNode formula = ArithmeticsParser.Start();
            formula.jjtAccept(this, null);
            String rendering = this.formulaString;
            String propertyName = this.owlEditorKit.getModelManager().getRendering(axiom.getSubject());
            if (this.isClassView) {
                this.formulaURILabel.setText(propertyName + " " + localName);
            } else {
                this.formulaURILabel.setText(localName);
            }
            this.formulaContentArea.setText(rendering);
            if (isSelected) {
                this.formulaContentArea.setForeground(list.getSelectionForeground());
                this.formulaURILabel.setForeground(list.getSelectionForeground());
            } else {
                this.formulaContentArea.setForeground(list.getForeground());
                this.formulaURILabel.setForeground(LABEL_COLOR);
            }
            this.iconLabel.setVisible(this.isClassView);
            toReturn = this;
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }
    return toReturn;
}
