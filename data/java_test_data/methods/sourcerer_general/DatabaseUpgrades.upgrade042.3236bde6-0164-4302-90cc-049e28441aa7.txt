public static Vector upgrade042(Vector messages) throws Exception {
    TransactionStatus status = DatabaseConnection.startTransaction(getTransactionDefinition());
    try {
        Connection conn = DatabaseConnection.getConnection();
        // drop topic_content column
        String sql = "alter table jam_topic drop column topic_content ";
        DatabaseConnection.executeUpdate(sql, conn);
        messages.add("Dropped topic_content column from jam_topic");
        // add current_version_id column
        if (Environment.getValue(Environment.PROP_DB_TYPE).equals(WikiBase.DATA_HANDLER_ORACLE)) {
            sql = "alter table jam_topic add (current_version_id INTEGER) ";
        } else {
            sql = "alter table jam_topic add column current_version_id INTEGER ";
        }
        DatabaseConnection.executeUpdate(sql, conn);
        messages.add("Added current_version_id column to jam_topic");
        // add current_version_id constraint
        DatabaseConnection.executeUpdate(AnsiQueryHandler.STATEMENT_CREATE_TOPIC_CURRENT_VERSION_CONSTRAINT, conn);
        messages.add("Added jam_f_topic_topicv constraint to jam_topic");
        // update jam_topic records
        DatabaseConnection.executeUpdate(AnsiQueryHandler.STATEMENT_UPDATE_TOPIC_CURRENT_VERSIONS, conn);
        messages.add("Added current_version_id values for jam_topic records");
        // create the jam_watchlist table
        DatabaseConnection.executeUpdate(AnsiQueryHandler.STATEMENT_CREATE_WATCHLIST_TABLE, conn);
        messages.add("Created watchlist table");
    } catch (Exception e) {
        DatabaseConnection.rollbackOnException(status, e);
        // cleanup
        messages.add("Error during upgrade, dropping the watchlist table");
        try {
            DatabaseConnection.executeUpdate(AnsiQueryHandler.STATEMENT_DROP_WATCHLIST_TABLE);
        } catch (Exception e2) {
        }
        throw e;
    } catch (Error err) {
        DatabaseConnection.rollbackOnException(status, err);
        throw err;
    }
    DatabaseConnection.commit(status);
    return messages;
}
