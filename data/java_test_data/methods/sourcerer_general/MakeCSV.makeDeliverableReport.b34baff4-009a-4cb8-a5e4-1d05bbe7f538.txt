public void makeDeliverableReport(List<Deliverable> d) {
    try {
        String filename = checkForFile("deliverable_report");
        FileWriter writer = new FileWriter(filename, false);
        double totalcompleted = 0;
        double avgcompleted = 0;
        // append in all field names we want in the report
        writer.append("Title");
        writer.append(",");
        writer.append("Deliverable Number");
        writer.append(",");
        writer.append("Related Project");
        writer.append(",");
        writer.append("Creation Date");
        writer.append(",");
        writer.append("Last Updated");
        writer.append(",");
        writer.append("Status");
        writer.append(",");
        writer.append("Additional Notes");
        writer.append("\n");
        // now we append in the data from the list of people passed in
        for (int i = 0; i < d.size(); i++) {
            writer.append(d.get(i).getTitle());
            writer.append(",");
            writer.append(Integer.toString(d.get(i).getDeliverableNumber()));
            writer.append(",");
            writer.append(d.get(i).getProject().getName());
            writer.append(",");
            writer.append(d.get(i).getCreationDate().toString());
            writer.append(",");
            writer.append(d.get(i).getUpdatedAt().toString());
            writer.append(",");
            writer.append(d.get(i).getStatus().toString());
            if (d.get(i).getStatus().toString().equalsIgnoreCase("Complete"))
                totalcompleted++;
            writer.append(",");
            writer.append(d.get(i).getAdditionalNotes());
            writer.append("\n");
        }
        avgcompleted = (totalcompleted / d.size()) * 100;
        writer.append("\n");
        writer.append("Total Completed Deliverables");
        writer.append(",");
        writer.append(Double.toString(totalcompleted));
        writer.append("\n");
        writer.append("Average Completion");
        writer.append(",");
        writer.append(Double.toString(avgcompleted));
        writer.flush();
        writer.close();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
