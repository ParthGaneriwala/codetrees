public final void item() throws RecognitionException, TokenStreamException {
    returnAST = null;
    ASTPair currentAST = new ASTPair();
    AST item_AST = null;
    AST n_AST = null;
    AST n1_AST = null;
    AST n2_AST = null;
    node();
    n_AST = (AST) returnAST;
    astFactory.addASTChild(currentAST, returnAST);
    {
        _loop21: do {
            switch(LA(1)) {
                case PATH:
                    {
                        match(PATH);
                        node();
                        n1_AST = (AST) returnAST;
                        astFactory.addASTChild(currentAST, returnAST);
                        if (inputState.guessing == 0) {
                            AST a1 = (AST) astFactory.make((new ASTArray(1)).add(astFactory.create(ANON, genAnonId())));
                            emitQuad(n_AST, n1_AST, a1);
                            n_AST = a1;
                        }
                        break;
                    }
                case RPATH:
                    {
                        match(RPATH);
                        node();
                        n2_AST = (AST) returnAST;
                        astFactory.addASTChild(currentAST, returnAST);
                        if (inputState.guessing == 0) {
                            AST a2 = (AST) astFactory.make((new ASTArray(1)).add(astFactory.create(ANON, genAnonId())));
                            emitQuad(a2, n2_AST, n_AST);
                            n_AST = a2;
                        }
                        break;
                    }
                default:
                    {
                        break _loop21;
                    }
            }
        } while (true);
    }
    if (inputState.guessing == 0) {
        item_AST = (AST) currentAST.root;
        item_AST = n_AST;
        currentAST.root = item_AST;
        currentAST.child = item_AST != null && item_AST.getFirstChild() != null ? item_AST.getFirstChild() : item_AST;
        currentAST.advanceChildToEnd();
    }
    item_AST = (AST) currentAST.root;
    returnAST = item_AST;
}
