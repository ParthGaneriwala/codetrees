public void getNext(JCas jCas) throws IOException, CollectionException {
    try {
        // we need the next sgm file which will typically be 'currentSGMFile' - but we
        // will call getNextSGMFile() to be safe
        File sgmFile = getNextSGMFile();
        // setting currentSGMFile to null tells getNextSGMFile to get the next sgm file
        // rather than simply returning the current value.
        currentSGMFile = null;
        String sgmText = FileUtils.file2String(sgmFile);
        JCas initialView = jCas.getView(CAS.NAME_DEFAULT_SOFA);
        initialView.setDocumentText(getDocumentText(sgmText));
        // org.cleartk.type.Document sgmDocument = new org.cleartk.type.Document(initialView);
        // sgmDocument.setIdentifier(sgmFile.getName());
        // sgmDocument.setPath(sgmFile.getName());
        // sgmDocument.addToIndexes();
        File apfFile = getAPFFile(sgmFile);
        SAXBuilder builder = new SAXBuilder();
        builder.setDTDHandler(null);
        Document doc = builder.build(apfFile);
        Element apfSource = doc.getRootElement();
        String uri = apfSource.getAttributeValue("URI");
        String source = apfSource.getAttributeValue("SOURCE");
        String type = apfSource.getAttributeValue("TYPE");
        ViewURIUtil.setURI(jCas, sgmFile.toURI());
        Ace2005Document document = new Ace2005Document(initialView);
        document.setAceUri(uri);
        document.setAceSource(source);
        document.setAceType(type);
        document.addToIndexes();
        JCas apfUriView = jCas.createView(Ace2005Constants.ACE_2005_APF_URI_VIEW);
        apfUriView.setSofaDataURI(apfFile.toURI().toString(), null);
    } catch (CASException ce) {
        throw new CollectionException(ce);
    } catch (JDOMException je) {
        throw new CollectionException(je);
    }
}
