public synchronized void combineChunks(File incomingPath) {
    if (!allChunksDone()) {
        System.out.println("not all chunks done.");
        return;
    }
    if (!incomingPath.isDirectory()) {
        System.out.println("Path is not a dir.");
        return;
    }
    combining = true;
    close();
    File file = new File(incomingPath.toString() + File.separator + name);
    boolean falseName = file.exists();
    int namei = 1;
    while (falseName) {
        file = new File(incomingPath.toString() + File.separator + name + "(" + namei + ")");
        falseName = file.exists();
        namei++;
    }
    if (totalChunks > 1) {
        try {
            file.createNewFile();
        } catch (IOException e) {
            System.out.println("Could not create \"" + file.toString() + "\"");
            return;
        }
        OutputStream outStream = null;
        try {
            outStream = new BufferedOutputStream(new FileOutputStream(file));
        } catch (FileNotFoundException e) {
        }
        BufferedInputStream inStream;
        System.out.println("Combining chunks of file " + name + " to " + path);
        for (int i = 0; i < totalChunks; i++) {
            // System.out.println("Processing chunk nr. " + (i+1) + "...");
            try {
                byte[] buffer = new byte[16384];
                File chunk = chunkList[i].getChunkFile();
                inStream = new BufferedInputStream(new FileInputStream(chunk));
                int nbytes;
                while ((nbytes = inStream.read(buffer)) != -1) {
                    outStream.write(buffer, 0, nbytes);
                }
                inStream.close();
                inStream = null;
                chunkList[i].remove();
                chunkList[i] = null;
            } catch (FileNotFoundException e) {
                System.out.println("OOOPS error, this shouldn't happen.");
            } catch (IOException e) {
                System.out.println("IO Error: " + e.toString());
            }
        }
        try {
            outStream.close();
        } catch (IOException e) {
            System.out.println("Close: " + e.toString());
        }
        outStream = null;
    } else {
        chunkList[0].getChunkFile().renameTo(file);
    }
    remove();
    ddmt.deleteFile(chunkDir);
    System.out.println("Done.");
    combining = false;
}
