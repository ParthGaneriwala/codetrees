public void cacheParentIds(File dataDirectory, ProgressNotifier pn) throws IOException {
    // TODO: make this work for a set of article ids
    cachedParentIds = new TIntObjectHashMap<int[]>();
    File categoryFile = new File(dataDirectory.getPath() + File.separatorChar + "categorylink.csv");
    BufferedReader input = new BufferedReader(new InputStreamReader(new FileInputStream(categoryFile), "UTF-8"));
    if (pn == null)
        pn = new ProgressNotifier(1);
    pn.startTask(categoryFile.length(), "caching parents");
    long bytesRead = 0;
    String line;
    Pattern p = Pattern.compile("^(\\d*),(\\d*)$");
    int lastChild = -1;
    Vector<Integer> parents = new Vector<Integer>();
    while ((line = input.readLine()) != null) {
        bytesRead = bytesRead + line.length();
        Matcher m = p.matcher(line);
        if (m.matches()) {
            int parentId = new Integer(m.group(1));
            int childId = new Integer(m.group(2));
            if (childId == lastChild)
                parents.add(parentId);
            else {
                if (!parents.isEmpty()) {
                    int[] pArray = new int[parents.size()];
                    int i = 0;
                    for (int pId : parents) {
                        pArray[i] = pId;
                        i++;
                    }
                    cachedParentIds.put(lastChild, pArray);
                }
                lastChild = childId;
                parents = new Vector<Integer>();
                parents.add(parentId);
            }
        }
        pn.update(bytesRead);
    }
    if (!parents.isEmpty()) {
        int[] pArray = new int[parents.size()];
        int i = 0;
        for (int pId : parents) {
            pArray[i] = pId;
            i++;
        }
        cachedParentIds.put(lastChild, pArray);
    }
    input.close();
}
