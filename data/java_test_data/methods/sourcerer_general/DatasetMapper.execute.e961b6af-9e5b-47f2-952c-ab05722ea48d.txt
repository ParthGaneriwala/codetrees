public void execute(String query, boolean groupBySecondColumn) {
    dataset.clear();
    try {
        // The newInstance() call is a work around for some
        // broken Java implementations
        Class.forName("com.mysql.jdbc.Driver").newInstance();
    } catch (Exception ex) {
    // handle the error
    }
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
    int counter = 0;
    int size = 0;
    labels.clear();
    double max = 0.0;
    int labelsCount = 0;
    try {
        conn = DriverManager.getConnection(jdbc);
        stmt = conn.createStatement();
        // rs = stmt.executeQuery(query);
        if (stmt.execute(query)) {
            rs = stmt.getResultSet();
            ResultSetMetaData rmeta = rs.getMetaData();
            int col = rmeta.getColumnCount();
            int i = 0;
            java.util.ArrayList<Double> data = null;
            HashMap<String, Integer> xAxisMap = new HashMap<String, Integer>();
            while (rs.next()) {
                String label = rs.getString(1);
                if (!xAxisMap.containsKey(label)) {
                    xAxisMap.put(label, i);
                    labels.add(label);
                    i++;
                }
                if (groupBySecondColumn) {
                    String item = rs.getString(2);
                    // Get the data from the row using the series column
                    double current = rs.getDouble(3);
                    if (current > max) {
                        max = current;
                    }
                    data = dataset.get(item);
                    if (data == null) {
                        data = new java.util.ArrayList<Double>();
                    }
                    data.add(rs.getDouble(3));
                    dataset.put(item, data);
                } else {
                    for (int j = 2; j <= col; j++) {
                        String item = rmeta.getColumnName(j);
                        // Get the data from the row using the column name
                        double current = rs.getDouble(j);
                        if (current > max) {
                            max = current;
                        }
                        data = dataset.get(item);
                        if (data == null) {
                            data = new java.util.ArrayList<Double>();
                        }
                        data.add(rs.getDouble(j));
                        dataset.put(item, data);
                    }
                }
            }
            labelsCount = i;
        } else {
            log.error("query is not executed.");
        }
    // Now do something with the ResultSet ....
    } catch (SQLException ex) {
        // handle any errors
        log.error("SQLException: " + ex.getMessage());
        log.error("SQLState: " + ex.getSQLState());
        log.error("VendorError: " + ex.getErrorCode());
    } catch (Exception ex) {
    } finally {
        // if they are no-longer needed
        if (rs != null) {
            try {
                rs.close();
            } catch (SQLException sqlEx) {
            // ignore
            }
            rs = null;
        }
        if (stmt != null) {
            try {
                stmt.close();
            } catch (SQLException sqlEx) {
            // ignore
            }
            stmt = null;
        }
        if (conn != null) {
            try {
                conn.close();
            } catch (SQLException sqlEx) {
            // ignore
            }
            conn = null;
        }
    }
}
