public static char esc(String input, int[] currentPos) throws EscapeSequenceException {
    // remember the original position for error reporting
    int start = currentPos[0];
    int pos = currentPos[0];
    if (input.charAt(pos) != '\\') {
        ++currentPos[0];
        // not a escape code
        return input.charAt(pos);
    } else {
        // skip '\\'
        ++pos;
        if (pos >= input.length())
            throw new EscapeSequenceException("\\");
        char ch = input.charAt(pos++);
        currentPos[0] = pos;
        switch(ch) {
            case 'b':
            case 'B':
                return '\b';
            case 'f':
            case 'F':
                return '\f';
            case 'n':
            case 'N':
                return '\n';
            case 'r':
            case 'R':
                return '\r';
            case 's':
            case 'S':
                return ' ';
            case 't':
            case 'T':
                return '\t';
            case 'e':
            case 'E':
                return '\033';
            case 'x':
                {
                    int rval = 0;
                    if (pos >= input.length())
                        throw new EscapeSequenceException(input.substring(start));
                    ch = input.charAt(pos++);
                    if ('0' <= ch && ch <= '9')
                        rval = ch - '0';
                    else if ('a' <= ch && ch <= 'f')
                        rval = ch - 'a' + 10;
                    else if ('A' <= ch && ch <= 'F')
                        rval = ch - 'A' + 10;
                    else
                        throw new EscapeSequenceException(input.substring(start));
                    if (pos >= input.length()) {
                        currentPos[0] = pos;
                        return (char) rval;
                    }
                    ch = input.charAt(pos++);
                    if ('0' <= ch && ch <= '9')
                        rval = (rval << 4) + ch - '0';
                    else if ('a' <= ch && ch <= 'f')
                        rval = (rval << 4) + ch - 'a' + 10;
                    else if ('A' <= ch && ch <= 'F')
                        rval = (rval << 4) + ch - 'A' + 10;
                    currentPos[0] = pos;
                    return (char) rval;
                }
            case 'u':
                {
                    int rval = 0;
                    if (pos >= input.length())
                        throw new EscapeSequenceException(input.substring(start));
                    ch = input.charAt(pos++);
                    if ('0' <= ch && ch <= '9')
                        rval = ch - '0';
                    else if ('a' <= ch && ch <= 'f')
                        rval = ch - 'a' + 10;
                    else if ('A' <= ch && ch <= 'F')
                        rval = ch - 'A' + 10;
                    else
                        throw new EscapeSequenceException(input.substring(start));
                    for (int i = 0; i < 3; ++i) {
                        if (pos >= input.length()) {
                            currentPos[0] = pos;
                            return (char) rval;
                        }
                        ch = input.charAt(pos++);
                        if ('0' <= ch && ch <= '9')
                            rval = (rval << 4) + ch - '0';
                        else if ('a' <= ch && ch <= 'f')
                            rval = (rval << 4) + ch - 'a' + 10;
                        else if ('A' <= ch && ch <= 'F')
                            rval = (rval << 4) + ch - 'A' + 10;
                        else
                            break;
                    }
                    currentPos[0] = pos;
                    return (char) rval;
                }
            default:
                {
                    if (ch < '0' || ch > '7') {
                        currentPos[0] = pos;
                        return ch;
                    } else {
                        int rval = ch - '0';
                        if (pos >= input.length()) {
                            currentPos[0] = pos;
                            return (char) rval;
                        }
                        ch = input.charAt(pos++);
                        if ('0' <= ch && ch <= '7')
                            rval = (rval << 3) + ch - '0';
                        else {
                            currentPos[0] = pos;
                            return (char) rval;
                        }
                        if (pos >= input.length()) {
                            currentPos[0] = pos;
                            return (char) rval;
                        }
                        ch = input.charAt(pos++);
                        if ('0' <= ch && ch <= '7')
                            rval = (rval << 3) + ch - '0';
                        currentPos[0] = pos;
                        return (char) rval;
                    }
                }
        }
    }
}
