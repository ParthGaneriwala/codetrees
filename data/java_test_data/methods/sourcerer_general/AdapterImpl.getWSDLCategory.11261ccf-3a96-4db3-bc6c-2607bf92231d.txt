public com.jcommerce.ws.server.Category getWSDLCategory(com.jcommerce.core.model.Category input) {
    com.jcommerce.ws.server.Category ret = new com.jcommerce.ws.server.Category();
    ret.setId(input.getId());
    ret.setKeywords(input.getKeywords());
    ret.setSortOrder(input.getSortOrder());
    ret.setShowInNavigator(input.isShowInNavigator());
    Set categoryList = input.getChildren();
    if (categoryList != null) {
        int[] categorys = new int[categoryList.size()];
        int categoryCounter = 0;
        Iterator categoryItor = categoryList.iterator();
        while (categoryItor.hasNext()) {
            Category category = (Category) categoryItor.next();
            categorys[categoryCounter++] = category.getId();
        }
        ObjIdList objIdList = new ObjIdList();
        objIdList.setId(categorys);
        ret.setChildren(objIdList);
    }
    ret.setShow(input.isShow());
    Set goodsList = input.getGoodsList();
    if (goodsList != null) {
        int[] goodss = new int[goodsList.size()];
        int goodsCounter = 0;
        Iterator goodsItor = goodsList.iterator();
        while (goodsItor.hasNext()) {
            Goods goods = (Goods) goodsItor.next();
            goodss[goodsCounter++] = goods.getId();
        }
        ObjIdList objIdList = new ObjIdList();
        objIdList.setId(goodss);
        ret.setGoodsList(objIdList);
    }
    ret.setTemplateFile(input.getTemplateFile());
    ret.setMeasureUnit(input.getMeasureUnit());
    ret.setGrade(input.getGrade());
    if (input.getFilterAttribute() != null) {
        ret.setFilterAttribute(input.getFilterAttribute().getId());
    }
    ret.setName(input.getName());
    if (input.getParent() != null) {
        ret.setParent(input.getParent().getId());
    } else {
        ret.setParent(0);
    }
    ret.setStyle(input.getStyle());
    ret.setDescription(input.getDescription());
    return ret;
}
