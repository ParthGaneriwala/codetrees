public void run() {
    s.waitOnCount(1);
    IDBConnection conn = makeTestConnection();
    try {
        ModelRDB foo = ModelRDB.open(conn, "foo");
        foo.begin();
        Resource u = foo.createResource("test#subject");
        Property p = foo.createProperty("test#predicate");
        Resource o = foo.createResource("test#object");
        Statement stmt = foo.createStatement(u, p, o);
        foo.add(stmt);
        s.incCount();
        s.waitOnCount(3);
        if (!foo.contains(stmt))
            synchronized (msg) {
                if (msg.length() == 0)
                    msg = "Thread 2 can't see statement it just added";
                s.incCount(99);
                return;
            }
        // assertTrue(foo.contains(stmt));
        try {
            foo.commit();
        } catch (Exception e) {
            if (msg.length() == 0)
                msg = "Failed to commit transaction: " + e.getMessage();
            return;
        }
        // wake up thread 1
        s.incCount();
        // thread1 has now removed stmt
        s.waitOnCount(5);
        // assertFalse(foo.contains(stmt));
        if (foo.contains(stmt))
            synchronized (msg) {
                if (msg.length() == 0)
                    msg = "Thread 2 can see statement thread 1 should have removed";
                s.incCount(99);
                return;
            }
    } finally {
        try {
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
