public static void main(String[] args) {
    Yaka analyseur;
    java.io.InputStream input;
    if (args.length == 1) {
        // r�cup�r�ation puis traitement du param�tre
        // fileName with
        String filename_we = args[args.length - 1];
        // extension
        // fileName without extension
        String filename_woe;
        if (filename_we.endsWith(SOURCE_FILE))
            filename_woe = filename_we.substring(0, filename_we.length() - SOURCE_FILE.length());
        else {
            filename_woe = filename_we;
            filename_we += SOURCE_FILE;
        }
        System.out.println(String.format("* Traitement du fichier '%s'.", filename_we));
        try {
            input = new java.io.FileInputStream(filename_we);
            gen = new x86MachineCompiler(new java.io.FileOutputStream(filename_woe + X86_CODE));
        // gen = new YakaVirtualMachineCompiler(
        // new java.io.FileOutputStream(filename_woe + YAKA_CODE));
        } catch (java.io.FileNotFoundException e) {
            System.out.println("* Fichier introuvable.");
            return;
        }
    } else if (args.length == 0) {
        System.out.println("* Lecture sur l'entr\u00e9e standard (pas de g\u00e9n\u00e9ration).");
        input = System.in;
    } else {
        System.out.println("Usage: java Gram [fichier]");
        return;
    }
    iteManager = new IfThenElse(gen);
    whileManager = new While(gen);
    try {
        analyseur = new Yaka(input);
        analyseur.analyse();
        System.out.println(iGTable);
        ErrorManager.printReport();
    } catch (Exception ex) {
        System.out.println("Erreur d'analyse...\n" + ex);
    }
}
