public ActionForward search(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
    String keyword = request.getParameter("keyword");
    String orderby = request.getParameter("orderby");
    String pageNo = request.getParameter("pno");
    String typeid = request.getParameter("typeid");
    Map map = new TreeMap();
    map.put("keyword", keyword);
    map.put("orderby", orderby);
    map.put("typeid", typeid);
    try {
        int iPageNo = 1;
        try {
            if (pageNo != null) {
                iPageNo = Integer.parseInt(pageNo);
            }
        } catch (Exception e) {
        }
        List list = null;
        Pager pager = new Pager();
        pager.setCntOfPage(5);
        pager.setCurPage(iPageNo);
        list = videoListManager.getVideoByPage(pager, iPageNo, "N", null, typeid, keyword, orderby);
        List commendlist = videoListManager.getTopVideoByVideoType(typeid, "iscommend Desc", 0, 3);
        /*if(commendlist.size()==0)
				commendlist = videoListManager.getTopVideoByVideoType(null, "iscommend Desc", 0, 3);*/
        request.setAttribute("PARA", map);
        request.setAttribute("PAGER", pager);
        request.setAttribute("VIDEO_LIST", list);
        request.setAttribute("COMMEND_VIDEO_LIST", commendlist);
        return mapping.findForward("search");
    } catch (Exception e) {
        e.printStackTrace();
        request.setAttribute("FAIL_MESSAGE", "ϵͳ�������Ժ����ԡ�");
        return mapping.findForward("fail");
    }
}
