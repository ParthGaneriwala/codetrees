private void crearKprs(ID idEmpresa, Date fecha) throws Exception {
    try {
        List<Rendimiento_Agentes__c> rendimientos = new ArrayList<Rendimiento_Agentes__c>();
        List<Agente__c> agentes = new ArrayList<Agente__c>();
        String sql = "Select " + "a.Id, " + "(Select Codigo_Resultado__c From Gestiones__r Where IsMarcadorPredictivo__c = false  and Hora_Llamada__c >= " + UtilBasic.obtenerFechaSF(fecha) + " and Hora_Llamada__c<" + UtilBasic.obtenerFechaSF(Util.obtenerSiguienteDiaCal(fecha)) + " and Codigo_Resultado__c  IN ('" + Constantes.LLAMADA_PROMESA + "','" + Constantes.LLAMADA_PROMESA_POSTERGACION + "','" + Constantes.LLAMADA_PROMESA_PAGO_CUMPLIDA + "','" + Constantes.LLAMADA_PROMESA_CUMPLIDA_SUPERVISOR + "'))" + "From Agente__c a " + "Where Empresa_del_grupo__c = '" + idEmpresa + "'  and a.IsActive__c = true and a.Agente__r.IsActive = true";
        List<SObject> objects = this.getObjectsSalesforce(sql);
        if (objects != null) {
            for (int i = 0; i < objects.size(); i++) {
                agentes.add((Agente__c) objects.get(i));
            }
        }
        if (agentes != null && agentes.size() > 0) {
            rendimientos = new ArrayList<Rendimiento_Agentes__c>();
            for (Agente__c agente : agentes) {
                int numPromesasRealizadas = 0;
                int numPromesasCumplidas = 0;
                if (agente.getGestiones__r() != null && agente.getGestiones__r().getSize() > 0) {
                    for (int j = 0; j < agente.getGestiones__r().getRecords().length; j++) {
                        Llamada__c llamada = (Llamada__c) agente.getGestiones__r().getRecords()[j];
                        if (llamada.getCodigo_Resultado__c().equals(Constantes.LLAMADA_PROMESA) || llamada.getCodigo_Resultado__c().equals(Constantes.LLAMADA_PROMESA_POSTERGACION)) {
                            numPromesasRealizadas++;
                        } else {
                            numPromesasCumplidas++;
                        }
                    }
                }
                // Se crea el objeto Rendimiento de Agentes
                Rendimiento_Agentes__c rendimientoAgente = new Rendimiento_Agentes__c();
                rendimientoAgente.setAgente__c(agente.getId());
                rendimientoAgente.setFecha_Rendimiento__c(fecha);
                rendimientoAgente.setPromesas_Cumplidas__c(numPromesasCumplidas);
                rendimientoAgente.setPromesas_Realizadas__c(numPromesasRealizadas);
                rendimientoAgente.setEmpresa_del_grupo__c(idEmpresa);
                rendimientos.add(rendimientoAgente);
            // el dueï¿½o tiene que ser el agente
            }
            this.createRegistros(rendimientos);
        }
    } catch (Exception e) {
        logger.error(e);
        throw e;
    }
}
