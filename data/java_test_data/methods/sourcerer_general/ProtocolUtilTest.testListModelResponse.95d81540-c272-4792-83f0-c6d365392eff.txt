@Test
public void testListModelResponse() {
    Set<Long> yes = new HashSet<Long>();
    yes.addAll(Arrays.asList(new Long[] { 1L, 3L, 5L, 7L, 9L }));
    Set<Long> no = new HashSet<Long>();
    no.addAll(Arrays.asList(new Long[] { 2L, 4L, 6L, 8L, 10L }));
    VotableString n1 = new VotableString();
    n1.setVal("eclipse");
    n1.setV1(yes);
    n1.setV0(no);
    VotableString n2 = new VotableString();
    n2.setVal("jbuilder");
    n2.setV0(yes);
    n2.setV1(no);
    List<VotableString> names = Arrays.asList(new VotableString[] { n1, n2 });
    VotableString d = new VotableString();
    d.setVal("----------------------------------------------");
    d.setV1(yes);
    d.setV0(no);
    List<VotableString> des = Arrays.asList(new VotableString[] { d });
    Set<Long> users = new HashSet<Long>();
    users.addAll(yes);
    users.addAll(no);
    Model2 m2 = new Model2();
    m2.setId(1L);
    m2.setNames(names);
    m2.setDscs(des);
    m2.setUsers(users);
    ListModelResponse lmr = new ListModelResponse();
    lmr.setModels(new ArrayList<Model2>());
    lmr.getModels().add(m2);
    lmr.setName(Resources.RSP_SUCCESS);
    lmr.setRequesterId(null);
    lmr.setRequestId(3L);
    lmr.setRequestName(Resources.REQ_LIST_MODEL);
    try {
        logger.info(ProtocolUtil.ResponseToJson(lmr));
    } catch (Exception e) {
        logger.info(e);
        assertTrue(false);
    }
}
