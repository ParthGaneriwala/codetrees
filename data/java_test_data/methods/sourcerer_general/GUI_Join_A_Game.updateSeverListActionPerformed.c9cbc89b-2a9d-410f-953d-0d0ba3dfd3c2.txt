private void updateSeverListActionPerformed(java.awt.event.ActionEvent evt) {
    URL location = null;
    try {
        location = new URL("http://hackergirlsliketoparty.com/connect/printservers.php");
    } catch (MalformedURLException e) {
        e.printStackTrace();
        return;
    }
    HttpURLConnection list = null;
    try {
        list = (HttpURLConnection) location.openConnection();
        list.setRequestMethod("GET");
        list.setDoInput(true);
        list.setDoOutput(false);
        list.setRequestMethod("GET");
        int resp = list.getResponseCode();
        if (resp != 200)
            throw new IOException("non-successful response recieved: " + resp);
        BufferedReader content = new BufferedReader(new InputStreamReader(list.getInputStream()));
        String line;
        Pattern matchIp = Pattern.compile("(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})\\s(.*)\\s(\\d{1,4})");
        while ((line = content.readLine()) != null) {
            System.err.println("got server line: " + line);
            Matcher match = matchIp.matcher(line);
            if (!match.find(0))
                continue;
            String ip = match.group(1);
            String motd = match.group(2);
            String port = match.group(3);
            System.err.println("ip is " + ip + " " + motd + " " + port);
            if (ip == null || port == null || motd == null)
                continue;
            serverIp.addElement(new ServerListEntry(ip, motd, port));
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Could not connect to master server.", "connection error", JOptionPane.DEFAULT_OPTION);
    } finally {
        list.disconnect();
    }
}
