void setRegex(String filePattern) throws IOException {
    int len;
    int setOpen;
    int curlyOpen;
    boolean setRange;
    StringBuilder fileRegex = new StringBuilder();
    // Validate the pattern
    len = filePattern.length();
    if (len == 0)
        return;
    setOpen = 0;
    setRange = false;
    curlyOpen = 0;
    for (int i = 0; i < len; i++) {
        char pCh;
        // Examine a single pattern character
        pCh = filePattern.charAt(i);
        if (pCh == PAT_ESCAPE) {
            fileRegex.append(pCh);
            i++;
            if (i >= len)
                error("An escaped character does not present", filePattern, i);
            pCh = filePattern.charAt(i);
        } else if (isJavaRegexSpecialChar(pCh)) {
            fileRegex.append(PAT_ESCAPE);
        } else if (pCh == '*') {
            fileRegex.append(PAT_ANY);
            hasPattern = true;
        } else if (pCh == '?') {
            pCh = PAT_ANY;
            hasPattern = true;
        } else if (pCh == '{') {
            fileRegex.append('(');
            pCh = '(';
            curlyOpen++;
            hasPattern = true;
        } else if (pCh == ',' && curlyOpen > 0) {
            fileRegex.append(")|");
            pCh = '(';
        } else if (pCh == '}' && curlyOpen > 0) {
            // End of a group
            curlyOpen--;
            fileRegex.append(")");
            pCh = ')';
        } else if (pCh == '[' && setOpen == 0) {
            setOpen++;
            hasPattern = true;
        } else if (pCh == '^' && setOpen > 0) {
        } else if (pCh == '-' && setOpen > 0) {
            // Character set range
            setRange = true;
        } else if (pCh == PAT_SET_CLOSE && setRange) {
            // Incomplete character set range
            error("Incomplete character set range", filePattern, i);
        } else if (pCh == PAT_SET_CLOSE && setOpen > 0) {
            // End of a character set
            if (setOpen < 2)
                error("Unexpected end of set", filePattern, i);
            setOpen = 0;
        } else if (setOpen > 0) {
            // Normal character, or the end of a character set range
            setOpen++;
            setRange = false;
        }
        fileRegex.append(pCh);
    }
    // Check for a well-formed pattern
    if (setOpen > 0 || setRange || curlyOpen > 0) {
        // Incomplete character set or character range
        error("Expecting set closure character or end of range, or }", filePattern, len);
    }
    regex = Pattern.compile(fileRegex.toString());
}
