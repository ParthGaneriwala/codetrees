private void setStatsView() {
    setContentView(R.layout.stats);
    TableLayout statTable = (TableLayout) findViewById(R.id.stats_tableLayout);
    Button statsDoneButton = (Button) findViewById(R.id.stats_doneButton);
    statsDoneButton.setOnClickListener(onClickListener);
    Button clearStatsButton = (Button) findViewById(R.id.stats_clearStats);
    clearStatsButton.setOnClickListener(onClickListener);
    Button cardStatsButton = (Button) findViewById(R.id.hintstats_cardStats);
    cardStatsButton.setOnClickListener(onClickListener);
    // EditText stored = (EditText) findViewById(R.id.login_input);
    // stored.getText();
    // create table header
    String[][] headers = new String[4][2];
    headers[0] = new String[] { "Deck", "Number", "Number", "Date" };
    headers[1] = new String[] { "Name", "Right", "Wrong", "Played" };
    for (String[] curHeaderRow : headers) {
        TableRow headerRow = new TableRow(this);
        headerRow.setLayoutParams(new TableLayout.LayoutParams());
        for (int i = 0; i < curHeaderRow.length; i++) {
            TextView text = new TextView(this);
            text.setText(curHeaderRow[i]);
            TableRow.LayoutParams lp = new TableRow.LayoutParams(i);
            lp.setMargins(PADDING_LEFT, 0, PADDING_RIGHT, 0);
            text.setLayoutParams(lp);
            headerRow.addView(text);
        }
        statTable.addView(headerRow);
    }
    // now fill the table with content
    DBHelper db = new DBHelper(this);
    List<GameStat> gameStatList = db.getAllGameStats();
    for (GameStat gs : gameStatList) {
        List<CardStat> cardStatList = gs.getCardStatList();
        if (cardStatList.size() > 0) {
            // create a row for each game stat
            TableRow currentRow = new TableRow(this);
            currentRow.setLayoutParams(new TableLayout.LayoutParams());
            // add the name of the Deck
            {
                String deckName = cardStatList.get(0).getDeckName();
                TextView deckNameTextView = new TextView(this);
                deckNameTextView.setText(deckName);
                TableRow.LayoutParams lp = new TableRow.LayoutParams(0);
                lp.setMargins(PADDING_LEFT, 0, PADDING_RIGHT, 0);
                deckNameTextView.setLayoutParams(lp);
                currentRow.addView(deckNameTextView);
            }
            // add the number of right answers
            {
                TextView numRightTextView = new TextView(this);
                numRightTextView.setText(Integer.toString(gs.getNumCorrect()));
                TableRow.LayoutParams numRightLayoutParms = new TableRow.LayoutParams(0);
                numRightLayoutParms.setMargins(PADDING_LEFT, 0, PADDING_RIGHT, 0);
                numRightTextView.setLayoutParams(numRightLayoutParms);
                currentRow.addView(numRightTextView);
            }
            // add the number of wrong answers
            {
                TextView numWrongTextView = new TextView(this);
                numWrongTextView.setText(Integer.toString(gs.getNumWrong()));
                TableRow.LayoutParams numWrongLayoutParms = new TableRow.LayoutParams(0);
                numWrongLayoutParms.setMargins(PADDING_LEFT, 0, PADDING_RIGHT, 0);
                numWrongTextView.setLayoutParams(numWrongLayoutParms);
                currentRow.addView(numWrongTextView);
            }
            // fill in the date played
            {
                // CharSequence datePlayed = DateFormat.format("MM/dd/yy", new Date(gs.getCompletionTimestamp()));
                CharSequence datePlayed = DateFormat.getDateInstance().format(new Date(gs.getCompletionTimestamp()));
                TextView datePlayedTextView = new TextView(this);
                datePlayedTextView.setText(datePlayed);
                TableRow.LayoutParams datePlayedLayoutParams = new TableRow.LayoutParams(3);
                datePlayedLayoutParams.setMargins(PADDING_LEFT, 0, PADDING_RIGHT, 0);
                datePlayedTextView.setLayoutParams(datePlayedLayoutParams);
                currentRow.addView(datePlayedTextView);
            }
            // add the row to the table
            statTable.addView(currentRow);
        } else {
            Log.d(TAG, "CardStatList was empty for GameStat: " + gs.getId());
        }
    }
}
