@Test
public void testEditFromModelWithSorting() {
    MasterDetailTablePanel panel = new MasterDetailTablePanel();
    CobeanTestUtil.setComponentNamesFromPropertyNames(panel);
    ShowcaseTestFrame frame = new ShowcaseTestFrame(panel);
    FrameFixture frameFix = new FrameFixture(frame);
    try {
        frameFix.show();
        MasterDetailTableShowcase sc = new MasterDetailTableShowcase();
        sc.setService(ExamplesUtil.createTestService());
        sc.init(panel);
        final JTableFixture tableFix = frameFix.table("table");
        final JTextComponentFixture titleTextBox = frameFix.textBox("titleTextField");
        final JTextComponentFixture yearTextBox = frameFix.textBox("yearTextField");
        final JTextComponentFixture authorTextBox = frameFix.textBox("authorTextField");
        // select by title
        {
            tableFix.tableHeader().clickColumn(0);
            pause(200);
        }
        // Select a book
        {
            sc.getModel().setSelectedBook(sc.getModel().getBooks().get(5));
            pause(200);
            titleTextBox.requireText("Miguel Street");
            yearTextBox.requireText("1959");
            authorTextBox.requireText("V.S. Naipaul");
            assertEquals("Miguel Street", sc.getModel().getSelectedBook().getTitle());
            assertEquals(1959, sc.getModel().getSelectedBook().getYear().intValue());
            assertEquals("V.S. Naipaul", sc.getModel().getSelectedBook().getAuthor().getName());
        }
        // Select another book
        {
            sc.getModel().setSelectedBook(sc.getModel().getBooks().get(10));
            pause(200);
            titleTextBox.requireText("Such a Long Journey");
            yearTextBox.requireText("1991");
            authorTextBox.requireText("Rohinton Mistry");
            assertEquals("Such a Long Journey", sc.getModel().getSelectedBook().getTitle());
            assertEquals(1991, sc.getModel().getSelectedBook().getYear().intValue());
            assertEquals("Rohinton Mistry", sc.getModel().getSelectedBook().getAuthor().getName());
        }
        // Edit the title of the selected book
        {
            sc.getModel().getSelectedBook().setTitle("Another nice title");
            pause(200);
            titleTextBox.requireText("Another nice title");
            yearTextBox.requireText("1991");
            authorTextBox.requireText("Rohinton Mistry");
            assertEquals("Another nice title", sc.getModel().getSelectedBook().getTitle());
            assertEquals(1991, sc.getModel().getSelectedBook().getYear().intValue());
            assertEquals("Rohinton Mistry", sc.getModel().getSelectedBook().getAuthor().getName());
        }
        // Edit the author of the selected book
        {
            sc.getModel().getSelectedBook().getAuthor().setName("Another nice name");
            pause(200);
            titleTextBox.requireText("Another nice title");
            yearTextBox.requireText("1991");
            authorTextBox.requireText("Another nice name");
            assertEquals("Another nice title", sc.getModel().getSelectedBook().getTitle());
            assertEquals(1991, sc.getModel().getSelectedBook().getYear().intValue());
            assertEquals("Another nice name", sc.getModel().getSelectedBook().getAuthor().getName());
        }
        // reselect the first book
        {
            sc.getModel().setSelectedBook(sc.getModel().getBooks().get(5));
            pause(200);
            titleTextBox.requireText("Miguel Street");
            yearTextBox.requireText("1959");
            authorTextBox.requireText("V.S. Naipaul");
            assertEquals("Miguel Street", sc.getModel().getSelectedBook().getTitle());
            assertEquals(1959, sc.getModel().getSelectedBook().getYear().intValue());
            assertEquals("V.S. Naipaul", sc.getModel().getSelectedBook().getAuthor().getName());
        }
        // reselect the edited book
        {
            sc.getModel().setSelectedBook(sc.getModel().getBooks().get(10));
            pause(200);
            titleTextBox.requireText("Another nice title");
            yearTextBox.requireText("1991");
            authorTextBox.requireText("Another nice name");
            assertEquals("Another nice title", sc.getModel().getSelectedBook().getTitle());
            assertEquals(1991, sc.getModel().getSelectedBook().getYear().intValue());
            assertEquals("Another nice name", sc.getModel().getSelectedBook().getAuthor().getName());
        }
    } finally {
        frameFix.cleanUp();
    }
}
