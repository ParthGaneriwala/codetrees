public void show(java.io.PrintStream out) {
    int ndCount = getNodeCount();
    Vector allNodes = nodes();
    for (int i = 0; i < ndCount; i++) {
        Node n = (Node) allNodes.elementAt(i);
        out.print("" + i);
        out.print(": ");
        CfgProperties useDef = (CfgProperties) nodesVsUseDefs.get(n);
        Vector defList = useDef.getDefList();
        if (defList != null) {
            int numDefs = defList.size();
            for (int j = 0; j < numDefs; j++) {
                Temp dfTemp = (Temp) defList.elementAt(j);
                out.print(dfTemp.toString());
                out.print(" ");
            }
        } else
            out.print("None ");
        out.print(useDef.isMove() ? "<= " : "<- ");
        Vector useList = useDef.getUseList();
        if (useList != null) {
            int numUses = useList.size();
            for (int k = 0; k < numUses; k++) {
                Temp usTemp = (Temp) useList.elementAt(k);
                out.print(usTemp.toString());
                out.print(" ");
            }
        } else
            out.print("None ");
        out.print("; goto ");
        Vector succs = n.getSuccessors();
        if (succs != null) {
            int numSuccs = succs.size();
            for (int j = 0; j < numSuccs; j++) {
                Node succ = (Node) succs.elementAt(j);
                out.print(succ.getId());
                out.print(" ");
            }
        }
        out.println();
    }
}
