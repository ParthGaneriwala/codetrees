@Override
public SimboloGramatical derivar() throws Exception {
    TokenReader tokenReader = TokenReader.getInstance();
    Token token = null;
    NaoTerminal naoTerminal = (NaoTerminal) this.simbolo;
    token = tokenReader.seeCurrent();
    naoTerminal.add(new TIPO_RETORNO().derivar());
    token = tokenReader.seeCurrent();
    naoTerminal.add(new NOME().derivar());
    token = tokenReader.seeCurrent();
    if (token.getTokenClass().equals(TokenClass.DELIMITADOR) && token.getAtributo().equals("(")) {
        tokenReader.consome();
        naoTerminal.add(new Terminal(token));
    } else {
        erro(this.getClass().getSimpleName() + " mal formada - '(' n達o encontrado");
        return this.simbolo;
    }
    token = tokenReader.seeCurrent();
    if ((token.getTokenClass().equals(TokenClass.DELIMITADOR) && token.getAtributo().equals(")"))) {
        tokenReader.consome();
        naoTerminal.add(new Terminal(token));
    } else {
        naoTerminal.add(new DEC_PARAMETROS().derivar());
        token = tokenReader.seeCurrent();
        if ((token.getTokenClass().equals(TokenClass.DELIMITADOR) && token.getAtributo().equals(")"))) {
            tokenReader.consome();
            naoTerminal.add(new Terminal(token));
        } else {
            erro(this.getClass().getSimpleName() + " mal formada - ')' n達o encontrado");
            return this.simbolo;
        }
    }
    token = tokenReader.seeCurrent();
    if ((token.getTokenClass().equals(TokenClass.DELIMITADOR) && token.getAtributo().equals("{"))) {
        tokenReader.consome();
        naoTerminal.add(new Terminal(token));
    } else {
        erro(this.getClass().getSimpleName() + " mal formada - '{' n達o encontrado");
        return simbolo;
    }
    token = tokenReader.seeCurrent();
    naoTerminal.add(new EXP_METODO().derivar());
    token = tokenReader.seeCurrent();
    if ((token.getTokenClass().equals(TokenClass.DELIMITADOR) && token.getAtributo().equals("}"))) {
        tokenReader.consome();
        naoTerminal.add(new Terminal(token));
    } else {
        erro(this.getClass().getSimpleName() + " mal formada - '}' n達o encontrado");
        return this.simbolo;
    }
    return naoTerminal;
}
