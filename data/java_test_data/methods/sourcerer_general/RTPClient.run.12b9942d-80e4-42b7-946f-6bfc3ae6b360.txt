public void run() {
    connect();
    // 10K buffer
    byte[] buf = new byte[10000];
    try {
        fos = new FileOutputStream("rtp2.mpg");
        bos = new BufferedOutputStream(fos);
    } catch (Exception e) {
        e.printStackTrace();
    }
    if (bDiscard)
        waitHeader = true;
    while (true) {
        try {
            int len;
            DatagramPacket recv;
            do {
                recv = new DatagramPacket(buf, buf.length);
                socket.receive(recv);
                len = recv.getLength();
            } while (len >= recv.getData().length);
            nPacketReceived++;
            // System.err.println(bos);
            bos.write(recv.getData());
            // Encapsula o Datagram num Message
            Message m = new Message(msg.getReceiver(), msg.getSender(), "Datagram");
            String e = new String(recv.getData());
            Object[] param = { e, recv.getLength() };
            // String tem = new String( recv.getData());
            // Object[] param = {tem, new Integer(recv.getLength()) };
            m.addInterceptor("Proxy", null);
            m.setType(Constants.RESPONSE);
            m.setParameter(param);
            m.setIndex(bytes2int(e.getBytes(), 2, 2));
            // System.err.println("Index: " + m.getIndex() + " OffSet: "
            // + recv.getData());
            // Coloca o dado na porta
            terS(m);
        } catch (IOException e) {
            System.err.println("Erro");
            System.out.println("Socket: " + e.getMessage());
        }
    }
}
