private List<RelatorioAcessibilidadePro> arrumarRelatorios() throws Exception {
    List<RelatorioAcessibilidadePro> relatorios = getEntityManager().createQuery("Select r From RelatorioAcessibilidadePro r left join fetch r.listErroP2 left join r.listErroP3").getResultList();
    // *
    int adicionado = 0;
    int totP2 = 0;
    int p3emP2 = 0;
    for (RelatorioAcessibilidadePro relatorio : relatorios) {
        for (ErrosRegraPro erroRegraP2 : relatorio.getListErroP2()) {
            boolean tentarNovamente = true;
            while (tentarNovamente) {
                tentarNovamente = false;
                for (ErroOuAvisoPro erro : erroRegraP2.getListOcorrencia()) {
                    totP2++;
                    if (erro.getCodTextoRegra().startsWith("3.")) {
                        p3emP2++;
                        ErroOuAvisoPro erroNovo = erro.asNew();
                        // procurar regra igual
                        boolean achou = false;
                        for (ErrosRegraPro erroRegra3 : relatorio.getListErroP3()) {
                            if (erroRegra3.getCodigo().equals(erro.getCodTextoRegra())) {
                                achou = true;
                                erroRegra3.getListOcorrencia().add(erroNovo);
                                adicionado++;
                                break;
                            }
                        }
                        if (!achou) {
                            // criar um novo
                            ErrosRegraPro erroR = new ErrosRegraPro();
                            erroR.setCodigo(erro.getCodTextoRegra());
                            erroR.setTexto(erroRegraP2.getTexto());
                            ArrayList<ErroOuAvisoPro> listEA = new ArrayList<ErroOuAvisoPro>();
                            listEA.add(erroNovo);
                            erroR.setListOcorrencia(listEA);
                            relatorio.getListErroP3().add(erroR);
                            adicionado++;
                        }
                        erroRegraP2.getListOcorrencia().remove(erro);
                        getEntityManager().remove(erro);
                        tentarNovamente = true;
                        break;
                    }
                }
            // fim for
            }
        }
    }
    System.out.println("Adicionados " + adicionado);
    System.out.println("p3emP2 " + p3emP2);
    System.out.println("TotP2 " + totP2);
    int totRemovido = 0;
    for (RelatorioAcessibilidadePro relatorio : relatorios) {
        for (ErrosRegraPro erroRegra : relatorio.getListErroP2()) {
            boolean achou = true;
            while (achou) {
                achou = false;
                for (ErroOuAvisoPro erro : erroRegra.getListOcorrencia()) {
                    if (erro.getCodTextoRegra().startsWith("3.")) {
                        erroRegra.getListOcorrencia().remove(erro);
                        achou = true;
                        totRemovido++;
                        break;
                    }
                }
            }
        }
        getEntityManager().merge(relatorio);
    }
    System.out.println("totRemovido " + totRemovido);
    // */
    return relatorios;
}
