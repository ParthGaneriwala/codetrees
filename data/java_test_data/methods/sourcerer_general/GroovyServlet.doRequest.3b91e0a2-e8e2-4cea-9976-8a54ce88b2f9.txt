@Override
public void doRequest(SipServletRequest request) throws IOException {
    // Set up the script context
    SipServletBinding binding = new SipServletRequestBinding(request, _servletContext);
    // Run the script
    try {
        runScript(binding, _requestScript);
    } catch (RuntimeException runtimeException) {
        StringBuffer error = new StringBuffer("GroovyServlet Error: ");
        error.append(" script: '");
        error.append(_requestScript);
        error.append("': ");
        Throwable e = runtimeException.getCause();
        /*
			 * Null cause?!
			 */
        if (e == null) {
            error.append(" Script processing failed.");
            error.append(runtimeException.getMessage());
            if (runtimeException.getStackTrace().length > 0)
                error.append(runtimeException.getStackTrace()[0].toString());
            _servletContext.log(error.toString());
            System.err.println(error.toString());
            runtimeException.printStackTrace(System.err);
            throw runtimeException;
        }
        /*
			 * Resource not found.
			 */
        if (e instanceof ResourceException) {
            error.append(" Script not found, sending 404.");
            _servletContext.log(error.toString());
            System.err.println(error.toString());
            request.createResponse(SipServletResponse.SC_NOT_FOUND);
            return;
        }
        /*
			 * Other internal error. Perhaps syntax?!
			 */
        _servletContext.log("An error occurred processing the request", runtimeException);
        error.append(e.getMessage());
        if (e.getStackTrace().length > 0)
            error.append(e.getStackTrace()[0].toString());
        _servletContext.log(e.toString());
        System.err.println(e.toString());
        runtimeException.printStackTrace(System.err);
        throw runtimeException;
    }
}
