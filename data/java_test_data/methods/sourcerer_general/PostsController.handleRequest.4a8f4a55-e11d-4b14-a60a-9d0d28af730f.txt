public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    Session session = openSession();
    try {
        HttpSession httpSession = request.getSession();
        UserPreferences prefs = (UserPreferences) httpSession.getAttribute("userPreferences");
        if (prefs == null) {
            return UNAUTHENTICATED_ERROR;
        }
        int page = 1;
        if (request.getParameter("page") != null) {
            page = Integer.parseInt(request.getParameter("page"));
        }
        // System.out.println("ZZZ params: " + request.getParameterMap());
        int rp = Integer.parseInt(request.getParameter("rp"));
        String name = "query";
        String query = request.getParameter(name);
        Preference p = prefs.getPreference(name);
        if (query == null || query.trim().length() == 0) {
            removePreference(prefs, name);
        } else {
            setPreference(prefs, name, query);
        }
        List<Post> posts = getCache().get(prefs);
        if (posts == null) {
            posts = getPosts(session, prefs);
            if (posts != null && posts.size() > 0) {
                getCache().put(prefs, posts);
            }
        }
        int startIndex = (page - 1) * rp;
        int endIndex = Math.min(startIndex + rp, posts.size());
        Map<String, Object> model = new HashMap<String, Object>();
        model.put("posts", buildPostModels(prefs, posts.subList(startIndex, endIndex)));
        model.put("page", page);
        model.put("total", posts.size());
        return new ModelAndView("posts", "model", model);
    } catch (Exception e) {
        e.printStackTrace();
        getLog().error(e);
    } finally {
        closeSession();
    }
    return ERROR;
}
