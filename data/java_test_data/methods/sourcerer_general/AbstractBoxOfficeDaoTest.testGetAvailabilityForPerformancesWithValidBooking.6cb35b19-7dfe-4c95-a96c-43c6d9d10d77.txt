public void testGetAvailabilityForPerformancesWithValidBooking() throws Exception {
    Calendar cal = Calendar.getInstance();
    Date now = cal.getTime();
    cal.add(Calendar.MINUTE, 5);
    Date fiveMinutesFromNow = cal.getTime();
    cal.add(Calendar.DAY_OF_YEAR, 7);
    Date nextWeek = cal.getTime();
    // populating the database.
    dbHelper.insertShow(1, "show", -1, -1);
    dbHelper.insertPriceStructure(1, "ps");
    dbHelper.insertSeatClass(1, "code", "desription");
    dbHelper.insertPerformance(1, nextWeek, 1, 1);
    dbHelper.insertPerformance(2, nextWeek, 1, 1);
    dbHelper.insertPriceBand(1, new BigDecimal(1.0), 1, 1);
    // a new booking in the system.
    dbHelper.insertBooking(1, 1, now, fiveMinutesFromNow, new BigDecimal(1.0), -1);
    dbHelper.insertSeat(1, "seat1", -1, -1);
    dbHelper.insertSeat(2, "seat2", 1, -1);
    dbHelper.setRightSeatForSeat(1, 2);
    dbHelper.insertSeat(3, "seat3", 2, -1);
    dbHelper.setRightSeatForSeat(2, 3);
    // now this seat status indicates that the seat is booked with
    // the new booking in the system. the reserved time of the new booking is still valid
    // thus the seat should not be available.
    dbHelper.insertSeatStatus(1, 1, 1, 1);
    dbHelper.insertSeatStatus(1, 2, -1, 1);
    dbHelper.insertSeatStatus(1, 3, -1, 1);
    dbHelper.insertSeatStatus(2, 1, -1, 1);
    dbHelper.insertSeatStatus(2, 2, -1, 1);
    // creating the domain model.
    Show show = new Show("show");
    show.setId(1);
    // executing the tested method.
    PerformanceWithAvailability[] performances = dao.getAvailabilityForPerformances(show);
    // assertions
    assertEquals("number of performances", 2, performances.length);
    for (int i = 0; i < performances.length; i++) {
        PerformanceWithAvailability performance = performances[i];
        assertEquals("number of available seats", 2, performance.getAvailableSeatCount());
        List priceBands = performance.getPriceBandWithAvailability();
        assertEquals("number of price bands with availability", 1, priceBands.size());
    }
}
