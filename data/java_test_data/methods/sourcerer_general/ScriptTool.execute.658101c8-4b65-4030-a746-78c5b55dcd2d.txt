// end main
public void execute(String[] arg) {
    for (int i = 0; i < arg.length; i++) {
        String p = arg[i];
        if (p.charAt(0) == '-') {
            pProperties.put(p.substring(1), arg[i + 1]);
            i++;
        }
    }
    ln = 0;
    EOF = false;
    BufferedReader in = null;
    Properties p = pProperties;
    String driver = p.getProperty("driver", "org.hsqldb.jdbcDriver");
    String url = p.getProperty("url", "jdbc:hsqldb:");
    String database = p.getProperty("database", "test");
    String user = p.getProperty("user", "sa");
    String password = p.getProperty("password", "");
    String script = p.getProperty("script", "st.sql");
    boolean log = p.getProperty("log", "false").equalsIgnoreCase("true");
    BATCH = p.getProperty("batch", "true").equalsIgnoreCase("true");
    try {
        if (log) {
            trace("driver   = " + driver);
            trace("url      = " + url);
            trace("database = " + database);
            trace("user     = " + user);
            trace("password = " + password);
            trace("script   = " + script);
            trace("log      = " + log);
            trace("batch    = " + BATCH);
            JavaSystem.setLogToSystem(true);
        }
        // As described in the JDBC FAQ:
        // http://java.sun.com/products/jdbc/jdbc-frequent.html;
        // Why doesn't calling class.forName() load my JDBC driver?
        // There is a bug in the JDK 1.1.x that can cause Class.forName() to fail.
        // new org.hsqldb.jdbcDriver();
        Class.forName(driver).newInstance();
        cConn = DriverManager.getConnection(url + database, user, password);
        in = new BufferedReader(new FileReader(script));
    } catch (Exception e) {
        System.out.println("ScriptTool.init error: " + e.getMessage());
        e.printStackTrace();
    }
    try {
        sStatement = cConn.createStatement();
        String sql;
        while ((sql = fileToString(in)) != null) {
            if (sql.length() == 1) {
                continue;
            }
            if (log) {
                trace("SQL (" + ln + ") : " + sql.substring(0, sql.length() - 2));
            }
            sStatement.execute(sql);
            ResultSet results = sStatement.getResultSet();
            int updateCount = sStatement.getUpdateCount();
            if (updateCount == -1) {
                trace(toString(results));
            } else {
                trace("update count " + updateCount);
            }
        }
    } catch (SQLException e) {
        System.out.println("SQL Error at line " + ln + ": " + e);
    }
    try {
        cConn.close();
        in.close();
    } catch (Exception ce) {
    }
}
