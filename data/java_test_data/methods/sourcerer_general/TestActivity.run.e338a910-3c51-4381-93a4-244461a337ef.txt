public void run() {
    Message msg = handler.obtainMessage();
    Bundle bundle = new Bundle();
    int result = Utils.rootCMD("iptables -L");
    bundle.putString("TESTNAME", getString(R.string.TEST_ROOT));
    if (result == 1 || result == -1) {
        // 没有root权限
        bundle.putString("ERRMSG", getString(R.string.ERR_NO_ROOT));
        bundle.putInt("PROGRESS", 100);
        msg.setData(bundle);
        handler.sendMessage(msg);
        return;
    }
    bundle.putInt("PROGRESS", 10);
    bundle.putString("MESSAGE", getString(R.string.TEST_IPTABLES));
    msg.setData(bundle);
    handler.sendMessage(msg);
    testSleep(1000);
    // 测试iptables是否存在
    msg = handler.obtainMessage();
    result = Utils.rootCMD(getString(R.string.iptables_test_str));
    bundle.putString("TESTNAME", getString(R.string.TEST_IPTABLES));
    if (result == 127 || result == 126) {
        // 没有iptables， 或权限不对
        bundle.putString("ERRMSG", getString(R.string.ERR_NO_IPTABLES));
        bundle.putInt("PROGRESS", 100);
        msg.setData(bundle);
        handler.sendMessage(msg);
        return;
    }
    bundle.putInt("PROGRESS", 20);
    bundle.putString("MESSAGE", getString(R.string.TEST_CMWAP));
    msg.setData(bundle);
    handler.sendMessage(msg);
    testSleep(1000);
    // 测试连接方式是否为cmwap
    msg = handler.obtainMessage();
    bundle.putString("TESTNAME", getString(R.string.TEST_CMWAP));
    if (!Utils.isCmwap(context)) {
        bundle.putString("ERRMSG", getString(R.string.ERR_NOT_CMWAP));
        bundle.putInt("PROGRESS", 100);
    }
    bundle.putInt("PROGRESS", 40);
    bundle.putString("MESSAGE", getString(R.string.TEST_HTTPS));
    msg.setData(bundle);
    handler.sendMessage(msg);
    testSleep(1000);
    // 测试https
    msg = handler.obtainMessage();
    bundle.putString("TESTNAME", getString(R.string.TEST_HTTPS));
    WapChannel channel = new WapChannel(null, proxyHost, proxyPort);
    testSleep(5000);
    if (!channel.isConnected()) {
        bundle.putString("ERRMSG", getString(R.string.ERR_UNSUPPORT_HTTPS));
    }
    channel.destory();
    bundle.putInt("PROGRESS", 60);
    bundle.putString("MESSAGE", getString(R.string.TEST_OTHER));
    msg.setData(bundle);
    handler.sendMessage(msg);
    // 测试DNS
    boolean httpDnsEnabled = Config.getBooleanPref(context, "HTTPDNSENABLED", true);
    // TODO 检测http DNS可用性
    if (!httpDnsEnabled) {
        DNSServer = Config.getStringPref(context, "DNSADD", "");
        msg = handler.obtainMessage();
        bundle.putString("TESTNAME", getString(R.string.TEST_DNS));
        channel = new WapChannel(null, DNSServer + ":53", proxyHost, proxyPort);
        testSleep(5000);
        if (!channel.isConnected()) {
            bundle.putString("ERRMSG", getString(R.string.ERR_UNSUPPORT_DNS));
        }
        channel.destory();
        bundle.putInt("PROGRESS", 80);
        bundle.putString("MESSAGE", getString(R.string.TEST_OTHER));
        msg.setData(bundle);
        handler.sendMessage(msg);
    }
    // 测试Gtalk
    msg = handler.obtainMessage();
    bundle.putString("TESTNAME", getString(R.string.TEST_OTHER));
    channel = new WapChannel(null, "mtalk.google.com:5228", proxyHost, proxyPort);
    testSleep(5000);
    if (!channel.isConnected()) {
        bundle.putString("ERRMSG", getString(R.string.ERR_UNSUPPORT_OTHERS));
    }
    channel.destory();
    bundle.putInt("PROGRESS", 100);
    msg.setData(bundle);
    handler.sendMessage(msg);
}
