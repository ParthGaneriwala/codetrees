public void computeCFCMPoints(String objClass, int numX, int numY) {
    LOG.info("computing cfcm for object class '" + objClass + "'");
    double bBoxWidth = boundingBox.getEnvelope().getCoordinates()[1].x - boundingBox.getEnvelope().getCoordinates()[0].x;
    double bBoxHeight = boundingBox.getEnvelope().getCoordinates()[2].y - boundingBox.getEnvelope().getCoordinates()[1].y;
    double deltaX = bBoxWidth / (numX - 1);
    double deltaY = bBoxHeight / (numY - 1);
    double x0 = boundingBox.getEnvelope().getCoordinates()[0].x;
    double y0 = boundingBox.getEnvelope().getCoordinates()[1].y;
    Point[][] points = new Point[numX][numY];
    List<Double> cfcm = new ArrayList<Double>(numX * numY);
    double x, y;
    this.cfcmPoints = new ArrayList<Feature>();
    double cfcmValue;
    for (int j = 0; j < numY; j++) {
        LOG.info("row " + j + " of " + numY);
        for (int i = 0; i < numX; i++) {
            x = x0 + i * deltaX;
            y = y0 + j * deltaY;
            Coordinate coordinate = new Coordinate(x, y);
            points[i][j] = new GeometryFactory().createPoint(coordinate);
            cfcmValue = getValue(objClass, x, y);
            if (cfcmValue != -1) {
                cfcm.add(cfcmValue);
            }
            double member0 = layer0.getMembership(objClass, x, y);
            double member1 = layer1.getMembership(objClass, x, y);
            cfcmPoints.add(new PointFeature(points[i][j], member0, member1, cfcmValue));
        // LOG.debug("cfcm = " + cfcmValue + " at (" +x+ "/" +y+ ")");
        }
    }
    this.cfcmValues = fillArray(cfcm);
}
