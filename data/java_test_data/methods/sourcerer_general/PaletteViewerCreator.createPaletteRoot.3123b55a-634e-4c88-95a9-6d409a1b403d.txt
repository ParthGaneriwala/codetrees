public static PaletteRoot createPaletteRoot() {
    PaletteRoot root = new PaletteRoot();
    PaletteGroup manipulateGroup = new PaletteGroup("manipulate objects");
    root.add(manipulateGroup);
    // ��Ӽ�ͷ��ѡ�񹤾�
    SelectionToolEntry selectionToolEntry = new SelectionToolEntry();
    manipulateGroup.add(selectionToolEntry);
    manipulateGroup.add(new MarqueeToolEntry());
    root.setDefaultEntry(selectionToolEntry);
    // ������,��������࣬���ԣ�����
    PaletteGroup instGroup = new PaletteGroup("Create Elements");
    // ���Class
    instGroup.add(new CreationToolEntry("Class", "Create a Class Figure", new NodeCreationFactory(BClass.class), null, null));
    instGroup.add(new CreationToolEntry("Interface", "Create a Interface Figure", new NodeCreationFactory(BInterface.class), null, null));
    // �������
    instGroup.add(new CreationToolEntry("Attribute", "Create a attribute Figure", new NodeCreationFactory(BAttribute.class), null, null));
    // ��ӷ���
    instGroup.add(new CreationToolEntry("Method", "Create a attribute Figure", new NodeCreationFactory(BMethod.class), null, null));
    // �������
    PaletteGroup relationshipGroup = new PaletteGroup("Create Relationship");
    relationshipGroup.add(new ConnectionCreationToolEntry("Extends Connection", "Create extends Connections", new SimpleFactory(ExtendsRelationship.class), null, null));
    relationshipGroup.add(new ConnectionCreationToolEntry("Implements Connection", "Create extends Connections", new SimpleFactory(ImplementsRelationship.class), null, null));
    // ��Ӳ�����
    PaletteGroup useCaseGroup = new PaletteGroup("Create use case");
    useCaseGroup.add(new CreationToolEntry("Actor", "Create an Actor Figure", new NodeCreationFactory(BActor.class), null, null));
    useCaseGroup.add(new CreationToolEntry("Use Case", "Create an Use Case Figure", new NodeCreationFactory(BUseCase.class), null, null));
    useCaseGroup.add(new ConnectionCreationToolEntry("Use Case Connection", "Create Use Case Connections", new SimpleFactory(UseCaseRelationship.class), null, null));
    root.add(instGroup);
    root.add(new PaletteSeparator());
    root.add(relationshipGroup);
    root.add(new PaletteSeparator());
    root.add(useCaseGroup);
    return root;
}
