protected void restoreOpenMessageActivityList(AeBusinessProcess aProcess, Element aProcessElement) throws AeBusinessProcessException {
    // $NON-NLS-1$
    String xpath = "./" + STATE_OPEN_MESSAGE_ACTIVITY;
    // $NON-NLS-1$
    List elements = selectNodes(aProcessElement, xpath, "Error restoring open message activity list");
    for (Iterator i = elements.iterator(); i.hasNext(); ) {
        Element element = (Element) i.next();
        String plinkLocation = getAttribute(element, STATE_PLINK_LOCATION);
        AePartnerLink partnerLink = null;
        if (AeUtil.isNullOrEmpty(plinkLocation)) {
            String partnerLinkName = getAttribute(element, STATE_PLINK);
            partnerLink = aProcess.findPartnerLink(partnerLinkName);
        } else {
            partnerLink = aProcess.findProcessPartnerLink(plinkLocation);
        }
        String operation = getAttribute(element, STATE_OPERATION);
        String messageExchangePath = null;
        String s = getAttribute(element, STATE_MESSAGE_EXCHANGE);
        if (AeUtil.notNullOrEmpty(s)) {
            messageExchangePath = s;
        }
        long replyId = getAttributeLong(element, STATE_REPLY_ID);
        AePartnerLinkOpImplKey plOpImplKey = new AePartnerLinkOpImplKey(partnerLink, operation);
        AeOpenMessageActivityInfo info = new AeOpenMessageActivityInfo(plOpImplKey, messageExchangePath, replyId);
        // create durable reply info. (if available)
        // $NON-NLS-1$
        xpath = "./" + STATE_DURABLE_REPLY;
        // $NON-NLS-1$
        Element durableReplyEle = (Element) selectOptionalNode(element, xpath, "Error restoring durableReply from openMessageActivity");
        if (durableReplyEle != null) {
            AeDurableReplyDeserializer des = new AeDurableReplyDeserializer();
            des.setDurableReplyInfoElement(durableReplyEle);
            IAeReplyReceiver replyReceiver = aProcess.getEngine().getTransmissionTracker().getDurableReplyFactory().createReplyReceiver(-1, des.getDurableReplyInfo());
            info.setDurableReplyReceiver(replyReceiver);
        }
        // add to process list
        aProcess.addOpenMessageActivityInfo(info);
    }
}
