protected ReservationFieldRequest getReservationRequestFromSession(HttpServletRequest request) {
    ReservationFieldRequest reservationFieldRequest = (ReservationFieldRequest) WebUtils.getSessionAttribute(request, "reservationFieldRequest");
    if (reservationFieldRequest == null) {
        reservationFieldRequest = new ReservationFieldRequest();
    }
    String regionId = request.getParameter("regionId");
    String clubId = request.getParameter("clubId");
    String fieldId = request.getParameter("fieldId");
    String reservationDate = request.getParameter("reservationDate");
    String startHour = request.getParameter("startHour");
    String endHour = request.getParameter("endHour");
    Collection sports = sportManager.findAllSports();
    request.getSession().getServletContext().setAttribute("sports", sports);
    Collection<Region> regions = regionManager.findAllRegions();
    reservationFieldRequest.setRegions(regions);
    if (StringUtils.isNotEmpty(regionId))
        reservationFieldRequest.setRegionId(Long.valueOf(regionId));
    if (StringUtils.isNotEmpty(clubId))
        reservationFieldRequest.setClubId(Long.valueOf(clubId));
    if (StringUtils.isNotEmpty(fieldId))
        reservationFieldRequest.setFieldId(Long.valueOf(fieldId));
    if (StringUtils.isNotEmpty(reservationDate)) {
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(Constant.DATE_FORMAT_KEY);
        try {
            reservationFieldRequest.setReservationDate(simpleDateFormat.parse(reservationDate));
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }
    if (StringUtils.isNotEmpty(startHour))
        reservationFieldRequest.setStartHour(startHour);
    if (StringUtils.isNotEmpty(endHour))
        reservationFieldRequest.setEndHour(endHour);
    return reservationFieldRequest;
}
