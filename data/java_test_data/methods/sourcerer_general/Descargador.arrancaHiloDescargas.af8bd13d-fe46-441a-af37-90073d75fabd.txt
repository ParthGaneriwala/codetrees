public void arrancaHiloDescargas() {
    while (true) {
        ASalvar a = null;
        try {
            // Espera a que haya algo en la lista de descargas.
            synchronized (lista) {
                if (lista.size() == 0)
                    lista.wait();
                a = lista.get(0);
                lista.remove(0);
            }
            // Aviso a observadores de que empiza la descarga
            avisaComienzaDescarga(a.url.toString());
            // Se obtiene un nombre de fichero que no exista actualmente
            // en el directorio de descargas.
            a.fichero = getPathYNombreNoExistente(new File(a.fichero)).getAbsolutePath();
            System.out.println(a.url.toString() + " -> " + a.fichero);
            // Comienza la descarga.
            URLConnection urlcon = a.url.openConnection();
            urlcon.connect();
            InputStream is = urlcon.getInputStream();
            byte[] buffer = new byte[1000];
            int leido = is.read(buffer);
            FileOutputStream fw = new FileOutputStream(a.fichero);
            while (leido > 0) {
                fw.write(buffer, 0, leido);
                leido = is.read(buffer);
            }
            fw.close();
            is.close();
            // Se avisa a los observadores que ha finalizado la
            // descarga correctamente.
            avisaTerminadaDescarga(a.url.toString(), true, null);
        } catch (Exception e) {
            // descarga con error.
            if (null != a.url) {
                avisaTerminadaDescarga(a.url.toString(), false, e);
            }
            e.printStackTrace();
        }
    }
}
