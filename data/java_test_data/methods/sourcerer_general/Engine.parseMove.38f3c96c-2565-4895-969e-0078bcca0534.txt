public final Move parseMove(String strmove) {
    int startingColumn = 0;
    int startingRow = 0;
    int endingColumn = 0;
    int endingRow = 0;
    int capturedCode = 0;
    boolean queens = false;
    Move moveToMake = null;
    if ((strmove.length() == 4) || (strmove.length() == 5) || (strmove.length() == 6)) {
        if (strmove.substring(0, 1).equalsIgnoreCase("a")) {
            startingColumn = 0;
        } else if (strmove.substring(0, 1).equalsIgnoreCase("b")) {
            startingColumn = 1;
        } else if (strmove.substring(0, 1).equalsIgnoreCase("c")) {
            startingColumn = 2;
        } else if (strmove.substring(0, 1).equalsIgnoreCase("d")) {
            startingColumn = 3;
        } else if (strmove.substring(0, 1).equalsIgnoreCase("e")) {
            startingColumn = 4;
        } else if (strmove.substring(0, 1).equalsIgnoreCase("f")) {
            startingColumn = 5;
        } else if (strmove.substring(0, 1).equalsIgnoreCase("g")) {
            startingColumn = 6;
        } else if (strmove.substring(0, 1).equalsIgnoreCase("h")) {
            startingColumn = 7;
        } else {
            System.out.println("Incorrect move syntax1");
            startingColumn = -1;
        }
        try {
            if ((Integer.parseInt(strmove.substring(1, 2)) > 0) && (Integer.parseInt(strmove.substring(1, 2)) < 9)) {
                startingRow = Integer.parseInt(strmove.substring(1, 2)) - 1;
            }
        } catch (NumberFormatException e) {
            System.out.println("Incorrect move syntax2");
            startingRow = -1;
        }
        if (strmove.substring(2, 3).equalsIgnoreCase("a")) {
            endingColumn = 0;
        } else if (strmove.substring(2, 3).equalsIgnoreCase("b")) {
            endingColumn = 1;
        } else if (strmove.substring(2, 3).equalsIgnoreCase("c")) {
            endingColumn = 2;
        } else if (strmove.substring(2, 3).equalsIgnoreCase("d")) {
            endingColumn = 3;
        } else if (strmove.substring(2, 3).equalsIgnoreCase("e")) {
            endingColumn = 4;
        } else if (strmove.substring(2, 3).equalsIgnoreCase("f")) {
            endingColumn = 5;
        } else if (strmove.substring(2, 3).equalsIgnoreCase("g")) {
            endingColumn = 6;
        } else if (strmove.substring(2, 3).equalsIgnoreCase("h")) {
            endingColumn = 7;
        } else {
            System.out.println("Incorrect move syntax3");
            endingColumn = -1;
        }
        try {
            if ((Integer.parseInt(strmove.substring(3, 4)) > 0) && (Integer.parseInt(strmove.substring(3, 4)) < 9)) {
                endingRow = Integer.parseInt(strmove.substring(3, 4)) - 1;
            }
        } catch (NumberFormatException e) {
            System.out.println("Incorrect move syntax4");
            endingRow = -1;
        }
        if (strmove.length() == 5) {
            if (strmove.substring(4, 5).equals("Q")) {
                queens = true;
            }
            if (strmove.substring(4, 5).equals("q")) {
                capturedCode = 2;
            }
            if (strmove.substring(4, 5).equals("b")) {
                capturedCode = 3;
            }
            if (strmove.substring(4, 5).equals("n")) {
                capturedCode = 4;
            }
            if (strmove.substring(4, 5).equals("r")) {
                capturedCode = 5;
            }
            if (strmove.substring(4, 5).equals("p")) {
                capturedCode = 6;
            }
        }
        if (strmove.length() == 6) {
            queens = true;
            if (strmove.substring(4, 5).equals("q")) {
                capturedCode = 2;
            }
            if (strmove.substring(4, 5).equals("b")) {
                capturedCode = 3;
            }
            if (strmove.substring(4, 5).equals("n")) {
                capturedCode = 4;
            }
            if (strmove.substring(4, 5).equals("r")) {
                capturedCode = 5;
            }
            if (strmove.substring(4, 5).equals("p")) {
                capturedCode = 6;
            }
        }
    } else {
        System.out.println("Incorrect move syntax5");
        System.out.println("str length: " + strmove.length() + " str: " + strmove);
    }
    moveToMake = new Move(startingColumn, startingRow, endingColumn, endingRow, capturedCode, queens);
    return moveToMake;
}
