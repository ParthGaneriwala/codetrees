@Override
public BitField beginscheduling() {
    BitField field = new BitField(node.getWindowSize());
    ArrayList<Integer>[] dupSet = new ArrayList[node.getPSize() + 1];
    ArrayList<Integer>[] tempSupplierSet = new ArrayList[node.getWindowSize()];
    int timeNow = (int) Scheduler.getInstance().now;
    BitField window = new BitField(node.getWindowSize());
    window = getWindow(timeSlot);
    for (int n = 1; n <= node.getPSize(); n++) {
        dupSet[n] = new ArrayList();
    }
    for (int i = 0; i < node.getWindowSize(); i++) {
        tempSupplierSet[i] = new ArrayList();
        if (window.bits[i] == 1)
            continue;
        int nlength = 0;
        for (int j = 0; j < node.getPSize(); j++) {
            if (node.getPartners().getPartner(j) == null)
                continue;
            if (timeSlot != node.getPartners().getPartner(j).bufferMap.time)
                continue;
            if (node.getPartners().getPartner(j).bufferMap.bits[i] == 1 && isValid(i, timeNow)) {
                tempSupplierSet[i].add(node.getPartners().getPartner(j).port);
                nlength++;
            }
        }
        if (nlength == 0)
            continue;
        else if (nlength == 1) {
            field.a1.add(i);
            field.a2.add(tempSupplierSet[i].get(0));
        } else {
            dupSet[nlength].add(i);
        }
    }
    for (int nlength = 2; nlength <= node.getPSize(); nlength++) {
        int[] bandwidth = new int[nlength];
        for (int i = 0; i < dupSet[nlength].size(); i++) {
            for (int counter = 0; counter < nlength; counter++) {
                int pos = node.getPartners().getIndex(tempSupplierSet[dupSet[nlength].get(i)].get(counter));
                if (pos != -1)
                    bandwidth[counter] = node.getPartners().getPartner(pos).bandwidth;
                else
                    // node.defaultBandwidth;
                    bandwidth[counter] = 0;
            }
            int supplier = pickPeer(bandwidth);
            field.a1.add(dupSet[nlength].get(i));
            field.a2.add(tempSupplierSet[dupSet[nlength].get(i)].get(supplier));
        }
    }
    return field;
}
