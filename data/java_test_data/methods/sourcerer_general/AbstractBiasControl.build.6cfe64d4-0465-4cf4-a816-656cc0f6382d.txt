private void build() {
    gridbagLayout = new GridBagLayout();
    setLayout(gridbagLayout);
    int y = 0;
    biasLabels = new HashMap<T, BiasLabel>();
    for (int idx = 0; idx < dataModel.size(); idx++) {
        T key = getKeyForIndex(idx);
        BiasLabel rowLabel = new BiasLabel(getLabelFor(key), dataModel.get(key));
        add(rowLabel, new GridBagConstraints(0, y, 2, 1, 1.0, 0, GridBagConstraints.CENTER, GridBagConstraints.HORIZONTAL, new Insets(1, 0, 1, 0), 0, 0));
        rowLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        rowLabel.addSliderListener(new ChangeListener() {

            public void stateChanged(ChangeEvent e) {
                generateAverageResults();
            }
        });
        rowLabel.setName("biasLabel_" + key.toString());
        biasLabels.put(key, rowLabel);
        y++;
    }
    y = y + 5;
    Font f = super.getFont().deriveFont(10f);
    testLabel = new JLabel("Test at level");
    testLabel.setFont(f);
    add(testLabel, new GridBagConstraints(0, y, 1, 1, 1.0, 0, GridBagConstraints.EAST, GridBagConstraints.HORIZONTAL, new Insets(0, 0, 0, 0), 0, 0));
    levelCombo = new JComboBox(TEST_LEVELS);
    levelCombo.setName(LEVEL_COMBO_NAME);
    levelCombo.setEditable(false);
    levelCombo.setFont(f);
    add(levelCombo, new GridBagConstraints(1, y, 1, 1, 1.0, 0, GridBagConstraints.EAST, GridBagConstraints.HORIZONTAL, new Insets(0, 0, 0, 0), 0, 0));
    levelCombo.addActionListener(new ActionListener() {

        public void actionPerformed(ActionEvent e) {
            generateAverageResults();
        }
    });
    generateAverageResults();
}
