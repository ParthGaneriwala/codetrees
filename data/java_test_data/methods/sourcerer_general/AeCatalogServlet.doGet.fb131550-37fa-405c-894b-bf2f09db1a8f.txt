public void doGet(HttpServletRequest aRequest, HttpServletResponse aResponse) throws ServletException, IOException {
    String pathInfo = AeUtil.getSafeString(aRequest.getPathInfo()).trim();
    String requestURL = aRequest.getRequestURL().toString();
    // $NON-NLS-1$
    String entry = AeUtil.getSafeString(aRequest.getParameter("location")).trim();
    // first check to see if requested resource is specified as part of the query string using param name 'location'.
    if (entry.length() > 1) {
        // E.g entry: project:/a/b/c
        entry = entry.trim();
        // First get the current request url and strip out extra path info (if any)
        if (pathInfo.length() > 0 && requestURL.endsWith(pathInfo)) {
            requestURL = requestURL.substring(0, requestURL.length() - aRequest.getPathInfo().length());
        }
        // append entry info
        // $NON-NLS-1$
        requestURL = requestURL + "/" + entry;
    } else if (pathInfo.length() > 1) {
        // use entry based on extra path info.
        // Eg: http://host:8080/active-bpel/catalog/project:/a/b/c
        // PathInfo: /project:/a/b/c
        // entry: project:/a/b/c
        // requestURL = http://host:8080/active-bpel/catalog/project:/a/b/c
        entry = pathInfo.substring(1);
    } else {
        // $NON-NLS-1$
        aResponse.sendError(HttpServletResponse.SC_BAD_REQUEST, AeMessages.getString("AeCatalogServlet.1"));
        return;
    }
    // $NON-NLS-1$
    boolean isWsdl = entry.toLowerCase().endsWith(".wsdl");
    String output = null;
    try {
        if (isWsdl) {
            // get wsdl file
            output = AeCatalogHelper.getCatalogWsdl(entry, requestURL);
        } else {
            // all others: schema/xsd, xsl.
            output = AeCatalogHelper.getCatalogSchema(entry, requestURL);
        }
    } catch (Exception e) {
        // $NON-NLS-1$
        aResponse.setContentType("text/plain");
        aResponse.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
        AeException.printError(aResponse.getWriter(), e);
        return;
    }
    if (output != null) {
        // make sure that the charset is UTF-8.
        // $NON-NLS-1$
        aResponse.setContentType("application/xml; charset=utf-8");
        aResponse.setStatus(HttpServletResponse.SC_OK);
        aResponse.getWriter().println(output);
    } else {
        // todo (PJ) send redirect if protocol is http, https or file and host is not this server instance.
        // $NON-NLS-1$
        String msg = AeMessages.format("AeCatalogServlet.RESOURCE_NOT_FOUND", entry);
        // $NON-NLS-1$
        aResponse.setContentType("text/plain");
        aResponse.setStatus(HttpServletResponse.SC_NOT_FOUND);
        aResponse.getWriter().println(msg);
    }
}
