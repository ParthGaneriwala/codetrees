@SuppressWarnings("deprecation")
private static List<TnlwNonlaw> parseXls(File excel) throws IOException {
    FileInputStream stream = null;
    List<TnlwNonlaw> nonlawList = null;
    try {
        nonlawList = new ArrayList<TnlwNonlaw>();
        stream = new FileInputStream(excel);
        HSSFWorkbook workbook = new HSSFWorkbook(stream);
        // 第一张工作表
        HSSFSheet sheet = workbook.getSheetAt(0);
        // 第一行为表头 不用解析
        for (int i = sheet.getFirstRowNum() + 1; i <= sheet.getLastRowNum(); i++) {
            java.text.DecimalFormat df = new java.text.DecimalFormat("####.####");
            // 表中每一行
            HSSFRow row = sheet.getRow(i);
            if (row != null) {
                // 最大列数
                short cellnum = row.getLastCellNum();
                // 第一列为贷款账号 不能为空
                if (// 如果那个个贷编号为空，则也不能够导入
                cellVal(row.getCell((short) 0)) == null)
                    continue;
                else {
                    TnlwNonlaw nonlaw = new TnlwNonlaw();
                    nonlaw.setLendaccount(cellVal(row.getCell((short) 0)));
                    nonlaw.setPayaccount(cellVal(row.getCell((short) 1)));
                    nonlaw.setUsername(cellVal(row.getCell((short) 2)));
                    nonlaw.setIdcard(cellVal(row.getCell((short) 3)));
                    nonlaw.setLendfee(cellVal(row.getCell((short) 4)));
                    nonlaw.setCurbalancefee(cellVal(row.getCell((short) 5)));
                    nonlaw.setCuroverfee(cellVal(row.getCell((short) 6)));
                    nonlaw.setCuraccrualfee(cellVal(row.getCell((short) 7)));
                    // nonlaw.setCuroverstat(cellVal(row.getCell((short)8)));
                    try {
                        nonlaw.setCuroverstat(Float.parseFloat(cellVal(row.getCell((short) 8))));
                    } catch (Exception e) {
                        nonlaw.setCuroverstat(0f);
                    }
                    nonlaw.setBuyaddr(cellVal(row.getCell((short) 9)));
                    nonlawList.add(nonlaw);
                }
            }
        // end if judge row
        }
    // end for row
    } finally {
        if (stream != null)
            stream.close();
    }
    return nonlawList;
}
