public void init() {
    System.out.println("CALLING INIT");
    try {
        graphicsMap = new HashMap<GraphicID, Pixmap>();
        for (Entry<GraphicID, String> e : oldGraphicsMap.entrySet()) {
            graphicsMap.put(e.getKey(), FengGUIUtil.getNewPixmap(e.getValue()));
        }
        BufferedImage img = null;
        img = ImageIO.read(new File("data/graphics/BarBKTile.png"));
        barBK = new ImageTiledContainer(img);
        this.addWidget(barBK);
        // init the Inventory Console
        invConsole = new InventoryConsole(graphicsMap);
        this.addWidget(invConsole);
        invOpen = false;
        invConsole.addButtonPressListener(new IButtonPressedListener() {

            @Override
            public void buttonPressed(ButtonPressedEvent e) {
                toggleInventory();
            }
        });
        // System.out.println("Inv Console: " + invConsole);
        // init the Equip Console
        equipConsole = new EquipConsole();
        this.addWidget(equipConsole);
        equipOpen = false;
        equipConsole.addButtonPressListener(new IButtonPressedListener() {

            @Override
            public void buttonPressed(ButtonPressedEvent e) {
                toggleEquipment();
            }
        });
        // System.out.println("Equip Console: " + equipConsole);
        msgConsole = new MessageConsole();
        this.addWidget(msgConsole);
        // System.out.println("Msg Console: " + msgConsole);
        statusConsole = new StatusConsole();
        statusConsole.setMinSize(150, 200);
        statusConsole.pack();
        this.addWidget(statusConsole);
        layout();
        if (avatar != null) {
            avatar.addStatObserver(statusConsole);
            avatar.addConsoleMessageObserver(msgConsole);
        // avatar.addInventoryObserver(invConsole);
        }
    } catch (IOException e) {
        System.out.println("Problem loading image in ConsoleContainer");
    }
}
