public void run() {
    while (true) {
        while (// while there are no more files to decompress
        files.size() == 0) {
            try {
                gui.setDecompressMessage("");
                // wait 10 seconds to see if new ones are added
                Thread.sleep(10000);
            } catch (InterruptedException ex) {
            }
        }
        gui.setDecompressMessage("Decompression in Progress");
        File current = files.poll();
        runConfig info = configs.poll();
        try {
            ZipInputStream zin = new ZipInputStream(new BufferedInputStream(new FileInputStream(current.toString())));
            if (zin.getNextEntry() != null) {
                byte[] buffer = new byte[1024];
                int count;
                System.out.println(info.getFileName());
                File f = new File(info.getFileName());
                long length = 0;
                if (// if the file already exists
                f.exists())
                    // record its size, as to not double count it
                    length = f.length();
                BufferedOutputStream zout = new BufferedOutputStream(new FileOutputStream(info.getFileName(), true), 1024);
                while ((count = zin.read(buffer, 0, 1024)) != -1) {
                    zout.write(buffer, 0, count);
                }
                zout.flush();
                zout.close();
                if (f.exists()) {
                    gui.updateDataGenerated(f.length() - length);
                    gui.updateGoPress(info.getLength());
                    gui.updateAverageCompletionTime(info.timeSinceStart());
                    gui.updateProjectsPerHour();
                }
            }
            zin.close();
            current.delete();
        } catch (IOException ex) {
            Logger.getLogger(decompressThread.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
