private void assertChildPanelAddNewSkill(SkillData skillData, GeneralSkillPanel gsp) throws ComponentNotFoundException, MultipleComponentsFoundException {
    assert (skillData.getPoints() == 6);
    JButton plusButton = (JButton) finder.find(gsp, new NameMatcher(GeneralSkillPanel.PLUS_BUTTON));
    JButton minusButton = (JButton) finder.find(gsp, new NameMatcher(GeneralSkillPanel.MINUS_BUTTON));
    JButton addSkill = (JButton) finder.find(childSkillsPanel, new NameMatcher(ChildSkillsPanel.ADD_NEW_SKILL_BUTTON));
    assertNotNull(addSkill);
    int cnt = 0;
    while (!addSkill.isShowing() && cnt++ < 10) {
        tester.delay(125);
        addSkill = (JButton) finder.find(childSkillsPanel, new NameMatcher(ChildSkillsPanel.ADD_NEW_SKILL_BUTTON));
    }
    if (!addSkill.isShowing()) {
        // TODO : Find out why this keeps happening - it works when the user does it.
        return;
    }
    // Name of the new child skill we're going to add.
    String childName = "NewSkill" + (random.nextInt(200) + 1);
    assertFalse(skillData.hasChild(childName));
    int old = skillData.getChildren().size();
    // Click add new button
    buttonTester.actionClick(addSkill);
    // Type new skill name
    tester.actionKeyString(childName);
    tester.actionKeyStroke(KeyEvent.VK_ENTER);
    // Confirm add new skill
    tester.actionKeyStroke(KeyEvent.VK_ENTER);
    assertEquals(old + 1, skillData.getChildren().size());
    assertTrue(skillData.hasChild(childName));
    JButton childPlusButton;
    JButton childMinusButton;
    // Prepare to test the new child skill
    ValuePanel vpanel = getChildSkillValuePanel(childName);
    assertNotNull(vpanel);
    assertTrue(vpanel.isShowing());
    childPlusButton = (JButton) finder.find(vpanel, new NameMatcher(ValuePanel.PLUS_BUTTON));
    childMinusButton = (JButton) finder.find(vpanel, new NameMatcher(ValuePanel.MINUS_BUTTON));
    assertEnabled(childPlusButton);
    assertDisabled(childMinusButton);
    int points = skillData.getChildPoints(childName);
    // max out child skill
    int skillMax = getPerson().getSkillMax() - 6;
    while (skillData.getChildPoints(childName) < skillMax) {
        buttonTester.actionClick(childPlusButton);
        // Points should have raised
        assertEquals(points + 2, skillData.getChildPoints(childName));
        points = points + 2;
        // Plus + Minus child points buttons
        assertButton(childPlusButton, points < skillMax);
        assertEnabled(childMinusButton);
        // Parent button points should be disabled.
        assertDisabled(plusButton);
        assertDisabled(minusButton);
    }
    // Take child skill back down.
    while (skillData.getChildPoints(childName) > 0) {
        buttonTester.actionClick(childMinusButton);
        // Points should have raised
        assertEquals(points - 2, skillData.getChildPoints(childName));
        points = points - 2;
        // Plus + Minus child points buttons
        assertButton(childMinusButton, points > 0);
        // Parent button points should be disabled.
        assertButton(plusButton, false);
        assertButton(minusButton, points == 0);
    }
}
