// ###########################################################################
// PRIVATE METHODS
// ###########################################################################
// ---------------------------------------------------------------------------
private Charset determineEncoding(File inFile) throws IOException {
    Charset encoding = DEFAULT_CHARSET;
    boolean byteOrderMarkPresent = false;
    FileInputStream stream = null;
    try {
        // Determine the XML file's encoding scheme.
        stream = new FileInputStream(inFile);
        byte[] bytes = new byte[4];
        if (stream.read(bytes) == 4) {
            // Is there a BOM (Byte Order Mark)?
            String encodingString = null;
            if ((0xff & bytes[0]) == 0xFE && (0xff & bytes[1]) == 0xFF) {
                encodingString = "UTF-16BE";
                byteOrderMarkPresent = true;
            } else if ((0xff & bytes[0]) == 0xFF && (0xff & bytes[1]) == 0xFE) {
                encodingString = "UTF-16LE";
                byteOrderMarkPresent = true;
            } else if ((0xff & bytes[0]) == 0xEF && (0xff & bytes[1]) == 0xBB && (0xff & bytes[2]) == 0xBF) {
                encodingString = "UTF-8";
                byteOrderMarkPresent = true;
            }
            if (StringUtil.isSet(encodingString))
                encoding = Charset.forName(encodingString);
        }
    } finally {
        if (stream != null)
            stream.close();
    }
    BufferedReader reader = null;
    try {
        reader = new BufferedReader(new InputStreamReader(new FileInputStream(inFile), encoding));
        String xmlHeader;
        while ((xmlHeader = reader.readLine()) != null && xmlHeader.trim().length() == 0) {
        // Keep looking for the first line with content.
        }
        if (byteOrderMarkPresent)
            xmlHeader = xmlHeader.substring(1);
        Matcher m = XML_HEADER_PATTERN.matcher(xmlHeader);
        if (m.find()) {
            encoding = Charset.forName(m.group(1));
        }
    } finally {
        if (reader != null)
            reader.close();
    }
    return encoding;
}
