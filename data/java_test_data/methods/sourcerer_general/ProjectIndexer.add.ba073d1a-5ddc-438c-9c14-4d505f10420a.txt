public void add(IndexWriter writer, Object item, boolean modified) throws IOException {
    Project project = (Project) item;
    // add the document
    Document document = new Document();
    document.add(new Field("type", "project", Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("instanceId", String.valueOf(project.getInstanceId()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("projectKeyId", String.valueOf(project.getId()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("projectId", String.valueOf(project.getId()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("projectCategoryId", String.valueOf(project.getCategoryId()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("projectCategoryId1", String.valueOf(project.getSubCategory1Id()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("guests", (project.getFeatures().getAllowGuests() ? "1" : "0"), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("participants", (project.getFeatures().getAllowParticipants() ? "1" : "0"), Field.Store.YES, Field.Index.UN_TOKENIZED));
    // determine if membership is needed for this content based on a guest's access to the data
    int membership = project.getFeatures().getMembershipRequired() ? 1 : 0;
    if (membership == 1 && ProjectUtils.hasAccess(project.getId(), UserUtils.createGuestUser(), "project-profile-view")) {
        membership = 0;
    }
    document.add(new Field("membership", String.valueOf(membership), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("approved", ((project.getApproved() || project.getApprovalDate() != null) ? "1" : "0"), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("closed", ((project.getClosed() || project.getCloseDate() != null) ? "1" : "0"), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("website", (project.getPortal() ? "1" : "0"), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("title", project.getTitle(), Field.Store.YES, Field.Index.TOKENIZED));
    document.add(new Field("titleLower", project.getTitle().toLowerCase(), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("keywords", (StringUtils.hasText(project.getKeywords()) ? project.getKeywords() : ""), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("contents", project.getTitle() + " " + project.getShortDescription() + (StringUtils.hasText(project.getDescription()) ? " " + ContentUtils.toText(ContentUtils.stripHTML(project.getDescription())) : "") + (StringUtils.hasText(project.getKeywords()) ? " " + project.getKeywords() : ""), Field.Store.YES, Field.Index.TOKENIZED));
    if (project.getEntered() == null) {
        document.add(new Field("entered", String.valueOf(System.currentTimeMillis()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    } else {
        document.add(new Field("entered", String.valueOf(project.getEntered().getTime()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    }
    if (modified || project.getModified() == null) {
        document.add(new Field("modified", String.valueOf(System.currentTimeMillis()), Field.Store.YES, Field.Index.UN_TOKENIZED));
        document.add(new Field("newsDate", String.valueOf(System.currentTimeMillis()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    } else {
        document.add(new Field("modified", String.valueOf(project.getModified().getTime()), Field.Store.YES, Field.Index.UN_TOKENIZED));
        document.add(new Field("newsDate", String.valueOf(project.getModified().getTime()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    }
    document.add(new Field("location", project.getLocation(), Field.Store.YES, Field.Index.TOKENIZED));
    document.add(new Field("ratingCount", String.valueOf(project.getRatingCount()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("ratingValue", String.valueOf(project.getRatingValue()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    document.add(new Field("ratingAverage", String.valueOf(project.getRatingAverage()), Field.Store.YES, Field.Index.UN_TOKENIZED));
    writer.addDocument(document);
    if (LOG.isDebugEnabled() && modified) {
        LOG.debug("Added: " + project.getId());
    }
}
