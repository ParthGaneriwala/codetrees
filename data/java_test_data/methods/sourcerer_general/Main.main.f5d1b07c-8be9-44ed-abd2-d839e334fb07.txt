public static void main(String[] args) {
    try {
        JAXBContext jc = JAXBContext.newInstance(Record.class);
        ByteArrayOutputStream outStream = new ByteArrayOutputStream();
        ArrayList<String> qmdbMock = new ArrayList<String>();
        Marshaller m = jc.createMarshaller();
        m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
        System.out.println("START MARSHALL " + TOTAL_RECS + " records");
        long startTime = System.currentTimeMillis();
        for (int i = 0; i < TOTAL_RECS; i++) {
            Record rec = new Record();
            rec.setEmail("user1@test.com");
            rec.setData(new Object[] { new String("field1 <test> &;amp & yo"), new String("   field2   "), new Date(), new Integer(34) });
            m.marshal(rec, outStream);
            String xml = outStream.toString();
            xml = xml.replaceAll(" xmlns.*?\".*?\"", "");
            xml = xml.replaceFirst("<record>", "<record xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"" + " xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">");
            // System.out.println(xml + "length = " + xml.length() + " bytes");
            qmdbMock.add(xml);
            outStream.reset();
        }
        long stopTime = System.currentTimeMillis();
        float dif = stopTime - startTime;
        System.out.println("STOP MARSHALL - " + dif + " milliseconds total, " + dif / TOTAL_RECS + " milliseconds per record");
        Unmarshaller u = jc.createUnmarshaller();
        System.out.println("START UNMARSHALL " + TOTAL_RECS + " records");
        startTime = System.currentTimeMillis();
        for (String xml : qmdbMock) {
            Record rec = (Record) u.unmarshal(new StringReader(xml));
        // System.out.println(rec);
        }
        stopTime = System.currentTimeMillis();
        dif = stopTime - startTime;
        System.out.println("STOP UNMARSHALL - " + dif + " milliseconds total, " + dif / TOTAL_RECS + " milliseconds per record");
    } catch (PropertyException e) {
        e.printStackTrace();
    } catch (JAXBException e) {
        e.printStackTrace();
    }
}
