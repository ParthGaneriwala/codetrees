public final void verb() throws RecognitionException, TokenStreamException {
    returnAST = null;
    ASTPair currentAST = new ASTPair();
    AST verb_AST = null;
    switch(LA(1)) {
        case QNAME:
        case KW_THIS:
        case STRING:
        case LBRACK:
        case LCURLY:
        case LPAREN:
        case NUMBER:
        case URIREF:
        case UVAR:
            {
                item();
                astFactory.addASTChild(currentAST, returnAST);
                verb_AST = (AST) currentAST.root;
                break;
            }
        case KW_A:
            {
                kwA();
                astFactory.addASTChild(currentAST, returnAST);
                verb_AST = (AST) currentAST.root;
                break;
            }
        case EQUAL:
            {
                AST tmp16_AST = null;
                tmp16_AST = astFactory.create(LT(1));
                astFactory.addASTChild(currentAST, tmp16_AST);
                match(EQUAL);
                verb_AST = (AST) currentAST.root;
                break;
            }
        case ARROW_R:
            {
                AST tmp17_AST = null;
                tmp17_AST = astFactory.create(LT(1));
                astFactory.addASTChild(currentAST, tmp17_AST);
                match(ARROW_R);
                verb_AST = (AST) currentAST.root;
                break;
            }
        case ARROW_L:
            {
                AST tmp18_AST = null;
                tmp18_AST = astFactory.create(LT(1));
                astFactory.addASTChild(currentAST, tmp18_AST);
                match(ARROW_L);
                verb_AST = (AST) currentAST.root;
                break;
            }
        case ARROW_PATH_L:
            {
                match(ARROW_PATH_L);
                node();
                astFactory.addASTChild(currentAST, returnAST);
                match(ARROW_PATH_R);
                verb_AST = (AST) currentAST.root;
                break;
            }
        case KW_HAS:
            {
                kwHAS();
                item();
                astFactory.addASTChild(currentAST, returnAST);
                verb_AST = (AST) currentAST.root;
                break;
            }
        default:
            {
                throw new NoViableAltException(LT(1), getFilename());
            }
    }
    returnAST = verb_AST;
}
