private static long getElapsed(int field, java.util.Date d1, java.util.Date d2) {
    // can we do this very simply?
    if (field == Calendar.MILLISECOND) {
        return d2.getTime() - d1.getTime();
    }
    // ok, let's work a little harder:
    Calendar g1 = Calendar.getInstance(), g2 = Calendar.getInstance();
    g1.setTime(d1);
    g2.setTime(d2);
    g1.set(Calendar.MILLISECOND, 0);
    g2.set(Calendar.MILLISECOND, 0);
    if (field == Calendar.SECOND) {
        return (g2.getTime().getTime() - g1.getTime().getTime()) / 1000;
    }
    g1.set(Calendar.SECOND, 0);
    g2.set(Calendar.SECOND, 0);
    if (field == Calendar.MINUTE) {
        return (g2.getTime().getTime() - g1.getTime().getTime()) / (1000 * 60);
    }
    g1.set(Calendar.MINUTE, 0);
    g2.set(Calendar.MINUTE, 0);
    if (field == Calendar.HOUR) {
        return (g2.getTime().getTime() - g1.getTime().getTime()) / (1000 * 60 * 60);
    }
    // end if-else
    // if we got here, then we really need to work:
    long elapsed = 0;
    short sign = 1;
    if (g2.before(g1)) {
        sign = -1;
        Calendar tmp = g1;
        g1 = g2;
        g2 = tmp;
    }
    // end if
    g1.set(Calendar.HOUR_OF_DAY, 0);
    g2.set(Calendar.HOUR_OF_DAY, 0);
    if (field == Calendar.MONTH || field == Calendar.YEAR) {
        g1.set(Calendar.DATE, 1);
        g2.set(Calendar.DATE, 1);
    }
    if (field == Calendar.YEAR) {
        g1.set(Calendar.MONTH, 1);
        g2.set(Calendar.MONTH, 1);
    }
    // then calculate elapsed units
    while (g1.before(g2)) {
        g1.add(field, 1);
        elapsed++;
    }
    return sign * elapsed;
}
