public ActionForward UsuarioLogin(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    // Salidas
    final String SALIDA_0 = "usuario";
    String salida = SALIDA_0;
    Session s = HibernateUtil.getSessionFactory().getCurrentSession();
    Transaction tr = s.beginTransaction();
    try {
        FUsuario fFUsuario = (FUsuario) form;
        byte[] pass = (fFUsuario.getContrasena()).getBytes();
        MessageDigest messageDigest = MessageDigest.getInstance("MD5");
        messageDigest.update(pass);
        String password = convertToHex(messageDigest.digest());
        String crit = " where nombreUsuario = '" + fFUsuario.getNombreUsuario() + "'";
        java.util.List<Usuario> list = (java.util.List<Usuario>) s.createQuery("from Usuario" + crit).list();
        if (list.size() == 0) {
            request.setAttribute("mensaje", "Error en Nombre de Usuario o Contrase&ntilde;a ");
            request.getSession().setAttribute("login", false);
            salida = "UsuarioLoginI";
        } else {
            // if(list.get(0).getContrasena().equals(fFUsuario.getContrasena())){
            if (list.get(0).getContrasena().equals(password)) {
                Usuario usuario = (Usuario) s.load(Usuario.class, new Long(list.get(0).getIdUsuario()));
                usuario.setNombreUsuario(fFUsuario.getNombreUsuario());
                // usuario.setContrasena(fFUsuario.getContrasena());
                usuario.setContrasena(password);
                usuario.setTipoUsuario(usuario.getTipoUsuario());
                if (usuario.getCoordinacion() != null) {
                    request.getSession().setAttribute("idCoordinacion", usuario.getCoordinacion());
                    request.setAttribute("idCoordinacion", usuario.getCoordinacion().getIdCoordinacion());
                    fFUsuario.setCoordinacion(usuario.getCoordinacion().getIdCoordinacion());
                    request.getSession().setAttribute("idCoordinacionC", usuario.getCoordinacion().getIdCoordinacion());
                    request.setAttribute("idCoordinacionC", usuario.getCoordinacion().getIdCoordinacion());
                }
                usuario.setCoordinacion(usuario.getCoordinacion());
                if (usuario.getDepartamento() != null) {
                    request.getSession().setAttribute("idDepartamento", usuario.getDepartamento().getIdDepartamento());
                    request.setAttribute("idDepartamento", usuario.getDepartamento().getIdDepartamento());
                    fFUsuario.setDepartamento(usuario.getDepartamento().getIdDepartamento());
                }
                usuario.setDepartamento(usuario.getDepartamento());
                request.getSession().setAttribute("idUsuario", usuario.getIdUsuario());
                request.setAttribute("idUsuario", usuario.getIdUsuario());
                request.getSession().setAttribute("login", true);
                request.getSession().setAttribute("nombreUsuario", usuario.getNombreUsuario());
                request.getSession().setAttribute("tipoUsuario", usuario.getTipoUsuario());
                request.setAttribute("tipoUsuario", usuario.getTipoUsuario());
                request.setAttribute("mensaje", "");
                salida = "usuario";
            } else {
                request.setAttribute("mensaje", "Error en Nombre de Usuario o Contrase&ntilde;a ");
                request.getSession().setAttribute("login", false);
                fFUsuario.setContrasena("");
                fFUsuario.setNombreUsuario("");
                salida = "inicio";
            }
        }
        // Feed for combo listCoordinacion.
        {
            java.util.List<ve.usb.cohesion.runtime.Pair> listC = (java.util.List<ve.usb.cohesion.runtime.Pair>) s.createQuery("select new ve.usb.cohesion.runtime.Pair(nombre, idCoordinacion) " + "from Coordinacion").list();
            listC.add(0, new ve.usb.cohesion.runtime.Pair("Ninguna", 0));
            fFUsuario.setListCoordinacion(listC);
        }
        // Feed for combo listCoordinacion.
        {
            java.util.List<ve.usb.cohesion.runtime.Pair> listD = (java.util.List<ve.usb.cohesion.runtime.Pair>) s.createQuery("select new ve.usb.cohesion.runtime.Pair(nombre, idDepartamento) " + "from Departamento").list();
            listD.add(0, new ve.usb.cohesion.runtime.Pair("Ninguna", 0));
            fFUsuario.setListDepartamento(listD);
        }
        tr.commit();
    } catch (Exception ex) {
        tr.rollback();
        throw ex;
    }
    return mapping.findForward(salida);
}
