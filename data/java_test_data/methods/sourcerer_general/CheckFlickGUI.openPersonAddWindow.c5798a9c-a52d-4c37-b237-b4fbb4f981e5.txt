protected static void openPersonAddWindow(final PersonDataEnum type, final int personId) {
    shell.getShell().setEnabled(false);
    final Shell addToPerson = new Shell(SWT.CLOSE);
    Utils.centerDialogOnScreen(addToPerson);
    Color bgColor = new Color(display, 177, 200, 231);
    addToPerson.setBackground(bgColor);
    Rectangle monitor_bounds = addToPerson.getShell().getMonitor().getBounds();
    addToPerson.setLocation(monitor_bounds.width / 2 - 100, monitor_bounds.height / 2 - 100);
    addToPerson.setSize(new Point(monitor_bounds.width / 5, 100));
    addToPerson.setText("Add To Person");
    GridLayout layout = new GridLayout(2, false);
    addToPerson.setLayout(layout);
    Label label = new Label(addToPerson, SWT.NONE);
    label.setBackground(bgColor);
    final Text text = new Text(addToPerson, SWT.FILL | SWT.BORDER);
    switch(type) {
        case PERSON_AKAS:
            {
                label.setText("AKA name:");
                break;
            }
        case PERSON_QUOTES:
            {
                label.setText("Quote:");
                break;
            }
    }
    Button add = new Button(addToPerson, SWT.PUSH);
    add.setText("Add");
    add.setEnabled(isAdmin);
    add.setBackground(bgColor);
    Button close = new Button(addToPerson, SWT.PUSH);
    close.setText("Close");
    close.setBackground(bgColor);
    // listen to the add button
    add.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            if (text.getText() != "") {
                AbsType t = new NamedEntity(personId, text.getText());
                try {
                    pool.execute(DataManager.insertPersonData(type, t, true));
                    shell.getShell().setEnabled(true);
                    addToPerson.close();
                } catch (InterruptedException e1) {
                    e1.printStackTrace();
                }
            } else {
                // no information was inserted
                okMessageBox("Please insert information to add.");
            }
        }
    });
    // listen to the close button
    close.addSelectionListener(new SelectionListener() {

        public void widgetDefaultSelected(SelectionEvent e) {
        }

        public void widgetSelected(SelectionEvent e) {
            shell.getShell().setEnabled(true);
            addToPerson.close();
        }
    });
    // listen to the X button
    addToPerson.addDisposeListener(new DisposeListener() {

        public void widgetDisposed(DisposeEvent e) {
            shell.getShell().setEnabled(true);
        }
    });
    addToPerson.open();
}
