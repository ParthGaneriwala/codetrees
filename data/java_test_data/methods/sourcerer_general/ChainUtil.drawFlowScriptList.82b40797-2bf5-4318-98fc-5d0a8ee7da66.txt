public static void drawFlowScriptList(JspWriter out, String flowId) {
    if (StringUtils.isEmpty(flowId)) {
        return;
    }
    try {
        ChainFlowManager chainFlowManager = (ChainFlowManager) SpringUtil.getBean("chainFlowManager");
        ChainFlow flow = chainFlowManager.getChainFlow(flowId);
        List script = flow.getScripts();
        if (script != null) {
            out.print("<script>");
            for (int i = 0; i < script.size(); i++) {
                String scriptStr = script.get(i).toString();
                scriptStr = StringUtils.replace(scriptStr, "'", "\\'");
                if (Constants.FLOW_TYPE_CONDITION.equals(flow.getFlowType())) {
                    String tmp = "", tmp2 = "", para[] = new String[3];
                    int iIndex = 0;
                    tmp2 = scriptStr;
                    for (int j = 0; j < 2; j++) {
                        iIndex = tmp2.indexOf("#");
                        if (iIndex > 0) {
                            tmp = tmp2.substring(0, iIndex);
                            para[j] = tmp;
                            tmp2 = tmp2.substring(iIndex + 1);
                        } else {
                            break;
                        }
                    }
                    if (iIndex > 0) {
                        para[2] = tmp2;
                        tmp = para[0] + " " + ConditionFlow.compareOper[Integer.parseInt(para[1])] + " " + para[2];
                        out.print("DWRUtil.addOptions(\"statements\", [{ name:'" + scriptStr + "', id:\'" + tmp + "' }], 'name', 'id');");
                    }
                } else {
                    scriptStr = StringUtils.replace(scriptStr, "\r\n", "");
                    out.print("var v1='" + scriptStr + "';");
                    out.print("DWRUtil.addOptions(\"statements\", [v1]);");
                }
            }
            out.print("</script>");
        }
    } catch (Exception e) {
        log.error("Draw Flow Script List error.", e);
    }
}
