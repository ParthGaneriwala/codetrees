public String executeCommandUpdateCategory(ActionContext context) {
    Connection db = null;
    int resultCount = 0;
    String projectId = context.getRequest().getParameter("pid");
    try {
        db = this.getConnection(context);
        // Load the project
        Project thisProject = retrieveAuthorizedProject(Integer.parseInt(projectId), context);
        if (!hasProjectAccess(context, thisProject.getId(), "project-lists-edit")) {
            return "PermissionError";
        }
        context.getRequest().setAttribute("project", thisProject);
        context.getRequest().setAttribute("IncludeSection", "lists_categories_add");
        // Process the task category
        TaskCategory updatedCategory = (TaskCategory) context.getFormBean();
        // Verify the previous category
        TaskCategoryList list = new TaskCategoryList();
        list.setProjectId(thisProject.getId());
        list.setCategoryId(updatedCategory.getId());
        list.buildList(db);
        TaskCategory previousCategory = list.get(0);
        if (updatedCategory.getId() != previousCategory.getId()) {
            return "PermissionError";
        }
        resultCount = updatedCategory.update(db);
        if (resultCount == -1) {
            processErrors(context, updatedCategory.getErrors());
        } else {
            indexAddItem(context, updatedCategory);
            processUpdateHook(context, previousCategory, updatedCategory);
        }
        context.getRequest().setAttribute("category", updatedCategory);
    } catch (Exception e) {
        context.getRequest().setAttribute("Error", e);
        return ("SystemError");
    } finally {
        this.freeConnection(context, db);
    }
    if (resultCount == -1) {
        return executeCommandAddCategory(context);
    } else if (resultCount == 1) {
        return ("SaveOK");
    }
    context.getRequest().setAttribute("Error", NOT_UPDATED_MESSAGE);
    return ("UserError");
}
