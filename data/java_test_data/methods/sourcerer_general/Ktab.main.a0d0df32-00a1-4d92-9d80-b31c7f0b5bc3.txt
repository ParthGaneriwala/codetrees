public static void main(String[] args) {
    Ktab ktab = new Ktab();
    if ((args.length == 1) && (args[0].equalsIgnoreCase("-help"))) {
        ktab.printHelp();
        System.exit(0);
    } else if ((args == null) || (args.length == 0)) {
        ktab.action = 'l';
    } else {
        ktab.processArgs(args);
    }
    try {
        if (ktab.name == null) {
            // ktab.admin = new KeyTabAdmin();    // use the default keytab.
            ktab.table = KeyTab.getInstance();
            if (ktab.table == null) {
                if (ktab.action == 'a') {
                    ktab.table = KeyTab.create();
                } else {
                    System.out.println("No default key table exists.");
                    System.exit(-1);
                }
            }
        } else {
            if ((ktab.action != 'a') && !(new File(ktab.name)).exists()) {
                System.out.println("Key table " + ktab.name + " does not exist.");
                System.exit(-1);
            } else {
                ktab.table = KeyTab.getInstance(ktab.name);
            }
            if (ktab.table == null) {
                if (ktab.action == 'a') {
                    ktab.table = KeyTab.create(ktab.name);
                } else {
                    System.out.println("The format of key table " + ktab.name + " is incorrect.");
                    System.exit(-1);
                }
            }
        }
    } catch (RealmException e) {
        System.err.println("Error loading key table.");
        System.exit(-1);
    } catch (IOException e) {
        System.err.println("Error loading key table.");
        System.exit(-1);
    }
    switch(ktab.action) {
        case 'l':
            ktab.listKt();
            break;
        case 'a':
            ktab.addEntry();
            break;
        case 'd':
            ktab.deleteEntry();
            break;
        default:
            ktab.printHelp();
            System.exit(-1);
    }
}
