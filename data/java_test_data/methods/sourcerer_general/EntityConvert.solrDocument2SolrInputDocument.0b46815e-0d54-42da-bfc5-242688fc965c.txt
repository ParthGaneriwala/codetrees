public static SolrInputDocument solrDocument2SolrInputDocument(SolrDocument sd, Object object) {
    if (object != null && sd != null) {
        SolrInputDocument sid = new SolrInputDocument();
        // 得到所有的属性名
        Collection<String> fieldNameCollection = sd.getFieldNames();
        Class<?> cls = object.getClass();
        Object o = null;
        for (String fieldName : fieldNameCollection) {
            try {
                // 如果对应的属性的值为空或者为0，这不需要更新
                o = cls.getMethod(EntityConvert.getMethodName(fieldName, "get")).invoke(object);
                Class<?> fieldType = cls.getDeclaredField(fieldName).getType();
                if (fieldType.equals(Integer.TYPE)) {
                    Integer fieldValue = Integer.class.cast(o);
                    if (fieldValue != null && fieldValue.compareTo(0) != 0) {
                        sid.addField(fieldName, fieldValue);
                    }
                } else if (fieldType.equals(Float.TYPE)) {
                    Float fieldValue = Float.class.cast(o);
                    if (fieldValue != null && fieldValue.compareTo(0f) != 0) {
                        sid.addField(fieldName, fieldValue);
                    }
                } else if (fieldType.equals(Double.TYPE)) {
                    Double fieldValue = Double.class.cast(o);
                    if (fieldValue != null && fieldValue.compareTo(0d) != 0) {
                        sid.addField(fieldName, fieldValue);
                    }
                } else if (fieldType.equals(Short.TYPE)) {
                    Short fieldValue = Short.class.cast(o);
                    if (fieldValue != null && fieldValue.compareTo((short) 0) != 0) {
                        sid.addField(fieldName, fieldValue);
                    }
                } else if (fieldType.equals(Long.TYPE)) {
                    Long fieldValue = Long.class.cast(o);
                    if (fieldValue != null && fieldValue.compareTo((long) 0) != 0) {
                        sid.addField(fieldName, fieldValue);
                    }
                } else {
                    if (o != null) {
                        sid.addField(fieldName, o.toString());
                    }
                }
            } catch (IllegalArgumentException e) {
                e.printStackTrace();
            } catch (SecurityException e) {
                e.printStackTrace();
            } catch (IllegalAccessException e) {
                e.printStackTrace();
            } catch (InvocationTargetException e) {
                e.printStackTrace();
            } catch (NoSuchMethodException e) {
                logger.error("请检查PO类中的field对应的各个setter和getter是否存在！");
                e.printStackTrace();
            } catch (NoSuchFieldException e) {
                logger.error("请检查schema中的field是否不存在于PO类中！");
                e.printStackTrace();
            }
        }
        return sid;
    }
    logger.warn("即将要转换的SolrDocument或者要更新的Object为null");
    return null;
}
