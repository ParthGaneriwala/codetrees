public List<PostModel> buildPostModels(UserPreferences prefs, List<Post> posts) {
    Map<Post, PostActivities> activityMap = new HashMap<Post, PostActivities>();
    for (PostActivities pa : getPostActivitiesDao().findByUsername(prefs.getUsername())) {
        activityMap.put(pa.getPost(), pa);
    }
    List<PostModel> result = new LinkedList<PostModel>();
    for (Post p : posts) {
        PostActivities pa = activityMap.get(p);
        PostModel pm = new PostModel();
        pm.setId(p.getId());
        pm.setAge(p.getAge());
        pm.setClId("" + p.getClId());
        pm.setContent(addEscapes(p.getContent()));
        pm.setDate(p.getDate());
        pm.setFavorite(pa != null && pa.isFavorite());
        pm.setFlagged(p.isFlagged());
        pm.setPic(p.isPic());
        pm.setResponded(pa != null && pa.isResponded());
        pm.setTitle(addEscapes(p.getTitle()));
        pm.setViewed(pa != null && pa.isViewed());
        pm.setPhotos(new LinkedList<Image>(p.getImages()));
        pm.setCity(p.getCity().getName());
        if (p.getCityArea() != null) {
            pm.setCityArea(p.getCityArea().getName());
        }
        pm.setCategory(p.getCategory().getName());
        result.add(pm);
    }
    return result;
}
