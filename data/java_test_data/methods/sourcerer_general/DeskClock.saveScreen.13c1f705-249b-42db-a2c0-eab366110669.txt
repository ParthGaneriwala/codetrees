private void saveScreen() {
    if (mScreenSaverMode)
        return;
    if (DEBUG)
        Log.d(LOG_TAG, "saveScreen");
    // quickly stash away the x/y of the current date
    final View oldTimeDate = findViewById(R.id.time_date);
    int[] oldLoc = new int[2];
    oldTimeDate.getLocationOnScreen(oldLoc);
    mScreenSaverMode = true;
    Window win = getWindow();
    WindowManager.LayoutParams winParams = win.getAttributes();
    winParams.flags |= WindowManager.LayoutParams.FLAG_FULLSCREEN;
    win.setAttributes(winParams);
    // give up any internal focus before we switch layouts
    final View focused = getCurrentFocus();
    if (focused != null)
        focused.clearFocus();
    setContentView(R.layout.desk_clock_saver);
    mTime = (DigitalClock) findViewById(R.id.time);
    mDate = (TextView) findViewById(R.id.date);
    mNextAlarm = (TextView) findViewById(R.id.nextAlarm);
    final int color = mDimmed ? SCREEN_SAVER_COLOR_DIM : SCREEN_SAVER_COLOR;
    ((TextView) findViewById(R.id.timeDisplay)).setTextColor(color);
    ((TextView) findViewById(R.id.am_pm)).setTextColor(color);
    mDate.setTextColor(color);
    mNextAlarm.setTextColor(color);
    mNextAlarm.setCompoundDrawablesWithIntrinsicBounds(getResources().getDrawable(mDimmed ? R.drawable.ic_lock_idle_alarm_saver_dim : R.drawable.ic_lock_idle_alarm_saver), null, null, null);
    mBatteryDisplay = mWeatherCurrentTemperature = mWeatherHighTemperature = mWeatherLowTemperature = mWeatherLocation = null;
    mWeatherIcon = null;
    refreshDate();
    refreshAlarm();
    moveScreenSaverTo(oldLoc[0], oldLoc[1]);
}
