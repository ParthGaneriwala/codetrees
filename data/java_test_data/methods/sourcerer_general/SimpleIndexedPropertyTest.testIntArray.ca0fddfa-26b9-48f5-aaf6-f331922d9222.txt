public void testIntArray() {
    BeanRegistry.registerType(SimpleIndexedPojo.class);
    SimpleIndexedPojo p = new SimpleIndexedPojo();
    p.setIntArray(new int[] { 1, 2, 3 });
    SimpleIndexedPojo ep = BeanEnhancer.addPropertyChangeSupport(p);
    assertNotNull(ep.getIntArray());
    assertEquals(1, ep.getIntArray()[0]);
    assertEquals(2, ep.getIntArray()[1]);
    assertEquals(3, ep.getIntArray()[2]);
    PropertyChangeListenerSupport pcls = (PropertyChangeListenerSupport) ep;
    PropertyChangeListener pcl1 = new PropertyChangeListener() {

        public void propertyChange(PropertyChangeEvent evt) {
            assertTrue(evt instanceof IndexedPropertyChangeEvent);
            IndexedPropertyChangeEvent ievt = (IndexedPropertyChangeEvent) evt;
            assertEquals("intArray", ievt.getPropertyName());
            assertEquals(1, ievt.getIndex());
            assertEquals(2, ievt.getOldValue());
            assertEquals(123, ievt.getNewValue());
        }
    };
    pcls.addPropertyChangeListener(pcl1);
    ep.setIntArray(1, 123);
    assertNotNull(ep.getIntArray());
    assertEquals(1, ep.getIntArray()[0]);
    assertEquals(123, ep.getIntArray()[1]);
    assertEquals(3, ep.getIntArray()[2]);
    assertNotNull(p.getIntArray());
    assertEquals(1, p.getIntArray()[0]);
    assertEquals(123, p.getIntArray()[1]);
    assertEquals(3, p.getIntArray()[2]);
    pcls.removePropertyChangeListener(pcl1);
    PropertyChangeListener pcl2 = new PropertyChangeListener() {

        public void propertyChange(PropertyChangeEvent evt) {
            assertTrue(evt instanceof PropertyChangeEvent);
            assertEquals("intArray", evt.getPropertyName());
            assertTrue(Arrays.equals(new int[] { 1, 123, 3 }, (int[]) evt.getOldValue()));
            assertTrue(Arrays.equals(new int[] { 4, 5, 6 }, (int[]) evt.getNewValue()));
        }
    };
    pcls.addPropertyChangeListener("intArray", pcl2);
    ep.setIntArray(new int[] { 4, 5, 6 });
}
