public String go() throws HibernateException {
    getSession();
    String nowmonth = df.format(new Date());
    if (fileName != null && !"".equals(fileName)) {
        String extendPath = "/uploads/" + nowmonth;
        String toPath = ServletActionContext.getServletContext().getRealPath("") + extendPath;
        File dir = new File(toPath);
        if (!dir.exists()) {
            dir.mkdirs();
        }
        String name = "CreditcardCreateBatch" + new java.text.SimpleDateFormat("yyyyMMddHHmmss").format(new java.util.Date());
        String ext = getExtention(fileName);
        String filename = name + ext;
        try {
            // 创建目录
            FileUtils.forceMkdir(new File(toPath));
            File dest = new File(toPath + filename);
            // 移动文件
            FileUtils.copyFile(file, dest);
            if (!ext.equalsIgnoreCase(".xls")) {
                message = "委托文件必须为.xls格式文件";
                FileUtils.forceDelete(dest);
                return ERROR;
            } else {
                List existUserList = new ArrayList();
                List<String> errorList = new ArrayList<String>();
                List<ToprCreditcard> list = com.changpeng.operation.util.CreditcardCreateBatch.save(dest, consigndate, bankid, getSession(), existUserList, errorList);
                if (errorList != null && errorList.size() > 0) {
                    message = "上传的excel数据有误,请修改后重新上传";
                    for (String msg : errorList) {
                        message += msg + "<br/>";
                    }
                    return ERROR;
                } else {
                    if (list != null && list.size() > 0) {
                        message = "以下信用卡账号在系统中已经存在，如需继续，请手动录入：<br>";
                        for (ToprCreditcard card : list) {
                            message = message + card.getUsername() + "【" + card.getCreditcard() + "】" + "<a href='cardreoper.action?opflag=0&creditcard=" + card.getCreditcard() + "' target='_blank'>" + "<font color='red'>新增</font></a>&nbsp;&nbsp;" + "<a href='cardreoper.action?opflag=1&creditcard=" + card.getCreditcard() + "' target='_blank'>" + "<font color='red'>覆盖</font></a><br>";
                        }
                        message += "<a href='cardreoper.action?opflag=3' target='_blank'><font color='red'>全部新增</font></a>&nbsp;&nbsp;";
                        message += "<a href='cardreoper.action?opflag=4' target='_blank'><font color='red'>全部覆盖</font></a>";
                        // 将重复的单放在session中,以便在页面中覆盖或跳过
                        set("recards", list);
                    } else {
                        message = "保存成功！";
                    }
                    if (existUserList.size() != 0) {
                        message += "<br/>以下用户在系统中已经存在,请知悉:<br/>";
                        for (int i = 0; i < existUserList.size(); i++) {
                            TusrCustomerNew customer = (TusrCustomerNew) existUserList.get(i);
                            if (customer.getIdcard() != null && !customer.getIdcard().equals(""))
                                message += "<a href='../customer/customer3View.action?customerid=" + customer.getCustomerid() + "' target='_blank'>" + customer.getUsername() + "(" + customer.getIdcard() + ")</a><br/>";
                            else {
                                message += "<a href='../customer/customer3View.action?customerid=" + customer.getCustomerid() + "' target='_blank'>" + customer.getUsername() + "</a><br/>";
                            }
                        }
                    }
                }
            }
        } catch (IOException e) {
            message = "上传委托文件错误：" + e.getMessage();
            return ERROR;
        }
    } else {
        message = "上传文件不能为空";
        return ERROR;
    }
    nextpage = "creditcardList.action";
    // message="保存成功！";
    return SUCCESS;
}
