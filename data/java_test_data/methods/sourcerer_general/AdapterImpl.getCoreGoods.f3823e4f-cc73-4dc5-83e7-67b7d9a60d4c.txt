public com.jcommerce.core.model.Goods getCoreGoods(com.jcommerce.ws.server.Goods input) {
    com.jcommerce.core.model.Goods ret = new com.jcommerce.core.model.Goods();
    ret.setId(input.getId());
    ret.setDeleted(input.getDeleted());
    // record current time
    Date currentDate = new Date();
    ret.setAddTime(new Timestamp(currentDate.getTime()));
    ret.setClickCount(input.getClickCount());
    ret.setSN(input.getSN());
    ret.setIntegral(input.getIntegral());
    ret.setExtensionCode(input.getExtensionCode());
    ret.setKeywords(input.getKeywords());
    ret.setSortOrder(input.getSortOrder());
    ret.setNameStyle(input.getNameStyle());
    ret.setMainCategory((com.jcommerce.core.model.Category) (dbAccessImpl.getBean0("Category", String.valueOf(input.getMainCategory()))));
    int[] categoryList = input.getCategories();
    if (categoryList != null) {
        Set<Category> categorys = new HashSet<Category>();
        for (int i = 0; i < categoryList.length; i++) {
            com.jcommerce.core.model.Category category = new com.jcommerce.core.model.Category();
            category = (com.jcommerce.core.model.Category) dbAccessImpl.getBean0("Category", String.valueOf(categoryList[i]));
            categorys.add(category);
        }
        ret.setCategories(categorys);
    }
    ret.setBrand((com.jcommerce.core.model.Brand) (dbAccessImpl.getBean0("Brand", String.valueOf(input.getBrand()))));
    ret.setProviderName(input.getProviderName());
    ret.setNumber(input.getNumber());
    if ((String.valueOf(input.getWeight()).indexOf("NaN") < 0) && (String.valueOf(input.getWeight()).indexOf("Inf") < 0)) {
        ret.setWeight(input.getWeight());
    }
    if ((String.valueOf(input.getMarketPrice()).indexOf("NaN") < 0) && (String.valueOf(input.getMarketPrice()).indexOf("Inf") < 0)) {
        ret.setMarketPrice(input.getMarketPrice());
    }
    if ((String.valueOf(input.getShopPrice()).indexOf("NaN") < 0) && (String.valueOf(input.getShopPrice()).indexOf("Inf") < 0)) {
        ret.setShopPrice(input.getShopPrice());
    }
    if ((String.valueOf(input.getPromotePrice()).indexOf("NaN") < 0) && (String.valueOf(input.getPromotePrice()).indexOf("Inf") < 0)) {
        ret.setPromotePrice(input.getPromotePrice());
    }
    if (input.getPromoteStart() != null) {
        ret.setPromoteStart(new Timestamp(input.getPromoteStart().getTime()));
    }
    if (input.getPromoteEnd() != null) {
        ret.setPromoteEnd(new Timestamp(input.getPromoteEnd().getTime()));
    }
    ret.setWarnNumber(input.getWarnNumber());
    ret.setBrief(input.getBrief());
    ret.setThumb(input.getThumb());
    ret.setOriginalImage(input.getOriginalImage());
    ret.setRealGoods(input.getRealGoods());
    ret.setOnSale(input.getOnSale());
    ret.setAloneSale(input.getAloneSale());
    ret.setBestSold(input.getBestSold());
    ret.setNewAdded(input.getNewAdded());
    ret.setHotSold(input.getHotSold());
    ret.setPromoted(input.getPromoted());
    if (input.getLastUpdate() != null) {
        ret.setLastUpdate(new Timestamp(input.getLastUpdate().getTime()));
    }
    ret.setSellerNote(input.getSellerNote());
    ret.setGiveIntegral(input.getGiveIntegral());
    ret.setBonusType((com.jcommerce.core.model.BonusType) (dbAccessImpl.getBean0("BonusType", String.valueOf(input.getBonusType()))));
    int[] galleryList = input.getGalleries();
    if (galleryList != null) {
        Set<Gallery> gallerys = new HashSet<Gallery>();
        for (int i = 0; i < galleryList.length; i++) {
            com.jcommerce.core.model.Gallery gallery = new com.jcommerce.core.model.Gallery();
            gallery = (com.jcommerce.core.model.Gallery) dbAccessImpl.getBean0("Gallery", String.valueOf(galleryList[i]));
            gallerys.add(gallery);
        }
        ret.setGalleries(gallerys);
    }
    int[] articleList = input.getArticles();
    if (articleList != null) {
        Set<Article> articles = new HashSet<Article>();
        for (int i = 0; i < articleList.length; i++) {
            com.jcommerce.core.model.Article article = new com.jcommerce.core.model.Article();
            article = (com.jcommerce.core.model.Article) dbAccessImpl.getBean0("Article", String.valueOf(articleList[i]));
            articles.add(article);
        }
        ret.setArticles(articles);
    }
    ret.setName(input.getName());
    com.jcommerce.ws.server.GoodsAttribute[] goodsattributeList = input.getAttributes();
    if (goodsattributeList != null) {
        Set<GoodsAttribute> goodsattributes = new HashSet<GoodsAttribute>();
        for (int i = 0; i < goodsattributeList.length; i++) {
            com.jcommerce.core.model.GoodsAttribute goodsattribute = new com.jcommerce.core.model.GoodsAttribute();
            goodsattribute = getCoreGoodsAttribute(goodsattributeList[i]);
            goodsattributes.add(goodsattribute);
        }
        ret.setAttributes(goodsattributes);
    }
    ret.setDescription(input.getDescription());
    ret.setImage(input.getImage());
    ret.setType((com.jcommerce.core.model.GoodsType) (dbAccessImpl.getBean0("GoodsType", String.valueOf(input.getType()))));
    return ret;
}
