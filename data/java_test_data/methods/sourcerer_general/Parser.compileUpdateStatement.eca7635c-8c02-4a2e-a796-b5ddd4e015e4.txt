CompiledStatement compileUpdateStatement() throws HsqlException {
    String token;
    Table table;
    int[] colList;
    Expression[] exprList;
    int len;
    Expression cve;
    Expression condition;
    clearParameters();
    TableFilter tableFilter = parseSimpleTableFilter(UserManager.UPDATE);
    table = tableFilter.filterTable;
    tokenizer.getThis(Token.T_SET);
    colList = table.getNewColumnMap();
    exprList = new Expression[colList.length];
    len = 0;
    token = null;
    do {
        int ci = table.getColumnNr(tokenizer.getName());
        String tablename = tokenizer.getLongNameFirst();
        if (tablename != null && !tableFilter.getName().equals(tablename)) {
            throw Trace.error(Trace.TABLE_NOT_FOUND);
        }
        tokenizer.getThis(Token.T_EQUALS);
        cve = parseExpression();
        if (len == colList.length) {
            // too many (repeat) assignments
            throw Trace.error(Trace.COLUMN_COUNT_DOES_NOT_MATCH);
        }
        colList[len] = ci;
        exprList[len] = cve;
        token = tokenizer.getSimpleToken();
        len++;
    } while (token.equals(Token.T_COMMA));
    condition = null;
    if (token.equals(Token.T_WHERE)) {
        condition = parseExpression();
    } else {
        tokenizer.back();
    }
    colList = (int[]) ArrayUtil.resizeArray(colList, len);
    exprList = (Expression[]) ArrayUtil.resizeArray(exprList, len);
    CompiledStatement cs = new CompiledStatement(session, database, session.currentSchema, tableFilter, colList, exprList, condition, getSortedSubqueries(), getParameters());
    return cs;
}
